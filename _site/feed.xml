<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 11 Apr 2017 07:49:19 -0400</pubDate>
    <lastBuildDate>Tue, 11 Apr 2017 07:49:19 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Color Palette Design Tools</title>
        <description>&lt;p&gt;Well Google released their new color palette tool for &lt;a href=&quot;https://material.io/color/&quot;&gt;Material&lt;/a&gt; and I thought I should point out some of the other tools for this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sankk.in/material-mixer/&quot;&gt;Sankk.in&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://flatuicolors.com/&quot;&gt;Flat UI Colors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.materialpalette.com/&quot;&gt;MaterialPalette&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://color.adobe.com/create/color-wheel/&quot;&gt;Adobe Color Wheel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mdbootstrap.com/css/colors/&quot;&gt;Material Design Bootstrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.color-hex.com/color-palettes/&quot;&gt;Color-Hex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to this &lt;a href=&quot;https://news.ycombinator.com/item?id=14085425&quot;&gt;Hacker News thread&lt;/a&gt; for surfacing some of these; the last two I found when I went looking for bootstrap versions.&lt;/p&gt;

</description>
        <pubDate>Tue, 11 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/design/2017/04/11/color-palette-design-tools.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/design/2017/04/11/color-palette-design-tools.html</guid>
        
        <category>design</category>
        
        <category>color</category>
        
        
        <category>design</category>
        
      </item>
    
      <item>
        <title>When Is a Side Project Ready to Ship</title>
        <description>
</description>
        <pubDate>Mon, 10 Apr 2017 09:01:53 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/10/when-is-a-side-project-ready-to-ship.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/10/when-is-a-side-project-ready-to-ship.html</guid>
        
        
      </item>
    
      <item>
        <title>Reviewing Open Source Ruby Crawling Gems</title>
        <description>&lt;p&gt;I recently needed to build a crawler based page archiver that I could aim at a site and archive all pages on the site on a daily basis.  Historically I would have written this from scratch but I recently left my full time position and lost access to the recursive descent html crawler that I had painstakingly written over a period of years.  So it was either write it from scratch or build on top of something else.  Crawlers are one of those things that you can write easily at the start but then discover that getting them write is actually the work of years so I figured “time to look for some open source”.  This blog post is a write up on what I learned about open source crawling gems / projects in Ruby.&lt;/p&gt;

&lt;p&gt;I used a number of criteria to winnow down the set of possibilities including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dependencies&lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;of-issues&quot;&gt;of issues&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;of-commits&quot;&gt;of commits&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;of-contributors&quot;&gt;of contributors&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;last commit&lt;/li&gt;
  &lt;li&gt;scalability approach: threads / queue / single machine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My logic here is that while code is good, maintained code is &lt;strong&gt;better&lt;/strong&gt;.  Things like the # of issues, # of commits and last commit indicate that a project should be alive and being worked on.  This isn’t entirely true.  There are some excellent crawling projects which have 0 issues (I was actually the first issue creator on at least one) but its a place to start.&lt;/p&gt;

&lt;p&gt;The last one, scalability approach, is important.  I know that the site I need to crawl has 118,000 urls according to Google.  This means that unless I have either &lt;strong&gt;consistent&lt;/strong&gt; subsecond per page speed or a decent approach to scalability, a single process approach just won’t work.  There are 86,400 seconds per day so I need a per page crawl time of at least 0.75 seconds per page to meet that 118,000 goal with some wiggle room.  Additionally Ruby is a garbage collected, dynamic language so things tend to get slower over time as the crawl process either loses memory due to underling technical problems (either at their own code or at the components that it uses) or slows down due to garbage collection.&lt;/p&gt;

&lt;p&gt;I started with github search for the terms: &lt;strong&gt;ruby crawl&lt;/strong&gt;.  I didn’t use the term gem because some crawling projects implemented in Ruby:&lt;/p&gt;

&lt;p&gt;https://github.com/search?o=desc&amp;amp;q=ruby+crawl&amp;amp;s=stars&amp;amp;type=Repositories&amp;amp;utf8=%E2%9C%93&lt;/p&gt;

&lt;p&gt;I then continued with the terms: &lt;strong&gt;ruby crawl gem&lt;/strong&gt; because there were tools I didn’t see on my first search that I remembered from having done this research previously (when I failed to document it).&lt;/p&gt;

&lt;p&gt;https://github.com/search?p=2&amp;amp;q=ruby+crawl+gem&amp;amp;type=Repositories&amp;amp;utf8=%E2%9C%93&lt;/p&gt;

&lt;p&gt;I ended up with this ridiculous set of browser tabs spanning two separate chrome windows:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/search_tabs_not_so_bad.png&quot; alt=&quot;search_tabs_not_so_bad.png&quot; /&gt;
&lt;img src=&quot;/blog/assets/search_tabs_utterly_ridiculous.png&quot; alt=&quot;search_tabs_utterly_ridiculous.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On a side note, I don’t understand why the state of researching something on the Internet, 20+ years after the browser launched, is still such a damn disaster but that’s an entirely different rant.&lt;/p&gt;

&lt;p&gt;This url was also useful in discovering crawlers: http://www.rubygemsearch.com/ruby-gems/search?q=web+crawling&lt;/p&gt;

&lt;p&gt;My final search url was Ruby gems:&lt;/p&gt;

&lt;p&gt;https://rubygems.org/search?query=crawl&amp;amp;utf8=%E2%9C%93&lt;/p&gt;

&lt;h1 id=&quot;sidebar-why-ruby&quot;&gt;Sidebar: Why Ruby?&lt;/h1&gt;

&lt;p&gt;Given the issues noted above about Ruby and my particular performance metrics, you may be wondering “why ruby?”.  Well I’ve spent the last decade plus in the Ruby world and I know ruby best among all the languages in my toolchest.  I’m 100% certain that no matter what codebase I find, I’m going to need to make changes – that’s the nature of any type of crawling project so better to do that in a language that, for all its warts and flaws, I know.&lt;/p&gt;

&lt;h1 id=&quot;gems--codebases-found&quot;&gt;Gems / Codebases Found&lt;/h1&gt;

&lt;p&gt;Here is a quick enumeration of the codebases / gems that I found.  What I’m going to do is give a list of everything and then cherry pick the promising ones and dig deeper into them.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lxxxvi/bc_crawler&quot;&gt;Band Camp Crawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-5&quot;&gt;of commits: 5&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 2 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: single machine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/andreikoenig/ruby_web_crawler/blob/master/crawl_script.rb&quot;&gt;Ruby Web Crawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: anemone&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-1&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-1&quot;&gt;of commits: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-1&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 2 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: none / anemone&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/belsonheng/spidercrawl&quot;&gt;Spider Crawl&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-1&quot;&gt;of issues:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-1&quot;&gt;of commits:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1&quot;&gt;of contributors:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit:&lt;/li&gt;
      &lt;li&gt;scalability approach: single machine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CalculatedContent/cloud-crawler&quot;&gt;Cloud Crawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: Unclear / aws&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-15&quot;&gt;of issues: 15&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-170&quot;&gt;of commits: 170&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-2&quot;&gt;of contributors: 2&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 3 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: redis&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bash0C7/cosmicrawler&quot;&gt;CosmiCrawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: EventMachine&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-2&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-8&quot;&gt;of commits: 8&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-2-1&quot;&gt;of contributors: 2&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 4 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: EventMachine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/reneklacan/kabutops&quot;&gt;Kabutops&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: Unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-3&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-94&quot;&gt;of commits: 94&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-2&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 1 year ago&lt;/li&gt;
      &lt;li&gt;scalability approach: sidekiq&lt;/li&gt;
      &lt;li&gt;other: support for javascript agent, support for debugging (brilliant)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kdurski/crawler&quot;&gt;Crawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-4&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-5-1&quot;&gt;of commits: 5&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-3&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 2 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: threads&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chriskite/anemone&quot;&gt;Anemone&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: mongo&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-5&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-197&quot;&gt;of commits: 197&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-22&quot;&gt;of pull requests: 22&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-12&quot;&gt;of contributors: 12&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 5 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: threads&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/endymion/link-checker&quot;&gt;Link Checker&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-15-1&quot;&gt;of issues: 15&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-105&quot;&gt;of commits: 105&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-6&quot;&gt;of pull requests: 6&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-2-2&quot;&gt;of contributors: 2&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 4 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: threads&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/endymion/email_spider&quot;&gt;Email Spider&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: anemone&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-1&quot;&gt;of issues: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-11&quot;&gt;of commits: 11&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-1&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-4&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 5 years ago&lt;/li&gt;
      &lt;li&gt;scalability approach: anemone&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/versioneye/crawl_r&quot;&gt;crawler_r&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: docker, mongo&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-3&quot;&gt;of issues: 3&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-665&quot;&gt;of commits: 665&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-3&quot;&gt;of pull requests: 3&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-2-3&quot;&gt;of contributors: 2&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 1 month&lt;/li&gt;
      &lt;li&gt;scalability approach: unclear&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/stewartmckee/cobweb&quot;&gt;Cobweb&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-9&quot;&gt;of issues: 9&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-481&quot;&gt;of commits: 481&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-2&quot;&gt;of pull requests: 2&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-13&quot;&gt;of contributors: 13&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 2 months ago&lt;/li&gt;
      &lt;li&gt;scalability approach: resque / sidekiq&lt;/li&gt;
      &lt;li&gt;app or gem: gem&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joeyAghion/spidey&quot;&gt;Spidey&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-2&quot;&gt;of issues: 2&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-27&quot;&gt;of commits: 27&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-2&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-3&quot;&gt;of contributors: 3&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 1 year ago&lt;/li&gt;
      &lt;li&gt;scalability approach: none&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bauerd/wayfarer/&quot;&gt;Wayfarer&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-2-i-created-both&quot;&gt;of issues: 2 (I created both)&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-1135&quot;&gt;of commits: 1,135&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-3&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-5&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 3 days ago&lt;/li&gt;
      &lt;li&gt;scalability approach: ActiveJob / Threads&lt;/li&gt;
      &lt;li&gt;app or gem: gem&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/alphasights/crawl&quot;&gt;Alpha Insights Crawl&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: Event Machine&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-6&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-68&quot;&gt;of commits: 68&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-1&quot;&gt;of pull requests: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-6&quot;&gt;of contributors: 6&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 4 months ago&lt;/li&gt;
      &lt;li&gt;scalability approach: threads&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach: none&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bm-sms/daimon_skycrawlers&quot;&gt;Daimon Skycrawlers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: Docker&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-7&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-665-1&quot;&gt;of commits: 665&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-4&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-10&quot;&gt;of contributors: 10&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 2 months&lt;/li&gt;
      &lt;li&gt;scalability approach: RabbitMQ&lt;/li&gt;
      &lt;li&gt;app or gem: framework&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/felipecsl/wombat/&quot;&gt;Wombat&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: Unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-11&quot;&gt;of issues: 11&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-242&quot;&gt;of commits: 242&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-3-1&quot;&gt;of pull requests: 3&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-16&quot;&gt;of contributors: 16&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 5 months&lt;/li&gt;
      &lt;li&gt;scalability approach: Single machine&lt;/li&gt;
      &lt;li&gt;app or gem: gem&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach: pass in code block&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/htaidirt/super_crawler&quot;&gt;SuperCrawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: Unclear&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-8&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-15&quot;&gt;of commits: 15&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-5&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-6&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 9 months&lt;/li&gt;
      &lt;li&gt;scalability approach: threads&lt;/li&gt;
      &lt;li&gt;app or gem: gem / app&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach: unclear&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/slava-vishnyakov/grucrawler&quot;&gt;Gru Crawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: typhoeus&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-0-9&quot;&gt;of issues: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-18&quot;&gt;of commits: 18&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-6&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-7&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 2 years&lt;/li&gt;
      &lt;li&gt;scalability approach: thread&lt;/li&gt;
      &lt;li&gt;app or gem: gem&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach: callback&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/haqduong/news_crawler&quot;&gt;News Crawler&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies: typhoeus / celluloid&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-1-1&quot;&gt;of issues: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-62&quot;&gt;of commits: 62&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-7&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-1-8&quot;&gt;of contributors: 1&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit: 4 years&lt;/li&gt;
      &lt;li&gt;scalability approach: celluloid&lt;/li&gt;
      &lt;li&gt;app or gem: gem&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach: unclear&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-2&quot;&gt;of issues:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-2&quot;&gt;of commits:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-8&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-2&quot;&gt;of contributors:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit:&lt;/li&gt;
      &lt;li&gt;scalability approach:&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-3&quot;&gt;of issues:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-3&quot;&gt;of commits:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-9&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-3&quot;&gt;of contributors:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit:&lt;/li&gt;
      &lt;li&gt;scalability approach:&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-4&quot;&gt;of issues:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-4&quot;&gt;of commits:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-10&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-4&quot;&gt;of contributors:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit:&lt;/li&gt;
      &lt;li&gt;scalability approach:&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;dependencies:&lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-issues-5&quot;&gt;of issues:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-commits-5&quot;&gt;of commits:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-pull-requests-0-11&quot;&gt;of pull requests: 0&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;h1 id=&quot;of-contributors-5&quot;&gt;of contributors:&lt;/h1&gt;
      &lt;/li&gt;
      &lt;li&gt;last commit:&lt;/li&gt;
      &lt;li&gt;scalability approach:&lt;/li&gt;
      &lt;li&gt;app or gem: app&lt;/li&gt;
      &lt;li&gt;callback structure / extensibility approach:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;commentary&quot;&gt;Commentary&lt;/h1&gt;

&lt;p&gt;With this exhaustive a look at different crawlers, you’re probably wondering why I didn’t toss a lot of the candidates early on.  Well I’ve written a lot of crawlers over the years and this is a field where you can always learn from something.  A big part of why I looked at even some of the less promising candidates was that I wanted to learn from them.&lt;/p&gt;

&lt;h1 id=&quot;crawlers-reviewed&quot;&gt;Crawlers Reviewed&lt;/h1&gt;

&lt;p&gt;In no particular order, here are reviews of each of the crawlers.  Most of these, at least those I could make work, I attempted to actually using and build a simple page archiver with them.  This gave me a generic use case so that there was a similar evaluation for each.&lt;/p&gt;

&lt;h2 id=&quot;spidr&quot;&gt;Spidr&lt;/h2&gt;

&lt;p&gt;This was the first one I tried and probably the easiest to work with.  I had a sample crawler up and running with Spidr in probably less than 15 minutes which is stellar.  The one real problem is performance.  After about 300 pages were processed I started to see a 1.3 to 1.5 second per page response time.&lt;/p&gt;

&lt;h2 id=&quot;anemone&quot;&gt;Anemone&lt;/h2&gt;

&lt;p&gt;Anemone is an old school ruby project – I remember evaluating it back in 2014 the last time I  took a stab at this research.  And while I really wanted to look at it, the answers on this &lt;a href=&quot;http://stackoverflow.com/questions/18367170/getting-all-urls-using-anemone-gem-very-large-site&quot;&gt;Stack Overflow&lt;/a&gt; convinced me to take a pass.&lt;/p&gt;

&lt;h2 id=&quot;cobweb&quot;&gt;Cobweb&lt;/h2&gt;

&lt;p&gt;I really, really like Cobweb.  Sometimes you hit a codebase which just has a good feel and Cobweb is one of those.  It was very simple to integrate, quite fast and&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;statistics = CobwebCrawler.new(:cache =&amp;gt; 600, :thread_count =&amp;gt; 10, :valid_mime_types =&amp;gt; [&quot;text/html&quot;]).crawl(&quot;http://www.udemy.com&quot;) do |page|
  puts &quot;Just crawled #{page[:url]} and got a status of #{page[:status_code]}.&quot;
  if page[:mime_type] == &quot;text/html&quot;
    page_ctr = page_ctr + 1
    #puts page.title
    #debugger
    page_archive = PageArchive.find_or_create(page[:body], page[:url])
    total_time = (Time.now - start_time) 
    puts &quot;  Total time: #{total_time}&quot;
    puts &quot;  Total pages: #{page_ctr}&quot;
    puts &quot;  Time per page: #{total_time.to_f / page_ctr}&quot;
  else
    puts &quot;  Not text/html for: #{page[:url]}&quot;
  end
  
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;wayfarer&quot;&gt;Wayfarer&lt;/h1&gt;

&lt;h2 id=&quot;alphasights-crawler&quot;&gt;AlphaSights Crawler&lt;/h2&gt;

&lt;p&gt;This was actually pretty interesting.  Its a threaded crawler written in ruby and actually appears to be fairly fast.  It has zero callbacks / extension facilities as best I can tell but the underlying engine appears clean and determining the integration points where I’d need to insert my own code was pretty easy.&lt;/p&gt;

&lt;h2 id=&quot;daimon-sky-framework&quot;&gt;Daimon Sky Framework&lt;/h2&gt;

&lt;p&gt;This crawler was extremely promising and very, very disappointing.  Here were the issues:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The crawler assumes that you have a Postgres installation by default so you can’t even bundle install without it.  So I had to fork it and then change that to MySQL just to install it.&lt;/li&gt;
  &lt;li&gt;This is a very rails like framework where you install the gem and then the gem generates an application which is Rails-esque.  Its actually pretty brilliant and even generates docker containers for all the dependencies which is &lt;strong&gt;sweet&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The only real problem is simple – I couldn’t make it actually crawl.  All that happened was that it would start, process the home page and fail to populate the body and then stop.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is definitely goodness here but when something fails at the very basic use case, it is hard to justify pushing farther.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Apr 2017 16:42:30 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/08/reviewing-open-source-ruby-crawling-gems.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/08/reviewing-open-source-ruby-crawling-gems.html</guid>
        
        
      </item>
    
      <item>
        <title>Building Graphs with the chartjs-ror Gem</title>
        <description>&lt;p&gt;There a lot of times in 2017 when, as a Rails developer who’s mostly backend, it feels like the world has passed us by when it comes to something that is purely front end like, say, dashboards and graphs.  I’m building a side project right now that is graph heavy and I’ve looked at a lot of different graph technologies:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://d3js.org/&quot;&gt;d3.js&lt;/a&gt; - which I really like but I don’t feel I have the javascript mojo to use&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.highcharts.com/&quot;&gt;highcharts&lt;/a&gt; - which I’ve used in the past but is commercially licensed and this is a side project&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.chartjs.org/&quot;&gt;chartjs&lt;/a&gt; - which I really, really like&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall I’ve had the best luck with chartjs in terms of the ratio between time invested and graphs produced i.e. I got farther with chartjs with less effort than anything else so that’s where I’ve been focused lately.&lt;/p&gt;

&lt;p&gt;The single best reference I’ve found to using chartjs with rails was buried at the bottom of a message board from a guy in New Zealand who uses chartjs and rails to graph has big races:&lt;/p&gt;

&lt;blockquote&gt;
  Hi @glundgren,

  Check out my full working example. Rather than mucking around with chartjs-ror, I have switched to using straight ChartJS.

  The flow of events is:
  1. My controller calls my model which produces the data in the correct format
  2. My view defines a HTML canvas element with the data as HTML5 data attributes
  3. Then the javascript comes along and uses native ChartJS (i.e. new Chart(element, options) to produce the chart. The values are read directly off the data attributes, (i.e. resultDurationCanvas.data('duration')). This is where I convert the number of seconds to hh:mm:ss format for the labels

  I realise it's quite complicated but it allows me do the heavy lifting in ruby while giving me full power over the presentation of the labels etc without having to dance around with %= % in my erb.

  This is just one of many possibilities, but it may help you think about options.

  Let me know if you need any help with anything else!

  Dave

  [Source](https://www.bountysource.com/issues/7948443-graphing-times )(scroll down to the bottom).
  
  The full working example is here: [http://cycling.harris.org.nz/races/taupo-cycle-challenge](http://cycling.harris.org.nz/races/taupo-cycle-challenge) and his github for this is here: [https://github.com/daveharris/cycling.harris.org.nz](https://github.com/daveharris/cycling.harris.org.nz)
&lt;/blockquote&gt;

&lt;p&gt;Given the importance of mastering JavaScript in 2017 I’ve been working natively with chartjs and the Rails asset facilities but I thought it might be interesting to dip back to a gem based approach and see how far I got with it.  This led me to the &lt;a href=&quot;https://github.com/airblade/chartjs-ror&quot;&gt;chartjs-ror&lt;/a&gt; gem.&lt;/p&gt;

&lt;p&gt;Here is the quick tutorial for using it:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add gem ‘chartjs-ror’ to your gemfile and bundle install.&lt;/li&gt;
  &lt;li&gt;Add //= require Chart.min to application.js&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add this example to a view:&lt;/p&gt;

    &lt;p&gt;&amp;lt;%
    data = {
      labels: [“January”, “February”, “March”, “April”, “May”, “June”, “July”],
      datasets: [
        {
            label: “My First dataset”,
            background_color: “rgba(220,220,220,0.2)”,
            border_color: “rgba(220,220,220,1)”,
            data: [65, 59, 80, 81, 56, 55, 40]
        },
        {
            label: “My Second dataset”,
            background_color: “rgba(151,187,205,0.2)”,
            border_color: “rgba(151,187,205,1)”,
            data: [28, 48, 40, 19, 86, 27, 90]
        }
      ]
    }
 %&amp;gt;&lt;/p&gt;

    &lt;p&gt;&amp;lt;% options = {} &amp;gt;  &lt;br /&gt;
&amp;lt;%= line_chart data, options %&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That will work but it will generate a bloody enormous graph for you.  You need to set the options hash correctly to make it size to something resembling a correct web app by changing the options hash as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%# options = { :responsive =&amp;gt; true, maintainAspectRatio: false } %&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I really don’t understand how maintainAspectRatio: false makes it smaller but that seems to be a chartjs thing since discovering that bit of magic made my other graphs using chartjs magically work also so I’m just going to treat it as a &lt;em&gt;magic incantation&lt;/em&gt; that works and leave it at that.  Honestly its no different than N other bits of technical knowledge that I don’t understand but rely on (mysql tuning at times comes to mind; or apache configuration).&lt;/p&gt;

&lt;h1 id=&quot;tying-this-in-with-activerecord&quot;&gt;Tying this in with ActiveRecord&lt;/h1&gt;

&lt;h1 id=&quot;common-errors&quot;&gt;Common Errors&lt;/h1&gt;

&lt;p&gt;The first common error you might hit is this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(index):115 Uncaught ReferenceError: Chart is not defined   at initChart ((index):115)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That means “You need to add chartmin to application.js”&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Apr 2017 05:52:43 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/04/07/building-graphs-with-the-chartjs-ror-gem.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/04/07/building-graphs-with-the-chartjs-ror-gem.html</guid>
        
        <category>rails</category>
        
        <category>graphs</category>
        
        <category>chartjs</category>
        
        <category>chartjs-ror</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Tip - When Puma Doesn't Run on the Specified Port</title>
        <description>&lt;p&gt;So I just noticed this particular oddness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;12:12 $ bundle exec rails s -p4000
=&amp;gt; Booting Puma
=&amp;gt; Rails 5.0.1 application starting in development on http://localhost:4000
=&amp;gt; Run `rails server -h` for more startup options
Puma starting in single mode...
* Version 3.7.0 (ruby 2.3.1-p112), codename: Snowy Sagebrush
* Min threads: 5, max threads: 5
* Environment: development
* Listening on tcp://0.0.0.0:3000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see Puma is being started with a port 4000 directive but it is actually listening on the default 3000 port.&lt;/p&gt;

&lt;p&gt;A bit of googling led me to this bit of text in a &lt;a href=&quot;https://github.com/puma/puma/issues/1200&quot;&gt;Github issue&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;After updating the gem version and bundling: gem ‘puma’, ‘~&amp;gt; 3.6.2’ &lt;a href=&quot;https://github.com/puma/puma/issues/1200#issuecomment-278606118&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I edited my Gemfile and replaced:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gem ‘puma’, ‘~&amp;gt; 3.0’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gem ‘puma’, ‘~&amp;gt; 3.6.2’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A quick bundle install and then another rails s -p4000 gives:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p4000
=&amp;gt; Booting Puma
=&amp;gt; Rails 5.0.1 application starting in development on http://localhost:4000
=&amp;gt; Run `rails server -h` for more startup options
Puma starting in single mode...
* Version 3.6.2 (ruby 2.3.1-p112), codename: Sleepy Sunday Serenity
* Min threads: 5, max threads: 5
* Environment: development
* Listening on tcp://localhost:4000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As with all http testing, a curl -I is always handy for figuring out if things are working:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -I http://localhost:4000/
HTTP/1.1 200 OK
X-Frame-Options: SAMEORIGIN
X-XSS-Protection: 1; mode=block
X-Content-Type-Options: nosniff
Content-Type: text/html; charset=utf-8
ETag: W/&quot;c06ad854cb732d5ed93f13e0e4a601ac&quot;
Cache-Control: max-age=0, private, must-revalidate
X-Request-Id: 85a07f99-f8b3-4692-aaa5-4f7c8327d901
X-Runtime: 0.032369
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 05 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/04/05/rails-tip-when-puma-doesn-t-run-on-the-specified-port.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/04/05/rails-tip-when-puma-doesn-t-run-on-the-specified-port.html</guid>
        
        <category>rails</category>
        
        <category>puma</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Finding God in Books and Serendipity</title>
        <description>&lt;p&gt;This post is something different from what I usually write and far more personal.  I am a christian and, nominally, a protestant although I care little about denominations.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Apr 2017 09:09:37 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/personal/2017/04/01/finding-god-in-books-and-serendipity.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/personal/2017/04/01/finding-god-in-books-and-serendipity.html</guid>
        
        <category>personal</category>
        
        <category>god</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Setting Up a Router LeveL VPN Take 2</title>
        <description>&lt;p&gt;Three days ago &lt;a href=&quot;http://fuzzyblog.io/blog/vpn/2017/03/29/setting-up-a-router-level-vpn-to-secure-your-browsing.html&quot;&gt;I wrote up how to configure a Router level vpn&lt;/a&gt; to secure your Internet browsing so your ISP can’t know where you’re visiting and sell your Internet history.  That tutorial is still very relevant but the commercial VPN provider I used, &lt;a href=&quot;http://www.strongvpn.com/&quot;&gt;StrongVPN&lt;/a&gt;, prevented me from using Netflix.  My initial plan had been to turn the VPN on / off at the router level when we wanted to use Netflix but my kids apparently use Netflix very regularly when I’m at work so that’s kind of a non starter.  This meant that I needed a different VPN solution – one that I ran myself and not a commercial provider.&lt;/p&gt;

&lt;p&gt;The reason that Netflix blocks VPN access is that they don’t want customers in other countries buying the US version of Netflix to get around country specific content licensing.  And since any VPN provider is an ongoing business with a persistent set of IP ranges, Netflix can easily block any centralized VPN provider just by noting “Ok - StrongVPN is using xxx.yyy.vvv.zzz” so using any commercial provider is always going to play cat and mouse.  The one I used, StrongVPN, had a history of being Netflix compliant but that’s apparently no longer the case.&lt;/p&gt;

&lt;p&gt;The approach that I took is one that’s currently popular among networking folk that I know online:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take a cheap cloud computing instance like an AWS t2.micro or a Digital Ocean droplet&lt;/li&gt;
  &lt;li&gt;Configure an open source VPN tool on top of it&lt;/li&gt;
  &lt;li&gt;Use that for all Internet access including router level access like I linked to above&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a number of these solutions now available and they generally operate using a provisioning engine like Ansible to spin up the cloud instance, install the VPN and create the needed infrastructure.  Here are the ones I looked at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hacker News Discussion Threads on this Topic: &lt;a href=&quot;https://news.ycombinator.com/item?id=13249523&quot;&gt;AutoVPN&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=13998493&quot;&gt;Algo&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=13996417&quot;&gt;Streisand&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Recommended&lt;/strong&gt; &lt;a href=&quot;http://github.com/trailofbits/algo&quot;&gt;Algo&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&quot;http://blog.trailofbits.com/2016/12/12/meet-algo-the-vpn-that-works/&quot;&gt;Blog&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Recommended&lt;/strong&gt; &lt;a href=&quot;http://github.com/Nyr/openvpn-install&quot;&gt;openvpn-install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jlund/streisand&quot;&gt;Streisand&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pritunl.com&quot;&gt;Pritunl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tinc-vpn.org&quot;&gt;Tinc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of the options above I tried three of them: Streisand, Algo and openvpn-install.  Streisand was very promising but it failed to install completely on either Google Cloud or AWS.  Worse it left a dangling cloud instance on AWS meaning that had I not been watchful, I’d have been paying for that until I noticed.  Algo did far, far better on installation but its post install documentation left me confused enough that I had to file a &lt;a href=&quot;https://github.com/trailofbits/algo/issues/320&quot;&gt;Github issue&lt;/a&gt; to find out what to do next (which someone answered almost immediately – thank you!).&lt;/p&gt;

&lt;p&gt;Of the options above I ended up using Algo and openvpn-install.  This is likely confusing and, to a VPN expert, actually stupid but here’s why:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Algo handled provisioning the AWS instance and securing it perfectly.  It also generated VPN configurations specific to iOS devices which is useful since we’re an Apple household.&lt;/li&gt;
  &lt;li&gt;Algo is a deliberately cut down VPN system focused solely on the IKEv2 spec.  Sadly while this works client side on OSX devices, my router only supports OpenVPN, PPTP and L2TP vpn protocols so I can’t use Algo at the router level.  Please be aware that this is a feature not a limitation – the real solution is for my router vendor, Asus, to support IKEv2.&lt;/li&gt;
  &lt;li&gt;Once I had an AWS instance running, there is nothing stopping you from running openvpn-install directly on that AWS instance so you have an OpenVPN protocol that works on a router that only supports OpenVPN – and that’s what I did.&lt;/li&gt;
  &lt;li&gt;And since this VPN is now running on my own box, not a commercial provider, it actually does support Netflix which makes my kids happy.&lt;/li&gt;
  &lt;li&gt;This should end up being quite a bit cheaper than a commercial provider since a t2.micro not is pretty minimal but untiL i see a bill I won’t really know.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;process&quot;&gt;Process&lt;/h1&gt;

&lt;p&gt;Here’s what to do.  Please bear in mind that this requires a full Ansible dev stack complete with Boto so if you’re not a Linux or OSX person who’s fairly technical, well, you’re likely out of luck.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start by going to &lt;a href=&quot;http://github.com/trailofbits/algo&quot;&gt;Algo&lt;/a&gt; and downloading it per the instructions.&lt;/li&gt;
  &lt;li&gt;Run the Algo setup process and answer all the questions.  You likely want to pick a data center for your VPN closest to you for best performance.  It will take a fair bit (roughly 20 minutes to run).  At the end you’ll get a nicely formatted although mildly unclear set of instructions.  If you don’t want to use openvpn-install also then you can stop here and just configure your local vpn.  Or you can continue to install openvpn-install.&lt;/li&gt;
  &lt;li&gt;Ssh into the algo box:
&amp;gt; ssh -i config/algos.pem ubuntu@xxx.yyy.vvv.zzz&lt;/li&gt;
  &lt;li&gt;Become root:
&amp;gt; sudo su -&lt;/li&gt;
  &lt;li&gt;Run the openvpn-install process: 
&amp;gt; wget https://git.io/vpn -O openvpn-install.sh &amp;amp;&amp;amp; bash openvpn-install.sh&lt;/li&gt;
  &lt;li&gt;At the end your OpenVPN settings will be in &lt;strong&gt;/root/client.ovpn&lt;/strong&gt;   Copy that file locally and then use it to configure a VPN connection at your router or client side.  See my &lt;a href=&quot;http://fuzzyblog.io/blog/vpn/2017/03/29/setting-up-a-router-level-vpn-to-secure-your-browsing.html&quot;&gt;earlier tutorial&lt;/a&gt; for details on setting up your router level connection.  Either way you should now have a VPN that supports Netflix.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;post-installation-steps&quot;&gt;Post Installation Steps&lt;/h1&gt;

&lt;p&gt;After you install, you should goto &lt;a href=&quot;https://whoer.net&quot;&gt;whoer.net&lt;/a&gt; and check your params.  My local ISP is in Indiana but here’s my whoer report once my VPN was running on my router:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/whoer.png&quot; alt=&quot;/blog/assets/whoer.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see this reflects the location of my VPN which is located in Ohio.&lt;/p&gt;

&lt;h1 id=&quot;comments&quot;&gt;Comments&lt;/h1&gt;

&lt;p&gt;Please bear in mind that this is a sub optimal approach – I’m running two separate VPN servers now (thought I could shut down the Algo one) but it supports my use case which boiled down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Securing my family’s Internet browsing&lt;/li&gt;
  &lt;li&gt;Fast and easy installation – I spent much more time writing these two blog posts than I did dealing with VPN configuration&lt;/li&gt;
  &lt;li&gt;Worked router side with a router that didn’t support Algo’s protocols; ideally I’d have replaced my router with something that ran IKEv2 directly but I didn’t feel like that pain right now&lt;/li&gt;
  &lt;li&gt;Supported Netflix which made my kids happy&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 31 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/vpn/2017/03/31/setting-up-a-router-level-vpn-take-2.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/vpn/2017/03/31/setting-up-a-router-level-vpn-take-2.html</guid>
        
        <category>vpn</category>
        
        <category>privacy</category>
        
        <category>security</category>
        
        <category>router</category>
        
        
        <category>vpn</category>
        
      </item>
    
      <item>
        <title>Python and Boto Basics for the Ruby Developer</title>
        <description>&lt;p&gt;What version of boto do I currently have?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;python -c “import boto; print boto.Version”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How to Install Pip Under Vagrant?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install python-pip&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How to Install Boto?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pip install boto&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How to Upgrade Boto?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pip install boto –upgrade&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;http://cloudacadmey.com/blog/boto-python-automate-aws-services&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Mar 2017 10:14:47 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/python/2017/03/30/python-basics-for-the-ruby-developer.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/python/2017/03/30/python-basics-for-the-ruby-developer.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Setting Up a Router Level VPN to Secure Your Browsing</title>
        <description>&lt;p&gt;Well the fools in Congress really did it – they made it &lt;a href=&quot;https://arstechnica.com/tech-policy/2017/03/for-sale-your-private-browsing-history/&quot;&gt;legal for any ISP to sell your browsing habits&lt;/a&gt; - &lt;a href=&quot;https://news.ycombinator.com/item?id=13981184&quot;&gt;Hacker News Discussion&lt;/a&gt;.  If you think this isn’t a privacy issue then consider these examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visiting babycenter.com?  Maybe you’re pregnant.&lt;/li&gt;
  &lt;li&gt;Visiting cars.com?  Maybe you’re buying a new car.&lt;/li&gt;
  &lt;li&gt;Visiting celiac.com?  Maybe you have medical issues around gluten.&lt;/li&gt;
  &lt;li&gt;Visiting kink.com?  Maybe you’re a sexual deviant.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-to-setup-a-router-side-vpn&quot;&gt;How To Setup a Router Side VPN&lt;/h1&gt;

&lt;p&gt;This is an &lt;strong&gt;abomination&lt;/strong&gt; of everyone’s privacy and the only even partial answer is to start using a VPN immediately.  Here’s how I did it.  I have an Internet connection from a local fiber ISP named &lt;a href=&quot;https://www.ninestarconnect.com/residential/residential-internet/&quot;&gt;NineStar&lt;/a&gt;.  They provided us with an ASUS RT-N66U router.  Here’s the step by step illustration of how to do this using this router.  I suspect that most current routers will now support this type of VPN setup but you need to check your router.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Sign up with a VPN provider. This usually costs between $5 and $10 per month.  I used &lt;a href=&quot;http://www.strongvpn.com/&quot;&gt;StrongVPN&lt;/a&gt; just now but I also looked at &lt;a href=&quot;http://www.mullvad.net&quot;&gt;Mullvad&lt;/a&gt; and &lt;a href=&quot;http://www.privateinternetaccess.com/&quot;&gt;Private Internet Access&lt;/a&gt;.  All of these are good; I’ve previously used Mullvad and they kept my browsing safe for years.  One of the reasons I went with StrongVPN was their wide support for mobile devices including &lt;a href=&quot;/blog/assets/vpn09.png&quot;&gt;iOS, Google Play and more&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go into your router’s control panel and find the VPN option:&lt;br /&gt;
&lt;img src=&quot;/blog/assets/vpn01a.png&quot; alt=&quot;/blog/assets/vpn01.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select the VPN client option:&lt;br /&gt;
&lt;img src=&quot;/blog/assets/vpn02b.png&quot; alt=&quot;/blog/assets/vpn02.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Set the VPN client parameters:&lt;br /&gt;
&lt;img src=&quot;/blog/assets/vpn03c.png&quot; alt=&quot;/blog/assets/vpn03.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;The parameters you really need to set are description (which VPN service you are using), VPN Server, User Name and Password.  You should also turn on Auto-Reconnection.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;disadvantages&quot;&gt;Disadvantages&lt;/h1&gt;

&lt;p&gt;Using a VPN can be a really nerdy thing and there can be disadvantages.&lt;/p&gt;

&lt;h2 id=&quot;turkey-anyone&quot;&gt;Turkey Anyone?&lt;/h2&gt;

&lt;p&gt;For example I was initially assigned to a VPN server that was located in Istanbul, Turkey.  This had the amusing impact of Google thinking that I was Turkish and giving me results from google.tr:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/vpn04.png&quot; alt=&quot;/blog/assets/google_turkey.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The solution for me was to log into StrongVPN and then change my VPN server’s location to one in Atlanta.  Here’s that process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Login to the &lt;a href=&quot;https://intranet.strongvpn.com/services/intranet&quot;&gt;Customer Area&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Click on Change Server:
&lt;img src=&quot;/blog/assets/vpn05.png&quot; alt=&quot;/blog/assets/vpn05.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;See what servers are available:
&lt;img src=&quot;/blog/assets/vpn06.png&quot; alt=&quot;/blog/assets/vpn06.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose a country:
&lt;img src=&quot;/blog/assets/vpn07.png&quot; alt=&quot;/blog/assets/vpn07.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose a server:
&lt;img src=&quot;/blog/assets/vpn07.png&quot; alt=&quot;/blog/assets/vpn07.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Click the Change Server button:
&lt;img src=&quot;/blog/assets/vpn08.png&quot; alt=&quot;/blog/assets/vpn08.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;netflix-sigh&quot;&gt;Netflix, Sigh&lt;/h2&gt;

&lt;p&gt;The biggest issue for most people with a VPN will be that it kills Netflix entirely.  If you google for &lt;a href=&quot;https://www.google.com/search?q=Netflix+VPN&amp;amp;oq=Netflix+VPN&amp;amp;aqs=chrome..69i57j0l5.419j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;Netflix VPN&lt;/a&gt;, the 570,000 search results for that simple query should indicate that there’s something going on here.  The issue is that VPNs make content access look like it comes from a different location thus allowing a Netflix customer in say Thailand to get the U.S. version of Netflix.  And since this violates all kinds of content licensing, Netflix aggressively prevents the use of a VPN.  StrongVPN is supposed to work with Netflix (that’s one of the reasons I chose it) but, right now, at least for me, it seems to be failing.&lt;/p&gt;

&lt;p&gt;For right now I’m going to go with the “Turn VPN on / off” when we want to use Netflix.  I’m sure there are better approaches and I’ll likely figure one out but for now this will work given that most of our media content is on a local &lt;a href=&quot;http://www.plex.tv&quot;&gt;Plex&lt;/a&gt; server and not on Netflix.&lt;/p&gt;

&lt;p&gt;I know the Netflix problems absolutely suck but the privacy and security that this provides is absolutely worth it.&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/vpn/2017/03/29/setting-up-a-router-level-vpn-to-secure-your-browsing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/vpn/2017/03/29/setting-up-a-router-level-vpn-to-secure-your-browsing.html</guid>
        
        <category>vpn</category>
        
        <category>privacy</category>
        
        <category>security</category>
        
        <category>router</category>
        
        
        <category>vpn</category>
        
      </item>
    
      <item>
        <title>Getting Started with Ansible when You Know Literally Nothing</title>
        <description>&lt;p&gt;An old friend, let’s call him GC, emailed me earier today about ansible:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Scott,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’m trying out ansible… But I’m a little at a loss as to what I do next.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Goal: We have been working on an x86 assembly language interpreter available on the web, for student usage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;We build and test it locally, push to GitHub… but then we have to remember to login to our pythonanywhere servers, do the appropriate pull, and restart the web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This seems like exactly what ansible is for. But I’ve now installed it locally, and at pythonanywhere, and… well, I’m watching nice videos about the wonderful way ansible can automate this, and I can run ansible-console and see zillions of commands, and…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Well, I &lt;em&gt;think&lt;/em&gt; I need a playbook, and I &lt;em&gt;guess&lt;/em&gt; I can invoke it from my makefile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;On the remote, I need to:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Get to the proper directory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run git pull origin (dev or master)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Restart the web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I also think I need some sort of SSH key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Any guidance you can offer on getting going with this would be greatly appreciated!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;gc&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ansible is the best devops tool I’ve ever used but its yaml based syntax and mixture of different concepts - playbooks, roles, tasks and inventories can make this hard so let’s break this down bit by bit and construct a conceptual model for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you want a set of introductory slides on Ansible, &lt;a href=&quot;http://fuzzyblog.io/blog/assets/ansible_basics.pdf&quot;&gt;here are a set of slides&lt;/a&gt; that I gave in Fall 2016 at an Elixir Meetup.&lt;/p&gt;

&lt;h1 id=&quot;definitions&quot;&gt;Definitions&lt;/h1&gt;

&lt;p&gt;Let’s start with some definitions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Playbook - A collection of logical tasks that are designed to accomplish a purpose.  Think of a playbook as an executable of limited scope.  Playbooks execute roles.&lt;/li&gt;
  &lt;li&gt;Role - A specific thing that you want the playbook to accomplish.  If you had a Playbook that had as its goal to install Ruby then it might have roles of: download source, compile source and then copy the final executable into pace.&lt;/li&gt;
  &lt;li&gt;Tasks - A task is a collection of things that a role does.&lt;/li&gt;
  &lt;li&gt;Inventory - an inventory is a collection of hosts that you want to execute a playbook on.  This is generally just an ASCII file formatted as a .ini file&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-actually-is-ansible&quot;&gt;What Actually Is Ansible?&lt;/h1&gt;

&lt;p&gt;Part of what makes Ansible confusing is that its not an imperative, from start to finish scripting language.  Ansible is instead a &lt;em&gt;state description system&lt;/em&gt; where what you’re doing is describing the state of the system that you want to achieve, as a series of yaml documents, and then Ansible itself reconciles the target system with that state description until it matches.  If you ever did expert systems development then think of Ansible as a problem solving engine and that’s actually pretty close to the truth.&lt;/p&gt;

&lt;h1 id=&quot;solving-our-problem&quot;&gt;Solving Our Problem&lt;/h1&gt;

&lt;p&gt;There are at least three ways that we could solve this problem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Local to Remote&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Remote to Remote&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On Remote&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The difference between these two is &lt;strong&gt;where&lt;/strong&gt; Ansible is executing and the reason that’s important is that Ansible operates via SSH automation at its core.  This means that the underlying concept of &lt;em&gt;connection&lt;/em&gt; is key to Ansible.  You can operate Ansible either via a connection from your local machine to a series of remote hosts (your inventory) or you can operate it on a remote host solely (the connection: local approach).  My suspicion is that either approach could be made to work so let’s explore both.&lt;/p&gt;

&lt;h2 id=&quot;local-to-remote&quot;&gt;Local to Remote&lt;/h2&gt;

&lt;p&gt;With a local to remote approach, the ansible code executes initially on your local machine but connects to each of the machines identified in your inventory.  This connection is done through SSH automation.  I know a lot of my readers are people from the Ruby community so perhaps this analogy might help – if you’re at all familiar with &lt;a href=&quot;http://capistranorb.com/&quot;&gt;Capistrano&lt;/a&gt; then think of this aspect of Ansible as a vastly more generalized Capistrano.&lt;/p&gt;

&lt;h2 id=&quot;remote-to-remote&quot;&gt;Remote to Remote&lt;/h2&gt;

&lt;p&gt;A Remote to Remote approach is actually very similar to local to remote.  The only real difference is that you use a dedicated ansible box on your network to handle running your Ansible code.  This can have some pretty dramatic performance improvements since your remote box is at the same “level” as your ansible code itself.&lt;/p&gt;

&lt;h2 id=&quot;on-remote&quot;&gt;On Remote&lt;/h2&gt;

&lt;p&gt;Another approach would be to run the ansible process solely on the remote machine directly.  I’ve done less of this but it should certainly be possible.&lt;/p&gt;

&lt;h2 id=&quot;choosing-local-to-remote&quot;&gt;Choosing Local to Remote&lt;/h2&gt;

&lt;p&gt;Local to Remote feels like the cleanest match for this problem given my limited knowledge – I know only what was in the email printed above (slight readability / formatting changes).&lt;/p&gt;

&lt;h2 id=&quot;starting-with-a-make-file&quot;&gt;Starting with a Make File&lt;/h2&gt;

&lt;p&gt;GC is an outstanding, low level software developer so his thinking of ansible as something you run directly from the makefile doesn’t surprise me at all.  In an earlier life he implemented the HyperAwk programming language for me using Borland’s Turbo Pascal (yes I’ve known him that long).  HyperAwk was a variant on the Awk programming language that read directly from binary word processing files (Word, WordPerfect, Ami Pro, Samna) and then constructed hypertext documents from them.  I miss HyperAwk but I digress.&lt;/p&gt;

&lt;p&gt;Let’s start with a sample makefile.  Here’s one from the &lt;a href=&quot;https://www.gnu.org/software/make/manual/html_node/Simple-Makefile.html&quot;&gt;Gnu folks&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;edit : main.o kbd.o command.o display.o 

main.o : main.c defs.h
        cc -c main.c
kbd.o : kbd.c defs.h command.h
        cc -c kbd.c
command.o : command.c defs.h command.h
        cc -c command.c
display.o : display.c defs.h buffer.h
        cc -c display.c
insert.o : insert.c defs.h buffer.h
        cc -c insert.c
search.o : search.c defs.h buffer.h
        cc -c search.c
files.o : files.c defs.h buffer.h command.h
        cc -c files.c
utils.o : utils.c defs.h
        cc -c utils.c
clean :
        rm edit main.o kbd.o command.o display.o \
           insert.o search.o files.o utils.o
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And while GC’s makefile is certainly different, conceptually it should be much the same - a series of steps which result in the production of a binary file.  In GC’s case that binary is checked into a version control system and that’s what our Ansible playbook will operate on.&lt;/p&gt;

&lt;p&gt;What we’re going to need to do is invoke our Ansible playbook at the end of the clean: stage with a line something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-playbook -i /Users/sjohnson/me/fuzzygroup/ansible/gc01/inventories/hosts /Users/sjohnson/me/fuzzygroup/ansible/gc01/playbook_deployer.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As I don’t know anything about the paths in GC’s build system, I’m specifying absolute paths to everything but there’s nothing stopping GC from embedding his ansible code into the build process itself – that’s a choice that he could certainly make.  Obviously he would change the /sjohnson/ to something on his local system.&lt;/p&gt;

&lt;h2 id=&quot;the-inventory-file&quot;&gt;The Inventory File&lt;/h2&gt;

&lt;p&gt;The file /Users/sjohnson/me/fuzzygroup/ansible/gc01/inventories/hosts is just an ASCII file that might look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[production]
ansible_ssh_host=ec2-99-39-100-178.us-east-1.compute.amazonaws.com        ansible_ssh_private_key_file=/Users/sjohnson/.ssh/aws.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we wanted this to execute on say 10 different hosts then we’d simply enumerate all 10 hosts here.  And if our local machine’s SSH keys are setup to reach the remote box directly then we wouldn’t even have to specify a .pem file.  The example above shows how I generally configure ansible to talk to AWS since that’s a very, very common use case.&lt;/p&gt;

&lt;h2 id=&quot;the-roles-we-need&quot;&gt;The Roles We Need&lt;/h2&gt;

&lt;p&gt;Here are the roles that we’re likely to need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git_pull&lt;/li&gt;
  &lt;li&gt;web_server_restart&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ansible like a lot of open source tools can be used in many different ways.  I’ve looked at a lot of Ansible code on the web and I’ve written probably close to 10K lines of Ansible by now and I have a pretty opinionated approach to Ansible development by this point.  I treat Ansible code just as if it was “real” source code and I use a very disciplined approach to the files and structure of an ansible “application” – don’t kid yourself, Ansible is a real application development tool even if it doesn’t seem like it.  If you have any doubts on Ansible as a development environment, please read &lt;a href=&quot;http://fuzzyblog.io/blog/aws/2017/03/06/using-ansible-as-a-development-tool-with-rails.html&quot;&gt;this post of mine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before we delve too deep into the specific ansible code, let’s look at the file structure that makes up what we need to do.  Here is tree’s output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/me/fuzzygroup/ansible/gc01
20:19 $ tree
.
├── docs
│   └── readme.txt
├── inventories
│   └── hosts
└── roles
    ├── git_pull
    │   └── tasks
    │       └── main.yml
    └── web_server_restart
        └── tasks
            └── main.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-playbook&quot;&gt;The Playbook&lt;/h2&gt;

&lt;p&gt;Here is the playbook that we’ll need:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- hosts: production
  become: yes
  remote_user: ubuntu
  vars:
    - checkout_path: &quot;/home/gc/code&quot;
    - repo: &quot;git://foosball.example.org/path/to/repo.git&quot;
    - version: &quot;release-0.22&quot;
  roles:
    - { role: git_pull, tags: git}
    - { role: web_server_restart, tags: web_server}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Each bit of this has the following purpose:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hosts - identifies a group of hosts in the inventory file.&lt;/li&gt;
  &lt;li&gt;become - tells Ansible to do its operations using sudo&lt;/li&gt;
  &lt;li&gt;remote_user - tells ansible what user to run as on the remote host&lt;/li&gt;
  &lt;li&gt;vars - defines a series of variables to be used inside roles&lt;/li&gt;
  &lt;li&gt;roles - defines the roles to be called in order&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-checkout-role&quot;&gt;The Checkout Role&lt;/h2&gt;

&lt;p&gt;Ansible uses what are called modules to interface with things and, happily, there is a &lt;a href=&quot;https://docs.ansible.com/ansible/git_module.html&quot;&gt;Git module&lt;/a&gt;.  We can use that to handle the checkout and that reduces the complexity down to just a few lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# https://docs.ansible.com/ansible/git_module.html
- name: Check out from the Git Repo
  git:
    repo: &quot;&quot;
    dest: &quot;&quot;
    version: 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-web-server-restart&quot;&gt;The Web Server Restart&lt;/h2&gt;

&lt;p&gt;Restarting the web server is a hard to define thing since web servers vary considerably so all I can do here is provide an example based on what I use for a web server – Apache:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# https://docs.ansible.com/ansible/shell_module.html
- name: Restart web server
  shell: 
    cmd: &quot;apache2ctl restart&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;example-repo&quot;&gt;Example Repo&lt;/h1&gt;

&lt;p&gt;All the code referenced above is located in this &lt;a href=&quot;https://github.com/fuzzygroup/ansible_gc&quot;&gt;git repo&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;learning-more&quot;&gt;Learning More&lt;/h1&gt;

&lt;p&gt;This is barely touching the surface of Ansible.  Not only did I completely ignore Ansible’s idempotent nature but I also skipped a ton of other important things such as AWS automation, the &lt;em&gt;censored&lt;/em&gt; nature of Ansible Galaxy, python Boto support and more.  Here are some pointers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://fuzzyblog.io/blog/category.html#ansible&quot;&gt;My Blog on Ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jeffgeerling.com/&quot;&gt;Jeff Geerling&lt;/a&gt; / &lt;a href=&quot;https://github.com/geerlingguy&quot;&gt;His Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leanpub.com/ansible-for-devops&quot;&gt;Ansible for Devops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leanpub.com/ansible-for-aws&quot;&gt;Ansible for AWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last two resources are ebooks and they are both excellent.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/ansible/2017/03/22/getting-started-with-ansible-when-you-know-literally-nothing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/ansible/2017/03/22/getting-started-with-ansible-when-you-know-literally-nothing.html</guid>
        
        <category>ansible</category>
        
        
        <category>ansible</category>
        
      </item>
    
  </channel>
</rss>
