<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>https://fuzzyblog.io/blog/</link>
    <atom:link href="http://fuzzyblog.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 29 Jul 2022 23:43:06 -0400</pubDate>
    <lastBuildDate>Fri, 29 Jul 2022 23:43:06 -0400</lastBuildDate>
    <generator>Jekyll v3.9.2</generator>
    
      <item>
        <title>Testing Rails Apps with FactoryBot and MiniTest</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/pfu/DSC01119.JPG&quot; alt=&quot;Pizza&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This blog post looks at testing rails apps with &lt;a href=&quot;https://github.com/thoughtbot/factory_bot_rails&quot;&gt;FactoryBot&lt;/a&gt; and MiniTest – the default test framework which ships with Rails.  It does not use RSpec and RSpec is NOT required for use with FactoryBot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I believe that MiniTest is the name of the standard rails testing framework.  Oddly I've had issues confirming that so if I'm wrong please feel free to tell me.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-factory&quot;&gt;Creating a Factory&lt;/h2&gt;

&lt;p&gt;A factory is a pluralized file just as is a fixture.  Factories live, generally, in the test/factories/ directory.  Let's say that you were modeling swimming pools.  You might have this factory:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;water_chemistry_type&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Swimming Pool&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool_type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pool&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;feet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;volume_units&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gallons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shallow_end_depth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deep_end_depth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What the above code says:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Define a factory named :pool&lt;/li&gt;
  &lt;li&gt;Reference two other models - user and water_chemistry_type&lt;/li&gt;
  &lt;li&gt;Have a bunch of attributes that define the pool&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;creating-two-specific-factories&quot;&gt;Creating Two Specific Factories&lt;/h2&gt;

&lt;p&gt;The power of something like FactoryBot comes, however, not when we have a single instance of anything but when we have multiple instances that we can use to test different scenarios.&lt;/p&gt;

&lt;p&gt;Let's say that I have both a pool and a hot tub.  Those have commonalities but also differences.  We can model those difference as &lt;em&gt;traits&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;water_chemistry_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:swimming_pool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
      &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Swimming Pool&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;pool_type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pool&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;feet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;volume_units&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gallons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;shallow_end_depth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;deep_end_depth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.67&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hot_tub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hot Tub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;pool_type&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hot_tub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;      
      &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;units&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;feet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;volume_units&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;gallons&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;depth&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;    
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What this does is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a pool factory&lt;/li&gt;
  &lt;li&gt;With two common attributes - user and water_chemistry_type&lt;/li&gt;
  &lt;li&gt;Add a trait named &quot;swimming&quot; pool which defines the attributes for a swimming pool.&lt;/li&gt;
  &lt;li&gt;Add a trait named &quot;hot_tub&quot; which defines the attributes for a hot tub&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;a-general-suggestion-for-all-models&quot;&gt;A General Suggestion for all Models&lt;/h2&gt;

&lt;p&gt;In the recent past (or future; perhaps that blog post hasn't come out yet), I noted that Rails applications are like finely tuned Swiss watches – they are literally that precise a collection of &lt;strong&gt;mechanisms&lt;/strong&gt;.  What I have found is that if you want to test effectively inside a Rails app, you need to first guarantee that you don't have problems elsewhere such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fixtures&lt;/li&gt;
  &lt;li&gt;foreign key dependencies&lt;/li&gt;
  &lt;li&gt;any of a hundred other things&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I always recommend is that you instrument your classes with two methods that should NEVER be able to fail:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then you have a matching set of tests like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;it should return bar when foo is called for a pool&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;It should return bar when called on a class method&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What testing many, many hundreds of thousands of lines of Rails code has taught me is that if the above two tests work then you can safely test your Rails app without crazy weirdness.&lt;/p&gt;

&lt;h2 id=&quot;testing-an-instance-method-with-a-factory&quot;&gt;Testing an Instance Method with a Factory&lt;/h2&gt;

&lt;p&gt;Here is a simple example of testing an instance method with a factory:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;it should return bar when foo is called for a pool&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;calculate_volume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;testing-a-class-method-with-a-factory&quot;&gt;Testing a Class Method with a Factory&lt;/h2&gt;

&lt;p&gt;This subheading is basically here for symmetry – you generally wouldn't test a class method with a factory since the class method should be running without the instance data.&lt;/p&gt;

&lt;p&gt;You could, however, take the object that results from a FactoryBot factory and use it just as you use any Rails app as it will respond to dot methods just as everything else does.&lt;/p&gt;

&lt;h2 id=&quot;avoiding-foreign-key-errors&quot;&gt;Avoiding Foreign Key Errors&lt;/h2&gt;

&lt;p&gt;To &lt;a href=&quot;https://stackoverflow.com/questions/71054865/tips-for-debugging-fixture-foreign-key-errors-in-rails&quot;&gt;avoid foreign key errors&lt;/a&gt; you can do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat config/application.rb
require_relative &quot;boot&quot;

require &quot;rails/all&quot;

# Require the gems listed in Gemfile, including any gems
# you've limited to :test, :development, or :production.
Bundler.require(*Rails.groups)

require &quot;jumpstart&quot;

#module PoolWizard
module JumpstartApp
  class Application &amp;lt; Rails::Application
    # Initialize configuration defaults for originally generated Rails version.
    config.load_defaults 7.0
    
    ...
    
    config.active_record.verify_foreign_keys_for_fixtures = false
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Whether this is good or bad is left as an exercise for the programmer.  I will comment, however, that this error message:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/pool_test.rb:47

E

Error:
PoolTest#test_it_should_return_bar_when_foo_is_called_for_a_pool:
RuntimeError: Foreign key violations found in your fixture data. Ensure you aren't referring to labels that don't exist on associations.
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/fixtures.rb:633:in `block in insert'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/fixtures.rb:621:in `each'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/fixtures.rb:621:in `insert'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/fixtures.rb:607:in `read_and_insert'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/fixtures.rb:567:in `create_fixtures'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/test_fixtures.rb:271:in `load_fixtures'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/test_fixtures.rb:125:in `setup_fixtures'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activerecord-7.0.3.1/lib/active_record/test_fixtures.rb:10:in `before_setup'
    /Users/sjohnson/.rvm/gems/ruby-3.1.2/gems/activesupport-7.0.3.1/lib/active_support/testing/setup_and_teardown.rb:40:in `before_setup'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which not only tells you nothing about the error at hand but also backtraces into fixtures – when you aren't using fixtures – is utter balderdash and should be burned at the stake after first being stoned and then drowned.  A pox upon it – is it any wonder that I simply routed it to /dev/null ?&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You should also see &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2022/06/05/back-to-rails-test-putting-rspec-in-the-rear-view-test-examples.html&quot;&gt;my recent post on Testing&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://devhints.io/factory_bot&quot;&gt;FactoryBot cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 27 Jul 2022 06:58:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/07/27/testing-rails-apps-with-factorybot-and-minitest.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/07/27/testing-rails-apps-with-factorybot-and-minitest.html</guid>
        
        <category>rails</category>
        
        <category>testing</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Hardware Learning 01 - LEDs have a plus side</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03674.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;As part of the yet to be announced Flow Analytics startup, I have to learn quite a bit more about building hardware.  All of my learnings will be blogged for anyone who wants to follow along.&lt;/p&gt;

&lt;p&gt;Tonight's learning is simple:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;LEDs have a plus and a minus side.&lt;/li&gt;
  &lt;li&gt;The plus side is denoted by a LONGER lead.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Additionally:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resistors are non-polar (it doesn't matter what side you connect them on); I knew this already but it felt wise to write it down since you always use a resister with an LED&lt;/li&gt;
  &lt;li&gt;A resistor used with an LED is called a &lt;em&gt;ballast&lt;/em&gt; resistor and &quot;The ballast resistor is used to limit the current through the LED and to prevent excess current that can burn out the LED. If the voltage source is equal to the voltage drop of the LED, no resistor is required.&quot; &lt;a href=&quot;https://eepower.com/resistor-guide/resistor-applications/resistor-for-led/#&quot;&gt;See Also&lt;/a&gt; - LED math is on this link!&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 Jul 2022 23:32:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/flow_analytics/2022/07/20/hardware-learning-01-leds-have-a-plus-side.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/flow_analytics/2022/07/20/hardware-learning-01-leds-have-a-plus-side.html</guid>
        
        <category>flow_analytics</category>
        
        <category>hardware_learning</category>
        
        
        <category>flow_analytics</category>
        
      </item>
    
      <item>
        <title>Rails Tip : When You Are Testing Model Files without a Database Table Delete Fixtures File</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8498.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I generate a lot of models without ActiveRecord backing.  The reason for this is I try and follow a fairly functional style of Ruby coding where I use class methods.  The reason I use models for this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I don't know what to call them other than a model&lt;/li&gt;
  &lt;li&gt;The models directly is auto loaded so I can refresh it with reload! in Rails console&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My normal process for this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;rails g foo&lt;/li&gt;
  &lt;li&gt;Delete the migration&lt;/li&gt;
  &lt;li&gt;Delete the &quot;&amp;lt; …&quot; at the top i.e. the inherits from ActiveRecord stff; exact syntax varies from Rails version to Rails version&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Today I hit this error when running a test and it puzzled me:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error:
VolumeCommonTest#test_it_should_have_the_right_values_for_cubic_feet_of_water:
ActiveRecord::StatementInvalid: PG::UndefinedTable: ERROR:  relation &quot;volume_commons&quot; does not exist
LINE 9:  WHERE a.attrelid = '&quot;volume_commons&quot;'::regclass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This actually took me a bit to figure out.  Here's the tldr:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It was coming from bin/rails test test/models/volume_common.rb&lt;/li&gt;
  &lt;li&gt;It was the result of the test runner trying to load the &lt;strong&gt;fixture file&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The reason this was surprising was that I normally customize each Rails project with ThoughtBot's FactoryBot gem and this time I forgot.  FactoryBot suppresses fixture file creation but since &lt;strong&gt;I&lt;/strong&gt; screwed up, it was there and tried to get loaded into a missing table.&lt;/p&gt;

&lt;p&gt;And, yes, the error is mine since I didn't read it well but at times like these I wish for a &lt;strong&gt;&lt;em&gt;gem called abusive_error messages&lt;/em&gt;&lt;/strong&gt; which sees &quot;PG::UndefinedTable&quot; and shouts out something like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Yo!  Hoser! Where be da database table ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ah if there were only infinite time to craft the software tools we really want …&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jul 2022 10:02:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/07/20/rails-tip-when-you-are-testing-model-files-without-a-database-table-delete-fixtures-file.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/07/20/rails-tip-when-you-are-testing-model-files-without-a-database-table-delete-fixtures-file.html</guid>
        
        <category>rails</category>
        
        <category>software_testing</category>
        
        <category>flow_analytics</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Maybe I can Stay in NuShell -or- Living in a Diverse Land of Shells</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01513.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I really, really like NuShell.  The realization that maybe I had to leave was, I'll admit, &lt;a href=&quot;https://fuzzyblog.io/blog/nushell/2022/07/17/getting-nushell-usable-under-osx-for-myself.html&quot;&gt;mildly crushing&lt;/a&gt;.  And then I just had the realization that maybe I don't have to leave NuShell and slink back to the dirty, byte infested corners of Bash and Zsh.  Here's what just happened:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding/flow_analytics/open_source〉rails new pool_api --api                                                            
Rails is not currently installed on this system. To get the latest version, simply type:

    $ sudo gem install rails

You can then rerun your &quot;rails&quot; command.
/Users/sjohnson/Sync/coding/flow_analytics/open_source〉ruby -v                                                                                 07/20/2022 05:34:41 AM
ruby 2.6.8p205 (2021-07-07 revision 67951) [universal.x86_64-darwin21]
/Users/sjohnson/Sync/coding/flow_analytics/open_source〉rvm use        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that was the point when I realized &quot;Oh yeah – RVM doesn't work on NuShell&quot; and then it struck me – I can run Bash:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding/flow_analytics/open_source〉/bin/bash                                                                               07/20/2022 05:34:57 AM
bash: /Users/sjohnson/Library/Python/2.7/bin/powerline-config: /usr/bin/python: bad interpreter: No such file or directory
bash: /Users/sjohnson/Library/Python/2.7/bin/powerline-config: /usr/bin/python: bad interpreter: No such file or directory
bash: /Users/sjohnson/.iterm2_shell_integration.nu: No such file or directory
ERROR:  Can't find Ruby library file or shared library lunchy
usage: dirname string [...]

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
[sjohnson:~/Sync/coding/flow_analytics/open_source] [base] $ rails new pool_api --api

create
create  README.md
create  Rakefile
create  .ruby-version
create  config.ru
create  .gitignore
create  .gitattributes
create  Gemfile
   run  git init from &quot;.&quot;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So maybe my system can mostly run NuShell and I can drop in and out of Bash / Zsh when I need different things.  &lt;strong&gt;Fingers Crossed&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jul 2022 05:36:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/nushell/2022/07/20/maybe-i-can-stay-in-nushell.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/nushell/2022/07/20/maybe-i-can-stay-in-nushell.html</guid>
        
        <category>nushell</category>
        
        
        <category>nushell</category>
        
      </item>
    
      <item>
        <title>Running Multiple Rails Apps Concurrently with Foreman and Procfile.dev</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/pfu/289214624_134557099241886_3934308353915036057_n.jpeg&quot; alt=&quot;Pizza&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As I've said, I build a lot of side projects and I really, really like the model of having:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ALL MY APPS RUNNING CONCURRENTLY&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I may be a scattered, distracted developer trying to do too damn much but that's my damn right.  And I have 64 gigs of RAM so why shouldn't I be this way.&lt;/p&gt;

&lt;p&gt;What I want is to be able to switch from app to app and make changes.  This is important because some apps provide APIs which other apps rely on and having to figure out what thing is on what port, etc, is just plain distracting.&lt;/p&gt;

&lt;p&gt;Foreman and Procfile.dev is a way around this but there's a major hitch in your getalong (as my Texas wife might say).&lt;/p&gt;

&lt;p&gt;Here's a sample Procfile.dev for an app I'm building called Cartazzi which makes a developer's life easier:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web: bin/rails server -p 5000
css: yarn build:css --watch
js: yarn build --reload
# docker: docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's a Profile.dev for another application called Poolwizard which helps you maintain your swimming pool:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#web: bin/rails server -p $PORT
web: bin/rails server -p 5700
css: yarn build:css --watch
js: yarn build --reload
# docker: docker-compose up
worker: bundle exec sidekiq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you run Cartazzi and Poolwizard together then you're going to get crashes and here's the error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ foreman start -f Procfile.dev
09:11:53 web.1    | started with pid 72877
09:11:53 css.1    | started with pid 72878
09:11:53 js.1     | started with pid 72879
09:11:53 worker.1 | started with pid 72881
09:11:53 js.1     | yarn run v1.22.5
09:11:53 css.1    | yarn run v1.22.5
09:11:53 css.1    | $ tailwindcss --postcss -i ./app/assets/stylesheets/application.tailwind.css -o ./app/assets/builds/application.css --watch
09:11:53 js.1     | $ node esbuild.config.js --reload
09:11:54 js.1     | node:events:371
09:11:54 js.1     |       throw er; // Unhandled 'error' event
09:11:54 js.1     |       ^
09:11:54 js.1     |
09:11:54 js.1     | Error: listen EADDRINUSE: address already in use :::5200
09:11:54 js.1     |     at Server.setupListenHandle [as _listen2] (node:net:1306:16)
09:11:54 js.1     |     at listenInCluster (node:net:1354:12)
09:11:54 js.1     |     at Server.listen (node:net:1441:7)
09:11:54 js.1     |     at buildAndReload (/Users/sjohnson/Sync/coding/rails/poolwizard/esbuild.config.js:54:6)
09:11:54 js.1     |     at Object.&amp;lt;anonymous&amp;gt; (/Users/sjohnson/Sync/coding/rails/poolwizard/esbuild.config.js:100:3)
09:11:54 js.1     |     at Module._compile (node:internal/modules/cjs/loader:1109:14)
09:11:54 js.1     |     at Object.Module._extensions..js (node:internal/modules/cjs/loader:1138:10)
09:11:54 js.1     |     at Module.load (node:internal/modules/cjs/loader:989:32)
09:11:54 js.1     |     at Function.Module._load (node:internal/modules/cjs/loader:829:14)
09:11:54 js.1     |     at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)
09:11:54 js.1     | Emitted 'error' event on Server instance at:
09:11:54 js.1     |     at emitErrorNT (node:net:1333:8)
09:11:54 js.1     |     at processTicksAndRejections (node:internal/process/task_queues:83:21) {
09:11:54 js.1     |   code: 'EADDRINUSE',
09:11:54 js.1     |   errno: -48,
09:11:54 js.1     |   syscall: 'listen',
09:11:54 js.1     |   address: '::',
09:11:54 js.1     |   port: 5200
09:11:54 js.1     | }
09:11:54 js.1     | error Command failed with exit code 1.
09:11:54 js.1     | info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
09:11:54 js.1     | exited with code 1
09:11:54 system   | sending SIGTERM to all processes
09:11:54 worker.1 | terminated by SIGTERM
09:11:54 css.1    | exited with code 1
09:11:54 web.1    | terminated by SIGTERM
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first time I looked at this, I saw the port error and I assumed that the error was the rails server because I &lt;strong&gt;knew&lt;/strong&gt; that was running on a specific port.  The actual error though here is node – which ISN'T EVEN IN THE Procfile.dev because it is run behind the scenes by yarn.&lt;/p&gt;

&lt;p&gt;Here's the fix:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#web: bin/rails server -p $PORT
web: bin/rails server -p 5700
css: yarn build:css --watch
js: PORT=5701 yarn build --reload
# docker: docker-compose up
worker: bundle exec sidekiq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To understand this we need to put on our Unix underpinning's hat and think about this.  You have Yarn executing and running Node as a process.  Node inherits the environment variables that Yarn had which means if we set the PORT variable for Yarn then Node will inherit it.&lt;/p&gt;

&lt;p&gt;The convention I'm adopting is this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In all my Procfile.dev's, yarn build will get the port number of the Rails server + 1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank You&lt;/h2&gt;

&lt;p&gt;I didn't figure this out on my own, a fellow Rails guy on Twitter, &lt;a href=&quot;https://twitter.com/@kylekeesling&quot;&gt;Kyle Keesling&lt;/a&gt; told me that this should work.  That was enough for me to know that it could be figured out and to force me back into diagnostic mode.  Thanks Kyle!  Also Kyle is building a course on Stripe and Rails which looks good.  Check it out &lt;a href=&quot;https://store.kylekeesling.com/stripe-on-rails&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/39472215/how-to-run-the-node-app-in-different-port-as-temporarily&quot;&gt;Running Node on a Port&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 18 Jul 2022 09:15:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/07/18/running-multiple-rails-apps-concurrently-with-foreman-and-procfile-dev.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/07/18/running-multiple-rails-apps-concurrently-with-foreman-and-procfile-dev.html</guid>
        
        <category>rails</category>
        
        <category>foreman</category>
        
        <category>procfile</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting NuShell Usable Under OSX for Myself</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/pfu/2022_05_19_thursday_04.jpg&quot; alt=&quot;Pizza&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As I've written, I'm acutely interested in using software written in Rust as my daily drivers.  What I've seen so far is that programs written in Rust, based on an admittedly tiny sample, seem to be higher quality than programs not written in Rust.&lt;/p&gt;

&lt;p&gt;In this blog post, I'm going to talk about what I had to do to make NuShell be usable for myself under OSX Monterey.  To be perfectly honest, I don't know if my experiences are normal or not.  I seem to have a high personal level of entropy with respect to software and it appears that at least sometimes this level of entropy causes bugs.  This is the main reason that I document things so dogmatically – I often need to refer to my own blog.&lt;/p&gt;

&lt;h2 id=&quot;step-00-changing-your-shell-to-nushell&quot;&gt;Step 00: Changing Your Shell to NuShell&lt;/h2&gt;

&lt;p&gt;After you install NuShell, you are left a bit on your own.  You can invoke it via the nu command but what you really want is it to come up as the default shell.  This is done with chsh:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chsh -s /usr/local/bin/nu sjohnson
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: DO NOT CLOSE ALL YOUR OLD TERMINALS!!!  If you are like me and are heavily reliant on history then you want to do this in an existing Bash / Zshell / Fish / Whatever terminal window:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;history &amp;gt; ~/history_old.txt
chmod +r ~/history_old.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes - I think that strongly about history that I want this read only so it doesn't get killed inadvertently.&lt;/p&gt;

&lt;h2 id=&quot;step-01-getting-brew-to-function&quot;&gt;Step 01: Getting Brew to Function&lt;/h2&gt;

&lt;p&gt;After you switch over to using NuShell, you may find that programs like brew aren't found.  This is a path issue (isn't everything???).  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding/flow_analytics〉brew                                                                                 07/17/2022 10:59:12 AM
Error: nu::shell::external_command (link)

  × External command
   ╭─[entry #11:1:1]
 1 │ brew
   · ──┬─
   ·   ╰── can't run executable
   ╰────
  help: No such file or directory (os error 2)      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The solution is to add brew's path into the NuShell environment.  Back in your old shell window, type:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sync/coding/flow_analytics on ☁️  (us-west-2)
❯ which brew
/usr/local/bin/brew
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tells us we want to add &lt;strong&gt;/usr/local/bin/&lt;/strong&gt; to our path.  This can be done in two ways:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Locally in the current shell window's execution context (so this only affects your current session).&lt;/li&gt;
  &lt;li&gt;In the configuration file for Nu.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;setting-path-locally&quot;&gt;Setting Path Locally&lt;/h3&gt;

&lt;p&gt;Your overall environment is available in the $env variable:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding/flow_analytics〉$env                                                                                 07/17/2022 11:18:06 AM
╭────────────────────────────┬────────────────────────────────────────────────────────────────────╮
│ CMD_DURATION_MS            │ 4                                                                  │
│ COLORFGBG                  │ 7;0                                                                │
│ COLORTERM                  │ truecolor                                                          │
│ COMMAND_MODE               │ unix2003                                                           │
│ DISPLAY                    │ /private/tmp/com.apple.launchd.irNmAizE05/org.macosforge.xquartz:0 │
│ ENV_CONVERSIONS            │ {record 2 fields}                                                  │
│ HOME                       │ /Users/sjohnson                                                    │
│ ITERM_PROFILE              │ Default                                                            │
│ ITERM_SESSION_ID           │ w3t2p0:CCE4A07C-C0EC-4B6A-BEF4-CA697D4905C9                        │
│ LANG                       │ en_US.UTF-8                                                        │
│ LAST_EXIT_CODE             │ 1                                                                  │
│ LC_TERMINAL                │ iTerm2                                                             │
│ LC_TERMINAL_VERSION        │ 3.3.9                                                              │
│ LOGNAME                    │ sjohnson                                                           │
│ LaunchInstanceID           │ 680CF766-28B5-428D-A77C-A7F910569794                               │
│ NUSHELL_CURRENT_SHELL      │ 0                                                                  │
│ NUSHELL_SHELLS             │ [list 1 item]                                                      │
│ NU_LIB_DIRS                │ [list 1 item]                                                      │
│ NU_PLUGIN_DIRS             │ [list 1 item]                                                      │
│ OLDPWD                     │ /Users/sjohnson/Sync/coding                                        │
│ PATH                       │ [list 5 items]                                                     │
│ PROMPT_COMMAND             │ &amp;lt;Block 42&amp;gt;                                                         │
│ PROMPT_COMMAND_RIGHT       │ &amp;lt;Block 43&amp;gt;                                                         │
│ PROMPT_INDICATOR           │ &amp;lt;Block 44&amp;gt;                                                         │
│ PROMPT_INDICATOR_VI_INSERT │ &amp;lt;Block 45&amp;gt;                                                         │
│ PROMPT_INDICATOR_VI_NORMAL │ &amp;lt;Block 46&amp;gt;                                                         │
│ PROMPT_MULTILINE_INDICATOR │ &amp;lt;Block 47&amp;gt;                                                         │
│ PWD                        │ /Users/sjohnson/Sync/coding/flow_analytics                         │
│ SECURITYSESSIONID          │ 186a6                                                              │
│ SHELL                      │ /usr/local/bin/nu                                                  │
│ SSH_AUTH_SOCK              │ /private/tmp/com.apple.launchd.FNFdrFKEZA/Listeners                │
│ TERM                       │ xterm-256color                                                     │
│ TERM_PROGRAM               │ iTerm.app                                                          │
│ TERM_PROGRAM_VERSION       │ 3.3.9                                                              │
│ TERM_SESSION_ID            │ w3t2p0:CCE4A07C-C0EC-4B6A-BEF4-CA697D4905C9                        │
│ TMPDIR                     │ /var/folders/t1/8wysbvsx2h50nm_26pqnq2780000gn/T/                  │
│ USER                       │ sjohnson                                                           │
│ XPC_FLAGS                  │ 0x0                                                                │
│ XPC_SERVICE_NAME           │ 0                                                                  │
│ __CFBundleIdentifier       │ com.googlecode.iterm2                                              │
│ __CF_USER_TEXT_ENCODING    │ 0x1F5:0x0:0x0                                                      │
│ config                     │ {record 26 fields}                                                 │
╰────────────────────────────┴────────────────────────────────────────────────────────────────────╯
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's how to view the current path:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;env.PATH                                                                            07/17/2022 11:18:52 AM
╭───┬─────────────────────╮
│ 0 │ /usr/bin            │
│ 1 │ /bin                │
│ 2 │ /usr/sbin           │
│ 3 │ /sbin               │
│ 4 │ /usr/local/bin/brew │
╰───┴─────────────────────╯
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's how to update your local path:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let-env PATH = ($env.PATH | append &quot;/usr/local/bin&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that a which brew gives you:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which brew                                                                           07/17/2022 11:33:30 AM
╭───┬──────┬─────────────────────┬──────────╮
│ # │ arg  │        path         │ built-in │
├───┼──────┼─────────────────────┼──────────┤
│ 0 │ brew │ /usr/local/bin/brew │ false    │
╰───┴──────┴─────────────────────┴──────────╯
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;setting-path-persistently&quot;&gt;Setting Path Persistently&lt;/h3&gt;

&lt;p&gt;Your configuration file is located here (change your login directory appropriately):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;/Users/sjohnson/Library/Application Support/nushell/config.nu&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So you can edit this with vi:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi &quot;/Users/sjohnson/Library/Application Support/nushell/config.nu&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then you can add a line at the end like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let-env PATH = ($env.PATH | append &quot;/usr/local/bin&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-02-never-type-bundle-exec-again---an-alias&quot;&gt;Step 02: Never Type Bundle Exec Again - An Alias&lt;/h2&gt;

&lt;p&gt;Aliases allow shells to expand text commands into their underlying syntax.  For example, I've long had &lt;strong&gt;be&lt;/strong&gt; aliased to &lt;strong&gt;bundle exec&lt;/strong&gt; (which any rubyist knows and loathes).&lt;/p&gt;

&lt;p&gt;The command for aliases is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias be = bundle exec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As with path, you can execute this locally for your current session or you can put it in your config.nu file.  Here's what my config.nu file is starting to look like:&lt;/p&gt;

&lt;h2 id=&quot;step-03-adding-mate-as-an-alias&quot;&gt;Step 03: Adding mate As an Alias&lt;/h2&gt;

&lt;p&gt;Yeah, yeah.  I want to get out of my 20 year long dysfunctional relationship with TextMate but I'm not there yet.  Here's what to alias to make it work for now:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias mate = /usr/local/bin/mate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-04-loading-configuration-changes-from-confignu&quot;&gt;Step 04: Loading Configuration Changes from config.nu&lt;/h2&gt;

&lt;p&gt;It is important to understand that if you make changes to config.nu and then launch a new terminal, you will NOT get the changes you just added to config.nu.  This seems insane to me but my assumption is that there is a master process which has a cached copy of the config.nu file from when the first terminal was launched.&lt;/p&gt;

&lt;p&gt;To get your changes, you need to source the config.nu file just as you would source a .bashrc or .zshrc file.  Your config.nu file can be accessed from the variable:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$nu.config-path                                                                      07/17/2022 01:31:28 PM
/Users/sjohnson/Library/Application Support/nushell/config.nu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is one issue – you can't source that value as, apparently, the nushell environment is compiled.&lt;/p&gt;

&lt;p&gt;What you would think would work would be:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source $&quot;($nu.config-path)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or some variant but it simply will not work.  So you need to do this manually:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source &quot;/Users/sjohnson/Library/Application Support/nushell/config.nu&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This feels damn weird to me but just memorize &lt;strong&gt;$nu.config-path&lt;/strong&gt; and then write a source command manually with copy and paste.  And, alas, you have to have &quot;&quot; around the path expression because Apple was insane in the brain when they named it &quot;Application Support&quot; and not &quot;ApplicationSupport&quot;.  Cupertino at its absolute most stupid.&lt;/p&gt;

&lt;h2 id=&quot;a-known-issue--any-errors-in-confignu-stop-all-confignu-changes&quot;&gt;A Known Issue – Any Errors in config.nu STOP all config.nu changes&lt;/h2&gt;

&lt;p&gt;I originally attempted to execute this in my config.nu file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source /Users/sjohnson/.rvm/scripts/rvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That threw an error since it doesn't work in NuShell (there isn't Bash compatibility).  And, interestingly, even though that came AFTER my alias lines, nothing from my config.nu came thru until I removed this line.&lt;/p&gt;

&lt;h2 id=&quot;and-the-killer-issue-is-lack-of-rvm-support&quot;&gt;And the Killer Issue is Lack of RVM Support&lt;/h2&gt;

&lt;p&gt;After getting to those point, I finally dealt with my RVM issue (the source line above) and discovered that &lt;a href=&quot;https://github.com/nushell/nushell/issues/1960&quot;&gt;there isn't support for this in NuShell&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I guess the likely answer for me is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chsh -s /bin/bash sjohnson
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For right now I have enough existing windows where RVM had run that I don't have to switch back yet but the minute I have a machine crash, well, I'm toast and then back to Bash.&lt;/p&gt;

&lt;p&gt;And if I want NuShell, I'm going to have to just execute nu.  DAMN IT; I really like NuShell and I want it to work.  NuShell feels to me the way ZShell did when I first tried it but without that awful feeling of all the Bash compatibility it lugs around.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-nushell-is-aware-of-virtual-environment-issues&quot;&gt;Sidebar: NuShell is Aware of Virtual Environment Issues&lt;/h2&gt;

&lt;p&gt;I had a bit of a discussion with some of the NuShell folk about this with respect to RVM.  They are aware of it and they do have support for &lt;a href=&quot;https://github.com/nushell/nu_scripts/tree/main/virtual_environments&quot;&gt;Python's Conda&lt;/a&gt;.  There was a long &lt;a href=&quot;https://github.com/nushell/nushell/issues/1960&quot;&gt;RVM github issue&lt;/a&gt; written up 2 years ago but it had gone stale until recently.&lt;/p&gt;

&lt;p&gt;NuShell is looking for help on this topic (I looked at the Conda example and I suspect my shell scripting isn't up to the task; alas).&lt;/p&gt;

&lt;p&gt;I suspect if I had to give NuShell advice, they should look into supporting &lt;a href=&quot;https://asdf-vm.com/&quot;&gt;asdf&lt;/a&gt; since asdf supports multiple languages.  While I like RVM, it only gives me support for Ruby while I've used asdf with lots of things including Elixir.&lt;/p&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank You's&lt;/h2&gt;

&lt;p&gt;The following folks on the NuShell discord server were enormously helpful - welcoming, gracious and knowledgable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rgwood&quot;&gt;Reilly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JT&lt;/li&gt;
  &lt;li&gt;EpThinker&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you all.  Truly appreciated.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nushell/nu_scripts/tree/main/virtual_environments&quot;&gt;NuShell and Virtual Environments&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nushell/nushell/issues/1960&quot;&gt;NuShell and RVM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nushell.sh/book/configuration.html&quot;&gt;NuShell Configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nushell.sh/book/working_with_strings.html#string-interpolation&quot;&gt;NuShell and String Interpolation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nushell.sh/cookbook/setup.html#how-to-list-your-environment-variables&quot;&gt;NuShell and Environment Variables&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nushell.sh/book/aliases.html#how-to-write-an-alias-with-pipes&quot;&gt;NuShell and Aliases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rgwood/dotfiles/blob/master/nu/config.nu#L3&quot;&gt;Reilly's NuShell Configuration File&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://discord.com/channels/601130461678272522&quot;&gt;NuShell Discord Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nushell.sh/book/coming_from_bash.html&quot;&gt;Coming from Bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 17 Jul 2022 11:20:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/nushell/2022/07/17/getting-nushell-usable-under-osx-for-myself.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/nushell/2022/07/17/getting-nushell-usable-under-osx-for-myself.html</guid>
        
        <category>nushell</category>
        
        <category>rust</category>
        
        
        <category>nushell</category>
        
      </item>
    
      <item>
        <title>Value Statements for My New Company</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC09001.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Welp, it looks like I'm starting a new company after all.  Here are the values that I drafted for it.&lt;/p&gt;

&lt;h2 id=&quot;values&quot;&gt;Values&lt;/h2&gt;

&lt;p&gt;These things we believe:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Ethics&lt;/strong&gt;.  We will behave ethically in all situations.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Writing Things Down&lt;/strong&gt;.  We will work from home and be a distributed culture.  And in a distributed culture, things &lt;strong&gt;have to be&lt;/strong&gt; written down.  Good writing is a skill for everyone not something reserved for writing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Having the Hard Conversations Respectfully&lt;/strong&gt;.  In any culture there will be conflict.  This can be done respectfully and without tripping anyone's bozo bit.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do What We Say&lt;/strong&gt;.  We will keep our commitments and do the things we say.  If we fail – and that's expected – then we will apologize and accept responsibility.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Openness and Transparency&lt;/strong&gt;.  Shining light on things makes the badness scurry away.  That's the power of openness and transparency.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Revenue Disclosure&lt;/strong&gt;. Every organization is, correctly, driven by its revenue sources – and that's ok.  Problems occur, however, when you fail to disclose your revenue sources.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ethical Capitalism&lt;/strong&gt;. Capitalism has been the single most transforming force in history and it has done more to lift people from poverty than anything else.  Now, that said, capitalism without regulation and restraint is a violent beast.  The capitalism I believe in was taught to me by my grandfather and it could be summarized as &quot;do the right thing; don't chase every dollar; pay it forward; treat everyone with kindness&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;.  We will treat each other with mutual respect.  We have adoped the Github code of conduct it appends to every repo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Work Should Be Secondary to Life&lt;/strong&gt;.  This is a business but business was not supposed to take over our lives.  All staff are encouraged to take acknowledge this and, hopefully, take four day work weeks as often as they like.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;World Class Technical Support&lt;/strong&gt;.  The high tech industry can - and should - offer world class support.  Great support is possible when you have high gross margins – which is all of the technology business – although most people today don't remember great support, I do and we will offer it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Poor Software Quality is a Literal Tax Upon the World&lt;/strong&gt;.  Poor quality software negatively affects the world.  People creating software have a literal responsibility to not make the world worse by producing crappy, buggy software.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Version Control&lt;/strong&gt;.  We believe in change management and all documents, as much as possible, will be under version control.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Test Coverage&lt;/strong&gt;.  Even if it is nothing more than unit tests, test coverage improves software quality.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pair Programming&lt;/strong&gt;.  &quot;Given enough eyeballs, all bugs are shallow&quot; - Linus' law.  Pair programming brings more eyes on software earlier in the process – the easiest to fix bug is the one that never gets in.  The next easiest is the one that is found early in the process.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;.  Open Source is a profound technological change upon the world and we will participate in and give back as much as possible.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 15 Jul 2022 03:39:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2022/07/15/value-statements-for-my-new-company.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2022/07/15/value-statements-for-my-new-company.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Modifying Zed's Default Keystrokes</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01226.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I'm now deep into my week of using the &lt;a href=&quot;https://www.zed.dev/&quot;&gt;Zed editor&lt;/a&gt;, a new code editor written in Rust.  In this blog post, I'll document how to change the default keystrokes.&lt;/p&gt;

&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;

&lt;p&gt;This happens from the Zed menu, the Preferences command.  There are two commands you need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open Default Key Bindings&lt;/li&gt;
  &lt;li&gt;Open Key Bindings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What you want to do is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Zed menu =&amp;gt; Preferences =&amp;gt; Open Default Key Bindings.  This gives you a giant JSON file in a buffer which you can CMD+A, CMD+C.&lt;/li&gt;
  &lt;li&gt;Zed menu =&amp;gt; Preferences =&amp;gt; Open Key Bindings.  You can then paste this in and make changes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, I am used to these keystrokes which I use constantly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CMD+T – fuzzy file finder; By default this is CMD+P in Zed&lt;/li&gt;
  &lt;li&gt;CMD+L – goto line&lt;/li&gt;
  &lt;li&gt;SHIFT+CMD+F – Global Cross File Search (already the same in Zed!)&lt;/li&gt;
  &lt;li&gt;CMD+/ – block comment the selected region or line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once I knew the keystrokes I wanted, I simply needed to search the json file and then make changes as needed.   I did notice that CMD+/ was already defined as a commenting feature and it simply didn't work which is why I thought I needed to change it.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Jul 2022 11:54:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/zed/2022/07/12/modifying-zed-s-default-keystrokes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/zed/2022/07/12/modifying-zed-s-default-keystrokes.html</guid>
        
        <category>zed</category>
        
        <category>rust</category>
        
        
        <category>zed</category>
        
      </item>
    
      <item>
        <title>NuShell - When /bin/bash curl installs fail</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01212.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I've liked the concept of NuShell since I first heard about it.  I then liked it more when I discovered that Yehuda Katz was involved since I strongly believe in picking software based on the pedigree of the engineers involved (no I don't – yet – have engineer trading cards but I'm thinking about it).&lt;/p&gt;

&lt;p&gt;Although I have NuShell running on my experimental system, I've held off on using it on my main box mostly due to concerns about the vast amounts of things that pipe crap to /bin/bash like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)&quot;

/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;

/usr/bin/find &quot;$(brew --prefix)/Caskroom/&quot;*'/.metadata' -type f -name '*.rb' -print0 | /usr/bin/xargs -0 /usr/bin/perl -i -0pe 's/depends_on macos: \[.*?\]//gsm;s/depends_on macos: .*//g'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That's an uninstall script, an install script and a find command.  I tried all of these tonight on NuShell and they all failed.  An example of this is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding〉/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 

/bin/bash: #!/bin/bash: No such file or directory
/Users/sjohnson/Sync/coding〉
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: For non NuShell users, you can tell its NuShell above by the greater than sign in the prompt.&lt;/p&gt;

&lt;p&gt;And then it struck me – I can likely simply execute /bin/bash from within NuShell and THEN run whatever I need to in bash.  I tried it and it worked perfectly.  So if you have problems with things that don't work on NuShell, try spinning up a /bin/bash session.  After you're done, type exit and you are back in NuShell.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Jul 2022 22:57:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/nushell/2022/07/08/nushell-when-bin-bash-curl-installs-fail.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/nushell/2022/07/08/nushell-when-bin-bash-curl-installs-fail.html</guid>
        
        <category>nushell</category>
        
        <category>rust</category>
        
        
        <category>nushell</category>
        
      </item>
    
      <item>
        <title>Fixing a Hosed HomeBrew Installation</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:39:02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: I'm not telling you to do this.  This blog post advocates bulk permission changing and that's risky but HomeBrew was entirely broken and brew doctor did not work.  And this solution did.  Use at your own risk.&lt;/p&gt;

&lt;p&gt;I have two primary machines – a Mac Desktop and a dual monitor Mac Laptop.  I use the laptop more mostly from habit but I'd really like to use the desktop for something that makes me feel better about it being next to me and yet rarely used.  One of the reasons for two machines is one is my daily driver and one is experimental.  For example, my desktop I installed NuShell on recently as I didn't (yet) trust it enough.&lt;/p&gt;

&lt;p&gt;I recently discovered that HomeBrew wouldn't install things correctly on my desktop.  The issue was always permissions issues and when I dug into it, I found that&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/Cellar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;was owned by, well, NOT me.  The answer, as with so many other *nix things is chown (DO NOT DO THE FOLLOWING):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R sjohnson:wheel /usr/local/Cellar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;-or- that's what I thought the answer was.  Unfortunately while a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install boost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;worked seemingly nicely, it failed at the final step:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/php/blobs/sha256:d124757fd19130379ccef3e1bd26fd082fa11a543aad37a6add6b942fb3d327e
==&amp;gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:d124757fd19130379ccef3e1bd26fd082fa11a543aad37a6add6b942fb3d327e?se=2022-07-09T02%3A50%3A00Z&amp;amp;sig=ea5rDsciKGA8m41Nuw4d6Wkg370EFvFhExVvQkjfr1Q%3D&amp;amp;sp=r&amp;amp;spr=https&amp;amp;sr=b&amp;amp;sv=2019-12-12
######################################################################## 100.0%
==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/postgresql/manifests/14.4
######################################################################## 100.0%
==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/postgresql/blobs/sha256:1e258c37f55737787151ee3a5276e805e0aa4e30cf5d166bdc2208d0d7f812c2
==&amp;gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:1e258c37f55737787151ee3a5276e805e0aa4e30cf5d166bdc2208d0d7f812c2?se=2022-07-09T02%3A50%3A00Z&amp;amp;sig=ynubrlIVaQArYbdlB0upJDURT70N0cluK7KFQIFnSgU%3D&amp;amp;sp=r&amp;amp;spr=https&amp;amp;sr=b&amp;amp;sv=2019-12-12
######################################################################## 100.0%
==&amp;gt; Upgrading httpd
  2.4.29_1 -&amp;gt; 2.4.54

Error: Permission denied @ apply2files - /usr/local/lib/httpd/build/config.nice
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This had me look on my good machine at the overall /usr/local directory:&lt;/p&gt;

&lt;p&gt;WORKING MACHINE:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ ls -l /usr/local
total 0
drwxrwxr-x@   35 sjohnson  admin   1120 Jul  8 06:53 Caskroom
drwxrwxr-x   324 sjohnson  admin  10368 Jul  8 13:18 Cellar
drwxrwxr-x   100 sjohnson  admin   3200 Jun 12 11:43 Frameworks
drwxrwxr-x    21 sjohnson  admin    672 Jun 12 09:58 Homebrew
drwxrwxr-x  1758 sjohnson  admin  56256 Jul  8 13:18 bin
drwxrwxr-x    51 sjohnson  admin   1632 Jun 12 11:43 etc
drwxrwxr-x   451 sjohnson  admin  14432 Jul  8 22:27 include
drwxrwxr-x  1890 sjohnson  admin  60480 Jul  8 22:27 lib
drwxrwxr-x   402 sjohnson  admin  12864 Jul  8 22:27 opt
drwxr-xr-x@    3 root      wheel     96 Jun 18  2019 remotedesktop
drwxrwxr-x    23 sjohnson  admin    736 May 25 22:24 sbin
drwxrwxr-x   100 sjohnson  admin   3200 Jun 12 13:24 share
drwxrwxr-x    16 sjohnson  admin    512 Jul  2 00:43 var
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BROKEN MACHINE:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash-3.2$ ls -l /usr/local/
total 0
drwxrwxr-x   22 502       admin    704 Apr 25  2019 Caskroom
drwxrwxr-x  121 502       admin   3872 Jul  8 10:33 Cellar
drwxrwxr-x    5 502       admin    160 Apr 28  2020 Frameworks
drwxrwxr-x   21 sjohnson  admin    672 Jun 27 23:13 Homebrew
drwxrwxr-x  641 sjohnson  admin  20512 Jul  8 22:43 bin
drwxrwxr-x   30 502       admin    960 Jun 27 23:23 etc
drwxrwxr-x  177 sjohnson  admin   5664 Jul  8 22:43 include
drwxrwxr-x  507 sjohnson  admin  16224 Jul  8 22:40 lib
drwxrwxr-x  159 502       admin   5088 Jul  8 22:40 opt
drwxrwxr-x    7 502       admin    224 Apr 24  2020 sbin
drwxrwxr-x   49 502       admin   1568 Jun 27 23:22 share
drwxrwxr-x   13 502       admin    416 Apr 28  2020 var
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and this led me to the following series of commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R sjohnson:admin /usr/local/Caskroom
sudo chown -R sjohnson:admin /usr/local/Cellar
sudo chown -R sjohnson:admin /usr/local/Frameworks
sudo chown -R sjohnson:admin /usr/local/Homebrew
sudo chown -R sjohnson:admin /usr/local/bin
sudo chown -R sjohnson:admin /usr/local/etc
sudo chown -R sjohnson:admin /usr/local/include
sudo chown -R sjohnson:admin /usr/local/lib
sudo chown -R sjohnson:admin /usr/local/opt
sudo chown -R root:wheel /usr/local/remotedesktop
sudo chown -R sjohnson:admin /usr/local/sbin
sudo chown -R sjohnson:admin /usr/local/share
sudo chown -R sjohnson:admin /usr/local/var
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Although I normally wouldn't advocate this much bulk permission fuckery, it did actually work and a brew install boost worked just fine after it.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Jul 2022 22:40:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2022/07/08/fixing-a-hosed-homebrew-installation.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2022/07/08/fixing-a-hosed-homebrew-installation.html</guid>
        
        <category>osx</category>
        
        <category>homebrew</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Rust Editors to Replace TextMate 2 - The Agony of Despair</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/DSC01552.JPG&quot; alt=&quot;Pizza&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This has now appeared on &lt;a href=&quot;https://news.ycombinator.com/item?id=32034893#32036250&quot;&gt;Hacker News&lt;/a&gt; – thank you for the upvotes; I'm very flattered.  I got some good information on Lapce from - maybe - the author and I've updated that.&lt;/p&gt;

&lt;h2 id=&quot;change-log&quot;&gt;Change Log&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Updated: 2022-07-10 added Neovide, a description of each editor, github start count and more. Oh and this Change Log.
Updated: 2022-07-09 updated with additional info on Lapce and Zed thanks to input from people related to those projects on Twitter (thank you)&lt;/li&gt;
  &lt;li&gt;Authored: 2022-07-08 in a post crash state of despair&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The older I get and remain an &lt;em&gt;active&lt;/em&gt; software engineer, the less accepting I am of &lt;strong&gt;poor software quality&lt;/strong&gt;.  I think all of us gray beards know that software crashes, generally, are a choice of the developer in terms of his:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;technology platform – some technologies are inherently riskier than others i.e. &quot;Friends don't let friends use C++&quot;  or &quot;Practice safe computing my son&quot;&lt;/li&gt;
  &lt;li&gt;development practices – things like test driven development and pair programming (stop arguing on pair programming; we can debate this later; I'll wager I've spent more time actively pairing than you) that demonstrably improve code quality&lt;/li&gt;
  &lt;li&gt;engineering philosophy – Erlang is a fabulous demonstration that by embracing failure you can make more reliable software&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But when you fail to address any of the above, you end up with today's software quality crisis – crashes, bloat and more.  And, honestly, I'm tired of it.&lt;/p&gt;

&lt;p&gt;This morning, at about 6:53 am, my beloved TextMate 2, an editor that less than 2 hours ago, I had typed into a Discourse thread &quot;You can pry out of my cold dead hands&quot;, went insane once again.  TextMate 2 has a lockup context where it won't crash but it will just sit there and refuse to respond to keystrokes.  Then you have to force quit it and depending on the severity of its insanity will recover its context on restart or not.  This is why I write down things like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/textmate/2020/01/15/fixing-textmate-2-when-it-goes-insane.html&quot;&gt;Fixing TextMate 2 When It Goes Insane&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/text/2017/10/08/forensic-computing-1-finding-textmate-untitled-documents.html&quot;&gt;Forensic Computing 1 - Finding TextMate Untitled Documents&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;Adding AutoSave on Focus Lost to TextMate 2&quot;&gt;Adding AutoSave on Focus Lost to TextMate 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sidebar: When TextMate had to be Force Quit, it was using 1.76 gigs of RAM.  Now, despite doing nothing but opening this one document (and all my history it recovered), it is now using 2.93 gigs of RAM.  This document is only 562 words.  Somehow, maybe it is just me, that doesn't explain the additional 1.18 gigs of RAM used for just 562 words.  I am on a computer with 64 gigs of RAM and 1/20th of that is my FSCKING TEXT EDITOR!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/textmate.png&quot; alt=&quot;Pizza&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every time you have a crash in something as fundamental as an editor for a software developer, it is an excuse for someone to lose focus, stop, take a break, etc.  Me?  I went to the grocery story – at a point when I had been closing in on making a release of an open source package I've been promising myself to finish for &lt;strong&gt;6 years&lt;/strong&gt;.  I still haven't gotten back to that Zen point of coding I had been at even though hours have passed.  I am instead still fuming and looking for a different editor and writing this rant.  And that's why I hate crashes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have now been writing about this since 2003 when I first (roughly) calculated the impact of Windows stability on the economy in terms of reboot resulting time away from work.&lt;/p&gt;

&lt;p&gt;It has been said that insanity is doing the same thing repeatedly and expecting different results.  And, yes, I've been expecting classically written software to simply get better over time.  This clearly isn't going to happen so it is time to look for alternatives.&lt;/p&gt;

&lt;h2 id=&quot;about-rust&quot;&gt;About Rust&lt;/h2&gt;

&lt;p&gt;Rust is a relatively new programming language with a focus on speed, correctness and memory safety.  Rust essentially makes the crazy gyrations that are so common – and inherently wrong – in C derived languages so hard that you simply don't make them.  And this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Makes Rust hard to learn.&lt;/li&gt;
  &lt;li&gt;Self selects the programmers willing to learn rust down to an elite handful.&lt;/li&gt;
  &lt;li&gt;Results in higher quality software.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I don't think I'm incorrect in saying that when a piece of software written in Rust exists, it is going to be higher quality than something written in C / Swift / C++ / Java.  And, because of that, I have started using more software written in Rust whenever possible.  I recently switched my terminal from iTerm 2 to &lt;a href=&quot;https://www.warp.dev/&quot;&gt;Warp.dev&lt;/a&gt; because of this.&lt;/p&gt;

&lt;h2 id=&quot;the-hacker-news-reaction-and-rebuttal&quot;&gt;The Hacker News Reaction and Rebuttal&lt;/h2&gt;

&lt;p&gt;Much to my surprise, this blog post got picked up on &lt;a href=&quot;https://news.ycombinator.com/item?id=32034893#32036250&quot;&gt;Hacker News to mixed response&lt;/a&gt; – and a lot of the comments were right.  Rust doesn't automatically make things better and there is (apparently) a lot of bad rust out there.  The Hacker News audience was very kind to my rant and made me think.  Thank you.&lt;/p&gt;

&lt;h2 id=&quot;examples-of-good-end-users-graphical-software-written-in-rust&quot;&gt;Examples of Good End Users, Graphical Software Written in Rust&lt;/h2&gt;

&lt;p&gt;A point in the Hacker News article was my assertion that Rust makes things better but that I hadn't proven this.  Here are my examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://starship.rs/&quot;&gt;StarShip&lt;/a&gt; command prompt (ok maybe not so graphical)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nushell.sh/&quot;&gt;NuShell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.warp.dev/&quot;&gt;Warp.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yes this isn't a big sample but I'm a software engineer and I live in three things: My Shell, My Terminal and My Editor.  My shell and prompt were improved by Rust. And now I'm trying a Rust editor.  Maybe Rust won't save the world but it is making my life demonstrably better.&lt;/p&gt;

&lt;h2 id=&quot;what-do-i-need-in-an-editor&quot;&gt;What Do I Need in an Editor&lt;/h2&gt;

&lt;p&gt;I'm a hard core rubyist with a focus on Rails.  Yes I do other languages but the Ruby stuff is not going to change.  Here's what I need in an editor:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Graphical; Sorry I do like the WIMP interface; I did my half million lines of code in VIM and I love Bram Moolenar but no; just no&lt;/li&gt;
  &lt;li&gt;Basic conformation to platform conventions&lt;/li&gt;
  &lt;li&gt;Able to be invoked easily from the command line and open a directory of files with a tree view on the left&lt;/li&gt;
  &lt;li&gt;Able to be used for documents (markdown / ascii) as well as code&lt;/li&gt;
  &lt;li&gt;Syntax highlighting&lt;/li&gt;
  &lt;li&gt;Keystroke macro recording&lt;/li&gt;
  &lt;li&gt;Autosave on focus lost&lt;/li&gt;
  &lt;li&gt;Extensibility if at all possible; TextMate succeeded in large part because there are bundles for everything&lt;/li&gt;
  &lt;li&gt;A window menu that lists all windows&lt;/li&gt;
  &lt;li&gt;Configurable keystrokes&lt;/li&gt;
  &lt;li&gt;Fuzzy Finder for quick navigation to files&lt;/li&gt;
  &lt;li&gt;Cross file search&lt;/li&gt;
  &lt;li&gt;Features need to be discoverable&lt;/li&gt;
  &lt;li&gt;Fast&lt;/li&gt;
  &lt;li&gt;Side by Side display.  TextMate doesn't have this but I noticed it in Lapce and added it to the list because it was that damn impressive.&lt;/li&gt;
  &lt;li&gt;Has to be low enough overhead that I can create a new doc, not bother to save it, drop some text bits into it and get back to it when I please; in essence I'm treating editor windows / buffers at virtual scraps of paper.  Periodically I will recurse through them and deal with but it may not be for weeks. And don't tell me that's my problem – right now I have 50 windows open.  Each with maybe a few K of text.  On a 64 gig machine.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And I don't have to have everything but that's the core nexus of what I use daily.&lt;/p&gt;

&lt;h2 id=&quot;lets-look-at-some-options&quot;&gt;Let's Look at Some Options&lt;/h2&gt;

&lt;p&gt;And now for the feature level comparison.  I tried to write this as a traditional table comparing all features but the blithering ball of suck that is Jekyll and table layout left me in a rage.  So there are 15 tables each of which focus on one element of the editors.  The benefit to the multiple table approach is the selective winnowing down of options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you want a good looking, well formatted version of this then please follow this link over to the gist version of this section.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup/8a5ad188e368df0796180d150eb41f67&quot;&gt;Gist!&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;whats-being-actively-worked-on&quot;&gt;What's Being Actively Worked On&lt;/h3&gt;

&lt;p&gt;This looks at the editors by commit count and it pretty clearly shows you what is actively under development.  With this analysis, we can reduce 8 editors down to 4.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Commit Count&lt;/th&gt;
      &lt;th&gt;Stars&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1,170&lt;/td&gt;
      &lt;td&gt;3.2K&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zackradisic/glyph&quot;&gt;glyph&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3,028&lt;/td&gt;
      &lt;td&gt;10.5K&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/sidju/hired&quot;&gt;hired&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;78&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/ilai-deutel/kibi&quot;&gt;kibi&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;179&lt;/td&gt;
      &lt;td&gt;784&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1,669&lt;/td&gt;
      &lt;td&gt;12.9K&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;887&lt;/td&gt;
      &lt;td&gt;7.6K&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3,133&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1,200&lt;/td&gt;
      &lt;td&gt;1.9K&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;1k&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sidebar-each-editor-briefly-described&quot;&gt;Sidebar: Each Editor Briefly Described&lt;/h3&gt;

&lt;p&gt;With the number of editors winnowed down from 8, I've now had some additional time to assess each editor and I can try and craft a coherent paragraph on each.  Think of this as the tldr for each editor.  My apologies to the project authors where I got stuff wrong; I know you all work hard on your project and I do appreciate it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Amp – A light weight character mode editor with a VI like feel.&lt;/li&gt;
  &lt;li&gt;Helix – A very impressive character mode editor.  It feels like there's a lot of tech under the hood.&lt;/li&gt;
  &lt;li&gt;Lapce – A graphical editor with split screening and an embedded terminal.  There is a lot of good stuff in the head branch of the git repo so it looks like it will be getting much better in the near future.&lt;/li&gt;
  &lt;li&gt;Neovide – The only one I wasn't able to try.  This is a graphical front end on top of NeoVim.  Unfortunately Apple wouldn't let it execute either from Brew or a cargo build (cargo is the Rust build tool).&lt;/li&gt;
  &lt;li&gt;Zed – A very impressive graphical editor and the one that is robust enough for me to use today.  One of its most intriguing promises is the ability to edit files concurrently with another person.  I suspect this is a pair programming style business model.  Overall Zed having a commmercial focus is I think good because it argues for a long live span.&lt;/li&gt;
  &lt;li&gt;Zee – A light weight character mode editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;editing-style---vim-or-emacs&quot;&gt;Editing Style - Vim or Emacs&lt;/h3&gt;

&lt;p&gt;I know this isn't listed above but it is one of the great Litmus tests for editors.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Emacs&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;VI&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Graphical; modal mode for VI fans in settings(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;VI&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Graphical; configurable key bindings although rough - keymap.json file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Emacs&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Normally I'd toss out anything Emacs style right from the jump but it is already a small pool.&lt;/p&gt;

&lt;p&gt;1 - source: &lt;a href=&quot;https://twitter.com/panekj_dev&quot;&gt;Jakub Panek&lt;/a&gt; on Twitter&lt;/p&gt;

&lt;h3 id=&quot;graphical-vs-character-mode&quot;&gt;Graphical vs Character Mode&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Graphical&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note 1: I left Zee in here because of its 100 fps claim.  Performance really matters; they get props for realizing that.&lt;/p&gt;

&lt;p&gt;Note 2: With exactly 2 graphical editors, I have to relax this criteria (perhaps).&lt;/p&gt;

&lt;p&gt;Note 3: Neovide is graphical but it is also a VIM style editor (technically a front end to NeoVim) so the graphics are minimal (but if you are a VI person that's what you want).&lt;/p&gt;

&lt;h3 id=&quot;basic-conformation-to-platform-conventions&quot;&gt;Basic Conformation to Platform Conventions&lt;/h3&gt;

&lt;p&gt;Computing platforms have a style and conforming to that style / conventions matters.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Graphical&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N - Only a single menu; File picker responds to ~ but doesn't allow pasting in a path&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Yes; Clearly early days but going the right direction&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note: Given that nothing conforms to platform conventions, either I give up and go home or plow on and accept change.&lt;/p&gt;

&lt;p&gt;Lapce gets huge props for integrating a Terminal into its environment giving a very integrated feeling.&lt;/p&gt;

&lt;p&gt;Neovide - I couldn't try it so its hard for me to say but it appears to follow platform conventions as much as you can while being true to VI styling.&lt;/p&gt;

&lt;p&gt;Zed gets huge props for being recognizably a modern style programming editor.  I had no issues conceptually mapping it in the Sublime / TextMate school of design.&lt;/p&gt;

&lt;h3 id=&quot;invoke-from-command-line-and-open-directory&quot;&gt;Invoke from Command Line and Open Directory&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;YES - Beautifully implemented; Kudos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;There is a basic CLI interface in HEAD not yet released so its coming!(1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;1 - source: &lt;a href=&quot;https://twitter.com/panekj_dev&quot;&gt;Jakub Panek&lt;/a&gt; on Twitter&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There is an Install CLI option and while it didn't have feedback at all, once I did it and typed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zed .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The directory I was in opened instantly; &lt;strong&gt;beautiful&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;useful-for-documents&quot;&gt;Useful for Documents&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N - Seems to be a single editor window only&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y - it even highlights markdown syntax; swoon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;syntax-highlighting-for-ruby&quot;&gt;Syntax Highlighting for Ruby&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm really not sure why I'm not getting syntax highlighting more and I'm worried that I'm doing something wrong.  The lack of it deeply surprises me in programming editors.  Perhaps it is a generalized shift to LSP support; unclear.&lt;/p&gt;

&lt;p&gt;I was really quite sorry to see Pepper drop out here.  I was even more annoyed to see that Helix has support for syntax highlighting in Elvish but not for ruby:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hx --grammar fetch ruby

Grammar 'bash' checked out at '275effdfc0edce774acf7d481f9ea195c6c403cd'.
Grammar 'c' checked out at 'f05e279aedde06a25801c3f2b2cc8ac17fac52ae'.
Grammar 'c-sharp' checked out at '53a65a908167d6556e1fcdb67f1ee62aac101dda'.
Grammar 'cairo' checked out at '5155c6eb40db6d437f4fa41b8bcd8890a1c91716'.
Grammar 'clojure' checked out at 'e57c569ae332ca365da623712ae1f50f84daeae2'.
Grammar 'cmake' checked out at 'f6616f1e417ee8b62daf251aa1daa5d73781c596'.
Grammar 'comment' checked out at '5dd3c62f1bbe378b220fe16b317b85247898639e'.
Grammar 'cpon' checked out at '0d01fcdae5a53191df5b1349f9bce053833270e7'.
Grammar 'cpp' checked out at 'e8dcc9d2b404c542fd236ea5f7208f90be8a6e89'.
Grammar 'css' checked out at '94e10230939e702b4fa3fa2cb5c3bc7173b95d07'.
Grammar 'dart' checked out at '6a25376685d1d47968c2cef06d4db8d84a70025e'.
Grammar 'devicetree' checked out at '877adbfa0174d25894c40fa75ad52d4515a36368'.
Grammar 'dockerfile' checked out at '7af32bc04a66ab196f5b9f92ac471f29372ae2ce'.
Grammar 'edoc' checked out at '1691ec0aa7ad1ed9fa295590545f27e570d12d60'.
Grammar 'eex' checked out at 'f742f2fe327463335e8671a87c0b9b396905d1d1'.
Grammar 'elixir' checked out at '1dabc1c790e07115175057863808085ea60dd08a'.
Grammar 'elm' checked out at 'bd50ccf66b42c55252ac8efc1086af4ac6bab8cd'.
Grammar 'elvish' checked out at 'e50787cadd3bc54f6d9c0704493a79078bb8a4e5'.
Grammar 'embedded-template' checked out at 'd21df11b0ecc6fd211dbe11278e92ef67bd17e97'.
Grammar 'erlang' checked out at '0e7d677d11a7379686c53c616825714ccb728059'.
Grammar 'fish' checked out at '04e54ab6585dfd4fee6ddfe5849af56f101b6d4f'.
Grammar 'gdscript' checked out at '2a6abdaa47fcb91397e09a97c7433fd995ea46c6'.
Grammar 'git-commit' checked out at '318dd72abfaa7b8044c1d1fbeabcd06deaaf038f'.
Grammar 'git-config' checked out at '0e4f0baf90b57e5aeb62dcdbf03062c6315d43ea'.
Grammar 'git-diff' checked out at 'c12e6ecb54485f764250556ffd7ccb18f8e2942b'.
Grammar 'git-rebase' checked out at '332dc528f27044bc4427024dbb33e6941fc131f2'.
Grammar 'gitattributes' checked out at '3dd50808e3096f93dccd5e9dc7dc3dba2eb12dc4'.
Grammar 'gitignore' checked out at 'f4685bf11ac466dd278449bcfe5fd014e94aa504'.
Grammar 'gleam' checked out at 'd7861b2a4b4d594c58bb4f1be5f1f4ee4c67e5c3'.
Grammar 'glsl' checked out at '88408ffc5e27abcffced7010fc77396ae3636d7e'.
Grammar 'go' checked out at '0fa917a7022d1cd2e9b779a6a8fc5dc7fad69c75'.
Grammar 'gomod' checked out at 'e8f51f8e4363a3d9a427e8f63f4c1bbc5ef5d8d0'.
Grammar 'gowork' checked out at '6dd9dd79fb51e9f2abc829d5e97b15015b6a8ae2'.
Grammar 'graphql' checked out at '5e66e961eee421786bdda8495ed1db045e06b5fe'.
Grammar 'hare' checked out at 'bc26a6a949f2e0d98b7bfc437d459b250900a165'.
Grammar 'haskell' checked out at 'b6ec26f181dd059eedd506fa5fbeae1b8e5556c8'.
Grammar 'hcl' checked out at '3cb7fc28247efbcb2973b97e71c78838ad98a583'.
Grammar 'heex' checked out at '961bc4d2937cfd24ceb0a5a6b2da607809f8822e'.
Grammar 'html' checked out at 'd93af487cc75120c89257195e6be46c999c6ba18'.
Grammar 'iex' checked out at '39f20bb51f502e32058684e893c0c0b00bb2332c'.
Grammar 'java' checked out at 'bd6186c24d5eb13b4623efac9d944dcc095c0dad'.
Grammar 'javascript' checked out at '4a95461c4761c624f2263725aca79eeaefd36cad'.
Grammar 'jsdoc' checked out at '189a6a4829beb9cdbe837260653b4a3dfb0cc3db'.
Grammar 'json' checked out at '65bceef69c3b0f24c0b19ce67d79f57c96e90fcb'.
Grammar 'julia' checked out at '12ea597262125fc22fd2e91aa953ac69b19c26ca'.
Grammar 'kotlin' checked out at 'a4f71eb9b8c9b19ded3e0e9470be4b1b77c2b569'.
Grammar 'latex' checked out at '7f720661de5316c0f8fee956526d4002fa1086d8'.
Grammar 'lean' checked out at 'd98426109258b266e1e92358c5f11716d2e8f638'.
Grammar 'ledger' checked out at '1f864fb2bf6a87fe1b48545cc6adc6d23090adf7'.
Grammar 'llvm' checked out at '3b213925b9c4f42c1acfe2e10bfbb438d9c6834d'.
Grammar 'llvm-mir' checked out at '06fabca19454b2dc00c1b211a7cb7ad0bc2585f1'.
Grammar 'lua' checked out at '6f5d40190ec8a0aa8c8410699353d820f4f7d7a6'.
Grammar 'make' checked out at 'a4b9187417d6be349ee5fd4b6e77b4172c6827dd'.
Grammar 'markdown' checked out at 'ab15701d8f3f68aeb74e30573b7d669a6ef2a7ed'.
Grammar 'meson' checked out at 'feea83be9225842490066522ced2d13eb9cce0bd'.
Grammar 'nickel' checked out at '9d83db400b6c11260b9106f131f93ddda8131933'.
Grammar 'nix' checked out at '6b71a810c0acd49b980c50fc79092561f7cee307'.
Grammar 'nu' checked out at 'db4e990b78824c8abef3618e0f93b7fe1e8f4c0d'.
Grammar 'ocaml' checked out at '23d419ba45789c5a47d31448061557716b02750a'.
Grammar 'ocaml-interface' checked out at '23d419ba45789c5a47d31448061557716b02750a'.
Grammar 'odin' checked out at 'da885f4a387f169b9b69fe0968259ee257a8f69a'.
Grammar 'openscad' checked out at '5c3ce93df0ac1da7197cf6ae125aade26d6b8972'.
Grammar 'org' checked out at '1c3eb533a9cf6800067357b59e03ac3f91fc3a54'.
Grammar 'perl' checked out at '0ac2c6da562c7a2c26ed7e8691d4a590f7e8b90a'.
Grammar 'php' checked out at '57f855461aeeca73bd4218754fb26b5ac143f98f'.
Grammar 'prisma' checked out at '17a59236ac25413b81b1613ea6ba5d8d52d7cd6c'.
Grammar 'protobuf' checked out at '19c211a01434d9f03efff99f85e19f967591b175'.
Grammar 'python' checked out at 'd6210ceab11e8d812d4ab59c07c81458ec6e5184'.
Grammar 'r' checked out at 'cc04302e1bff76fa02e129f332f44636813b0c3c'.
Grammar 'regex' checked out at 'e1cfca3c79896ff79842f057ea13e529b66af636'.
Grammar 'rescript' checked out at '4cd7ba91696886fdaca086fb32b5fd8cc294a129'.
Grammar 'ruby' checked out at 'dfff673b41df7fadcbb609c6338f38da3cdd018e'.
Grammar 'rust' checked out at 'a360da0a29a19c281d08295a35ecd0544d2da211'.
Grammar 'scala' checked out at '0a3dd53a7fc4b352a538397d054380aaa28be54c'.
Grammar 'scheme' checked out at '27fb77db05f890c2823b4bd751c6420378df146b'.
Grammar 'solidity' checked out at 'f3a002274744e859bf64cf3524985f8c31ea84fd'.
Grammar 'sql' checked out at '0caa7fa2ee00e0b770493a79d4efacc1fc376cc5'.
Grammar 'sshclientconfig' checked out at '769d7a01a2e5493b4bb5a51096c6bf4be130b024'.
Grammar 'svelte' checked out at '349a5984513b4a4a9e143a6e746120c6ff6cf6ed'.
Grammar 'swift' checked out at 'e75240f89bb3bfd3396155859ae364e5c58d7377'.
Grammar 'tablegen' checked out at '568dd8a937347175fd58db83d4c4cdaeb6069bd2'.
Grammar 'toml' checked out at '7cff70bbcbbc62001b465603ca1ea88edd668704'.
Grammar 'tsq' checked out at '48b5e9f82ae0a4727201626f33a17f69f8e0ff86'.
Grammar 'tsx' checked out at '3e897ea5925f037cfae2e551f8e6b12eec2a201a'.
Grammar 'twig' checked out at 'b7444181fb38e603e25ea8fcdac55f9492e49c27'.
Grammar 'typescript' checked out at '3e897ea5925f037cfae2e551f8e6b12eec2a201a'.
Grammar 'v' checked out at '3e8124ea4ab80aa08ec77f03df53f577902a0cdd'.
Grammar 'vala' checked out at 'c9eea93ba2ec4ec1485392db11945819779745b3'.
Grammar 'verilog' checked out at '514d8d70593d29ef3ef667fa6b0e504ae7c977e3'.
Grammar 'vue' checked out at '91fe2754796cd8fba5f229505a23fa08f3546c06'.
Grammar 'wgsl' checked out at 'f00ff52251edbd58f4d39c9c3204383253032c11'.
Grammar 'yaml' checked out at '0e36bed171768908f331ff7dff9d956bae016efb'.
Grammar 'zig' checked out at '93331b8bd8b4ebee2b575490b2758f16ad4e9f30'.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, yes, Ruby is in the damn list but opening a .rb file doesn't highlight squat.  And this must be a design decision because opening a .py file didn't work either.  Still it is 2022 – expecting highlighting to work automatically – in a programming editor isn't a big conceptual leap for me.  Even so the handling of opening a directory nicely has me keeping Helix in the comparison list.&lt;/p&gt;

&lt;h3 id=&quot;keystroke-macro-recording&quot;&gt;Keystroke macro recording&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I wasn't able to confirm this on any of the tools.  This is one of those arcane features.&lt;/p&gt;

&lt;h3 id=&quot;autosave-on-focus-lost&quot;&gt;Autosave on focus lost&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N; maybe it has it but if so it isn't easily discoverable.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This doesn't seem to be in any editor. However, as much as I believe in autosave, if the underlying editor is actually stable then it matters less.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: However not only is Auto Save lacking but Lapce allows you to quit without prompting for save.  I only just discovered that or I'd have cut it from the options right here.  That's not just user hostile but basic hating on the user (imho).&lt;/p&gt;

&lt;h3 id=&quot;extensibility&quot;&gt;Extensibility&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unknown&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unknown&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unknown&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unknown&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unknown&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unknown&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Yes I need to do more research here.  I freely admit that I punted on this one as I've spent far more time on this than I wanted.&lt;/p&gt;

&lt;h3 id=&quot;window-menu-that-lists-all-windows&quot;&gt;Window Menu that Lists All Windows&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N - Lapce skips this by only having 1 menu!&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The reason for specifically listing this feature is that I'm also running Warp.dev as a terminal manager and it is written in Rust and the bizarre feature omission is a Window menu that lists all the windows.&lt;/p&gt;

&lt;h3 id=&quot;configurable-keystrokes&quot;&gt;Configurable keystrokes&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As with extensibility, I punted on this one.  I was only able to confirm this for Zed but I suspect it is coming down the pike for Lapce.&lt;/p&gt;

&lt;h3 id=&quot;fuzzy-finder&quot;&gt;Fuzzy Finder&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I'm pretty sure this is in at least Helix and Pepper but I didn't specifically use it.  I did use this in Zed and it worked perfectly.  Zed also had the more traditional C language style Go to Symbol / Definition stuff you use for C / Java style programming.&lt;/p&gt;

&lt;h3 id=&quot;cross-file-search&quot;&gt;Cross File Search&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y (1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I'm unsure of this feature because, honestly, I couldn't really find info on it.&lt;/p&gt;

&lt;p&gt;1 - source: &lt;a href=&quot;https://twitter.com/panekj_dev&quot;&gt;Jakub Panek&lt;/a&gt; on Twitter&lt;/p&gt;

&lt;h3 id=&quot;discoverable-features&quot;&gt;Discoverable Features&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;None of these editors are particularly discoverable.  The lack of overt user interfaces means they get out of the way but that has a cost of making features unknown unless you really dig in – and you aren't likely to dig in when you can't tell if it has the features you need.&lt;/p&gt;

&lt;h3 id=&quot;fast&quot;&gt;Fast&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Uniformly these felt fast.  Hooray!&lt;/p&gt;

&lt;h3 id=&quot;side-by-side-display&quot;&gt;Side by Side display&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;treat-buffers-as-virtual-paper&quot;&gt;Treat Buffers as Virtual Paper&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor&lt;/th&gt;
      &lt;th&gt;Open&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/jmacdonald/amp&quot;&gt;amp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/helix-editor/helix&quot;&gt;helix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/lapce/lapce&quot;&gt;lapce&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/neovide/neovide&quot;&gt;Neovide&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/vamolessa/pepper&quot;&gt;pepper&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/zee-editor/zee&quot;&gt;zee&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;With none of the editors supporting save on loss of focus, I wouldn't come close to thinking I could use them in this way.   Auto Save, in 2022, should be a default (imho).  To paraphrase the great Ted Nelson who said something like &quot;Real people trust the car to shift itself&quot;, I would argue &quot;Real people trust the editor to automatically save&quot;.&lt;/p&gt;

&lt;h3 id=&quot;lsp-support&quot;&gt;LSP Support&lt;/h3&gt;

&lt;p&gt;Some reached out to me on Twitter and confirmed that Lapce does have LSP integration – &quot;although we don't have much LSP plugins yet, only Rust/Go/Clangd&quot;.  That's awesome and I'll be sure to experiment with it.&lt;/p&gt;

&lt;p&gt;Digging through Helix docs brought up the issue of LSP (language server protocol) support and the hx –health command.  Here is how it looks on my machine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hx --health
Config file: default
Language file: default
Log file: /Users/sjohnson/.cache/helix/helix.log
Runtime directory: /Users/sjohnson/.cargo/bin/runtime

Language                      LSP                           DAP                           Highlight                     Textobject                    Indent
bash                          ✘ bash-language-server        None                          ✘                             ✘                             ✘
c                             ✔ clangd                      ✘ lldb-vscode                 ✘                             ✘                             ✘
c-sharp                       ✘ OmniSharp                   None                          ✘                             ✘                             ✘
cairo                         None                          None                          ✘                             ✘                             ✘
clojure                       ✘ clojure-lsp                 None                          ✘                             ✘                             ✘
cmake                         ✘ cmake-language-server       None                          ✘                             ✘                             ✘
comment                       None                          None                          ✘                             ✘                             ✘
cpon                          None                          None                          ✘                             ✘                             ✘
cpp                           ✔ clangd                      ✘ lldb-vscode                 ✘                             ✘                             ✘
css                           ✘ vscode-css-language-serv…   None                          ✘                             ✘                             ✘
dart                          ✘ dart                        None                          ✘                             ✘                             ✘
devicetree                    None                          None                          ✘                             ✘                             ✘
dockerfile                    ✘ docker-langserver           None                          ✘                             ✘                             ✘
edoc                          None                          None                          ✘                             ✘                             ✘
eex                           None                          None                          ✘                             ✘                             ✘
ejs                           None                          None                          ✘                             ✘                             ✘
elixir                        ✘ elixir-ls                   None                          ✘                             ✘                             ✘
elm                           ✘ elm-language-server         None                          ✘                             ✘                             ✘
elvish                        ✘ elvish                      None                          ✘                             ✘                             ✘
erb                           None                          None                          ✘                             ✘                             ✘
erlang                        ✘ erlang_ls                   None                          ✘                             ✘                             ✘
fish                          None                          None                          ✘                             ✘                             ✘
gdscript                      None                          None                          ✘                             ✘                             ✘
git-attributes                None                          None                          ✘                             ✘                             ✘
git-commit                    None                          None                          ✘                             ✘                             ✘
git-config                    None                          None                          ✘                             ✘                             ✘
git-diff                      None                          None                          ✘                             ✘                             ✘
git-ignore                    None                          None                          ✘                             ✘                             ✘
git-rebase                    None                          None                          ✘                             ✘                             ✘
gleam                         None                          None                          ✘                             ✘                             ✘
glsl                          None                          None                          ✘                             ✘                             ✘
go                            ✘ gopls                       ✘ dlv                         ✘                             ✘                             ✘
gomod                         ✘ gopls                       None                          ✘                             ✘                             ✘
gowork                        ✘ gopls                       None                          ✘                             ✘                             ✘
graphql                       None                          None                          ✘                             ✘                             ✘
hare                          None                          None                          ✘                             ✘                             ✘
haskell                       ✘ haskell-language-server-…   None                          ✘                             ✘                             ✘
hcl                           ✘ terraform-ls                None                          ✘                             ✘                             ✘
heex                          None                          None                          ✘                             ✘                             ✘
html                          ✘ vscode-html-language-ser…   None                          ✘                             ✘                             ✘
idris                         ✘ idris2-lsp                  None                          ✘                             ✘                             ✘
iex                           None                          None                          ✘                             ✘                             ✘
java                          ✘ jdtls                       None                          ✘                             ✘                             ✘
javascript                    ✘ typescript-language-serv…   ✘                             ✘                             ✘                             ✘
jsdoc                         None                          None                          ✘                             ✘                             ✘
json                          ✘ vscode-json-language-ser…   None                          ✘                             ✘                             ✘
jsx                           ✘ typescript-language-serv…   None                          ✘                             ✘                             ✘
julia                         ✘ julia                       None                          ✘                             ✘                             ✘
kotlin                        ✘ kotlin-language-server      None                          ✘                             ✘                             ✘
latex                         ✘ texlab                      None                          ✘                             ✘                             ✘
lean                          ✘ lean                        None                          ✘                             ✘                             ✘
ledger                        None                          None                          ✘                             ✘                             ✘
llvm                          None                          None                          ✘                             ✘                             ✘
llvm-mir                      None                          None                          ✘                             ✘                             ✘
llvm-mir-yaml                 None                          None                          ✘                             ✘                             ✘
lua                           ✘ lua-language-server         None                          ✘                             ✘                             ✘
make                          None                          None                          ✘                             ✘                             ✘
markdown                      None                          None                          ✘                             ✘                             ✘
meson                         None                          None                          ✘                             ✘                             ✘
mint                          ✘ mint                        None                          ✘                             ✘                             ✘
nickel                        ✘ nls                         None                          ✘                             ✘                             ✘
nix                           ✘ rnix-lsp                    None                          ✘                             ✘                             ✘
nu                            None                          None                          ✘                             ✘                             ✘
ocaml                         ✘ ocamllsp                    None                          ✘                             ✘                             ✘
ocaml-interface               ✘ ocamllsp                    None                          ✘                             ✘                             ✘
odin                          None                          None                          ✘                             ✘                             ✘
openscad                      ✘ openscad-language-server…   None                          ✘                             ✘                             ✘
org                           None                          None                          ✘                             ✘                             ✘
perl                          None                          None                          ✘                             ✘                             ✘
php                           ✘ intelephense                None                          ✘                             ✘                             ✘
prisma                        ✘ prisma-language-server      None                          ✘                             ✘                             ✘
prolog                        ✘ swipl                       None                          ✘                             ✘                             ✘
protobuf                      None                          None                          ✘                             ✘                             ✘
python                        ✘ pylsp                       None                          ✘                             ✘                             ✘
r                             ✘ R                           None                          ✘                             ✘                             ✘
racket                        ✘ racket                      None                          ✘                             ✘                             ✘
regex                         None                          None                          ✘                             ✘                             ✘
rescript                      ✘ rescript-language-server…   None                          ✘                             ✘                             ✘
rmarkdown                     ✘ R                           None                          ✘                             ✘                             ✘
ron                           None                          None                          ✘                             ✘                             ✘
ruby                          ✘ solargraph                  None                          ✘                             ✘                             ✘
rust                          ✘ rust-analyzer               ✘ lldb-vscode                 ✘                             ✘                             ✘
scala                         ✘ metals                      None                          ✘                             ✘                             ✘
scheme                        None                          None                          ✘                             ✘                             ✘
solidity                      ✘ solc                        None                          ✘                             ✘                             ✘
sql                           None                          None                          ✘                             ✘                             ✘
sshclientconfig               None                          None                          ✘                             ✘                             ✘
starlark                      None                          None                          ✘                             ✘                             ✘
svelte                        ✘ svelteserver                None                          ✘                             ✘                             ✘
swift                         ✔ sourcekit-lsp               None                          ✘                             ✘                             ✘
tablegen                      None                          None                          ✘                             ✘                             ✘
tfvars                        ✘ terraform-ls                None                          ✘                             ✘                             ✘
toml                          ✘ taplo                       None                          ✘                             ✘                             ✘
tsq                           None                          None                          ✘                             ✘                             ✘
tsx                           ✘ typescript-language-serv…   None                          ✘                             ✘                             ✘
twig                          None                          None                          ✘                             ✘                             ✘
typescript                    ✘ typescript-language-serv…   None                          ✘                             ✘                             ✘
v                             ✘ vls                         None                          ✘                             ✘                             ✘
vala                          ✘ vala-language-server        None                          ✘                             ✘                             ✘
verilog                       ✘ svlangserver                None                          ✘                             ✘                             ✘
vue                           ✘ vls                         None                          ✘                             ✘                             ✘
wgsl                          ✘ wgsl_analyzer               None                          ✘                             ✘                             ✘
yaml                          ✘ yaml-language-server        None                          ✘                             ✘                             ✘
zig                           ✘ zls                         None                          ✘                             ✘                             ✘
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And yes I did do a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install solargraph
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp /Users/sjohnson/helix/languages.toml ~/.config/helix/languages.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;as per &lt;a href=&quot;https://github.com/helix-editor/helix/issues/340&quot;&gt;this&lt;/a&gt;.  And then a&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install --user-install solargraph
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(which fails since I'm an RVM user) so then a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install solargraph
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was still left without syntax highlighting or code completion for Ruby.  Alas.&lt;/p&gt;

&lt;p&gt;Actually I just figured it out.  Solargraph is an executable gem and when you run it like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;solargraph stdio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It runs as a LSP server which then Helix can use for autocomplete.  It still doesn't color code the syntax but the autocomplete options were slick as all get out.  Absolute Kudos here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: I got this to work one time.  A second go around, I was entirely unable to make it work.&lt;/p&gt;

&lt;h2 id=&quot;helix-weirdness&quot;&gt;Helix Weirdness&lt;/h2&gt;

&lt;p&gt;I tried to brew install helix as per the instructions.  This led to my needing to re-install XCode which still isn't done.  I got past it with a pure Rust install and then using Cargo.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;h3 id=&quot;my-original-conclusion&quot;&gt;My Original Conclusion&lt;/h3&gt;

&lt;p&gt;I really, really, really wanted to make the shift away from TextMate 2 into something written in Rust.  I suspect I'll experiment with Lapce since it supports a mouse.  I'm deeply sorry that Helix didn't work out.  I could, maybe, make the transition to character mode editing if highlighting worked (and I'm sure with the right sorcery it would; I'm just too old to mess about any more).&lt;/p&gt;

&lt;p&gt;Overall it is very early in the Rust editor space and what I use is frightfully mature – crappy quality but damn mature.  I hope that in another year or so, I'll have better options.&lt;/p&gt;

&lt;h3 id=&quot;my-current-conclusion&quot;&gt;My Current Conclusion&lt;/h3&gt;

&lt;p&gt;I wrote this on a Friday morning in the fit of rage inspired by another horrific experience (I hate crashes).  On Saturday morning it showed up on Hacker News and someone who I didn't know (Hello and thank you again; I'm sorry I can't remember your handle) messaged me and say &quot;Here's a Zed invite&quot;'.  I just finished reviewing Zed and its awfully impressive.  I think enough of it that I'm going to try actually shifting my usage away from TextMate into Zed for next week (I'm also intrigued by Lapce but I think the next release is where I need to be).&lt;/p&gt;

&lt;p&gt;Zed looks damn good.&lt;/p&gt;

&lt;p&gt;Update the Next Morning: I've now been using Zed as both a document and code editor.  Markdown support is good and it is quite functional as a document editor.  As a code editor, I'm missing auto complete and syntax highlighting but I'm surving and the overall experience is lovely.&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Kibi is notable for being a clone of &lt;a href=&quot;https://github.com/antirez/kilo&quot;&gt;Kilo&lt;/a&gt; by &lt;a href=&quot;https://github.com/antirez&quot;&gt;AntiRez&lt;/a&gt;; Kilo is one of the great current illustrative lessons in software engineering&lt;/li&gt;
  &lt;li&gt;Zed is conceptual afaict - exists only on a web page; sounds great but absolutely NOT filling&lt;/li&gt;
  &lt;li&gt;Zee explicitly doesn't load the &lt;a href=&quot;https://github.com/tree-sitter/tree-sitter-ruby&quot;&gt;Ruby TreeSitter&lt;/a&gt; grammar; for Ghu's sake Zee, Why?  It isn't like you have an anti-package philosophy like Pepper&lt;/li&gt;
  &lt;li&gt;Zee is absolutely impressive.  Just watching the crates it uses as it compiles is like a laundry list of editor related goodness (yes I'm an editor wonk)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 08 Jul 2022 08:59:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2022/07/08/rust-alternatives-to-textmate-2-the-agony-of-despair.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2022/07/08/rust-alternatives-to-textmate-2-the-agony-of-despair.html</guid>
        
        <category>rust</category>
        
        <category>editor</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Registering a Domain with Name Silo</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01147.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I needed to register a .IO domain today.  Amazon had .io domains at &lt;strong&gt;$71&lt;/strong&gt; per and Google had them at &lt;strong&gt;$60&lt;/strong&gt;.  A quick check with my &lt;a href=&quot;https://nickjanetakis.com/blog/why-i-have-started-to-move-my-domains-from-internetbs-to-namesilo&quot;&gt;guru of cheapness&lt;/a&gt;, Nick Janetakis, said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.namesilo.com/&quot;&gt;NameSilo.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And he convinced me.  Here are some tips:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Do not accept any of their options.&lt;/li&gt;
  &lt;li&gt;Just the domain, Sir, just the domain.&lt;/li&gt;
  &lt;li&gt;Use DDOS protection from CloudFlare instead of their option.  CloudFlare is free.&lt;/li&gt;
  &lt;li&gt;Once you are registered then the option you likely need is to create an A record.  This is done by selecting the domain from the Domain Manager view and then clicking the blue icon.&lt;/li&gt;
  &lt;li&gt;Amazon is way prettier but double the price is a hard sell.&lt;/li&gt;
  &lt;li&gt;After you create it, wait some period of time and ping it.  Verify the ip address is yours.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nickjanetakis.com/blog/why-i-have-started-to-move-my-domains-from-internetbs-to-namesilo&quot;&gt;Review of NameSilo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nickjanetakis.com/blog/how-to-transfer-a-domain-name-with-zero-downtime&quot;&gt;Mass Migration to NameSilo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 07 Jul 2022 09:12:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/dns/2022/07/07/registering-a-domain-with-name-silo.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/dns/2022/07/07/registering-a-domain-with-name-silo.html</guid>
        
        <category>dns</category>
        
        
        <category>dns</category>
        
      </item>
    
      <item>
        <title>Creating a Rails App Using JumpStart Pro</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMAGE_2022-07-05_18_58_55.jpg&quot; alt=&quot;The view of the shelling of Kharkiv at 4 am&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;The view of the shelling of Kharkiv at 4 am&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following blog post is an excerpt from a series of articles I'm working on about JumpStart Pro.  I found myself referring to the steps below that I thought it might be generally useful for people.&lt;/p&gt;

&lt;p&gt;I'm going to walk you through the &quot;post purchase&quot; experience with Jump Start Pro (JSP).  This will guide you through creating a new app using JSP.&lt;/p&gt;

&lt;h2 id=&quot;step-1-cloning-an-app-into-your-github&quot;&gt;Step 1: Cloning an App Into Your Github&lt;/h2&gt;

&lt;p&gt;Here's what you do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Purchase your Jumpstart Pro license.&lt;/li&gt;
  &lt;li&gt;Log in to &lt;a href=&quot;https://Jumpstartrails.com/&quot;&gt;https://Jumpstartrails.com/&lt;/a&gt; if you haven't already.&lt;/li&gt;
  &lt;li&gt;Click on your license name.&lt;/li&gt;
  &lt;li&gt;You will end up at a page which tells you to visit your Github repo.  You need to goto: &lt;a href=&quot;https://github.com/orgs/Jumpstart-pro&quot;&gt;https://github.com/orgs/Jumpstart-pro&lt;/a&gt;.  This in turn will take you here: &lt;a href=&quot;https://github.com/Jumpstart-pro&quot;&gt;https://github.com/Jumpstart-pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Click into the Rails repository &lt;a href=&quot;https://github.com/Jumpstart-pro/Jumpstart-pro-rails&quot;&gt;https://github.com/Jumpstart-pro/Jumpstart-pro-rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Click the green Use This Template button.&lt;/li&gt;
  &lt;li&gt;Change the owner to be &lt;strong&gt;your&lt;/strong&gt; github name&lt;/li&gt;
  &lt;li&gt;Enter the name of the NEW repo:&lt;/li&gt;
  &lt;li&gt;Set your description if you care (I never do).&lt;/li&gt;
  &lt;li&gt;Change the setting to be &lt;strong&gt;private&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;I checked off [ ] include all branches (no clue if that was right or not)&lt;/li&gt;
  &lt;li&gt;Click the green &lt;strong&gt;Create repository&lt;/strong&gt; from template button&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-2-getting-that-cloned-app-onto-your-machine&quot;&gt;Step 2: Getting that Cloned App Onto Your Machine&lt;/h2&gt;

&lt;p&gt;Github is going to clone the Jumpstart pro rails repo over to your personal github account.  Here's what's next&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;On your new repo, click the green &lt;strong&gt;Code&lt;/strong&gt; drop down and get the clone url .&lt;/li&gt;
  &lt;li&gt;On your development machine, change to your local development directory and clone the repo: git clone (what you copied)&lt;/li&gt;
  &lt;li&gt;Set up your local ruby to be 3.1 if you don't have it.&lt;/li&gt;
  &lt;li&gt;Run a bundle install&lt;/li&gt;
  &lt;li&gt;Edit config/database.yml and change database names as needed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you want to run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/rails db:create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-setup-and-getting-to-green-tests-in-a-rails-7-world&quot;&gt;Step 3: Setup and Getting to Green Tests in a Rails 7 World&lt;/h2&gt;

&lt;p&gt;When you're starting with something complex that someone else built then tests are always, always, always your friend.  So this means that you start with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/rails test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is going to fail but we're working from failure to success (a red / green refactor approach).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run npm install&lt;/li&gt;
  &lt;li&gt;Run yarn install –check-files (Disclaimer – the whole asset pipeline largely remains a mystery to me; I think this is needed but, for all I really know, running it could kill Santa's elves and invoke the apocalypse).&lt;/li&gt;
  &lt;li&gt;Run bin/rails test - if this passes, GREAT!  But if you get the error: DRb::DRbRemoteError: The asset &quot;application.js&quot; is not present in the asset pipeline. then revert your node version back to 16.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's how to check your node version:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ node -v
v18.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just like ruby has RVM, node has &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;NVM&lt;/a&gt; (node version manager) so install that.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nvm install 16.3.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you need to build the JavaScript for the app:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails javascript:build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next error you will get, if you try to test again, is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The asset &quot;application.css&quot; is not present in the asset pipeline&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;so now you need to do:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails css:build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now you can do:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/rails test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and you should have passing tests!&lt;/p&gt;

&lt;p&gt;Kudos to: &lt;a href=&quot;https://jumpstartrails.com/discussions/javascript-error-with-ruby-3-1-and-latest-commit&quot;&gt;Benjamin Huoy&lt;/a&gt;  for making this clear to me.  Thank you.&lt;/p&gt;

&lt;h2 id=&quot;step-4-add-your-gems&quot;&gt;Step 4: Add Your Gems&lt;/h2&gt;

&lt;p&gt;My usual next steps are to add my normal suite of gems:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle add url_common &amp;amp;&amp;amp; bundle add text_common &amp;amp;&amp;amp; bundle add date_common &amp;amp;&amp;amp; bundle add time_common
bundle add factory_bot_rails --group test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Disclaimer: The gems named something_common are ones that I wrote.  They are on my &lt;a href=&quot;https://github.com/fuzzygroup&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Jul 2022 02:36:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/07/07/creating-a-rails-app-using-jumpstart-pro.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/07/07/creating-a-rails-app-using-jumpstart-pro.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Surviving Polyphasic Sleeping</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/pizzacrew.jpg&quot; alt=&quot;The fire and rescue crews got a pizza lunch in Kharkiv&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;The fire and rescue crews got a pizza lunch in Kharkiv courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Polyphasic sleep is a bizarre, almost consciousness altered state where your approach to sleep varies widely from the human norm:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Biphasic sleep (or diphasic, bifurcated, or bimodal sleep) is the practice of sleeping during two periods over the course of 24 hours, while polyphasic sleep refers to sleeping multiple times—usually more than two.[1] Each of these is in contrast to monophasic sleep, which is one period of sleep within 24 hours.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Biphasic_and_polyphasic_sleep&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;sidebar-you-arent-alone&quot;&gt;Sidebar: You Aren't Alone&lt;/h2&gt;

&lt;p&gt;With the very modern tendency to think that everything not &quot;normal&quot; is actually new, we tend to ignore our history.  People as famous as Ben Franklin, Nikola Tesla, Winston Churchill and others were polyphasic sleepers.  &lt;a href=&quot;https://supermemo.guru/wiki/Polyphasic_geniuses&quot;&gt;More&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;back-to-me&quot;&gt;Back to Me&lt;/h2&gt;

&lt;p&gt;I am currently engaging in a &lt;em&gt;serious relationship&lt;/em&gt; with Polyphasic sleep – you might, in fact, say that not only have we dated, but we took the plunge and just moved in together.  And, now, we are in that difficult period of trying to adapt a new relationship to our previous partner(s) and life.&lt;/p&gt;

&lt;p&gt;As examples from the last few nights, I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Went to sleep last night at 9:30 and woke up at 2 am and I've been working ever since (its now 2 pm).&lt;/li&gt;
  &lt;li&gt;Went to sleep the night before at 140 am. Woke at 423.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And my schedule is flexible enough that I nap aggressively to make up for this sleep deficit.  Still this is hard so here are my thoughts on surviving this brief descent into sleep madness.&lt;/p&gt;

&lt;h2 id=&quot;rule-1-it-isnt-forever&quot;&gt;Rule 1: It Isn't Forever&lt;/h2&gt;

&lt;p&gt;This doesn't have to be a forever thing.  For myself it is tied to enthusiasm at the early stage of a project; that rapid ideation stage where everything is new, exciting and you just can't wait for the next step in the project.  I currently wake with idea on the tip of my brainstem and rush to get them out.&lt;/p&gt;

&lt;h2 id=&quot;rule-2-construct-for-yourself-a-sleep-cave-or-sleep-hide-like-a-snipers-hide&quot;&gt;Rule 2: Construct for Yourself a &quot;Sleep Cave&quot; or &quot;Sleep Hide&quot; like a Sniper's Hide&lt;/h2&gt;

&lt;p&gt;I can't believe that I'm going to admit this and put it online but here goes.  Not only do I aggressively nap but I even have a &lt;em&gt;particular&lt;/em&gt; napping spot.  And, no, it isn't in the bed my wife and I share.  Why?  Because it isn't considerate to your partner who might have to creep around your weird ass to do something normal like put away laundry or watch a TV show.  Yes, &lt;strong&gt;facepalm&lt;/strong&gt;, it is a palette on the floor as if I was a first grader taking a nap.  And, yes, the windows are covered.  Why?  Because when I do finally sleep, often after falling asleep at the keyboard, utter and total darkness – even at noon – is key.&lt;/p&gt;

&lt;h2 id=&quot;rule-3-mess-with-the-need-to-sleep-with-light-hydration-food-exercise-or-all-of-the-above&quot;&gt;Rule 3: Mess with the Need to Sleep with Light, Hydration, Food, Exercise or All of the Above&lt;/h2&gt;

&lt;p&gt;You can adjust your need to sleep by carefully altering the amount you have of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Light; bright lights wake you up; darkness settles you down.&lt;/li&gt;
  &lt;li&gt;Hydration.  This isn't just caffeine.  Ice cold water works quite well for me.&lt;/li&gt;
  &lt;li&gt;Food.  I snack aggressively.  Pro tip: buy high quality grapes and drop them in the freezer.  This is both low cal and cooling.  Bonus pro tip: sprinkle kool aid mix on the grapes.  Unsweetened if with red grapes, sweetened on green grapes.  This bonus pro tip brought to you by the good folks at &lt;a href=&quot;https://metalhoney.com/&quot;&gt;Metal Honey&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Exercise.  My neighbors now see me go for walks in the middle of the night.  I wonder what they think.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rule-4-be-damn-careful-with-driving-and-heavy-machinery&quot;&gt;Rule 4: Be Damn Careful with Driving and Heavy Machinery&lt;/h2&gt;

&lt;p&gt;When you have been awake for a long time, you should know that this is &lt;strong&gt;risky&lt;/strong&gt;.  As often as possible, I ask my wife to drive.  And, since I do quite a bit of wood working, I am inordinately careful with power tools.&lt;/p&gt;

&lt;h2 id=&quot;rule-5-the-loneliness-is-unbelievably-hard&quot;&gt;Rule 5: The Loneliness is Unbelievably Hard&lt;/h2&gt;

&lt;p&gt;If you wake at 2 am then it can easily be 9 am before you even talk to another soul.  This means that you can be entirely alone for 7 hours.  Even introverts like myself have issues with that.  My solution: I found online friends in other time zones via the Discord chat system.  Say Hi if you see me.&lt;/p&gt;

&lt;h2 id=&quot;rule-6-you-cant-really-do-this-with-a-traditional-day-job&quot;&gt;Rule 6: You Can't Really Do This With a Traditional Day Job&lt;/h2&gt;

&lt;p&gt;I've done this with a traditional day job so it is possible it is very, very hard.  This is something that is better as a consultant.  When you have a day job and they notice you falling asleep on a Zoom call, well, it doesn't go over very well.&lt;/p&gt;

&lt;h2 id=&quot;rule-7-problems-with-coordination-mean-take-a-break&quot;&gt;Rule 7: Problems with Coordination Mean Take a Break&lt;/h2&gt;

&lt;p&gt;Lack of sleep inherently leads to coordination issues.  When you find yourself uncoordinated, that usually means to take a break.  Or a nap. Or both.&lt;/p&gt;

&lt;h2 id=&quot;rule-8-dont-be-an-asshole-polyphasic-sleep-makes-you-an-asshole&quot;&gt;Rule 8: Don't Be an Asshole; Polyphasic Sleep Makes You An Asshole&lt;/h2&gt;

&lt;p&gt;During this, I find often find myself irritated by other people. Be kind and try to settle down your inner asshole.  Lack of sleep inherently makes you grouchy.  To quote Robert A. Heinlein:&lt;/p&gt;

&lt;p&gt;“Happiness consists in getting enough sleep. Just that, nothing more.”
― Robert A. Heinlein, Starship Troopers&lt;/p&gt;

&lt;h2 id=&quot;rule-9-cups-with-lids-and-straws&quot;&gt;Rule 9: Cups with Lids and Straws&lt;/h2&gt;

&lt;p&gt;If you look at rule 7, you are going to have problems with coordination. And do you know what that means? Spills!!!  Save your workspace / keyboard from this in advance with better drink ware.&lt;/p&gt;

&lt;h2 id=&quot;rule-10-you-cannot-multitask&quot;&gt;Rule 10: You Cannot Multitask&lt;/h2&gt;

&lt;p&gt;I'm a firm believer that personal multitasking is a myth. None of us are as productive as we think we are. Be careful with multitasking when sleeping less as you often fail to return to projects and leave tasks hanging. If I have to leave something hanging then I'm very careful to set a reminder on my phone to come back to it.&lt;/p&gt;

&lt;h2 id=&quot;rule-11-you-need-a-supportive-partner&quot;&gt;Rule 11: You Need a supportive partner&lt;/h2&gt;

&lt;p&gt;In closing, I'd note that pulling this off really requires a supportive life partner (if you are partnered). My wife has now seen this enough that she recently remarked &quot;Oh yes I remember this&quot; and was great about all this.&lt;/p&gt;

&lt;p&gt;Treat your partner with additional love and care during these times.  Thank you Rebekah.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Jul 2022 21:59:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2022/07/06/surviving-polyphasic-sleeping.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2022/07/06/surviving-polyphasic-sleeping.html</guid>
        
        <category>startup</category>
        
        <category>health</category>
        
        <category>life</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Software Has Rework Too -- Reworking a Rails App</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/fire_dance.jpg&quot; alt=&quot;fire_dance.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Read On - Yes there's a reason this picture is here …&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;A loving tribute to [Oxide and Friends](https://feeds.transistor.fm/oxide-and-friends); Here there be dark corners of podcast specific in jokes ...&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;delightfully fun&lt;/strong&gt; to actually learn something new.  And it is even more fun to translate something from a different knowledge domain, say &lt;strong&gt;hardware&lt;/strong&gt;, into a domain you understand, say &lt;strong&gt;software&lt;/strong&gt;.  I've been listening to the Oxide and Friends podcast recently and they taught me the concept of &lt;em&gt;Rework&lt;/em&gt; in a hardware assembly context.  What rework means is sometimes things go wrong and you need to &quot;re-work&quot; it.  For example you might fumble the wiring on a component and then need to get out the 30 gauge wire, a microscope and a soldering iron and do what is normally a machine's job it by hand.&lt;/p&gt;

&lt;p&gt;Tonight I found myself in a bind and my solution was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reworking a Rails App&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;let-me-dive-in&quot;&gt;Let me Dive In&lt;/h2&gt;

&lt;p&gt;I do my software engineering primarily in a Rails context.  I know the Oxide folks view Rails and Ruby largely as the &lt;a href=&quot;https://share.transistor.fm/s/f06dd3dd&quot;&gt;devil's own web development tool&lt;/a&gt; – and they're 1,000% wrong – but that's neither here nor there.  Rails and Ruby are my jam.&lt;/p&gt;

&lt;p&gt;I recently started a new project as an exercise to see what Rails 7 could really bring to the table if I tossed out some of my slower moving development practices.  I made the decision to pair Rails 7 with an application template library and that's where the things started to go awry.  I made the decision to enable Stripe in my application template library and then this particular dark hell began.  Here's my (unanswered) message from the support forum:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Anyone know how to get this thing to STOP calling stripe? 
I can't get into the configuration UI because &quot;Error while 
authenticating with Stripe&quot; (its an API key invalid error that 
I can't seem to fix on the Stripe end).  And then it would toss 
an error and shut down the application itself.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I had a web app that I couldn't run in a web server.  Face Palm.  Head Desk.  And, at this point, Bryan and Adam from Oxide are literally laughing at me.  Bite me - guys - let's talk about moment arms …&lt;/p&gt;

&lt;p&gt;After a few days of sitting on this issue (I have many, many things to work on) and getting no response, I pulled up the Rails Stats for the project:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;be rails stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   2120 |   1404 |      54 |     197 |   3 |     5 |
| Helpers              |    318 |    248 |       0 |      31 |   0 |     6 |
| Jobs                 |      7 |      2 |       1 |       0 |   0 |     0 |
| Models               |   1316 |    616 |      16 |      74 |   4 |     6 |
| Mailers              |     25 |     17 |       2 |       1 |   0 |    15 |
| Channels             |     52 |     37 |       3 |       5 |   1 |     5 |
| Views                |   3830 |   3284 |       0 |       0 |   0 |     0 |
| Stylesheets          |   2708 |   2283 |       0 |       0 |   0 |     0 |
| JavaScript           |   1250 |    875 |       0 |       4 |   0 |   216 |
| Libraries            |   5388 |   3878 |      31 |     114 |   3 |    32 |
| Controller tests     |    380 |    306 |      13 |      42 |   3 |     5 |
| Helper tests         |    104 |     83 |       2 |      15 |   7 |     3 |
| Model tests          |    652 |    292 |      13 |      51 |   3 |     3 |
| Mailer tests         |     21 |     18 |       2 |       2 |   1 |     7 |
| Integration tests    |    596 |    494 |      20 |      54 |   2 |     7 |
| System tests         |    391 |    290 |       5 |      27 |   5 |     8 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |  19158 |  14127 |     162 |     617 |   3 |    20 |
+----------------------+--------+--------+---------+---------+-----+-------+
  Code LOC: 12644     Test LOC: 1483     Code to Test Ratio: 1:0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I did not write 12K lines of code.  All of this was the result of underlying generators.  Basically all I had done was:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Scaffold up controllers with data descriptions&lt;/li&gt;
  &lt;li&gt;Write / edit the migrations&lt;/li&gt;
  &lt;li&gt;Install some components&lt;/li&gt;
  &lt;li&gt;Write some model level magic&lt;/li&gt;
  &lt;li&gt;Glue it together with some ooey, gooey rake goodness (I love Rake; I miss &lt;a href=&quot;https://en.wikipedia.org/wiki/Jim_Weirich&quot;&gt;Jim Weirich&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And, technically I had caused this problem – I had enabled the &lt;strong&gt;[ ] Stripe check box&lt;/strong&gt; in the admin UI on the application library.  The fact that I didn't know &lt;em&gt;I APPARENTLY HAD TO, RIGHT THE HELL NOW&lt;/em&gt;, add stripe credentials or my world would end was &lt;strong&gt;NOT&lt;/strong&gt; clear to me.  And please don't tell me &quot;Just go create stripe credentials&quot; – I did.  They didn't work.  I don't know why.  I don't care.&lt;/p&gt;

&lt;p&gt;Apparently I now had:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Software Rework&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;waiting for me.  Damn you Oxide!&lt;/p&gt;

&lt;h2 id=&quot;blogging-helps-engineering&quot;&gt;Blogging Helps Engineering&lt;/h2&gt;

&lt;p&gt;I recently posted a tweet:&lt;/p&gt;

&lt;p&gt;Name four things that made you a better engineer and who taught you them.  Me? 1 - Blogging (@davewiner) . 2. Ruby (@wolframarnold). 3. Unit Tests (@wolframarnold). 4. Pair Programming (@wolframarnold).&lt;/p&gt;

&lt;p&gt;My #1 thing that helped me be a better engineer was blogging.  Why?  Blogging made writing easier and engineering is a &lt;strong&gt;communications process&lt;/strong&gt;.  I may be communicating with a technology but I am &lt;strong&gt;communicating&lt;/strong&gt;.  Blogging freed me from what Ted Nelson used to call &lt;em&gt;The Tyranny of the File&lt;/em&gt; - I don't write files - I tell my blogging tool of choice &quot;give me new post&quot; and then I just open it and go.  The fact that I don't have to worry about naming it, placing it on a file system or uploading it to the web means that I can just focus on my communications.  I didn't used to think that naming files was such a big deal but consider this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ ls -ltr _posts | wc -l 
    1078
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So my blogging tool has 1,078 finished posts (there are 492 drafts also; sigh).  That's 1,500 file naming decisions I would have had to make.  Oy Vey.&lt;/p&gt;

&lt;p&gt;But, you ask, why am I talking about this when I'm discussing rework.  What I have learned over my career is that if I do something new, I'm almost certainly going to have to do it again sometime.  And the best way to make a repeatable process – &lt;strong&gt;write it down&lt;/strong&gt;.  And that's why I have insanely specific blog posts like the one about: &quot;Fixing FactoryBot Validation Name Has Already Been Taken Controller Test or Spec Errors&quot; – I know that someday whatever was at the heart of that particular disaster will come back and hit me with a hammer.  This way I'm at least part of the way there to solving it.&lt;/p&gt;

&lt;p&gt;There is a particular N step process to using the application template I chose and, thankfully, I wrote them all down.  So now I could just:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Trot out that hellish set of steps&lt;/li&gt;
  &lt;li&gt;Find a goat&lt;/li&gt;
  &lt;li&gt;Light a fire&lt;/li&gt;
  &lt;li&gt;Dance in the light of the fire&lt;/li&gt;
  &lt;li&gt;Cast some frothy good rework magic&lt;/li&gt;
  &lt;li&gt;Begin again&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;reworking-a-rails-app&quot;&gt;Reworking a Rails App&lt;/h2&gt;

&lt;p&gt;Here was the process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My original application was in /Users/sjohnson/Sync/coding/rails/readwithscott&lt;/li&gt;
  &lt;li&gt;I ran back through my application library generator and it put a new template application into my github.&lt;/li&gt;
  &lt;li&gt;I cloned that down to my machine into /Users/sjohnson/Sync/coding/rails/readwithscott2&lt;/li&gt;
  &lt;li&gt;I ran through the setup steps for anything build with that application template.  These are currently on my phone and haven't made the blog yet.&lt;/li&gt;
  &lt;li&gt;I then had passing tests.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now I had to integrate two code bases.  One of the magic powers of Rails is that every Rails app is pretty much the same.  So once you learn how to work on one Rails app, you can literally work on any Rails app because all of the setup decisions in terms of file locations have been made for you.  All I needed to do was move over the work I had done.  And this could really be done in terms of re-using the generators in the new application and then moving some files over from the old application.&lt;/p&gt;

&lt;h3 id=&quot;generators&quot;&gt;Generators&lt;/h3&gt;

&lt;p&gt;All I needed to do was:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g scaffold Book
bundle exec rails g scaffold Bibliography
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this created a ton of files and directories.&lt;/p&gt;

&lt;p&gt;All the next steps assume that you are located in the readwithscott2 directory,&lt;/p&gt;

&lt;h2 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h2&gt;

&lt;p&gt;For a Rails app, Gemfile is the canonical source of truth for components so:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp ../readwithscott/Gemfile . 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;migrations&quot;&gt;Migrations&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp ../readwithscott/db/migrations/* db/migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;models&quot;&gt;Models&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp ../readwithscott/app/models/book.rb app/models
cp ../readwithscott/app/models/bibliography.rb app/models
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docs&quot;&gt;Docs&lt;/h2&gt;

&lt;p&gt;I always create a top level project root called docs for every single project ever.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir docs
cp ../readwithscott/docs/* docs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rake-tasks&quot;&gt;Rake Tasks&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp ../readwithscott/lib/tasks/*.rake lib/tasks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;bundle-install&quot;&gt;Bundle Install&lt;/h2&gt;

&lt;p&gt;Bundle install adds the components from the Gemfile into the application and creates the Gemfile.lock file which really matters:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;db-migrations&quot;&gt;Db Migrations&lt;/h2&gt;

&lt;p&gt;Executing the migrations creates the db schema and this was the first bit of madness:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then I got nattered at about a table already existing which made no sense to my addled, sleep deprived mind but I realized that by running the generators twice, I had now two sets of time stamped migrations in my db/migrate directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;20220625084356_create_books.rb
20220628085120_create_books.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Easy fix – just delete the newer migration and then re-migrate:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-the-rake-task&quot;&gt;Run the Rake Task&lt;/h2&gt;

&lt;p&gt;A Rake task in Rails runs scripting independent of your core data models.  Think of it as glue / integration code and I had two rake tasks which would seed the data into the system.  A quick run and I had created 206 records based on parsing a markdown file.&lt;/p&gt;

&lt;h2 id=&quot;and-now-i-can-finally-see-it&quot;&gt;And Now I can Finally See It!&lt;/h2&gt;

&lt;p&gt;Keep in mind that I had never actually seen this application as once I set it up, I then terminated my server side process and simply worked in the repl and / or the model / rake tasks.  Seeing things makes a fundamental difference so I fired up:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, voila!  My application displayed itself in all its (non-resplendent) glory!&lt;/p&gt;

&lt;h2 id=&quot;and-now-problems-emerge&quot;&gt;And Now Problems Emerge!&lt;/h2&gt;

&lt;p&gt;My first thing to try was to go use the application in a browser and create a new object (book).  This gave me a form page which had no fields – and this baffled me.  My initial thought was to put it aside and add some code to the controller to handle &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2022/06/10/thinking-about-rails-database-objects-and-idempotency.html&quot;&gt;idempotent object saving&lt;/a&gt;.  I've been playing with this lately and had a nice insight.  So I happily ignored the problem and wrote more code.  Sigh.&lt;/p&gt;

&lt;p&gt;And then I stopped – and I thought.  Thinking about hard things is always good.  The application template I'm using, as long as you scaffold the application up with the fields, it generates form fields.  It is true that you don't get form fields that you add later to the database via a secondary migration but the core fields for me (title, author) should be there – and they weren't.&lt;/p&gt;

&lt;p&gt;And then it struck me – I had scaffolded this correctly when I initially created the objects but incorrectly when I generated in the rework.  Here are the two approaches:&lt;/p&gt;

&lt;p&gt;Correct:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g scaffold Bibliography active:boolean title:string user:references
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Incorrect:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g scaffold Bibliography
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I had been lazy the second time and that was now going to cost me.  My first thought was to copy over the files from my original work but now I had changes that needed to be merged.&lt;/p&gt;

&lt;p&gt;I decided to create a save subdirectory under controllers and putting the modified controller into it.  This would let me copy and paste my changes back.  I did that, made a few other changes and all was frothy and good.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is actually not the first time I have done &lt;strong&gt;rework&lt;/strong&gt; on a Rails app.  My problems with the &lt;a href=&quot;https://fuzzyblog.io/blog/2022/06/10/fixing-factorybot-validation-name-has-already-been-taken-controller-test-or-spec-errors.html&quot;&gt;intersections of FactoryBot and RodAuth and the underlying insane meta programming that is buried in RodAuth Rails&lt;/a&gt; led me to rework – I just lacked the phrase.  At least this time I have a &lt;strong&gt;noun&lt;/strong&gt; to recognize what I'm doing.  Thanks Oxide!&lt;/p&gt;

&lt;p&gt;And just as a disclaimer, I don't think that this is inherently a Rails problem – despite it happening to me twice in a Rails context in rapid succession – I'm very deliberately experimenting with new technologies where I don't fully understand the limits.  And that can sometimes bite you – or result in 10 page, Yegge like essays that amount to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rework.  Not just for hardware.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;;-)&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jul 2022 05:36:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/07/02/software-has-rework-too.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/07/02/software-has-rework-too.html</guid>
        
        <category>rails</category>
        
        <category>software_engineering</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Web Based Rust Development Tools</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8538.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I am not, alas, a compiled languages guy.  I do find Rust absolutely fascinating because by inverting the common assumptions, a whole class of software errors are being avoided.  Given that we live in a constant shite show of software quality, any engineering practices that generate better code are &lt;strong&gt;highly desirable&lt;/strong&gt;.  Discovering testing and pair programming for me was I suspect as life changing as Rust feels to a C programmer.&lt;/p&gt;

&lt;p&gt;Even though I don't really do compiled stuff, I do admit to being more than a bit of a language wonk – if it is weird, interpreted and has a repl or is a stream process, well, that I'm good at.  My tools have included Ruby, Elixir, Python, JavaScript, PHP, Perl, Prolog (both Borland and Quintus on Sun 2), , Perl, VB, Awk, HyperAwk, Elm, OmniMark and others. So learning a bit about Rust feels pretty normal to me.&lt;/p&gt;

&lt;p&gt;But I digress – this is about Rust.  Even tho I don't really compile, I'm a solid writer and I'm happy to ask questions and compile answers.&lt;/p&gt;

&lt;h2 id=&quot;web-based-rust-tools&quot;&gt;Web Based Rust Tools&lt;/h2&gt;

&lt;p&gt;I posed this question on Twitter tonight:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Given the amazing response to my comments about programs written in Rust, I would appreciate links to great Rust resources and, particularly, web based tools that Rust devs use. #rustlang 
@steveklabnik, @bcantrill &lt;a href=&quot;https://twitter.com/fuzzygroup/status/1542283289867833344&quot;&gt;PermaLink&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, happily, a ton of very smart people took the time to reply.  I compiled all the tools suggested below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://play.rust-lang.org&quot;&gt;http://play.rust-lang.org&lt;/a&gt; - online repl / experimentation tool&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.rs&quot;&gt;http://docs.rs&lt;/a&gt; - documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/nightly-rustc/&quot;&gt;https://doc.rust-lang.org/nightly/nightly-rustc/&lt;/a&gt; - nightly build docs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forge.rust-lang.org/&quot;&gt;https://forge.rust-lang.org/&lt;/a&gt; - a repository of supplementary docs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rust.godbolt.org&quot;&gt;https://rust.godbolt.org&lt;/a&gt; - compiler explorer&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://app.quicktype.io&quot;&gt;http://app.quicktype.io&lt;/a&gt; - JSON parser generator&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://crates.io/&quot;&gt;https://crates.io/&lt;/a&gt; - component registry - yes I added this; this is a development tool because finding components is a part of development&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;adding-to-this&quot;&gt;Adding to This&lt;/h2&gt;

&lt;p&gt;Drop me a line on Twitter where I am @fuzzygroup and I'm happy to add any tools you find.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jun 2022 01:52:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2022/06/30/web-based-rust-development-tools.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2022/06/30/web-based-rust-development-tools.html</guid>
        
        <category>rust</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Where Is My Rails 7 Master Key</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01200.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Your Rails 7 master key is stored in:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/master.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 23 Jun 2022 05:15:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/23/where-is-my-rails-7-master-key.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/23/where-is-my-rails-7-master-key.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>An Annotated Startup History Bibliography</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:33:38.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I've been reading High Tech case studies now since the 80s – just after I entered the business.  &lt;a href=&quot;https://twitter.com/bcantrill&quot;&gt;Bryan Cantrill&lt;/a&gt; from &lt;a href=&quot;https://feeds.transistor.fm/oxide-and-friends&quot;&gt;Oxide Computer's podcast&lt;/a&gt; inspired me to get all my books out and order them on a rough historical basis.  I thought listing them here might be interesting to someone.  All of these I've read and there are a ton of lessons for entrepreneurs here.  I put rough notes next to some of them &lt;strong&gt;in bold&lt;/strong&gt; after the author name in quotes.&lt;/p&gt;

&lt;h2 id=&quot;change-log&quot;&gt;Change Log&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2022-06-27 - Added book of the week&lt;/li&gt;
  &lt;li&gt;2022-06-26 - Cleaned my bookcase and looked for other books in this category and added entries for How Would You Move Mount Fuji (Microsoft category), Go To (Misc / Software Category), Building a Successful Software Business (Misc / Software Category), Side Hustles (Misc / Software Category), Facebook by Steven Levy (Web 2 category), Tim Cook (Apple Category), A Piece of the Computer Pie (IBM Category), In Search of Stupidity (Misc / Software Category), Crypto (Misc / Software Category), Smart and Gets Things Done (Software Category), The Effective Engineer (Misc / Software Category), Creativity Inc (Apple Category), The Chip (Intel Category), Lean In (Web 2 Category), No Such Thing as a Free Gift (Microsoft Category), The Phoenix Project (Misc / Software Category)&lt;/li&gt;
  &lt;li&gt;2022-06-26 - Added Sub Categories in the Apple Section&lt;/li&gt;
  &lt;li&gt;2022-06-26 - Added Sub Categories in the Web 2 Section&lt;/li&gt;
  &lt;li&gt;2022-06-23 - Started adding links, added books suggested on Twitter, Added Gaskins on PowerPoint History; fixed typos (how did I possibly misspell Torvalds; clearly was stupid yesterday)&lt;/li&gt;
  &lt;li&gt;2022-06-23 - Apologies for where an Audible audio book is linked instead of hard or paperback; Amazon is inconsistent with this&lt;/li&gt;
  &lt;li&gt;2022-06-23 - Added a bunch more notes from reading these.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book-of-the-week&quot;&gt;Book of the Week&lt;/h2&gt;
&lt;h3 id=&quot;in-search-of-stupidity-over-20-years-of-high-tech-marketing-disasters&quot;&gt;In Search of Stupidity: Over 20 Years of High Tech Marketing Disasters&lt;/h3&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;https://images-na.ssl-images-amazon.com/images/I/5177-0Bgz4L._SX336_BO1,204,203,200_.jpg&quot; alt=&quot;High Tech Stupidity&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.amazon.com/Search-Stupidity-High-Tech-Marketing-Disasters/dp/1590591046/&quot;&gt;View on Amazon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an absolute gem of a book.  There is a lot of humor here but the best bits, the parts I underline, start on Page 308 where he outlines positioning for a software product.  In an extremely telling bit of analysis, he opens the book by looking at software companies in 1984 and then 2001. Even though there were a number of companies both larger than Microsoft or approximately Microsoft's size, in 2001, the next runner up, Adobe, is 1/20th of Microsoft's size.  This he attributes to Microsoft being the only company &quot;that never made a fatal, stupid mistake&quot;.  And, yes, Ashton-Tate is part of the 1984 list.  A bit dated but it is also timeless.  &lt;strong&gt;Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;ibm--mainframes--super-computers&quot;&gt;IBM / Mainframes / Super Computers&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Supermen-Seymour-Technical-Wizards-Supercomputer/dp/0471048852/ref=sr_1_2?crid=JRJ13GN6RB6T&amp;amp;keywords=The+Supermen&amp;amp;qid=1656009625&amp;amp;sprefix=the+supermen%2Caps%2C85&amp;amp;sr=8-2&quot;&gt;The Supermen&lt;/a&gt; by Charles J. Murray; &quot;&lt;strong&gt;The power of persistence&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Who-Says-Elephants-Cant-Dance/dp/0060523808/ref=sr_1_1?crid=3R418BAAFAFE3&amp;amp;keywords=Who+Says+Elephants+Can%27t+Dance&amp;amp;qid=1656009642&amp;amp;sprefix=who+says+elephants+can%27t+dance%2Caps%2C94&amp;amp;sr=8-1&quot;&gt;Who Says Elephants Can't Dance&lt;/a&gt; by Louis Gerstner Jr&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Establishment-Katharine-Davis-Fishman/dp/0060112832/ref=sr_1_1?crid=32LR7W5WTOFOV&amp;amp;keywords=The+Computer+Establishment+fishman&amp;amp;qid=1656009671&amp;amp;sprefix=the+computer+establishment+fishman%2Caps%2C108&amp;amp;sr=8-1&quot;&gt;The Computer Establishment&lt;/a&gt; by Katherine Davis Fishman&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Big-Blues-Unmaking-Paul-Carroll/dp/0517591979/ref=sr_1_1?crid=11ZC9TUI26S26&amp;amp;keywords=Big+Blues+Carroll&amp;amp;qid=1656009697&amp;amp;sprefix=big+blues+carroll%2Caps%2C84&amp;amp;sr=8-1&quot;&gt;Big Blues&lt;/a&gt; by Paul Carroll&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/IBM-Redux-Gerstner-Business-Turnaround/dp/0887309437/ref=sr_1_1?crid=3LTE1H6VXCE2A&amp;amp;keywords=IBM+Redux&amp;amp;qid=1656009717&amp;amp;sprefix=ibm+redux%2Caps%2C85&amp;amp;sr=8-1&quot;&gt;IBM Redux&lt;/a&gt; by Doug Garr&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/000-Dollars-Idea-Entrepreneur-Billionaire/dp/1557048649/ref=sr_1_1?crid=26Z6GLZLO79KW&amp;amp;keywords=1%2C000+Dollars+and+an+Idea&amp;amp;qid=1656009740&amp;amp;sprefix=1%2C000+dollars+and+an+idea%2Caps%2C75&amp;amp;sr=8-1&quot;&gt;1,000 Dollars and an Idea&lt;/a&gt; by Sam Wyly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computing-Middle-Ages-Trenches-1955-1983/dp/1403315175/ref=sr_1_1?crid=1FMZ0OPAXYWTF&amp;amp;keywords=Computing+in+the+Middle+Ages&amp;amp;qid=1656009758&amp;amp;sprefix=computing+in+the+middle+ages%2Caps%2C87&amp;amp;sr=8-1&quot;&gt;Computing in the Middle Ages&lt;/a&gt; by Severo Ornstein&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Computer-Wars-Future-Western-Technology/dp/0812921569/ref=sr_1_2?crid=2CYWMR96Q0IDO&amp;amp;keywords=Computer+Wars+ferguson&amp;amp;qid=1656009776&amp;amp;sprefix=computer+wars+ferguson%2Caps%2C62&amp;amp;sr=8-2&quot;&gt;Computer Wars&lt;/a&gt; by Charles H Ferguson and Charles R. Morris&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-IBM-Shaping-Industry-Technology/dp/0262161478/ref=sr_1_1?crid=193Q0KQXOLO0D&amp;amp;keywords=building+ibm+pugh&amp;amp;qid=1656009796&amp;amp;sprefix=building+ibm+pugh%2Caps%2C67&amp;amp;sr=8-1&quot;&gt;Building IBM&lt;/a&gt; by Pugh&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Eniac-Triumphs-Tragedies-Worlds-Computer/dp/0802713483/ref=sr_1_1?crid=3922ZLR3IHL2F&amp;amp;keywords=Eniac+McCartney&amp;amp;qid=1656009815&amp;amp;sprefix=eniac+mccartney%2Caps%2C78&amp;amp;sr=8-1&quot;&gt;Eniac&lt;/a&gt; by McCartney&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0262620758/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;A Few Good Men from Univac by Lundstrom&lt;/a&gt;; &lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/piece-computer-pie-Ben-Voth/dp/0872011364/ref=sr_1_1?crid=1P48FP9KNFY54&amp;amp;keywords=a+piece+of+the+computer+pie+by+Ben+Voth&amp;amp;qid=1656293811&amp;amp;s=audible&amp;amp;sprefix=a+piece+of+the+computer+pie+by+ben+voth%2Caudible%2C65&amp;amp;sr=1-1&quot;&gt;A Piece of the Computer Pie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;minis&quot;&gt;Minis&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Ultimate-Entrepreneur-Digital-Equipment-Corporation/dp/0809245590/ref=sr_1_1?crid=1Q6E1UWGOCM9R&amp;amp;keywords=The+Ultimate+Entrepreneur&amp;amp;qid=1656009989&amp;amp;sprefix=the+ultimate+entrepreneur%2Caps%2C90&amp;amp;sr=8-1&quot;&gt;The Ultimate Entrepreneur&lt;/a&gt; by Glenn Rifkin and George Harrar; &quot;&lt;strong&gt;A fantastic read.  Cantrill argues in his podcast that DEC had too many people – and they did – but they grew up in an era where you made everything right down to the cases.  That leads to an incredible number of people.&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Riding-Runaway-Horse-Decline-Laboratories/dp/0316489190/ref=sr_1_1?crid=28QBJ4A1DGO3Q&amp;amp;keywords=Riding+the+Runaway+Horse&amp;amp;qid=1656010007&amp;amp;sprefix=riding+the+runaway+horse%2Caps%2C264&amp;amp;sr=8-1&quot;&gt;Riding the Runaway Horse&lt;/a&gt; by Charles Kenney&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Soul-New-Machine-Tracy-Kidder/dp/0316491977/ref=sr_1_1?crid=34OVARBMIXNOI&amp;amp;keywords=Soul+of+a+New+Machine&amp;amp;qid=1656010023&amp;amp;sprefix=soul+of+a+new+machine%2Caps%2C172&amp;amp;sr=8-1&quot;&gt;Soul of a New Machine&lt;/a&gt; by Tracy Kidder; &quot;&lt;strong&gt;The canonical high tech read; I've been re-reading this book roughly once a decade since the 80s&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/1576753050/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;DEC is Dead Long Live DEC&lt;/a&gt; by Schein; &lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;internet-history&quot;&gt;Internet History&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Where-Wizards-Stay-Up-Late/dp/0684832674/ref=sr_1_1?crid=QBSHOC7VBNWB&amp;amp;keywords=Where+Wizards+Stay+Up+Late&amp;amp;qid=1656011602&amp;amp;sprefix=where+wizards+stay+up+late%2Caps%2C119&amp;amp;sr=8-1&quot;&gt;Where Wizards Stay Up Late&lt;/a&gt; by Katie Hefner and Matthew Lyon&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Nerds-2-0-1-Stephen-Segaller/dp/1575001063/ref=sr_1_1?crid=2LOGYRG5WJ3FV&amp;amp;keywords=Nerds+a+Brief+History+of+the+Internet&amp;amp;qid=1656011618&amp;amp;sprefix=nerds+a+brief+history+of+the+internet%2Caps%2C93&amp;amp;sr=8-1&quot;&gt;Nerds a Brief History of the Internet&lt;/a&gt; by Segaller&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/History-Internet-Chronology-1843-Present/dp/1576071189/ref=sr_1_1?crid=3ULFRTIXWVT61&amp;amp;keywords=History+of+the+Internet+poole+moschovitis&amp;amp;qid=1656011663&amp;amp;sprefix=history+of+the+internet+poole+moschovitis%2Caps%2C53&amp;amp;sr=8-1&quot;&gt;History of the Internet&lt;/a&gt; by Moschovitis, Poole, Schuyler, Senfit&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Casting-Net-ARPANET-INTERNET-Beyond/dp/0201876744/ref=sr_1_1?crid=2RAE7FTXJ9T9W&amp;amp;keywords=Casting+the+Net+Salus&amp;amp;qid=1656010091&amp;amp;sprefix=casting+the+net+salus%2Caps%2C64&amp;amp;sr=8-1&quot;&gt;Casting the Net&lt;/a&gt; by Salus; &quot;&lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-phone-company&quot;&gt;The Phone Company&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Idea-Factory-Great-American-Innovation/dp/0143122797/ref=sr_1_1?crid=2SRWJWTGTSKEQ&amp;amp;keywords=The+Idea+Factory+gertner&amp;amp;qid=1656011687&amp;amp;sprefix=the+idea+factory+gertner%2Caps%2C79&amp;amp;sr=8-1&quot;&gt;The Idea Factory&lt;/a&gt; by Jon Gertner&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Telephone-First-Hundred-John-Brooks/dp/0060105402/ref=sr_1_1?crid=3T0QLW4ZQA9PF&amp;amp;keywords=Telephone+john+brooks&amp;amp;qid=1656011709&amp;amp;sprefix=telephone+john+brooks%2Caps%2C63&amp;amp;sr=8-1&quot;&gt;Telephone&lt;/a&gt; by John Brooks&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/End-Line-Rise-Fall-AT/dp/0743250257/ref=sr_1_1?crid=148DTIYWL5G3Y&amp;amp;keywords=End+of+the+Line+cauley&amp;amp;qid=1656011726&amp;amp;sprefix=end+of+the+line+cauley%2Caps%2C73&amp;amp;sr=8-1&quot;&gt;End of the Line&lt;/a&gt; by Leslie Cauley&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Tales-ITT-insiders-Thomas-Burns/dp/0395184886/ref=sr_1_1?crid=2CYO35X8BRBEE&amp;amp;keywords=Tales+of+ITT&amp;amp;qid=1656011746&amp;amp;sprefix=tales+of+itt%2Caps%2C62&amp;amp;sr=8-1&quot;&gt;Tales of ITT&lt;/a&gt; by Thomas S. Burns&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mit&quot;&gt;MIT&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dream-Machine-M-Mitchell-Waldrop/dp/1732265119/ref=sr_1_1?crid=1HSOEA7PFTPGO&amp;amp;keywords=mitchell+waldrop&amp;amp;qid=1656011794&amp;amp;s=books&amp;amp;sprefix=Mitchell+waldrop%2Cstripbooks%2C59&amp;amp;sr=1-1&quot;&gt;The Dream Machine&lt;/a&gt; by Mitchell Waldrop&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/1501196456?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&quot;&gt;Endless Frontier: Vannevar Bush&lt;/a&gt; by Zachary; &lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;xerox&quot;&gt;Xerox&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dealers-Lightning-Xerox-PARC-Computer/dp/0887309895/ref=sr_1_1?crid=371JECQDOTVR3&amp;amp;keywords=Dealers+of+Lightning&amp;amp;qid=1656011854&amp;amp;s=books&amp;amp;sprefix=dealers+of+lightning%2Cstripbooks%2C73&amp;amp;sr=1-1&quot;&gt;Dealers of Lightning&lt;/a&gt; by Michael Hiltzik; &quot;&lt;strong&gt;It makes you realize just how bright the PARC folks were; sort of a mini manhattan project for computing&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Copies-Seconds-Communication-Breakthrough-Gutenberg-Chester-ebook/dp/B002Q0KS04/ref=sr_1_1?crid=SXMB2BUCLG03&amp;amp;keywords=Copies+in+Seconds&amp;amp;qid=1656011874&amp;amp;s=books&amp;amp;sprefix=copies+in+seconds%2Cstripbooks%2C84&amp;amp;sr=1-1&quot;&gt;Copies in Seconds&lt;/a&gt; by David Owen; &quot;&lt;strong&gt;Explains how Xerox afforded PARC.  Today we don't realize the power of making copies but it was transformative&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plato&quot;&gt;Plato&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555/ref=sr_1_1?crid=2XWIBK3PSA1A9&amp;amp;keywords=The+Friendly+Orange+Glow&amp;amp;qid=1656011897&amp;amp;s=books&amp;amp;sprefix=the+friendly+orange+glow%2Cstripbooks%2C88&amp;amp;sr=1-1&quot;&gt;The Friendly Orange Glow&lt;/a&gt; by Brian Dear; &quot;&lt;strong&gt;One of my absolute favorites; everything we do online today happened here first (and then in Lotus Notes by Ray Ozzie but thank the FSM that went away)&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;early-silicon-valley&quot;&gt;Early Silicon Valley&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Fire-in-Valley-audiobook/dp/B071YYZJG5/ref=sr_1_1?crid=1WSRBS8QCBVEI&amp;amp;keywords=Fire+in+the+Valley&amp;amp;qid=1656011951&amp;amp;s=books&amp;amp;sprefix=fire+in+the+valley%2Cstripbooks%2C59&amp;amp;sr=1-1&quot;&gt;Fire in the Valley&lt;/a&gt; by Michael Swaine; &quot;&lt;strong&gt;The second high tech book I ever ready&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Accidental-Empires-Silicon-Millions-Competition/dp/0887308554/ref=sr_1_1?crid=1W4ZCWNRJEQH4&amp;amp;keywords=Accidental+Empires&amp;amp;qid=1656011965&amp;amp;s=books&amp;amp;sprefix=accidental+empires%2Cstripbooks%2C68&amp;amp;sr=1-1&quot;&gt;Accidental Empires&lt;/a&gt; by Robert Cringely&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Bill-Dave-Hewlett-Packard-Greatest/dp/1591841526/ref=sr_1_1?crid=ZZSTD5HZ8MZL&amp;amp;keywords=Bill+%26+Dave&amp;amp;qid=1656011987&amp;amp;s=books&amp;amp;sprefix=bill+%26+dave%2Cstripbooks%2C66&amp;amp;sr=1-1&quot;&gt;Bill &amp;amp; Dave&lt;/a&gt; by Michael Malone&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/What-Dormouse-Said-Counterculture-Personal/dp/0143036769/ref=sr_1_1?crid=3HEXB7MNNYOR&amp;amp;keywords=What+The+Dormouse+Said&amp;amp;qid=1656012008&amp;amp;s=books&amp;amp;sprefix=what+the+dormouse+said%2Cstripbooks%2C50&amp;amp;sr=1-1&quot;&gt;What The Dormouse Said&lt;/a&gt; by John Markoff&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Broken-Genius-Shockley-Electronic-Macmillan/dp/1403988153/ref=sr_1_2?crid=1TAA1VGYHIFJC&amp;amp;keywords=Broken+Genius&amp;amp;qid=1656012023&amp;amp;s=books&amp;amp;sprefix=broken+genius%2Cstripbooks%2C90&amp;amp;sr=1-2&quot;&gt;Broken Genius&lt;/a&gt; by Joel Shurkin; &quot;&lt;strong&gt;The first proof that brains doesn't equal ethics; this was followed by Patrick Naughton, Hans Reiser and one of the php core team members&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/HP-Way-Hewlett-Business-Essentials/dp/0060845791/ref=sr_1_1?crid=2WGKCBMHIGXWS&amp;amp;keywords=The+HP+Way&amp;amp;qid=1656012044&amp;amp;s=books&amp;amp;sprefix=the+hp+way%2Cstripbooks%2C87&amp;amp;sr=1-1&quot;&gt;The HP Way&lt;/a&gt; by David Packard&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Siliconnections-Coming-Age-Electronic-Era/dp/007042411X/ref=sr_1_1?crid=BI534PM0EYTB&amp;amp;keywords=Siliconnections&amp;amp;qid=1656012060&amp;amp;s=books&amp;amp;sprefix=siliconnections%2Cstripbooks%2C99&amp;amp;sr=1-1&quot;&gt;Siliconnections&lt;/a&gt; by Forest Mims III&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hackers-Heroes-Computer-Revolution-Anniversary/dp/B017RV1I3C/ref=sr_1_1?crid=11Y5YO37KGNXX&amp;amp;keywords=Hackers+levy&amp;amp;qid=1656012076&amp;amp;s=books&amp;amp;sprefix=hackers+levy%2Cstripbooks%2C92&amp;amp;sr=1-1&quot;&gt;Hackers&lt;/a&gt; by Steven Levy; &quot;&lt;strong&gt;The first high tech book I ever read; utterly engrossing&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Tandys-Money-Machine-Charles-Electronics/dp/0916371123/ref=sr_1_1?crid=1VCKRFPVJLEY&amp;amp;keywords=Tandy%27s+Money+Machine&amp;amp;qid=1656012094&amp;amp;s=books&amp;amp;sprefix=tandy%27s+money+machine%2Cstripbooks%2C157&amp;amp;sr=1-1&quot;&gt;Tandy's Money Machine&lt;/a&gt; by Irvin Farman; &quot;&lt;strong&gt;A deep dive into the Tandy ecosystem where I grew up&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Sinclair-Sunrise-Technology-Ian-Adamson/dp/0140087745/ref=sr_1_1?crid=1C469XXFR6BB5&amp;amp;keywords=Sinclair+and+the+Sunrise+Technology&amp;amp;qid=1656012110&amp;amp;s=books&amp;amp;sprefix=sinclair+and+the+sunrise+technology%2Cstripbooks%2C61&amp;amp;sr=1-1&quot;&gt;Sinclair and the Sunrise Technology&lt;/a&gt; by Ian Adamson and Richard Kennedy; &quot;&lt;strong&gt;Understanding the ZX 81&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Were-Burning-Entrepreneurs-Electronic-Revolution/dp/0465091172/ref=sr_1_1?crid=35SHQLDCEKZCU&amp;amp;keywords=We+Were+Burning&amp;amp;qid=1656012131&amp;amp;s=books&amp;amp;sprefix=we+were+burning%2Cstripbooks%2C232&amp;amp;sr=1-1&quot;&gt;We Were Burning&lt;/a&gt; by Bob Johnstone; &quot;&lt;strong&gt;A good look at Japan&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/The-Innovators-Walter-Isaacson-audiobook/dp/B00M9KICAY/ref=sr_1_1?keywords=the+innovators+walter+isaacson&amp;amp;qid=1656012149&amp;amp;s=books&amp;amp;sprefix=The+Innovators%2Cstripbooks%2C104&amp;amp;sr=1-1&quot;&gt;The Innovators&lt;/a&gt; by Walter Isaacson&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;intel&quot;&gt;Intel&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Inside-Intel-Worlds-Powerful-Company/dp/0452276438/ref=sr_1_1?crid=2ZRFQO4YDU41J&amp;amp;keywords=Inside+Intel&amp;amp;qid=1656013362&amp;amp;s=books&amp;amp;sprefix=inside+intel%2Cstripbooks%2C216&amp;amp;sr=1-1&quot;&gt;Inside Intel&lt;/a&gt; by Tim Jackson&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Andy-Grove-Life-Times-American/dp/1591841399/ref=sr_1_3?crid=17U01TT8JASXV&amp;amp;keywords=Andy+Grove&amp;amp;qid=1656022660&amp;amp;s=books&amp;amp;sprefix=andy+grove%2Cstripbooks%2C313&amp;amp;sr=1-3&quot;&gt;Andy Grove&lt;/a&gt; by Richard Tedlow&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Intel-Trinity-Robert-Important-Company/dp/0062226762/ref=sr_1_1?crid=1I0B97LFTYMMN&amp;amp;keywords=The+Intel+Trinity&amp;amp;qid=1656013378&amp;amp;s=books&amp;amp;sprefix=the+intel+trinity%2Cstripbooks%2C213&amp;amp;sr=1-1&quot;&gt;The Intel Trinity&lt;/a&gt; by Michael Malone; &quot;&lt;strong&gt;Fascinating particularly the bit about walking out the door and exiting the DRAM business&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Output-Management-Andrew-Grove/dp/0679762884/ref=sr_1_1?keywords=high+output+management&amp;amp;qid=1656013396&amp;amp;s=books&amp;amp;sprefix=High+Outp%2Cstripbooks%2C258&amp;amp;sr=1-1&quot;&gt;High Output Management&lt;/a&gt; by Andy Grove; &quot;&lt;strong&gt;Good but cold&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Chip-Americans-Invented-Microchip-Revolution-ebook/dp/B000XU4UT4/ref=sr_1_1?crid=15MQF69TPYRN4&amp;amp;keywords=the+chip&amp;amp;qid=1656293625&amp;amp;sprefix=The+Chip%2Caps%2C85&amp;amp;sr=8-1&quot;&gt;The Chip&lt;/a&gt; by Reid&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bloomberg&quot;&gt;Bloomberg&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Bloomberg-Revised-Updated-Michael-R/dp/1119554268/ref=sr_1_1?keywords=bloomberg+by+bloomberg&amp;amp;qid=1656013414&amp;amp;s=books&amp;amp;sprefix=Bloomberg+by+%2Cstripbooks%2C73&amp;amp;sr=1-1&quot;&gt;Bloomberg by Bloomberg&lt;/a&gt; by Michael Bloomberg and Matthew Winkler; &quot;&lt;strong&gt;Makes you realize just how fundamental Bloomberg is&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;george-lucas&quot;&gt;George Lucas&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Note: A lot of our modern media tech comes out of Lucas intellectual heritage which is why this is here&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Droidmaker-George-Lucas-Digital-Revolution/dp/0937404675/ref=sr_1_1?crid=1FP8B75Z66U31&amp;amp;keywords=Droid+maker&amp;amp;qid=1656013436&amp;amp;s=books&amp;amp;sprefix=droid+maker%2Cstripbooks%2C96&amp;amp;sr=1-1&quot;&gt;Droid maker: George Lucas and the Digital Revolution&lt;/a&gt; by Michael Rubin&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Skywalking-Films-George-Lucas-Updated-ebook/dp/B00292BIR6/ref=sr_1_2?crid=1HWUYCSSKSVDY&amp;amp;keywords=Sky+walking&amp;amp;qid=1656013463&amp;amp;s=books&amp;amp;sprefix=sky+walking%2Cstripbooks%2C54&amp;amp;sr=1-2&quot;&gt;Sky walking&lt;/a&gt; by Dale Pollock&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Inside-Star-Wars-Empire-Memoir/dp/1493032313/ref=sr_1_1?crid=RLMPTAJL3Y9T&amp;amp;keywords=Inside+the+Star+Wars+Empire&amp;amp;qid=1656013483&amp;amp;s=books&amp;amp;sprefix=inside+the+star+wars+empire%2Cstripbooks%2C72&amp;amp;sr=1-1&quot;&gt;Inside the Star Wars Empire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-pc-era&quot;&gt;The PC Era&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/What-You-See-Get-Autobiography-ebook/dp/B0042JTAIS/ref=sr_1_1?crid=22VSQY4O7ZAC6&amp;amp;keywords=What+You+See+Is+What+You+Get+Alan+Sugar&amp;amp;qid=1656013590&amp;amp;s=books&amp;amp;sprefix=what+you+see+is+what+you+get+alan+sugar%2Cstripbooks%2C84&amp;amp;sr=1-1&quot;&gt;What You See Is What You Get&lt;/a&gt; by Alan Sugar&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/PC-Roadkill-Michael-Hyman/dp/1568843488/ref=sr_1_1?crid=27RM6BBU2L6GC&amp;amp;keywords=PC+Roadkill&amp;amp;qid=1656013610&amp;amp;s=books&amp;amp;sprefix=pc+roadkill%2Cstripbooks%2C116&amp;amp;sr=1-1&quot;&gt;PC Roadkill&lt;/a&gt; by Michael Hyman&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Almost-Perfect-W-Pete-Peterson-ebook/dp/B003XKNWUE/ref=sr_1_1?crid=1F2WYZNZMQIA&amp;amp;keywords=Almost+Perfect+Pete+Peterson&amp;amp;qid=1656013636&amp;amp;s=books&amp;amp;sprefix=almost+perfect+pete+peterson%2Cstripbooks%2C296&amp;amp;sr=1-1&quot;&gt;Almost Perfect&lt;/a&gt; by W.E. Pete Peterson&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Open-Compaq-Domination-Helped-Computing/dp/1937856992/ref=sr_1_1?crid=Q86BW9JX628V&amp;amp;keywords=Open+Rod+Canion&amp;amp;qid=1656013652&amp;amp;s=books&amp;amp;sprefix=open+rod+canion%2Cstripbooks%2C112&amp;amp;sr=1-1&quot;&gt;Open&lt;/a&gt; by Rod Canion; &quot;&lt;strong&gt;I agree with Bryan Cantrill that this should have been titled Compatible&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;Adventures in Microland by Jerry Pournelle; &quot;&lt;strong&gt;Jerry Pournelle who is long gone was the quintessential tech blogger albeit in print form&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Once-Upon-Time-Computerland-Littman/dp/0895865025/ref=sr_1_1?crid=1ZD38YYU6G01Y&amp;amp;keywords=Once+Upon+a+Time+in+Computerland&amp;amp;qid=1656013671&amp;amp;s=books&amp;amp;sprefix=once+upon+a+time+in+computerland%2Cstripbooks%2C355&amp;amp;sr=1-1&quot;&gt;Once Upon a Time in Computerland&lt;/a&gt; by Jonathan Littman; &quot;&lt;strong&gt;Uber style fraud before uber&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.robertgaskins.com/powerpoint-history/sweating-bullets/gaskins-sweating-bullets-webpdf-isbn-9780985142414.pdf&quot;&gt;Sweating Bullets: Notes on Inventing PowerPoint&lt;/a&gt; by Robert Gaskins; PDF 500 odd pages; &quot;&lt;strong&gt;This is a damn good read&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;microsoft&quot;&gt;Microsoft&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Microsoft-Way-Company-Outsmarts-Competition/dp/0201409496/ref=sr_1_1?crid=AW1LY8AC4SJV&amp;amp;keywords=The+Microsoft+Way&amp;amp;qid=1656014198&amp;amp;s=books&amp;amp;sprefix=the+microsoft+way%2Cstripbooks%2C216&amp;amp;sr=1-1&quot;&gt;The Microsoft Way&lt;/a&gt; by Randall Stross&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Idea-Man-Paul-Allen-audiobook/dp/B004X7GHC6/ref=sr_1_1?crid=2WE6XDJRD1DQP&amp;amp;keywords=Idea+Man+Paul+allen&amp;amp;qid=1656014223&amp;amp;s=books&amp;amp;sprefix=idea+man+paul+allen%2Cstripbooks%2C127&amp;amp;sr=1-1&quot;&gt;Idea Man&lt;/a&gt; by Paul Allen&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Breaking-Windows-Fumbled-Future-Microsoft/dp/0743203151/ref=sr_1_1?crid=2DUORJL47B7NS&amp;amp;keywords=Breaking+Windows+david+bank&amp;amp;qid=1656014243&amp;amp;s=books&amp;amp;sprefix=breaking+windows+david+bank%2Cstripbooks%2C177&amp;amp;sr=1-1&quot;&gt;Breaking Windows&lt;/a&gt; by David Bank&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Leaving-Microsoft-Change-World-Entrepreneurs/dp/0061121088/ref=sr_1_1?crid=2KT7FAW0LS9YY&amp;amp;keywords=Leaving+Microsoft+to+Change+the+World&amp;amp;qid=1656014261&amp;amp;s=books&amp;amp;sprefix=breaking+windows+david+bank%2Cstripbooks%2C129&amp;amp;sr=1-1&quot;&gt;Leaving Microsoft to Change the World&lt;/a&gt; by John Wood&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/MICROSOFT-SECRETS-Powerful-Software-Technology/dp/0028740483/ref=sr_1_1?crid=10QTVOO59AOXC&amp;amp;keywords=Microsoft+Secrets&amp;amp;qid=1656014281&amp;amp;s=books&amp;amp;sprefix=microsoft+secrets%2Cstripbooks%2C297&amp;amp;sr=1-1&quot;&gt;Microsoft Secrets&lt;/a&gt; by Cusuman and Selby; &quot;&lt;strong&gt;This was the book that talked about employees leaving the office for coffee or soda and how detrimental it was for concentration.  At the company I was at when this came out, our founder read it on a plane and we had soda in the office the next day.  Only time he ever read a book that benefited engineers; ISO 9000 quality for software was one of the bad book fall outs.&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Proudly-Serving-Corporate-Masters-Programmer/dp/0595161286/ref=sr_1_1?crid=3V9E8RMYR5XYQ&amp;amp;keywords=Proudly+Serving+my+Corporate+Masters&amp;amp;qid=1656014392&amp;amp;s=books&amp;amp;sprefix=proudly+serving+my+corporate+masters%2Cstripbooks%2C156&amp;amp;sr=1-1&quot;&gt;Proudly Serving my Corporate Masters&lt;/a&gt; by Adam Barr; &quot;&lt;strong&gt;A boots on the ground look at Microsoft by a software engineeer&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Really-Need-Business-Learned-Microsoft-ebook/dp/B012O6PJF8/ref=sr_1_1?crid=LRI12MOGDINU&amp;amp;keywords=All+You+Really+Need+to+Know+in+Business+I+Learned+at+Microsoft&amp;amp;qid=1656014414&amp;amp;s=books&amp;amp;sprefix=all+you+really+need+to+know+in+business+i+learned+at+microsoft%2Cstripbooks%2C114&amp;amp;sr=1-1&quot;&gt;All You Really Need to Know in Business I Learned at Microsoft&lt;/a&gt; by Julie Bick&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Gates-Microsofts-Reinvented-Industry-Himself-ebook/dp/B00CB14A1Q/ref=sr_1_1?crid=10WHQIFSAYBB2&amp;amp;keywords=Gates+paul+andrews&amp;amp;qid=1656014435&amp;amp;s=books&amp;amp;sprefix=gates+paul+andrews%2Cstripbooks%2C57&amp;amp;sr=1-1&quot;&gt;Gates&lt;/a&gt; by Stephen Mane and Paul Andrews&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Barbarians-Led-Bill-Gates-Corporation/dp/0805057552/ref=sr_1_1?crid=3074PMZL3VR1F&amp;amp;keywords=Barbarians+Led+by+Bill+Gates&amp;amp;qid=1656014454&amp;amp;s=books&amp;amp;sprefix=barbarians+led+by+bill+gates%2Cstripbooks%2C80&amp;amp;sr=1-1&quot;&gt;Barbarians Led by Bill Gates&lt;/a&gt; by Jennifer Edstrom and Marlin Ellen&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Making-Microsoft-Created-Successful-Software/dp/1559580712/ref=sr_1_1?crid=261LIHRKH2LN2&amp;amp;keywords=The+Making+of+Microsoft&amp;amp;qid=1656014483&amp;amp;s=books&amp;amp;sprefix=the+making+of+microsoft%2Cstripbooks%2C61&amp;amp;sr=1-1&quot;&gt;The Making of Microsoft&lt;/a&gt; by Ichbiah and Knepper; &quot;&lt;strong&gt;Good coverage of the early years of the Microsoft / Softbank relationship&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Sing-Body-Electronic-Microsoft-Multimedia/dp/0756757584/ref=sr_1_1?crid=2TJ5BA7HV72OY&amp;amp;keywords=I+Sing+the+Body+Electronic&amp;amp;qid=1656014674&amp;amp;s=books&amp;amp;sprefix=i+sing+the+body+electronic%2Cstripbooks%2C354&amp;amp;sr=1-1&quot;&gt;I Sing the Body Electronic&lt;/a&gt; by Fred Moody; &quot;&lt;strong&gt;Best ever look at CD-ROM production realities.  The bit about Slayer Sucks stayed with me forever&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Showstopper-Breakneck-Windows-Generation-Microsoft-ebook/dp/B00J5X5E9U/ref=sr_1_2?crid=2HGAVEAXCX7I3&amp;amp;keywords=Show+Stopper+Zachary&amp;amp;qid=1656014694&amp;amp;s=books&amp;amp;sprefix=show+stopper+zachary%2Cstripbooks%2C231&amp;amp;sr=1-2&quot;&gt;Show Stopper&lt;/a&gt; by G. Pascal Zachary; &quot;&lt;strong&gt;Damn near perfect&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Such-Thing-Free-Gift-Philanthropy/dp/1784786233/ref=sr_1_1?crid=2MF4E4WPPMNKJ&amp;amp;keywords=no+such+thing+as+a+free+gift&amp;amp;qid=1656293494&amp;amp;sprefix=no+such+thing+as+a+free+gift%2Caps%2C68&amp;amp;sr=8-1&quot;&gt;No Such Thing as a Free Gift&lt;/a&gt; by McGoey&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/How-Would-Move-Mount-Fuji/dp/0316778494/ref=sr_1_1?keywords=how+would+you+move+mount+fuji&amp;amp;qid=1656295426&amp;amp;sprefix=how+would+you+move+m%2Caps%2C80&amp;amp;sr=8-1&quot;&gt;How Would You Move Mount Fuji&lt;/a&gt; by Poundstone.  &quot;&lt;strong&gt;THANK GHU THIS INTERVIEWING TREND IS LARGELY OVER&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;apple--jobs--pixar--next&quot;&gt;Apple / Jobs / Pixar / Next&lt;/h2&gt;

&lt;h3 id=&quot;apple-early&quot;&gt;Apple Early&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/West-Eden-Innocence-Apple-Computer-ebook/dp/B00295MJHG/ref=sr_1_1?crid=364PLOYG69Y0K&amp;amp;keywords=West+of+Eden+frank+rose&amp;amp;qid=1656017294&amp;amp;s=books&amp;amp;sprefix=west+of+eden+frank+rose%2Cstripbooks%2C57&amp;amp;sr=1-1&quot;&gt;West of Eden&lt;/a&gt; by Frank Rose&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Odyssey-Pepsi-Journey-Adventure-Future/dp/0060157801/ref=sr_1_1?crid=R4IVP59DT7RM&amp;amp;keywords=Odyssey+Sculley&amp;amp;qid=1656017069&amp;amp;s=books&amp;amp;sprefix=odyssey+sculley%2Cstripbooks%2C66&amp;amp;sr=1-1&quot;&gt;Odyssey&lt;/a&gt; by John Sculley&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mac&quot;&gt;Mac&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0596007191/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Revolution In The Valley&lt;/a&gt; by Hertzfield; &lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/INSANELY-GREAT-Macintosh-Computer-Everything/dp/0670852449/ref=sr_1_1?crid=QAR4FG654MBB&amp;amp;keywords=Insanely+Great&amp;amp;qid=1656017396&amp;amp;s=books&amp;amp;sprefix=insanely+great%2Cstripbooks%2C313&amp;amp;sr=1-1&quot;&gt;Insanely Great&lt;/a&gt; by Steven Levy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Cult-Mac-2nd-Leander-Kahney/dp/1593279140/ref=sr_1_1?crid=3N4B9UKMRC629&amp;amp;keywords=the+cult+of+mac&amp;amp;qid=1656017353&amp;amp;s=books&amp;amp;sprefix=the+cult+of+mac%2Cstripbooks%2C69&amp;amp;sr=1-1&quot;&gt;The Cult of Mac&lt;/a&gt; by Kahney&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Macintosh-Way-Guy-Kawasaki/dp/0673461750/ref=sr_1_1?crid=3LIWZ99TPGVLA&amp;amp;keywords=The+Macintosh+Way&amp;amp;qid=1656017270&amp;amp;s=books&amp;amp;sprefix=the+macintosh+way%2Cstripbooks%2C71&amp;amp;sr=1-1&quot;&gt;The Macintosh Way&lt;/a&gt; by Guy Kawasaki; &quot;&lt;strong&gt;This book defined developer relations and evangelism for me and the industry&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-middle-years&quot;&gt;The Middle Years&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Apple-Intrigue-Egomania-Business-Blunders/dp/0812928512/ref=sr_1_1?crid=33EXMGLHPK7WB&amp;amp;keywords=Apple+Jim+Carlton&amp;amp;qid=1656017085&amp;amp;s=books&amp;amp;sprefix=apple+jim+carlton%2Cstripbooks%2C175&amp;amp;sr=1-1&quot;&gt;Apple&lt;/a&gt; by Jim Carlton&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;steve-wozniak&quot;&gt;Steve Wozniak&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/iWoz-BYWozniak-Wozniak/dp/B006Q4IWXG/ref=sr_1_2?crid=1K5EODBI90E6B&amp;amp;keywords=iWoz&amp;amp;qid=1656017451&amp;amp;s=books&amp;amp;sprefix=iwoz%2Cstripbooks%2C93&amp;amp;sr=1-2&quot;&gt;iWoz&lt;/a&gt; by Steve Wozniak&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;steve-jobs&quot;&gt;Steve Jobs&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/The-Steve-Jobs-Way-audiobook/dp/B004R0SLG4/ref=sr_1_1?crid=1NVPZF7K4L4IT&amp;amp;keywords=The+Steve+Jobs+Way&amp;amp;qid=1656017195&amp;amp;s=books&amp;amp;sprefix=the+steve+jobs+way%2Cstripbooks%2C69&amp;amp;sr=1-1&quot;&gt;The Steve Jobs Way&lt;/a&gt; by Jay Elliot&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Steve-Jobs-Walter-Isaacson-audiobook/dp/B07ZMKXMTG/ref=sr_1_1?crid=1AUX46OBPMSQW&amp;amp;keywords=steve+jobs+walter+isaacson&amp;amp;qid=1656017143&amp;amp;s=books&amp;amp;sprefix=Steve+Jobs%2Cstripbooks%2C103&amp;amp;sr=1-1&quot;&gt;Steve Jobs&lt;/a&gt; by Walter Isaacson&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Inside-Steves-Brain-Leander-Kahney-ebook/dp/B002N83GYE/ref=sr_1_1?crid=3LWRQTUF5VYB9&amp;amp;keywords=Inside+Steve%27s+Brain&amp;amp;qid=1656017438&amp;amp;s=books&amp;amp;sprefix=inside+steve%27s+brain%2Cstripbooks%2C80&amp;amp;sr=1-1&quot;&gt;Inside Steve's Brain&lt;/a&gt; by Leander Kahney&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Second-Coming-Steve-Jobs/dp/B0000547BZ/ref=sr_1_1?crid=343AV7AOYFGHX&amp;amp;keywords=The+Second+Coming+of+Steve+Jobs&amp;amp;qid=1656017312&amp;amp;s=books&amp;amp;sprefix=the+second+coming+of+steve+jobs%2Cstripbooks%2C82&amp;amp;sr=1-1&quot;&gt;The Second Coming of Steve Jobs&lt;/a&gt; by Alan Deutschman&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/iCon-Steve-Jobs-Greatest-Business/dp/0471720836/ref=sr_1_1?crid=3GDK3BZZVEIGK&amp;amp;keywords=iCon+Jeffrey+Young&amp;amp;qid=1656017218&amp;amp;s=books&amp;amp;sprefix=icon+jeffrey+young%2Cstripbooks%2C115&amp;amp;sr=1-1&quot;&gt;iCon&lt;/a&gt; by Jeffrey Young and William Simon&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Bite-Apple-Memoir-Life-Steve-ebook/dp/B00BY5QWUC/ref=sr_1_1?crid=36HNC11P3KF31&amp;amp;keywords=The+Bite+in+the+Apple+brennan&amp;amp;qid=1656017179&amp;amp;s=books&amp;amp;sprefix=the+bite+in+the+apple+brennan%2Cstripbooks%2C56&amp;amp;sr=1-1&quot;&gt;The Bite in the Apple&lt;/a&gt; by Chrisann Brennan&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Becoming-Steve-Jobs-audiobook/dp/B00R8IC37K/ref=sr_1_1?crid=EHMP6GQ5QJ66&amp;amp;keywords=Becoming+Steve+Jobs&amp;amp;qid=1656017533&amp;amp;s=books&amp;amp;sprefix=becoming+steve+jobs%2Cstripbooks%2C90&amp;amp;sr=1-1&quot;&gt;Becoming Steve Jobs&lt;/a&gt; by Brent Schlender and Rick Tetzeli&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;next&quot;&gt;Next&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Steve-Jobs-NeXT-Big-Thing-ebook/dp/B006VOM5V6/ref=sr_1_1?crid=2LT7CLYSM5IM6&amp;amp;keywords=Steve+Jobs+and+the+Next+Big+Thing&amp;amp;qid=1656017033&amp;amp;s=books&amp;amp;sprefix=steve+jobs+and+the+next+big+thing+%2Cstripbooks%2C102&amp;amp;sr=1-1&quot;&gt;Steve Jobs and the Next Big Thing&lt;/a&gt; by Randall Stross.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pixar&quot;&gt;Pixar&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pixar-Beyond-Unlikely-Journey-Entertainment-ebook/dp/B01912OSA0/ref=sr_1_1?crid=1KBD76I3UHI0E&amp;amp;keywords=To+Pixar+and+Beyond&amp;amp;qid=1656017565&amp;amp;s=books&amp;amp;sprefix=to+pixar+and+beyond%2Cstripbooks%2C68&amp;amp;sr=1-1&quot;&gt;To Pixar and Beyond&lt;/a&gt; by Lawrence Levy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Creativity-Inc-Overcoming-Unseen-Inspiration/dp/0812993012/ref=sr_1_1?crid=L13FYPPX7R87&amp;amp;keywords=Creativity+Inc&amp;amp;qid=1656293697&amp;amp;sprefix=creativity+inc%2Caps%2C77&amp;amp;sr=8-1&quot;&gt;Creativity, Inc&lt;/a&gt; by Catmull&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;take-2-the-return-of-steve-and-beyond&quot;&gt;Take 2: The Return of Steve and Beyond&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Infinite-Loop-Michael-Malone/dp/0385486847/ref=sr_1_1?crid=2N0QGA423U6C4&amp;amp;keywords=Infinite+Loop+michael+malone&amp;amp;qid=1656017103&amp;amp;s=books&amp;amp;sprefix=infinite+loop+michael+malone%2Cstripbooks%2C60&amp;amp;sr=1-1&quot;&gt;Infinite Loop&lt;/a&gt; by Michael Malone&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Haunted-Empire-Apple-After-Steve/dp/B00I8OJ7VI/ref=sr_1_2?crid=5EMZVENGY3CF&amp;amp;keywords=Haunted+Empire&amp;amp;qid=1656017124&amp;amp;s=books&amp;amp;sprefix=haunted+empire+%2Cstripbooks%2C52&amp;amp;sr=1-2&quot;&gt;Haunted Empire&lt;/a&gt; by Yukari Kane&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Tim-Cook-Genius-Apple-Level/dp/0525537600/ref=tmm_hrd_swatch_0?_encoding=UTF8&amp;amp;qid=1656294109&amp;amp;sr=1-1-catcorr&quot;&gt;Tim Cook&lt;/a&gt; by Kahney. &quot;&lt;strong&gt;AFTER READING THIS YOU STILL WON'T KNOW MUCH ABOUT TIM&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Return-Little-Kingdom-Creation-Changed/dp/B004CWGZXI/ref=sr_1_1?crid=12G8QD9ETHXXV&amp;amp;keywords=Return+to+the+Little+Kingdom&amp;amp;qid=1656017162&amp;amp;s=books&amp;amp;sprefix=return+to+the+little+kingdom%2Cstripbooks%2C85&amp;amp;sr=1-1&quot;&gt;Return to the Little Kingdom&lt;/a&gt; by Michael Moritz&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Inside-Apple-Americas-Admired-Secretive-Company-ebook/dp/B005LH4Y3G/ref=sr_1_1?crid=EDSEDTD62GM6&amp;amp;keywords=Inside+Apple&amp;amp;qid=1656017255&amp;amp;s=books&amp;amp;sprefix=inside+apple%2Cstripbooks%2C82&amp;amp;sr=1-1&quot;&gt;Inside Apple&lt;/a&gt; by Adam Lashinsky&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Apple-Confidential-2-0-Definitive-Colorful/dp/1593270100/ref=sr_1_1?crid=3EUMWKI7J61O4&amp;amp;keywords=Apple+Confidential&amp;amp;qid=1656017335&amp;amp;s=books&amp;amp;sprefix=apple+confidential%2Cstripbooks%2C92&amp;amp;sr=1-1&quot;&gt;Apple Confidential&lt;/a&gt; by Owen Linzmayer&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/The-Apple-Way/dp/B09B1DNBPW/ref=sr_1_1?crid=2LUODQP5ZD7L&amp;amp;keywords=The+Apple+Way+cruikshank&amp;amp;qid=1656017377&amp;amp;s=books&amp;amp;sprefix=the+apple+way+cruikshank%2Cstripbooks%2C64&amp;amp;sr=1-1&quot;&gt;The Apple Way&lt;/a&gt; by Jeffrey Cruikshank&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Leading-Apple-Steve-Jobs-Controversial-ebook/dp/B008SGNIPC/ref=sr_1_1?crid=3AF728LY8JLDF&amp;amp;keywords=Leading+Apple&amp;amp;qid=1656017517&amp;amp;s=books&amp;amp;sprefix=leading+apple%2Cstripbooks%2C69&amp;amp;sr=1-1&quot;&gt;Leading Apple&lt;/a&gt; with Steve Jobs by Jay Elliot&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/After-Steve-Became-Trillion-Dollar-Company/dp/B09CF3B8VH/ref=sr_1_1?crid=2VRN0RS8K6CI4&amp;amp;keywords=After+Steve&amp;amp;qid=1656017579&amp;amp;s=books&amp;amp;sprefix=after+steve%2Cstripbooks%2C93&amp;amp;sr=1-1&quot;&gt;After Steve&lt;/a&gt; by Tripp Mickle&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ipod&quot;&gt;iPod&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Perfect-Thing-Shuffles-Commerce-Coolness/dp/0743285220/ref=sr_1_1?crid=E26WZRI3QKGF&amp;amp;keywords=The+Perfect+Thing+levy&amp;amp;qid=1656017422&amp;amp;s=books&amp;amp;sprefix=the+perfect+thing+levy%2Cstripbooks%2C52&amp;amp;sr=1-1&quot;&gt;The Perfect Thing&lt;/a&gt; by Steven Levy&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;iphone&quot;&gt;iPhone&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Creative-Selection-Inside-Apples-Process/dp/1250194466/ref=sr_1_1?crid=3EB43JEMB58Y4&amp;amp;keywords=creative+selection+ken+kocienda&amp;amp;qid=1656017470&amp;amp;s=books&amp;amp;sprefix=Creative+Selection+%2Cstripbooks%2C68&amp;amp;sr=1-1&quot;&gt;Creative Selection&lt;/a&gt; by Ken Kocienda; &quot;&lt;strong&gt;This was written by the guy who created the auto correct algorithms on the iPhone and is amazing to understand how that one innovation came to be&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/The-One-Device-Brian-Merchant-audiobook/dp/B072QDKDRR/ref=sr_1_1?crid=LYUIYPSE78QW&amp;amp;keywords=the+one+device+the+secret+history+of+the+iphone&amp;amp;qid=1656017235&amp;amp;s=books&amp;amp;sprefix=The+One+Device+%2Cstripbooks%2C62&amp;amp;sr=1-1&quot;&gt;The One Device&lt;/a&gt; by Brian Merchant&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;venture-capital&quot;&gt;Venture Capital&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Silicon-Valley-Way-Second-Successful-ebook/dp/B003ZDOVXG/ref=sr_1_1?crid=RGBOA3XYPA0A&amp;amp;keywords=The+Silicon+Valley+Way&amp;amp;qid=1656017872&amp;amp;s=books&amp;amp;sprefix=the+silicon+valley+way%2Cstripbooks%2C175&amp;amp;sr=1-1&quot;&gt;The Silicon Valley Way&lt;/a&gt; by Sherwin&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Confessions-Venture-Capitalist-High-Stakes-Financing-ebook/dp/B001GXP7O4/ref=sr_1_1?crid=1XX91H3LM17E9&amp;amp;keywords=Confessions+of+a+Venture+Capitalist&amp;amp;qid=1656017890&amp;amp;s=books&amp;amp;sprefix=confessions+of+a+venture+capitalist%2Cstripbooks%2C83&amp;amp;sr=1-1&quot;&gt;Confessions of a Venture Capitalist&lt;/a&gt; by Quindlen&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Valley-Boy-Education-Tom-Perkins/dp/1592403131/ref=sr_1_1?crid=39RHMH8GON7OJ&amp;amp;keywords=Valley+Boy&amp;amp;qid=1656017904&amp;amp;s=books&amp;amp;sprefix=valley+boy%2Cstripbooks%2C79&amp;amp;sr=1-1&quot;&gt;Valley Boy&lt;/a&gt; by Tom Perkins&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/The-Launch-Pad-Randall-Stross-audiobook/dp/B009KFMK90/ref=sr_1_1?crid=2M2GX0RFK69UT&amp;amp;keywords=LaunchPad+randall+stross&amp;amp;qid=1656017925&amp;amp;s=books&amp;amp;sprefix=launchpad+randall+stross%2Cstripbooks%2C53&amp;amp;sr=1-1&quot;&gt;LaunchPad&lt;/a&gt; by Randall Stross; &quot;&lt;strong&gt;A deep dive into Y Combinator&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/1422101223/ref=ppx_yo_dt_b_asin_title_o05_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Creative Capital&lt;/a&gt; by Ante; &lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/eBoys-Randall-E-Stross-audiobook/dp/B0000547BY/ref=sr_1_1?crid=17V0WNJMKBSFB&amp;amp;keywords=eBoys&amp;amp;qid=1656019051&amp;amp;s=books&amp;amp;sprefix=eboys%2Cstripbooks%2C61&amp;amp;sr=1-1&quot;&gt;eBoys&lt;/a&gt; by Randall Stross&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;oracle&quot;&gt;Oracle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Softwar-Intimate-Portrait-Ellison-Oracle/dp/0743225058/ref=sr_1_1?crid=1HVO6UKZCG94T&amp;amp;keywords=Softwar+symonds&amp;amp;qid=1656017971&amp;amp;s=books&amp;amp;sprefix=softwar+symonds%2Cstripbooks%2C76&amp;amp;sr=1-1&quot;&gt;Softwar&lt;/a&gt; by Matthew Symonds&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Difference-Between-God-Larry-Ellison/dp/0060008768/ref=sr_1_1?crid=42Y0NSH9W545&amp;amp;keywords=The+Difference+Between+God+and+Larry+Ellison&amp;amp;qid=1656017990&amp;amp;s=books&amp;amp;sprefix=the+difference+between+god+and+larry+ellison%2Cstripbooks%2C187&amp;amp;sr=1-1&quot;&gt;The Difference Between God and Larry Ellison&lt;/a&gt; by Mike Wilson; &quot;&lt;strong&gt;This book helps you understand Oracle and how sales people really work.  The Go for the Gold program and Oracle's insanity in paying commissions on order receipt not payment of order never left me.&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sun&quot;&gt;Sun&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Java-Handbook-Patrick-Naughton/dp/0074632906/ref=sr_1_1?crid=37U2H4GG3N5ZO&amp;amp;keywords=The+Java+Handbook+Naughton&amp;amp;qid=1656018019&amp;amp;s=books&amp;amp;sprefix=the+java+handbook+naughton%2Cstripbooks%2C59&amp;amp;sr=1-1&quot;&gt;The Java Handbook&lt;/a&gt; (this is here because of an excellent appendix covering the history of Java) by Patrick Naughton; &quot;&lt;strong&gt;Great explanation of the early Java days&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Sunburst-Ascent-Microsystems-Mark-Hall/dp/0809243687/ref=sr_1_1?crid=1BDSOA9JOY8LA&amp;amp;keywords=Sunburst+mark+hall&amp;amp;qid=1656018038&amp;amp;s=books&amp;amp;sprefix=sunburst+mark+hall%2Cstripbooks%2C60&amp;amp;sr=1-1&quot;&gt;Sunburst&lt;/a&gt; by Mark Hall and John Barry; &quot;&lt;strong&gt;Fascinating.  I'm still pissed we lost NEWS in favor of X11&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Noon-Inside-McNealy-Microsystems/dp/0471297135/ref=sr_1_1?crid=1K9Q99IKS4O0G&amp;amp;keywords=High+Noon+Southwick&amp;amp;qid=1656018061&amp;amp;s=books&amp;amp;sprefix=high+noon+southwick%2Cstripbooks%2C57&amp;amp;sr=1-1&quot;&gt;High Noon&lt;/a&gt; by Karen Southwick&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cisco&quot;&gt;Cisco&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Making-Cisco-Connection-Internet-Superpower/dp/0471357111/ref=sr_1_1?crid=3R5IYKPNQ1WBQ&amp;amp;keywords=Making+the+Cisco+Connection&amp;amp;qid=1656018089&amp;amp;s=books&amp;amp;sprefix=making+the+cisco+connection%2Cstripbooks%2C84&amp;amp;sr=1-1&quot;&gt;Making the Cisco Connection&lt;/a&gt; by David Bunnell; &quot;&lt;strong&gt;Sandy Lerner's post Cisco career has to be the best heel turn in the history of the industry&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;amiga&quot;&gt;Amiga&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Future-Was-Here-Commodore-Platform/dp/0262535696/ref=sr_1_1?crid=16SIZ6C7MND3B&amp;amp;keywords=The+Future+Was+Here+Maher&amp;amp;qid=1656018140&amp;amp;s=books&amp;amp;sprefix=the+future+was+here+maher%2Cstripbooks%2C75&amp;amp;sr=1-1&quot;&gt;The Future Was Here&lt;/a&gt; by Jimmy Maher; &quot;&lt;strong&gt;As much of a lost hope as BeOS&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;open-source&quot;&gt;Open Source&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Just-Fun-Story-Accidental-Revolutionary/dp/0066620732/ref=sr_1_1?crid=2VZOHA1LCCZ8Q&amp;amp;keywords=just+for+fun+linus+torvalds&amp;amp;qid=1656018264&amp;amp;sprefix=Just+for+Fun%2Caps%2C138&amp;amp;sr=8-1&quot;&gt;Just for Fun&lt;/a&gt; by Linus Torvalds and David Diamond&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Free-All-Software-Movement-High-Tech/dp/0066620503/ref=sr_1_1?crid=1NJZ6UWE5GROT&amp;amp;keywords=free+for+all+peter+wayner&amp;amp;qid=1656018405&amp;amp;s=books&amp;amp;sprefix=free+for+all+peter+wayner%2Cstripbooks%2C55&amp;amp;sr=1-1&quot;&gt;Free for All&lt;/a&gt; by Peter Wayner&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Free-Freedom-2-0-Sam-Williams/dp/0983159211/ref=sr_1_1?crid=1X8AXD0GQS81T&amp;amp;keywords=Free+as+in+Freedom+williams&amp;amp;qid=1656018436&amp;amp;s=books&amp;amp;sprefix=free+as+in+freedom+williams%2Cstripbooks%2C183&amp;amp;sr=1-1&quot;&gt;Free as in Freedom&lt;/a&gt; by Williams&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dreaming-Code-Programmers-Transcendent-Software/dp/1400082471/ref=sr_1_1?crid=XUE6XTJOJ4HC&amp;amp;keywords=Dreaming+in+Code&amp;amp;qid=1656018466&amp;amp;s=books&amp;amp;sprefix=dreaming+in+code%2Cstripbooks%2C125&amp;amp;sr=1-1&quot;&gt;Dreaming in Code&lt;/a&gt; by Scott Rosenberg; &quot;&lt;strong&gt;Mitch Kapor's second coming and his inability to give up on Lotus Agenda; seriously tho a great look at what happens when you don't have an MVP and a lot of money&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Rebel-Code-Linux-Source-Revolution/dp/0738203335/ref=sr_1_1?crid=1HYW9IC0USUT9&amp;amp;keywords=Rebel+Code&amp;amp;qid=1656018485&amp;amp;s=books&amp;amp;sprefix=rebel+code%2Cstripbooks%2C150&amp;amp;sr=1-1&quot;&gt;Rebel Code&lt;/a&gt; by Glyn Moody&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Cluetrain-Manifesto-10th-Anniversary/dp/0465018653/ref=sr_1_1?crid=ZO8RH0C631TY&amp;amp;keywords=The+Clue+Train+Manifesto&amp;amp;qid=1656018500&amp;amp;s=books&amp;amp;sprefix=the+clue+train+manifesto%2Cstripbooks%2C351&amp;amp;sr=1-1&quot;&gt;The Clue Train Manifesto&lt;/a&gt; by Levine, Locke, Searls, Weinberger&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Idealist-Justin-Peters-ebook/dp/B00BEZAY88/ref=sr_1_1?crid=2TKP5YHBU61EU&amp;amp;keywords=the+idealist+justin+peters&amp;amp;qid=1656018525&amp;amp;s=books&amp;amp;sprefix=the+idealist+justin+peteres%2Cstripbooks%2C111&amp;amp;sr=1-1&quot;&gt;The Idealist&lt;/a&gt; by Justin Peters; &quot;&lt;strong&gt;This breaks my heart.  I had dinner with Aaron once and he was a shining light&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/UNIX-History-Memoir-Brian-Kernighan/dp/1695978552/ref=sr_1_1?crid=P4ZENIGKRU1K&amp;amp;keywords=Unix+A+History+and+Memoir&amp;amp;qid=1656018581&amp;amp;s=books&amp;amp;sprefix=unix+a+history+and+memoir%2Cstripbooks%2C142&amp;amp;sr=1-1&quot;&gt;Unix A History and Memoir&lt;/a&gt; by Brian Kernighan; &quot;&lt;strong&gt;Damn near perfect and I'm now ready for Unix Jeopardy&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Quarter-Century-UNIX-Peter-Salus/dp/0201547775&quot;&gt;A Quarter Century of Unix by Salus&lt;/a&gt;; &lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;palm&quot;&gt;Palm&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Piloting-Palm-Handspring-Billion-Dollar-Handheld/dp/0471089656/ref=sr_1_2?crid=RB8S0QRD166Z&amp;amp;keywords=Piloting+Palm&amp;amp;qid=1656018236&amp;amp;sprefix=piloting+palm%2Caps%2C95&amp;amp;sr=8-2&quot;&gt;Piloting Palm&lt;/a&gt; by Butter and Pogue; &quot;&lt;strong&gt;We forget how important Palm was&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;netscape--internet-stuff&quot;&gt;Netscape / Internet Stuff&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/How-Web-was-Born-Story/dp/0192862073/ref=sr_1_1?crid=1PL6REKOW1HPM&amp;amp;keywords=How+the+Web+Was+Born&amp;amp;qid=1656018622&amp;amp;s=books&amp;amp;sprefix=how+the+web+was+born%2Cstripbooks%2C105&amp;amp;sr=1-1&quot;&gt;How the Web Was Born&lt;/a&gt; by Gillies and Calliau; &quot;&lt;strong&gt;I was at the conference where the WWW was first announced and all of us 'experienced hypertext folks' didn't see how big it was; probably me single greatest technical misjudgement&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Netscape-Time-Billion-Dollar-Start-Up-Microsoft/dp/0312263619/ref=sr_1_1?crid=37GFMVT57R1VC&amp;amp;keywords=Netscape+Time&amp;amp;qid=1656018685&amp;amp;s=books&amp;amp;sprefix=netscape+time%2Cstripbooks%2C243&amp;amp;sr=1-1&quot;&gt;Netscape Time&lt;/a&gt; by Jim Clark and Owen Edwards&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Competing-Internet-Time-Netscape-Microsoft-ebook/dp/B000FBJHAS/ref=sr_1_1?crid=1DROZWU3TG6TM&amp;amp;keywords=Competing+on+Internet+Time&amp;amp;qid=1656018719&amp;amp;s=books&amp;amp;sprefix=competing+on+internet+time%2Cstripbooks%2C162&amp;amp;sr=1-1&quot;&gt;Competing on Internet Time&lt;/a&gt; by Cusumano and Yoffie&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Architects-Web-Built-Future-Business/dp/0471171875/ref=sr_1_1?crid=10VQTWUDYYC9U&amp;amp;keywords=Architects+of+the+Web&amp;amp;qid=1656018784&amp;amp;s=books&amp;amp;sprefix=architects+of+the+web%2Cstripbooks%2C200&amp;amp;sr=1-1&quot;&gt;Architects of the Web&lt;/a&gt; by Robert Reid&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;web-10---the-early-commercial-internet&quot;&gt;Web 1.0 - The Early Commercial Internet&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Spam-Kings-High-Rolling-Hucksters-Enlargements-ebook/dp/B00NF07FHI/ref=sr_1_1?crid=A3I6M9GVF85B&amp;amp;keywords=Spam+Kings&amp;amp;qid=1656019030&amp;amp;s=books&amp;amp;sprefix=spam+kings%2Cstripbooks%2C53&amp;amp;sr=1-1&quot;&gt;Spam Kings&lt;/a&gt; by Brian McWilliams&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/PayPal-Wars-Battles-Media-Planet/dp/0974670103/ref=sr_1_1?crid=2TCUURPG642L1&amp;amp;keywords=The+PayPal+Wars&amp;amp;qid=1656019095&amp;amp;s=books&amp;amp;sprefix=the+paypal+wars%2Cstripbooks%2C114&amp;amp;sr=1-1&quot;&gt;The PayPal Wars&lt;/a&gt; by Eric Jackson&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/StrikingitRich-Com-Profiles-Incredibly-Successful-CommerceNet-ebook/dp/B000FA5LN6/ref=sr_1_1?crid=2VL7N1NTWJEVJ&amp;amp;keywords=StrikingItRich.com&amp;amp;qid=1656019109&amp;amp;s=books&amp;amp;sprefix=strikingitrich.com%2Cstripbooks%2C52&amp;amp;sr=1-1&quot;&gt;StrikingItRich.com&lt;/a&gt; by Jaclyn Easton&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Silicon-Boys-Their-Valley-Dreams/dp/0688179061/ref=sr_1_1?crid=2VHG7Y55EH3T5&amp;amp;keywords=The+Silicon+Boys&amp;amp;qid=1656019127&amp;amp;s=books&amp;amp;sprefix=the+silicon+boys%2Cstripbooks%2C101&amp;amp;sr=1-1&quot;&gt;The Silicon Boys&lt;/a&gt; by David Kaplan&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Starving-Death-Million-James-Ledbetter/dp/1586481290/ref=sr_1_1?crid=Q3N88GKP77S9&amp;amp;keywords=Starving+to+Death+on+%24200+Million&amp;amp;qid=1656019143&amp;amp;s=books&amp;amp;sprefix=starving+to+death+on+200+million%2Cstripbooks%2C96&amp;amp;sr=1-1&quot;&gt;Starving to Death on $200 Million&lt;/a&gt; by James Ledbetter&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Startup-Silicon-Adventure-Jerry-Kaplan/dp/0140257314/ref=sr_1_1?keywords=startup+jerry+kaplan&amp;amp;qid=1656019159&amp;amp;s=books&amp;amp;sprefix=Startup+Je%2Cstripbooks%2C72&amp;amp;sr=1-1&quot;&gt;Startup&lt;/a&gt; by Jerry Kaplan&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Wikipedia-Revolution-Nobodies-Greatest-Encyclopedia-ebook/dp/B001UQO41Y/ref=sr_1_1?crid=17FO2KCP4UFER&amp;amp;keywords=The+Wikipedia+Revolution&amp;amp;qid=1656019180&amp;amp;s=books&amp;amp;sprefix=the+wikipedia+revolution%2Cstripbooks%2C355&amp;amp;sr=1-1&quot;&gt;The Wikipedia Revolution&lt;/a&gt; by Andrew Lih&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/060980698X/ref=ppx_yo_dt_b_asin_title_o03_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;High St@kes, No Prisoners&lt;/a&gt; by Charles Ferguson; &quot;&lt;strong&gt;FrontPage was amazing in the day and this covers it well&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Obscene-Profits-Entrepreneurs-Pornography-Cyber/dp/0415931037/ref=sr_1_1?crid=209XDLAVF4FUP&amp;amp;keywords=Obscene+Profits&amp;amp;qid=1656019199&amp;amp;s=books&amp;amp;sprefix=obscene+profits%2Cstripbooks%2C154&amp;amp;sr=1-1&quot;&gt;Obscene Profits&lt;/a&gt; by Lane&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Cdnow-Story-Rags-Riches-Internet/dp/0966103262/ref=sr_1_1?crid=3PVUA30B1TE0X&amp;amp;keywords=The+CDNow+Story&amp;amp;qid=1656019217&amp;amp;s=books&amp;amp;sprefix=the+cdnow+story%2Cstripbooks%2C107&amp;amp;sr=1-1&quot;&gt;The CDNow Story&lt;/a&gt; by Olim, Olim and Kent&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dot-America-Lost-Money-Internet-ebook/dp/B000FC11HE/ref=sr_1_2?crid=2D1G4U10OKATJ&amp;amp;keywords=dot.con&amp;amp;qid=1656019237&amp;amp;s=books&amp;amp;sprefix=the+cdnow+story%2Cstripbooks%2C435&amp;amp;sr=1-2&quot;&gt;dot.con&lt;/a&gt; by John Cassidy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/That-Will-Never-Work-Netflix-ebook/dp/B07QLL7N7D/ref=sr_1_1?crid=2IAEEA935OIWG&amp;amp;keywords=That+Will+Never+Work&amp;amp;qid=1656019256&amp;amp;s=books&amp;amp;sprefix=dot.con%2Cstripbooks%2C370&amp;amp;sr=1-1&quot;&gt;That Will Never Work&lt;/a&gt; by Marc Randolph; &quot;&lt;strong&gt;A great look at Netflix&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Netflixed-Epic-Battle-Americas-Eyeballs/dp/1591846595/ref=sr_1_1?keywords=Netflixed&amp;amp;qid=1656019273&amp;amp;s=books&amp;amp;sr=1-1&quot;&gt;Netflixed&lt;/a&gt; by Gina Keating&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Year-Zero-Rob-Reid-audiobook/dp/B008J9GD28/ref=sr_1_1?crid=35OXK4WFQ2JPO&amp;amp;keywords=year+zero+rob+reid&amp;amp;qid=1656019301&amp;amp;s=books&amp;amp;sprefix=Year+Zero%2Cstripbooks%2C89&amp;amp;sr=1-1&quot;&gt;Year Zero&lt;/a&gt; By Rob Reid&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/0062273205?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&quot;&gt;The Hard Thing About Hard Things&lt;/a&gt; by Ben Horowitz&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;amazon&quot;&gt;Amazon&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/The-Everything-Store-Brad-Stone-audiobook/dp/B00FJFJOLC/ref=sr_1_1?crid=B009JIKWT4CD&amp;amp;keywords=The+Everything+Store&amp;amp;qid=1656019366&amp;amp;s=books&amp;amp;sprefix=the+everything+store%2Cstripbooks%2C69&amp;amp;sr=1-1&quot;&gt;The Everything Store&lt;/a&gt; by Brad Stone&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Amazon-com-Get-Fast-Robert-Spector/dp/0066620422/ref=sr_1_1?crid=1WSW85CP7Z8H&amp;amp;keywords=Amazon.com+spector&amp;amp;qid=1656019383&amp;amp;s=books&amp;amp;sprefix=amazon.com+spector%2Cstripbooks%2C178&amp;amp;sr=1-1&quot;&gt;Amazon.com&lt;/a&gt; by Spector&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/21-Dog-Years-Doing-Amazon-com-ebook/dp/B000FBJFBO/ref=sr_1_1?crid=1BE0DEI1HBAFI&amp;amp;keywords=21+Dog+Years&amp;amp;qid=1656019401&amp;amp;s=books&amp;amp;sprefix=21+dog+years%2Cstripbooks%2C75&amp;amp;sr=1-1&quot;&gt;21 Dog Years&lt;/a&gt; by Mike Daisey&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;google&quot;&gt;Google&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/What-Would-Google-Do-Reverse-Engineering/dp/0061709697/ref=sr_1_1?crid=2VV2LV6HV9LVS&amp;amp;keywords=What+Would+Google+Do&amp;amp;qid=1656020082&amp;amp;s=books&amp;amp;sprefix=what+would+google+do%2Cstripbooks%2C124&amp;amp;sr=1-1&quot;&gt;What Would Google Do&lt;/a&gt; by Jeff Jarvis&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Planet-Google-Companys-Audacious-Everything-ebook/dp/B001FA0W6Q/ref=sr_1_1?crid=2G8F5ER5RS0Z4&amp;amp;keywords=Planet+Google&amp;amp;qid=1656020100&amp;amp;s=books&amp;amp;sprefix=planet+google%2Cstripbooks%2C283&amp;amp;sr=1-1&quot;&gt;Planet Google&lt;/a&gt; by Randall Stross&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Im-Feeling-Lucky-Confessions-Employee/dp/0547416997/ref=sr_1_1?crid=1VPFK61EWXG4B&amp;amp;keywords=I%27m+Feeling+Lucky+Edwards&amp;amp;qid=1656020119&amp;amp;s=books&amp;amp;sprefix=i%27m+feeling+lucky+edwards%2Cstripbooks%2C167&amp;amp;sr=1-1&quot;&gt;I'm Feeling Lucky&lt;/a&gt; by Douglas Edwards; &quot;&lt;strong&gt;A good boots on the ground perspective from employee #59&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Google-Story-2018-Updated-Technology/dp/038534273X/ref=sr_1_1?crid=1F8EZHH0MMZUX&amp;amp;keywords=The+Google+Story&amp;amp;qid=1656020239&amp;amp;s=books&amp;amp;sprefix=the+google+story%2Cstripbooks%2C191&amp;amp;sr=1-1&quot;&gt;The Google Story&lt;/a&gt; by Vise and Malseed&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Work-Rules-Insights-Inside-Transform/dp/1455554790/ref=sr_1_1?crid=B0QYXESRTEWE&amp;amp;keywords=Work+Rules+bock&amp;amp;qid=1656020302&amp;amp;s=books&amp;amp;sprefix=work+rules+bock%2Cstripbooks%2C56&amp;amp;sr=1-1&quot;&gt;Work Rules&lt;/a&gt; by Lazlo Bock&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Everything-about-Marketing-Learned-Google-ebook/dp/B0041G68K0/ref=sr_1_1?crid=2FAKL0FF98ZR2&amp;amp;keywords=google+aaron+goldman&amp;amp;qid=1656020342&amp;amp;s=books&amp;amp;sprefix=google+aaron+goldman%2Cstripbooks%2C60&amp;amp;sr=1-1&quot;&gt;Everything I Know About Marketing I Learned from Google&lt;/a&gt; by Aaron Goldman&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/How-Google-Works-audiobook/dp/B00MOZPSYW/ref=sr_1_1?crid=31Q15POCL9Y65&amp;amp;keywords=How+Google+Works&amp;amp;qid=1656020378&amp;amp;s=books&amp;amp;sprefix=how+google+works%2Cstripbooks%2C81&amp;amp;sr=1-1&quot;&gt;How Google Works&lt;/a&gt; by Schmidt and Rosenberg&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Search-Rewrote-Business-Transformed-Culture-ebook/dp/B004IE9QFO/ref=sr_1_1?crid=2A2WMDL74U23P&amp;amp;keywords=The+Search+battelle&amp;amp;qid=1656020397&amp;amp;s=books&amp;amp;sprefix=the+search+battelle%2Cstripbooks%2C70&amp;amp;sr=1-1&quot;&gt;The Search&lt;/a&gt; by John Battelle&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Plex-Google-Thinks-Works-Shapes/dp/1416596585/ref=sr_1_1?crid=2YFDL53FZV4DI&amp;amp;keywords=Into+the+Plex&amp;amp;qid=1656020413&amp;amp;s=books&amp;amp;sprefix=into+the+plex%2Cstripbooks%2C201&amp;amp;sr=1-1&quot;&gt;Into the Plex&lt;/a&gt; by Steven Levy&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Googled-End-World-As-Know/dp/1594202354/ref=sr_1_1?crid=288RVZ0ID1808&amp;amp;keywords=Googled+auletta&amp;amp;qid=1656020430&amp;amp;s=books&amp;amp;sprefix=googled+auletta%2Cstripbooks%2C66&amp;amp;sr=1-1&quot;&gt;Googled&lt;/a&gt; by Ken Auletta&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;misc--software&quot;&gt;Misc / Software&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Tinkerers-Amateurs-DIYers-Inventors-America-ebook/dp/B00A9OF002/ref=sr_1_1?crid=2QIL8XSJ8LD7&amp;amp;keywords=The+Tinkerers+foege&amp;amp;qid=1656022307&amp;amp;s=books&amp;amp;sprefix=the+tinkerers+foege%2Cstripbooks%2C61&amp;amp;sr=1-1&quot;&gt;The Tinkerers&lt;/a&gt; by Foege&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Programmers-Work-Interviews-Computer-Industry/dp/1556152116/ref=sr_1_1?crid=1NUNPTHOS2UMY&amp;amp;keywords=Programmers+at+Work&amp;amp;qid=1656022391&amp;amp;s=books&amp;amp;sprefix=programmers+at+work%2Cstripbooks%2C77&amp;amp;sr=1-1&quot;&gt;Programmers at Work&lt;/a&gt; by Susan Lakers; &quot;&lt;strong&gt;The first early look at software authors&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Masterminds-Programming-Conversations-Creators-Languages/dp/0596515170/ref=sr_1_1?crid=W6BMIXUT5DQ&amp;amp;keywords=Masterminds+of+Programming&amp;amp;qid=1656022410&amp;amp;s=books&amp;amp;sprefix=masterminds+of+programming%2Cstripbooks%2C59&amp;amp;sr=1-1&quot;&gt;Masterminds of Programming&lt;/a&gt; by Biancuzzi and Warden&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Coders-Work-Reflections-Craft-Programming/dp/1430219483/ref=sr_1_1?crid=V6F6SHCJIBYC&amp;amp;keywords=Coders+at+Work&amp;amp;qid=1656022429&amp;amp;s=books&amp;amp;sprefix=coders+at+work%2Cstripbooks%2C106&amp;amp;sr=1-1&quot;&gt;Coders at Work&lt;/a&gt; by Siebel&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554/ref=sr_1_1?crid=6BKU2DHK9YPY&amp;amp;keywords=Hackers+and+Painters&amp;amp;qid=1656022449&amp;amp;s=books&amp;amp;sprefix=hackers+and+painters%2Cstripbooks%2C71&amp;amp;sr=1-1&quot;&gt;Hackers and Painters&lt;/a&gt; by Graham&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/1942788290/ref=sr_1_1?crid=394Q7AURS9LR&amp;amp;keywords=the+phoenix+project&amp;amp;qid=1656293360&amp;amp;sprefix=the+phoenix+project%2Caps%2C84&amp;amp;sr=8-1&quot;&gt;The Phoenix Project&lt;/a&gt; by Kim, Behr, Spafford &quot;&lt;strong&gt;DISCLAIMER: IT IS A NOVEL ABOUT SOFTWARE&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Crypto-Rebels-Government-Privacy-Digital/dp/B092RLYFTR/ref=sr_1_1?crid=2D3CLLD5EIX0K&amp;amp;keywords=Crypto+by+Levy&amp;amp;qid=1656293742&amp;amp;sprefix=crypto+by+levy%2Caps%2C76&amp;amp;sr=8-1&quot;&gt;Crypto&lt;/a&gt; by Levy &quot;&lt;strong&gt;UTTERLY COMPELLING&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Search-Stupidity-High-Tech-Marketing-Disasters/dp/1590591046/ref=sr_1_1?crid=DBX7T0JAMIFH&amp;amp;keywords=In+Search+of+Stupidity%3A+Over+20+Years+of+High+Tech+Marketing+Disasters&amp;amp;qid=1656293923&amp;amp;s=audible&amp;amp;sprefix=in+search+of+stupidity+over+20+years+of+high+tech+marketing+disasters%2Caudible%2C83&amp;amp;sr=1-1&quot;&gt;In Search of Stupidity: Over 20 Years of High Tech Marketing Disasters&lt;/a&gt; by Chapman. &quot;&lt;strong&gt;YES IT HAS dbase IN THE INDEX; DON'T WAIT - READ THIS IMMEDIATELY; I'M GOING TO READ IT AGAIN THIS WEEK&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Effective-Engineer-Engineering-Disproportionate-Meaningful/dp/0996128107/ref=sr_1_1?crid=4LUJZGYFQUVK&amp;amp;keywords=the+effective+engineer+lau&amp;amp;qid=1656294022&amp;amp;s=audible&amp;amp;sprefix=the+effective+engineer+lau%2Caudible%2C103&amp;amp;sr=1-1&quot;&gt;The Effective Engineer&lt;/a&gt; by Lau&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smart-Gets-Things-Done-Technical/dp/1590598385/ref=sr_1_1?crid=TCDRX2PZ54VR&amp;amp;keywords=Smart+and+Gets+Things+Done+spolsky&amp;amp;qid=1656294058&amp;amp;s=audible&amp;amp;sprefix=smart+and+gets+things+done+spolsky%2Caudible%2C65&amp;amp;sr=1-1&quot;&gt;Smart &amp;amp; Gets Things Done&lt;/a&gt; by Spolsky&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Side-Hustle-Idea-Income-Days/dp/1524758841/ref=sr_1_1?crid=1RWGNWT1TTXCC&amp;amp;keywords=Side+Hustle&amp;amp;qid=1656294257&amp;amp;s=books&amp;amp;sprefix=side+hustle%2Cstripbooks%2C72&amp;amp;sr=1-1&quot;&gt;Side Hustle&lt;/a&gt; by Guillebeau &quot;&lt;strong&gt;CURRENTLY ON MY DESK; MAKE OF THAT WHAT YOU WILL&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Successful-Software-Business-Radin/dp/1565920643/ref=sr_1_1?crid=VCW1RNJCTV07&amp;amp;keywords=building+a+successful+software+business&amp;amp;qid=1656294320&amp;amp;s=books&amp;amp;sprefix=building+a+successful+software+business%2Cstripbooks%2C69&amp;amp;sr=1-1&quot;&gt;Building a Successful Software Business&lt;/a&gt; by Radin. &quot;&lt;strong&gt;THE SAS MODEL IS STILL SOFTWARE AND THIS IS A CLASSIC MARKETING TEXT APPLIED TO THE SOFTWARE BUSINESS; STILL VALID&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Engineers-Scientists-Iconoclasts-Programmers-Revolution/dp/0465042252/ref=sr_1_2?crid=1R1O50A41YXFU&amp;amp;keywords=Go+To+Steve+Lohr&amp;amp;qid=1656294410&amp;amp;s=books&amp;amp;sprefix=go+to+steve+lohr%2Cstripbooks%2C67&amp;amp;sr=1-2&quot;&gt;Go To&lt;/a&gt;.  &quot;&lt;strong&gt;ESSAY SIZE SNIPPETS ACROSS THE SOFTWARE REVOLUTION; RECOMMENDED&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;george-gilder&quot;&gt;George Gilder&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Silicon-Eye-Swashbucklers-Innovation-Enterprise/dp/0393328414/ref=sr_1_1?crid=2IKWPR61E54RM&amp;amp;keywords=The+Silicon+Eye+Gilder&amp;amp;qid=1656022137&amp;amp;s=books&amp;amp;sprefix=the+silicon+eye+gilder%2Cstripbooks%2C288&amp;amp;sr=1-1&quot;&gt;The Silicon Eye&lt;/a&gt; by George GIlder&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Telecosm-Infinite-Bandwidth-Revolutionize-World-ebook/dp/B000FC0V9I/ref=sr_1_1?crid=27Y2K8WR6Z514&amp;amp;keywords=telecosm+gilder&amp;amp;qid=1656022159&amp;amp;s=books&amp;amp;sprefix=telecosm+gilder%2Cstripbooks%2C62&amp;amp;sr=1-1&quot;&gt;Telecosm&lt;/a&gt; by George Gilder&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Microcosm-Quantum-Revolution-Economics-Technology/dp/067170592X/ref=sr_1_1?crid=1MGVSI1D5RRHG&amp;amp;keywords=microcosm+gilder&amp;amp;qid=1656022174&amp;amp;s=books&amp;amp;sprefix=microcosm+gilder%2Cstripbooks%2C58&amp;amp;sr=1-1&quot;&gt;Microcosm&lt;/a&gt; by George Gilder; &quot;&lt;strong&gt;A fascinating look at the personalities that makes chips; his discussion of people that make analog devices specifically has always stuck with me&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Life-After-Google-George-Gilder-audiobook/dp/B07FCRHKPD/ref=sr_1_1?crid=13PYPZMVZPGBW&amp;amp;keywords=Life+After+Google+gilder&amp;amp;qid=1656022235&amp;amp;s=books&amp;amp;sprefix=life+after+google+gilder%2Cstripbooks%2C75&amp;amp;sr=1-1&quot;&gt;Life After Google&lt;/a&gt; by George Gilder; &quot;&lt;strong&gt;HAVE NOT READ&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;segway&quot;&gt;Segway&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Reinventing-Wheel-Genius-Innovation-Ambition-ebook/dp/B06XHCN3P4/ref=sr_1_2?crid=2T0Z73A209I7Z&amp;amp;keywords=Reinventing+the+Wheel&amp;amp;qid=1656022097&amp;amp;sprefix=reinventing+the+wheel%2Caps%2C124&amp;amp;sr=8-2&quot;&gt;Reinventing the Wheel&lt;/a&gt; by Kemper; &quot;&lt;strong&gt;Sigh.  Can't Kamen do something better; what has he been doing since???&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;blackberry--nokia&quot;&gt;Blackberry &amp;amp; Nokia&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Losing-Signal-Extraordinary-Spectacular-BlackBerry-ebook/dp/B00Q20ASVS/ref=sr_1_1?crid=3G2PCID7ZJS79&amp;amp;keywords=Losing+the+Signal&amp;amp;qid=1656019556&amp;amp;s=books&amp;amp;sprefix=losing+the+signal%2Cstripbooks%2C203&amp;amp;sr=1-1&quot;&gt;Losing the Signal&lt;/a&gt; by McNish and Silcoff; &quot;&lt;strong&gt;I wasn't a BlackBerry guy but this explains the fire and furor.  A lost technology path similar to Palm and DEC&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Decline-Fall-Nokia-David-Cord-ebook/dp/B01FH1HWD4/ref=sr_1_1?crid=3DDKN7LP1YVWE&amp;amp;keywords=the+decline+and+fall+of+nokia&amp;amp;qid=1656019504&amp;amp;s=books&amp;amp;sprefix=the+decline+and+fall+of+noki%2Cstripbooks%2C156&amp;amp;sr=1-1&quot;&gt;The Decline and Fall of Nokia&lt;/a&gt; by Cord; &quot;&lt;strong&gt;HAVE NOT READ&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;web-20--facebook--twitter--instagram--airbnb--etc&quot;&gt;Web 2.0 / Facebook / Twitter / Instagram / AirBnB / Etc&lt;/h2&gt;

&lt;h3 id=&quot;facebook&quot;&gt;Facebook&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Authoritas-Students-Admissions-Founding-Facebook-ebook/dp/B0017S4UOQ/ref=sr_1_1?crid=123N6LNHU8TY0&amp;amp;keywords=Authoritas+Greenspan&amp;amp;qid=1656021367&amp;amp;s=books&amp;amp;sprefix=authoritas+greenspan%2Cstripbooks%2C179&amp;amp;sr=1-1&quot;&gt;Authoritas&lt;/a&gt; by Aaron Greenspan&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Accidental-Billionaires-Founding-Facebook-Betrayal/dp/0307740986/ref=sr_1_1?crid=1ZB9UQKYK5JRF&amp;amp;keywords=The+Accidental+Billionaires&amp;amp;qid=1656021382&amp;amp;s=books&amp;amp;sprefix=authoritas+greenspan%2Cstripbooks%2C478&amp;amp;sr=1-1&quot;&gt;The Accidental Billionaires&lt;/a&gt; by Ben Mezrichj&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Facebook-Effect-Inside-Company-Connecting-ebook/dp/B003BHM85O/ref=sr_1_1?crid=34YD4U3UFB8KL&amp;amp;keywords=The+Facebook+Effect&amp;amp;qid=1656021432&amp;amp;s=books&amp;amp;sprefix=the+facebook+effect%2Cstripbooks%2C298&amp;amp;sr=1-1&quot;&gt;The Facebook Effect&lt;/a&gt; by David Kirkpatrick&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dot-Complicated-Untangling-Wired-Lives-ebook/dp/B00BATNRH8/ref=sr_1_1?crid=1B833QRXBP1QI&amp;amp;keywords=dot+Complicated&amp;amp;qid=1656021446&amp;amp;s=books&amp;amp;sprefix=the+facebook+effect%2Cstripbooks%2C64&amp;amp;sr=1-1&quot;&gt;dot Complicated&lt;/a&gt; by Randi Zuckerberg&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Lean-Women-Work-Will-Lead/dp/0385349947/ref=sr_1_1?crid=3HXRPRY591FT4&amp;amp;keywords=lean+in+sheryl+sandberg&amp;amp;qid=1656293582&amp;amp;sprefix=Lean+in%2Caps%2C85&amp;amp;sr=8-1&quot;&gt;Lean In&lt;/a&gt; by Sandberg&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Facebook-Inside-Story-Steven-Levy/dp/0735213151/ref=sr_1_1?crid=3A3YROHNHK6YJ&amp;amp;keywords=Facebook%3A+The+Inside+Story&amp;amp;qid=1656294190&amp;amp;s=books&amp;amp;sprefix=facebook+the+inside+story%2Cstripbooks%2C108&amp;amp;sr=1-1&quot;&gt;Facebook: The Inside Story&lt;/a&gt; by Levy.  &quot;&lt;strong&gt;IT IS LEVY; HE IS ALWAYS EXCELLENT&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;multiple-companies-covered-in-one-book&quot;&gt;Multiple Companies Covered in One Book&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Boy-Kings-Journey-Social-Network/dp/1451668260/ref=sr_1_1?crid=38SKLO40EV074&amp;amp;keywords=The+Boy+Kings&amp;amp;qid=1656021479&amp;amp;s=books&amp;amp;sprefix=the+boy+kings%2Cstripbooks%2C178&amp;amp;sr=1-1&quot;&gt;The Boy Kings&lt;/a&gt; by Losse&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Upstarts-Airbnb-Companies-Silicon-Changing/dp/0316388394/ref=sr_1_1?keywords=the+upstarts+brad+stone&amp;amp;qid=1656021578&amp;amp;sprefix=The+Upstarts+bra%2Caps%2C58&amp;amp;sr=8-1&quot;&gt;The Upstarts&lt;/a&gt; by Brad Stone&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Valley-Genius-Uncensored-History-Founders/dp/1455559024/ref=sr_1_1?crid=34AF34T27K8EB&amp;amp;keywords=Valley+of+Genius&amp;amp;qid=1656021594&amp;amp;sprefix=valley+of+genius%2Caps%2C107&amp;amp;sr=8-1&quot;&gt;Valley of Genius&lt;/a&gt; by Adam Fisher&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Always-Day-One-Titans-Forever/dp/0593083482/ref=sr_1_1?crid=Z8DODQCH8DN&amp;amp;keywords=Always+Day+One&amp;amp;qid=1656021659&amp;amp;sprefix=always+day+one%2Caps%2C91&amp;amp;sr=8-1&quot;&gt;Always Day One&lt;/a&gt; by Kantrowitz&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Valley-Gods-Silicon-Story-ebook/dp/B0176M3XDK/ref=sr_1_1?crid=22MPMC6PCTIBU&amp;amp;keywords=Valley+of+the+Gods+wolfe&amp;amp;qid=1656021790&amp;amp;sprefix=valley+of+the+gods+wolfe%2Caps%2C151&amp;amp;sr=8-1&quot;&gt;Valley of the Gods&lt;/a&gt; by Wolfe; &quot;&lt;strong&gt;HAVE NOT READ&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Four-Hidden-Amazon-Facebook-Google/dp/0735213658/ref=sr_1_1?crid=2QWV8OO4AIC5V&amp;amp;keywords=The+Four+galloway&amp;amp;qid=1656020502&amp;amp;s=books&amp;amp;sprefix=the+four+galloway%2Cstripbooks%2C56&amp;amp;sr=1-1&quot;&gt;The Four&lt;/a&gt; by Galloway; &quot;&lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;twitter&quot;&gt;Twitter&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Things-Little-Bird-Stone-2014-04-24/dp/B01K952OJ0/ref=sr_1_2?crid=2JIE61LHNIA3T&amp;amp;keywords=Things+a+Little+Bird+Told+Me+biz+stone&amp;amp;qid=1656021531&amp;amp;s=books&amp;amp;sprefix=things+a+little+bird+told+me+biz+stone%2Cstripbooks%2C60&amp;amp;sr=1-2&quot;&gt;Things a Little Bird Told Me&lt;/a&gt; by Biz Stone&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hatching-Twitter-Story-Friendship-Betrayal/dp/1591847087/ref=sr_1_1?crid=TJP0BMRE3EKO&amp;amp;keywords=Hatching+Twitter&amp;amp;qid=1656021554&amp;amp;s=books&amp;amp;sprefix=hatching+twitter%2Cstripbooks%2C78&amp;amp;sr=1-1&quot;&gt;Hatching Twitter&lt;/a&gt; by Nick Bilton&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;airbnb&quot;&gt;Airbnb&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Airbnb-Story-International-Gallagher-author/dp/1328530221/ref=sr_1_2?crid=2W9IA5E29VM19&amp;amp;keywords=The+Airbnb+Story&amp;amp;qid=1656021609&amp;amp;sprefix=the+airbnb+story%2Caps%2C85&amp;amp;sr=8-2&quot;&gt;The Airbnb Story&lt;/a&gt; by Gallagher&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;instagram&quot;&gt;Instagram&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/No-Filter-Inside-Story-Instagram/dp/B07Y3TJ163/ref=sr_1_1?crid=XEY4YWHJSZ73&amp;amp;keywords=No+Filter+by&amp;amp;qid=1656021637&amp;amp;sprefix=no+filter+by%2Caps%2C85&amp;amp;sr=8-1&quot;&gt;No Filter&lt;/a&gt; by Sarah Frier; &quot;&lt;strong&gt;Instagram is more important than we realize and this dives into the why&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;other&quot;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Truck-Full-Money-Tracy-Kidder/dp/0812995244/ref=sr_1_1?crid=2FGVYGLMWKUCP&amp;amp;keywords=A+Truck+Full+of+Money&amp;amp;qid=1656021680&amp;amp;sprefix=a+truck+full+of+money%2Caps%2C87&amp;amp;sr=8-1&quot;&gt;A Truck Full of Money&lt;/a&gt; by Tracy Kidder; &quot;&lt;strong&gt;Not as good as Soul of a New Machine&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Disrupted-Dan-Lyons/dp/0316306096/ref=sr_1_1?keywords=disrupted+dan+lyons&amp;amp;qid=1656021699&amp;amp;sprefix=Disrupted+Dan+%2Caps%2C78&amp;amp;sr=8-1&quot;&gt;Disrupted&lt;/a&gt; by Dan Lyons&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/1544522894?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details&quot;&gt;Getting Acquired&lt;/a&gt; by Gazdecki&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Bitcoin-Billionaires-Genius-Betrayal-Redemption/dp/1250217741/ref=sr_1_1?crid=JJ4E06I46L1C&amp;amp;keywords=Bitcoin+Billionaires&amp;amp;qid=1656021737&amp;amp;sprefix=bitcoin+billionaires%2Caps%2C157&amp;amp;sr=8-1&quot;&gt;Bitcoin Billionaires&lt;/a&gt; by Ben Mezrich; &quot;&lt;strong&gt;HAVE NOT YET READ AND GENERALLY I ABHOR CRYPTO; INSERT DUTCH TULIP BULB RANT HERE&lt;/strong&gt;&quot;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Beyond-Valley-Innovators-Overcoming-Technologies/dp/0262043130/ref=sr_1_2?crid=3OTBPMSTTXCAK&amp;amp;keywords=Beyond+the+Valley&amp;amp;qid=1656020530&amp;amp;s=books&amp;amp;sprefix=beyond+the+valley%2Cstripbooks%2C75&amp;amp;sr=1-2&quot;&gt;Beyond the Valley&lt;/a&gt; by Srinivasan; &quot;&lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-cellphone-wars&quot;&gt;The Cellphone Wars&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Dogfight-Apple-Google-Started-Revolution/dp/0374109206/ref=sr_1_1?crid=15UK05DE7CP0Y&amp;amp;keywords=Dogfight+vogelstein&amp;amp;qid=1656019710&amp;amp;s=books&amp;amp;sprefix=dogfight+vogelstein%2Cstripbooks%2C123&amp;amp;sr=1-1&quot;&gt;Dogfight&lt;/a&gt; by Fred Vogelstein&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gaming&quot;&gt;Gaming&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Disclaimer: I'm not a gamer and there is a rich lore of game books that aren't here; send me recommendations on Twitter&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Blood-Sweat-and-Pixels-audiobook/dp/B0731MCF1R/ref=sr_1_1?crid=33YHJ1VE2TE56&amp;amp;keywords=Blood%2C+Sweat+and+Pixels&amp;amp;qid=1656019580&amp;amp;s=books&amp;amp;sprefix=blood%2C+sweat+and+pixels%2Cstripbooks%2C86&amp;amp;sr=1-1&quot;&gt;Blood, Sweat and Pixels&lt;/a&gt; by Schreier; &quot;&lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Lucky-That-Way-Brad-Fregger/dp/0977353532/ref=sr_1_1?crid=2M13Y13ISQZS0&amp;amp;keywords=Lucky+That+Way+fregger&amp;amp;qid=1656022265&amp;amp;s=books&amp;amp;sprefix=lucky+that+way+fregger%2Cstripbooks%2C126&amp;amp;sr=1-1&quot;&gt;Lucky That Way&lt;/a&gt; by Fregger&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;space-20--tesla&quot;&gt;Space 2.0 / Tesla&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Liftoff-Desperate-Early-Launched-SpaceX/dp/B089QRXBXB/ref=sr_1_1?crid=4B8PGODG3HL2&amp;amp;keywords=liftoff+eric+berger&amp;amp;qid=1656019792&amp;amp;s=books&amp;amp;sprefix=Liftoff%2Cstripbooks%2C89&amp;amp;sr=1-1&quot;&gt;Liftoff&lt;/a&gt; by Eric Berger&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Silicon-Sky-Start-Up-Satellite-Heaven/dp/0738200948/ref=sr_1_1?crid=269H3FSR4FHP5&amp;amp;keywords=Silicon+Sky+dorsey&amp;amp;qid=1656019808&amp;amp;s=books&amp;amp;sprefix=silicon+sky+dorsey%2Cstripbooks%2C213&amp;amp;sr=1-1&quot;&gt;Silicon Sky&lt;/a&gt; by Gary Dorsey; &quot;&lt;strong&gt;Yep.  Space 2.0 started before SpaceX – 99&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Rocket-Billionaires-Tim-Fernholz-audiobook/dp/B07BB4FJM5/ref=sr_1_1?keywords=rocket+billionaires&amp;amp;qid=1656019847&amp;amp;s=books&amp;amp;sprefix=rocket+billi%2Cstripbooks%2C76&amp;amp;sr=1-1&quot;&gt;Rocket Billionaires&lt;/a&gt; by Fernholz; &quot;&lt;strong&gt;HAVE NOT READ YET&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Backroom-Boys-Secret-Return-British/dp/0571214975/ref=sr_1_9?crid=M9TV6DZ8KNZE&amp;amp;keywords=francis+spufford&amp;amp;qid=1656019899&amp;amp;s=books&amp;amp;sprefix=francis+spufford%2Cstripbooks%2C67&amp;amp;sr=1-9&quot;&gt;Back Room Boys&lt;/a&gt; by Francis Spufford; &quot;&lt;strong&gt;Fascinating since it isn't about America&lt;/strong&gt;&quot;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Rocket-Dreams-Shaped-Vision-Beyond-ebook/dp/B000FC0TKY/ref=sr_1_2?crid=219OE4IQDAEUO&amp;amp;keywords=Rocket+Dreams&amp;amp;qid=1656019943&amp;amp;s=books&amp;amp;sprefix=rocket+dreams%2Cstripbooks%2C86&amp;amp;sr=1-2&quot;&gt;Rocket Dreams&lt;/a&gt; by Marina Benjamin&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/How-to-Make-Spaceship-audiobook/dp/B01KIFUZL0/ref=sr_1_2?crid=3SWXEHGOLEO6I&amp;amp;keywords=How+to+Make+a+Spaceship&amp;amp;qid=1656019961&amp;amp;s=books&amp;amp;sprefix=how+to+make+a+spaceship%2Cstripbooks%2C54&amp;amp;sr=1-2&quot;&gt;How to Make a Spaceship&lt;/a&gt; by Julian Guthrie&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Elon-Musk-Ashlee-Vance-audiobook/dp/B00UVY52JO/ref=sr_1_1?crid=R97TFRKE23I4&amp;amp;keywords=Elon+Musk+vance&amp;amp;qid=1656020051&amp;amp;s=books&amp;amp;sprefix=elon+musk+vance%2Cstripbooks%2C165&amp;amp;sr=1-1&quot;&gt;Elon Musk&lt;/a&gt; by Vance&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 23 Jun 2022 04:43:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2022/06/23/an-startup-history-bibliography.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2022/06/23/an-startup-history-bibliography.html</guid>
        
        <category>startup</category>
        
        <category>books</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Getting Past strscan Gem Issues in Rails</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08793.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Yesterday I deployed a new thing via HatchBox and I was using the very, very latest – Rails 7.0.3. My deploy was textbook perfect and then I viewed it in Chrome and got that awful, awful message:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Web application could not be started&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Insert loud cursing here&lt;/strong&gt;  I know the drill – it is a lower level error than HatchBox can handle (although I can think of at least a few ways HatchBox could handle it) – so do the dance:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SSH into the box&lt;/li&gt;
  &lt;li&gt;sudo su&lt;/li&gt;
  &lt;li&gt;tail -f /var/log/nginx/error.log&lt;/li&gt;
  &lt;li&gt;Read the error, google and assess.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here was the error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@cartazzi3-web1:/home/deploy/Cartazzi/releases/20220608082805# tail -f /var/log/nginx/error.log
App 14330 output:     /usr/share/passenger/helper-scripts/rack-preloader.rb:189:in `block in &amp;lt;module:App&amp;gt;'
App 14330 output:     /usr/lib/ruby/vendor_ruby/phusion_passenger/loader_shared_helpers.rb:397:in `run_block_and_record_step_progress'
App 14330 output:     /usr/share/passenger/helper-scripts/rack-preloader.rb:188:in `&amp;lt;module:App&amp;gt;'
App 14330 output:     /usr/share/passenger/helper-scripts/rack-preloader.rb:30:in `&amp;lt;module:PhusionPassenger&amp;gt;'
App 14330 output:     /usr/share/passenger/helper-scripts/rack-preloader.rb:29:in `&amp;lt;main&amp;gt;'
[ E 2022-06-22 15:04:13.2231 21017/T9t age/Cor/App/Implementation.cpp:221 ]: Could not spawn process for application 
/home/deploy/cartazzi_marketing/current: The application encountered the following error: 
You have already activated strscan 3.0.1, but your Gemfile requires strscan 3.0.3. 
Since strscan is a default gem, you can either remove your dependency on it or try updating 
to a newer version of bundler that supports strscan as a default gem. (Gem::LoadError)
  Error ID: 9a03b9ce
  Error details saved to: /tmp/passenger-error-pO6ZTu.html  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The normal googling suggested things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Update strscan on the host system&lt;/li&gt;
  &lt;li&gt;Mess with Gemfile&lt;/li&gt;
  &lt;li&gt;Mess with Gemfile.lock&lt;/li&gt;
  &lt;li&gt;Add a Passenger level configuration var for bundler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd give citations for these but Chrome just crashed and it is closing in on 4 am and the weariness in my bones doesn't allow me to restart Chrome right now…&lt;/p&gt;

&lt;p&gt;The first 3 options above didn't work but the Passenger level configuration tickled my &quot;Let's try it even though I'm exhausted&quot; fancy.  This took me into HatchBox's custom NGINX Configuration option where I added:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;passenger_env_var RUBYOPT '-r bundler/setup';    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;from this &lt;a href=&quot;https://github.com/phusion/passenger/issues/2409&quot;&gt;blog post&lt;/a&gt; (yes I restarted Chrome; grumble; grumble).  This was also &lt;a href=&quot;https://www.phusionpassenger.com/library/config/nginx/reference/&quot;&gt;helpful&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And, happily, that fixed the problem.  And then I napped.&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Jun 2022 03:51:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/23/getting-past-strscan-gem-issues-in-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/23/getting-past-strscan-gem-issues-in-rails.html</guid>
        
        <category>rails</category>
        
        <category>hatchbox</category>
        
        <category>cartazzi</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Using SSL in HatchBox with AWS Route 53</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:34:13.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;HatchBox continues to be my favorite tool for Rails deployment hands down.  And this includes Dockarno – my own Bash based Docker deployment tool.  When something you pay for replaces something you wrote yourself, that's a sign of its very, very strong goodness.&lt;/p&gt;

&lt;p&gt;I just used HatchBox to support SSL wildcard deployment for something I'm building and the process was a tad bit tricky so I thought I'd write it up.&lt;/p&gt;

&lt;p&gt;HatchBox has excellent built in SSL support using Let's Encrypt but when you use wildcard SSL, you get asked for the Route 53 Key and the Route 53 secret.  Here's how you get those:&lt;/p&gt;

&lt;h2 id=&quot;on-aws-in-route-53&quot;&gt;On AWS, in Route 53&lt;/h2&gt;

&lt;p&gt;In Route 53, make sure you have *.domain.extension defined to allow it to be wildcard.&lt;/p&gt;

&lt;h2 id=&quot;on-aws-in-iam&quot;&gt;On AWS, in IAM&lt;/h2&gt;

&lt;p&gt;In the IAM console, you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add a user&lt;/li&gt;
  &lt;li&gt;Add that user to a group&lt;/li&gt;
  &lt;li&gt;Add a JSON policy document&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the JSON policy that you need to add:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;Version&quot;: &quot;2012-10-17&quot;,
    &quot;Statement&quot;: [
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: &quot;route53:GetChange&quot;,
            &quot;Resource&quot;: &quot;arn:aws:route53:::change/*&quot;
        },
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: &quot;route53:ChangeResourceRecordSets&quot;,
            &quot;Resource&quot;: &quot;arn:aws:route53:::hostedzone/*&quot;
        },
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: &quot;route53:ListHostedZonesByName&quot;,
            &quot;Resource&quot;: &quot;*&quot;
        },
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: &quot;route53:ListHostedZones&quot;,
            &quot;Resource&quot;: &quot;*&quot;
        },
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: &quot;route53:ListResourceRecordSets&quot;,
            &quot;Resource&quot;: &quot;*&quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After you've added that user then you will be prompted with the normal AWS access key / secret key.  Save the credentials and then add them to HatchBox.  HatchBox will then got thru an API session with AWS and validate the key.&lt;/p&gt;

&lt;h2 id=&quot;my-experience-and-chriss-brilliant-work&quot;&gt;My Experience and Chris's Brilliant Work&lt;/h2&gt;

&lt;p&gt;I started from documentation I found online (see below) that turned out to be incomplete.  When I examined the HatchBox log for the transaction, I saw this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----&amp;gt; Connecting to SOMETHING3-lb (138.68.227.244 port 22) as root

Uploaded /etc/logrotate.d/acme.sh

Executing 'curl https://raw.githubusercontent.com/acmesh-official/acme.sh/master/acme.sh | sh -s -- --install-online'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  211k  100  211k    0     0  4139k      0 --:--:-- --:--:-- --:--:-- 4139k
[Thu Jun 23 06:55:55 UTC 2022] Installing from online archive.
[Thu Jun 23 06:55:55 UTC 2022] Downloading https://github.com/acmesh-official/acme.sh/archive/master.tar.gz
[Thu Jun 23 06:55:56 UTC 2022] Extracting master.tar.gz
[Thu Jun 23 06:55:56 UTC 2022] It is recommended to install socat first.
[Thu Jun 23 06:55:56 UTC 2022] We use socat for standalone server if you use standalone mode.
[Thu Jun 23 06:55:56 UTC 2022] If you don't use standalone mode, just ignore this warning.
[Thu Jun 23 06:55:56 UTC 2022] Installing to /root/.acme.sh
[Thu Jun 23 06:55:56 UTC 2022] Installed to /root/.acme.sh/acme.sh
[Thu Jun 23 06:55:56 UTC 2022] Installing alias to '/root/.bashrc'
[Thu Jun 23 06:55:56 UTC 2022] OK, Close and reopen your terminal to start using acme.sh
[Thu Jun 23 06:55:56 UTC 2022] Installing cron job
53 0 * * * &quot;/root/.acme.sh&quot;/acme.sh --cron --home &quot;/root/.acme.sh&quot; &amp;gt; /dev/null
[Thu Jun 23 06:55:56 UTC 2022] Good, bash is found, so change the shebang to use bash as preferred.
[Thu Jun 23 06:55:57 UTC 2022] OK
[Thu Jun 23 06:55:57 UTC 2022] Install success!

Executing '~/.acme.sh/acme.sh --set-default-ca --server letsencrypt'
[Thu Jun 23 06:55:58 UTC 2022] Changed default CA to: https://acme-v02.api.letsencrypt.org/directory

Executing 'AWS_ACCESS_KEY_ID='DELETEDCOZIMNOTSTUPID' AWS_SECRET_ACCESS_KEY='DELETEDCOZIMSTILLNOTSTUPID' AWS_DNS_SLOWRATE=1 ~/.acme.sh/acme.sh --issue -d *.SOMETHING.com -d SOMETHING.com --dns dns_aws --force --log'
[Thu Jun 23 06:56:00 UTC 2022] Using CA: https://acme-v02.api.letsencrypt.org/directory
[Thu Jun 23 06:56:00 UTC 2022] Multi domain='DNS:*.SOMETHING.com,DNS:SOMETHING.com'
[Thu Jun 23 06:56:00 UTC 2022] Getting domain auth token for each domain
[Thu Jun 23 06:56:02 UTC 2022] Getting webroot for domain='*.SOMETHING.com'
[Thu Jun 23 06:56:02 UTC 2022] Getting webroot for domain='SOMETHING.com'
[Thu Jun 23 06:56:02 UTC 2022] Adding txt value: fjN5n0AgRpvyYlqedjL-8KLS9rrgEzVAWdbb9gfh1kY for domain:  _acme-challenge.SOMETHING.com
[Thu Jun 23 06:56:03 UTC 2022] Getting existing records for _acme-challenge.SOMETHING.com
[Thu Jun 23 06:56:03 UTC 2022] Response error:
SenderAccessDeniedUser: arn:aws:iam::835336135388:user/hatchboxdns2 is not authorized to perform: route53:ListResourceRecordSets on resource: arn:aws:route53:::hostedzone/Z1OSXVLV0259TW because no identity-based policy allows the route53:ListResourceRecordSets action427a3f8b-97ff-40fc-8079-3b2799e51463
[Thu Jun 23 06:56:04 UTC 2022] Error add txt for domain:_acme-challenge.SOMETHING.com
[Thu Jun 23 06:56:04 UTC 2022] Please check log file for more details: /root/.acme.sh/acme.sh.log

-----&amp;gt; Command returned exit code 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is where Chris did is normally brilliant work.  By passing through the full response error (and building a user viewable log facility), I was able to see:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SenderAccessDeniedUser: arn:aws:iam::835336135388:user/hatchboxdns2 is not authorized to perform: route53:ListResourceRecordSets on resource: arn:aws:route53:::hostedzone/Z1OSXVLV0259TW because no identity-based policy allows the route53:ListResourceRecordSets action427a3f8b-97ff-40fc-8079-3b2799e51463
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that told me I needed to add &lt;strong&gt;route53:ListResourceRecordSets&lt;/strong&gt; to my JSON policy.&lt;/p&gt;

&lt;p&gt;Outstanding!&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.certifytheweb.com/docs/dns/providers/awsroute53/&quot;&gt;This&lt;/a&gt; was helpful but not complete and I had to update the JSON policy document per above.  The one in the article wasn't complete enough; it was missing the last two actions above.&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Jun 2022 03:01:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/23/using-ssl-in-hatchbox-with-aws-route-53.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/23/using-ssl-in-hatchbox-with-aws-route-53.html</guid>
        
        <category>rails</category>
        
        <category>hatchbox</category>
        
        <category>aws</category>
        
        <category>route53</category>
        
        <category>cartazzi</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Building a Bootstrap App with Rails 7 and SCSS Files</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08779.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;As is too often the case, I find that the initial aspect of getting a modern app (Bootstrap, Tailwind, React) initially setup to be the most &lt;strong&gt;frustrating&lt;/strong&gt; aspect of Rails.  Given that I like to spin up new apps pretty regularly, well, I spend a lot of time being frustrated with an old man's grumbling of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It didn't used to be this hard.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No it wasn't this hard.  And while I still don't really understand asset compilation, I did recently put together a new app where I pulled in SCSS files using variables from a different app and I can start to see it.&lt;/p&gt;

&lt;p&gt;This blog post walks through a Rails 7 app using .scss files.&lt;/p&gt;

&lt;h2 id=&quot;step-1-rails-new&quot;&gt;Step 1: Rails New&lt;/h2&gt;

&lt;p&gt;Here's your Rails 7 new command to generate a new app with Bootstrap:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new scss_test1 --css bootstrap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yep.  That's it.  Whoa!!!  There are also options to use Tailwind.  I found this technique in the Saeloun article linked below and I will be forever grateful; seriously – &lt;em&gt;thank you&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-2-add-the-sassc-rails-gem&quot;&gt;Step 2: Add the Sassc-Rails Gem&lt;/h2&gt;

&lt;p&gt;I believe this Gem is needed as sassc support is officially deprecated.  But I might be wrong about this; front end stuff changes with every Rails release so if I'm wrong, well, sigh.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;sassc-rails&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Please see the last section &quot;That Mysterious Error&quot;; you may not want this in your Gemfile or:&lt;/p&gt;

&lt;h2 id=&quot;step-3-copy-in-your-scss-files&quot;&gt;Step 3: Copy In Your SCSS Files&lt;/h2&gt;

&lt;p&gt;If you are pulling in SCSS files then you need to copy them into your:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/assets/stylesheets 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;directory.  They can exist elsewhere but that directory is for stylesheets so differing on this point confuses me.&lt;/p&gt;

&lt;h2 id=&quot;modify-your-include-directives&quot;&gt;Modify Your Include Directives&lt;/h2&gt;

&lt;p&gt;This is the tricky bit and where you simply have to experiment.  The thing to understand is that asset compilation is just that – compilation.If you're old school enough that you understand the analogy of your stylesheet files becoming akin to a make file with all the &lt;strong&gt;dark magic&lt;/strong&gt; that entails, perhaps that helps.  In your stylesheets directory there will be an initial stylesheet file, for me, it was application_bootstrap.scss and then I had copied in a number of other stylesheet files like palette.scss, landing.scss, customized_bootstrap.scss and so on.  In my core application_bootstrap.scss was this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// system level; installed by rails
@import 'bootstrap/scss/bootstrap';
@import 'bootstrap-icons/font/bootstrap-icons';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Disclaimer: I added the comment to help my understand where things came from.&lt;/p&gt;

&lt;p&gt;I then modified it to look like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@import './customized_bootstrap.scss';
 
// system level; installed by rails
@import 'bootstrap/scss/bootstrap';
@import 'bootstrap-icons/font/bootstrap-icons';

@import 'palette.scss';
@import 'landing.scss';    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please note that the order matters – this really is a make file and what you are doing is dealing with dependencies.  As an example there are are variables defined in some files that need to be imported before other files.  In my customized_bootstrap.scss file, which I pulled in from elsewhere and another CSS engine (vite), I had to make a bunch of changes like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 *  import the necessary Bootstrap files 
 */
@import &quot;../node_modules/bootstrap/scss/functions&quot;;
@import &quot;../node_modules/bootstrap/scss/mixins&quot;;
@import '../node_modules/bootstrap/scss/variables';
@import &quot;../node_modules/bootstrap/scss/utilities&quot;;

//@import &quot;./node_modules/bootstrap/scss/_functions.scss&quot;;
//@import &quot;node_modules/bootstrap/scss/functions.scss&quot;;
//@import &quot;//node_modules/bootstrap/scss/variables&quot;;
//@import &quot;//node_modules/bootstrap/scss/utilities&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The commented out items where the initial state.&lt;/p&gt;

&lt;p&gt;I also had to do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@import &quot;//landing&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don't understand the use of // versus ,/  But it is all just path references and we are developers – we can get this.  This was purely the desperate machinations of a developer with Stack Overflow access and the desire to make something work with an old app on the left and a new app on the right refreshing constantly until the two sites where in visual parity.  Typing this triggered a Quantum Leap memory &quot;Hoping against hope that the next refresh would be the last&quot;.&lt;/p&gt;

&lt;h2 id=&quot;that-mysterious-error-or-oh-crap-deploy-&quot;&gt;That Mysterious Error or Oh Crap Deploy …&lt;/h2&gt;

&lt;p&gt;So I did all the above and had things working perfectly in development.  I got to deploy and got this crap:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SassC::SyntaxError: Error: Function rgb is missing argument $green.
        on line 17800 of stdin
&amp;gt;&amp;gt;   border-color: rgb(191 219 254/var(--tw-border-opacity));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A wee spot of googling had me traveling over to Github where I found this &lt;a href=&quot;https://github.com/tailwindlabs/tailwindcss/discussions/6738&quot;&gt;thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The answer turned out to be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove the sasc-rails gem from Gemfile&lt;/li&gt;
  &lt;li&gt;Do a bundle update&lt;/li&gt;
  &lt;li&gt;Test things by running an assets precompile locally but in &lt;strong&gt;PRODUCTION&lt;/strong&gt; mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the following command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=production bundle exec rake assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I won't claim to fully understand the asset pipeline but this is the closest I've gotten to understanding it.  In particular the analogy of a makefile for CSS very much helped me grok this.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.saeloun.com/2021/11/17/rails-7-added-css-app-generator.html&quot;&gt;The Saeloun article&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rails/comments/pk7x5j/any_clue_what_with_cssscss_imports_in_rails_7/&quot;&gt;Useful Reddit Thread&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/71231622/idiomatic-sass-processing-in-rails-7&quot;&gt;Stack Overflow 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/asset_pipeline.html&quot;&gt;Asset Pipeline Overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/68909199/invalid-css-value-error-while-customizing-bootstrap-5-colors-with-sass-3&quot;&gt;Stack Overflow 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/rfs/tree/v9.0.3#installation&quot;&gt;Bootstrap RFS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/66642300/error-undefined-variable-in-rails-sass-compilation&quot;&gt;Stack Overflow 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sass-lang.com/guide&quot;&gt;SASS Basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rails/cssbundling-rails&quot;&gt;CSS Bundling and Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/26171159/require-statement-in-application-css-scss&quot;&gt;Stack Overflow 4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/51127038/sass-error-cant-find-stylesheet-to-import&quot;&gt;Stack Overflow - The Extra Slash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rails/comments/rjg2ql/rails_7_assetsprecompile_results_in_loaderror/&quot;&gt;Reddit Again&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/45624252/couldnt-find-file-css-font-awesome-with-type-text-css&quot;&gt;Stack Overflow on Font Awesome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 22 Jun 2022 02:12:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/22/building-a-bootstrap-app-with-rails-7-and-scss-files.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/22/building-a-bootstrap-app-with-rails-7-and-scss-files.html</guid>
        
        <category>rails</category>
        
        <category>bootstrap</category>
        
        <category>sass</category>
        
        <category>scss</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Declaring Ruby Bankruptcy, The Ruby Psych 3.1 Issue, RVM and RBEnv</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01307.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I had a bloody awful Sunday three days ago.  I had started work on a new application that had Ruby 3.1 set in its Gemfile and I blithely installed Ruby 3.1 using RVM.  And then my life began to suck slimy green toads with errors like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/yaml.rb:3: warning: It seems your ruby installation is missing psych (for YAML output).
To eliminate this warning, please install libyaml and reinstall your ruby.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I'd like to say that I wasn't quite as diligent in fixing this because, well, it was &lt;strong&gt;sunday&lt;/strong&gt;.  However, given the readiness by which most of us generally install new versions of ruby, that wasn't it.  We simply aren't used to &lt;strong&gt;breaking&lt;/strong&gt; changes with Ruby.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.ctrl.blog/entry/ruby-psych4.html&quot;&gt;ctrl blog&lt;/a&gt; does a great job of describing this.  Thank you.  The basic issue is that psych is a low level gem and once it changes, well, your world kind of just breaks.&lt;/p&gt;

&lt;p&gt;What I pretty much found out immediately is that every single thing I wanted to do with Ruby just failed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bundle install&lt;/li&gt;
  &lt;li&gt;irb&lt;/li&gt;
  &lt;li&gt;rails c&lt;/li&gt;
  &lt;li&gt;rake&lt;/li&gt;
  &lt;li&gt;And, &quot;drum roll&quot; – changing over to a different ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The fact that I couldn't change over to a different ruby basically meant that I was screwed.  I don't think that this was intended.  And it is entirely possible that this was some kind of whacky interaction on a development system with, ahem, a lot of rubies and crazy legacy conflicts but that is what happened.&lt;/p&gt;

&lt;h2 id=&quot;declaring-ruby-bankruptcy&quot;&gt;Declaring Ruby Bankruptcy&lt;/h2&gt;

&lt;p&gt;Since I couldn 't change rubies, everything just devolved into an amazing pool of &lt;strong&gt;suckitude&lt;/strong&gt;.  Not only couldn't I use Ruby, I couldn't blog, run any of my utility scripts, etc.  My final answer was to declare &lt;em&gt;ruby bankruptcy&lt;/em&gt; and:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;delete rvm&lt;/li&gt;
  &lt;li&gt;delete rbenv&lt;/li&gt;
  &lt;li&gt;delete all references to rvm and rbenv from zsh and other profile files&lt;/li&gt;
  &lt;li&gt;reboot&lt;/li&gt;
  &lt;li&gt;rm -rf ~/.rvm&lt;/li&gt;
  &lt;li&gt;rm -rf ~/.rbenv&lt;/li&gt;
  &lt;li&gt;reboot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've been a long time Ruby user so this process exposed some craziness like 2.3.1 log files owned by root which couldn't be deleted.&lt;/p&gt;

&lt;h2 id=&quot;taking-a-break&quot;&gt;Taking a Break&lt;/h2&gt;

&lt;p&gt;This was the point where I threw my hands up, walked away and decided that it was a bad day for software.  My workshop, table saw and the desire to get my hands actually dirty (instead of virtually dirty) took over.&lt;/p&gt;

&lt;h2 id=&quot;moving-forward---separating-my-31-and-31--apps-from-earlier&quot;&gt;Moving Forward - Separating my 3.1 and 3.1 + Apps from Earlier&lt;/h2&gt;

&lt;p&gt;After a calming break that involved reducing large pieces of wood to smaller pieces of wood and saw dust, I returned to my computer.  My decision was to be a bit more judicious moving forward with how I managed my rubies.  Given that you have to have different rubies to work on different projects, I decided:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For anything 3.1 or later, I would use RVM to manage the project&lt;/li&gt;
  &lt;li&gt;For anything below 3.1, I would use Rbenv&lt;/li&gt;
  &lt;li&gt;To avoid any conflicts, I would further isolate RVM and Rbenv by NOT having Rbenv fully installed in my shell environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: RVM and Rbenv are software to manage your ruby versions.  The issue, particularly on OSX, is that the operating system (OS) generally ships with a version of Ruby designed to run system scripts.  As this ruby cannot be replaced since that might break operating system level code, you need a way to isolate application level ruby from OS level ruby.  This led to the creation of tools like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RVM&lt;/li&gt;
  &lt;li&gt;Rbenv&lt;/li&gt;
  &lt;li&gt;asdf&lt;/li&gt;
  &lt;li&gt;and others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these tools essentially play games with your shell code and pathing to inject a different version of Ruby before the OS level ruby is called.  Opinions on which is better vary but I've historically been an RVM guy, mostly, because it is what I used first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:  Once you've installed new rubies, you're going to need to also bundle install &lt;strong&gt;EVERYTHING&lt;/strong&gt; all over again because your gem bundles are stored with your rubies.&lt;/p&gt;

&lt;h2 id=&quot;installing-rvm-and-ruby-31&quot;&gt;Installing RVM and Ruby 3.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rvm.io/&quot;&gt;RVM&lt;/a&gt; can be installed from &lt;a href=&quot;https://rvm.io&quot;&gt;https://rvm.io&lt;/a&gt; with these two commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
\curl -sSL https://get.rvm.io | bash -s stable 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once it is installed, I did:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source /Users/sjohnson/.rvm/scripts/rvm
rvm list
rvm install ruby-3.1.2
rvm use ruby-3.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These commands do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Update my existing shell so it can be used with RVM.  An alternative is closing the shell and re-opening but I don't like to do that.&lt;/li&gt;
  &lt;li&gt;See what rubies are available.&lt;/li&gt;
  &lt;li&gt;Install ruby 3.1.2&lt;/li&gt;
  &lt;li&gt;Use ruby 3.1.2&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;installing-rbenv-and-ruby-271&quot;&gt;Installing Rbenv and Ruby 2.7.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;Rbenv&lt;/a&gt; can be installed with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install rbenv ruby-build
eval &quot;$(rbenv init - zsh)&quot;
rbenv install 2.7.1
rbenv versions
rbenv local 2.7.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This was the process I needed to get Jekyll, my ruby based blogging engine working, but there was an additional wrinkle – bundler:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ ruby -v
ruby 2.7.1p83 (2020-03-31 revision a0c7c23c9c) [x86_64-darwin19]

blog on  gh-pages [🤷‍] via 💎 v2.7.1 on ☁️  (us-west-2) 
❯ bundle install
Traceback (most recent call last):
	2: from /Users/sjohnson/.rbenv/versions/2.7.1/bin/bundle:23:in `&amp;lt;main&amp;gt;'
	1: from /Users/sjohnson/.rbenv/versions/2.7.1/lib/ruby/2.7.0/rubygems.rb:294:in `activate_bin_path'
/Users/sjohnson/.rbenv/versions/2.7.1/lib/ruby/2.7.0/rubygems.rb:275:in `find_spec_for_exe': Could not find 'bundler' (1.17.3) required by your /Users/sjohnson/Dropbox/fuzzygroup/blogging/blog/Gemfile.lock. (Gem::GemNotFoundException)
To update to the latest version installed on your system, run `bundle update --bundler`.
To install the missing version, run `gem install bundler:1.17.3`

blog on  gh-pages [🤷‍] via 💎 v2.7.1 on ☁️  (us-west-2) 
❯ gem install bundler:1.17.3
Fetching bundler-1.17.3.gem
Successfully installed bundler-1.17.3
Parsing documentation for bundler-1.17.3
Installing ri documentation for bundler-1.17.3
Done installing documentation for bundler after 2 seconds
1 gem installed

blog on  gh-pages [🤷‍] via 💎 v2.7.1 on ☁️  (us-west-2) took 3s 
❯ bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;I'm not going to say that this approach is perfect:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I have to remember that I'm using two different tools for the same task&lt;/li&gt;
  &lt;li&gt;I have know the commands for both tools&lt;/li&gt;
  &lt;li&gt;I can't use Rbenv without the eval command&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The eval command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;eval &quot;$(rbenv init - zsh)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The benefit tho is that I do have careful isolation between 3.1 and earlier rubies.  Yes, I get that this isn't supposed to be necessary – and maybe it was my system that was at fault – but I never want to have to declare &lt;strong&gt;Ruby Bankruptcy&lt;/strong&gt; again.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jun 2022 02:35:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2022/06/15/declaring-ruby-bankruptcy-the-ruby-psych-3-1-issue-rvm-and-rbenv.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2022/06/15/declaring-ruby-bankruptcy-the-ruby-psych-3-1-issue-rvm-and-rbenv.html</guid>
        
        <category>ruby</category>
        
        <category>rvm</category>
        
        <category>rbenv</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Learning Twitter in 2022</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08773.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is a work in progress.  Rather than finish it in one go, I'm updating it live as a draft document as I learn new things about Twitter.  Last update: &lt;strong&gt;2022-06-15&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am, at heart, a long form blogger.  Still – the cool kids, as they say – these days are all on twitter (and, yes, I know by saying it that way, I'm dating myself even further; so be it; it amuses me).&lt;/p&gt;

&lt;p&gt;I find myself, here in 2022, wanting to get a better handle on Twitter.  This will be a regularly updated blog post summarizing what I've learned.&lt;/p&gt;

&lt;h2 id=&quot;rule-0-you-are-screaming-into-the-void&quot;&gt;Rule 0: You Are Screaming Into the Void&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that Twitter as a whole is enormous and no one is going to notice, or even care, that you are there.  There is very much an aspect of screaming into the void.  And that's ok.  One of the benefits of an enormous pool is that as you make mistakes, no one notices.&lt;/p&gt;

&lt;h2 id=&quot;rule-1-you-are-going-to-have-to-work-to-get-noticed&quot;&gt;Rule 1: You Are Going to Have to Work to Get Noticed&lt;/h2&gt;

&lt;p&gt;When a social media &lt;em&gt;thing&lt;/em&gt; is new then can be easy to get established.  When a social media already exists though, it is a lot of work to establish yourself.  You need to throw away any expectations that you are going to be successful on Twitter quickly and get ready for a &lt;strong&gt;long&lt;/strong&gt; grind of creating content.&lt;/p&gt;

&lt;h2 id=&quot;rule-2-hash-tags&quot;&gt;Rule 2: Hash Tags&lt;/h2&gt;

&lt;p&gt;A hash tag is an identifier that describes your content.  What I have noticed is that without hash tags, my content may as well not exist.  Add hash tags to your tweet just by adding a hash mark or &lt;strong&gt;#&lt;/strong&gt; to the end of your tweets.  Look at the content universe you exist in to determine the right hash tags.  For me, a Ruby on Rails developer, I tend to use #ruby #rails and #railsdev most of all.&lt;/p&gt;

&lt;h2 id=&quot;rule-3--sign-someone-if-it-is-relevant&quot;&gt;Rule 3: @ sign Someone if It is Relevant&lt;/h2&gt;

&lt;p&gt;If what you are doing is relevant to someone in specific then include them with an @ sign.&lt;/p&gt;

&lt;h2 id=&quot;rule-4-direct-messaging-people-on-twitter-is-quite-real&quot;&gt;Rule 4: Direct Messaging People on Twitter is Quite Real&lt;/h2&gt;

&lt;p&gt;Twitter is both a content universe and an inbox.  Don't ignore this.&lt;/p&gt;

&lt;h2 id=&quot;rule-5-check-your-mentions&quot;&gt;Rule 5: Check Your Mentions&lt;/h2&gt;

&lt;h2 id=&quot;rule-6-keep-at-it&quot;&gt;Rule 6: Keep At It&lt;/h2&gt;

&lt;h2 id=&quot;rule-7-decide-on-your-one-metric&quot;&gt;Rule 7: Decide On Your One Metric&lt;/h2&gt;

&lt;p&gt;I'm a huge believer in &quot;one metric&quot;.  Knowing how things grow and change is hard and even harder when you try and follow everything.  For example you could measure your Twitter presence by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Followers&lt;/li&gt;
  &lt;li&gt;Retweets&lt;/li&gt;
  &lt;li&gt;Mentions&lt;/li&gt;
  &lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For me I picked Follower Count as my measure of success.&lt;/p&gt;

&lt;h2 id=&quot;rule-8-if-you-need-to-find-your-own-stuff-then-search-with-your-tag&quot;&gt;Rule 8: If you need to find YOUR OWN STUFF then search with your @tag&lt;/h2&gt;

&lt;p&gt;I'm @fuzzygroup so if I wanted to find posts I wrote about orion browser, I'd use:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@fuzzygroup orion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Twitter has a number of metrics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Followers&lt;/li&gt;
  &lt;li&gt;Retweets&lt;/li&gt;
  &lt;li&gt;Likes&lt;/li&gt;
  &lt;li&gt;Mentions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trying to pay attention to all of these at once is, for someone who isn't metric oriented and isn't a marketer, a kind of sucky experience.  My choice was that I was going to use my Followers count as the metric.  When I started this experiment, I had 207 followers.  Now I have 209 followers.  Progress???&lt;/p&gt;

&lt;h2 id=&quot;rule-9-experiment-and-learn-from-it&quot;&gt;Rule 9: Experiment and Learn from It&lt;/h2&gt;

&lt;h2 id=&quot;rule-9-dont-just-tweet-your-own-stuff&quot;&gt;Rule 9: Don't Just Tweet Your Own Stuff&lt;/h2&gt;

&lt;p&gt;Imagine Twitter as if it was a party.  If you are only posting your own stuff, it is analogous to that dude bro at a party who only talks about himself.  Figure out the intersection between your own content (for me that's ruby / rails / cloud) and stuff that other people talk about.  And then when you find something that's in that intersection, that is what you should tweet / retweet / like.&lt;/p&gt;

&lt;h2 id=&quot;rule-10-this-is-link-blogging-all-over-again&quot;&gt;Rule 10: This is Link Blogging All Over Again&lt;/h2&gt;

&lt;h2 id=&quot;rule-11-flow-and-tone-matter&quot;&gt;Rule 11: Flow and Tone Matter&lt;/h2&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 21:57:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/twitter/2022/06/10/learning-twitter-in-2022.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/twitter/2022/06/10/learning-twitter-in-2022.html</guid>
        
        <category>twitter</category>
        
        <category>marketing</category>
        
        
        <category>twitter</category>
        
      </item>
    
      <item>
        <title>Thinking About Rails Database Objects and Idempotency</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:33:08.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I've been dealing with a new application with a lot of objects and one of my concerns is idempotency.  Idempotency is the idea that you can do the same thing over and over and only create a new object when&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Idempotence (UK: /ˌɪdɛmˈpoʊtəns/,[1] US: /ˈaɪdəm-/)[2] is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application. &lt;a href=&quot;https://en.wikipedia.org/wiki/Idempotence&quot;&gt;Idempotence&lt;/a&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Specifically if I'm saving a login and password to a database for a certain project and environment, I only want to save that one time.&lt;/p&gt;

&lt;p&gt;I normally handle this with a class level find_or_create method but that, in 2022, is feeling unexpectedly clunky.  It is unclear to me what the current thinking in the Rails world is regarding low level operations like this – my last technical conference was now in 2016 (and that was for Elixir not even Ruby).  As with so many blog posts, I'm going to sketch out my solution here in the hopes that writing it all down:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kick starts the brain&lt;/li&gt;
  &lt;li&gt;Puts something out there to spur a conversation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seems to me that idempotency varies on a class level.  For an account class just the email field might make it idempotent.  For my CodeEnvironmentLogin class, it is going to be several fields:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;code_environment_id&lt;/li&gt;
  &lt;li&gt;login&lt;/li&gt;
  &lt;li&gt;project_id&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: And, yes, I'm building a development tool as this blog post absolutely reveals.&lt;/p&gt;

&lt;p&gt;The fact that this varies on a class level basis to me argues for a class level constant.  Let's call them &quot;identity columns&quot; since they uniquely identify records:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;IDENTITY_COLUMNS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:project_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:code_environment_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:code_environment_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now what we need is a method which can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;read the identity columns&lt;/li&gt;
  &lt;li&gt;generate a where clause using a passed in OpenStruct (all my find_or_create methods us an OpenStruct)&lt;/li&gt;
  &lt;li&gt;return true or false if it exists and the object itself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's my first stab at it:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;where_clauses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;IDENTITY_COLUMNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity_column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;where_clauses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity_column&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#raise where_clauses.inspect&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where_clauses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I feel mildly dirty about this because the method is a dual return so, technically, it isn't a pure boolean method.  But the &lt;em&gt;signaling&lt;/em&gt; of the ? suffix on the method is, I think, useful.&lt;/p&gt;

&lt;p&gt;This new approach gives a class level find_or_create as follows:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CodeEnvironmentLogin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date_created_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;project_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;team_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;team&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;code_environment_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;code_environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;persisted?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;full_messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A note on personal style.  I know that I can pass a hash into a new operation and have everything done at once.  The reason I have deliberately chosen not to is that with a line by line approach, you can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get a failure right down to the exact line number (instead of a line which represents a hash and you don't know where the error is)&lt;/li&gt;
  &lt;li&gt;Insert a debugger on any particular line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that debugging takes vastly more time than writing initial code, my choice for line by line assignment seems sound but opinions may vary (ymmv).&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 12:47:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/10/thinking-about-rails-database-objects-and-idempotency.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/10/thinking-about-rails-database-objects-and-idempotency.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Fixing FactoryBot Validation Name Has Already Been Taken Controller Test or Spec Errors</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:46:49.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So, last night, whilst pulling vampire hours on writing tests – always, always, always a bad idea – I encountered multiple variants on this bug:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rails test test/controllers/links_controller_test.rb:44
Running 7 tests in a single process (parallelization threshold is 50)
Run options: --seed 21798

# Running:

E

Error:
LinksControllerTest#test_should_get_edit:
ActiveRecord::RecordInvalid: Validation failed: Name has already been taken
    test/controllers/links_controller_test.rb:47:in `block in &amp;lt;class:LinksControllerTest&amp;gt;'        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This was particularly vexing because while the object in question did have a name attribute, it did not have name validations:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#########################################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# validations&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#########################################################################&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:team_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:link_type_id&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are a number of people on the internet that have this issue including &lt;a href=&quot;https://stackoverflow.com/questions/30927459/rspec-validation-failed-name-has-already-been-taken&quot;&gt;this stack overflow post&lt;/a&gt;.  What I noticed as I researched this is that I only saw it in controller tests.  Also my model tests continued to function correctly without any validation issues.  I had initially discovered this while working on my RodAuth testing deep dive and back burnered it until I got past that particularly nasty kettle of fix.&lt;/p&gt;

&lt;p&gt;I was working with two objects, link and project and project only through an association.  So my Factory for link looked like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:link&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.example.com/?time=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Cartazzi App on development &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;active&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:link_type&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will notice the insane use of Time.now.to_i to try and generate more distinct data.  This was an attempt to see if maybe some kind of hidden validation was present (it is ruby and everything is dynamic; who knows where a monkey patch might lie).  But, as the problem persisted, I ruled out a data side issue.&lt;/p&gt;

&lt;p&gt;One of the suggestions was to install database_cleaner and initiate it around each test.  And while I did install it and make some efforts, unsuccessful I think, in that direction, I did notice a change in my error message (and, no, I don't know what change made the message vary):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rails test test/controllers/links_controller_test.rb:45
Running 7 tests in a single process (parallelization threshold is 50)
Run options: --seed 17557

# Running:

E

Error:
LinksControllerTest#test_should_get_edit:
ActiveRecord::RecordInvalid: Validation failed: Project type must exist
    test/controllers/links_controller_test.rb:48:in `block in &amp;lt;class:LinksControllerTest&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I do have a project_type attribute but it is on the project model and not on the link model.  Still project is coming in from an association – I wonder if I have project_type as an association on project?&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Cartazzi&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:team&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So a quick change:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Cartazzi&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;association&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assocation&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project_type&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then, like magic, the failure is gone.&lt;/p&gt;

&lt;h2 id=&quot;and-then-like-dark-magic-it-returns&quot;&gt;And then, like dark magic, it returns&lt;/h2&gt;

&lt;p&gt;I wandered away from my pc for an age and when I returned and resumed testing with a different controller, I found that this had returned:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rails test test/controllers/setup_controller_test.rb:99
Running 49 tests in a single process (parallelization threshold is 50)
Run options: --seed 27403

# Running:

E

Error:
SetupControllerTest#test_should_render_setup_form_for_paste_in_component_file_without_errors:
ActiveRecord::RecordInvalid: Validation failed: Password can't be blank, Password Must contain 8+ characters
    test/controllers/setup_controller_test.rb:101:in `block in &amp;lt;class:SetupControllerTest&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This now happened uniformly and is it was generally happening in the test setup block, there wasn't much in the way of clues to figure it out.  My next step was to fire up Rails Console in test mode:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=test bundle exec rails c
Loading test environment (Rails 7.0.3)
3.0.0 :001 &amp;gt; @project = FactoryBot::create(:project)
/Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/validations.rb:80:in `raise_validation_error': Validation failed: Password can't be blank, Password Must contain 8+ characters (ActiveRecord::RecordInvalid)
3.0.0 :002 &amp;gt; @project
nil    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Previously I had been looking at the structure of the account object via a \d accounts sql command in the Postgres terminal.  However this made me wonder – what if account is somehow (attr accessor I guess) validating email and password.  A quick look at account.rb showed me this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;format: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: &lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\z/i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# The validation of password here is only for the following scenario :&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# An admin creates a new Account in the /admin dashboard.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Security of password of customers, in the &quot;Sign up&quot; screen, is a lot more secure.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# See :password_complexity in class RodauthMain. Documented here :&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# http://rodauth.jeremyevans.net/rdoc/files/doc/password_complexity_rdoc.html&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;presence: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;on: :create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;format: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: &lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\A(?=.{8,})/x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;message: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Must contain 8+ characters&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Curiously there are no attr accessor's but there is a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;include Rodauth::Rails.model    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which I guess must be somehow dynamically adding the equivalent of attr accessor's.&lt;/p&gt;

&lt;p&gt;At this point, I've simply thrown up my hands and posted a question on the RodAuth discussion forum:&lt;/p&gt;

&lt;p&gt;(and at this point when I tried to post it, the Green start discussion button on the Github discussion board for RodAuth refused to let me submit it.  Yes it had a title, body and the [ ] was selected).  Here's what I wrote up:&lt;/p&gt;

&lt;p&gt;Title:
Testing applications built with rodauth using standard rails 7 tests and factorybot&lt;/p&gt;

&lt;p&gt;Body:&lt;/p&gt;

&lt;p&gt;Perhaps I'm stupid and perhaps it is just me but I keep having an absolutely horrible time trying to get tests working at all using FactoryBot and rodauth.&lt;/p&gt;

&lt;p&gt;My problem is that no matter what I do I can't get past FactoryBot issues where validations deeper in rodauth get triggered.  This happens whether it is a model test, controller test or whatever.  And given how much data is tied to the underlying concept of a user, it makes it virtually impossible to test anything.&lt;/p&gt;

&lt;p&gt;Here's an example:&lt;/p&gt;

&lt;p&gt;CONTROLLER TEST:&lt;/p&gt;

&lt;p&gt;❯ bundle exec rails test test/controllers/code_environments_controller_test.rb:16
Running 7 tests in a single process (parallelization threshold is 50)
Run options: –seed 20521&lt;/p&gt;

&lt;h1 id=&quot;running&quot;&gt;Running:&lt;/h1&gt;

&lt;p&gt;E&lt;/p&gt;

&lt;p&gt;Error:
CodeEnvironmentsControllerTest#test_should_get_index:
ActiveRecord::RecordInvalid: Validation failed: Name has already been taken
    test/controllers/code_environments_controller_test.rb:10:in `block in &lt;class:CodeEnvironmentsControllerTest&gt;'&lt;/class:CodeEnvironmentsControllerTest&gt;&lt;/p&gt;

&lt;p&gt;MODEL TEST:&lt;/p&gt;

&lt;p&gt;❯ bundle exec rails test test/models/project_test.rb:29
Running 2 tests in a single process (parallelization threshold is 50)
Run options: –seed 53205&lt;/p&gt;

&lt;h1 id=&quot;running-1&quot;&gt;Running:&lt;/h1&gt;

&lt;p&gt;E&lt;/p&gt;

&lt;p&gt;Error:
ProjectTest#test_Project.find_or_create_should_return_a_project_when_it_already_exists:
ActiveRecord::RecordInvalid: Validation failed: Name has already been taken
    test/models/project_test.rb:7:in `setup'&lt;/p&gt;

&lt;p&gt;rails test test/models/project_test.rb:29&lt;/p&gt;

&lt;p&gt;Same error whether I'm testing controller or model (this isn't an issue of using capybara or not; I'm just trying to test very basic things like if I have a database object created (nothing to do with auth).  Here's the test on project_test.rb line 29:&lt;/p&gt;

&lt;p&gt;test &quot;Project.find_or_create should return a project when it already exists&quot; do
    result_create = Project.find_or_create(@struct)
    assert_no_difference('Project.count') do
      result_find = Project.find_or_create(@struct)
      assert_equal result_create.id, result_find.id
    end
  end&lt;/p&gt;

&lt;p&gt;Here's the factory:&lt;/p&gt;

&lt;p&gt;FactoryBot.define do
  factory :account do
    email    { Faker::Internet.email }
    password { 'password' }
    status   { 'verified' }
  end&lt;/p&gt;

&lt;p&gt;My underlying suspicion is that magic mixin via:&lt;/p&gt;

&lt;p&gt;include Rodauth::Rails.model&lt;/p&gt;

&lt;p&gt;is at fault.&lt;/p&gt;

&lt;p&gt;Even when I explicitly build factories for all of the account_* tables as based on looking at \dt+ in postgres such as:&lt;/p&gt;

&lt;p&gt;FactoryBot.define do
  factory :account do
    email    { Faker::Internet.email }
    password { 'password' }
    status   { 'verified' }
    association :account_login_change_key
    association :account_password_hash &lt;br /&gt;
    association :account_password_reset_key
    association :account_remember_key
    association :account_verification_key&lt;/p&gt;

&lt;p&gt;end
end&lt;/p&gt;

&lt;p&gt;I get that this problem may be related to FactoryBot but the simple fact is that to build anything in ruby, you &lt;strong&gt;have&lt;/strong&gt; to have tests – Ruby's dynamic nature means that tests are absolutely essential.&lt;/p&gt;

&lt;p&gt;And I don't mean to deprecate the clearly excellent work you've done with rodauth but the amount of underlying magic you have here and the lack of clear instructions for something as vital as tests makes using rodauth very, very hard.&lt;/p&gt;

&lt;p&gt;Blog post I wrote talking about these issues is linked below.  Yes the blog post says I got past it – and I did – but then a few hours later it came back with a bloody vengeance.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/2022/06/10/fixing-factorybot-validation-name-has-already-been-taken-controller-test-or-spec-errors.html&quot;&gt;https://fuzzyblog.io/blog/2022/06/10/fixing-factorybot-validation-name-has-already-been-taken-controller-test-or-spec-errors.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 08:41:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2022/06/10/fixing-factorybot-validation-name-has-already-been-taken-controller-test-or-spec-errors.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2022/06/10/fixing-factorybot-validation-name-has-already-been-taken-controller-test-or-spec-errors.html</guid>
        
        
      </item>
    
      <item>
        <title>Rails 7, Rodauth, BootRails, Nested Resources and Testing Controllers</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03121.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I'm working on a new project and, as I am front end challenged, I started by purchasing a copy of the BootRails framework as it seemed to have sensible defaults and an appearance that vastly outstrips my personal ability to manipulate Bootstrap.  Previously I've worked with the JumpStart framework from Go Rails and while I love, love, love Chris Oliver, GoRails, HatchBox and everything Chris has done (yes I'm a super fan), I just can't get past JumpStart's use of Tailwind.&lt;/p&gt;

&lt;p&gt;BootRails makes a bunch of fairly opinionated decisions including the choice of RodAuth for authentication.  They also use minitest and fixtures instead of rspec and FactoryBot.&lt;/p&gt;

&lt;p&gt;This blog post will cover how I figured out how to make testing work in a RodAuth environment for a nested resource.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It has literally been years since I've used nested resources but the application I'm developing is one where I particularly don't want security holes and nested resources nicely handle that.  And, yes, I'm tipping my hat towards Sean Kennedy in Arkansas who taught me all about nested resources about a thousand years ago, way, way pre-pandemic.&lt;/p&gt;

&lt;p&gt;Unlike devise and everything else I've ever used in Rails, RodAuth has current_account instead of current_user.  So you have an account object instead of a user object (I'm not saying it is wrong but it is different).  For my application I have two resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;account&lt;/li&gt;
  &lt;li&gt;link&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My routes file looks like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;constraints&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rodauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticated&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:links&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that my urls will look something like this: /account/23/link/99 i.e. you have to be logged in as account 23 to access link 99.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Writing the line above makes me realize that no other account can ever reference link 99 since the account is the parent object of the resource.  The likely needed change is to nest these under the project object and then have a account_project model.  But, as always, I digress.&lt;/p&gt;

&lt;p&gt;My first thing when I generated the links model was to scaffold it all together with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g scaffold Links
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which handles creating the base migration, the html, the model file, the controller file and so on.  Here are a few things I learned:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This doesn't handle nested resources so everything it generates has to be fixed.  There is a &lt;a href=&quot;https://github.com/amatsuda/nested_scaffold/&quot;&gt;nested scaffold&lt;/a&gt; gem but I don't know if it works.&lt;/li&gt;
  &lt;li&gt;If you pass in a list of attribute pairs when you generate it then the controller will actually have a working permitted block on the params method (the whole fetch thing that it generates by default is just plain stupid afaik as it doesn't work).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that I had nested resources, every single method of my generated test completely failed.  This was a failure on the level of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;controller&lt;/li&gt;
  &lt;li&gt;test&lt;/li&gt;
  &lt;li&gt;html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A bit of patch up started to make the test work but I kept finding issues with the generated set_link method.&lt;/p&gt;

&lt;p&gt;Here is the initial version from the generator:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_link&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here is the modified version to reflect the nested resource:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_link&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The error I kept getting was that the link couldn't be found;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;E

Error:
LinksControllerTest#test_should_get_edit:
ActiveRecord::RecordNotFound: Couldn't find Link with 'id'=151 [WHERE &quot;links&quot;.&quot;account_id&quot; = $1]
    app/controllers/links_controller.rb:57:in `set_link'
    test/controllers/links_controller_test.rb:37:in `block in &amp;lt;class:LinksControllerTest&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This bothered me due to the simplicity of the &lt;strong&gt;one line&lt;/strong&gt; method.  But, as you do, I started at the top of the test with the setup method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;connect_as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please note that there was an earlier version where @account was the result of FactoryBot::create(:account).  As I changed that to reflect that the account needed to &lt;em&gt;be the same account&lt;/em&gt; as the link, I started to wonder the real question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What damn account was connect_as using?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This led me, as it always does, into the search cesspool that is Google in 2022.  For sometime Google has been getting worse and tonight it was no different.  A variety of searches for variants of rodauth, connect_as, current_account had roughly the information content of hydrogen atoms.&lt;/p&gt;

&lt;p&gt;My first thought was to try this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but that threw a very, very nasty stack trace – apparently you cannot use current_account in a test environment.  Sigh.  Lame.  Symmetry makes things so much easier for developers but …&lt;/p&gt;

&lt;p&gt;This led me to changing setup to:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;connect_as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;debugger&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I ran the test, I got the following result (I'm giving the whole session here):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=&amp;gt;  11|     debugger
    12|     @link.account_id = current_account.id
    13|     @link.save
    14|   end
    15|
=&amp;gt;#0	block in &amp;lt;class:LinksControllerTest&amp;gt; at ~/Sync/coding/rails/cartazzi/test/controllers/links_controller_test.rb:11
  #1	[C] BasicObject#instance_exec at ~/.rvm/gems/ruby-3.0.0/gems/activesupport-7.0.3/lib/active_support/callbacks.rb:445
  # and 39 frames (use `bt' command for all frames)
(ruby) current_account
eval error: undefined local variable or method `current_account' for #&amp;lt;LinksControllerTest:0x00007fc46a57abd0&amp;gt;
  /Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/actionpack-7.0.3/lib/action_dispatch/testing/assertions/routing.rb:187:in `method_missing'
  /Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/actionpack-7.0.3/lib/action_dispatch/testing/integration.rb:431:in `method_missing'
  (rdbg)//Users/sjohnson/Sync/coding/rails/cartazzi/test/controllers/links_controller_test.rb:1:in `block in &amp;lt;class:LinksControllerTest&amp;gt;'
nil
(ruby) @session
nil
(rdbg) account
eval error: undefined local variable or method `account' for #&amp;lt;LinksControllerTest:0x00007fc46a57abd0&amp;gt;
Did you mean?  @account
  /Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/actionpack-7.0.3/lib/action_dispatch/testing/assertions/routing.rb:187:in `method_missing'
  /Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/actionpack-7.0.3/lib/action_dispatch/testing/integration.rb:431:in `method_missing'
  (rdbg)//Users/sjohnson/Sync/coding/rails/cartazzi/test/controllers/links_controller_test.rb:1:in `block in &amp;lt;class:LinksControllerTest&amp;gt;'
nil
(ruby) @account
#&amp;lt;Account:0x00007fc40dc42358 id: 171, email: &quot;leopoldo.hilll@lynch.info&quot;, status: &quot;verified&quot;, role: &quot;customer&quot;&amp;gt;
(rdbg) session
#&amp;lt;ActionDispatch::Request::Session:0x00007fc3f80bfb08 ...&amp;gt;
(ruby) ap session.inspect
&quot;#&amp;lt;ActionDispatch::Request::Session:0x00007fc3f80bfb08 @by=#&amp;lt;ActionDispatch::Session::CookieStore:0x00007fc44fa52998 @app=#&amp;lt;ActionDispatch::ContentSecurityPolicy::Middleware:0x00007fc44fa52a60 @app=#&amp;lt;ActionDispatch::PermissionsPolicy::Middleware:0x00007fc44fa52ad8 @app=#&amp;lt;Rack::Head:0x00007fc44fa52b50 @app=#&amp;lt;Rack::ConditionalGet:0x00007fc44fa52bc8 @app=#&amp;lt;Rack::ETag:0x00007fc44fa52c40 @app=#&amp;lt;Rack::TempfileReaper:0x00007fc44fa52cb8 @app=#&amp;lt;Rodauth::Rails::Middleware:0x00007fc44fa52d30 @app=#&amp;lt;ActionDispatch::Routing::RouteSet:0x00007fc4282459c0&amp;gt;&amp;gt;&amp;gt;, @cache_control=\&quot;max-age=0, private, must-revalidate\&quot;, @no_cache_control=\&quot;no-cache\&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;, @default_options={:path=&amp;gt;\&quot;/\&quot;, :domain=&amp;gt;nil, :expire_after=&amp;gt;nil, :secure=&amp;gt;false, :httponly=&amp;gt;true, :defer=&amp;gt;false, :renew=&amp;gt;false}, @key=\&quot;_cartazzi_session\&quot;, @cookie_only=true, @same_site=nil&amp;gt;, @req=#&amp;lt;ActionDispatch::Request POST \&quot;http://www.example.com/login\&quot; for 127.0.0.1&amp;gt;, @delegate={\&quot;session_id\&quot;=&amp;gt;\&quot;9d66ca53cc6cd939be95bcf859757793\&quot;, \&quot;account_id\&quot;=&amp;gt;175, \&quot;authenticated_by\&quot;=&amp;gt;[\&quot;password\&quot;], \&quot;flash\&quot;=&amp;gt;{\&quot;discard\&quot;=&amp;gt;[], \&quot;flashes\&quot;=&amp;gt;{\&quot;notice\&quot;=&amp;gt;\&quot;You have been logged in\&quot;}}}, @loaded=true, @exists=nil, @enabled=true&amp;gt;&quot;
nil
(ruby) ap (session.methods - Object.methods).sort
[
    [ 0] :[],
    [ 1] :[]=,
    [ 2] :clear,
    [ 3] :delete,
    [ 4] :destroy,
    [ 5] :dig,
    [ 6] :each,
    [ 7] :empty?,
    [ 8] :enabled?,
    [ 9] :exists?,
    [10] :fetch,
    [11] :has_key?,
    [12] :id,
    [13] :key?,
    [14] :keys,
    [15] :loaded?,
    [16] :merge!,
    [17] :options,
    [18] :to_h,
    [19] :to_hash,
    [20] :update,
    [21] :values
]
nil
(ruby) ap session
{
          &quot;session_id&quot; =&amp;gt; &quot;9d66ca53cc6cd939be95bcf859757793&quot;,
          &quot;account_id&quot; =&amp;gt; 175,
    &quot;authenticated_by&quot; =&amp;gt; [
        [0] &quot;password&quot;
    ],
               &quot;flash&quot; =&amp;gt; {
        &quot;discard&quot; =&amp;gt; [],
        &quot;flashes&quot; =&amp;gt; {
            &quot;notice&quot; =&amp;gt; &quot;You have been logged in&quot;
        }
    }
}
nil
(ruby) @account.id
171
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Years ago I was lucky enough to have fellow developers (Hi Wolf, Hi Jared) mentor me in the zen like experience of using Rails console and those lessons stuck.  When you have a repl console at your finger tips, you can often find the answer just by poking about.  I started by trying current_account (which I knew would fail but confirmation is a thing).  Then I tried @session and account and finally hit upon session.  And I discovered the session variable is a hash with an account_id key.  And that account_id is 175.  But my @account object has 171.  This order makes sense since connect_as comes after @account is assigned.&lt;/p&gt;

&lt;p&gt;This led me to rewrite my setup as:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;connect_as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'account_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#, :account =&amp;gt; @account)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I profoundly &lt;strong&gt;do not like&lt;/strong&gt; this level of jiggery pokery around with the account_id.  This should be cleaner and with a bit of experimentation that I &lt;strong&gt;cannot find&lt;/strong&gt; in documentation anywhere, I came up with:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;connect_as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'account_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;account: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#, :account =&amp;gt; @account)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That that, dear reader, is how you fix a problem with a one line method.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jun 2022 04:12:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/10/rails-7-rodauth-bootrails-nested-resources-and-testing-controllers.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/10/rails-7-rodauth-bootrails-nested-resources-and-testing-controllers.html</guid>
        
        <category>rails</category>
        
        <category>rodauth</category>
        
        <category>testing</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Font Awesome Working On Rails 7 and Bootstrap albeit Perhaps Poorly</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03368.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I am not a front end engineer – but I'm on a project right now with heavy front end requirements.  This blog post documents how I got Font Awesome running on by application including the brands extension.  It is by no means a great way to do it and I know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I have more overhead than needed&lt;/li&gt;
  &lt;li&gt;I did not take advantage of Rails 7 facilities in the best way&lt;/li&gt;
  &lt;li&gt;This skips the gem so you lose another dependency from Gemfile&lt;/li&gt;
  &lt;li&gt;I made this work and I sort of understand it but if you asked me to explain it, I think I'd fail the class.  Today I wanted to do nothing more than display a github icon.  And it does that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Still this works and it is conceptually simple.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: I full well expect to return to this and figure out the &quot;right&quot; way to do this.  However, I'm in heavy greenfield development mode and the desire to simply make it work and GIVE ME MY DAMN ICONS &lt;strong&gt;NOW&lt;/strong&gt; is the paramount concern.  In greenfield development mode, nothing is more important than:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Productivity / not getting bogged down.&lt;/li&gt;
  &lt;li&gt;Not getting discouraged when trying to do something that should be simple (display a damn icon).  So much of modern front end development is just plain ridiculously complicated for simple things like making a font work or displaying an image.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;font-awesome-steps&quot;&gt;Font Awesome Steps&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Download Font Awesome Locally and Decompress It.  This requires an &lt;a href=&quot;https://fontawesome.com/account&quot;&gt;account&lt;/a&gt; I think.&lt;/li&gt;
  &lt;li&gt;Move stylesheets/all.css to app/assets/stylesheets/&lt;/li&gt;
  &lt;li&gt;Move webfonts (directory and all) to public/ (yes public)&lt;/li&gt;
  &lt;li&gt;Add &lt;strong&gt;//= link all.css&lt;/strong&gt; to manifest.js&lt;/li&gt;
  &lt;li&gt;In config/initializers/assets.rb add: &lt;strong&gt;Rails.application.config.assets.paths « Rails.root.join(&quot;assets/webfonts&quot;)&lt;/strong&gt; (yes that isn't the right path but it still works; who knows???)&lt;/li&gt;
  &lt;li&gt;In application.html.erb you need to make one change.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This code:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= stylesheet_link_tag &quot;all&quot;%&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's an example of the html to use to generate a font:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;i class=&quot;fas fa-github&quot;&amp;gt;&amp;lt;/i&amp;gt;
&amp;lt;i class=&quot;fas fa-camera&quot;&amp;gt;&amp;lt;/i&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sidebar-how-to-add-bootstrap-icons-also&quot;&gt;Sidebar: How to Add Bootstrap Icons Also&lt;/h2&gt;

&lt;p&gt;This set of steps let you add the Bootstrap 5 icons to the mix also and is based on the same initializer above.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download the webfonts to your computer.&lt;/li&gt;
  &lt;li&gt;Unzip the directory.&lt;/li&gt;
  &lt;li&gt;Move the files from the fonts directory to public/webfonts.  There should be 2 files: public/webfonts/bootstrap-icons.woff and public/webfonts/bootstrap-icons.woff2&lt;/li&gt;
  &lt;li&gt;Move the css file from the zip i.e bootstrap-icons.css to app/assets/stylesheets&lt;/li&gt;
  &lt;li&gt;Add a stylesheet link tag to application.html.erb for bootstrap-icons.css&lt;/li&gt;
  &lt;li&gt;Edit the bootstrap-icons.css file to reflect the pathing for your webfonts.  Originally mine had ./fonts as the initial path.  I had to change it to ./webfonts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Stylesheet link tag example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= stylesheet_link_tag &quot;bootstrap-icons&quot;%&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Test your bootstrap webfonts with code like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;i class=&quot;bi-alarm&quot;&amp;gt;&amp;lt;/i&amp;gt;
&amp;lt;i class=&quot;bi-alarm&quot; style=&quot;font-size: 2rem; color: cornflowerblue;&quot;&amp;gt;&amp;lt;/i&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;application_helper method to generate the right formatting:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;font_icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon_style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fas'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; style='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^bi-/&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;formatting_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;i class='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&amp;gt;&amp;lt;/i&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;formatting_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;i class='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon_style&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; fa-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&amp;gt;&amp;lt;/i&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# NOTE: Turn off the .html_safe method for debugging purposes&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatting_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html_safe&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Text to drop into a .html.erb template file to see if it works:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 1. &amp;lt;%=font_icon('bi-github')%&amp;gt;&amp;lt;br/&amp;gt;
# 2. &amp;lt;%=font_icon('github')%&amp;gt;&amp;lt;br/&amp;gt;
# 3. &amp;lt;%=font_icon('bi-github')%&amp;gt;&amp;lt;br/&amp;gt;
# 4. &amp;lt;%=font_icon('github', 'fab', &quot;font-size: 2rem; color: cornflowerblue;&quot;)%&amp;gt;&amp;lt;br/&amp;gt;
# 5. &amp;lt;%=font_icon('bi-github','', &quot;font-size: 2rem; color: cornflowerblue;&quot;)%&amp;gt;&amp;lt;br/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;Here are links to what guided me along this path:&lt;/p&gt;

&lt;h3 id=&quot;font-awesome-links&quot;&gt;Font Awesome Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/search?q=time&amp;amp;s=brands%2Csolid&quot;&gt;Font Awesome Search Engine for Icons&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/v5/docs/web/setup/host-font-awesome-yourself&quot;&gt;Self Hosting Documentation for Font Awesome&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/anotheruiguy/7379570&quot;&gt;Thoughts on Web Fonts and Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/70526113/how-to-use-bootstrap-icons-with-rails-7-0&quot;&gt;Stack Overflow 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/v5/download#v5-15-4&quot;&gt;Font Awesome 5 Download Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/49328750/font-awesome-5-brand-icons-not-working&quot;&gt;Stack Overflow 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/v5/cheatsheet/free/brands&quot;&gt;Font Awesome Cheatsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rails/importmap-rails&quot;&gt;Installing ImportMap for Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pablofernandez.tech/2022/03/12/using-font-awesome-6-in-a-rails-7-project-that-uses-importmaps/&quot;&gt;Import Maps and Font Awesome and Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/71430573/can-font-awesome-be-used-with-importmaps-in-rails-7&quot;&gt;Stack Overflow 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://discuss.rubyonrails.org/t/using-fontawesome-6-with-stimulus-rails-7/80024&quot;&gt;Discussion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/docs/web/use-with/rails-turbolinks&quot;&gt;SVG and JS and Font Awesome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But keep in mind that none of the above worked.&lt;/p&gt;

&lt;h3 id=&quot;bootstrap-links&quot;&gt;Bootstrap Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://icons.getbootstrap.com/#install&quot;&gt;https://icons.getbootstrap.com/#install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://johna.compoutpost.com/blog/1189/how-to-use-the-new-bootstrap-icons-v1-2-web-font/&quot;&gt;http://johna.compoutpost.com/blog/1189/how-to-use-the-new-bootstrap-icons-v1-2-web-font/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/icons/releases/tag/v1.8.3&quot;&gt;https://github.com/twbs/icons/releases/tag/v1.8.3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 08 Jun 2022 13:27:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/08/getting-font-awesome-working-on-rails-7-and-bootstrap-albeit-perhaps-poorly.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/08/getting-font-awesome-working-on-rails-7-and-bootstrap-albeit-perhaps-poorly.html</guid>
        
        <category>rails</category>
        
        <category>fontawesome</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Warning in Rails Console Factory Bot Doesn't Seem to reload! Correctly</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8598.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I'm actively engaged in greenfield development once again and I'm learning / relearning things that I likely have known in the past.  I don't know if this is a known issue, a bug or maybe a design choice.  Either way, I found it useful to know this so I thought it was useful to document it.&lt;/p&gt;

&lt;p&gt;I spend a &lt;strong&gt;lot&lt;/strong&gt; of time in rails console (thank you Jared for beating this into me a thousand, thousand years ago; hope you are well) and reload! normally works pretty damn well but this one caught me hard.  Take a look at this back trace&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;accounts&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;role&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RETURNING&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;howard@watsica.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;verified&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;role&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;customer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PasswordHash&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;account_password_hashes&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password_hash&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RETURNING&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password_hash&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[FILTERED]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;COMMIT&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activemodel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active_model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;458&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`method_missing': undefined method `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' for #&amp;lt;Link id: nil, created_at: nil, updated_at: nil, date_created_at: nil, account_id: nil, team_id: nil, link_type_id: nil, active: true, url: &quot;https://www.example.com/&quot;, name: &quot;Cartazzi App on development&quot;, project_id: nil, code_environment_id: nil&amp;gt; (NoMethodError)
Did you mean?  account_id=
3.0.0 :014 &amp;gt; reload!
Reloading...
true
3.0.0 :015 &amp;gt; link = FactoryBot::create(:link)
  TRANSACTION (0.1ms)  BEGIN
  Account Create (0.3ms)  INSERT INTO &quot;accounts&quot; (&quot;email&quot;, &quot;status&quot;, &quot;role&quot;) VALUES ($1, $2, $3) RETURNING &quot;id&quot;  [[&quot;email&quot;, &quot;chu_carter@schaden.name&quot;], [&quot;status&quot;, &quot;verified&quot;], [&quot;role&quot;, &quot;customer&quot;]]
  Account::PasswordHash Create (0.3ms)  INSERT INTO &quot;account_password_hashes&quot; (&quot;id&quot;, &quot;password_hash&quot;) VALUES ($1, $2) RETURNING &quot;id&quot;  [[&quot;id&quot;, 64], [&quot;password_hash&quot;, &quot;[FILTERED]&quot;]]
  TRANSACTION (0.5ms)  COMMIT
/Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/activemodel-7.0.3/lib/active_model/attribute_methods.rb:458:in `method_missing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`account=' for #&amp;lt;Link id: nil, created_at: nil, updated_at: nil, date_created_at: nil, account_id: nil, team_id: nil, link_type_id: nil, active: true, url: &quot;https://www.example.com/&quot;, name: &quot;Cartazzi App on development&quot;, project_id: nil, code_environment_id: nil&amp;gt; (NoMethodError)
Did you mean?  account_id=
3.0.0 :016 &amp;gt; quit

cartazzi on  main [!🤷‍] via  v18.2.0 via 💎 v3.0.0 on ☁️  (us-west-2) took 9m51s
❯ RAILS_ENV=test bundle exec rails c
Loading test environment (Rails 7.0.3)
3.0.0 :001 &amp;gt; link = FactoryBot::create(:link)
  TRANSACTION (0.2ms)  BEGIN
  Account Create (1.7ms)  INSERT INTO &quot;accounts&quot; (&quot;email&quot;, &quot;status&quot;, &quot;role&quot;) VALUES ($1, $2, $3) RETURNING &quot;id&quot;  [[&quot;email&quot;, &quot;gabriel@quigley-effertz.org&quot;], [&quot;status&quot;, &quot;verified&quot;], [&quot;role&quot;, &quot;customer&quot;]]
  Account::PasswordHash Create (0.8ms)  INSERT INTO &quot;account_password_hashes&quot; (&quot;id&quot;, &quot;password_hash&quot;) VALUES ($1, $2) RETURNING &quot;id&quot;  [[&quot;id&quot;, 65], [&quot;password_hash&quot;, &quot;[FILTERED]&quot;]]
  TRANSACTION (1.8ms)  COMMIT
/Users/sjohnson/.rvm/gems/ruby-3.0.0/gems/activerecord-7.0.3/lib/active_record/validations.rb:80:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise_validation_error&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;': Validation failed: Account can'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blank&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RecordInvalid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: All of this was done in test mode on rails console or:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=test bundle exec rails c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is what's going on:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I start by trying to create a FactoryBot object which had an error.&lt;/li&gt;
  &lt;li&gt;I made some changes in the class (not shown; offscreen).&lt;/li&gt;
  &lt;li&gt;I did a reload!&lt;/li&gt;
  &lt;li&gt;I tested again – failure.&lt;/li&gt;
  &lt;li&gt;Step #2 all over again.&lt;/li&gt;
  &lt;li&gt;I started to think that maybe I needed to exit – that reload! wasn't working.&lt;/li&gt;
  &lt;li&gt;I exited and MAGIC – it worked&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sidebar-factorybot-method-missing-errors&quot;&gt;Sidebar: FactoryBot method missing errors&lt;/h2&gt;

&lt;p&gt;The error above was that I was missing the belongs_to block in my model:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:team&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:link_type&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I suspect this is a pretty common error when starting a new project.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jun 2022 08:13:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/08/warning-in-rails-console-factory-bot-doesn-t-seem-to-reload-correctly.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/08/warning-in-rails-console-factory-bot-doesn-t-seem-to-reload-correctly.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>FactoryBot</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Back to Rails Test - Putting Rspec in the Rear View - Test Examples</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8589.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I find myself building a new application, Cartazzi, and since the &quot;template app&quot; I'm building from uses Rails Test not rspec, I'm back to the past using the native rails testing framework – something I probably last touched by in 2009.&lt;/p&gt;

&lt;p&gt;This blog post summarizes different Rails testing examples and is a work in progress as I come up with new examples.&lt;/p&gt;

&lt;h2 id=&quot;thinks-i-like-about-rails-test&quot;&gt;Thinks I Like About Rails Test&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;It is fast&lt;/li&gt;
  &lt;li&gt;Have I mentioned it is fast&lt;/li&gt;
  &lt;li&gt;It is so, so fast&lt;/li&gt;
  &lt;li&gt;It tells you when you write duplicate tests if the test &quot;&quot; block is the same&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;things-i-dislike-about-rails-test&quot;&gt;Things I Dislike About Rails Test&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Lack of output formatting like rspec's nested documentation&lt;/li&gt;
  &lt;li&gt;The inability to nest tests; yes thoughtbot's matchers may provide this but they are 2+ years out of date and unclear if they are still maintained&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&quot;running-a-single-test&quot;&gt;Running a Single Test&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/my_model.rb:22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-all-tests&quot;&gt;Running All Tests&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/my_model.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;examining-the-body-of-a-page-at-runtime&quot;&gt;Examining the body of a page at runtime&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;debugger
response.body[0..250]


debugger
response.body.scan(/FOO/)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;asserting-a-form-exists-with-different-elements&quot;&gt;Asserting a form exists with different elements&lt;/h3&gt;

&lt;h3 id=&quot;asserting-a-row-exists-within-a-table&quot;&gt;Asserting a row exists within a table&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert_select 'table' do
  assert_select 'tr td', 'user1@example.com'
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;asserting-a-select-tag-exists-within-a-form&quot;&gt;Asserting a select tag exists within a form&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# this would find a select with an id of project_type
assert_select 'select#project_type'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;asserting-a-text-area-exists-within-a-form&quot;&gt;Asserting a text area exists within a form&lt;/h4&gt;

&lt;p&gt;This assumes that the form do block illustrated above is used.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# this would find a textarea with an id of component_body-input
assert_select 'textarea#component_body-input'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;asserting-text-exists-on-an-h1-element&quot;&gt;Asserting text exists on an H1 element&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert_selector &quot;h1&quot;, text: &quot;Foobar&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;checking-a-list-has-4-elements&quot;&gt;Checking a list has 4 elements&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert_select &quot;ol&quot; do |elements|
  elements.each do |element|
    assert_select element, &quot;li&quot;, 4
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;asserting-a-difference-on-a-database-creation-operation&quot;&gt;Asserting a difference on a database creation operation&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert_difference('LinkType.count') do
  result = LinkType.find_or_create(OpenStruct.new(context: &quot;execution_url&quot;, name: &quot;development&quot;))
  assert_equal result.class, LinkType
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;asserting-there-should-be-no-difference-in-database-results&quot;&gt;Asserting there should be no difference in database results&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;test &quot;ProjectType.find_or_create should return a project_type when it already exists&quot; do
  result_create = ProjectType.find_or_create(@name, @file_extension, @component_file)
  assert_no_difference(&quot;ProjectType.count&quot;) do
    result_find = ProjectType.find_or_create(@name, @file_extension, @component_file)
    assert_equal result_create.id, result_find.id
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;when-you-get-typeerror-no-implicit-conversion-of-integer-into-string-on-an-assert_difference-or-assert_no_difference-test&quot;&gt;When you get TypeError: no implicit conversion of Integer into String on an assert_difference or assert_no_difference test&lt;/h2&gt;

&lt;p&gt;It means you are missing the quotes below:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert_no_difference(&quot;ProjectType.count&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;good-links&quot;&gt;Good Links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;https://guides.rubyonrails.org/testing.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://apidock.com/rails/ActionDispatch/Assertions/SelectorAssertions/assert_select&quot;&gt;https://apidock.com/rails/ActionDispatch/Assertions/SelectorAssertions/assert_select&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1506780/how-to-run-a-single-test-from-a-rails-test-suite&quot;&gt;https://stackoverflow.com/questions/1506780/how-to-run-a-single-test-from-a-rails-test-suite&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://chriskottom.com/articles/full-stack-testing-with-rails-system-tests/&quot;&gt;https://chriskottom.com/articles/full-stack-testing-with-rails-system-tests/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/56106832/rails-testing-assert-select-vs-assert-selector&quot;&gt;https://stackoverflow.com/questions/56106832/rails-testing-assert-select-vs-assert-selector&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38338393/using-assert-select-to-find-a-select-box-value&quot;&gt;https://stackoverflow.com/questions/38338393/using-assert-select-to-find-a-select-box-value&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 05 Jun 2022 08:54:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/05/back-to-rails-test-putting-rspec-in-the-rear-view-test-examples.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/05/back-to-rails-test-putting-rspec-in-the-rear-view-test-examples.html</guid>
        
        <category>rails</category>
        
        <category>test</category>
        
        <category>rspec</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Another Day, Another Missing Image from Asset Pipeline</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8539.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;The asset pipeline is the component of Rails that I, well, let me quote myself from a recent email:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I've been tracking down that crazy image related issue for an age now and I think I just got it.  Every single time it is always the damn asset pipeline (this is the one component in Rails that I have a literal deep and abiding hatred for; it is finicky code and instead of sticking with a solution they keep replacing it which I have the deep suspicion means that the heisenbugs keep migrating).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hit this again recently with this kind of crap:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I, [2022-06-04T09:11:21.177736 #7055]  INFO -- : [b4a4b65f-beb6-437b-b465-8cdf93a3b00d]   Rendering errors/error_500.html.erb within layouts/application
I, [2022-06-04T09:11:21.177896 #7055]  INFO -- : [b4a4b65f-beb6-437b-b465-8cdf93a3b00d]   Rendered errors/error_500.html.erb within layouts/application (Duration: 0.0ms | Allocations: 5)
I, [2022-06-04T09:11:21.179045 #7055]  INFO -- : [b4a4b65f-beb6-437b-b465-8cdf93a3b00d]   Rendered layouts/_meta_tags.html.erb (Duration: 0.1ms | Allocations: 11)
I, [2022-06-04T09:11:21.179779 #7055]  INFO -- : [b4a4b65f-beb6-437b-b465-8cdf93a3b00d]   Rendered layouts/_header.html.erb (Duration: 0.4ms | Allocations: 119)
I, [2022-06-04T09:11:21.180298 #7055]  INFO -- : [b4a4b65f-beb6-437b-b465-8cdf93a3b00d]   Rendered layouts/_footer.html.erb (Duration: 0.1ms | Allocations: 27)
I, [2022-06-04T09:11:21.180679 #7055]  INFO -- : [b4a4b65f-beb6-437b-b465-8cdf93a3b00d] Completed 500 Internal Server Error in 8ms (Views: 3.2ms | Allocations: 2093)
I, [2022-06-04T09:16:21.177692 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6] Started HEAD &quot;/&quot; for 208.115.199.28 at 2022-06-04 09:16:21 +0000
I, [2022-06-04T09:16:21.178505 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6] Processing by HomeController#index as HTML
I, [2022-06-04T09:16:21.179534 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendering home/index.html.erb within layouts/application
I, [2022-06-04T09:16:21.179763 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered home/_jumbotron.html.erb (Duration: 0.0ms | Allocations: 7)
I, [2022-06-04T09:16:21.180168 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered home/_intro.html.erb (Duration: 0.2ms | Allocations: 32)
I, [2022-06-04T09:16:21.180481 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered home/_paypal_donate_final.html.erb (Duration: 0.1ms | Allocations: 6)
I, [2022-06-04T09:16:21.180820 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered thanks/_thanks_10.html.erb (Duration: 0.1ms | Allocations: 6)
I, [2022-06-04T09:16:21.181155 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered home/_thanks.html.erb (Duration: 0.5ms | Allocations: 130)
I, [2022-06-04T09:16:21.181886 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered home/_images2.html.erb (Duration: 0.4ms | Allocations: 148)
I, [2022-06-04T09:16:21.182121 #7055]  INFO -- : [bde57e27-882b-44ff-922c-a74f218bd4e6]   Rendered home/index.html.erb within layouts/application (Duration: 2.5ms | Allocations: 773)
E, [2022-06-04T09:16:21.182379 #7055] ERROR -- : [bde57e27-882b-44ff-922c-a74f218bd4e6] Rendering 500 with exception: #&amp;lt;ActionView::Template::Error: The asset &quot;285385998_128981183132811_252806448
895874059_n.jpeg&quot; is not present in the asset pipeline.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This one image – *4059_n.jpeg refuses to render.  But:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l /home/deploy/PIZZAFORUKRAINE/releases/20220604085553/app/assets/images/*4059_n*
-rw-rw-r-- 1 deploy deploy 764353 Jun  4 08:55 /home/deploy/PIZZAFORUKRAINE/releases/20220604085553/app/assets/images/285385998_128981183132811_252806448895874059_n.jpeg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so it is present.  And it is actually a jpeg image:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;file /home/deploy/PIZZAFORUKRAINE/releases/20220604085553/app/assets/images/*4059_n*
/home/deploy/PIZZAFORUKRAINE/releases/20220604085553/app/assets/images/285385998_128981183132811_252806448895874059_n.jpeg: JPEG image data, JFIF standard 1.01, aspect ratio, density 72x72, segment length 16, baseline, precision 8, 2048x1365, frames 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And it is referenced EXACTLY the same way as all other images:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# don't judge me; no cms; no cloud storage; just simple deployment&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;285385998_128981183132811_252806448895874059_n.jpeg&quot;&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;284957118_128981213132808_7721233249568534083_n.jpeg&quot;&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;285811112_128981256466137_6541637073014697215_n.jpeg&quot;&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;285157808_128620399835556_4520671403161856263_n.jpeg&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% @images.each &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
  &amp;lt;div class=&quot;col-md-4&quot;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thumbnail&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= link_to(image_tag(image, style: &quot;width: 50%&quot;), &quot;images?id=&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#{image}&quot;)%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;
  &amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the damn image file exists in as the output of the asset compiler:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls -l /home/deploy/PIZZAFORUKRAINE/releases/20220604085553/public/assets/*4059*
-rw-rw-r-- 1 deploy deploy 764353 Jun  4 09:08 /home/deploy/PIZZAFORUKRAINE/releases/20220604085553/public/assets/285385998_128981183132811_252806448895874059_n-17c6a2082fe0e4da00de003c9350260905fa36412917a7dd3d14432f10395af6.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, yes, the asset compiler runs correctly on every deploy without errors.&lt;/p&gt;

&lt;p&gt;The normal melange of google, stack overflowing, even some searches via you.com and kagi.com failed to turn up anything save my continual default:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# config/environment/production.rb
# Do not fallback to assets pipeline if a precompiled asset is missed.
#config.assets.compile = false
config.assets.compile = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Switching this from false to true did fix it but the mystery of why this ONE damn file isn't found via nothing but an image_tag makes no damn sense at all.&lt;/p&gt;

&lt;p&gt;Oh and Rails 6.  Yes I could move to Rails 7 but I fear the &quot;solution&quot; might be worse than the disease.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails -v
Rails 6.0.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 04 Jun 2022 05:21:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/04/another-day-another-missing-image-from-asset-pipeline.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/04/another-day-another-missing-image-from-asset-pipeline.html</guid>
        
        <category>rails</category>
        
        <category>asset_pipeline</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails 7 Madness: No such middleware to insert before: ActionDispatch::Static</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01117.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;In tonight's category of &quot;Crazy Rails Errors that Even I haven't hit&quot;, I was deploying a new app via HatchBox and I hit this one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No such middleware to insert before: ActionDispatch::Static
/home/deploy/Cartazzi/shared/bundle/ruby/3.1.0/gems/actionpack-7.0.2.2/lib/action_dispatch/middleware/stack.rb:174:in `assert_index'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I dug into the underlying failure there was this bit of code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assert_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;No such middleware to insert &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I did the obligatory googling only to find nothing in the past year and absolutely nothing related to Rails 7.&lt;/p&gt;

&lt;p&gt;I was able to replicate this by logging in with either:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake middleware
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=production bundle exec rake assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After stumbling around a bit – this was post midnight late night code fu – I thoguht to myself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What if the issue is that it is looking for middleware and it can't find any?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the previous googles from 2015 or so said that if you have this issue then remove the font_assets gem (I didn't have it but omitted that part of the research above).  What I did was look for asset pipeline middleware and I found the smart_assets gem which I dropped into Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'smart_assets'    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A quick bundle install and I ended up with a failing deploy … but a different failure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Building with Vite 
rake aborted!
ViteRuby::MissingExecutableError:  The vite binary is not available. Have you installed the npm packages?

Visit the Troubleshooting guide for more information:
  https://vite-ruby.netlify.app/guide/troubleshooting.html#troubleshooting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that, in modern computing, alas, is &lt;strong&gt;progress&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2022 00:22:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/06/02/rails-7-madness-no-such-middleware-to-insert-before-actiondispatch-static.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/06/02/rails-7-madness-no-such-middleware-to-insert-before-actiondispatch-static.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Keeping Your Sanity as a Solo Entrepreneur 01 - Make Everything as Easy as Possible</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01664.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I've now been a solo entrepreneur longer than I've been anything.  Being a solo entrepreneur is a very different experience and it isn't one that is taught – you generally learn only by doing.  I've started this series of essays to talk about practical things I've learned over the years.  The reason that I referred to it as &lt;em&gt;keeping your sanity&lt;/em&gt; is that is what, all too often, solo entrepreneurship feels like.&lt;/p&gt;

&lt;p&gt;The first lesson I learned is &lt;strong&gt;make everything as easy as possible&lt;/strong&gt;.  I know this is obvious but there are all kinds of things that we do by &lt;em&gt;rote&lt;/em&gt; without ever thinking about how you can make it easier.&lt;/p&gt;

&lt;h2 id=&quot;example-1-typing-your-link&quot;&gt;Example 1: Typing Your Link&lt;/h2&gt;

&lt;p&gt;Let me ask you a simple thing – if you are running any kind of online business, how many times this year will you text someone a link to your business? Or your social media pages?&lt;/p&gt;

&lt;p&gt;I build a lot of web applications and one thing I noticed is that when I'm using a phone and texting people, it was way too easy to mistype a link.  And it makes me just stupidly angry.  I tried putting them in a note on the phone but selecting text on an iPhone still sucks.  But then I discovered Text Replacement and it made me very, very happy.&lt;/p&gt;

&lt;p&gt;Every iPhone (and I suspect Android Phone although I'm not an Android user) has a feature called &lt;strong&gt;Text Replacement&lt;/strong&gt;.  This feature lets you specify some text and then its replacement.  Every single time I build a new web application, I create one of these replacements.  Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I type &lt;strong&gt;jh&lt;/strong&gt; and it inserts https://www.jobhound.io for me&lt;/li&gt;
  &lt;li&gt;I type &lt;strong&gt;pfu&lt;/strong&gt; and it inserts https://pizzaforukraine.com&lt;/li&gt;
  &lt;li&gt;I type &lt;strong&gt;cnm&lt;/strong&gt; and it inserts https://www.covidnearme.org&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If, for example, you were a solo entrepreneur running company Metal Honey Foods (this is an unabashed plug; she's a friend with a great hot honey product) then she could define mhf and it could insert https://www.metalhoney.com/ for her.  Similarly she could have other key sequences that inserted her social media links.&lt;/p&gt;

&lt;p&gt;This is, without question, a very simple example but almost anything you do can be made easier.  And, what I've found, is that each thing I make easier diminishes the cognitive burden of running my small business.&lt;/p&gt;

&lt;h2 id=&quot;example-2-user-welcome-emails&quot;&gt;Example 2: User Welcome Emails&lt;/h2&gt;

&lt;p&gt;I'm currently in the process of reviving a mildly moribund project – JobHound.  This is a site which I built 4 years ago and it has just ran steadily in the background servicing users and helping them find jobs.  It didn't cost me really anything to host it and I didn't have a business model for it so I just left it alone.  I recently got an email from an enthusiastic user who convinced me that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It was still better than anything else on the market&lt;/li&gt;
  &lt;li&gt;I should really fix some key issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One thing I wanted to do is talk to the actual users of the site and see if they are getting value from it.  The current thinking in web development is I should set up an auto responder and a MailChimp campaign and such.  And, if this site had a large number of new users, well, that would be great.  But, I said this site is moribund, so you need to think of say 10 users every few days.&lt;/p&gt;

&lt;p&gt;I thought about this and I realized that what I needed was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An admin tool that simply listed users by currency (most recent at the top)&lt;/li&gt;
  &lt;li&gt;Gmail – I could simply send an email &lt;strong&gt;manually&lt;/strong&gt; to each user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I built the admin tool and started copying the email addresses, switching to a Gmail tab, clicking Compose and then pasting in the email address.  And, then, it hit me – maybe this too could be automated.  A quick Stack Overflow search gave me the syntax to build a clickable link which:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Opens Gmail&lt;/li&gt;
  &lt;li&gt;Fills in the to field with the email address&lt;/li&gt;
  &lt;li&gt;Fills in the Subject&lt;/li&gt;
  &lt;li&gt;Fills in the Body&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes my writing a welcome email to 10 users literally the work of about 2 minutes.  And I guarantee that by the time I build a welcome campaign in MailChimp, figured out the data feed integration, tested it, etc, well, I'd have spent at least a few hours on it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;link_for_welcome_email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,%0A%0AI'm Scott and I created JobHound. I wanted to welcome you to the product and wish you the best of luck with your job search.  %0A%0AI recently made a bunch of improvements to JobHound so if you have had any issues, you might want to try again.  %0A%0AIf you have any questions, you can always just email me for tech support.%0A%0ABest%0A%0AScott&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://mail.google.com/mail/?view=cm&amp;amp;fs=1&amp;amp;to=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;su=Welcome%20to%20JobHound&amp;amp;body=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;target: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'new'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you are reading this then I suspect there is a good chance that you aren't a hard core software engineer as I am.  The take away here is not the code snippet above but the recognition that you help keep your sanity by making things easier for yourself.  You may not be able to code but there are absolutely things you can do to make your life easier.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;Here's how to make that &lt;a href=&quot;https://stackoverflow.com/questions/6548570/url-to-compose-a-message-in-gmail-with-full-gmail-interface-and-specified-to-b&quot;&gt;email&lt;/a&gt; trick work.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jun 2022 19:13:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2022/06/01/keeping-your-sanity-as-a-solo-entrepreneur-01-make-everything-as-easy-as-possible.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2022/06/01/keeping-your-sanity-as-a-solo-entrepreneur-01-make-everything-as-easy-as-possible.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Using MeiliSearch in a Production Rails Environment</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08954.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I recently migrated &lt;a href=&quot;https://www.jobhound.io&quot;&gt;JobHound&lt;/a&gt; from its original hosting (DigitalOcean with a custom Docker based deployer) to a new environment (also DigitalOcean but now with deploys managed via &lt;a href=&quot;https://www.hatchbox.io&quot;&gt;HatchBox&lt;/a&gt;).  In the traditional spirit of all IT migrations where you both get something good and lose something good, I got:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Better Performance&lt;/li&gt;
  &lt;li&gt;Working SSL; I have no idea why it stopped on the old box but it did and wasn't fixable&lt;/li&gt;
  &lt;li&gt;Much better deployment (NO MORE DOCKER!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But I also lost something:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ElasticSearch or ES&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I had implemented ES as a Docker component that was a part of my overall and it really did work beautifully – the simplest installation of ES that I've ever experienced.&lt;/p&gt;

&lt;p&gt;When I found that I couldn't install ES on my Mac without messing about with the memory allocations because certain memory allocation options aren't available on Open Java platform, I started to get concerned.  And then ES just proved to be increasingly byzantine to make work (perhaps this is me).  So I was open to new search technologies and I quick perusal of the &lt;a href=&quot;https://gorails.com/episodes&quot;&gt;GoRails screencasts&lt;/a&gt; turned me onto &lt;a href=&quot;https://www.meilisearch.com/&quot;&gt;MeiliSearch&lt;/a&gt;, a relatively new Rust based search engine.&lt;/p&gt;

&lt;p&gt;I will admit that I have a certain fondness for things written in Rust.  If you aren't aware, Rust is a language which a focus on preventing programmer errors.  And, in my experience, that tends to produce some really great pieces of software.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;This is the process I used to get MeiliSearch up and running for JobHound.  In about 2 hours, I went from never having used MeiliSearch to a fully working installation both locally and on production.  In my experience, that kicks the snot out of ElasticSearch.&lt;/p&gt;

&lt;h3 id=&quot;desired-configuration&quot;&gt;Desired Configuration&lt;/h3&gt;

&lt;p&gt;I'm working on a pretty standard multi box configuration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;load balancer&lt;/li&gt;
  &lt;li&gt;worker&lt;/li&gt;
  &lt;li&gt;web1&lt;/li&gt;
  &lt;li&gt;web2&lt;/li&gt;
  &lt;li&gt;database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My plan was to setup MeiliSearch on the worker box and have that do al the indexing and querying.  This means that my web boxes would need to talk to MeiliSearch on the worker box over MeiliSearch's default port of 7700.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I'm running all this on Digital Ocean using Ubuntu 18.04 Bionic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: This is best read alongside the &lt;a href=&quot;https://blog.meilisearch.com/how-to-integrate-an-extremely-fast-and-relevant-search-into-your-rails-app-using-meilisearch-and-react/&quot;&gt;official docs&lt;/a&gt;.  And the docs are excellent but there are enough things I noticed doing a full installation into both development and production that I wanted to note them.&lt;/p&gt;

&lt;h3 id=&quot;local-installation-for-development&quot;&gt;Local Installation for Development&lt;/h3&gt;

&lt;p&gt;I installed MeiliSearch via brew:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install meilisearch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To confirm that your installation is working correctly, goto &lt;a href=&quot;http://localhost:7700/&quot;&gt;http://localhost:7700/&lt;/a&gt; and you should see a web based UI to verify your indices and perform queries.&lt;/p&gt;

&lt;h3 id=&quot;server-installation-for-production-use&quot;&gt;Server Installation for Production Use&lt;/h3&gt;

&lt;p&gt;Log into your server and change into the /tmp directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /tmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -L https://install.meilisearch.com | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you want to move meilisearch to the /usr/bin directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mv meilisearch /usr/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and change its permissions to root:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown root:root /usr/bin/meilisearch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;adding-an-api-key&quot;&gt;Adding an API Key&lt;/h3&gt;

&lt;p&gt;Generate a random high entry token that you can used for an API key.  Here's one way:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /dev/urandom | base64 | head -c 24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This gave me:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AntypkbH8DITLhaRG8ru0SIP 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which we will use in the next step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Not my actual API key.&lt;/p&gt;

&lt;h3 id=&quot;setting-meilisearch-to-run-as-a-service&quot;&gt;Setting MeiliSearch to Run as a Service&lt;/h3&gt;

&lt;p&gt;Once you have MeiliSearch installed, you need to create a SystemD service file which can be done like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	sudo cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/systemd/system/meilisearch.service
	[Unit]
	Description=Meilisearch
	After=systemd-user-sessions.service

	[Service]
	Type=simple
	ExecStart=/usr/bin/meilisearch --http-addr 127.0.0.1:7700 --env production --master-key AntypkbH8DITLhaRG8ru0SIP

	[Install]
	WantedBy=default.target
	EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;VERY, VERY IMPORTANT&lt;/strong&gt;: If you are using this with a multi box install then you need to specify your machine's IP address above NOT 127.0.0.1.&lt;/p&gt;

&lt;p&gt;Once you have installed the service file then you need to use commands like these:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl start meilisearch
systemctl status meilisearch
systemctl stop meilisearch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to maintain meilisearch.&lt;/p&gt;

&lt;h3 id=&quot;locking-meilisearch-down&quot;&gt;Locking MeiliSearch Down&lt;/h3&gt;

&lt;p&gt;There are two aspects to locking down MeiliSearch:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API Key as mentioned above.  By using the same API key on the server process and on the client machine, only searches with that API key will be executed&lt;/li&gt;
  &lt;li&gt;Limiting Access.  Use a firewall to govern access to certain ports and machines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The ufw firewall is a standard Linux thing at this point.  What you need to do is add firewall rules which:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;allow access from web1&lt;/li&gt;
  &lt;li&gt;allow access from web2&lt;/li&gt;
  &lt;li&gt;allow access from yourself i.e. worker1's ip address&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These rules are written as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw allow from 138.x.y.z to any port 7700
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This would be a real IP address above where x, y, z and replaced by the correct octets of the address.&lt;/p&gt;

&lt;h3 id=&quot;sidebar-belt-and-suspenders&quot;&gt;Sidebar: Belt and Suspenders&lt;/h3&gt;

&lt;p&gt;Given the number of API key breaches these days, I opted to lock down MeiliSearch using both API keys and a firewall rule.  This was very deliberate on my part as once upon a time, an engineer who worked for me, left an unprotected ElasticSearch instance running on a test server.  After that box was exploited for a $30,000 bandwidth, I swore that I'd try to never do that again.&lt;/p&gt;

&lt;h3 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h3&gt;

&lt;p&gt;To start, you need to use this line in your Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;meilisearch-rails&quot;, github: &quot;meilisearch/meilisearch-rails&quot;, branch: &quot;release-v0.5.1&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The 0.5.1 gem was never released to &lt;a href=&quot;https://rubygems.org/gems/meilisearch/versions&quot;&gt;Ruby Gems&lt;/a&gt; so without the line above, you will get the 0.3 version which does not work.  Yes they say that they have fixed this.  And no they haven't (as of the writing of this blog post; &lt;a href=&quot;https://github.com/meilisearch/meilisearch-rails/issues/114&quot;&gt;Github Issue&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Once you put that in place, you need the obligatory dance of:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;initializers---just-say-no&quot;&gt;Initializers - Just Say No&lt;/h3&gt;

&lt;p&gt;MeiliSearch has you use an initializer in config/initializers like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;MeiliSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;meilisearch_host: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://127.0.0.1:7700'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;meilisearch_api_key: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I switched that to blocks of code in production.rb and development.rb:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;MeiliSearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;meilisearch_api_key: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'AntypkbH8DITLhaRG8ru0SIP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;pagination_backend: :kaminari&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;timeout: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;max_retries: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;meilisearch_host: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://165.x.y.z:7700'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I skipped the initializers because no matter how I used Rails.env.development?, I couldn't make it work with MeiliSearch; bizarre.&lt;/p&gt;

&lt;h3 id=&quot;model-code&quot;&gt;Model Code&lt;/h3&gt;

&lt;p&gt;Here is all the code to add to your model:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MeiliSearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;meilisearch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# all attributes will be sent to Meilisearch if block is left empty&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;displayed_attributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'description'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'location'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'why_rejected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;searchable_attributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'company'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'why_rejected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'location'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'domain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'description'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'created_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;filterable_attributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sortable_attributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:updated_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;example-search&quot;&gt;Example Search&lt;/h3&gt;

&lt;p&gt;Here is an example search command that I used in console:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Job.search(&quot;ruby&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which returned all jobs matching the term &lt;strong&gt;ruby&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can also use filters to restrict what comes back to only the specified user:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@jobs = Job.search(&quot;ruby&quot;, filter: [&quot;user_id=1&quot;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;controller&quot;&gt;Controller&lt;/h3&gt;

&lt;p&gt;While the MeiliSearch examples give you a lovely React based UI, I'm a bit more old school.  Here's a simple controller which executes the search:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@jobs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;filter: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;user_id=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@notes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;filter: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;user_id=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@cover_letters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CoverLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;filter: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;user_id=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@tasks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;filter: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;user_id=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;My controller is searching all the user's indexed objects at once and bringing up a UI which shows all of these to the user.&lt;/p&gt;

&lt;h3 id=&quot;indexing-rake-task&quot;&gt;Indexing Rake Task&lt;/h3&gt;

&lt;p&gt;Whenever you implement a search system, you are going to need to re-index everything.  There's just no way around it.  Here is an example rake task which handles re-indexing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:search&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# bundle exec rake search:index_all --trace&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:index_all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;klasses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CoverLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;klasses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reindex!&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I'm now happier with MeiliSearch than I ever was with ElasticSearch.  It was not only simpler and easier to use but I feel I have a better grasp on how MeiliSearch works than I ever have with ElasticSearch.&lt;/p&gt;

&lt;p&gt;Kudos to the team!  Well done!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gorails.com/episodes/how-to-use-meilisearch-rails?autoplay=1&quot;&gt;MeiliSearch screencast&lt;/a&gt; on GoRails&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.meilisearch.com/how-to-integrate-an-extremely-fast-and-relevant-search-into-your-rails-app-using-meilisearch-and-react/&quot;&gt;Official Rails Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.meilisearch.com/&quot;&gt;MeiliSearch Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gorails-screencasts/meilisearch-rails-example/&quot;&gt;Example Rails MeiliSearch App Source code from GoRails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/meilisearch/meilisearch-rails&quot;&gt;Ruby Gem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.meilisearch.com/learn/cookbooks/running_production.html#step-2-run-meilisearch-as-a-service&quot;&gt;MeiliSearch in Production&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.meilisearch.com/reference/api/filterable_attributes.html&quot;&gt;Understanding Filterable Attributes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.meilisearch.com/learn/security/master_api_keys.html&quot;&gt;Master API Keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 31 May 2022 07:31:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/05/31/using-meilisearch-in-a-production-rails-environment.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/05/31/using-meilisearch-in-a-production-rails-environment.html</guid>
        
        <category>rails</category>
        
        <category>meilisearch</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Specifying Ruby Version for HatchBox Deployment</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01240.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I recently had the situation where an application that I deployed to Hatchbox failed with a Ruby version conflict:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	-----&amp;gt; Installing gems...
	/home/deploy/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-1.17.3/lib/bundler/rubygems_integration.rb:200: warning: constant Gem::ConfigMap is deprecated
	Your Gemfile lists the gem capybara (&amp;gt;= 0) more than once.
	You should probably keep only one of them.
	Remove any duplicate entries and specify the gem only once (per group).
	While it's not a problem now, it could cause errors if you change the version of one of them later.
	Your Ruby version is 2.5.1, but your Gemfile specified 2.6.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I dug into the (excellent) &lt;a href=&quot;https://hatchbox.gitbook.io/hatchbox/apps/ruby-versions#how-do-i-specify-my-apps-ruby-version&quot;&gt;online help for Hatchbox&lt;/a&gt; and found that you can specify your Ruby version with either the Gemfile or the .ruby-version file.  These files, however, serve different functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gemfile - tells your application what to use&lt;/li&gt;
  &lt;li&gt;.ruby-version - tells RVM to switch the ruby version on change into the directory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case I had &lt;strong&gt;both&lt;/strong&gt; and they were &lt;strong&gt;different&lt;/strong&gt;.  Synchronizing them both to 2.6.2 fixed the issue entirely.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 May 2022 07:13:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2022/05/31/specifying-ruby-version-for-hatchbox-deployment.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2022/05/31/specifying-ruby-version-for-hatchbox-deployment.html</guid>
        
        
      </item>
    
      <item>
        <title>Git Error: failed to push some refs to</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03054.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I was just stumbling through setting up a new project and getting it deployed when I hit this little gem:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	❯ git push -u origin main
	error: src refspec main does not match any
	error: failed to push some refs to 'github.com:fuzzygroup/cartazzi.git'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I did the obligatory &quot;scratch my chin and play with my beard&quot; that you do when you are confused (and it is late and you are &lt;strong&gt;tired&lt;/strong&gt;).  And then I realized – &quot;Oh crap, it is NEW; I bet I never added yet.&quot;  And lo and behold – a simple add / commit and push worked!  Crappy ass error message though.  Sigh.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Deployment first development is my new best practice – make things deploy initially when they are still simple.  This is particularly easy when you use a deployment engine like &lt;a href=&quot;https://www.hatchbox.io&quot;&gt;HatchBox&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 31 May 2022 00:34:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/git/2022/05/31/git-error-failed-to-push-some-refs-to.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2022/05/31/git-error-failed-to-push-some-refs-to.html</guid>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>When RVM Seems Insane Run bundle install</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08890.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I just had this disconcerting moment of weirdness:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	❯ rvm use 3.1.0
	Using /Users/sjohnson/.rvm/gems/ruby-3.1.0

	coding/rails/cartazzi via  v18.2.0 via 💎 v3.1.0 on ☁️  (us-west-2)
	❯ ruby -v
	ruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [x86_64-darwin19]

	coding/rails/cartazzi via  v18.2.0 via 💎 v3.1.0 on ☁️  (us-west-2)
	❯ bundle exec rails c
	Your Ruby version is 2.6.3, but your Gemfile specified 3.1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What's going on here is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I clearly told the system what ruby to us.&lt;/li&gt;
  &lt;li&gt;I verified it.&lt;/li&gt;
  &lt;li&gt;It told me &quot;OH HELL NO&quot;!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This took more than a moment of head scratching and then I hit on it:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, after that completed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	coding/rails/cartazzi via  v18.2.0 via 💎 v3.1.0 on ☁️  (us-west-2)
	❯ bundle exec rails c
	Loading development environment (Rails 7.0.2.2)
	3.1.0 :001 &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 30 May 2022 11:31:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/05/30/when-rvm-seems-insane-run-bundle-install.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/05/30/when-rvm-seems-insane-run-bundle-install.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>rvm</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>That Bad Client Job Posting</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01784.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I've gotten quite a bit of feedback on my Bad Client story and the underlying theme has been &quot;why the heck did you hang in so long?&quot;.  There were a couple of reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I'm stubborn af.  That was definitely a part of it.&lt;/li&gt;
  &lt;li&gt;Learning Matters.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Point 2, learning is what I want to focus on here.  What I have always found, for myself, for computer related things is that my learning is dramatically better when it is &lt;strong&gt;real&lt;/strong&gt;.  As an example, that bad client project forced me down the JavaScript rabbit hole longer and more successfully than I have ever gone before.  In fact, that's one of the reasons I went with that gig – I knew it would be JavaScript heavy.&lt;/p&gt;

&lt;p&gt;And, you know what, today I added JavaScript ajax calls to the new cut of &lt;a href=&quot;https://www.jobhound.io&quot;&gt;JobHound&lt;/a&gt; and now, you can paste in a JobUrl and:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The right JavaScript is called automatically as you move out of the field.&lt;/li&gt;
  &lt;li&gt;An end point is called which parses the job and extracts out Title, Description, Location, etc.&lt;/li&gt;
  &lt;li&gt;That information is stored in the database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Yes I realize that, by 2022 standards, this is no big deal for a lot of developers– but, historically, this was always where &lt;strong&gt;I&lt;/strong&gt; was weakest (one of the strongest skills a developer has is the self insight here they are weak).  And, thanks to an awful client experience, I'm now better at JavaScript and Job Hound is benefiting from it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Moral of the story&lt;/strong&gt;: Bad clients suck but you can still benefit from them.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2022 08:41:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/consulting/2022/05/29/that-bad-client-job-posting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/consulting/2022/05/29/that-bad-client-job-posting.html</guid>
        
        <category>consulting</category>
        
        
        <category>consulting</category>
        
      </item>
    
      <item>
        <title>Job Hound is Back</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8507.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;It is now 2022 and Job Hound has existed for 4 years now having happily served over 1,000 users to help apply for over 5,000 different jobs.&lt;/p&gt;

&lt;p&gt;Job Hound has been one of those bits of code that you write and it just runs happily in the background just plain &lt;strong&gt;working without fail&lt;/strong&gt;.  Other than a few restarts to the Docker containers to reclaim storage, I literally haven't touched it since I wrote it back in 2018.  And, facepalm, I'm not happy about that.&lt;/p&gt;

&lt;p&gt;A chance set of interactions with a happy Job Hound user convinced me to re-focus on Job Hound:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Scott,&lt;/p&gt;

    &lt;p&gt;I used your Job Hound during my 7 month, 84 applications search and landed a gig at BLANK Health as a Security Engineer.&lt;/p&gt;

    &lt;p&gt;Now I am using Job Hound again for my wife to track the same thing!&lt;/p&gt;

    &lt;p&gt;What a fantastic site.  Simple but more useful than just some Excel sheet.&lt;/p&gt;

    &lt;p&gt;Just wanted to circle back and say thank you&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Marc&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now here's the rub – he used Job Hound while the SSL was broken.  When someone uses your site even when Chrome is telling you not to – that's powerful.&lt;/p&gt;

&lt;p&gt;I took Marc's advice to heart and dug back into the Job Hound source code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Hosting (it is now on a cluster of machines, load balanced and all)&lt;/li&gt;
  &lt;li&gt;Significantly Faster&lt;/li&gt;
  &lt;li&gt;Blog link now gives you only posts about Job Hound&lt;/li&gt;
  &lt;li&gt;A start on content updates&lt;/li&gt;
  &lt;li&gt;Monitored for uptime issues&lt;/li&gt;
  &lt;li&gt;On machines that I monitor every day for &lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Pizza For Ukraine &lt;/a&gt; and &lt;a href=&quot;https://covidnearme.org/&quot;&gt;Covid Near Me&lt;/a&gt; so I'll always know if something goes down&lt;/li&gt;
  &lt;li&gt;New Analytics (useful for me although less so for you)&lt;/li&gt;
  &lt;li&gt;Better test coverage (again useful for me)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;New features are planned and coming.  I've also modified my personal schedule to allow me to put sustainable hours into Job Hound.  Sustainable hours are key to side projects, particularly ones that aren't profitable (it was never supposed to be).&lt;/p&gt;

&lt;p&gt;The only downside right now is that ElasticSearch is being difficult so that's offline. It is, clearly, on the short list of things to bring back.&lt;/p&gt;

&lt;p&gt;My sincere thanks go out to Marc.  Appreciated.&lt;/p&gt;

&lt;p&gt;So … The Hound Is Back.&lt;/p&gt;
</description>
        <pubDate>Fri, 27 May 2022 06:58:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2022/05/27/job-hound-is-back.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2022/05/27/job-hound-is-back.html</guid>
        
        <category>jobhound</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Improving Your Podcast Audio Quality</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01705.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;The quality of your recorded audio for an at home podcaster is a black art.  Audio is a fundamentally analog process and Once upon a time, in the antediluvian ages of podcasting (2005 / 2006), I was a podcaster.  And then, a decade later, my friend Nick Janetakis, a producer of online courses also taught me a bunch of things about audio quality.&lt;/p&gt;

&lt;p&gt;Here's one thing to know:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You will tell yourself that you can clean up the audio later.  This will &lt;strong&gt;ALMOST NEVER&lt;/strong&gt; happen.  Getting the audio right at record time is key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some tips:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;A good mic&lt;/strong&gt;.  I use A Yeti Blue USB for about $149 and that's more than good enough.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A pop filter&lt;/strong&gt;.  This is a cheap ($10) foam filter that goes in front of your mic and reduces mouth / breath noise.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Put a towel under your laptop&lt;/strong&gt;.  Laptops have fans and fans are mechanical and vibrate.  Also your movement on the keys / mouse will make noise.  A towel under the laptop acts as a shock absorber for movement / vibration.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Put your phone into do not disturb mode&lt;/strong&gt;.  If you are an iPhone user then set it to Do Not Disturb.  If you have overrides on this for say calls / texts from family then create a Really Do Not Disturb (or call it Podcasting) setting and do not have overrides.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Turn off all your phone alarms&lt;/strong&gt;.  Make sure they are off.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leave your phone in the other room&lt;/strong&gt;.  This is the easiest one.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Get rid of your chair with casters / the ability to lean back&lt;/strong&gt;.  Chairs move.  A mic will pick this up.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Experiment with different USB ports for your mic&lt;/strong&gt;.  Different ports may have different isolation levels from the underlying circuitry of the machine.  You may have less electrical hum / cross talk when you plug it on the right (or the left).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Log out of all Instant Messaging tools on your laptop&lt;/strong&gt;.  Again you want to suppress notification noises.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don't record in a room with hardwood floors&lt;/strong&gt;.  Audio reverberates far more than you would think.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Record in the clothes / coat closet&lt;/strong&gt;.  A closet with clothes in it is actually a very silent area and the clothes eliminate audio bouncing back on you from the walls / ceiling / floor.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 16 May 2022 14:35:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/podcasting/2022/05/16/improving-your-podcast-audio-quality.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/podcasting/2022/05/16/improving-your-podcast-audio-quality.html</guid>
        
        <category>podcasting</category>
        
        
        <category>podcasting</category>
        
      </item>
    
      <item>
        <title>Miller - A Swiss Army Chainsaw for CSV Data, Data Science and Data Munging</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01797.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Every so often I run into a tool which just impresses me.  This time it is &lt;a href=&quot;https://miller.readthedocs.io/en/latest/&quot;&gt;Miller&lt;/a&gt;.  And when I find such a tool, I write up a blog post to firm up my learnings.  Here is the official description:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Miller is a command-line tool for querying, shaping, and reformatting data files in various formats including CSV, TSV, JSON, and JSON Lines.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;The people that know me know that I've spent literal man years working with textual data, often CSV format – I first got started at this using Awk, specifically the NTERGAID version of Awk called HyperAwk and then I've done the Perl dance, spent time in the bowels of the abyss that is Sed, PHP, Python and Ruby.  A lot of the ad hoc scripting I've written over the years can be accomplished via Miller and that is a lovely change.&lt;/p&gt;

&lt;p&gt;Just as a note, Miller's docs are really quite excellent and it is a sophisticated tool.  This blog post really only touches a bit on what Miller is capable of.  If you don't find what you are looking here then hit the &lt;a href=&quot;https://miller.readthedocs.io/en/latest/&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;I'm on a Mac so all this took was:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install miller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To confirm this works, just type:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and you should get back something like 6.x.y.  I got:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr 6.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;general-command-structure-and-operation&quot;&gt;General Command Structure and Operation&lt;/h2&gt;

&lt;p&gt;Miller is a command line tool that operates with commands like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv sort -f name input.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Basically the syntax amounts to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;input type&lt;/li&gt;
  &lt;li&gt;command verb (sort in this case)&lt;/li&gt;
  &lt;li&gt;option flag&lt;/li&gt;
  &lt;li&gt;input source&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-help&quot;&gt;Getting Help&lt;/h2&gt;

&lt;p&gt;The –help flag gives you help:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mlr --help
	Usage: mlr [flags] {verb} [verb-dependent options ...] {zero or more file names}

	If zero file names are provided, standard input is read, e.g.
	  mlr --csv sort -f shape example.csv

	Output of one verb may be chained as input to another using &quot;then&quot;, e.g.
	  mlr --csv stats1 -a min,mean,max -f quantity then sort -f color example.csv

	Please see 'mlr help topics' for more information.
	Please also see https://miller.readthedocs.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The mlr help topics command is quite informative:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mlr help topics
	Type 'mlr help {topic}' for any of the following:
	Essentials:
	  mlr help topics
	  mlr help basic-examples
	  mlr help file-formats
	Flags:
	  mlr help flags
	  mlr help list-separator-aliases
	  mlr help list-separator-regex-aliases
	  mlr help comments-in-data-flags
	  mlr help compressed-data-flags
	  mlr help csv/tsv-only-flags
	  mlr help file-format-flags
	  mlr help flatten-unflatten-flags
	  mlr help format-conversion-keystroke-saver-flags
	  mlr help legacy-flags
	  mlr help miscellaneous-flags
	  mlr help output-colorization-flags
	  mlr help pprint-only-flags
	  mlr help profiling-flags
	  mlr help separator-flags
	Verbs:
	  mlr help list-verbs
	  mlr help usage-verbs
	  mlr help verb
	Functions:
	  mlr help list-functions
	  mlr help list-function-classes
	  mlr help list-functions-in-class
	  mlr help usage-functions
	  mlr help usage-functions-by-class
	  mlr help function
	Keywords:
	  mlr help list-keywords
	  mlr help usage-keywords
	  mlr help keyword
	Other:
	  mlr help auxents
	  mlr help mlrrc
	  mlr help output-colorization
	  mlr help type-arithmetic-info
	Shorthands:
	  mlr -g = mlr help flags
	  mlr -l = mlr help list-verbs
	  mlr -L = mlr help usage-verbs
	  mlr -f = mlr help list-functions
	  mlr -F = mlr help usage-functions
	  mlr -k = mlr help list-keywords
	  mlr -K = mlr help usage-keywords
	Lastly, 'mlr help ...' will search for your exact text '...' using the sources of
	'mlr help flag', 'mlr help verb', 'mlr help function', and 'mlr help keyword'.
	Use 'mlr help find ...' for approximate (substring) matches, e.g. 'mlr help find map'
	for all things with &quot;map&quot; in their names.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is an example for mlr help list-verbs:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mlr help list-verbs

	altkv bar bootstrap cat check clean-whitespace count-distinct count
	count-similar cut decimate fill-down fill-empty filter flatten format-values
	fraction gap grep group-by group-like having-fields head histogram json-parse
	json-stringify join label least-frequent merge-fields most-frequent nest
	nothing put regularize remove-empty-columns rename reorder repeat reshape
	sample sec2gmtdate sec2gmt seqgen shuffle skip-trivial-records sort
	sort-within-records split stats1 stats2 step tac tail tee template top
	unflatten uniq unsparsify
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;simple-examples&quot;&gt;Simple Examples&lt;/h2&gt;

&lt;p&gt;I've always found that tools like Miller are best learned from examples so I'm going to write down a number of them.  All or most of these examples will just write to the screen but be fully aware that Miller supports standard Unix output redirection so you can just add &quot;&amp;gt; /file.csv&quot; and direct the output to the specified file.&lt;/p&gt;

&lt;h3 id=&quot;listing-a-csv-file&quot;&gt;Listing a CSV File&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;cat&lt;/strong&gt; command verb just outputs data as a pass through:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv cat  /Users/sjohnson/Downloads/cases_0323.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;listing-the-first-4-lines-of-a-csv-file&quot;&gt;Listing the First 4 Lines of a CSV File&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;head&lt;/strong&gt; command verb lists lines from the beginning of the file.  The &quot;-n 4&quot; tells Miller to only output the first four lines.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv head -n 4  /Users/sjohnson/Downloads/cases_0323.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the result of this command so you can see the data I'm working with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key
	45001,Abbeville,South Carolina,US,2020-03-23 03:32:31,34.22333378,-82.46170658,1,0,0,0,&quot;Abbeville, South Carolina, US&quot;
	22001,Acadia,Louisiana,US,2020-03-23 03:32:31,30.295064899999996,-92.41419698,0,0,0,0,&quot;Acadia, Louisiana, US&quot;
	51001,Accomack,Virginia,US,2020-03-23 03:32:31,37.76707161,-75.63234615,1,0,0,0,&quot;Accomack, Virginia, US&quot;
	16001,Ada,Idaho,US,2020-03-23 03:32:31,43.4526575,-116.24155159999998,13,0,0,0,&quot;Ada, Idaho, US&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is me redirecting this to make a small test file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv head -n 4  /Users/sjohnson/Downloads/cases_0323.csv &amp;gt; ~/Downloads/miller.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This small test file will be used later for specific examples.&lt;/p&gt;

&lt;p&gt;And here is the proof that it did what I instructed it to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mlr --csv cat  ~/Downloads/miller.csv
	FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key
	45001,Abbeville,South Carolina,US,2020-03-23 03:32:31,34.22333378,-82.46170658,1,0,0,0,&quot;Abbeville, South Carolina, US&quot;
	22001,Acadia,Louisiana,US,2020-03-23 03:32:31,30.295064899999996,-92.41419698,0,0,0,0,&quot;Acadia, Louisiana, US&quot;
	51001,Accomack,Virginia,US,2020-03-23 03:32:31,37.76707161,-75.63234615,1,0,0,0,&quot;Accomack, Virginia, US&quot;
	16001,Ada,Idaho,US,2020-03-23 03:32:31,43.4526575,-116.24155159999998,13,0,0,0,&quot;Ada, Idaho, US&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is data from the US Covid Pandemic that was originally put into my &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;Covid Near Me&lt;/a&gt; project.&lt;/p&gt;

&lt;h3 id=&quot;listing-the-last-4-lines-of-a-csv-file&quot;&gt;Listing the Last 4 Lines of a CSV File&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;tail&lt;/strong&gt; command verb works from the end (tail) of the file instead of the beginning (head).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv tail -n 4  /Users/sjohnson/Downloads/cases_0323.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sorting-a-csv-file-by-column-name&quot;&gt;Sorting a CSV File by Column Name&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;sort&lt;/strong&gt; command verb does just that – it sorts the file.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv sort -f FIPS ~/Downloads/miller.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's the result of that sort:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key
	16001,Ada,Idaho,US,2020-03-23 03:32:31,43.4526575,-116.24155159999998,13,0,0,0,&quot;Ada, Idaho, US&quot;
	22001,Acadia,Louisiana,US,2020-03-23 03:32:31,30.295064899999996,-92.41419698,0,0,0,0,&quot;Acadia, Louisiana, US&quot;
	45001,Abbeville,South Carolina,US,2020-03-23 03:32:31,34.22333378,-82.46170658,1,0,0,0,&quot;Abbeville, South Carolina, US&quot;
	51001,Accomack,Virginia,US,2020-03-23 03:32:31,37.76707161,-75.63234615,1,0,0,0,&quot;Accomack, Virginia, US&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is a sort on the Province_State field:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mlr --csv sort -f Province_State ~/Downloads/miller.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are the results of that sort:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key
	16001,Ada,Idaho,US,2020-03-23 03:32:31,43.4526575,-116.24155159999998,13,0,0,0,&quot;Ada, Idaho, US&quot;
	22001,Acadia,Louisiana,US,2020-03-23 03:32:31,30.295064899999996,-92.41419698,0,0,0,0,&quot;Acadia, Louisiana, US&quot;
	45001,Abbeville,South Carolina,US,2020-03-23 03:32:31,34.22333378,-82.46170658,1,0,0,0,&quot;Abbeville, South Carolina, US&quot;
	51001,Accomack,Virginia,US,2020-03-23 03:32:31,37.76707161,-75.63234615,1,0,0,0,&quot;Accomack, Virginia, US&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;converting-a-csv-to-json&quot;&gt;Converting a CSV to JSON&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;tail&lt;/strong&gt; command verb can be combined with the &quot;-o&quot; output flag to give you json conversion:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  mlr --icsv --ojson tail -n 2 /Users/sjohnson/Downloads/cases_0323.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This also works with –csv (the -icsv is another way to indicate the input format).&lt;/p&gt;

&lt;p&gt;If you wanted to convert just the beginning of the file then you'd use the &lt;strong&gt;head&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  mlr --icsv --ojson head -n 2 /Users/sjohnson/Downloads/cases_0323.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if you wanted to do the whole file then you'd use the &lt;strong&gt;cat&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  mlr --icsv --ojson cat /Users/sjohnson/Downloads/cases_0323.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pretty-printing-a-csv&quot;&gt;Pretty Printing a CSV&lt;/h3&gt;

&lt;p&gt;The -opprint output flag (pprint is short for pretty print) can be used to give more easily understand human output:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv --opprint cat ~/Downloads/miller.csv

	FIPS  Admin2    Province_State Country_Region Last_Update         Lat                Long_               Confirmed Deaths Recovered Active Combined_Key
	45001 Abbeville South Carolina US             2020-03-23 03:32:31 34.22333378        -82.46170658        1         0      0         0      Abbeville, South Carolina, US
	22001 Acadia    Louisiana      US             2020-03-23 03:32:31 30.295064899999996 -92.41419698        0         0      0         0      Acadia, Louisiana, US
	51001 Accomack  Virginia       US             2020-03-23 03:32:31 37.76707161        -75.63234615        1         0      0         0      Accomack, Virginia, US
	16001 Ada       Idaho          US             2020-03-23 03:32:31 43.4526575         -116.24155159999998 13        0      0         0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course the cat command verb can be replaced by sort:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mlr --csv --opprint sort -f Province_State ~/Downloads/miller.csv

	FIPS  Admin2    Province_State Country_Region Last_Update         Lat                Long_               Confirmed Deaths Recovered Active Combined_Key
	16001 Ada       Idaho          US             2020-03-23 03:32:31 43.4526575         -116.24155159999998 13        0      0         0      Ada, Idaho, US
	22001 Acadia    Louisiana      US             2020-03-23 03:32:31 30.295064899999996 -92.41419698        0         0      0         0      Acadia, Louisiana, US
	45001 Abbeville South Carolina US             2020-03-23 03:32:31 34.22333378        -82.46170658        1         0      0         0      Abbeville, South Carolina, US
	51001 Accomack  Virginia       US             2020-03-23 03:32:31 37.76707161        -75.63234615        1         0      0         0      Accomack, Virginia, US
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;changing-the-shape-of-your-data---cut&quot;&gt;Changing the Shape of Your Data - cut&lt;/h3&gt;

&lt;p&gt;The cut command verb changes the shape of your data by extracting only the specified fields:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --csv --opprint cut -f FIPS,Admin2,Province_State  ~/Downloads/miller.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the output:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	FIPS  Admin2    Province_State
	45001 Abbeville South Carolina
	22001 Acadia    Louisiana
	51001 Accomack  Virginia
	16001 Ada       Idaho
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;diving-into-your-data---count-distinct&quot;&gt;Diving into Your Data - count-distinct&lt;/h3&gt;

&lt;p&gt;A lot of times you want to get a feel for a dataset by looking at its counts.  The &lt;strong&gt;count-distinct&lt;/strong&gt; command verb works for that.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --c2p --from ~/Downloads/miller.csv count-distinct -f Province_State | head

	Province_State count
	South Carolina 1
	Louisiana      1
	Virginia       1
	Idaho          1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we run this on our original input file, we see results like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mlr --c2p --from ~/Downloads/cases_0323.csv count-distinct -f Province_State | head -n10

	Province_State               count
	South Carolina               46
	Louisiana                    65
	Virginia                     133
	Idaho                        44
	Iowa                         99
	Kentucky                     121
	Missouri                     117
	Oklahoma                     77
	Colorado                     65
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is 1,468 words long and it barely touches on the coolness that is Miller.  Kudos to &lt;a href=&quot;https://github.com/johnkerl/&quot;&gt;John Kerl&lt;/a&gt; for producing such a wonderful tool.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 May 2022 12:54:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/data_science/2022/05/13/miller-a-swiss-army-chainsaw-for-csv-data-data-science-and-data-munging.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/data_science/2022/05/13/miller-a-swiss-army-chainsaw-for-csv-data-data-science-and-data-munging.html</guid>
        
        <category>data_science</category>
        
        <category>csv</category>
        
        <category>miller</category>
        
        
        <category>data_science</category>
        
      </item>
    
      <item>
        <title>When Rails 7 Doesn't Process application.js</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8560.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is more than a mildly embarrassing post to have to write but it is an interesting example of how habits can bite you hard – so, so hard.&lt;/p&gt;

&lt;p&gt;I recently wanted to start on an application and actually be current on everything: Rails, Bootstrap, etc.  I have long admitted to having issues with respect to &quot;modern&quot; web development (specifically JavaScript / the asset pipeline) and I'm mildly starting to deal with those issues.  I began with a &lt;a href=&quot;https://www.bootrails.com/blog/rails-7-bootstrap-5-tutorial/&quot;&gt;BootrAils tutorial&lt;/a&gt; and started to work through it.&lt;/p&gt;

&lt;p&gt;I got all the way to the end and I noticed that I simply could NOT get the popovers to work.  I don't claim to have a great understanding of the asset pipeline but I do know that it is a preprocessor that should get invoked on every page request.  I traced the problem back to application.js seemingly not getting processed (a view source didn't show it).  So, just to be sure, I added this to application&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Apr 2022 18:28:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2022/04/22/when-rails-7-doesn-t-process-application-js.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2022/04/22/when-rails-7-doesn-t-process-application-js.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Postgres Woes on OSX with libicui18n.69.dylib</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC09079.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Perhaps it is me but I've found that homebrew seems to give more errors and take longer than it used it.  I just got hit with this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	/usr/local/opt/postgresql/bin/postgres -v
	dyld: Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.69.dylib
	  Referenced from: /usr/local/opt/postgresql/bin/postgres
	  Reason: image not found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Digging into the OSX postgres log here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -n 100 /usr/local/var/log/postgresql.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;helped but didn't tell me what to do.&lt;/p&gt;

&lt;p&gt;An awful lot of googling didn't find me an answer but then I &lt;a href=&quot;https://stackoverflow.com/questions/53828891/dyld-library-not-loaded-usr-local-opt-icu4c-lib-libicui18n-62-dylib-error-run&quot;&gt;hit on&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew reinstall icu4c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That churned for a bit but then declared a decisive victory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	🍺  /usr/local/Cellar/maxima/5.46.0: 2,842 files, 119.1MB
	==&amp;gt; Running `brew cleanup maxima`...
	Removing: /usr/local/Cellar/maxima/5.45.1_4... (2,774 files, 118.4MB)
	Removing: /Users/sjohnson/Library/Caches/Homebrew/maxima--5.45.1_4... (38.3MB)
	==&amp;gt; Upgrading postgresql
	  13.2_2 -&amp;gt; 14.2_1

	==&amp;gt; Installing dependencies for postgresql: krb5
	==&amp;gt; Installing postgresql dependency: krb5
	==&amp;gt; Pouring krb5--1.19.3.catalina.bottle.tar.gz
	🍺  /usr/local/Cellar/krb5/1.19.3: 162 files, 5.2MB
	==&amp;gt; Installing postgresql
	==&amp;gt; Pouring postgresql--14.2_1.catalina.bottle.tar.gz
	==&amp;gt; Caveats
	To migrate existing data from a previous major version of PostgreSQL run:
	  brew postgresql-upgrade-database

	This formula has created a default database cluster with:
	  initdb --locale=C -E UTF-8 /usr/local/var/postgres
	For more details, read:
	  https://www.postgresql.org/docs/14/app-initdb.html

	To restart postgresql after an upgrade:
	  brew services restart postgresql
	Or, if you don't want/need a background service you can just run:
	  /usr/local/opt/postgresql/bin/postgres -D /usr/local/var/postgres
	==&amp;gt; Summary
	🍺  /usr/local/Cellar/postgresql/14.2_1: 3,305 files, 45.5MB
	==&amp;gt; Running `brew cleanup postgresql`...
	Removing: /usr/local/Cellar/postgresql/13.2_2... (3,218 files, 42.6MB)
	Removing: /Users/sjohnson/Library/Caches/Homebrew/postgresql--13.2_2... (11.1MB)
	==&amp;gt; Checking for dependents of upgraded formulae...
	==&amp;gt; No broken dependents found!
	==&amp;gt; Caveats
	==&amp;gt; postgresql@11
	This formula has created a default database cluster with:
	  initdb --locale=C -E UTF-8 /usr/local/var/postgresql@11
	For more details, read:
	  https://www.postgresql.org/docs/11/app-initdb.html

	postgresql@11 is keg-only, which means it was not symlinked into /usr/local,
	because this is an alternate version of another formula.

	If you need to have postgresql@11 first in your PATH, run:
	  echo 'export PATH=&quot;/usr/local/opt/postgresql@11/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.zshrc

	For compilers to find postgresql@11 you may need to set:
	  export LDFLAGS=&quot;-L/usr/local/opt/postgresql@11/lib&quot;
	  export CPPFLAGS=&quot;-I/usr/local/opt/postgresql@11/include&quot;

	For pkg-config to find postgresql@11 you may need to set:
	  export PKG_CONFIG_PATH=&quot;/usr/local/opt/postgresql@11/lib/pkgconfig&quot;


	To restart postgresql@11 after an upgrade:
	  brew services restart postgresql@11
	Or, if you don't want/need a background service you can just run:
	  /usr/local/opt/postgresql@11/bin/postgres -D /usr/local/var/postgresql@11
	==&amp;gt; maxima
	Emacs Lisp files have been installed to:
	  /usr/local/share/emacs/site-lisp/maxima
	==&amp;gt; postgresql
	To migrate existing data from a previous major version of PostgreSQL run:
	  brew postgresql-upgrade-database

	This formula has created a default database cluster with:
	  initdb --locale=C -E UTF-8 /usr/local/var/postgres
	For more details, read:
	  https://www.postgresql.org/docs/14/app-initdb.html

	To restart postgresql after an upgrade:
	  brew services restart postgresql
	Or, if you don't want/need a background service you can just run:
	  /usr/local/opt/postgresql/bin/postgres -D /usr/local/var/postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I followed this up with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo 'export PATH=&quot;/usr/local/opt/postgresql@11/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then to confirm success:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services restart postgresql@11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, once again, I have postgres running locally.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Apr 2022 09:33:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2022/04/21/postgres-woes-on-osx-with-libicui18n-69-dylib.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2022/04/21/postgres-woes-on-osx-with-libicui18n-69-dylib.html</guid>
        
        <category>postgres</category>
        
        <category>osx</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>And Now For Starting Again with Elixir and Phoenix Not Elm</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8575.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;In my last blog post, I dug into Elm and while I like a number of things conceptually about Elm, the process of implementing nothing more than a maybe 8 element HTML form left me hugely frustrated and annoyed.  I also didn't like the way that Elm bundles code and display into one thing.  I may be a traditionalist perhaps but the separation of views and code really does work well in practice.  I get that Elm is a different thing but it shouldn't be this hard to just put some text and an html form on the screen.&lt;/p&gt;

&lt;p&gt;And, so, I'm putting Elm to the side for a bit and going to experiment with using Elixir and Phoenix for my previous Laravel application.  If nothing else this should be much more straightforward as it is moving from one MVC style framework to another albeit from an OO lang (php) to a functional lang (elixir).&lt;/p&gt;

&lt;h2 id=&quot;step-1-getting-up-to-date&quot;&gt;Step 1: Getting Up To Date&lt;/h2&gt;

&lt;p&gt;I'm on OSX and my goal was to get to the current Elixir and Phoenix before I started,  This I found to be surprisingly problematic.  And, perhaps, it was my fault as I don't claim to be great with HomeBrew.  I started with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update
brew install elixir@1.12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But no matter what I did, I couldn't get past elixir 1.11.  So my next step was to get rid of everything.&lt;/p&gt;

&lt;h3 id=&quot;getting-rid-of-everything&quot;&gt;Getting Rid of Everything&lt;/h3&gt;

&lt;p&gt;I started with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew uninstall elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then I got a warning about a shallow copy issue which told me to run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
			
	brew update
	
	brew install elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which finally resulted in:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	❯ elixir -v
	Erlang/OTP 24 [erts-12.3.1] [source] [64-bit] [smp:16:16] [ds:16:16:10] [async-threads:1] [jit] [dtrace]

	Elixir 1.13.3 (compiled with Erlang/OTP 24)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;installing-phoenix&quot;&gt;Installing Phoenix&lt;/h3&gt;

&lt;p&gt;A bit of googling gave me this command to install the newest Phoenix:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mix archive.install hex phx_new
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-generating-a-new-app&quot;&gt;Step 2: Generating a New App&lt;/h2&gt;

&lt;p&gt;Although I've actually been to ElixirCon, things have changed a lot in a few years.  Here's the new syntax for generating an app:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phx.new kit_selector3 --database mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Normally I'd be using postgres which is the default for Elixir but I had an existing MySQL database hence the &quot;–database mysql&quot;.&lt;/p&gt;

&lt;h2 id=&quot;step-3-setting-database-connection-parametters&quot;&gt;Step 3: Setting Database Connection Parametters&lt;/h2&gt;

&lt;p&gt;The next step is to edit the file config/dev.exs and update the database connection parameters.&lt;/p&gt;

&lt;h2 id=&quot;step-4-using-an-existing-database&quot;&gt;Step 4: Using an Existing Database&lt;/h2&gt;

&lt;p&gt;The default for MVC style application development is to always assume that the database is entirely new.  In this case, however, I have an existing database and schema to work with of about 10 tables.  My general approach with this case is to actually implement the migrations needed for each table.  That allows the test environment to actually match the existing database.  The general trick with this is to use a technique which amounts to &quot;don't_create_the_table_if_it_already_exists&quot; type of create statement.&lt;/p&gt;

&lt;p&gt;Here's my Laravel schema for my products table:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&amp;lt;?php

	use Illuminate\Database\Migrations\Migration;
	use Illuminate\Database\Schema\Blueprint;
	use Illuminate\Support\Facades\Schema;

	class CreateProductsTable extends Migration
	{
	    /**
	     * Run the migrations.
	     *
	     * @return void
	     */
	    public function up()
	    {
	        Schema::create('products', function (Blueprint $table) {
	            $table-&amp;gt;id();
	            $table-&amp;gt;timestamps();
	            $table-&amp;gt;integer('product_type_id');
	            $table-&amp;gt;integer('product_style_id');
	            $table-&amp;gt;integer('product_design_id');
	            $table-&amp;gt;integer('product_colorway_id');
	            $table-&amp;gt;string('image_front_path');
	            $table-&amp;gt;string('image_back_path');
	            $table-&amp;gt;string('image_left_path');
	            $table-&amp;gt;string('image_right_path');
	            $table-&amp;gt;string('team_name');
	            $table-&amp;gt;string('team_number');
        
        
        
	        });
	    }

	    /**
	     * Reverse the migrations.
	     *
	     * @return void
	     */
	    public function down()
	    {
	        Schema::dropIfExists('products');
	    }
	}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's a generate statement:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phx.gen.schema Product products product_type_id:integer product_style_id:integer product_design_id:integer product_colorway_id:integer image_front_path:string image_back_path:string image_left_path:string image_right_path:string team_name:string team_number:string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see output like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	===&amp;gt; Compiling telemetry
	===&amp;gt; Rebar3 detected a lock file from a newer version. It will be loaded in compatibility mode, but important information may be missing or lost. It is recommended to upgrade Rebar3.
	===&amp;gt; Compiling telemetry_poller
	===&amp;gt; Rebar3 detected a lock file from a newer version. It will be loaded in compatibility mode, but important information may be missing or lost. It is recommended to upgrade Rebar3.
	===&amp;gt; Compiling cowboy_telemetry
	==&amp;gt; phoenix_live_dashboard
	Compiling 40 files (.ex)
	Generated phoenix_live_dashboard app
	==&amp;gt; swoosh
	Compiling 38 files (.ex)
	Generated swoosh app
	==&amp;gt; phoenix_ecto
	Compiling 7 files (.ex)
	Generated phoenix_ecto app
	==&amp;gt; kit_selector3
	* creating lib/kit_selector3/product.ex
	* creating priv/repo/migrations/20220402134750_create_products.exs

	Remember to update your repository by running migrations:

	    $ mix ecto.migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Your generated migration is here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;priv/repo/migrations/20220402134750_create_products.exs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and the migration looks as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	defmodule KitSelector3.Repo.Migrations.CreateProducts do
	  use Ecto.Migration

	  def change do
	    create table(:products) do
	      add :product_type_id, :integer
	      add :product_style_id, :integer
	      add :product_design_id, :integer
	      add :product_colorway_id, :integer
	      add :image_front_path, :string
	      add :image_back_path, :string
	      add :image_left_path, :string
	      add :image_right_path, :string
	      add :team_name, :string
	      add :team_number, :string

	      timestamps()
	    end
	  end
	end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The trick here is to change the table creation from create table to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	create_if_not_exists table(:thing)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I found this trick in an &lt;a href=&quot;https://elixirforum.com/t/best-practice-integrating-phoenix-with-existing-database/43341/6&quot;&gt;Elixir Forum post&lt;/a&gt;.  This needs to be done before the migration is executed with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mix ecto.migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now in my case, I failed to save my changed migration (the one with create_if_not_exists) before I ran the migrate command and I got this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	❯ mix ecto.migrate
	Compiling 15 files (.ex)
	Generated kit_selector3 app

	09:51:50.157 [info]  == Running 20220402134750 KitSelector3.Repo.Migrations.CreateProducts.change/0 forward

	09:51:50.162 [info]  create table products
	** (MyXQL.Error) (1050) (ER_TABLE_EXISTS_ERROR) Table 'products' already exists
	    (ecto_sql 3.7.2) lib/ecto/adapters/sql.ex:760: Ecto.Adapters.SQL.raise_sql_call_error/1
	    (elixir 1.13.3) lib/enum.ex:1593: Enum.&quot;-map/2-lists^map/1-0-&quot;/2
	    (ecto_sql 3.7.2) lib/ecto/adapters/sql.ex:852: Ecto.Adapters.SQL.execute_ddl/4
	    (ecto_sql 3.7.2) lib/ecto/migration/runner.ex:343: Ecto.Migration.Runner.log_and_execute_ddl/3
	    (ecto_sql 3.7.2) lib/ecto/migration/runner.ex:117: anonymous fn/6 in Ecto.Migration.Runner.flush/0
	    (elixir 1.13.3) lib/enum.ex:2396: Enum.&quot;-reduce/3-lists^foldl/2-0-&quot;/3
	    (ecto_sql 3.7.2) lib/ecto/migration/runner.ex:116: Ecto.Migration.Runner.flush/0
	    (stdlib 3.17.1) timer.erl:166: :timer.tc/1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The take away here is that migrations will NOT overwrite existing tables.  That's the exact right design choice for Phoenix to have made and I'm glad to see it.&lt;/p&gt;

&lt;p&gt;Saving the migration file and trying again gave:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mix ecto.migrate

	09:59:44.609 [info]  == Running 20220402134750 KitSelector3.Repo.Migrations.CreateProducts.change/0 forward

	09:59:44.614 [info]  create table if not exists products

	09:59:44.616 [info]  == Migrated 20220402134750 in 0.0s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then implemented migrations for the remaining tables.&lt;/p&gt;

&lt;h2 id=&quot;generating-just-a-controller&quot;&gt;Generating Just a Controller&lt;/h2&gt;

&lt;p&gt;The application I'm converting from Laravel to Elixir has a mildly unusual structure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is one main controller, KitSelector&lt;/li&gt;
  &lt;li&gt;It renders a view&lt;/li&gt;
  &lt;li&gt;It isn't really a restful / CRUD style application&lt;/li&gt;
  &lt;li&gt;A form is displayed, an order is created and then JavaScript sends it to Shopify&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that I need to generate a non-restful controller without a ton of the default views.  This is something easily done in Rails but less easily done in Elixir.  Googling for answers didn't prove to be tremendously useful so this led to trial and error style experimentation.  Here was my first result:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mix phx.gen.html KitSelector Cat cats --no-schema --no-context
	* creating lib/kit_selector3_web/controllers/cat_controller.ex
	* creating lib/kit_selector3_web/templates/cat/edit.html.heex
	* creating lib/kit_selector3_web/templates/cat/form.html.heex
	* creating lib/kit_selector3_web/templates/cat/index.html.heex
	* creating lib/kit_selector3_web/templates/cat/new.html.heex
	* creating lib/kit_selector3_web/templates/cat/show.html.heex
	* creating lib/kit_selector3_web/views/cat_view.ex
	* creating test/kit_selector3_web/controllers/cat_controller_test.exs

	Add the resource to your browser scope in lib/kit_selector3_web/router.ex:

	    resources &quot;/cats&quot;, CatController
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes I know that I don't have any Cat or cats in my application but I didn't find the online help, well, helpful:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mix phx.gen.html --help
	** (Mix) Invalid arguments

	mix phx.gen.html, phx.gen.json, phx.gen.live, and phx.gen.context
	expect a context module name, followed by singular and plural names
	of the generated resource, ending with any number of attributes.
	For example:

	    mix phx.gen.html Accounts User users name:string
	    mix phx.gen.json Accounts User users name:string
	    mix phx.gen.live Accounts User users name:string
	    mix phx.gen.context Accounts User users name:string

	The context serves as the API boundary for the given resource.
	Multiple resources may belong to a context and a resource may be
	split over distinct contexts (such as Accounts.User and Payments.User).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking at the generated files led me to try this command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phx.gen.html KitSelector KitSelector kit_selector --no-schema --no-context
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which had this result:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	** (Mix) The context and schema should have different names

	mix phx.gen.html, phx.gen.json, phx.gen.live, and phx.gen.context
	expect a context module name, followed by singular and plural names
	of the generated resource, ending with any number of attributes.
	For example:

	    mix phx.gen.html Accounts User users name:string
	    mix phx.gen.json Accounts User users name:string
	    mix phx.gen.live Accounts User users name:string
	    mix phx.gen.context Accounts User users name:string

	The context serves as the API boundary for the given resource.
	Multiple resources may belong to a context and a resource may be
	split over distinct contexts (such as Accounts.User and Payments.User).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another try led to this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phx.gen.html General KitSelector kit_selector --no-schema --no-context
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which had this result:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mix phx.gen.html General KitSelector kit_selector --no-schema --no-context
	* creating lib/kit_selector3_web/controllers/kit_selector_controller.ex
	* creating lib/kit_selector3_web/templates/kit_selector/edit.html.heex
	* creating lib/kit_selector3_web/templates/kit_selector/form.html.heex
	* creating lib/kit_selector3_web/templates/kit_selector/index.html.heex
	* creating lib/kit_selector3_web/templates/kit_selector/new.html.heex
	* creating lib/kit_selector3_web/templates/kit_selector/show.html.heex
	* creating lib/kit_selector3_web/views/kit_selector_view.ex
	* creating test/kit_selector3_web/controllers/kit_selector_controller_test.exs

	Add the resource to your browser scope in lib/kit_selector3_web/router.ex:

	    resources &quot;/kit_selector&quot;, KitSelectorController
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Overall this feels pretty close to right and the views that aren't index.html.heex can simply be deleted with rm statements similar to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm lib/kit_selector3_web/templates/kit_selector/edit.html.heex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;although I actually chose to leave them in place.  Yes they are cruft but they may illustrate view techniques that I'll need to use.&lt;/p&gt;

&lt;p&gt;Unfortunately when I went to test the application by starting the server, I got this result:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	mix phx.server
	Compiling 3 files (.ex)
	warning: variable &quot;f&quot; is unused (if the variable is not meant to be used, prefix it with an underscore)
	  lib/kit_selector3_web/templates/kit_selector/form.html.heex:1: KitSelector3Web.KitSelectorView.&quot;form.html&quot;/1


	== Compilation error in file lib/kit_selector3_web/controllers/kit_selector_controller.ex ==
	** (CompileError) lib/kit_selector3_web/controllers/kit_selector_controller.ex:13: KitSelector3.General.KitSelector.__struct__/1 is undefined, cannot expand struct KitSelector3.General.KitSelector. Make sure the struct name is correct. If the struct name exists and is correct but it still cannot be found, you likely have cyclic module usage in your code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that's where real life constraints got in the way of fun code explorations.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Apr 2022 11:57:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/elixir/2022/04/01/and-now-for-starting-again-with-elixir-not-elm.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/elixir/2022/04/01/and-now-for-starting-again-with-elixir-not-elm.html</guid>
        
        <category>elixir</category>
        
        <category>phoenix</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Getting Started with Elm 01 - The Very Basics</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:39:18.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Elm is an interesting new front end language technology based on a functional language that generates JavaScript transparently and has a focus on great documentation and ease of learning.  &lt;a href=&quot;https://guide.elm-lang.org/install/elm.html&quot;&gt;A good starting point is the Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this blog post, I'm going to walk through the initial steps.  Along the way I'll draw some comparisons to things like Rails or Laravel.  My goal in all this is re-implementing a recent project I built with a JavaScript front end and a Laravel back end.  I'll us the same Laravel back end to see how Elm stacks up.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;There is an installer for Elm &lt;a href=&quot;https://guide.elm-lang.org/install/elm.html&quot;&gt;here&lt;/a&gt; which installs the language and binds it to the elm terminal command.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-trying-out-elm&quot;&gt;Sidebar: Trying Out Elm&lt;/h2&gt;

&lt;p&gt;There is an excellent online console for trying out Elm here: &lt;a href=&quot;https://elm-lang.org/try&quot;&gt;https://elm-lang.org/try&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;building-a-project&quot;&gt;Building a Project&lt;/h2&gt;

&lt;p&gt;I keep all my projects organized by their language type so I have a directory structure like:&lt;/p&gt;

&lt;p&gt;~/code/elm&lt;/p&gt;

&lt;p&gt;Within the elm directory you want to start by creating a project directory.  Mine is named kit_selector3:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/code/elm
	mkdir kit_selector3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once you have a project directory built then you want to to use the init command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elm init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please note that this is very unlike Rails or Laravel which build the project directory when you use their equivalent of elm init (rails new kit_selector3 or composer create-project laravel/laravel kit_selector3).&lt;/p&gt;

&lt;p&gt;This builds the bare minimum skeleton for an elm project which looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	.
	├── elm-stuff
	│   └── 0.19.1
	│       ├── Main.elmi
	│       ├── Main.elmo
	│       ├── d.dat
	│       ├── i.dat
	│       ├── lock
	│       └── o.dat
	├── elm.json
	└── src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The file elm.json is there to handle component installation.&lt;/p&gt;

&lt;h2 id=&quot;lets-add-bootstrap-support&quot;&gt;Let's Add Bootstrap Support&lt;/h2&gt;

&lt;p&gt;Given that it is the 21st century and virtually anything we build needs to work nicely on a mobile phone, I generally start everything these days with Bootstrap.  Happily there is a &lt;a href=&quot;http://elm-bootstrap.info/getting-started&quot;&gt;Bootstrap component for elm&lt;/a&gt;.  We can argue about CSS grids and such but Bootstrap, well, just plain works.  Here's how we get Bootstrap added to our &quot;application&quot; (right now there is so little that I kind of hesitate to call it an application).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elm install rundis/elm-bootstrap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That's going to add the elm bootstrap component into elm.json.  If you were to look under the hood of elm.json (generally not recommended) then you'd find this new entry under dependencies as the last line:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;dependencies&quot;: {
    &quot;direct&quot;: {
        &quot;elm/browser&quot;: &quot;1.0.2&quot;,
        &quot;elm/core&quot;: &quot;1.0.5&quot;,
        &quot;elm/html&quot;: &quot;1.0.0&quot;,
        &quot;rundis/elm-bootstrap&quot;: &quot;5.2.0&quot;
    },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With that added, we can now use bootstrap and this is going to expose just how very different elm is from, well, everything.  The first step is to create the Main.elm file in the src directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch src/Main.elm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open Main.elm in your editor and modify it as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	module Main exposing (main)

	import Html exposing (..)
	import Bootstrap.CDN as CDN
	import Bootstrap.Grid as Grid


	main =
	    Grid.container []
	        [ CDN.stylesheet -- creates an inline style node with the Bootstrap CSS
	        , Grid.row []
	            [ Grid.col []
	                [ text &quot;Some content for my view here...&quot;]
	            ]

	        ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don't claim to understand this particularly well but let's walk through it so I can make mistakes that a future blog post will laugh at.  I'll break it down line by line.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module Main exposing (main).  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is likely an overall namespace for the application.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import Html exposing (..)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This imports the overall Html component and exposes all elements.  If we just wanted to use certain elements then we could use something like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import Html exposing (Html, button, div, text)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I find it curious that the top level Html element is there but not the body containing element.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import Bootstrap.Grid as Grid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This pulls in the bootstrap grid element and sets it to the grid namespace.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main =
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I'm guessing that starts the use of the main namespace.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Grid.container []
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we see that indentation likely is semantic like Python (or just good convention; need to figure that out).  Not sure what the braces mean.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ Grid.col []
	                [ text &quot;Some content for my view here...&quot;]
	            ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This clearly adds a column and then outputs a text node underneath it stating &quot;Some content …&quot;.&lt;/p&gt;

&lt;p&gt;The indented style of the output and the lack of ending tags reminds me a lot of the Ruby HAML templating language.&lt;/p&gt;

&lt;h2 id=&quot;viewing-your-result&quot;&gt;Viewing Your Result&lt;/h2&gt;

&lt;p&gt;To view your result, you use the reactor command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elm reactor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and that brings up http://localhost:8000/.  What you initially see is a filesystem viewer on your application and then if you click into src/Main.elm you can find your bootstrap application (and, yes, it really doesn't look like very much at present).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This was very much a getting started post.  It really is too early for me to have any specific conclusions about elm but in my next post, I'll deconstruct the views for an existing Laravel application and move them over to elm.  I'll also have to figure out how to construct a back end api which replaces the normal template driven implicit rendering cycle common to an MVC style web application.&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Mar 2022 08:58:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/elm/2022/03/29/getting-started-with-elm-01-the-very-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/elm/2022/03/29/getting-started-with-elm-01-the-very-basics.html</guid>
        
        <category>elm</category>
        
        
        <category>elm</category>
        
      </item>
    
      <item>
        <title>Bad Clients, Gordian Knots and Transparency</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8576.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I have now been doing consulting professionally since 1988 (first client was the EPA) and despite that, bad clients, are always problematic. That's longer than my adult child has been alive, longer than I've ever been married, etc.  I'd like to think I'm excellent at consulting but no one, no matter how experienced, can fail to make mistakes.  This is a tale of when a consulting project goes wrong and how to extricate one's self.&lt;/p&gt;

&lt;p&gt;Today I finished up a project with a bad client and I wanted to write up my solution as a help for other developers in similar situations. I'm not writing this up as a humble brag or an &quot;I'm so smart&quot; but rather as a way to point out that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Anyone, no matter how smart, can get caught up by bad clients&lt;/li&gt;
  &lt;li&gt;Sometimes you have to do the utterly unexpected to resolve things&lt;/li&gt;
  &lt;li&gt;And, sometimes, you have to double down in order to resolve things&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;the-tldr-on-the-situation&quot;&gt;The TLDR On the Situation&lt;/h1&gt;

&lt;p&gt;Here is the situation:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In May of 2021, a friend contacted me for a backend project using Shopify, Laravel, PHP and JavaScript. I'm a rails and Ruby guy by choice but Laravel is so clearly Rails derived that I took it on.  And I did know PHP albeit from 2006.&lt;/li&gt;
  &lt;li&gt;There wasn't a ton of money with this job but I like my friend and they viewed this job as a way to secure their existing web site development arrangement with this customer.&lt;/li&gt;
  &lt;li&gt;I didn't know Laravel at all but I figured that even if I didn't make much from the job at least I would learn Laravel.&lt;/li&gt;
  &lt;li&gt;Shopify is the only publicly traded Ruby company I know of and I have intense admiration for them so getting any experience with Shopify I felt was positive (disclaimer – I was so impressed with Shopify that I recently became a stock holder).&lt;/li&gt;
  &lt;li&gt;We were going to be a consulting company to Company B which, in turn, was a vendor of primary company A's product.&lt;/li&gt;
  &lt;li&gt;Our original contact at Company B was a man called D who, during the course of all this, sold the company to a man called M.&lt;/li&gt;
  &lt;li&gt;The code we were contracted to write was an ecommerce &quot;configurator&quot; for making a complex, personalized clothing solution easier to purchase.&lt;/li&gt;
  &lt;li&gt;All ecommerce was to be done via shopify even though our solution was to exist separately from Shopify.&lt;/li&gt;
  &lt;li&gt;There was a strong desire, from the beginning, for social sharing and team purchases.&lt;/li&gt;
  &lt;li&gt;It is now March of 2022 and we have not been paid anything since September 11, 2021.&lt;/li&gt;
  &lt;li&gt;My friend has lost her existing web site arrangement with the customer.  They are identified below by H.&lt;/li&gt;
  &lt;li&gt;There was &lt;strong&gt;never&lt;/strong&gt; a development contract with company B.  We asked for one and D assured us that it wasn't necessary largely due to the existing relationship and ongoing website work.&lt;/li&gt;
  &lt;li&gt;Every single meeting to review the solution had a different set of people (sometimes more than 10) with the same points being brought up despite having been resolved in prior meetings.&lt;/li&gt;
  &lt;li&gt;Despite not being paid since September 11, we continued to work on the project and attempt to resolve the issues.  This included work on vacation.&lt;/li&gt;
  &lt;li&gt;We were the second IT company to take on this project and the only one to ever finish it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;problem-the-first-make-it-a-shopify-app&quot;&gt;Problem the First: &quot;Make it A Shopify App&quot;&lt;/h1&gt;

&lt;p&gt;When we started on this, we knew little about Shopify and treated integration as a back end (i.e. php level) problem using the existing php Shopify client libraries.  Company A had provided a snippet of code they said would be used to add the products to their Shopify cart, but snippet didn’t work at all.This led to the situation where a customer's underlying Shopify login not being used.  We were told by Company A to recast the entire application as a Shopify app.  This led to considerable retooling and new coding on our part only to find that it did nothing to fix the problem.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-second-sharing&quot;&gt;Problem the Second: Sharing&lt;/h1&gt;

&lt;p&gt;Due to the specific requirement for social sharing but a complete lack of specifications for how that was to work, we implemented our own solution of a sharable shopping cart that was FAR above and beyond the original specification.  When this was demonstrated to the client, they wanted difficult and tedious HTML changes without being willing to compensate us for them.  This led us to simply reduce the underlying application so that the shopping cart could only have a single item in it.  However the additional functionality is still present and cleanly commented for restoration.&lt;/p&gt;

&lt;h1 id=&quot;remaining-work&quot;&gt;Remaining Work&lt;/h1&gt;

&lt;p&gt;The only remaining work to be done is nothing more than changing out the development credentials for Shopify to be the production credentials.  And since this literally cannot be done until the very end, we have been required to hang in on this project, week after week, month after month.  Along with answering emails, attending meetings, addressing questions multiple times and all of the other “stuff” that goes with a live project.  This truly was the project that would never die.&lt;/p&gt;

&lt;h1 id=&quot;the-breaking-point&quot;&gt;The Breaking Point&lt;/h1&gt;

&lt;p&gt;The actual application has been working and ready to go since at least July 2021 and has never been formally used by the customer.  It was always the &quot;yet another new requirement&quot;, all of them because Company B was unable to execute on their business relationship with Company A due to ecommerce product fulfillment issues on their part.  Our code has been rock solid and working forever but we were never able to close the books on this project due to this.  This made my consulting partner on this project absolutely nuts because they just wanted the job to be done.&lt;/p&gt;

&lt;p&gt;The breaking point came when Company B wanted us to provide an SLA (&quot;service level agreement&quot;; basically an agreement of a guaranteed response time on fixes before they would take it live).  They were looking for a guaranteed response time on the order of 24 hours.  That means, for example, that no one involved can travel without a laptop always available.In certain situations an SLA is a valid request but for a project that amounted to less than $8,000 in billings and for which they were only willing to pay about $50 per month, well, that's ridiculous.  In a consulting shop with N employees that might be fine but in a consulting relationship with two individuals, of which only one is technical, it just isn't viable.&lt;/p&gt;

&lt;p&gt;We explained to Company B that we simply couldn't give them an SLA.  We clarified that we would always be responsive but we weren't in a position to accept a defined response time given our resources and the amounts involved.&lt;/p&gt;

&lt;p&gt;With this request made and our absolute distaste for this customer, we came to the internal conclusion that we simply needed to be done.  Given that we hadn't been paid in more than six months, we rounded up the numbers and came to the conclusion that another $5,500 was due to us.  In all truth the actual number was substantially higher but we wanted to be done and we felt that going for a smaller number was more likely to get us out of this faster.&lt;/p&gt;

&lt;h1 id=&quot;the-second-breaking-point&quot;&gt;The Second Breaking Point&lt;/h1&gt;

&lt;p&gt;With our request to simply be paid the money that we were due, person M at company B responded to us with a contract that he required us to sign before we could be paid.  Among the issues in this contract:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A non disparagement clause&lt;/li&gt;
  &lt;li&gt;A requirement for us to never talk to Company A&lt;/li&gt;
  &lt;li&gt;A training session for the new vendors and 20 more business days of support with an expected response time of 24 hours, keeping us on tie to this project for an additional month with no additional compensation&lt;/li&gt;
  &lt;li&gt;A gag order – basically we would be barred from talking to anyone about said contract or our role in anything related to the project&lt;/li&gt;
  &lt;li&gt;A non-compete clause barring participation or work for any ‘competitive business’. Since they are engaged in eCommerce this vague statement could possibly prohibit a very wide range of internet-related work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am an independent consultant and I don't have a personal attorney to review stupid contracts.  My general approach is to simply NOT sign stupid contracts (yes you can get away with this when you are good and I'm excellent).  My partner on this project gave it to her attorney who told her &quot;It would be $1,500 for me to even read this let alone go thru a review process&quot;.  It was very clear to both of us that any dollars we got from the remaining $5,500 could easily be consumed by legal paperwork.  Remember, after brushing off our offer of a contract in May, company B had been perfectly content to let us work without a contract for 9 months it was only when we asked to be compensated for said work that they required a contract before we could be paid for work we’d already done.&lt;/p&gt;

&lt;h1 id=&quot;resolving-things-1-the-gordian-solution&quot;&gt;Resolving Things 1: The Gordian Solution&lt;/h1&gt;

&lt;p&gt;My first attempt at resolving this was simple:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there is no money then there is no need for a contract.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I refer to this as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Gordian_Knot&quot;&gt;Gordian Solution&lt;/a&gt;.  Walking away from $$$ in consulting work is normally absolutely &lt;strong&gt;not&lt;/strong&gt; something that is acceptable or even considered.  I mean who doesn't want to get paid but we just wanted this &lt;strong&gt;done&lt;/strong&gt;.  Here is the email that I composed and my partner sent:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi M, 
We are simply at an impasse and I suggest the following as a way to resolve the issue.&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;Scott and I want to be done with this project.&lt;/li&gt;
    &lt;li&gt;You want a contract and Scott and I can't afford an attorney to review it – there is no point in our signing a contract for $5,500 if all of it goes to legal fees.&lt;/li&gt;
    &lt;li&gt;We propose that we simply give you the code and the existing server accounts and logins where everything exists.&lt;/li&gt;
    &lt;li&gt;This would be accomplished as follows:
a. You pay us nothing.  Repeat nothing.
b. We transfer the git repo to a git username of your choosing.
c. You give us credit card details so we can take our's business card off the digital ocean account and the forge deployer account.
d. We add your email and password onto these accounts and delete our own.
e. I will have Scott write a readme in the repo for how to check the code out, deploy it, and as much information as he can remember on how to update the credentials for the application to production.&lt;/li&gt;
    &lt;li&gt;We just want this to be done.  Let's agree on this and transfer the whole code base over to you by Monday end of day.
H&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Honestly I expected this to completely solve things.  I mean who doesn't want to get out of a $5,500 bill.  That's a pretty large amount of money.&lt;/p&gt;

&lt;h1 id=&quot;resolving-things-2-transparency&quot;&gt;Resolving Things 2: Transparency&lt;/h1&gt;

&lt;p&gt;Sadly the client (company B) pushed back with a bunch of stupidity including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Just give us a zip of the code&lt;/li&gt;
  &lt;li&gt;Get it deployed differently&lt;/li&gt;
  &lt;li&gt;Let's move the code to Windows azure git hosting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any developer in modern times knows that devops and deployment is a key part of things and everything works perfectly on the existing platform of Digital Ocean for hosting and Laravel Forge for deployment.  On this platform it has now been running for &amp;gt; 9 months with not one bit of down time and countless deploys thru development, testing, schema changes and more.&lt;/p&gt;

&lt;p&gt;It is a well know truism in the open source world that &quot;with enough eyes, all bugs are simple&quot; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Linus%27s_law&quot;&gt;Linus' Law&lt;/a&gt;).  Similarly I believe that when you have a situation with bad actors (and I'm absolutely certain that this company was portraying the situation to Company A that the issues were on our side; I don't appreciate being lied about) that bringing greater transparency to bear is the solution.  I discussed it with my consulting partner and here was the email that I wrote in response to their requests for stupid changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: T is the name of the new developer on the project.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi,
No.  A flat no.  We have been exceedingly generous with respect to this project all along and our solution was clear, concise and to the point while also giving you a fully working solution.
We have kept working on this despite NOT BEING PAID since September 11.
We simply want to be done.&lt;br /&gt;
We set out a very clear set set of instructions for us to conclude this and be done.
And, unfortunately, no one at your company seems to be able to follow them.
A github account is free.  And anyone who is a developer in the 21st century has one.
My suggestion here is that we reach out to Company A to break this log jam and move forward.  I am happy to forward them all correspondence and talk with them personally.&lt;br /&gt;
I am certain that any developer at Company A has a github account that we can transfer this code to and then they can handle it with you.  When would you like me to communicate with Company A about all of this?
Thank you
Scott
PS  - T – my personal phone number is 317 531 4853 if you want to understand the backstory on this project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not surprisingly my offer to be transparent with Company A was not accepted.  What did happen though was a call from T within 15 minutes of my sending the email with a github account to transfer the code to and credit card info to use.&lt;/p&gt;

&lt;p&gt;It is always amazing how bad actors scurry away from the light.&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Mar 2022 13:01:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/consulting/2022/03/28/bad-clients-gordian-knots-and-transparency.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/consulting/2022/03/28/bad-clients-gordian-knots-and-transparency.html</guid>
        
        <category>consulting</category>
        
        
        <category>consulting</category>
        
      </item>
    
      <item>
        <title>Upgrading Elix on OSX with Brew</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03838.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is simple but I keep needing to look it up.&lt;/p&gt;

&lt;p&gt;First check your elixir version:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elixir -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Second confirm that you actually installed Elixir using brew:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew list | grep elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Third do the upgrade:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You are probably going to find more than just elixir itself is upgraded.  Theoretically you should be able to look at just the upgrade tree with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew deps --tree --include-build elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and only those things will be upgraded but when I noted a much larger group of packages being upgraded which makes me suspect some kind of circular dependency that needed to be handled.&lt;/p&gt;

&lt;p&gt;Fourth check the version again:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elixir -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 22 Mar 2022 13:42:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/elixir/2022/03/22/upgrading-elix-on-osx-with-brew.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/elixir/2022/03/22/upgrading-elix-on-osx-with-brew.html</guid>
        
        <category>elixir</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Forcing Grid Stacking with Bootstrap on Mobile</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01797.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I recently had the situation where a Bootstrap application:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Worked perfectly on a desktop with a side by side layout&lt;/li&gt;
  &lt;li&gt;Properly wrapped on desktop when the window was resized down to a mobile like form factor&lt;/li&gt;
  &lt;li&gt;Failed to ever wrap on mobile showing just a smaller version of the desktop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I puzzled over this quite a bit until I ran a google search for &quot;bootstrap text too small on mobile&quot; which led me to this directive:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This needs to be inserted into your html head element and then, like magic, made everything format perfectly on mobile.&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Dec 2021 12:33:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2021/12/23/forcing-grid-stacking-with-bootstrap-on-mobile.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2021/12/23/forcing-grid-stacking-with-bootstrap-on-mobile.html</guid>
        
        <category>bootstrap</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Why master.blade.php Isn't Processed in Laravel</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01205.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I had the situation earlier where commands like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@extends('layouts.master')
@section('title', 'Order Submitter LegendBorne Products')
@section('content')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in my template weren't being processed and this led me to do the normal bit of Google fu, alas, to no avail.  And then I looked at the name of my template:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;order_submitter_index.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes – that's right.  I was missing the .blade. suffix so a quick rename to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;order_submitter_index.blade.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And all worked perfectly.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Dec 2021 20:17:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/laravel/2021/12/21/why-master-blade-php-isn-t-processed-in-laravel.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/laravel/2021/12/21/why-master-blade-php-isn-t-processed-in-laravel.html</guid>
        
        <category>laravel</category>
        
        <category>php</category>
        
        
        <category>laravel</category>
        
      </item>
    
      <item>
        <title>Rails 6 - Can't Find Application.js</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:33:15.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I started fiddling about with a new Rails project and after finding a likely starting point, I immediately ended up with this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Webpacker can't find application.js in
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I'm old school Rails and I find the whole asset compilation situation, honestly, perplexing.  The solution turned out to be:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails webpacker:install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;after the normal:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone foo
bundle install
bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have no idea why the bundler install doesn't handle executing webpacker:install but cie la vie.  The more things change, the more they stay the same …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: I kept at this and kept finding that I didn't have webpacker or some other portion of the rails stack running.  I finally traced this down to things having changed.  Traditionally I've always run rails as:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -pXYZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the new approach is to run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which in turn contains:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; #!/usr/bin/env bash

 if ! command -v foreman &amp;amp;&amp;gt; /dev/null
 then
   echo &quot;Installing foreman...&quot;
   gem install foreman
 fi

 foreman start -f Procfile.dev &quot;$@&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and the Procfile.dev file contains:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	web: bin/rails server -p 3000
	js: yarn build --watch
	css: yarn build:css --watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was literally missing the yarn command so part of the overall asset pipeline just wasn't running.&lt;/p&gt;

&lt;p&gt;Old habits die &lt;strong&gt;hard&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Dec 2021 09:51:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2021/12/18/rails-6-can-t-find-application-js.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2021/12/18/rails-6-can-t-find-application-js.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Converting a Laravel App to a Shopify App</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03829.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This blog post tackles the odd topic of taking a Laravel application and converting it to a Shopify app.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Shopify is an ecommerce platform for building hosted shopping sites.  With Shopify your whole ecommerce experience exists on a shopify url (whether the domain is .shopify.com or not; Shopify is serving everything and the underlying source of data is Shopify itself).  Laravel is an MVC based framework for building web applications using the php language.&lt;/p&gt;

&lt;p&gt;In this blog post, I will attempt to document all the steps to build a &quot;shopify app&quot; using Laravel.  A Shopify app is a web application which, can be hosted anywhere, that authenticates itself to Shopify and is embedded in a page on the Shopify website.&lt;/p&gt;

&lt;h2 id=&quot;step-1-create-a-shopify-app-using-the-shopify-dashboard&quot;&gt;Step 1: Create a Shopify App Using the Shopify Dashboard&lt;/h2&gt;

&lt;p&gt;There are a few different types of Shopify apps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Private / Custom – A private app can only be used by one shopify site and cannot be listed in the Shopify app catalog.  Private apps have no review / approval cycle.&lt;/li&gt;
  &lt;li&gt;Public – A public app is listed in the Shopify catalog, is reviewed and approved by Shopify&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this tutorial we will be focused on private / custom apps.&lt;/p&gt;

&lt;p&gt;The first step is to create our app.  This can be done with this url:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://partners.shopify.com/&quot;&gt;https://partners.shopify.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are two url settings:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Callback url; this might also be called the App url (Shopify has changed their UI a number of times)&lt;/li&gt;
  &lt;li&gt;The Redirect uri; this might be called the &quot;Allowed redirection URL(s)&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The callback url needs to be set to your home route, the default route for your application.&lt;/p&gt;

&lt;p&gt;The redirect uri needs to be set to the /authenticate route (this is automatically provided by )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Everything you do with the Shopify website needs to be done in Chrome.  No other browser such as Brave seems to work.&lt;/p&gt;

&lt;h2 id=&quot;step-2-adding-shopify-support-to-your-laravel-app&quot;&gt;Step 2: Adding Shopify Support to Your Laravel App&lt;/h2&gt;

&lt;p&gt;The first step is to install the osiset shopify component:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer require osiset/laravel-shopify
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that you need to generate a configuration file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan vendor:publish --tag=shopify-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to add your credentials from Step 1 into the config file.  Or move them into a .env file if that's the approach you are using.  The values you need to fill in are: app_name, api_key, api_secret, and api_scopes&lt;/p&gt;

&lt;h2 id=&quot;step-3-adding-your-shopify-app-to&quot;&gt;Step 3: Adding Your Shopify App to&lt;/h2&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;

&lt;p&gt;Here are some of the references I used for this.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/osiset/laravel-shopify/wiki/Installation&quot;&gt;https://github.com/osiset/laravel-shopify/wiki/Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;Shopify OAuth&quot;&gt;https://shopify.dev/apps/auth/oauth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 27 Aug 2021 10:11:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/laravel/2021/08/27/converting-a-laravel-app-to-a-shopify-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/laravel/2021/08/27/converting-a-laravel-app-to-a-shopify-app.html</guid>
        
        <category>shopify</category>
        
        <category>laravel</category>
        
        <category>php</category>
        
        
        <category>laravel</category>
        
      </item>
    
      <item>
        <title>Implementing a Master Template and Bootstrap in Laravel 8</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:34:21.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This blog post continues from my Hello World tutorial and adds a master layout that you can use to add a consistent HTML structure to all pages.  This is very similar, in a Rails context, to application.html.erb.&lt;/p&gt;

&lt;h2 id=&quot;step-1-create-a-layouts-directory&quot;&gt;Step 1: Create a layouts Directory&lt;/h2&gt;

&lt;p&gt;In your application directory, start my creating the directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir resources/views/layouts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-create-a-masterbladephp-layout&quot;&gt;Step 2: Create a master.blade.php Layout&lt;/h2&gt;

&lt;p&gt;In your application directory, create the layout file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch resources/views/layouts/master.blade.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-add-the-html-boilerplate&quot;&gt;Step 3: Add the HTML Boilerplate&lt;/h2&gt;

&lt;p&gt;Start by adding to the master.blade.php file, your basic HTML stuff:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-4-add-yield-directives&quot;&gt;Step 4: Add Yield Directives&lt;/h2&gt;

&lt;p&gt;Just as in Rails, Laravel uses a yield directive during template processing to indicate where things go.  Here is the HTML boilerplate marked up using yield directives:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    @yield('title')
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  @yield('content')
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These yield statements indicate that two named sections of stuff, title and content, will be inserted at their respective locations.&lt;/p&gt;

&lt;h2 id=&quot;adding-bootstrap&quot;&gt;Adding Bootstrap&lt;/h2&gt;

&lt;p&gt;Given that we have a master template, we can also use it to add Bootstrap to our Hello World app.  Go to the &lt;a href=&quot;https://www.getbootstrap.com&quot;&gt;Get Bootstrap&lt;/a&gt; site, click Getting Started, and copy the main CSS url.  And add it below as follows:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    @yield('title')
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  @yield('content')
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we need to add the JavaScript so scroll down in the above Get Boostrap page and copy the JavaScript script tag.  And add it below as follows:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    @yield('title')
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  @yield('content')
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;using-the-layout&quot;&gt;Using the Layout&lt;/h2&gt;

&lt;p&gt;In our previous tutorial, we had a view file called hello_index.blade.php.  We are going to modify that file as follows:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@extends('layouts.master')
@section('title','Home Page')
@section('content')

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'container'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'row'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'col-md-12'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

@endsection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And let's create a second file to use the layout in:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch resources/views/about.blade.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here are the contents for about.blade.php:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@extends('layouts.master')
@section('title','About Page')
@section('content')

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'container'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'row'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'col-md-12'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;About&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

@endsection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-a-route-for-the-about-page&quot;&gt;Adding a Route for the About Page&lt;/h2&gt;

&lt;p&gt;Add the following route to web.php:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::get('/about', function() {
  return view('about')
  })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check your routes with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan route:list
+--------+----------+----------+------+--------------------------------------------+------------+
| Domain | Method   | URI      | Name | Action                                     | Middleware |
+--------+----------+----------+------+--------------------------------------------+------------+
|        | GET|HEAD | /        |      | Closure                                    | web        |
|        | GET|HEAD | about    |      | Closure                                    | web        |
|        | GET|HEAD | api/user |      | Closure                                    | api        |
|        |          |          |      |                                            | auth:api   |
|        | GET|HEAD | hello    |      | App\Http\Controllers\HelloController@index | web        |
+--------+----------+----------+------+--------------------------------------------+------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;testing-this&quot;&gt;Testing This&lt;/h2&gt;

&lt;p&gt;Start the server with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then visit:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://localhost:8000/hello
https://localhost:8000/about
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you should see the bootstrap derived layout in place.  Do a view source or look closely at the tab title and you should see the title variable set correctly.&lt;/p&gt;

&lt;h2 id=&quot;moving-bootstrap-tags-from-the-view-to-the-layout&quot;&gt;Moving Bootstrap Tags from the View to the Layout&lt;/h2&gt;

&lt;p&gt;As you look at the views above you likely noticed that the container divs are in the view rather than in the layout.  This can be addressed by changing the layout as follows:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    @yield('title')
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'container'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'row'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'col-md-12'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        @yield('content')
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will also need to remove the container divs from each of the views.  Here's an example for about:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@extends('layouts.master')
@section('title','About Us')
@section('content')

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;About Us&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

@endsection

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall Laravel blade templates are conceptually similar to Rails html.erb templates and hopefully this tutorial helps you see how to work with them.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I found &lt;a href=&quot;https://www.youtube.com/watch?v=TopRrBdrQ4M&quot;&gt;this YouTube video&lt;/a&gt; very helpful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/5.0/getting-started/introduction/&quot;&gt;BootStrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 10 Jun 2021 10:19:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/laravel/2021/06/10/implementing-a-master-template-in-laravel-8.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/laravel/2021/06/10/implementing-a-master-template-in-laravel-8.html</guid>
        
        <category>laravel</category>
        
        <category>php</category>
        
        
        <category>laravel</category>
        
      </item>
    
      <item>
        <title>A Simple Laravel Hello World</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01298.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;As of late I've been working in Laravel and figuring out how Laravel differs from Rails.  And while I have a bigger blog post in the works, I thought there was learning value in a simple Hello World implemented in Laravel.  Hello World is a simple program that just puts Hello World on the screen.&lt;/p&gt;

&lt;p&gt;Here's how I thought a Laravel version of this should work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Be a whole Laravel application&lt;/li&gt;
  &lt;li&gt;Be a single controller&lt;/li&gt;
  &lt;li&gt;Be a single route&lt;/li&gt;
  &lt;li&gt;Define the text &quot;Hello World&quot; as a variable, $text, in the controller&lt;/li&gt;
  &lt;li&gt;Display that on the screen via an HTML template&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While this doesn't illustrated models and database connectivity, this actually illustrates how to use a surprising amount of an overall MVC framework.&lt;/p&gt;

&lt;h2 id=&quot;step-1-creating-an-application&quot;&gt;Step 1: Creating an Application&lt;/h2&gt;

&lt;p&gt;The first step is to use composer to generate the overall application with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer create-project laravel/laravel hello_world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to change into the directory with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd hello_world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then open the code base with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mate .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or if you use Sublime:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;subl .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-generating-a-controller&quot;&gt;Step 2: Generating a Controller&lt;/h2&gt;

&lt;p&gt;Back at your command line, you want to generate a controller with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan make:controller HelloController
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a file named HelloController in app/http/Controllers:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l app/Http/Controllers
total 16
-rw-r--r--  1 sjohnson  staff  361 May 18 11:37 Controller.php
-rw-r--r--  1 sjohnson  staff  122 May 27 09:12 HelloController.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Inside the controller you want to add the following code (some of which will already be there from the generator):&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello_index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;inside the &quot;class HelloController extends Controller&quot; block of code (it goes inside the {} braces).&lt;/p&gt;

&lt;h2 id=&quot;step-3-adding-a-route&quot;&gt;Step 3: Adding a Route&lt;/h2&gt;

&lt;p&gt;Moving back to the code base, you want to edit the file routes/web.php and add this line:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'App\Http\Controllers\HelloController@index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This adds a single route, /hello, which is then handled by the Hello controller and the hello_index action.&lt;/p&gt;

&lt;p&gt;You can test that this route is available by running:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan route:list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which should show you something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------+----------+----------+------+--------------------------------------------+------------+
| Domain | Method   | URI      | Name | Action                                     | Middleware |
+--------+----------+----------+------+--------------------------------------------+------------+
|        | GET|HEAD | /        |      | Closure                                    | web        |
|        | GET|HEAD | api/user |      | Closure                                    | api        |
|        |          |          |      |                                            | auth:api   |
|        | GET|HEAD | hello    |      | App\Http\Controllers\HelloController@index | web        |
+--------+----------+----------+------+--------------------------------------------+------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It is critical that you use the fully name spaced path to the controller (i.e. starting with &lt;strong&gt;App&lt;/strong&gt;).  According to what I've read, you can use a use declaration at the top of the routes file to import controllers so you don't have to have the name spacing everywhere but I was unable to ever make that work.&lt;/p&gt;

&lt;h2 id=&quot;step-4-adding-a-variable-to-the-controller&quot;&gt;Step 4: Adding a Variable to the Controller&lt;/h2&gt;

&lt;p&gt;Inside the public function index method of the Hello controller, you want to add / change the following code:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello Cruel World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello_index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This defines one variable, $text, which should then be available in the view.  The way that it becomes available to the view is by passing a hash into the return statement which has a key of 'text' which is mapped to the variable $text.&lt;/p&gt;

&lt;h2 id=&quot;step-5-creating-a-view-and-displaying-a-variable&quot;&gt;Step 5: Creating a View and Displaying a Variable&lt;/h2&gt;

&lt;p&gt;Views, in Laravel, live in the directory resources/views so you can create one with the command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch resources/views/hello_index.blade.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you then want to edit that file and add this code:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-6-previewing-the-results&quot;&gt;Step 6: Previewing the Results&lt;/h2&gt;

&lt;p&gt;The key command here is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which starts the application and displays the result on:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:8000/hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At which point you should see &quot;Hello World&quot; come onto the screen.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This gives a fully functional Hello World application implemented in Laravel.  I didn't focus on differences from Rails here in order to simplify this post.  In my next post, I'll do more of that.&lt;/p&gt;
</description>
        <pubDate>Thu, 27 May 2021 09:02:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/laravel/2021/05/27/a-simple-laravel-hello-world.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/laravel/2021/05/27/a-simple-laravel-hello-world.html</guid>
        
        <category>laravel</category>
        
        <category>php</category>
        
        
        <category>laravel</category>
        
      </item>
    
      <item>
        <title>Converting from MySQL to Postgres using NMIG</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08884.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9563.jpeg&quot; alt=&quot;IMG_9563.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Historically I've been a MySQL advocate but I've recently been quite impressed with Postgres.  This leaves me in the position of needing to migrate several MySQL databases over to Postgres -or- run two database engines in production.  And, clearly, it is far more desirable to run only a single production database server.&lt;/p&gt;

&lt;p&gt;I recently found the &lt;a href=&quot;https://github.com/AnatolyUss/nmig&quot;&gt;NPM tool NMIG&lt;/a&gt; and used it to successfully convert a MySQL database over to Postgres quickly and easily – once I got past the initial installation process.&lt;/p&gt;

&lt;h2 id=&quot;installing-and-using-nmig&quot;&gt;Installing and Using NMIG&lt;/h2&gt;

&lt;p&gt;Here's what you need to do to use NMIG.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 2&lt;/strong&gt;: Go into your source database before you start the conversion and do a count on any table with a large number of records.  This gives you a checksum on the overall process (NMIG has great logs but I always prefer &lt;em&gt;belt and suspenders&lt;/em&gt; when it comes to working with valuable data).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;On your machine you need to have a version of NPM installed that is version 10 or later.&lt;/li&gt;
  &lt;li&gt;Git clone the NMIG repo to a directory on your computer.&lt;/li&gt;
  &lt;li&gt;Change into that directory.&lt;/li&gt;
  &lt;li&gt;Edit the file config/config.json and set the credentials for your &lt;strong&gt;source&lt;/strong&gt; and &lt;strong&gt;target&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Make a directory named &lt;strong&gt;nmig_logs&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Run &lt;strong&gt;npm install&lt;/strong&gt; to install all the dependencies.&lt;/li&gt;
  &lt;li&gt;Run &lt;strong&gt;npm run build&lt;/strong&gt; to convert the code from TypeScript to JavaScript.&lt;/li&gt;
  &lt;li&gt;Run the process with a syntax like this: npm start – –conf-dir='/Users/sjohnson/Sync/coding/my_x_is_y/nmig/config' –logs-dir='/Users/sjohnson/Sync/coding/my_x_is_y/nmig/nmig_logs'&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Obviously you need to update your directories as needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 2&lt;/strong&gt;: Go into your target database after the conversion and do a count on the same table and compare the results with the above.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Sep 2020 20:11:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mysql/2020/09/21/converting-from-mysql-to-postgres-using-nmig.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mysql/2020/09/21/converting-from-mysql-to-postgres-using-nmig.html</guid>
        
        <category>mysql</category>
        
        <category>postgres</category>
        
        
        <category>mysql</category>
        
      </item>
    
      <item>
        <title>Things I Do To My Every Rails Code Base</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_4005.jpeg&quot; alt=&quot;IMG_4005.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This is written in a Rails context but I've applied these techniques to Python and PHP as well as other languages.  This isn't Rails specific as much as it is a development best practice.&lt;/p&gt;

&lt;p&gt;My very first rails codebase was a project called eduFire which was a C2C (consumer to consumer) marketplace for educators who wanted to sell online tutoring in language instruction.  This let an instructor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;build a profile&lt;/li&gt;
  &lt;li&gt;advertise their services to people who wanted to learn&lt;/li&gt;
  &lt;li&gt;conduct video tutoring sessions&lt;/li&gt;
  &lt;li&gt;make a decent side income&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eduFire was a lightly funded startup (seed an then an A round) where all ops tasks were done by the engineers who built the product.  And, yes, there were only two of us with about 90% of the ops tasks falling on my shoulders.  From a technical perspective, we were doing DevOps although we certainly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;didn't call it that&lt;/li&gt;
  &lt;li&gt;didn't use today's generation of automated tooling much save shell scripting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What that project did for me though was force me to figure out an approach to my Rails projects that centered around:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation&lt;/li&gt;
  &lt;li&gt;Making things easy for myself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eduFire was built and deployed from 2007 to 2009.  Now this was a time when Rails applications where harder to deploy and keep running.  And that instability was actually good for me.  I went through a period in Summer of 2008 when I was constantly on call and my kids, now over a decade later, can tell the tale of my work Mac laptop intoning: &lt;strong&gt;&quot;eduFire IS DOWN&quot;&lt;/strong&gt; loudly, in the voice of god at 3 am or some such ridiculous hour.  What I learned from this was that you can fix anything from a dead sleep if you have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation&lt;/li&gt;
  &lt;li&gt;Tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these is discussed below.&lt;/p&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt;The first thing I do with any rails app, right after the rails new command is this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir docs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And in that directory I place markdown files of any documentation that I might need.&lt;/p&gt;

&lt;p&gt;Here's an example of what's in the docs directory for the &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;Covid Near Me&lt;/a&gt; app:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ ls -l docs
total 80
-rw-r--r--@ 1 sjohnson  staff  1192 Mar 24 07:29 api_josh.md
-rw-r--r--@ 1 sjohnson  staff   579 Mar 16  2020 generic_class.txt
-rw-r--r--  1 sjohnson  staff  1201 Mar 20 15:42 javascript.txt
-rw-r--r--@ 1 sjohnson  staff  1736 Sep 18 07:14 lets_encrypt_renewal_and_free_disc_space.md
-rw-r--r--  1 sjohnson  staff   131 Mar 17  2020 local_data_capture.md
-rw-r--r--@ 1 sjohnson  staff   811 Apr  5 13:17 location_api.md
-rw-r--r--@ 1 sjohnson  staff  4109 Mar 26 15:34 question_api.md
-rw-r--r--@ 1 sjohnson  staff  5408 Mar 31 15:23 symptom_report_api.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Whenever I have something that I have to do that isn't absolutely rote -or- when I need to draft documentation to share with a co-worker, I drop a document in docs.  I recognize the power of tools like wikis and slack messages for documentation, the simple fact is that for almost all engineers, the further you have to go from your coding editor to write documentation, the &lt;strong&gt;less likely&lt;/strong&gt; it is that documentation actually gets written.&lt;/p&gt;

&lt;h2 id=&quot;tools-aka-you-can-put-your-own-stuff-in-the-bin-directory&quot;&gt;Tools aka You Can Put Your Own Stuff in the bin Directory&lt;/h2&gt;

&lt;p&gt;The next lesson I learned from eduFire was the importance of automating as many common things as possible related to all the rote tasks that accompany software development.  Every Rails application has a bin directory which normally has just a few scripts in it like these:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯  ls -l bin
total 216
-rwxr-xr-x  1 sjohnson  staff  125 Mar 11  2020 bundle
-rwxr-xr-x  1 sjohnson  staff  264 Mar 11  2020 rails
-rwxr-xr-x  1 sjohnson  staff  213 Mar 11  2020 rake
-rwxr-xr-x  1 sjohnson  staff  988 Mar 11  2020 setup
-rwxr-xr-x  1 sjohnson  staff  507 Mar 11  2020 spring
-rwxr-xr-x  1 sjohnson  staff  819 Mar 11  2020 update
-rwxr-xr-x  1 sjohnson  staff  433 Mar 11  2020 webpack
-rwxr-xr-x  1 sjohnson  staff  438 Mar 11  2020 webpack-dev-server
-rwxr-xr-x  1 sjohnson  staff  303 Mar 11  2020 yarn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I do is add into this directory shell scripts for all the common tasks like deploy, ssh'ing into a particular box, pushing code, etc.  Here's what my the bin directory for the Covid Near Me project looks like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯  ls -l bin
total 216
-rwxr-xr-x  1 sjohnson  staff  125 Mar 11  2020 bundle
-rwxr-xr-x@ 1 sjohnson  staff  358 Mar 19  2020 deploy
-rwxr-xr-x  1 sjohnson  staff   77 Mar 23 06:02 gaddd
-rwxr-xr-x@ 1 sjohnson  staff   42 Mar 16  2020 gcod
-rwxr-xr-x@ 1 sjohnson  staff   25 Mar 16  2020 gcom
-rwxr-xr-x@ 1 sjohnson  staff   29 Mar 16  2020 gmerged
-rwxr-xr-x@ 1 sjohnson  staff   44 Mar 16  2020 gpulld
-rwxr-xr-x@ 1 sjohnson  staff   40 Apr 10 07:48 gpushb
-rwxr-xr-x@ 1 sjohnson  staff   44 Mar 16  2020 gpushd
-rwxr-xr-x@ 1 sjohnson  staff   45 Apr 10 07:48 gpushm
-rwxr-xr-x  1 sjohnson  staff  391 Apr 13 11:04 migrate
-rwxr-xr-x  1 sjohnson  staff   45 Apr  1 09:31 qt
-rwxr-xr-x  1 sjohnson  staff  264 Mar 11  2020 rails
-rwxr-xr-x  1 sjohnson  staff  213 Mar 11  2020 rake
-rwxr-xr-x@ 1 sjohnson  staff   27 Mar 25 13:21 server
-rwxr-xr-x  1 sjohnson  staff  988 Mar 11  2020 setup
-rwxr-xr-x  1 sjohnson  staff  507 Mar 11  2020 spring
-rwxr-xr-x  1 sjohnson  staff   38 Mar 21 14:29 ssh2gcp
-rwxr-xr-x  1 sjohnson  staff   38 Apr  9 11:27 ssh2gcp1
-rwxr-xr-x  1 sjohnson  staff   38 Apr  9 11:27 ssh2gcp2
-rwxr-xr-x  1 sjohnson  staff   38 Mar 21 20:37 sshdoweb1
-rwxr-xr-x  1 sjohnson  staff   39 Mar 21 20:37 sshdoweb2
-rwxr-xr-x  1 sjohnson  staff   36 Mar 21 20:37 sshdoworker1
-rwxr-xr-x  1 sjohnson  staff  819 Mar 11  2020 update
-rwxr-xr-x  1 sjohnson  staff  433 Mar 11  2020 webpack
-rwxr-xr-x  1 sjohnson  staff  438 Mar 11  2020 webpack-dev-server
-rwxr-xr-x  1 sjohnson  staff  303 Mar 11  2020 yarn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The names of these are a little bit cryptic.  For example &quot;gpulld&quot; means &quot;github pull development&quot; and it looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash
git push covid_morbidity develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly ssh2gcp means &quot;ssh into the main gcp&quot; box.&lt;/p&gt;

&lt;p&gt;If you solve ops problems on a regular basis, what you come to learn is that your memory can be very fallible, particularly under pressure.  The value of writing these tiny shell scripts is that when you need to do something in a hurry, you don't have to assemble a command on the fly and have problems when a single thing (like the host name of a machine) isn't apparent.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 07:20:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/09/18/things-i-do-to-my-every-rails-code-base.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/09/18/things-i-do-to-my-every-rails-code-base.html</guid>
        
        <category>rails</category>
        
        <category>sysadmin</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Taking Another Look at Phoenix and Elixir - Part 1 - Upgrading</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3241.jpeg&quot; alt=&quot;IMG_3241.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've been on the fence about Phoenix and Elixir for a while and I thought I'd take at least a quick dive.  I've had a development system for Phoenix and Elixir since at least 2016 but I haven't done much.  This means that the first task is bringing it into the 2020s.&lt;/p&gt;

&lt;h2 id=&quot;upgrading-elixir&quot;&gt;Upgrading Elixir&lt;/h2&gt;

&lt;p&gt;I installed Elixir via HomeBrew which means it is a simple:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which elixir
/usr/local/bin/elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It can be hard sometimes to know if you installed things via HomeBrew and checking their location is an easy cheap as HomeBrew installs stuff to /usr/local/bin&lt;/p&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade elixir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elixir --version
Erlang/OTP 23 [erts-11.0.3] [source] [64-bit] [smp:16:16] [ds:16:16:10] [async-threads:1] [hipe] [dtrace]

Elixir 1.10.4 (compiled with Erlang/OTP 23)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also use just -v:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elixir -v
Erlang/OTP 23 [erts-11.0.3] [source] [64-bit] [smp:16:16] [ds:16:16:10] [async-threads:1] [hipe] [dtrace]

Elixir 1.10.4 (compiled with Erlang/OTP 23)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;upgrading-mix-and-hex&quot;&gt;Upgrading Mix and Hex&lt;/h2&gt;

&lt;p&gt;Mix and Hex give the equivalent of a build tool (like Rake from the Rails world) and a Package Manager (like Gem / Bundler).&lt;/p&gt;

&lt;p&gt;To upgrade mix, you use:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix local.hex
Found existing entry: /Users/sjohnson/.mix/archives/hex-0.20.5
Are you sure you want to replace it with &quot;https://repo.hex.pm/installs/1.10.0/hex-0.20.5.ez&quot;? [Yn] Y
* creating /Users/sjohnson/.mix/archives/hex-0.20.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that will upgrade both mix and hex.&lt;/p&gt;

&lt;h2 id=&quot;upgrading-phoenix&quot;&gt;Upgrading Phoenix&lt;/h2&gt;

&lt;p&gt;The phoenix framework version I have dates back to 1.2 or 1.3 I think.  The first step is to figure out what version I have:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phoenix.new --version
Phoenix v1.3.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The method to upgrade the Phoenix framework itself is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix archive.install hex phx_new 1.5.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I used a google query to discover that the current Phoenix framework version was 1.5.4.  The other way to find this version number is to go to this url:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://hexdocs.pm/phoenix/installation.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then look at the drop down of different versions in the left hand sidebar.  The latest version is always at the top.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-sample-app&quot;&gt;Creating a Sample App&lt;/h2&gt;

&lt;p&gt;My first step was to create a location to work on Phoenix apps.  I'm going to be experimenting with a version of my JobHound app written in Phoenix so I created this directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p /Users/sjohnson/Sync/coding/jobhound/phoenix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can then move my existing Rails source code into:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding/jobhound/phoenix/rails
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and be able to open both code bases in the same editor window which should facilitate copy and paste based code rewriting.&lt;/p&gt;

&lt;p&gt;With all the tooling updated, creating a new Phoenix app is as a simple matter of:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/jobhound/phoenix
mix phx.new jobhound
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see a bunch of output looking like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* creating jobhound/config/config.exs
* creating jobhound/config/dev.exs
* creating jobhound/config/prod.exs
* creating jobhound/config/prod.secret.exs
* creating jobhound/config/test.exs
* creating jobhound/lib/jobhound/application.ex
* creating jobhound/lib/jobhound.ex
* creating jobhound/lib/jobhound_web/channels/user_socket.ex
* creating jobhound/lib/jobhound_web/views/error_helpers.ex
* creating jobhound/lib/jobhound_web/views/error_view.ex
* creating jobhound/lib/jobhound_web/endpoint.ex
* creating jobhound/lib/jobhound_web/router.ex
* creating jobhound/lib/jobhound_web/telemetry.ex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This created the canonical structure for a Phoenix app:&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hexdocs.pm/phoenix/installation.html&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hexdocs.pm/phoenix/up_and_running.html&quot;&gt;Getting Up and Running&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 15 Sep 2020 10:23:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/elixir/2020/09/15/taking-another-look-at-phoenix-and-elixir-part-1-upgrading.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/elixir/2020/09/15/taking-another-look-at-phoenix-and-elixir-part-1-upgrading.html</guid>
        
        <category>elixir</category>
        
        <category>phoenix</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Deploying to HatchBox with Rails 5.x</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_4620.jpeg&quot; alt=&quot;IMG_4620.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I just got a database less home page for a future SAAS app deployed via &lt;a href=&quot;https://www.hatchbox.io/&quot;&gt;HatchBox&lt;/a&gt; under Rails 5.x and I thought the differences were significant enough that I should document it.  HatchBox is the best tool I've ever found for Rails deploys but knowing all the steps to follow is key.&lt;/p&gt;

&lt;p&gt;elixi: Other than the Rails 5.2 upgrade step, there aren't many differences between this and Rails 6 but it has been long enough since I've done this that writing it down felt right.&lt;/p&gt;

&lt;h2 id=&quot;1-upgrade-rails-to-52x-if-you-dont-have-rails-credentialsedit&quot;&gt;1. Upgrade Rails to &quot;5.2.x&quot; if You Don't Have rails credentials:edit&lt;/h2&gt;

&lt;p&gt;If your Rails 5 version is old enough that you get this crap:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ rails credentials:edit
rails aborted!
Don't know how to build task 'credentials:edit' (see --tasks)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's the line you want to put into your Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 5.2'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once you change your Rails version, you want to use:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to upgrade your Rails installation.&lt;/p&gt;

&lt;h2 id=&quot;2-there-is-no-true-database-less-deploy-in-hatchbox&quot;&gt;2. There is No True Database Less Deploy in HatchBox&lt;/h2&gt;

&lt;p&gt;HatchBox is designed to work with a database (which is also the Rails default) because it calls database create and database migrate as part of the deploy.  The trick here is to use an existing database and set your env variables and database.yml to allow for this&lt;/p&gt;

&lt;p&gt;Here's how to set up your database.yml file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;production:
  adapter: postgresql
  url: &amp;lt;%= ENV['DATABASE_URL'] %&amp;gt;
  encoding: utf8
  pool: 50
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Your env variables are described in the section below.&lt;/p&gt;

&lt;p&gt;As long as you don't have migrations or database tables as part of your app, you can use any DATABASE_URL value (you set this below under environment variables; I just copied one from a different application).&lt;/p&gt;

&lt;h2 id=&quot;4-run-rails-credentialsedit&quot;&gt;4. Run rails credentials:edit&lt;/h2&gt;

&lt;p&gt;The command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails credentials:edit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;creates the Rails master key and secret key base that you need.&lt;/p&gt;

&lt;p&gt;You want to save your master key and secret key base because you need both in the env variables section.&lt;/p&gt;

&lt;h2 id=&quot;5-hatchbox-setup&quot;&gt;5. HatchBox Setup&lt;/h2&gt;

&lt;p&gt;You want to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add your app to github or another supported version control system and note the username/repo_name pairing&lt;/li&gt;
  &lt;li&gt;Create a new app&lt;/li&gt;
  &lt;li&gt;Choose the cluster&lt;/li&gt;
  &lt;li&gt;Add your env variables (see next section)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;6-set-your-env-variables-correctly&quot;&gt;6. Set Your Env Variables Correctly&lt;/h2&gt;

&lt;p&gt;Here are the env variables you want to set:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DATABASE_URL&lt;/li&gt;
  &lt;li&gt;RACK_ENV&lt;/li&gt;
  &lt;li&gt;RAILS_ENV&lt;/li&gt;
  &lt;li&gt;RAILS_MASTER_KEY&lt;/li&gt;
  &lt;li&gt;REDIS_URL&lt;/li&gt;
  &lt;li&gt;SECRET_KEY_BASE&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;7-do-a-deploy&quot;&gt;7. Do a Deploy&lt;/h2&gt;

&lt;p&gt;After you get everything setup you want to do a deploy.  This is necessary before you can do the SSL stuff.&lt;/p&gt;

&lt;h2 id=&quot;8-setup-your-domain&quot;&gt;8. Setup Your Domain&lt;/h2&gt;

&lt;p&gt;I added my domain to the Domains section of HatchBox both as the base domain and as the www variant.&lt;/p&gt;

&lt;h2 id=&quot;9--setup-ssl&quot;&gt;9.  Setup SSL&lt;/h2&gt;

&lt;p&gt;The next step is to select the SSL option and then turn on Let's Encrypt.&lt;/p&gt;

&lt;h2 id=&quot;10--deploy-and-verify&quot;&gt;10.  Deploy and Verify&lt;/h2&gt;

&lt;p&gt;There are two final steps.  At this point everything should be setup so you want to do a final deploy and then verify your site in https mode.&lt;/p&gt;

&lt;h2 id=&quot;11-turn-on-push-based-deploying&quot;&gt;11. Turn on Push Based Deploying&lt;/h2&gt;

&lt;p&gt;The absolute last step is to turn on git push based deploys so any code changes you make automatically trigger a deploy of your code.  HatchBox makes this brilliantly simple:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to your app's main page.&lt;/li&gt;
  &lt;li&gt;Click the Deploy menu item.&lt;/li&gt;
  &lt;li&gt;Click the Green Automatic Deploy button&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And then make a simple code change and push the code.  At that point a deploy will start automatically.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Sep 2020 09:22:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/09/14/deploying-to-hatchbox-with-rails-5-x.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/09/14/deploying-to-hatchbox-with-rails-5-x.html</guid>
        
        <category>rails</category>
        
        <category>deploy</category>
        
        <category>hatchbox</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When Postgres Won't Start</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9569.jpeg&quot; alt=&quot;IMG_9569.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TLDR&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Somehow my postgres installation was upgraded.&lt;/li&gt;
  &lt;li&gt;When postgres is upgraded its data is NOT upgraded.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This means postgres won't start BUT it will be a silent failure; you can only confirm this via the logs.&lt;/p&gt;

    &lt;p&gt;tail -n 10 /usr/local/var/log/postgres.log&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-long-version&quot;&gt;The Long Version&lt;/h2&gt;

&lt;p&gt;I went through a situation the other day where I would start and stop postgres and the database would NEVER be available for connection.&lt;/p&gt;

&lt;p&gt;Here is the error that I kept getting:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ psql
psql: error: could not connect to server: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket &quot;/tmp/.s.PGSQL.5432&quot;?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This blog posts lists all the commands I used for reference and how I fixed it:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services restart postgres
brew services stop postgres
brew services start postgres
rm -f /usr/local/var/postgres/postmaster.pid
brew uninstall postgresql
brew install postgresql
brew reinstall postgresql
brew upgrade postgres
ls -l /usr/local/var/postgres/postmaster.pid
ls -l /usr/local/var/postgres/
tail -n 10 /usr/local/var/log/postgres.log
brew postgresql-upgrade-database
tail -n 10 /usr/local/var/log/postgres.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As is always the case with this type of low level issue, the answer is ALWAYS IN THE DAMN LOGS and it is always the near to last command you use that finds it.  Here's what I found:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ tail -n 10 /usr/local/var/log/postgres.log
2020-09-10 16:17:49.566 EDT [85169] FATAL:  database files are incompatible with server
2020-09-10 16:17:49.566 EDT [85169] DETAIL:  The data directory was initialized by PostgreSQL version 11, which is not compatible with this version 12.4.
2020-09-10 16:17:59.589 EDT [85170] FATAL:  database files are incompatible with server
2020-09-10 16:17:59.589 EDT [85170] DETAIL:  The data directory was initialized by PostgreSQL version 11, which is not compatible with this version 12.4.
2020-09-10 16:18:09.617 EDT [85172] FATAL:  database files are incompatible with server
2020-09-10 16:18:09.617 EDT [85172] DETAIL:  The data directory was initialized by PostgreSQL version 11, which is not compatible with this version 12.4.
2020-09-10 16:18:19.643 EDT [85174] FATAL:  database files are incompatible with server
2020-09-10 16:18:19.643 EDT [85174] DETAIL:  The data directory was initialized by PostgreSQL version 11, which is not compatible with this version 12.4.
2020-09-10 16:18:29.671 EDT [85175] FATAL:  database files are incompatible with server
2020-09-10 16:18:29.671 EDT [85175] DETAIL:  The data directory was initialized by PostgreSQL version 11, which is not compatible with this version 12.4.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think what happened is at some point in the recent past a brew command upgraded postgres – I have no memory of doing this and nor can I find it in the command history but it must have happened.  The solution was to run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew postgresql-upgrade-database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that gave this output:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ brew postgresql-upgrade-database
==&amp;gt; brew install postgresql@11
==&amp;gt; Downloading https://homebrew.bintray.com/bottles/postgresql%4011-11.9.catalina.bottle.tar.gz
==&amp;gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/6ae4d48f4eb3af904ff8bb4a4cd6194500272847636261a049559059a312ac10?response-content-disposition=attachment%3Bfilename%3D%22postgresql%4011-11.9.catalina.bottle.
==&amp;gt; Pouring postgresql@11-11.9.catalina.bottle.tar.gz
==&amp;gt; /usr/local/Cellar/postgresql@11/11.9/bin/initdb --locale=C -E UTF-8 /usr/local/var/postgresql@11
==&amp;gt; Caveats
To migrate existing data from a previous major version of PostgreSQL run:
  brew postgresql-upgrade-database

This formula has created a default database cluster with:
  initdb --locale=C -E UTF-8 /usr/local/var/postgres
For more details, read:
  https://www.postgresql.org/docs/11/app-initdb.html

postgresql@11 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have postgresql@11 first in your PATH run:
  echo 'export PATH=&quot;/usr/local/opt/postgresql@11/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.zshrc

For compilers to find postgresql@11 you may need to set:
  export LDFLAGS=&quot;-L/usr/local/opt/postgresql@11/lib&quot;
  export CPPFLAGS=&quot;-I/usr/local/opt/postgresql@11/include&quot;

For pkg-config to find postgresql@11 you may need to set:
  export PKG_CONFIG_PATH=&quot;/usr/local/opt/postgresql@11/lib/pkgconfig&quot;


To have launchd start postgresql@11 now and restart at login:
  brew services start postgresql@11
Or, if you don't want/need a background service you can just run:
  pg_ctl -D /usr/local/var/postgresql@11 start
==&amp;gt; Summary
🍺  /usr/local/Cellar/postgresql@11/11.9: 3,197 files, 36.6MB
==&amp;gt; Upgrading postgresql data from 11 to 12...
waiting for server to start....2020-09-10 16:20:44.104 EDT [85963] LOG:  listening on IPv6 address &quot;::1&quot;, port 5432
2020-09-10 16:20:44.104 EDT [85963] LOG:  listening on IPv4 address &quot;127.0.0.1&quot;, port 5432
2020-09-10 16:20:44.105 EDT [85963] LOG:  listening on Unix socket &quot;/tmp/.s.PGSQL.5432&quot;
2020-09-10 16:20:44.202 EDT [85964] LOG:  database system was interrupted; last known up at 2020-07-13 13:22:20 EDT
.2020-09-10 16:20:45.519 EDT [85964] LOG:  database system was not properly shut down; automatic recovery in progress
2020-09-10 16:20:45.537 EDT [85964] LOG:  redo starts at 0/AA216798
2020-09-10 16:20:45.537 EDT [85964] LOG:  invalid record length at 0/AA2167D0: wanted 24, got 0
2020-09-10 16:20:45.537 EDT [85964] LOG:  redo done at 0/AA216798
2020-09-10 16:20:45.572 EDT [85963] LOG:  database system is ready to accept connections
 done
server started
waiting for server to shut down....2020-09-10 16:20:45.839 EDT [85963] LOG:  received fast shutdown request
2020-09-10 16:20:45.839 EDT [85963] LOG:  aborting any active transactions
2020-09-10 16:20:45.840 EDT [85963] LOG:  background worker &quot;logical replication launcher&quot; (PID 85970) exited with exit code 1
2020-09-10 16:20:45.840 EDT [85965] LOG:  shutting down
2020-09-10 16:20:45.845 EDT [85963] LOG:  database system is shut down
 done
server stopped
==&amp;gt; Moving postgresql data from /usr/local/var/postgres to /usr/local/var/postgres.old...
==&amp;gt; Creating database...
The files belonging to this database system will be owned by user &quot;sjohnson&quot;.
This user must also own the server process.

The database cluster will be initialized with locale &quot;en_US.UTF-8&quot;.
The default text search configuration will be set to &quot;english&quot;.

Data page checksums are disabled.

fixing permissions on existing directory /usr/local/var/postgres ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... posix
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting default time zone ... America/Indiana/Indianapolis
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

initdb: warning: enabling &quot;trust&quot; authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    /usr/local/opt/postgresql/bin/pg_ctl -D /usr/local/var/postgres -l logfile start

==&amp;gt; Migrating and upgrading data...
Performing Consistency Checks
-----------------------------
Checking cluster versions                                   ok
Checking database user is the install user                  ok
Checking database connection settings                       ok
Checking for prepared transactions                          ok
Checking for reg* data types in user tables                 ok
Checking for contrib/isn with bigint-passing mismatch       ok
Checking for tables WITH OIDS                               ok
Checking for invalid &quot;sql_identifier&quot; user columns          ok
Creating dump of global objects                             ok
Creating dump of database schemas
                                                            ok
Checking for presence of required libraries                 ok
Checking database user is the install user                  ok
Checking for prepared transactions                          ok

If pg_upgrade fails after this point, you must re-initdb the
new cluster before continuing.

Performing Upgrade
------------------
Analyzing all rows in the new cluster                       ok
Freezing all rows in the new cluster                        ok
Deleting files from new pg_xact                             ok
Copying old pg_xact to new server                           ok
Setting next transaction ID and epoch for new cluster       ok
Deleting files from new pg_multixact/offsets                ok
Copying old pg_multixact/offsets to new server              ok
Deleting files from new pg_multixact/members                ok
Copying old pg_multixact/members to new server              ok
Setting next multixact ID and offset for new cluster        ok
Resetting WAL archives                                      ok
Setting frozenxid and minmxid counters in new cluster       ok
Restoring global objects in the new cluster                 ok
Restoring database schemas in the new cluster
                                                            ok
Copying user relation files
                                                            ok
Setting next OID for new cluster                            ok
Sync data directory to disk                                 ok
Creating script to analyze new cluster                      ok
Creating script to delete old cluster                       ok

Upgrade Complete
----------------
Optimizer statistics are not transferred by pg_upgrade so,
once you start the new server, consider running:
    ./analyze_new_cluster.sh

Running this script will delete the old cluster's data files:
    ./delete_old_cluster.sh
==&amp;gt; Upgraded postgresql data from 11 to 12!
==&amp;gt; Your postgresql 11 data remains at /usr/local/var/postgres.old
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now, finally, Here is how the logs should actually look:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ tail -n 10 /usr/local/var/log/postgres.log
2020-09-10 16:22:52.819 EDT [86729] LOG:  received smart shutdown request
2020-09-10 16:22:52.820 EDT [86729] LOG:  background worker &quot;logical replication launcher&quot; (PID 86736) exited with exit code 1
2020-09-10 16:22:52.820 EDT [86731] LOG:  shutting down
2020-09-10 16:22:52.888 EDT [86729] LOG:  database system is shut down
2020-09-10 16:23:27.451 EDT [87278] LOG:  starting PostgreSQL 12.4 on x86_64-apple-darwin19.5.0, compiled by Apple clang version 11.0.3 (clang-1103.0.32.62), 64-bit
2020-09-10 16:23:27.452 EDT [87278] LOG:  listening on IPv6 address &quot;::1&quot;, port 5432
2020-09-10 16:23:27.452 EDT [87278] LOG:  listening on IPv4 address &quot;127.0.0.1&quot;, port 5432
2020-09-10 16:23:27.453 EDT [87278] LOG:  listening on Unix socket &quot;/tmp/.s.PGSQL.5432&quot;
2020-09-10 16:23:27.477 EDT [87307] LOG:  database system was shut down at 2020-09-10 16:22:52 EDT
2020-09-10 16:23:27.481 EDT [87278] LOG:  database system is ready to accept connections
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/39710384/cannot-connect-to-postgres-server-running-through-brew-services&quot;&gt;Stack Overflow 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/37307346/is-the-server-running-on-host-localhost-1-and-accepting-tcp-ip-connections&quot;&gt;Stack Overflow 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/21488778/library-not-loaded-usr-local-opt-readline-lib-libreadline-6-2-dylib&quot;&gt;Stack Overflow 3 - Readline&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/54261455/library-not-loaded-usr-local-opt-readline-lib-libreadline-7-dylib&quot;&gt;Stack Overflow 4 - Readline and HomeBrew&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/39710384/cannot-connect-to-postgres-server-running-through-brew-services&quot;&gt;Stack Overflow 5 - Brew Services and Postgres&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/17822974/postgres-fatal-database-files-are-incompatible-with-server&quot;&gt;Stack Overflow 6 - Postgres and Mac OSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 12 Sep 2020 07:05:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/09/12/when-postgres-won-t-start.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/09/12/when-postgres-won-t-start.html</guid>
        
        <category>postgres</category>
        
        <category>sysadmin</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Converting a Ruby Class Library to a Gem</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01247.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Updated on 2022-06-04 to reflect experience with actually maintaining these gems.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_4795.jpeg&quot; alt=&quot;IMG_4795.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This blog post talks about my experiences converting a handful of Ruby class libraries to gems.  As do a lot of software engineers, I have a series of routines that I bring into almost every Ruby project I tackle that deal with what I consider core stuff you always need: url handling, database stuff, time parsing and so on.  Normally I just copy these from project to project but the sheer plethora of them has recently made me see the need to go down the gem route:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ mdfind -name url_common.rb | wc -l 
      62
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All of these files are named *common.rb so you will see a number of these on my Github page.  I don't claim that any of them are particularly wonderful, brilliant, complete or even well coded; I simply find them useful.&lt;/p&gt;

&lt;p&gt;In order to figure out which was the right version of the 62 different files I found above, I wrote a separate blog post about using mdfind.&lt;/p&gt;

&lt;h2 id=&quot;the-how&quot;&gt;The How&lt;/h2&gt;

&lt;p&gt;Here is the quick tldr of how to build a gem.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a gems directory where you can group all the gems you have.  Once you have one, I suspect you're going to have many.&lt;/li&gt;
  &lt;li&gt;Change into that gems directory.&lt;/li&gt;
  &lt;li&gt;Create a repo for the gem and clone it locally.&lt;/li&gt;
  &lt;li&gt;Change into the repo you just cloned.&lt;/li&gt;
  &lt;li&gt;Do a gem signin&lt;/li&gt;
  &lt;li&gt;Do a bundle gem project_name&lt;/li&gt;
  &lt;li&gt;Edit project_name/project_name.gemspec - THIS NEEDS TO HAVE RELEASE LEVEL DEPENDENCIES&lt;/li&gt;
  &lt;li&gt;Update your Gemfile with any dependencies - THIS NEEDS TO HAVE BOTH DEVELOPMENT LEVEL AND RELEASE LEVEL DEPENDENCIES&lt;/li&gt;
  &lt;li&gt;Change into project_name&lt;/li&gt;
  &lt;li&gt;Do a bundle install&lt;/li&gt;
  &lt;li&gt;Do a bundle exec rake build; this gives you the pkg/* stuff below (see next command).&lt;/li&gt;
  &lt;li&gt;Do a gem push  pkg/url_common-0.1.0.gem&lt;/li&gt;
  &lt;li&gt;Oh and write the code and the tests.  This exists within the lib directory structure.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;tips-and-tricks&quot;&gt;Tips and Tricks&lt;/h2&gt;

&lt;h3 id=&quot;1-change-into-the-project_namelib-directory-to-run-bundle-install&quot;&gt;1. Change into the project_name/lib Directory to Run bundle install&lt;/h3&gt;

&lt;p&gt;My first attempt at following the directions gave me this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle install
Could not locate Gemfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the easy solution was to change into the project_name/lib directory. So:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd url_common/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yep.  I was an idiot for not realizing this.  Sigh.&lt;/p&gt;

&lt;h3 id=&quot;2-change-into-the-project_namelib-directory-to-run-bundle-exec-rake-build&quot;&gt;2. Change into the project_name/lib Directory to Run bundle exec rake build&lt;/h3&gt;

&lt;p&gt;Similar to 1 above, my attempt to run bundle exec rake build gave me this failure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rake build
Could not locate Gemfile or .bundle/ directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Again.  I was an idiot.  And, again, same solution – change to the right directory.&lt;/p&gt;

&lt;h3 id=&quot;3-use-irb-for-debugging&quot;&gt;3. Use irb for Debugging&lt;/h3&gt;

&lt;p&gt;In order to debug the gem you are building:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Change into the project_name/lib directory&lt;/li&gt;
  &lt;li&gt;run irb&lt;/li&gt;
  &lt;li&gt;require your gem i.e. require 'url_common'&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And now you can execute commands from your gem like:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;UrlCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-if-you-have-a-class-library-then-you-dont-need-class-project_name&quot;&gt;4. If You Have a Class Library then You Don't Need class project_name&lt;/h3&gt;

&lt;p&gt;My prior class libraries were all structured like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectName&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That now becomes something like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;url_common/version&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'any_gem_you_need'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UrlCommon&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;StandardError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Given that modules provide a namespace just as a class does and the . syntax invokes methods uniformly, this lets you invoke your &quot;class methods&quot; the same way you did when they were actually class methods.&lt;/p&gt;

&lt;h3 id=&quot;5-the-try-method-is-a-rails-thing-not-a-ruby-thing&quot;&gt;5. The .try Method is a Rails Thing Not a Ruby Thing&lt;/h3&gt;

&lt;p&gt;Even though I like the semantic clarity of .try(:method_symbol), you can use &amp;amp;.method_name instead:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#return parts.hostname.sub(/^www\./, '') + parts.try(:path) + '?' + parts.query &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^www\./&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'?'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;query&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a &lt;a href=&quot;https://medium.com/@CohenCarlisle/why-you-shouldnt-be-using-rails-try-for-nil-safe-navigation-in-ruby-d3123a3965ac&quot;&gt;Ruby 2.3&lt;/a&gt; change so it should be available to everyone by now.&lt;/p&gt;

&lt;h3 id=&quot;6-within-your-gem-you-cant-reference-the-namespace&quot;&gt;6. Within Your Gem You Can't Reference the Namespace&lt;/h3&gt;

&lt;p&gt;I hit this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) UrlCommon.url_base should return the url base w/o the www
   Failure/Error: base_domain = UrlCommon.get_base_domain(url)

   NoMethodError:
     undefined method `get_base_domain' for UrlCommon::UrlCommon:Class
   # ./lib/url_common.rb:84:in `url_base'
   # ./spec/url_common_spec.rb:97:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This came from this line of code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url_base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UrlCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_base_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and the fix turned out to be:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url_base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_base_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;despite there being a def self.get_base_domain method defined in the module.  &lt;strong&gt;Shrug&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;gems-for-development-versus-gems-for-deployment&quot;&gt;Gems for Development versus Gems for Deployment&lt;/h2&gt;

&lt;p&gt;When you develop a gem, it needs gems for development which are located in Gemfile.  The same gems also need to go into the gem_name.gemspec file.  So, for example, I have a file called:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url_common.gemspec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which has lines like these:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spec.add_dependency 'fuzzyurl', '~&amp;gt; 0.9.0'
spec.add_dependency 'mechanize', '~&amp;gt; 2.6'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This allows you have say byebug in your main Gemfile for debugging but NOT have that be released with your gem.&lt;/p&gt;

&lt;h2 id=&quot;the-release-process---example&quot;&gt;The Release Process - Example&lt;/h2&gt;

&lt;p&gt;The first step is to update the version.rb file to reflect a new version number.  Please note that for a new release to be made, there &lt;strong&gt;must be&lt;/strong&gt; a new version number.&lt;/p&gt;

&lt;p&gt;I work on the url_common gem in this directory:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/sjohnson/Sync/coding/gems/url_common/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to do a release:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/gems/url_common/url_common
bundle exec rake build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will then see output like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url_common 0.1.1 built to pkg/url_common-0.1.1.gem.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you release it as:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem push pkg/url_common-0.1.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's the really important part:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;After you do a gem push, set a 3 minute timer on your phone&lt;/li&gt;
  &lt;li&gt;When it goes off, change to an app using your gem&lt;/li&gt;
  &lt;li&gt;Do a bundle update&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It normally takes a bit for the Ruby Gems site to recognize an update.  The timer helps you remember to check.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I haven't tried to build a gem in &lt;strong&gt;years&lt;/strong&gt;.  Building a gem is substantially easier in 2020 than it was circa 2007 - 2009.  Kudos to the entire Ruby tooling team.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;

&lt;p&gt;See these sources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sitepoint.com/creating-your-first-gem/&quot;&gt;SitePoint (good but dated)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/aryaziai/how-to-create-a-ruby-gem-9m2&quot;&gt;Dev.to (EXCELLENT)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems (you will need an account)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bundler.io/guides/creating_gem.html&quot;&gt;Bundler.io (EXCELLENT)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fuzzygroup/url_common/tree/master&quot;&gt;My First Gem – url_common&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/url_common&quot;&gt;My First Gem – url_common – on RubyGems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/30118627/how-do-i-add-a-dependency-to-a-private-gem-in-gemspec&quot;&gt;Gem Dependencies and Gem Spec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 12 Aug 2020 01:48:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/08/12/converting-a-ruby-class-library-to-a-gem.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/08/12/converting-a-ruby-class-library-to-a-gem.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>A Shorty But a Goody, Sorting mdfind Results by Date or Size</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9390.jpeg&quot; alt=&quot;IMG_9390.jpeg&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;mdfind is an OSX  executable which taps into the underlying spotlight index to find files quickly.  However if you want to quickly sort results you need to pipe its output (the&lt;/td&gt;
      &lt;td&gt;symbol i.e. shift key + forward slash) into another program.  The program we are going to send its results to is xargs which then handles integrating the results from mdfind with another command and organizing the results.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I regard xargs as &quot;Unix Dark Magic&quot;; I've never fully understood it but it is one of those things that when I need a powerful command line incantation, I tend to think &quot;Hm…. Needs Me Some xargs Here&quot;.&lt;/p&gt;

&lt;h2 id=&quot;sorting-by-file-date&quot;&gt;Sorting by File Date&lt;/h2&gt;

&lt;p&gt;To sort files by name, make a variant of this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind -name url_common.rb -0 | xargs -0 ls -lt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sorting-by-file-size&quot;&gt;Sorting by File Size&lt;/h2&gt;

&lt;p&gt;To sort files by file size, make a variant of this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind -name url_common.rb -0 | xargs -0 du -hc | sort -g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This one is interesting because it pipes from mdfind to xargs running du -hc and then to sort.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://discussions.apple.com/thread/3890518&quot;&gt;Apple.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hacksformacs.wordpress.com/2015/01/12/spotlight-on-the-command-line-part-1-introducing-mdfind-and-xargs/&quot;&gt;Hacks for Macs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 12 Aug 2020 01:48:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/08/12/a-shorty-but-a-goody-sorting-mdfind-results-by-date.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/08/12/a-shorty-but-a-goody-sorting-mdfind-results-by-date.html</guid>
        
        <category>osx</category>
        
        <category>mdfind</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>An Email to a Fellow Founder Regarding a Possible Acquihire</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3738.jpeg&quot; alt=&quot;IMG_3738.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I received this email a few moments ago and, having just left my job in the past 24 hours, I had the head space to respond in a way that I hope was helpful.&lt;/p&gt;

&lt;p&gt;The email:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello,
I saw your post on y combinator to a founder who was being acquihired and wanted advice. 
I am currently at the point where we are starting serious heads of terms for an acquihire 
of my 4 man business to a major XYZ company and could use a little advice. In particular, 
the terms they are offering for the deal seem a bit worse than my last time I was in a 
startup that was acquired, but in that instance I was not a founder.  We are considering 
hiring a 3rd party tax expert with lots of m&amp;amp;a experience to handle the negotiation for 
about $30k. Does that make sense?

The deal is around 4 to 4.6 million, and due to the large equity stake and potential for leadership 
it sounds good, but they are framing the retention as a minimum bonus which sounds a bit off.  

Thank you for taking the time to read this rather out of the blue email  - any tips would really help me out!

Thanks,
Some Person On the Internet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here was my response:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Terms being worse.  Well the world is kind of in free fall right now so, honestly, that doesn't surprise me.&lt;/li&gt;
  &lt;li&gt;Are you profitable?  Do you have any revenues?&lt;/li&gt;
  &lt;li&gt;Why do they want to buy you?  Understanding this may give you better negotiation leverage.&lt;/li&gt;
  &lt;li&gt;Are you US based or International?  I understand little about taxes in general and less so outside the U.S.&lt;/li&gt;
  &lt;li&gt;Is the compensation stock, options, cash or something else?&lt;/li&gt;
  &lt;li&gt;Is there any cash component to the deal?  If not then I'd strongly argue for getting some damn cash.  Equity can amount to funny money and there are lots of ways that you can be screwed over via equity (example; dilution).  Personally I'd look for an amount of cash which is meaningful to you personally and represents some percentage of the deal.  If the deal is for 2 million and you have 2 founders then $200,000 is only 10% and represents $100,000 each.  Usually a $100,000 makes some bit of difference in your life (down payment on a house, pay off debt, new car free and clear).  Get something that is absolutely concrete out of the deal.  When I was pushed out of Feedster, my blog search startup, I walked away with $30,000 which was damn little for the work I put in but gave my wife and I a nice down payment on a house I lived in for the next 10 years.  Again get something &lt;strong&gt;absolutely concrete&lt;/strong&gt; from the deal and cash is concrete; no one can cheat you out of it once it is in your hands.&lt;/li&gt;
  &lt;li&gt;Is the company buying you public or private?  If they aren't public then that equity may not ever matter.&lt;/li&gt;
  &lt;li&gt;Is the compensation up front or earned over time?  If so, how long?&lt;/li&gt;
  &lt;li&gt;Do you like the people buying you?  How much time have you spent with them?  You are contemplating what amounts to a long term marriage and my guess is that you've barely dated (strongly consider this analogy).&lt;/li&gt;
  &lt;li&gt;In my experience there is a STRONG likelihood you won't last (most founders tend not to).  If you walk out do you stay compensated? i.e. options go the hell away when you walk; stock doesn't.  I was forced out of the first company I sold to (an acquihire in today's vernacular) and I had 72,000 odd stock options at a low strike price.  Over the course of the next year that stock when up $10 a share and I've always regarded that event as something that cost me almost a million dollars.  These things really do happen.&lt;/li&gt;
  &lt;li&gt;Get references on the tax expert.  30K is, 1.5% of the deal?  That seems pretty reasonable.  You can easily lose more than that in a tax bill.  Make sure the expert is loyal to you and not the acquirer,&lt;/li&gt;
  &lt;li&gt;Find another founder they bought out – NOT a reference they gave you – and talk to them.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 01 Aug 2020 01:48:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/08/01/an-email-to-a-fellow-founder-regarding-a-possible-acquihire.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/08/01/an-email-to-a-fellow-founder-regarding-a-possible-acquihire.html</guid>
        
        <category>startup</category>
        
        <category>acquisition</category>
        
        <category>acquihire</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>The Complete Idiot's Guide to Refactoring Python Using Multiprocessing Pools</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/cloudy_drive.jpg&quot; alt=&quot;cloudy_drive.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While I would happily proclaim that my &lt;strong&gt;ur language&lt;/strong&gt; is Ruby, I spend increasingly large amounts of time these days using Python.  And while there are many things that I don't like about Python (the syntax makes my eyes want to weep and then die; thanks &lt;a href=&quot;https://www.youtube.com/watch?v=SZGEiz2cpEw&quot;&gt;Tim Curry / Psych&lt;/a&gt;; around 20 seconds in), the strength of the Python ecosystem is &lt;strong&gt;outstanding&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Today I'm going to talk about the &lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;Python Multiprocessing&lt;/a&gt; library which is a standard part of Python and can be used without even needing to install anything.  And this isn't going to be a theoretical explanation of processes / threads / parallelism.  Instead it is going to be a simple explanation about how my favorite Python guru taught me to love the zen of multiprocessing with a very specific example.  But we do need a few basics:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Python you want to use processes not threads.  The reason for this is the infamous GIL issue which &lt;a href=&quot;https://realpython.com/python-gil/&quot;&gt;Real Python&lt;/a&gt; does a great job discussing so I'm just not going to get into it.&lt;/li&gt;
  &lt;li&gt;Unless your python processes are heavily IO bound (example – calling networked APIs), you generally want to use a pool of processes tied to your CPU / Core count.  Happily this is astonishingly trivial as the multiprocessing library gives you multiprocessing.cpu_count() as a core primitive.  Please note that I recognize that I have vastly oversimplified this issue and that many people argue for number of cores - 1.  As with all complex computing issues, well, ymmv.&lt;/li&gt;
  &lt;li&gt;Debugging parallel software is always harder than you think it is so I only, ever, do this at the end of project when I &lt;strong&gt;know&lt;/strong&gt; that my code works and where the bottlenecks are (i.e. is it IO bound for example).&lt;/li&gt;
  &lt;li&gt;Consistency of coding practices makes a huge difference.  In the code base I just left, I was able to transition all of it to a multiprocessing architecture trivially because I had invested heavily in consistency.&lt;/li&gt;
  &lt;li&gt;Your deployment tooling makes a huge difference.  If you want to experiment with multiprocessing then you need the ability to change your instance type / number of cores and benchmark to know that you are spending your money wisely.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;before&quot;&gt;Before&lt;/h2&gt;

&lt;p&gt;Before I implemented multiprocessing, I had an architecture across my data pipeline that looked like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;foo&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bar&lt;/span&gt; 

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# do the thing
&lt;/span&gt;    
    &lt;span class=&quot;c1&quot;&gt;# do more things
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;after&quot;&gt;After&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;foo&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bar&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiprocessing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpu_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do_main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# do the thing
&lt;/span&gt;    
    &lt;span class=&quot;c1&quot;&gt;# do more things
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, do_main is just a rewrite of main() under a different name so it can be called by pool.apply_async().  All I did for this rewrite was:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Import the multiprocessing library.&lt;/li&gt;
  &lt;li&gt;Create a new def main() as per the above.&lt;/li&gt;
  &lt;li&gt;Rename my former def main() to def do_main().&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank You&lt;/h2&gt;

&lt;p&gt;I would be remiss without thanking my former colleague Grant for his assistance with this refactor.  It is tremendously easy to go wrong with multiprocessing and he set me straight a number of times.  Thanks Grant!&lt;/p&gt;

&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;

&lt;p&gt;The example above isn't doing anything to capture output from the do_main() method.  The reason for this, is that for my use case, I was implementing a data pipeline where my main() method was simply doing work and advancing stuff across the pipeline from SQS bucket to SQS bucket.  If you want to capture output from a do_main() routine then that can be done by reading the documentation for apply_async.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://realpython.com/python-gil/&quot;&gt;The GIL Issue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;Python Multiprocessing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html#using-a-pool-of-workers&quot;&gt;Using a Pool of Workers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8533318/multiprocessing-pool-when-to-use-apply-apply-async-or-map&quot;&gt;When to Use apply_async versus map&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/39773377/python-multiprocessing-check-status-of-each-processes&quot;&gt;Checking the State of a Process&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/20039659/python-multiprocessings-pool-process-limit&quot;&gt;Pool Process Limits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1006289/how-to-find-out-the-number-of-cpus-using-python&quot;&gt;Number of CPUs using Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pythonspeed.com/articles/python-multiprocessing/&quot;&gt;The Shark Approach to Multiprocessing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 31 Jul 2020 01:48:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/07/31/the-complete-idiot-s-guide-to-refactoring-python-using-multiprocessing-pools.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/07/31/the-complete-idiot-s-guide-to-refactoring-python-using-multiprocessing-pools.html</guid>
        
        <category>python</category>
        
        <category>scalability</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Docker Madness - When The Output Order of Debugging Seems Impossible</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3775.jpeg&quot; alt=&quot;IMG_3775.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yesterday I was stuck in a hellish debugging cesspool – you know what I mean – when you are debugging a mysterious crash right down embedding line by line print statements and nothing is making sense.  And I don't mean that its not making a lot of sense; I mean that its making NO DAMN SENSE.  I was debugging on a GPU instance on AWS that was running a TensorFlow application and what I kept seeing was output appearing before the routine invoking it was executing.  And this was a worst case scenario right down to the very first line of my Python code being:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AT START&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happily I was pairing with my colleague Grant and he did that wonderful pairing step of &quot;this makes no damn sense; let me apply my Google Fu to this&quot; and he discovered that Docker buffers output at times and he recommend this change to the Dockerfile:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rest of Dockerfile appears here
CMD [ &quot;python3&quot;, &quot;./main.py&quot; ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rest of Dockerfile appears here
CMD [ &quot;python3&quot;, &quot;-u&quot;, &quot;./main.py&quot; ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the relevant &lt;a href=&quot;https://stackoverflow.com/questions/29663459/python-app-does-not-print-anything-when-running-detached-in-docker&quot;&gt;Stack Overflow post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you Grant!&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2020/07/31/docker-madness-when-the-output-order-of-debugging-seems-impossible.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2020/07/31/docker-madness-when-the-output-order-of-debugging-seems-impossible.html</guid>
        
        <category>docker</category>
        
        <category>python</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Coding with Python Dictionaries the Ruby Way With Respect to Missing Keys</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3776.jpeg&quot; alt=&quot;IMG_3776.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had an interesting experience with Python dictionaries that made question one of Python's foundational principles i.e. TOOWTDI:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There should be one– and preferably only one –obvious way to do it.  Although that way may not be obvious at first unless you're Dutch.  &lt;a href=&quot;https://wiki.python.org/moin/TOOWTDI&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The application was a large scale JSON processor and, in Python, JSONs are mapped to Python dictionaries which correspond to Ruby hashes.  The issue is how you handle keys that don't exist.  Here's the Ruby way:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;blah&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's the Python way:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blah&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blah'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At the heart of things is whether or not a non-existent key causes an exception to be thrown.  I look at this from the cultural perspective of the language's creators.&lt;/p&gt;

&lt;p&gt;Ruby says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Oh hell no; good heavens why would a non existent key cause an error.  We're Japanese at our heart and tossing an exception for this feels, well, ahem, rude.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While Python says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Absolutely a missing key must translate to an exception; we are Dutch after all!&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The interesting thing here is that despite the foundational principle of TOOWTDI, Python offers a way to emulate Ruby's default behavior – the .get() syntax.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bar&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blah&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blah&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My vastly more Pythonic co-worker, Grant, gave me this explanation when I raised this issue in our team Slack:&lt;/p&gt;

&lt;p&gt;@sjohnson You can make Python dicts return None if the key doesn't exist by using the .get class function instead of the square-brackets key notation. So if d is your dictionary, you can use d.get(key) instead of d[key]. The latter will throw a KeyError if the key doesn't exist, whereas the former will just return a null value.&lt;/p&gt;

&lt;p&gt;Thanks Grant!&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/07/26/coding-with-python-dictionaries-the-ruby-way-with-respect-to-missing-keys.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/07/26/coding-with-python-dictionaries-the-ruby-way-with-respect-to-missing-keys.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Stupid Docker Tricks - Validating Outbound Connectivity from an Image</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3737.jpeg&quot; alt=&quot;IMG_3737.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had the odd situation where it seemed like I had outbound Internet connectivity issues under Ruby powered by Docker but not with Python powered by Docker.&lt;/p&gt;

&lt;p&gt;Here's how I disproved this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it ruby:2.7.1 ping google.com
64 bytes from ord30s26-in-f238.1e100.net (216.58.192.238): icmp_seq=1 ttl=37 time=15.2 ms
64 bytes from ord30s26-in-f238.1e100.net (216.58.192.238): icmp_seq=2 ttl=37 time=15.5 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it python:3.7.2 ping google.com
64 bytes from ord30s26-in-f238.1e100.net (216.58.192.238): icmp_seq=1 ttl=37 time=21.9 ms
64 bytes from ord30s26-in-f238.1e100.net (216.58.192.238): icmp_seq=2 ttl=37 time=31.3 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The docker run command starts up an image.  The -it option opens an interactive terminal underneath it and giving it a command like 'ping google.com' runs that in the terminal.&lt;/p&gt;

&lt;p&gt;One of the things that this Docker trick makes exceptionally easy is testing different versions of languages.  Here's an example for Ruby:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it ruby:2.7.1 /bin/bash
root@4460a9daddff:/# ruby --version
ruby 2.7.1p83 (2020-03-31 revision a0c7c23c9c) [x86_64-linux]
root@4460a9daddff:/# irb
irb(main):001:0&amp;gt; puts &quot;Hello World&quot;
Hello World
=&amp;gt; nil
irb(main):002:0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And for Python:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it python:3.7.2 /bin/bash
root@3fe135f566bb:/# python --version
Python 3.7.2
root@3fe135f566bb:/# python
Python 3.7.2 (default, Mar 27 2019, 08:41:08) 
[GCC 6.3.0 20170516] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; print(&quot;Hello World&quot;)
Hello World
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credit for this goes to my friend and Docker Guru / Docker Captain, &lt;a href=&quot;https://nickjanetakis.com/&quot;&gt;Nick Janetakis&lt;/a&gt;.  Nick teaches Docker online and I highly recommend his stuff.&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2020/07/25/stupid-docker-tricks-validating-outbound-connectivity-from-an-image.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2020/07/25/stupid-docker-tricks-validating-outbound-connectivity-from-an-image.html</guid>
        
        <category>docker</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>An Engineering Anti Pattern - New Code Being Written During an Engineer's Final Days</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3794.jpeg&quot; alt=&quot;IMG_3794.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am currently involved in leaving a gig where I've been for a year now and I find myself breaking one of my fundamental engineering beliefs, in effect, engaging in an &lt;strong&gt;anti-pattern&lt;/strong&gt;.  If a pattern is what you should do for something then an anti-pattern is what you &lt;strong&gt;should not do&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The anti-pattern I find myself engaging in is really, really simple;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am writing all new code in my last two weeks of work.  Not fixing bugs or doing clean up; writing something new from scratch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am a firm believer that once an engineer turns in his notice, here is what they should be doing:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Documentation.&lt;/li&gt;
  &lt;li&gt;Clean up.&lt;/li&gt;
  &lt;li&gt;Pair programming but not as the dominant party.&lt;/li&gt;
  &lt;li&gt;Making screen casts showcasing how they do specific development practices such as debugging.&lt;/li&gt;
  &lt;li&gt;Answering questions from other people on the team.&lt;/li&gt;
  &lt;li&gt;Helping other engineers write test coverage on their work.&lt;/li&gt;
  &lt;li&gt;Writing more documentation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of these things fall into the general category &lt;em&gt;knowledge transfer&lt;/em&gt; and that's what an engineer should be doing in their final days.  If new code is needed then, well, pair program on it with the departing engineer a part of the process.  When a departing engineer writes new code in their last couple of weeks, all it does is almost guarantee that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Knowledge transfer will be neglected since we'd all rather write code than documentation&lt;/li&gt;
  &lt;li&gt;Any knowledge that needs to be transferred about the new code simply won't be transferred because almost all software engineering expands to fit the time available&lt;/li&gt;
  &lt;li&gt;Given the time crunch, since the engineer in question is leaving, there's a decent chance that the new code they write won't actually be fully done&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 25 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2020/07/25/an-engineering-anti-pattern-new-code-being-written-during-an-engineer-s-final-days.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2020/07/25/an-engineering-anti-pattern-new-code-being-written-during-an-engineer-s-final-days.html</guid>
        
        <category>software_engineering</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>When You Can't Ping, You Dig</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3737.jpeg&quot; alt=&quot;IMG_3737.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Normally when I'm trying to validate that an Internet service is available, well, I &lt;strong&gt;ping&lt;/strong&gt;.  Ping is one of those Internet bedrock protocols that I'm firmly in the camp of &quot;SHOULD ALWAYS, ALWAYS, ALWAYS BE TURNED ON&quot;.  But there are ping flooding attacks, etc so there are reasons why it isn't always a default (looking at you here AWS; staring you dead in the eyes with the 'ol stink eye).  I recently realized that while it isn't example the same, if you're trying to validate something's address (as opposed to knowing if it is actually up), you can actually use &lt;strong&gt;dig&lt;/strong&gt;.  So instead of:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ping foo.bar.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;try:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dig foo.bar.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/07/22/when-you-can-t-ping-you-dig.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/07/22/when-you-can-t-ping-you-dig.html</guid>
        
        <category>aws</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>So That One Time You Played with Docker</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08943.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So that one time, at band camp – wait; wrong movie, this is a technical blog post about Docker …&lt;/p&gt;

&lt;p&gt;I recently helped a friend doing some federal work in the medical field get a better understanding of Docker and how Docker can mess about with open source licensing.  We got up a &quot;open source&quot; stack of tooling using a bunch of heavy weight tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mongo&lt;/li&gt;
  &lt;li&gt;Memcached&lt;/li&gt;
  &lt;li&gt;A big Python app&lt;/li&gt;
  &lt;li&gt;Rabbit MQ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then, as you so often do, we finished up and I got distracted by the next bit of crazy nerd-fu that runs about in my life (server down; wifi crisis; son needing help with his PC; who can remember) and then I went back to my desk, closed my terminal prompt and never thought much more about this.&lt;/p&gt;

&lt;p&gt;Lately I've been noticing some slowness on my machine and I just happened to run &lt;strong&gt;docker ps&lt;/strong&gt; and what do I see but:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps
CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                                                 NAMES
b93fbedc58d2        data_streamer_to_sqs_ruby     &quot;ruby ./main.rb&quot;         29 seconds ago      Up 27 seconds                                                             nice_torvalds
605da7fe5159        dsarchive/dsa_girder:latest   &quot;/bin/sh -c 'sudo -E…&quot;   2 weeks ago         Up 3 hours          0.0.0.0:8080-&amp;gt;8080/tcp                                dsa_girder
0b0eb7730fb0        dsarchive/dsa_worker:latest   &quot;/bin/sh -c 'sudo -E…&quot;   2 weeks ago         Up 3 hours                                                                dsa_worker
df6fd902c11b        memcached:latest              &quot;docker-entrypoint.s…&quot;   2 weeks ago         Up 3 hours          11211/tcp                                             dsa_memcached
dc7f57778b4e        mongo:latest                  &quot;docker-entrypoint.s…&quot;   2 weeks ago         Up 3 hours          27017/tcp                                             dsa_mongodb
863768f4f33f        rabbitmq:management           &quot;docker-entrypoint.s…&quot;   2 weeks ago         Up 3 hours          4369/tcp, 5671-5672/tcp, 15671-15672/tcp, 25672/tcp   dsa_rabbitmq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yep.  That's the whole set of processes that I was using for my federal friend.  Sigh.  They've been happily sucking up CPU for more than 2 weeks.  &lt;strong&gt;grumble&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The solution:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stop 863768f4f33f dc7f57778b4e df6fd902c11b 0b0eb7730fb0 605da7fe5159
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 20 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2020/07/20/so-that-one-time-you-played-with-docker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2020/07/20/so-that-one-time-you-played-with-docker.html</guid>
        
        <category>docker</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Building Data Pipelines Learning Number 01- Die Monolith Die</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3897.jpeg&quot; alt=&quot;IMG_3897.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am in the process of wrapping up a year long engagement where I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Built a high performance data pipeline&lt;/li&gt;
  &lt;li&gt;Capable of processing all of Twitter in real time / near real time&lt;/li&gt;
  &lt;li&gt;Applied multiple tools to the data at different stages of the pipeline&lt;/li&gt;
  &lt;li&gt;Applied one or more Machine Learning models at different stages of the pipeline&lt;/li&gt;
  &lt;li&gt;Operated on AWS using SQS as the queueing structure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This blog post talks about one of the key things I learned in terms of the data pipeline, specifically:&lt;/p&gt;

&lt;p&gt;**Do Not Build Data Pipelines Around a Monolithic Queue Processor **&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: By queue processor I mean the bit of software which pulls the data of the queue, operates on it and then puts it back.&lt;/p&gt;

&lt;p&gt;This lesson may be obvious to some but we took a &lt;em&gt;meandering&lt;/em&gt; approach to this problem where we started with the idea of distributed pipeline components, moved to a monolithic approach and then ended up back at a distributed approach.  As with a lot of research endeavors, the obvious conclusion wasn't quite so obvious in the throes of the research.&lt;/p&gt;

&lt;h2 id=&quot;lesson-01-monolithic-queue-processing-raises-your-costs&quot;&gt;Lesson 01: Monolithic Queue Processing Raises Your Costs&lt;/h2&gt;

&lt;p&gt;At the heart of our queue processing were a number of Machine Learning components (python / tensorflow) that really needed a &lt;strong&gt;GPU&lt;/strong&gt; for efficient data processing.  The problem here is that when you have a monolithic queue processor, all your processing happens on a box with the GPU whether or not all that processing needs the GPU.  When you are using cloud computing, you pay for the GPU whether not not it is being used for a given operation.  And since GPU boxes generally cost at least 5x to 6x more than CPU only boxes, well, our monolithic queue processor proved to be an &lt;strong&gt;economic disaster&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;lesson-02-monolithic-queue-processing-is-harder-to-debug&quot;&gt;Lesson 02: Monolithic Queue Processing Is Harder to Debug&lt;/h2&gt;

&lt;p&gt;After realizing Lesson 01, I took our monolithic queue processor apart and broke it down into 8 (ultimately 9) individual queue processors.  One thing that I quickly found is that debugging the 8 individual queue processors was dramatically easier than debugging the single monolithic queue processor.  Essentially the lack of state in the individual queue processors simplified the debugging process.&lt;/p&gt;

&lt;h2 id=&quot;lesson-03-performance-varies-across-routines---a-monolith-means-you-scale-globally-not-locally&quot;&gt;Lesson 03: Performance Varies Across Routines - A Monolith Means You Scale Globally Not Locally&lt;/h2&gt;

&lt;p&gt;The final lesson here was that given given each part of the monolithic queue processor had different performance characteristics (example - JSON normalization versus Machine Learning versus calling a remote API over the network versus transferring data to S3), when we had a monolith, we could only scale globally (the entire monolith).  By breaking it down to individual queue processors, we could ensure that each queue processor could be appropriately scaled (i.e. locally scaled) right down to the number of instances / type of instances.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/data_pipeline/2020/07/20/building-data-pipelines-die-monolith-die.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/data_pipeline/2020/07/20/building-data-pipelines-die-monolith-die.html</guid>
        
        <category>data_pipeline</category>
        
        
        <category>data_pipeline</category>
        
      </item>
    
      <item>
        <title>AWS SQS Pro Tip - Lower Your Costs By Batching Up Data</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3826.jpeg&quot; alt=&quot;IMG_3826.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a short one but a good one.  I've been using SQS (disclaimer – I love SQS) lately for a large scale data pipeline.  We are processing literally billions of small JSON blobs and in our cost modeling, we initially came up with an estimate that made SQS something that we couldn't use because of the number of JSON blobs.  And then one of our people, thank you Don Neufeld, came up with the idea of &lt;strong&gt;batching&lt;/strong&gt; up the JSON blobs and having SQS give us a batch that we could process.&lt;/p&gt;

&lt;p&gt;And while this did complicate our queue processing a bit, it made SQS cost effective.  Here were the key things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;When we initially loaded the queue, we measured each blob's length and then built an array of blobs until we were just below the maximum packet size, 256_000 bytes.&lt;/li&gt;
  &lt;li&gt;We then serialized the array into JSON and gave that JSON to SQS.&lt;/li&gt;
  &lt;li&gt;Our routine which read things back off the queue looked something like this:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqs_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receive_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueueUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxNumberOfMessages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_QUEUE_MESSAGES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Messages'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# when the queue is exhausted, the response dict contains no 'Messages' key
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Messages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 'Messages' is a list
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;message_bodies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_bodies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes this was a bit more overhead but it has worked tremendously well and let us take full advantage of SQS without running up a huge bill.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/07/20/aws-sqs-pro-tip-lower-your-costs-by-batching-up-data.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/07/20/aws-sqs-pro-tip-lower-your-costs-by-batching-up-data.html</guid>
        
        <category>aws</category>
        
        <category>sqs</category>
        
        <category>data_pipeline</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Python Machine Learning Best Practice - Lock Down Your Versions</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3881.jpeg&quot; alt=&quot;IMG_3881.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently took a Python and Ruby (but mostly Python) Machine Learning data pipeline live and, almost immediately, hit a pretty significant problem.  The issue was this line of code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;model_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text_to_classify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_special_tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return_tensors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device_to_use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This, which worked, at least for a while, perfectly on my development box.  And then I deployed the code and that caused my requirements.txt file to be &lt;strong&gt;fulfilled&lt;/strong&gt; and that's when the trouble started.  As I hope you know, requirements.txt is a list of any software components that your project uses along with, sometimes, the version numbers of those software components.&lt;/p&gt;

&lt;p&gt;Now I mostly work over in the happy go lucky land of Ruby and the Ruby world has a pretty &lt;strong&gt;mature&lt;/strong&gt; ecosystem at this point where components change but not terribly frequently.  The Ruby equivalent to Python's requirements.txt is called Gemfile and like requirements.txt, a Gemfile can include the version of a component.  But, because the Ruby world's components tend to be mature, I haven't worried about locking down version numbers for ages.  Yes, yes, I know that this is bad but I'm human and fallible.&lt;/p&gt;

&lt;p&gt;So what happened when my code was deployed is that this command was executed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -R requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;as part of the underlying Docker build process.  And this brought in whatever the &lt;strong&gt;latest&lt;/strong&gt; version of our underlying Machine Learning libraries happened to be.  And that broke the line of code above which then led to the expected scramble to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;figure out what version I had on my development machine&lt;/li&gt;
  &lt;li&gt;update requirements.txt&lt;/li&gt;
  &lt;li&gt;shut down the cluster of boxes running our pipeline&lt;/li&gt;
  &lt;li&gt;redeploy the code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the sample recommendation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Always, &lt;strong&gt;immediately&lt;/strong&gt;, lock down the version of any machine learning libraries that you put into requirements.txt.  These libraries are changing regularly and their changes can very easily break your code.  You need to do this &lt;strong&gt;when&lt;/strong&gt; you add one of these libraries to requirements.txt.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 17 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/07/17/python-machine-learning-best-practice-lock-down-your-versions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/07/17/python-machine-learning-best-practice-lock-down-your-versions.html</guid>
        
        <category>python</category>
        
        <category>pipeline</category>
        
        <category>machine_learning</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Linux, Docker and Where Did My Disc Space Go?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3897.jpeg&quot; alt=&quot;IMG_3897.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some computing problems fall into the category of evergreen – no matter what you do, they will always, always, always occur – they are evergreen just like a pine tree.  Today's version of this is storage.  I've been running an EC2 node which has a SystemD service (no flames; I actually like SystemD although I do regard it as a betrayal of Unix's heritage but …) which processes some data via a Ruby application which is run through Docker.&lt;/p&gt;

&lt;p&gt;I was monitoring the underlying processing queue and I noticed that this box had seemingly stopped processing leading to a slow down in my data pipeline.  When I dug into the box, I noticed that the box was out of disc space.  This led to the first question &quot;#*#$&amp;amp;#$# where did my disc space go&quot; and caused me to invoke this shell incantation:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd / &amp;amp;&amp;amp; sudo du -h --max-depth=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which gave me this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;16K	./opt
105M	./boot
789M	./snap
56K	./root
234M	./lib
40K	./tmp
763M	./home
844K	./run
0	./dev
16G	./var
1.6G	./usr
15M	./sbin
15M	./bin
du: cannot access './proc/17764/task/17764/fd/4': No such file or directory
du: cannot access './proc/17764/task/17764/fdinfo/4': No such file or directory
du: cannot access './proc/17764/fd/3': No such file or directory
du: cannot access './proc/17764/fdinfo/3': No such file or directory
0	./proc
4.0K	./mnt
4.0K	./srv
4.0K	./lib64
0	./sys
16K	./lost+found
4.0K	./media
5.5M	./etc
20G	.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking at the above, I could see that the bulk of the data was in /var so I changed into var and did it again:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /var &amp;amp;&amp;amp; sudo du -h --max-depth=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which gave me:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4.0K	./local
4.0K	./opt
36K	./snap
4.0K	./mail
11G	./lib
24K	./tmp
5.3G	./log
768K	./backups
82M	./cache
4.0K	./crash
28K	./spool
16G	.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Clearly I could have looked at log but I chose to go after lib which was twice as large:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cd lib &amp;amp;&amp;amp; sudo du -h --max-depth=1 

cd lib &amp;amp;&amp;amp; sudo du -h --max-depth=1
20K	./update-notifier
544K	./usbutils
16K	./amazon
0	./lxcfs
8.0K	./sudo
12K	./grub
11G	./docker
32K	./polkit-1
33M	./dpkg
28K	./pam
4.0K	./unattended-upgrades
4.0K	./misc
4.0K	./dhcp
4.0K	./git
4.0K	./os-prober
4.0K	./python
8.0K	./logrotate
12K	./AccountsService
338M	./snapd
432K	./systemd
4.0K	./lxd
129M	./apt
4.0K	./landscape
12K	./private
184K	./containerd
120K	./ucf
4.0K	./ubuntu-release-upgrader
11M	./mlocate
4.0K	./command-not-found
680K	./cloud
8.0K	./vim
4.0K	./plymouth
12K	./update-manager
4.0K	./man-db
4.0K	./dbus
8.0K	./ureadahead
16K	./initramfs-tools
11G	.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that told me that that culprit was &lt;strong&gt;Docker&lt;/strong&gt;!  A vague memory of having this issue earlier in my life led me to these docker commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker system df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which revealed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ip-172-31-15-140:/var/lib/docker/overlay2/fbacd11ec88524762f258c92223fa8499fb4514c4a2d494e4cf5078d924be626# docker system df
TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE
Images              35                  9                   9.139GB             8.929GB (97%)
Containers          37                  1                   2.287GB             2.287GB (100%)
Local Volumes       0                   0                   0B                  0B
Build Cache         0                   0                   0B                  0B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then the logical successor to docker system df was:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker system prune -f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that I had disc space again and then I could start my SystemD service with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status
systemctl status service.service
systemctl start service.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes my service is unimaginatively named &quot;service.service&quot;&lt;/p&gt;

&lt;h2 id=&quot;in-case-rails-is-part-of-your-system&quot;&gt;In Case Rails is Part of Your System&lt;/h2&gt;

&lt;p&gt;I ran out of disc space today (July 27, 2020) on a production system running Rails and I started to follow the process above and then I thought – &quot;Wait – Rails log&quot;. and I:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Changed into right user for the Rails process.&lt;/li&gt;
  &lt;li&gt;Changed into the right directory for the Rails app (i.e. RAILS_ROOT/current).&lt;/li&gt;
  &lt;li&gt;Executed a &lt;strong&gt;du -h log&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Ran a &lt;strong&gt;bundle exec rake log:clear&lt;/strong&gt; when I saw the size of the logs was 90 gigs.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@ruwanka/tidy-and-sparkling-docker-environment-with-new-docker-cleanup-commands-19277f48fd89#:~:text=Reclaim%20Your%20precious%20space,to%20any%20of%20running%20containers.&quot;&gt;Docker Clean Up Commands&lt;/a&gt;
*.&lt;a href=&quot;https://github.com/moby/moby/issues/33775&quot;&gt;Overlay2 infinitely eats space&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://maryrosecook.com/blog/post/freeing-disk-space-on-your-linux-server&quot;&gt;Mary Rose Cook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 17 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/pipeline/2020/07/17/linux-docker-and-where-did-my-disc-space-go.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/pipeline/2020/07/17/linux-docker-and-where-did-my-disc-space-go.html</guid>
        
        <category>linux</category>
        
        <category>docker</category>
        
        <category>pipeline</category>
        
        
        <category>pipeline</category>
        
      </item>
    
      <item>
        <title>Embrace Your Tagline at Every Opportunity</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3894.jpeg&quot; alt=&quot;IMG_3894.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have been, since my very first foray into startups, a huge advocate of the &lt;strong&gt;tag line&lt;/strong&gt;.  A tag line is that one to 10 word phrase that encapsulates exactly what you are building.  I talk about this in my document on &lt;a href=&quot;https://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html&quot;&gt;Opportunity Profiles&lt;/a&gt; where I identify it as one of the first things you write down when planning a new venture.&lt;/p&gt;

&lt;p&gt;This morning, as I engaged in my &quot;just out of bed, the brain is fresh, work on something new and interesting&quot; moment of my day, I found a new way to embrace the tag line.  Yesterday was I brainstormed on something and what felt like a new perfect tag line was uttered.  So I did two things today:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I put that tag line and the other candidates into code.  This means that not only are the written down but they are under version control so I can get back to them as needed.  You never know how a project morphs and changes as it weaves its way towards the market and being able to get back to a tag line, I've found, is vital.&lt;/li&gt;
  &lt;li&gt;I added it to the project's user interface as part of its footer.  This means that every time that I look at what I'm building, I will see it and, hopefully, be inspired by it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's an example of #2 (this is just the footer not the project itself).&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/embrace_the_tag_line.png&quot; alt=&quot;embrace_the_tag_line.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The tag line is the text on the left in bold.  And if you find that tag line intriguing then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;That's great; it means it might be right; validation on these things is key and should be sought as early as possible&lt;/li&gt;
  &lt;li&gt;You know where to find me if you want to ask about it (contact info is on the bottom of every page; look down)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 03 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/07/03/embrace-your-tagline-at-every-opportunity.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/07/03/embrace-your-tagline-at-every-opportunity.html</guid>
        
        <category>startup</category>
        
        <category>marketing</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Startup Learnings What Piloting Palm Taught Me or Examples of Equity Splits</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2662.jpeg&quot; alt=&quot;IMG_2662.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the age of the iPhone, it is really, really hard to imagine just how significant Palm used to be.  Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Palm used to sell over a billion dollars worth of organizers annually&lt;/li&gt;
  &lt;li&gt;There were multiple compatible versions of the Palm from different companies&lt;/li&gt;
  &lt;li&gt;Both Palm and Handspring, a compatible, went public with multi billion dollar valuations&lt;/li&gt;
  &lt;li&gt;As late as 2010, HP acquired Palm for 1.2 billion &lt;a href=&quot;https://en.wikipedia.org/wiki/Palm_(PDA)&quot;&gt;WikiPedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I recently read the book Piloting Palm: The Inside Story of Palm, Handspring and the Birth of the Billion-Dollar Handheld Industry:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;![https://images-na.ssl-images-amazon.com/images/I/51yPty1M7oL._SX311_BO1,204,203,200_.jpg](https://images-na.ssl-images-amazon.com/images/I/51yPty1M7oL._SX311_BO1,204,203,200_.jpg)&quot;&gt;https://www.amazon.com/Piloting-Palm-Handspring-Billion-Dollar-Handheld/dp/0471089656&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At its heart this book is the story of Jeff Hawkins, the inventor of Palm and Donna Dubinsky, the first CEO of Palm.  As Palm grew more successful and Hawkins and Dubinsky's ambitions grew, they ultimately left and founded the Palm compatible company, Handspring.  If you've ever read a startup case study then I doubt this book will surprise you&lt;/p&gt;

&lt;p&gt;The single best part of this book was that it gave metrics for the equity splits that are common for early stage management positions in startups.  This is something that is always hard to judge so having comparables is really useful:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The CEO of a spun out company from a larger entity would likely own no more than 1 percent of the company.&lt;/li&gt;
  &lt;li&gt;The CEO of an independent startup would generally have 5 percent or more.&lt;/li&gt;
  &lt;li&gt;When the former CEO of Palm, Donna Dubinsky, set up a new company, HandSpring, with Jeff Hawkins, the equity split should be 2:1.  The reason was that Dubinsky felt that Hawkins skills to the new company were more essential than her own i.e. Jeff Hawkins couldn't be replaced but she could be.&lt;/li&gt;
  &lt;li&gt;When Ed Colligan let Palm to join Handspring as VP of Marketing, he received the percentage of company ownership that a startup's CEO would get rather than the far smaller amount that a VP normally owns.  Given that we know from #2 that a CEO would get 5% then we can guess that a VP of Marketing might get 1% (far smaller).  This is backed up by this result from &lt;a href=&quot;https://blog.hubspot.com/opinion/how-much-equity-cmo&quot;&gt;the Hubspot blog&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 27 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/06/27/startup-learnings-what-piloting-palm-taught-me-or-examples-of-equity-splits.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/06/27/startup-learnings-what-piloting-palm-taught-me-or-examples-of-equity-splits.html</guid>
        
        <category>startup</category>
        
        <category>equity</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Getting Past Bash Argument list too long</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3700.jpeg&quot; alt=&quot;IMG_3700.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Right now I have a directory with about 750,000 odd files in it and any attempt to manipulate the files results in this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ip-172-31-1-219:~/datastreamer/data# mv * /home/ubuntu/data/data
bash: /bin/mv: Argument list too long
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My first challenge was to do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown ubuntu:ubuntu *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the fix for this one was actually easy:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown ubuntu:ubuntu .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By omitting the *, the bash limits on argument list don't apply – this changes the current folder (.) and everything in it and it always works.&lt;/p&gt;

&lt;p&gt;The second challenge was to move the files from /root/datastreamer/data to /home/ubuntu/data/data.  Here's the solution after a bit of research:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find /root/datastreamer/data -name '*.json' -exec mv {} /home/ubuntu/data/data \;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/128559/solving-mv-argument-list-too-long&quot;&gt;Unix.StackExchange&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/17188292/list-too-long-to-chmod-recursively&quot;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bash/2020/06/25/getting-past-bash-argument-list-too-long.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bash/2020/06/25/getting-past-bash-argument-list-too-long.html</guid>
        
        <category>bash</category>
        
        <category>linux</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Using Spacy for Part of Speech Tagging</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3818.jpeg&quot; alt=&quot;IMG_3818.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Part of speech tagging is a classic NLP (natural language parsing) where you give a sentence of sentence fragment to a bit of software and ask it to tell you the parts of speech. If this sounds like a 7th Grade English exercise, well, you aren't wrong …  I'm experimenting with this for an upcoming user interface where I'm hoping to use NLP techniques to lessen the amount of manual data entry.&lt;/p&gt;

&lt;p&gt;I chose to use Spacy, a Python NLP tool, for this.  Here's an example of the output from Spacy:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input:

ADL - Make the ansible create all the queues

Output:

...
ADL          PROPN      NNP      noun, proper singular
-            PUNCT      :        punctuation mark, colon or ellipsis
Make         VERB       VB       verb, base form
the          DET        DT       determiner
ansible      ADJ        JJ       adjective
create       NOUN       NN       noun, singular or mass
all          DET        PDT      predeterminer
the          DET        DT       determiner
queues       NOUN       NNS      noun, plural
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I've done this type of stuff in the past using tools like Princeton's WordNET but Spacy makes this even easier that ever before.  Here's all it took:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pip3 install spacy&lt;/li&gt;
  &lt;li&gt;python3 -m spacy download en_core_web_sm&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's the accompanying Python code.  This code does two things.  It starts by defining a Spacy document based on the sentence and then it iterates over the words in the sentence and gives the word tags and explanation.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import spacy
&amp;gt;&amp;gt;&amp;gt; sp = spacy.load('en_core_web_sm')
&amp;gt;&amp;gt;&amp;gt; sen = sp(&quot;ADL - Make the ansible create all the queues&quot;)
&amp;gt;&amp;gt;&amp;gt; for word in sen:
...     print(f'{word.text:{12}} {word.pos_:{10}} {word.tag_:{8}} {spacy.explain(word.tag_)}')
...
ADL          PROPN      NNP      noun, proper singular
-            PUNCT      :        punctuation mark, colon or ellipsis
Make         VERB       VB       verb, base form
the          DET        DT       determiner
ansible      ADJ        JJ       adjective
create       NOUN       NN       noun, singular or mass
all          DET        PDT      predeterminer
the          DET        DT       determiner
queues       NOUN       NNS      noun, plural
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I'm contemplating this for a system built in Rails and it isn't hard to envision setting up a simple Flask API that front ends a Spacy installation that does just this much and returns the result as a JSON structure.&lt;/p&gt;

&lt;p&gt;Spacy – very, very much recommended!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackabuse.com/python-for-nlp-parts-of-speech-tagging-and-named-entity-recognition/&quot;&gt;StackAbuse on Spacy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/explosion/spaCy/issues/4577&quot;&gt;Github on Installing Spacy Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 24 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/06/24/using-spacy-for-part-of-speech-tagging.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/06/24/using-spacy-for-part-of-speech-tagging.html</guid>
        
        <category>python</category>
        
        <category>nlp</category>
        
        <category>spacy</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Making OSX Fonts Display Better</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3821.jpeg&quot; alt=&quot;IMG_3821.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tonsky.me/blog/monitors/&quot;&gt;Tonsky&lt;/a&gt; recently had a great post about 4K monitors, fonts and scaling.  The magic in this article are his suggestions around how to set fonts on your OSX machine.  Apparently Apple does not set the defaults correctly (and, I'm writing this on a brand new OSX box that is NOTABLY improved by following his directions).  This is the kind of stuff that I'm going to need to refer back to hence this post.  &lt;a href=&quot;https://news.ycombinator.com/item?id=23551983&quot;&gt;Discussion thread about this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/nmcc/4e8ead6c380d8331fedd04e1aa41d351&quot;&gt;How to download and install the Consolas Font&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/06/17/making-osx-fonts-display-better.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/06/17/making-osx-fonts-display-better.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Configuring NGINX to Serve a Directory Listing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3853.jpeg&quot; alt=&quot;IMG_3853.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had to setup an NGINX server to serve a directory of files for processing via an AWS Lambda function.  And while there are other ways to do this, NGINX offered an easy, convenient way to do this albeit at the cost of some configuration.&lt;/p&gt;

&lt;p&gt;The trick to this is the autoindex on directive but it needs to exist in the right place in your overall NGINX configuration.&lt;/p&gt;

&lt;p&gt;My operating system was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu Linux 18&lt;/li&gt;
  &lt;li&gt;Nginx version: nginx/1.14.0 (Ubuntu)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;useful-nginx-commands&quot;&gt;Useful NGINX Commands&lt;/h2&gt;

&lt;p&gt;Here are some useful commands for working with NGINX:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nginx -v (find the version)&lt;/li&gt;
  &lt;li&gt;sudo systemctl status nginx (get status)&lt;/li&gt;
  &lt;li&gt;sudo systemctl restart nginx (restart the server)&lt;/li&gt;
  &lt;li&gt;sudo systemctl stop nginx (stop the server)&lt;/li&gt;
  &lt;li&gt;sudo systemctl start nginx (start the server)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-overall-nginx-configuration-structure&quot;&gt;The Overall NGINX Configuration Structure&lt;/h2&gt;

&lt;p&gt;I've always hacked about with NGINX and never really understand how NGINX was configured.  Much to my surprise, NGINX is very similar to the old school Apache structure that I used to dearly love:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is a default configuration in: /etc/nginx/nginx.conf&lt;/li&gt;
  &lt;li&gt;The site level configuration is in /etc/nginx/sites-available/default&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is in this file /etc/nginx/sites-available/default that you can add a location directive:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;location /home/ubuntu/data/data {
    autoindex on;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and this goes inside the overall server block like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
        listen 80 default_server;
        listen [::]:80 default_server;
        
        location /home/ubuntu/data/data {
            autoindex on;
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My actual configuration looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root /home/ubuntu/data/data;

# Add index.php to the list if you are using PHP
#index index.html index.htm index.nginx-debian.html;
autoindex on;

server_name _;

location /home/ubuntu/data/data {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 15 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/nginx/2020/06/15/configuring-nginx-to-serve-a-directory-listing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/nginx/2020/06/15/configuring-nginx-to-serve-a-directory-listing.html</guid>
        
        <category>nginx</category>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>A Conceptual Architecture for a Filesystem to SQS Loader</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3817.jpeg&quot; alt=&quot;IMG_3817.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have an interesting technical situation facing me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A docker container which runs persistently and writes JSON files to a directory&lt;/li&gt;
  &lt;li&gt;Each JSON file contains short form messages with JSON encoding along a variety of metadata fields&lt;/li&gt;
  &lt;li&gt;Each file is idempotent i.e. once it exists in the directory will never be written to again&lt;/li&gt;
  &lt;li&gt;Each file is named for a timestamp&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each file needs to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have ridiculous, non-JSON comments removed from the beginning&lt;/li&gt;
  &lt;li&gt;Be parsed into json&lt;/li&gt;
  &lt;li&gt;There is roughly 6000 of these JSON things coming in per second&lt;/li&gt;
  &lt;li&gt;Have only a selection of the JSON internally be selected&lt;/li&gt;
  &lt;li&gt;Be batched into a collection up to the maximum size the SQS supports and then committed to SQS&lt;/li&gt;
  &lt;li&gt;Be processed only once&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: SQS is the AWS &quot;Simple Queue Service&quot;.  A queue is a specialized data structure which hands data off for processing by other tasks.&lt;/p&gt;

&lt;p&gt;My initial thinking to handle this was to use Rust to write a high performance file processor.  This appealed to me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New technical challenge; I don't know Rust&lt;/li&gt;
  &lt;li&gt;Manly - writing fast code is a conveniently macho challenge&lt;/li&gt;
  &lt;li&gt;Simple architecture - one box, one process watching a directory and ripping through files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are, naturally, problems here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Rust program represents a SPOF or &quot;Single Point of Failure&quot;; things break&lt;/li&gt;
  &lt;li&gt;This architecture is simple but making it not be a SPOF means the architecture gets complex&lt;/li&gt;
  &lt;li&gt;We don't actually even know if a single Rust executable is fast enough to handle all the data&lt;/li&gt;
  &lt;li&gt;Rust is complex and even simple things take dramatically more code than a scripting language like Ruby or Python.  There isn't anything wrong with Rust (I really like the language but learning it is non-trivial).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thinking through all these issues as well as learning, by chance, that the runtime execution period for AWS lambda serverless functions had increased from 5 minutes to 15 minutes made me think in terms of a different architecture focused on using lambdas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A lambda is a self contained bit of code that you give over to AWS to manage on your behalf.  Another term for Lambda is &quot;functions as a service&quot;.  You don't have to focus at all on servers, DevOps administration or the like.&lt;/p&gt;

&lt;p&gt;Here is what I'm thinking:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add a network API to the filesystem of JSON files.  This could literally be as simple as an NGINX server that listed the files.&lt;/li&gt;
  &lt;li&gt;A lambda that requests a JSON file for processing per the description above and relies on a Redis dictionary to track files that have already been processed.  Two dictionaries would be needed – json_files_processed and  v (and, yes, there would need to be a way to expire things from json_files_processing in case a lambda crashes or is terminated; this would be a separate lambda).&lt;/li&gt;
  &lt;li&gt;A CloudWatch Scheduler rule that triggers the lambda every 5 minutes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Fleshing this out further gives three lambda functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sqs_loader - the main thing which processes files and sends their contents to SQS&lt;/li&gt;
  &lt;li&gt;json_files_processed_archiver - pulls files that have been processed into a different directory so that they don't have to be ever checked again; alternatively this might delete them after some period of time&lt;/li&gt;
  &lt;li&gt;json_files_processing_checker - checks to see if files have been in the json_files_processing queue for too long&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There would likely need to be 3 CloudWatch Scheduler rules one for each lambda.&lt;/p&gt;

&lt;p&gt;The sqs_loader would need the ability to self terminate / exit if all files are currently being processed.&lt;/p&gt;
</description>
        <pubDate>Fri, 12 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/lambda/2020/06/12/a-conceptual-architecture-for-a-filesytem-to-sqs-loader.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/lambda/2020/06/12/a-conceptual-architecture-for-a-filesytem-to-sqs-loader.html</guid>
        
        <category>lambda</category>
        
        <category>aws</category>
        
        <category>sqs</category>
        
        
        <category>lambda</category>
        
      </item>
    
      <item>
        <title>Sorting the Keys of a Python JSON Object</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3735.jpeg&quot; alt=&quot;IMG_3735.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had to look at a complex JSON structure in Python.  The way that I wanted to do this was to look at a sorted list of the keys.  Here's the core of what I came up with:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I keep a common_json.py library and this is what I came up that I can call from:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;common_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_sorted_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you are debugging inside the common_json.py library then you need to call this just by the method signature and omit the common_json. prefix.&lt;/p&gt;

&lt;p&gt;Here is the full code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_sorted_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;list_of_keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;list_of_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_of_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Coming from a Ruby background, it is interesting to note that the .sort() call is an inline sort i.e. it affects the list_of_keys object as opposed to returning a new object that is itself sorted.  From a ruby perspective this would be a ! method since it modifies the current object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Ruby isn't fully consistent with ! methods so keep that in mind.&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/06/11/sorting-the-keys-of-a-python-json-object.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/06/11/sorting-the-keys-of-a-python-json-object.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Fixing the Docker Permission Denied While Trying to Connect to the Docker Daemon Socket Error</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3941.jpeg&quot; alt=&quot;IMG_3878.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had the situation where even the simplest docker command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;gave this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: 
Post http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The solution for this is actually pretty simple:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add your user to the docker group.  Since I was running Ubuntu linux, the default user is also ubuntu and then command is:&lt;/li&gt;
  &lt;li&gt;sudo usermod -aG docker ubuntu&lt;/li&gt;
  &lt;li&gt;And then you have to log out and log back in or u -s ${ubuntu}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an ansible task which you can drop in a playbook to accomplish this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- name: Update the ubuntu user to be part of the docker group
  user:
    name: ubuntu
    shell: /bin/bash
    groups: docker
    append: yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;verifying-this&quot;&gt;Verifying this&lt;/h2&gt;

&lt;p&gt;If you need to validate what groups a user is in then use:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id -nG ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Thanks to Don Neufeld for teaching me this command; somehow despite N decades of unix experience, I missed the id command.  Bizarre.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;Here's a good article from &lt;a href=&quot;https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket&quot;&gt;Digital Ocean on this&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2020/06/10/fixing-the-docker-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-error.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2020/06/10/fixing-the-docker-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-error.html</guid>
        
        <category>docker</category>
        
        <category>ubuntu</category>
        
        <category>linux</category>
        
        <category>ansible</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Programming Rule Number 0 - Never, Ever Work too Hard</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3941.jpeg&quot; alt=&quot;IMG_3941.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the better lessons that you learn as a programmer is that you never want to work too large, in short, that laziness can be a virtue.  I'm speaking, of course, of doing things manually that you can automate.  I recently wanted to download a set of images from github that represented anonymous animals.  Here's the repo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[https://github.com/wayou/anonymous-animals/tree/master/icons](https://github.com/wayou/anonymous-animals/tree/master/icons)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I needed to automate downloading these was two things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A set of filenames&lt;/li&gt;
  &lt;li&gt;A means to iterate them and fetch the data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The set of filenames I got just by copying text from the github page and using a text editor macro to reduce it to a set of filenames that %w could easily make into an array.  Here's the code for that:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;animals&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;anims&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(
    Alligator.png
    Anteater.png
    Armadillo.png
    Auroch.png
    Axolotl.png
    Badger.png)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My routine to download these looks like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wgets&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;AnonAnimalCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;animals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`cd /Users/sjohnson/Sync/coding/rails/wipmarks/app/assets/images &amp;amp;&amp;amp; wget wget https://raw.githubusercontent.com/wayou/anonymous-animals/master/icons/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animal&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My final step was to call this routine from the Rails console (the entire class is called AnonAnimal):&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;AnonAnimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wgets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Downloading all of these manually would have been likely about a half hour.  Writing this code took maybe 10 minutes.  Laziness for the win!&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/06/08/programming-rule-number-0-never-ever-work-too-hard.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/06/08/programming-rule-number-0-never-ever-work-too-hard.html</guid>
        
        <category>programming</category>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Sharing iPhone Photos via ChromeCast</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3872.jpeg&quot; alt=&quot;IMG_3872.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My wife recently got kittens and wanted to show pictures of them with our kids via our ChromeCast.  The problem is that there seems to be no simple way to do that.&lt;/p&gt;

&lt;p&gt;Here's the work around I came up with:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an album on your iPhone and put all the pictures in it.&lt;/li&gt;
  &lt;li&gt;Go into that album and look at the movie that Apple Photos makes for the album.&lt;/li&gt;
  &lt;li&gt;Click the share button and select to save that video.&lt;/li&gt;
  &lt;li&gt;Go into the YouTube app and upload that video to YouTube.&lt;/li&gt;
  &lt;li&gt;Publish the video.&lt;/li&gt;
  &lt;li&gt;Go into YouTube itself and watch the video.&lt;/li&gt;
  &lt;li&gt;Select the ChromeCast option and then select the video device.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 06 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/chrome_cast/2020/06/06/sharing-iphone-photos-via-chromecast.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/chrome_cast/2020/06/06/sharing-iphone-photos-via-chromecast.html</guid>
        
        <category>iphone</category>
        
        <category>chrome_cast</category>
        
        
        <category>chrome_cast</category>
        
      </item>
    
      <item>
        <title>Setting Up CI / CD with Jenkins, Blue Ocean, Github for a Rust Program</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0928.jpeg&quot; alt=&quot;IMG_0928.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CI / CD or &quot;Continuous Integration / Continuous Deployment&quot; is the process of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;taking a source code base&lt;/li&gt;
  &lt;li&gt;running tests against it&lt;/li&gt;
  &lt;li&gt;compiling it (if applicable)&lt;/li&gt;
  &lt;li&gt;deploying it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CI / CD is an ongoing process that runs continuously and responds to pull requests on your source code repo.&lt;/p&gt;

&lt;p&gt;In this blog post we are going to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take a git repo with a Rust code base&lt;/li&gt;
  &lt;li&gt;Run it thru CI / CD using Jenkins with the &lt;a href=&quot;https://www.jenkins.io/projects/blueocean/&quot;&gt;Blue Ocean plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Compile it&lt;/li&gt;
  &lt;li&gt;Deploy it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not using Circle CI or another hosted CI / CD system as our overall deploy strategy is complex and Ansible based.&lt;/p&gt;

&lt;h2 id=&quot;step-1-correct-git-work-flow&quot;&gt;Step 1: Correct Git Work Flow&lt;/h2&gt;

&lt;p&gt;The git workflow we are using is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master branch&lt;/li&gt;
  &lt;li&gt;develop branch&lt;/li&gt;
  &lt;li&gt;feature branch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All work happens in feature branches.  Feature branches are then merged into develop and develop is merged into master.  The goal here is that the master branch is always kept pristine.&lt;/p&gt;

&lt;p&gt;This means that you need to make some change to your github settings:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Github Settings / Branches / Default branch – needs to be set to develop&lt;/li&gt;
  &lt;li&gt;Github Settings / Branches / Branch protection rules – develop needs to be protected&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's what you need to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a git repo.&lt;/li&gt;
  &lt;li&gt;Push the code base to it.&lt;/li&gt;
  &lt;li&gt;Create a develop branch in the code base.&lt;/li&gt;
  &lt;li&gt;Change into that branch.&lt;/li&gt;
  &lt;li&gt;Push that branch also.&lt;/li&gt;
  &lt;li&gt;Go to settings for the repo.&lt;/li&gt;
  &lt;li&gt;Click on branches.&lt;/li&gt;
  &lt;li&gt;Set develop as the default branch.&lt;/li&gt;
  &lt;li&gt;Click on branch protection rules.&lt;/li&gt;
  &lt;li&gt;Add develop as a protected branch.  This will turn on require pull requests before merging and you can set the number of people who have to approve pull requests before the merge.&lt;/li&gt;
  &lt;li&gt;Add master as a protected branch.  For this one you don't want pull requests on; you just want master protected.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-2-test-the-git-work-flow&quot;&gt;Step 2: Test the Git Work Flow&lt;/h2&gt;

&lt;p&gt;Now you want to go into your repo and:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a feature branch, call it &quot;readme&quot;, and create / update the readme for the repo.&lt;/li&gt;
  &lt;li&gt;Then you want to push the branch&lt;/li&gt;
  &lt;li&gt;Then you want to follow the pull request url on the branch and submit it by clicking Create Pull Request&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-3-get-jenkins-setup-traditionally-with-blue-ocean&quot;&gt;Step 3: Get Jenkins Setup Traditionally with Blue Ocean&lt;/h2&gt;

&lt;p&gt;Setting up all of Jenkins with Blue Ocean is beyond the scope of this article but it is work that needs to be done.  Here's the quick summary:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install Jenkins on a cloud instance.&lt;/li&gt;
  &lt;li&gt;Install Nginx.&lt;/li&gt;
  &lt;li&gt;Install let's encrypt.&lt;/li&gt;
  &lt;li&gt;Set Jenkins up behind Nginx.&lt;/li&gt;
  &lt;li&gt;Install Blue Ocean&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-4-add-a-jenkinsfile-to-your-repo&quot;&gt;Step 4: Add a Jenkinsfile to your Repo&lt;/h2&gt;

&lt;p&gt;A Jenkinsfile is a Blue Ocean construct that defines how the CI / CD process works.  This is an ASCII file that looks something like this for a Rust project:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pipeline {
  agent any
  stages {
    stage('Build') {
      steps {
        sh 'cargo build'
      }
    }

    stage('Test') {
      steps {
        sh 'cargo test'
      }
    }

  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ideally there would likely be a stage('Deploy') but we haven't built that with Blue Ocean yet so I might be wrong.  Watch this blog post for an update.&lt;/p&gt;

&lt;p&gt;Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In develop create a new branch called jenkinsfile i.e. git branch jenkinsfile&lt;/li&gt;
  &lt;li&gt;Change into this branch i.e. git co jenkinsfile&lt;/li&gt;
  &lt;li&gt;Create the file i.e. touch Jenkinsfile&lt;/li&gt;
  &lt;li&gt;Add the contents above to Jenkinsfile&lt;/li&gt;
  &lt;li&gt;Do the add / commit / push dance&lt;/li&gt;
  &lt;li&gt;Create the pull request on Github&lt;/li&gt;
  &lt;li&gt;Go thru the code review / merge dance.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-5-use-blue-ocean-to-setup-a-ci--cd-pipeline&quot;&gt;Step 5: Use Blue Ocean to Setup a CI / CD Pipeline&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I manually put the above Jenkinsfile in place before doing this.  I am told that Blue Ocean will do this automatically if you don't do it yourself.&lt;/p&gt;

&lt;p&gt;Blue Ocean is an open source toolkit that makes CI / CD drop dead easy for Jenkins.  I'm an old school Jenkins guy and someone described Jenkins versus Blue Ocean as &quot;Jenkins makes me tear my hair out&quot; (thanks Don) and he was absolutely correct.  Here are the steps needed to use Blue Ocean to setup a build / test pipeline.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;From the Jenkins sidebar, click Open Blue Ocean.&lt;/li&gt;
  &lt;li&gt;Click the New Pipeline button on the upper right.&lt;/li&gt;
  &lt;li&gt;Select github as your source code host (or whatever).&lt;/li&gt;
  &lt;li&gt;Click the organization that owns the repo.&lt;/li&gt;
  &lt;li&gt;Select the repo.&lt;/li&gt;
  &lt;li&gt;Click the Create Pipeline button.&lt;/li&gt;
  &lt;li&gt;Click on the latest branch.&lt;/li&gt;
  &lt;li&gt;Click on the Pencil icon to make any changes.&lt;/li&gt;
  &lt;li&gt;Click Save and Run.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This starts the build process.  You may need to edit the Jenkinsfile to match the details of your code base if you didn't already create it.&lt;/p&gt;

&lt;h2 id=&quot;step-6-setup-jenkins-traditionally&quot;&gt;Step 6: Setup Jenkins Traditionally&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you are using Blue Ocean then you don't need to this.  I wrote this before I was shown the magnificent awesomeness that is is Blue Ocean.  I left it here though to illustrate just how much simpler Blue Ocean makes the CI / CD process.&lt;/p&gt;

&lt;p&gt;Within Jenkins there is a dashboard of your items.  An item is a project that you want to build.  Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Jenkins select New Item.&lt;/li&gt;
  &lt;li&gt;From the list item items, when you have Blue Ocean installed, then you have the Multi Branch Pipeline item type.  Select that.&lt;/li&gt;
  &lt;li&gt;Name your item and click Ok at the bottom.&lt;/li&gt;
  &lt;li&gt;A very long form is displayed; this is normal for Jenkins.&lt;/li&gt;
  &lt;li&gt;Set the Name and Description fields.&lt;/li&gt;
  &lt;li&gt;Set the Repository HTTPS URL to: your github repo.&lt;/li&gt;
  &lt;li&gt;Set the Discover Branches strategy to: All Branches.&lt;/li&gt;
  &lt;li&gt;Set the Discover pull requests from forks strategy to: Merging the pull request with the current target branch revision&lt;/li&gt;
  &lt;li&gt;Set the Trust to: From users with Admin or Write permission&lt;/li&gt;
  &lt;li&gt;Set the Discover pull requests from origin strategy to: Merging the pull request with the current target branch revision&lt;/li&gt;
  &lt;li&gt;Set the Property strategy to: All branches get the same strategy&lt;/li&gt;
  &lt;li&gt;Set the Build Configuration to by Jenkinsfile&lt;/li&gt;
  &lt;li&gt;Set the Script path to by Jenkinsfile&lt;/li&gt;
  &lt;li&gt;Click Ok at the bottom to save the Jenkins project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And at this point you still really need to go into Blue Ocean.  My advice is don't do it this way and just follow Step 5 above.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/cicd/2020/06/05/setting-up-ci-cd-with-jenkins-blue-ocean-github-for-a-rust-program.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cicd/2020/06/05/setting-up-ci-cd-with-jenkins-blue-ocean-github-for-a-rust-program.html</guid>
        
        <category>cicd</category>
        
        <category>ci</category>
        
        <category>cd</category>
        
        <category>jenkins</category>
        
        <category>blue_ocean</category>
        
        <category>github</category>
        
        <category>rust</category>
        
        
        <category>cicd</category>
        
      </item>
    
      <item>
        <title>Fixing zsh Compaudit Problem on OSX Catalina</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1479.jpeg&quot; alt=&quot;IMG_1479.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ever since OSX Catalina, every time I open a new shell window I get this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? y
(eval):32: command not found: complete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The issue with complete isn't the problem here – it is the insecure directories issue.  After a bunch of googling, I found this command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compaudit | xargs chmod g-w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which fixed the issue entirely.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/06/04/fixing-zsh-compaudit-problem-on-osx-catalina.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/06/04/fixing-zsh-compaudit-problem-on-osx-catalina.html</guid>
        
        <category>osx</category>
        
        <category>zsh</category>
        
        <category>catalina</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Simple Rust Programming 01 - Checking The Existence of a Directory</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2284.jpeg&quot; alt=&quot;IMG_2284.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I'm at the very early learning stage of Rust, that stage where almost nothing you type in works.  And this, for me, usually means &quot;make the learning stick by writing it down&quot;.  So here goes …&lt;/p&gt;

&lt;p&gt;Note: I wrote this code using the &lt;a href=&quot;https://play.rust-lang.org/&quot;&gt;Rust playground&lt;/a&gt;, a web based repl, which was invaluable.&lt;/p&gt;

&lt;h2 id=&quot;a-simple-program-for-testing-the-existence-of-a-directory&quot;&gt;A Simple Program for Testing the Existence of a Directory&lt;/h2&gt;

&lt;p&gt;I'm going to start with an assumption that I need to get the location of my input based on the type of the machine: either a Mac or a Linux box.  Given that we know that a user's home directory exists in /home on Linux and /Users on Mac, this gives us an easy way to differentiate the two.&lt;/p&gt;

&lt;h3 id=&quot;pass-1-problems-with-scopes&quot;&gt;Pass 1: Problems with Scopes&lt;/h3&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/home&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;unix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;other&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.is_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This program has a core problem - the environment variable isn't in scope:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Compiling playground v0.0.1 (/playground)
error[E0425]: cannot find value `environment` in this scope
  --&amp;gt; src/main.rs:11:20
   |
11 |     println!(&quot;{}&quot;, environment);
   |                    ^^^^^^^^^^^ not found in this scope
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The implication of this is that code within { } braces is a true local block and thus out of scope with what came  before.  The Ruby work around for something like this is to have an outer variable that &quot;shadows&quot; the name of the variable within the block and thus allows its value to pass out.  Unfortunately Rust identifies that technique as a bug since the outer variable is never read.  My refactor on this is to write a function which returns this.&lt;/p&gt;

&lt;h3 id=&quot;pass-2-problems-with-return-types&quot;&gt;Pass 2: Problems with Return Types&lt;/h3&gt;

&lt;p&gt;Here was my first pass at moving environment fetching into a function of its own.  I got tired of typing environment so I moved to calling it my_env.&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/home&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;unix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;other&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.is_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are the errors we have:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Compiling playground v0.0.1 (/playground)
error[E0277]: `()` doesn't implement `std::fmt::Display`
 --&amp;gt; src/main.rs:5:20
  |
5 |     println!(&quot;{}&quot;, my_env);
  |                    ^^^^^^ `()` cannot be formatted with the default formatter
  |
  = help: the trait `std::fmt::Display` is not implemented for `()`
  = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
  = note: required by `std::fmt::Display::fmt`
  = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --&amp;gt; src/main.rs:10:14
   |
8  | fn get_env() {
   |              - help: try adding a return type: `-&amp;gt; &amp;amp;'static str`
9  |     if path_exists(&quot;/home&quot;) { 
10 |       return &quot;unix&quot;;
   |              ^^^^^^ expected `()`, found `&amp;amp;str`

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `playground`.

To learn more, run the command again with --verbose.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pass-3-working&quot;&gt;Pass 3: Working&lt;/h3&gt;

&lt;p&gt;The solution to the above was to add a return type or this odd bit of syntax:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fn get_env() -&amp;gt; &amp;amp;'static str
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Apparently the bit following the () identifies the return value of the function as a statically allocated string.  This is syntactically similar to the:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; -&amp;gt; bool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but the single quote really threw me.&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;'static&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/home&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;unix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;other&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.is_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-learnings&quot;&gt;The Learnings&lt;/h2&gt;

&lt;p&gt;Here are bullet points for what we learned from writing these 24 lines of code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The let keyword defines a variable.&lt;/li&gt;
  &lt;li&gt;To insert a variable into string output you use {} inside quotes followed by the name of the variable&lt;/li&gt;
  &lt;li&gt;If you are going to return something from a function you need to return its type as well&lt;/li&gt;
  &lt;li&gt;Variables set within { } are local to the { }&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 03 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/06/03/simple-rust-programs-01-checking-the-existence-of-a-directory.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/06/03/simple-rust-programs-01-checking-the-existence-of-a-directory.html</guid>
        
        <category>rust</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Getting Past Ansible Password Required Issues</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2655.jpeg&quot; alt=&quot;IMG_2655.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had the situation where I needed to run an Ansible task on a user which I sudo su'd into i.e.:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo su jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then ran my Ansible task and I repeatedly got this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TASK [zzet.rbenv : update apt cache] ****************************************************************************************************************
fatal: [localhost]: FAILED! =&amp;gt; {&quot;changed&quot;: false, &quot;module_stderr&quot;: &quot;sudo: a password is required\n&quot;, 
&quot;module_stdout&quot;: &quot;&quot;, &quot;msg&quot;: &quot;MODULE FAILURE\nSee stdout/stderr for the exact error&quot;, &quot;rc&quot;: 1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The underlying issue was that most of the tasks in the playbook used:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;become: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which says to Ansible &quot;run this as a sudo operation&quot; and, given that I was already sudo'd into this account, that proved to be a failure.  I puzzled over this for a bit and then realized that all I needed to do was grant the jenkins account passwordless sudo access via the command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo visudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;by adding this line to the end of the sudoers file that visudo edits:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jenkins    ALL=(ALL) NOPASSWD:ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I made sure to remove the jenkins account from visudo after this was done to prevent any issues related to sudo exploits and this user.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2020/06/03/getting-past-ansible-password-required-issues.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2020/06/03/getting-past-ansible-password-required-issues.html</guid>
        
        <category>ansible</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>_new versus _blank in HTML 5</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08805.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The CovidNearMe News page needs to be fixed. It's using target=&quot;_new&quot; and it should be target=&quot;_blank&quot;. It keeps opening stuff over and over in the same browser tab. (this is a thing I can do but I'm at the PC)&lt;/p&gt;
</description>
        <pubDate>Tue, 19 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/html/2020/05/19/new-versus-blank-in-html-5.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/html/2020/05/19/new-versus-blank-in-html-5.html</guid>
        
        <category>html</category>
        
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>Visting Long Distance Family in the Age of COVID-19</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2655.jpeg&quot; alt=&quot;IMG_2655.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A friend mentioned to me &quot;I'd like to see my folks but they live far away and I don't want to fly and they are immune compromised&quot;.  And that made me think and then write this.&lt;/p&gt;

&lt;h2 id=&quot;is-flying-safe&quot;&gt;Is Flying Safe?&lt;/h2&gt;

&lt;p&gt;Here's what I know about flying right now:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Airlines, even when they promised first responders to New York City a flight home with &quot;no one in the middle seat&quot;, they still filled the middle seat.&lt;/li&gt;
  &lt;li&gt;The three leading Airlines have all stated that they &lt;a href=&quot;https://www.businessinsider.com/american-delta-united-airlines-mask-policy-enforce-2020-5&quot;&gt;won't enforce their mask restrictions&lt;/a&gt;.  So there will almost be a certainty that someone is going to take off their mask.&lt;/li&gt;
  &lt;li&gt;Flying is inherently dehydrating so even if everyone is masked, how do they drink something without exposing someone next to them?&lt;/li&gt;
  &lt;li&gt;We know that this is &lt;a href=&quot;https://www.erinbromage.com/post/the-risks-know-them-avoid-them&quot;&gt;largely spread via airborne particles&lt;/a&gt; and at distances up to least 8 feet.  And there absolutely isn't 8' of separation between passengers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This makes me think that getting on an airplane, unless you have already had COVID-19, is &lt;strong&gt;idiotic&lt;/strong&gt; to say the least.&lt;/p&gt;

&lt;h2 id=&quot;driving&quot;&gt;Driving&lt;/h2&gt;

&lt;p&gt;I live in the Mid West (Indiana) and people in this part of the world tend to view drives as up to 10 hours as, seemingly, a matter of course.  A drive of 10 hours can generally be done with no more than 4 bathroom breaks (personal biology may alter this; this is in my personal experience).&lt;/p&gt;

&lt;p&gt;My friend is facing roughly a 700 mile drive so it falls into that 10 hour benchmark.  A 10 hour drive can be done entirely in one day, even with one driver, as long as you are realistic about your personal need for naps (and that you can nap in a car).  And concerns about social distancing in terms of food can be handled with a lunch box and a series of snacks.  This reduces the COVID-19 concerns about a long road trip to two fold:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Bathroom stops&lt;/strong&gt;.  Presumably if you chose a bathroom slightly off the highway (i.e. not the gas station right off the exit but one down the road a bit) then there would be less crowds and less infection risk.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Are you bringing COVID-19 to your destination&lt;/strong&gt;.  One of the most insidious thing about COVID-19 is its asymptomatic nature.  If you are traveling to see someone that isn't leaving the house much then they may not infect you but there is a chance that you might infect them.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 18 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/05/18/visting-family-in-the-age-of-covid-19.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/05/18/visting-family-in-the-age-of-covid-19.html</guid>
        
        <category>covid</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Design Constraints of an Application Based On AWS SQS</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:38:36.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

</description>
        <pubDate>Mon, 18 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2020/05/18/design-constraints-of-an-application-based-on-aws-sqs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2020/05/18/design-constraints-of-an-application-based-on-aws-sqs.html</guid>
        
        
      </item>
    
      <item>
        <title>Finding a Domain for Your Side Project</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2670.jpeg&quot; alt=&quot;IMG_2670.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I would argue that even in the age of the app, a domain for your side project is still absolutely important.  Now, despite that, one of the truths of side projects is that your domain is important but you aren't going to be dogmatic about it in the way that a funded company approaches their naming.&lt;/p&gt;

&lt;p&gt;What I like to do for this is figure out possible options and then run with a multiple domain search service.  I'm playing around with a project which has a couple of possible related keywords in the domain:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;chat&lt;/li&gt;
  &lt;li&gt;sober&lt;/li&gt;
  &lt;li&gt;talk&lt;/li&gt;
  &lt;li&gt;safe&lt;/li&gt;
  &lt;li&gt;text&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This gave me a bunch of combinations:&lt;/p&gt;

&lt;p&gt;safechat.com safechat.io safetalk.com safetalk.io soberchat.com soberchat.io sobertalk.com sobertalk.io safetexts.com safetexts.io sobertexts.com sobertexts.io safetexting.com safetexts.io&lt;/p&gt;

&lt;p&gt;A quick trip to octopoly and their search engine:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://my.octopoly.nz/das/search/&quot;&gt;https://my.octopoly.nz/das/search/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;let me put in a bunch of these and find out which are available domains.  I didn't end up with exactly what I wanted but I did end up with a good enough domain which was sufficient to move forward – and that's generally enough for a side project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Octopoly&lt;/strong&gt;.  Absolutely recommended.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I'm sure there are other options out there and ones that do automatic suggestions, etc.  But the ones that I've seem are paid and none seem to work quite as well as Octopoly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Do not register your domains thru Octopoly, their costs are insane.  A .io domain is normally $39 when bought through AWS but it is $79 through Octopoly.  &lt;em&gt;Grumble&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 17 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/05/17/finding-a-domain-for-your-side-project.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/05/17/finding-a-domain-for-your-side-project.html</guid>
        
        <category>startup</category>
        
        <category>side_project</category>
        
        <category>sideproject</category>
        
        <category>marketing</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Simple Search and Replace in Ruby</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2674.jpeg&quot; alt=&quot;IMG_2674.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The other day I needed to take some regular expressions and convert them to strings.  And while executing a .to_s on the regular expression itself worked correctly it brought through the regular expression characters so there were things like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;covid[ -]19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where what I was looking for was just the &quot;covid19&quot; bit (I was generating hashtags from the matched regular expressions for the new &lt;a href=&quot;https://covidnearme.org/news&quot;&gt;CovidNearMe News Aggregator&lt;/a&gt;).  I started digging into the &lt;a href=&quot;https://apidock.com/ruby/String/&quot;&gt;Ruby string library&lt;/a&gt; and didn't find what I was looking for - a str_replace like command.  I also experimented a bit with &lt;a href=&quot;https://apidock.com/ruby/String/tr&quot;&gt;tr&lt;/a&gt; but that proved to be misleading at best.&lt;/p&gt;

&lt;p&gt;Not surprisingly, &lt;a href=&quot;https://stackoverflow.com/questions/13333116/how-do-i-search-and-replace-strings-not-regex-in-ruby&quot;&gt;Stack Overflow&lt;/a&gt; came to the rescue and the answer was blindingly simple:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use sub&lt;/li&gt;
  &lt;li&gt;Use gsub&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but &lt;strong&gt;don't&lt;/strong&gt; specify a pattern; just specify a &lt;strong&gt;string&lt;/strong&gt;.  If you don't have:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.gsub(/foo/,'bar')     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but instead&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.gsub('foo','bar')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this approach, you can then either use sub or gsub depending on how you need the search and replace executed.  This is a truly ruby-esque approach and one I should have anticipated.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/05/14/simple-search-and-replace-in-ruby.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/05/14/simple-search-and-replace-in-ruby.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Installing Jenkins on Ubuntu 18 on AWS</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2283.jpeg&quot; alt=&quot;IMG_2283.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jenkins is an Open Source CI / CD software program that you can easily install on an AWS instance.&lt;/p&gt;

&lt;p&gt;Here is how to install Jenkins:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install default-jre    
wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian-stable binary/ &amp;gt; /etc/apt/sources.list.d/jenkins.list'
sudo apt update
sudo apt install jenkins
sudo systemctl start jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are some additional useful commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are the next steps you need to follow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open a port in the AWS Security Group for your instance for port 8080 on  0.0.0.0/0 to allow http access to the Jenkins user interface.&lt;/li&gt;
  &lt;li&gt;Go to the instance's IP address at port 8080 to run through the Jenkins installation.&lt;/li&gt;
  &lt;li&gt;Confirm the Jenkins password per the instructions on screen.&lt;/li&gt;
  &lt;li&gt;Select the plugins that you need for your Jenkins installation.&lt;/li&gt;
  &lt;li&gt;Create your account and password.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-jenkins-on-ubuntu-18-04&quot;&gt;Installing Jenkins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-on-ubuntu-18-04#installing-specific-versions-of-openjdk&quot;&gt;Installing Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jenkins/2020/05/12/installing-jenkins-on-ubuntu-18.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jenkins/2020/05/12/installing-jenkins-on-ubuntu-18.html</guid>
        
        <category>jenkins</category>
        
        <category>linux</category>
        
        <category>ubuntu</category>
        
        
        <category>jenkins</category>
        
      </item>
    
      <item>
        <title>Installing Ansible on Ubuntu 18 on AWS</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2290.jpeg&quot; alt=&quot;IMG_2290.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ansible is an Open Source DevOps engine for systems configuration.  Here is the process for installing Ansible on Ubuntu 18 for AWS.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-add-repository ppa:ansible/ansible
sudo apt update
sudo apt install ansible
sudo apt install python-pip
pip install boto3 --user 
pip install boto --user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The commands pip install boto3 –user / pip install boto –user - you only need one of these.  Use boto3 if your Ansible installation is using python3 and boto if your Ansible is using python 2.x.&lt;/p&gt;

&lt;p&gt;As with a bunch of my shorter blog posts around installing software, this one is because I needed to install Ansible on a server for work and I figured that documenting it was likely useful (this is now the second time I've had to do it for this job and there will undoubtedly be a third).&lt;/p&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-ansible-on-ubuntu-18-04&quot;&gt;Installing Ansible on Ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://crunchify.com/how-to-install-boto3-and-set-amazon-keys-a-python-interface-to-amazon-web-services/&quot;&gt;Installing Boto on Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2020/05/12/installing-ansible-on-ubuntu-18.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2020/05/12/installing-ansible-on-ubuntu-18.html</guid>
        
        <category>ansible</category>
        
        <category>linux</category>
        
        <category>ubuntu</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Die URI.parse Die; Long Live the Zen of Addressable</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2628.jpeg&quot; alt=&quot;IMG_2628.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;URI.parse is a Ruby call I've written a thousand plus times.  The unfortunate reality of URI.parse is that it doesn't work when there are UTF-8 characters in the url.  The work around is the addressable gem.  So:&lt;/p&gt;

&lt;h2 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;addressable&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;example-usage&quot;&gt;Example Usage&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require 'addressable/uri'
url = 'http://www.example.com/wp content/uploads/2012/01/München.jpg'
parts = Addressable::URI.parse(url)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;[Stack Overflow] (https://stackoverflow.com/questions/9082732/how-can-i-extract-a-url-with-non-english-characters-from-a-string)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sporkmonger/addressable&quot;&gt;Home Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;shoutout&quot;&gt;Shoutout&lt;/h2&gt;

&lt;p&gt;I can't even think about URL parsing in Ruby / Elixir / JavaScript without mentioning &lt;a href=&quot;https://github.com/gamache/fuzzyurl.rb&quot;&gt;Gamache's FuzzyUrl library&lt;/a&gt;.  Highly, highly recommenderd.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/05/12/die-uri-parse-die-long-live-the-zen-of-addressable.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/05/12/die-uri-parse-die-long-live-the-zen-of-addressable.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Your Basic Rust Workflow For the Noobie Rustacean</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3270.jpeg&quot; alt=&quot;IMG_3270.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: The term Rustacean is the term for a &lt;a href=&quot;https://rustacean.net/&quot;&gt;developer who uses Rust&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Learning a new language isn't just syntax and keywords, it is tooling, people in the ecosystem to trust and follow, workflows and more.  For a particular project at my day job, I've hit the limits of Python and Ruby in terms of performance so I'm looking into Rust (the other suggested alternative is Elixir and that's tempting but Rust &quot;feels&quot; like a better match).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note  2&lt;/strong&gt;: The underlying need is for high performance (think C like performance) file processing.  I'm a firm believer in the power of languages and it is hard for me to conceive of starting a new project in 2020 in terms of C.  Hence the choice of Rust.  Go is theoretically another choice but Go's &quot;Nanny State&quot; approach to dependencies I find to be an extraordinary turn off.&lt;/p&gt;

&lt;p&gt;Here is the basic workflow for a noobie Rust developer:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: The project I'm creating is called &quot;datastreamer_to_sqs&quot;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new project with: &lt;strong&gt;cargo new datastreamer_to_sqs&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Change into the directory: &lt;strong&gt;cd datastreamer_to_sqs&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Edit the main.rs file: &lt;strong&gt;vi src/main.rs&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Edit the dependencies file: &lt;strong&gt;vi Cargo.toml&lt;/strong&gt; and add any crates (crates are Gems in the Ruby ecosystem and modules in the Python ecosystem)&lt;/li&gt;
  &lt;li&gt;Build it: &lt;strong&gt;cargo build&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Run it: &lt;strong&gt;cargo run&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-a-rust-projects-filesystem-looks-like&quot;&gt;What a Rust Project's Filesystem Looks Like&lt;/h2&gt;

&lt;p&gt;I'm a big believer in understanding how your tooling looks under the hood (such a big believer that I have a &lt;a href=&quot;https://www.youtube.com/watch?v=ZfgFKieFWgQ&amp;amp;t=12s&quot;&gt;52 minute Youtube lecture on your Rails directory structure&lt;/a&gt;).  Here is what your initial Rust project looks like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tree -d
.
├── src
└── target
    └── debug
        ├── build
        │   ├── bitflags-5286617fe4cbd497
        │   │   └── build_script_build-5286617fe4cbd497.dSYM
        │   │       └── Contents
        │   │           └── Resources
        │   │               └── DWARF
        │   ├── bitflags-6c9ee2bffe990008
        │   │   └── out
        │   ├── libc-a4b511fa588bdb61
        │   │   └── build_script_build-a4b511fa588bdb61.dSYM
        │   │       └── Contents
        │   │           └── Resources
        │   │               └── DWARF
        │   ├── libc-efb0751362c01003
        │   │   └── out
        │   ├── ryu-7d41145565b2c286
        │   │   └── build_script_build-7d41145565b2c286.dSYM
        │   │       └── Contents
        │   │           └── Resources
        │   │               └── DWARF
        │   ├── ryu-fb8024d4dae56f97
        │   │   └── out
        │   ├── serde-0a56bc622e5e711b
        │   │   └── out
        │   └── serde-cbedf66c03524f7e
        │       └── build_script_build-cbedf66c03524f7e.dSYM
        │           └── Contents
        │               └── Resources
        │                   └── DWARF
        ├── datastreamer_to_sqs.dSYM -&amp;gt; deps/datastreamer_to_sqs-a3353696ddf372df.dSYM
        ├── deps
        │   ├── datastreamer_to_sqs-6936248b823719d4.dSYM
        │   │   └── Contents
        │   │       └── Resources
        │   │           └── DWARF
        │   └── datastreamer_to_sqs-a3353696ddf372df.dSYM
        │       └── Contents
        │           └── Resources
        │               └── DWARF
        ├── examples
        └── incremental
            ├── datastreamer_to_sqs-2czos8oun4ynx
            │   ├── s-fn6jki8f4t-127088i-1mwkjufnu9gix
            │   └── s-fn6k88njhj-1u0uvuo-working
            └── datastreamer_to_sqs-qs761qw9768j
                └── s-fn6dhpfqbo-s6bz9f-248f3hvpx7dsy

49 directories
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html&quot;&gt;Dependencies / Cargo.toml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://doc.rust-lang.org/1.27.2/book/second-edition/ch14-04-installing-binaries.html&quot;&gt;Installing Binaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 08 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/05/08/your-basic-rust-workflow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/05/08/your-basic-rust-workflow.html</guid>
        
        <category>rust</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Using Netflix to Improve YouTube Uploading on Mobile</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2328.jpeg&quot; alt=&quot;IMG_2328.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a stupid trick but it seems to work.  I've been recording a lot of videos for my &lt;a href=&quot;https://www.youtube.com/channel/UCCdwAXIVgbaGYhMHuf-scZw?view_as=subscriber&quot;&gt;YouTube channel aka Dad on Rails&lt;/a&gt; and because my videos tend to be long, I've found that my phone turns itself off while the upload is going on.  Here's the work around:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My videos are automatically sync'd over to my iPad so I start by doing the upload from the ipad.&lt;/li&gt;
  &lt;li&gt;To keep the iPad from turning off but still have the upload going on as the foreground app, once the upload starts, launch Netflix and play anything but then command+tab back to the YouTube app.&lt;/li&gt;
  &lt;li&gt;This keeps the the video playing as &quot;picture in picture&quot;, the upload is now foregrounded and Netflix, even in picture in picture mode keeps your iPad from shutting down.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I know this feels convoluted (it certainly does to me) but it feels far, far better than trying to keep the phone alive by endlessly surfing my Facebook feed.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/youtube/2020/05/07/using-netflix-to-improve-youtube-uploading-on-mobile.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/youtube/2020/05/07/using-netflix-to-improve-youtube-uploading-on-mobile.html</guid>
        
        <category>youtube</category>
        
        <category>netflix</category>
        
        
        <category>youtube</category>
        
      </item>
    
      <item>
        <title>Six Tips on Inventing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2998.jpg&quot; alt=&quot;IMG_2998.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From Alan Adler, inventor of the Aeropress and the Aerobie flying ring courtesy of &lt;a href=&quot;https://priceonomics.com/the-invention-of-the-aeropress/&quot;&gt;Priceonomics&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Learn all you can about the science behind your invention.&lt;/li&gt;
  &lt;li&gt;Scrupulously study the existing state of your idea by looking at current products and patents.&lt;/li&gt;
  &lt;li&gt;Be willing to try things even if you aren't too confident they’ll work. Sometimes you’ll get lucky.&lt;/li&gt;
  &lt;li&gt;Try to be objective about the value of your invention. People get carried away with the thrill of inventing and waste good money pursuing something that doesn’t work any better than what’s already out there.&lt;/li&gt;
  &lt;li&gt;You don’t need a patent in order to sell an invention. A patent is not a business license; it’s a permission to be the sole maker of product (even this is limited to 20 years).&lt;/li&gt;
  &lt;li&gt;Tenacity is vital.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 05 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/inventing/2020/05/05/six-tips-on-inventing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/inventing/2020/05/05/six-tips-on-inventing.html</guid>
        
        <category>inventing</category>
        
        
        <category>inventing</category>
        
      </item>
    
      <item>
        <title>Adventures in Below Ground Plumbing - The Lift Pump</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3178.jpeg&quot; alt=&quot;IMG_3178.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've now owned a few different homes over the years but my current home is the first one with a bathroom that is below ground level (in a finished basement).  When you have a bathroom below ground level then your plumbing subsystem has to have a &quot;lift pump&quot;.  A lift pump system consists of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A sump in the floor where sewage (water / the other stuff) collects&lt;/li&gt;
  &lt;li&gt;A pump that lifts the sewage up to the ground level where it can flow into the street level outflow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A lift pump has a duty cycle of 8 to 10 years.  A lift pump has a replacement price of approximately $1,500 so these things are expensive.&lt;/p&gt;

&lt;h2 id=&quot;things-you-cant-flush-with-a-lift-pump&quot;&gt;Things You Can't Flush with a Lift Pump&lt;/h2&gt;

&lt;p&gt;You can't flush:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kitty Litter&lt;/li&gt;
  &lt;li&gt;Flushable Wipes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-know-when-you-have-a-problem-with-your-lift-pump&quot;&gt;How to Know When You Have a Problem with your Lift Pump&lt;/h2&gt;

&lt;p&gt;Here are three symptoms of failure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Smell&lt;/strong&gt;.  A bad lift pump reveals itself with a fairly rank odor in the lower region of the house centered around the machinery room where the lift pump is located.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leakage&lt;/strong&gt;.  Leakage from the sealed sump where the lift pump is located.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Noise&lt;/strong&gt;.  Many lift pump systems will have an alarm on them that beeps when there is an issue.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;two-ways-to-fix-a-difficult-lift-pump&quot;&gt;Two Ways to Fix a Difficult Lift Pump&lt;/h2&gt;

&lt;p&gt;There are at least two failure symptoms with a lift pump:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pump doesn't work at all (no noise when you power cycle it)&lt;/li&gt;
  &lt;li&gt;Pump works but you can't flush a toilet / have water backup / sump leakage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are two approaches to fixing the second:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Turn it off and let it sit for a number of days.  Just as a clogged toilet will magically &quot;fix&quot; itself when left alone, so too will a lift pump that is clogged.  The blockage often dissolves.&lt;/li&gt;
  &lt;li&gt;Lift the Vertical Pipe up and down and &quot;shake&quot; it.  The lift pump itself is directly coupled to the vertical pipe and if you lift it up and down / shaking it, you can often dislodge the blockage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank You&lt;/h2&gt;

&lt;p&gt;I learned all of this from David, a technician at Benjamin Franklin Plumbing who serviced my house today.  The $49 for the service call for him to tell me this much was much, much preferable to the $1500 fee for a new lift pump.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/home_ownership/2020/04/28/adventures-in-below-ground-plumbing-the-lift-pump.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/home_ownership/2020/04/28/adventures-in-below-ground-plumbing-the-lift-pump.html</guid>
        
        <category>home_ownership</category>
        
        <category>plumbing</category>
        
        
        <category>home_ownership</category>
        
      </item>
    
      <item>
        <title>How to Find the Latest Version of a File on OSX Using mdfind</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3178.jpeg&quot; alt=&quot;IMG_3178.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently wanted to find the latest version of a library I wrote and I started by using mdfind:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind -name select_page_parser.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then added xargs per this article:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind -name select_page_parser.rb -0 | xargs -0 ls -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 26 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/04/26/how-to-find-the-latest-version-of-a-file-on-osx-using-mdfind.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/04/26/how-to-find-the-latest-version-of-a-file-on-osx-using-mdfind.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Covid and Your Personal Bus Factor</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08924.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;In the world of software engineering, the term &lt;strong&gt;Bus Factor&lt;/strong&gt; refers to the number of people on your team that have to get hit by a bus for your project to collapse:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bus factor is a measurement of the risk resulting from information and capabilities not being shared among team members, derived from the phrase &quot;in case they get hit by a bus.&quot; It is also known as the bread truck scenario, lottery factor, truck factor, bus/truck number, or lorry factor.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am currently a part of a number of projects with a bus factor of 1.  This means that if I get hit by a bus things simply &lt;strong&gt;fall&lt;/strong&gt; apart.  Normally I don't worry about things like this because I'm in excellent health and I'm a careful person (and that is not to say that I'm invulnerable but at least professionally my clients accept that we have a bus factor of 1 because they must understand this issue).  But the world has changed around me and like everyone else I am struggling to catch up hence this bit of writing.&lt;/p&gt;

&lt;p&gt;Someone close to me, last night, had both a fever and an upset stomach (both of these are diagnostic factors of COVID-19) and I woke up in a panic thinking about bus factors in three contexts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Personal&lt;/li&gt;
  &lt;li&gt;Professional&lt;/li&gt;
  &lt;li&gt;Side Projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're not a tech nerd then you can only read the personal section; if you are a tech nerd then I advise that you read all sections.&lt;/p&gt;

&lt;h2 id=&quot;your-personal-bus-factors&quot;&gt;Your Personal Bus Factors&lt;/h2&gt;

&lt;p&gt;Your personal bus factors tend to be centered around matters of identity:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passwords&lt;/li&gt;
  &lt;li&gt;Pin Codes&lt;/li&gt;
  &lt;li&gt;Process&lt;/li&gt;
  &lt;li&gt;Medication Documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example - I don't know the password / pin code to my wife's phone or laptop.  If she gets sick then I have to still pay bills and deal with accounts.  And without access to that information, well, &lt;strong&gt;I'm fscked&lt;/strong&gt; (and thus so is the family hence my view of this as a bus factor).&lt;/p&gt;

&lt;p&gt;Now, given the sensitivity of the information on our phones and devices, having access to someone's phone password can be terrifying so I don't normally have an issue with not having access – but these aren't normal times.  Years ago when my wife brought this up to me about my work computers, I gave her all my passwords in written form in a sealed envelope and I suspect I now need to ask her for the same.  I only need this information if she gets sick so hopefully the envelope never needs to be opened.&lt;/p&gt;

&lt;p&gt;Along with passwords and pin codes in terms of a personal bus factor goes the &lt;strong&gt;process&lt;/strong&gt; by which things are done.  Due to personal choices regarding separation of responsibilities, I have literally no knowledge of how to pay our bills.  My wife is a wonderfully responsible human being who, years ago, got us entirely out of debt and so she took on the bill paying responsibilities.&lt;/p&gt;

&lt;p&gt;A final, unique aspect of the bus factor in today's world is documentation related to any medications that either you or people in your family take.  What's happening right now is people are getting sick and going into the hospital without anyone accompanying them – which is unprecedented.  And here's where the bus factor aspect comes into play – I have no understanding of what medications my wife takes (nor she of mine).  So the advice that you need is to, &lt;strong&gt;right now&lt;/strong&gt;, to write down, on paper, all the medical information and medications that you take.  Anything that you would want to tell a medical professional before they performed medicine on you.  Now this may sound silly but it actually isn't – my wife is deathly allergic to Penicillin – it almost killed her as a child.  If she fell ill then how does that get communicated to a doctor if I can't accompany her?  And, yes, that is something that I know but what are the odds that if this wasn't written down, today, that I remember that amidst the stress of a possible COVID-19 case.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If you have elderly parents, you likely need this information for them as well.  Ideally a power of attorney and / or knowing their desires should things go poorly would be good as well.  I hate, truly hate the last sentence I just wrote but the approximately 15% mortality rate among the elderly means that you need to deal with these difficult issues in advance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you haven't walked thought the &lt;a href=&quot;https://covidnearme.org/risk/welcome&quot;&gt;Covid Near Me's Risk Wizard&lt;/a&gt; then I'd recommend that you give that a shot as it is truly frightening and cites the appropriate medical sources.&lt;/p&gt;

&lt;h2 id=&quot;your-professional-life&quot;&gt;Your Professional Life&lt;/h2&gt;

&lt;p&gt;I am currently, as I have almost always been in my career, a technical lead on a poorly staffed project.  There are several aspects to bus factor on software projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Knowledge&lt;/li&gt;
  &lt;li&gt;DNS entries&lt;/li&gt;
  &lt;li&gt;AWS PEM files&lt;/li&gt;
  &lt;li&gt;SSH Public Keys&lt;/li&gt;
  &lt;li&gt;Shared Secrets / Passwords like account information, API keys&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: There are lots of aspects to bus factors in terms of a project; I've deliberately simplified this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: My first foray into professional computing was a sales funded company and, thus, &lt;strong&gt;poorly&lt;/strong&gt; staffed.  I got good, early on at doing much with very little and I've ended up following a path that always hewed towards interesting work albeit with resource constraints.&lt;/p&gt;

&lt;h3 id=&quot;knowledge&quot;&gt;Knowledge&lt;/h3&gt;

&lt;p&gt;If you are an organization and you have a single engineer on a project, well, I simply don't have much sympathy because you made an inherent organizational level decision that you are immune to bus factors.  Sigh.  But things to consider:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Build Processes&lt;/li&gt;
  &lt;li&gt;Deployment&lt;/li&gt;
  &lt;li&gt;How to Tackle Daily Tasks&lt;/li&gt;
  &lt;li&gt;What Happens at Year End (often times there are dependencies / manual tasks that need to happen tied to calendar year events)&lt;/li&gt;
  &lt;li&gt;System Architecture&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dns-entries&quot;&gt;DNS Entries&lt;/h3&gt;

&lt;p&gt;Ideally DNS entries are regarded as corporate assets and someone other than a lead engineer owns them.&lt;/p&gt;

&lt;h3 id=&quot;aws-pem-files&quot;&gt;AWS PEM Files&lt;/h3&gt;

&lt;p&gt;Note: Depending on how you structure security on AWS the following may or may not be true.  My current project is at the small scale, proof of concept stage so crucial steps like real IAM setup has not been done; doing that for real would obviate this section.&lt;/p&gt;

&lt;p&gt;When you create an instance on AWS, AWS issues you a &quot;.pem&quot; file which is a one time download that allows you to SSH into an instance.  The easiest way to avoid a bus factor issue here is to, &lt;strong&gt;securely&lt;/strong&gt;, provide it to at least one other team member.&lt;/p&gt;

&lt;p&gt;Note: Email is not secure.  If you deliver it via email then zip it and put a password on it.&lt;/p&gt;

&lt;h3 id=&quot;ssh-public-keys&quot;&gt;SSH Public Keys&lt;/h3&gt;

&lt;p&gt;AWS .pem files provide SSH access into an AWS instance.  But the world is larger than just AWS and classical systems administration techniques always work so another approach is to simply add another person's SSH public key into the authorized_keys file on each server.&lt;/p&gt;

&lt;h3 id=&quot;shared-secrets--passwords--resources&quot;&gt;Shared Secrets / Passwords / Resources&lt;/h3&gt;

&lt;p&gt;Given the prevalence of using third party services for almost any aspect of software development these days, you need to be really careful how accounts / api keys / resources are managed.  Here's an example on my current project:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We use the magnificent tool that is Uptime Robot for uptime monitoring (i.e. &quot;is the site currently running&quot;).&lt;/li&gt;
  &lt;li&gt;All those notifications, however, exist on my personal uptime robot account and all notifications go only to my phone.&lt;/li&gt;
  &lt;li&gt;If I leave the project all that disappears.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The answer as to why I used Uptime Robot and my personal account is simple – it was easy.  I don't have a credit card for organizational use so use of a paid tool wasn't simple (yes I could have begged for card credentials on someone else's card but that complicates everything and we don't really need uptime monitoring yet).  It was just easier to add this to my personal account.  And, yes, I do know better; ease of use tends to trump just about everything when people are busy.&lt;/p&gt;

&lt;h2 id=&quot;your-side-projects&quot;&gt;Your Side Projects&lt;/h2&gt;

&lt;p&gt;Side projects fall into a weird spectrum between personal and professional.  I can assure you that all of the above aspects of professional projects are currently being addressed for my side projects.&lt;/p&gt;

&lt;h2 id=&quot;im-available-for-consulting&quot;&gt;I'm Available for Consulting&lt;/h2&gt;

&lt;p&gt;As a senior IT professional with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Proven expertise in COVID-19 (see note below)&lt;/li&gt;
  &lt;li&gt;A strong understanding of bus factors&lt;/li&gt;
  &lt;li&gt;Experience implementing code around the &lt;a href=&quot;http://12factor.net/&quot;&gt;Twelve-Factor&lt;/a&gt; app methodology&lt;/li&gt;
  &lt;li&gt;Proven expertise around organizational IT risk&lt;/li&gt;
  &lt;li&gt;And the ability to &lt;strong&gt;talk&lt;/strong&gt; with your technical folks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am available for project level audits in this area.  Email me for information - fuzzygroup at gmail.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm the creator of &lt;a href=&quot;https://www.covidnearme.org/&quot;&gt;Covid Near Me&lt;/a&gt; and I've been thinking about how COVID affects everything since before March 10 when the site went live.  To date, Covid Near Me has racked up millions of page views.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/04/22/covid-and-your-personal-bus-factor.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/04/22/covid-and-your-personal-bus-factor.html</guid>
        
        <category>covid</category>
        
        <category>startup</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Taking Control of One's Workaholic Tendencies - The IT Anonymous Edition</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-21 17:45:40.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Please start by picturing a support group similar to Alcoholics Anonymous; Let's call it &lt;strong&gt;IT Anonymous&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A dingy room in a church somewhere&lt;/li&gt;
  &lt;li&gt;A coffee pot&lt;/li&gt;
  &lt;li&gt;Cookies or donuts&lt;/li&gt;
  &lt;li&gt;Chairs in a semi circle&lt;/li&gt;
  &lt;li&gt;A place for people to stand and address the group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We all know the drill - we've seen this scene a thousand times in movies or TV.  And then you see me stand and address the group:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi.  I'm Scott.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and the group responds with a chorus of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Scott!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then begins the confession:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;I … have a problem.  I need help!&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Tell us more&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I respond with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;I work in technology and I'm a workaholic.  Last week I, the throes of getting an MVP out the door, with a boss that has been asking me daily &lt;em&gt;Is It Done Yet?&lt;/em&gt; / &lt;em&gt;Got Anything for me to See?&lt;/em&gt;, I got it done by all the Gods and Goddesses but I slept less than 8 hours out of the final 72 – I delivered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And yes I was late but by 2 days.  But, at the end of our Weekly Agile Retrospective, I got to demo working code to our team.  This occurred at 2:55 pm on Friday at which point I was close to falling over tired.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And the reward for all this was to be scheduled into a 7 person Zoom meeting at 4:00 pm on a Friday to discuss AWS Services we use and AWS Key Handoff.  This was NOT an important thing that had to be done after successfully completing my goals.  And then, in a show of personal stupidity on my part, I noticed my boss was online Saturday night at midnight my time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And, in an effort to be a dutiful corporate solider, I, yes I'm a &lt;strong&gt;moron&lt;/strong&gt;, asked him &lt;em&gt;What epic should I start on on Monday morning?&lt;/em&gt;. My boss is three hours time offset from myself so this actually made some sense.  And I had, per his direction created epics for all the outstanding tasks that I was aware of.  I put them into Jira as I struggled mightily to get this MVP done.  And, rather than being told to complete one of my existing Epics, a new Epic was named on the spot and a series of requirements were delivered to me via &lt;strong&gt;slack messages&lt;/strong&gt;.  And then there was the fateful question: &lt;strong&gt;Can we get that done this week?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The group:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;shudders&lt;/em&gt; &lt;em&gt;amusement&lt;/em&gt; And what did you do Scott?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;my response:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I left my house in the wee hours when it was still dark, strapped a flashlight to my chest and walked through local nature preserve and I engaged in several hours of rage cleaning the forest.  I actually broke the day / night barrier, I was so enraged!  Here are some pics that I'm going to toss up on the projector:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3181.jpeg&quot; alt=&quot;IMG_3181.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3132.jpeg&quot; alt=&quot;IMG_3132.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3232.jpeg&quot; alt=&quot;IMG_3232.jpeg&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I need help from the group.  Suggestions:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the back, a tall bearded man speaks up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Those sound like requirements from the Ambien Walrus. If they're not in Jira, they don't exist. Sleep well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's a wonderful perspective but I live in the world of Small Tech (another essay to come soon) where that isn't an option.&lt;/p&gt;

&lt;p&gt;A beautiful redhead speaks up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;I think you should get yourself a Peavey to make lumberjacking easier&quot;.  And then, with a twinkle in her eye, she says &quot;Oh and you should call yourself LumberSnack; you're kind of cute.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A group discussion occurs and then, the magic of community solves this as another lovely red head speaks up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;You have a phone, do you not?  You must it is 2020.  Legally you are obligated to provide exactly 40 hours per week.  I get that life is crazy pants right now due to pandemic madness and lots of distractions on the home front but why not use the phone's count down timer to track your hours and then JUST FSCKING STOP when you hit 8 hours in the day?&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And with that I speak up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I resolve to &quot;I shall work no amount of time, per week, greater than 40 hours for this project. My wife, family, health and my sanity demand it.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 20 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/04/20/taking-control-of-one-s-workaholic-tendencie.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/04/20/taking-control-of-one-s-workaholic-tendencie.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Using Explain in Postgres</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03161.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;I've been a MySQL user professionally since 1999 when I abandoned the land of Windows NT server side development due to quality abomination that was Microsoft Site Server – &quot;sh&lt;/td&gt;
      &lt;td&gt;t, fsck, censored, censored, censored — if Microsoft's quality is this bad, I may as well not pay for software.&quot;  I can remember that moment with the crystal clear clarity of:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;a fog of comic book cursing that surrounded me as I worked in my attic garret like office&lt;/li&gt;
  &lt;li&gt;a sense of my life will never be the same again (Open Source to me has had the same type of impact on my life as meeting women that I have loved and having children and discovering Ruby)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ah yes but I digress with the lack of clarity of someone who has slept 8 hours in the past 72 but …&lt;/p&gt;

&lt;p&gt;Anyway - MySQL - I've been using &lt;strong&gt;explain&lt;/strong&gt; to analyze queries in MySQL for decades i.e.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;explain SELECT foo FROM bars WHERE expression a = b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, as of late, I've been using Postgres for many, many projects including &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;CovidNearMe&lt;/a&gt; and my professional day job at the ADL and I've been thinking that explain doesn't work because my database client has, for the first time in my life been graphical, Postico, not a raw terminal and I was never able to make explain work in Postico.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I just stinking tried this again and Postico has made a liar out of me.  Sigh.  Honest – explain didn't work like yesterday when I created this blog post.  Sigh.  Sleep deprivation impacts on cognition; perhaps I should not be driving a motor vehicle today …&lt;/p&gt;

&lt;p&gt;So the other day when I need to analyze a query and Google told met hat EXPLAIN was actually a thing, I got out the console and did this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql -U sjohnson -d covid_morbidity1_development
psql (11.5)
Type &quot;help&quot; for help.
covid_morbidity1_development=# EXPLAIN select max(date_created_at) from locations;
                          QUERY PLAN
----------------------------------------------------------------------
 Aggregate  (cost=3736.90..3736.91 rows=1 width=4)
   -&amp;gt;  Seq Scan on locations  (cost=0.00..3525.32 rows=84632 width=4)
(2 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I don't use Postgres enough to really understand this but it isn't showing me that an index is &lt;strong&gt;NOT&lt;/strong&gt; being used for the query and that's &lt;strong&gt;always&lt;/strong&gt;, &lt;strong&gt;always&lt;/strong&gt; bad.  So I added a simple index as per this example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    table.index [&quot;date_created_at&quot;], name: &quot;index_locations_on_date_created_at&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now we get:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ psql -U sjohnson -d covid_morbidity1_development
psql (11.5)
Type &quot;help&quot; for help.

covid_morbidity1_development=# EXPLAIN select max(date_created_at) from locations;
                                                              QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------------
 Result  (cost=0.36..0.37 rows=1 width=4)
   InitPlan 1 (returns $0)
     -&amp;gt;  Limit  (cost=0.29..0.36 rows=1 width=4)
           -&amp;gt;  Index Only Scan Backward using index_locations_on_date_created_at on locations  (cost=0.29..5992.46 rows=84633 width=4)
                 Index Cond: (date_created_at IS NOT NULL)
(5 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I can tell from this is that we're not dealing with a full table scan of 3736 row but instead a scan of 36 rows.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/04/17/using-explain-in-postgres.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/04/17/using-explain-in-postgres.html</guid>
        
        <category>postgres</category>
        
        <category>sql</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Python Kafka Basics</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01137.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is a starting point blog post where different things I learn about using Python Kafka will be documented.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-value-out-of-a-consumer-record&quot;&gt;Getting the Value out of a Consumer Record&lt;/h2&gt;

&lt;p&gt;The output of a Python Kafka call is a Consumer Record which is a &quot;set of named tuples (blah blah blah)&quot; where what you actually want is the value tuple.  This can be gotten with the .value attribute:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KafkaConsumer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KafkaConsumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'dimon_tcpdump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'zhg_group'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value_deserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bootstrap_servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'192.168.100.9:9092'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# this is what you actually want; 
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# process msg here
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38240515/how-to-fetch-a-field-in-consumerrecord&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/04/16/python-kafka-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/04/16/python-kafka-basics.html</guid>
        
        <category>kafka</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Rails Asset Pipeline Failures and Capistrano</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:33:06.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;One of the single worst parts of being a one man show on an engineering effort is that when you hit a serious snag, well, you're &lt;em&gt;fscked&lt;/em&gt;.  I'm at the death march phase of a project, that wonderful stage, where you're so far into it that you can see the end but it seemingly never arrives – like the speed of light, it feels like you can never quite get there.&lt;/p&gt;

&lt;p&gt;Pro Tip: At this stage being asked by your manager, on a continuous basis, &quot;anything that you can show me&quot; is not helpful.  It is actually an antipattern which simply slows the project by making the engineer feel even worse (yes I'm late and I can argue for scope creep, etc but I'll own it and I'm still late).&lt;/p&gt;

&lt;p&gt;Anyway I recently went through this with respect to getting a complex Rails code base deployed onto AWS.  I started with my usual deploy tool of HatchBox but nothing worked and it was in the wee hours, and over a weekend, when I had no right to expect timely technical support so I figured &quot;Ok I'll do a raw deploy with Capistrano&quot; – and then the cluster fsck began in earnest.&lt;/p&gt;

&lt;p&gt;One of the general rules of technology is that everything is a two edged sword and where you get something, you give something.  For example C gives outstanding performance and flexibility but it also can be a source of security issues, pointer bugs, buffer overflows, etc.  Similarly Rails, even today, gives you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;an unprecedentedly easy way to build web apps (provided you do it the Rails way)&lt;/li&gt;
  &lt;li&gt;but deployment of modern Rails apps can be one of the most cursing laden experiences I've ever had&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only easy way I've ever found to deploy Rails apps is HatchBox and HatchBox wasn't actually a good fit for this application due to particularly complex, multi language CI / CD requirements (4 different git repos spanning, today, two languages).  The real deployment approach is going to be a combination of Jenkins + Ansible that drive Capistrano plus some other deployment tools.&lt;/p&gt;

&lt;p&gt;But I digress and have now devolved into a large number of words, more words than I should.  And so …&lt;/p&gt;

&lt;h2 id=&quot;error-conditions-from-a-capistrano-deploy-that-claimed-to-go-correctly-but-didnt&quot;&gt;Error Conditions from a Capistrano Deploy that Claimed to Go Correctly but Didn't&lt;/h2&gt;

&lt;p&gt;Here's what I noticed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Everything in the application appeared GIANT on screen (this is a characteristic in modern web apps of a CSS failure)&lt;/li&gt;
  &lt;li&gt;Normally I'd assume an asset pipeline failure but I watched the asset pipeline build perfectly time after time&lt;/li&gt;
  &lt;li&gt;Capistrano ran correctly&lt;/li&gt;
  &lt;li&gt;When I followed a link to the CSS, I got a 500 error trying to access it.  Here is what the error said: &quot;500 Internal Server Error If you are the administrator of this website, then please read this web application's log file and/or the web server's log file to find out what went wrong.&quot;&lt;/li&gt;
  &lt;li&gt;Nothing in the production.log file – I mean nothing!  Over a decade plus in Rails and I've never seen the log files silent.&lt;/li&gt;
  &lt;li&gt;Nothing in the underlying NGINX error log / server log&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I described this to a personal colleague their reaction was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Holy hell, production-specific bug and no logs? That sounds like some inner circle of hell&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now my manager has been asking me on our daily stand ups for the last several days &quot;Any blockers?&quot; and my answer has been &quot;No&quot; and, honestly, that's true:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is not one person on the team with the requisite technical knowledge to assist in this&lt;/li&gt;
  &lt;li&gt;The effort of explaining this was not to my liking&lt;/li&gt;
  &lt;li&gt;I have over a decade of Rails experience and my failure to get a simple Capistrano deploy functioning was beyond humiliating.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so I did what I normally do with this type of problem; I put it aside and worked on other parts of the project as there was plenty of other work to accomplish.  Periodically I would come back to it and nibble away at different aspects of it.  So from one perspective I was entirely blocked on this and from another, it was just one more partially completed task.  And then today, working from a parking lot for a change of pace (yay COVID-19), I finally hit upon the solution:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The last stage in a deploy via Capistrano has to be to restart the underlying NGINX (I'm using Passenger) web server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Normally the Capistrano gem does this if you have the Capistrano/Passenger extension loaded.  My guess is that this is weirdness related to Rails 6 although maybe I have a configuration issues (Capistrano is complex enough that I will freely admit that I may have made an error).&lt;/p&gt;

&lt;h2 id=&quot;restarting-passenger-via-capistrano&quot;&gt;Restarting Passenger via Capistrano&lt;/h2&gt;

&lt;p&gt;Passenger, the web server level Ruby extension that drives a Rails site, looks for the file restart.txt in the tmp directory underneath your web root.  I could have tried to figure out whether or not Capistrano was perhaps putting it in the wrong place but the easier approach was to simply extend Capistrano itself using a post deploy hook.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# put this line in config/deploy/production.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deploy:publishing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deploy:restart_passenger'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# put this file in lib/capistrano/tasks/restart_passenger.rake&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deploy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:restart_passenger&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;in: :sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;wait: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# VERSION 1 -- The way you want to write this:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#upload! File.join(Rails.root, '/bin/restart.text'), &quot;/home/ubuntu/ohi/current/tmp/restart.txt&quot;&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;# VERSION 2 -- The way that you have to write this:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;upload!&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/Users/sjohnson/Sync/fuzzygroup/adl/ohi_kafka/ohi/bin/restart.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/home/ubuntu/ohi/current/tmp/restart.txt&quot;&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;# VERSION 3 -- The way you debug this when figuring this out&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# `scp -i ~/Downloads/adl_fuzzygroup2.pem /Users/sjohnson/Sync/fuzzygroup/adl/ohi_kafka/ohi/bin/restart.txt ubuntu@3.134.253.53:/home/ubuntu/ohi/current/tmp/restart.txt`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You'll notice that there are &lt;strong&gt;three&lt;/strong&gt; different versions of this.  One of the issues with Capistrano extensions is that they run OUTSIDE of Rails itself so the normal magic that is Rails.root &lt;strong&gt;does not&lt;/strong&gt; exist.  And, yes, there are ways to construct the correct path but I simply didn't have the time so I ticketed the issue in Jira and moved on.  On a historical note, I remember encountering this back in August of 2018 so there's that …&lt;/p&gt;

&lt;h2 id=&quot;the-moral-of-the-story&quot;&gt;The Moral of the Story&lt;/h2&gt;

&lt;p&gt;Here's the moral of the story:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your asset pipeline can build perfectly but NOT actually be usable&lt;/li&gt;
  &lt;li&gt;Make absolutely certain that your web server restarts AFTER the asset pipeline builds&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/capistrano/&quot;&gt;Capistrano&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/capistrano/passenger&quot;&gt;Capistrano Passenger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11269935/rails-500-error-application-css-isnt-precompiled&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 14 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/04/14/rails-asset-pipeline-failures-and-capistrano.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/04/14/rails-asset-pipeline-failures-and-capistrano.html</guid>
        
        <category>rails</category>
        
        <category>deploy</category>
        
        <category>capistrano</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>YES YES YES - Importing Constants from Python to Ruby at Execution Time</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3001.jpeg&quot; alt=&quot;IMG_3001.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is going to fall into the category of &quot;Dancing Bear&quot; coding in that it isn't how well it works or how elegant it is, it is that it, like the bear, dances at all.  Here's the problem.&lt;/p&gt;

&lt;p&gt;Three code bases that live in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ohi_kafka/experts-all (python)&lt;/li&gt;
  &lt;li&gt;ohi_kafka/loader_reddit_to_kafka (ruby)&lt;/li&gt;
  &lt;li&gt;ohi_kafka/loader_twitter_to_kafka (ruby)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a series of code modules that define array of regular expressions in a constant always named REGEXES that live in files named like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;common_invective_anti_semitism.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_black.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_lgbtq.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_islam.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_woman.py&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A discussion of why the naming conventions here are this way and why lgbtq is lumped here as one thing is beyond the scope of this blog post (I personally disagree with that but I lost that argument months ago; sorry).&lt;/p&gt;

&lt;p&gt;These regexes need to be run both in the context of the python code base and the ruby code base.  These regexes are defined as arrays of strings such as:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;REGEXES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;'Bar'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The magic in making this work is really, really, really understanding your deployment context, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;all code will be deployed on the same machine (it will execute across multiple machines) but since I control deploy, I can ensure that the full code stack is present&lt;/li&gt;
  &lt;li&gt;no Docker for the ruby portion - just pretty vanilla Ruby code executing on a server as a SystemD service&lt;/li&gt;
  &lt;li&gt;Being tricksy, very, very tricksy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My first attempt to make this work was to try and use an extension with both require and require_relative:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/common_invective_anti_semitism.py&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libexec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`block in &amp;lt;top (required)&amp;gt;'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:24:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `start'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`dispatch'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor.rb:399:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`run'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:476:in `&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `run'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`kernel_load'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&amp;lt;top (required)&amp;gt;'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`load'
        3: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/irb-1.2.1/exe/irb:11:in `&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        2: from (irb):1
        1: from (irb):1:in `require'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that was clearly a miserable and abject horror show way to start my morning.  The next up was to eliminate the extension and see, while tearing up with laughter, if it would work:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/common_invective_anti_semitism&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`start'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:30:in `dispatch'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;399&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`dispatch'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoke_command&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;476&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`exec'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `kernel_load'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`load'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `load'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&amp;lt;top (required)&amp;gt;'
        3: from (irb):2
        2: from (irb):3:in `&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;irb_binding&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        1: from (irb):3:in `require_relative'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Apparently require() specifically looks for .rb and .so and .dll extensions.  Sigh / insert a censored verbal expression that I should not say out loud while my wife is sleeping as I write this up.&lt;/p&gt;

&lt;p&gt;And this was the step back moment where I thought about other mechanisms like loading the file as a string and then evaluating it with eval.  And, yes, that would have worked but runtime evals are almost always bad practices. And then I thought &quot;what about trying load() instead of require()&quot;.  The difference between load() and require() is that a require happens only once per code execution but a load() can happen multiple times.  And since I know a lot about how coders work, my thinking was that perhaps the implementer of load() didn't check for an extension.  Here's my test code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/common_invective_anti_black.py&quot;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fuzzygroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ohi_kafka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common_invective_anti_black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;warning: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REGEXES&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fuzzygroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ohi_kafka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common_invective_anti_semitism&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;warning: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;definition&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REGEXES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;here&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REGEXES&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These regexes are to detect invective for hate speech so I've omitted them here because they are beyond offensive (and proprietary to my day job).&lt;/p&gt;

&lt;p&gt;And that's my solution -&lt;/p&gt;

&lt;h2 id=&quot;changes-to-the-python-side-of-the-house&quot;&gt;Changes to the Python Side of the House&lt;/h2&gt;

&lt;p&gt;Happily there were only three changes that had to be made to the python side of the house:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Restructure the constants from an array of strings at the top of the python script that used them to the new common_invective_whatever.py file.&lt;/li&gt;
  &lt;li&gt;Change their name from REGEXES to REGEXES_WHATEVER since at the Ruby layer I will have all of them operating at the same time and you shouldn't redeclare the same constant multiple times; they are CONSTANTS!&lt;/li&gt;
  &lt;li&gt;Add an import mechanism that brings in the constant from a file i.e. &quot;from common_invective_anti_WHATEVER import *&quot;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;commentary&quot;&gt;Commentary&lt;/h2&gt;

&lt;p&gt;I ran an early draft of this by an old friend, &lt;a href=&quot;https://www.markbernstein.org&quot;&gt;Mark Bernstein&lt;/a&gt;, the author of &lt;a href=&quot;https://www.eastgate.com/Tinderbox/&quot;&gt;Tinderbox&lt;/a&gt; and an extraordinarily experienced software engineer.  He started with a blindingly obvious question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why didn't you move the regular expressions from code to data i.e. lists of strings that could be included dynamically in the code base?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The reason for this was that I had just moved these regexes from data to code to eliminate the need for file i/o at runtime for better performance.&lt;/p&gt;

&lt;p&gt;Mark continued with a question about why we are using regexes instead of neural networks and the answer is that we are actually using neural networks (specifically &lt;a href=&quot;https://en.wikipedia.org/wiki/BERT_(language_model)&quot;&gt;bert&lt;/a&gt;).  We simply are also using regexes as an additional tool.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-what-if-load-didnt-work-for-me&quot;&gt;Sidebar: What if load() didn't work for me?&lt;/h2&gt;

&lt;p&gt;As you read through this you are likely thinking &quot;wow – if load checked the file extension then Scott was &lt;strong&gt;screwed&lt;/strong&gt;&quot;.  And, well, &lt;em&gt;no&lt;/em&gt;.  My backup plan was actually pretty simple and involved writing a method that did this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# rough psuedo code since I didn't actually have to do this&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load_regexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;base_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;sb&quot;&gt;`cp ../experts-all/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt; ../experts-all/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;.rb`&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.rb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yep - I would have gotten around this by just stripping the extension and then copying it to a .rb file and then requiring that.&lt;/p&gt;

&lt;h2 id=&quot;conclusion---its-all-about-perspective&quot;&gt;Conclusion - Its All About Perspective&lt;/h2&gt;

&lt;p&gt;When you read a blog post like this you could marvel at the Rube Goldberg machinations and argue whether this was good or bad.  And I myself often do wonder a bit.  But I started from three things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Dry or &quot;Do Not Repeat Yourself&quot;.  &lt;a href=&quot;https://twitter.com/dhh&quot;&gt;DHH&lt;/a&gt; while he wasn't the first to utter this has been a stalwart proponent of this and it has proved, generally, to be a solid engineering principle.  Every single time you have the same code in multiple places, well, we all know that's a shite show waiting to happen.  And duplicating constants, even across languages, is just plain awful.&lt;/li&gt;
  &lt;li&gt;Ruby and Python happily share the same core array syntax.  This meant, to me, that it was &lt;em&gt;reasonable&lt;/em&gt; to find a way to make them co-exist.&lt;/li&gt;
  &lt;li&gt;This wasn't a hard concept and it should, if you took the time to understand the problem, be achievable in a reasonable amount of time.  I actually solved this in far less time than it took to write this blog post. But, and this is important, systems have long life spans.  Someone who maintains this system will come after me and need to understand why I took this route and this blog post will make that possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Point #3 above, to me, reflects the difference between having literally decades of software engineering experience and perspective (I've been writing code now since '81 when I got my first computer) and being a more junior person.  As a junior engineer, I'd have simply waved my hands in the air and duplicated the data.  Now I can see that while there are only 5 files of regular expressions now, moving forward there will be N files and their contents will constantly change.  This approach means the only &lt;strong&gt;real&lt;/strong&gt; coupling between Ruby and Python needs to be updating the lists of files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Because Python and Ruby both use # to indicate comments, I'll be adding comments to the top of the constant files to indicate the need for this coupling.&lt;/p&gt;

&lt;p&gt;And, in closing, do you now see why I described this blog post as a dancing bear?  The dancing wasn't pretty but I made it dance.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rubylearning.com/satishtalim/including_other_files_in_ruby.html&quot;&gt;Ruby Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thoughtco.com/requre-method-2908199&quot;&gt;ThoughtCo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/rubycademy/requiring-a-file-or-library-in-ruby-29f99e5e2c6a&quot;&gt;RubyCademy on Require&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/rubycademy/loading-a-file-in-ruby-51463a1c6c7e&quot;&gt;RubyCademy on Load&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6343330/importing-a-long-list-of-constants-to-a-python-file&quot;&gt;Stack Overflow in Python Imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 09 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/04/09/yes-yes-yes-importing-constants-from-python-to-ruby-at-execution-time.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/04/09/yes-yes-yes-importing-constants-from-python-to-ruby-at-execution-time.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        <category>adl</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>The Two AWS RDS Postgres Errors I Always Make</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2997.jpg&quot; alt=&quot;IMG_2997.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You know that awful feeling of &lt;strong&gt;personal stupidity&lt;/strong&gt; when you consistently make the same mistake time after time?  Well my approach to addressing that is to document said mistakes, here, each time I make them. Sometimes I take the approach of admitting to them and sometimes I take the approach of just writing them as a blog post.&lt;/p&gt;

&lt;p&gt;There are two errors, nay three, I make almost every single time I create an RDS postgres instance and I thought &quot;maybe it is time to write them down and (hopefully) curse less&quot; the next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I wrote this as a text post with pictures below so that the quick answers appear first before a whole bunch of screenshots.&lt;/p&gt;

&lt;h2 id=&quot;error-1-not-creating-the-database-when-you-create-the-database-server&quot;&gt;Error 1: Not Creating the Database When you Create the Database Server&lt;/h2&gt;

&lt;p&gt;When you create a &quot;database&quot; on RDS you are actually creating a database server on which you &lt;strong&gt;then&lt;/strong&gt; create the database itself.  Now the core issue here is that AWS makes it very hard, at least when you are making a Postgres database to create that database later.  I'm sure there is a way but, yesterday, in a few hours of messing with this, I never found it.  What I had to do was drop my database server and walk through the creation process again, finally finding it nested away in an expandable section of the user interface.&lt;/p&gt;

&lt;p&gt;When you are walking through the &quot;Create Database&quot; form, there is a final section called &quot;Additional Configuration&quot;.   If you expand this then the very first option is &quot;Initial Database Name&quot; along with the &lt;em&gt;helpful&lt;/em&gt; message:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you do not specify a database name, Amazon RDS does not create a database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Groan.  Keep in mind that this whole feature starts on a web page titled &quot;Create Database&quot; (but the default is to NOT create a database).&lt;/p&gt;

&lt;h2 id=&quot;error-2-not-putting-the-database-server-in-the-same-vpc&quot;&gt;Error 2: Not Putting the Database Server in the Same VPC&lt;/h2&gt;

&lt;p&gt;Generally speaking most of us tend to use a single VPC (virtual private cloud) for our AWS boxes.  Despite this it is not guaranteed that your database server ends up in the same VPC as your other boxes unless you explicitly specify this.&lt;/p&gt;

&lt;h2 id=&quot;error-3-not-putting-the-database-in-the-same-security-group&quot;&gt;Error 3: Not Putting the Database in the Same Security Group&lt;/h2&gt;

&lt;p&gt;This one is just as significant as Error #1 – unless you have your database in the same security group as your other boxes, it can't be easily accessed (if accessed at all).  Make sure that you delete the default security group and then put the security group that you use for your other boxes (the ones that need to access the database) here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I use a highly simplistic approach to AWS security groups.  If you find the paragraph above laughable, well, yes.&lt;/p&gt;

&lt;h2 id=&quot;screenshots-from-the-aws-rds-creation-process&quot;&gt;Screenshots from the AWS RDS Creation Process&lt;/h2&gt;

&lt;p&gt;Shown below are a handful of screenshots from this process.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_01.png&quot; alt=&quot;aws_rds_01.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_02_vpc.png&quot; alt=&quot;aws_rds_02_vpc.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_03_security_group.png&quot; alt=&quot;aws_rds_03_security_group.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_04_additional_configuration_01.png&quot; alt=&quot;aws_rds_04_additional_configuration_01.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_05_additional_configuration_02_database_name.png&quot; alt=&quot;aws_rds_05_additional_configuration_02_database_name.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/04/08/the-two-aws-rds-postgres-errors-i-always-make.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/04/08/the-two-aws-rds-postgres-errors-i-always-make.html</guid>
        
        <category>aws</category>
        
        <category>rds</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>PG ConnectionBad (could not connect to server No such file or directory)</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2993.jpeg&quot; alt=&quot;IMG_2993.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've recently had the situation where my personal development box (OSX Mojave, Rails, Postgres) has become unstable with, at times, multiple crashes per day.  I logged in this morning and found myself getting errors like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PG::ConnectionBad (could not connect to server: No such file or directory)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I did some digging and even though Postgres appeared to be running to brew, it was a false positive due to a leftover postmaster.pd file.  Here was the fix:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;First make sure that postgres isn't running use ps i.e. **ps auwwx&lt;/td&gt;
          &lt;td&gt;grep post**.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Delete the file: /usr/local/var/postgres/postmaster.pid i.e. &lt;strong&gt;rm /usr/local/var/postgres/postmaster.pid&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;At this point brew will, foolishly and oddly, still think Postgres is running so do do a &lt;strong&gt;brew restart postgres&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a handy &lt;a href=&quot;https://stackoverflow.com/questions/13573204/psql-could-not-connect-to-server-no-such-file-or-directory-mac-os-x&quot;&gt;Stack Overflow reference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make absolutely sure that postgres is NOT running before you delete postmaster.pid or you risk serious database corruption / data loss.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/04/08/pg-connectionbad-could-not-connect-to-server-no-such-file-or-directory.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/04/08/pg-connectionbad-could-not-connect-to-server-no-such-file-or-directory.html</guid>
        
        <category>postgres</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Covid-19 - Good News, Bad News or the Weekend?</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01531.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I noticed an interesting thing yesterday – the number of COVID-19 cases fell in New York and I was curious (the number on the right is the number of new cases).  Here's what I saw:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/covid_monday.png&quot; alt=&quot;covid_monday.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What I was curious about was whether this was a reporting issue due to, perhaps, less testing on Sundays or an actual improvement in things.  What I realized was that the lack of a day indicator i.e. &quot;Monday&quot; versus 2020/04/06 made this hard.  A quick tweak to my DateCommon library and we get this display:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/covid_monday_large.png&quot; alt=&quot;covid_monday_large.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While there isn't a ton of data to draw a conclusion from, I can see that we have now seen, for two weeks running, fewer cases on Monday and then an increase on Tuesday.  So, unfortunately, I &lt;strong&gt;don't think&lt;/strong&gt; we're seeing an improvement.  And this is backed up by &lt;a href=&quot;https://link.medium.com/Is1vWsvAu5&quot;&gt;Roy Britt's article on Medium&lt;/a&gt; (published just 3 days ago).&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/04/07/covid-19-good-news-bad-news-or-the-weekend.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/04/07/covid-19-good-news-bad-news-or-the-weekend.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>Upgrading Python and Pip and VirtualEnv on Ubuntu</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01152.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I found myself this morning trying to get a Python stack running on an Ubuntu instance only to hit this crap:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing collected packages: numpy, pytz, six, python-dateutil, pandas, nltk, pyparsing, cycler, kiwisolver, matplotlib, kafka-python, pyyaml, murmurhash, zipp, importlib-metadata, catalogue, plac, tqdm, setuptools, srsly, cymem, preshed, blis, wasabi, thinc, idna, urllib3, certifi, chardet, requests, spacy, pluggy, attrs, py, more-itertools, wcwidth, packaging, pytest, langdetect, spacy-langdetect, editorconfig, jsbeautifier, docutils, jmespath, botocore, s3transfer, boto3, torch, dataclasses, tokenizers, click, joblib, regex, sacremoses, filelock, sentencepiece, transformers, scipy, scikit-learn, gunicorn, WebOb, firefly-python, pycparser, cffi, zstandard, lefthook, termcolor, fire, redis, sseclient, absl-py, protobuf, markdown, pyasn1, pyasn1-modules, cachetools, rsa, google-auth, tensorboard-plugin-wit, werkzeug, grpcio, wheel, oauthlib, requests-oauthlib, google-auth-oauthlib, tensorboard, future, pytorch-lightning
Segmentation fault (core dumped)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I guess it is time to do the Python upgrade dance.  Here you go:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip3 install --upgrade pip
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
sudo apt-get install python3.7
sudo pip3 install --upgrade virtualenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;stack-overflow-references&quot;&gt;Stack Overflow References&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38613316/how-to-upgrade-pip3&quot;&gt;Pip upgrade&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/1086649/how-to-update-python-to-the-latest-version-on-ubuntu-18-04&quot;&gt;Python Upgrade&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 03 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/04/03/upgrading-python-and-pip-on-ubuntu.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/04/03/upgrading-python-and-pip-on-ubuntu.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Adding Chartkick to a Rails 6 App - Things I Always Forget</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2666.jpeg&quot; alt=&quot;IMG_2666.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chartkick.com/&quot;&gt;Chartkick&lt;/a&gt; is the charting engine that I've used for a bunch of years.  When you use Chartkick on a Rails 6 app, here are some gotchas:&lt;/p&gt;

&lt;h2 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'chartkick'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;command-line&quot;&gt;Command Line&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
yarn add chartkick chart.js
yarn install --check-files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;add-to-applicationjs&quot;&gt;Add to application.js&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require(&quot;chartkick&quot;)
require(&quot;chart.js&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 02 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/04/02/adding-chartkick-to-a-rails-6-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/04/02/adding-chartkick-to-a-rails-6-app.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>send.firefox.com rocks</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8510.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;If you have to send a large file to an individual, use:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;_posts/2020-03-28-send-firefox-com-rocks.md&quot;&gt;https://send.firefox.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is brilliantly simple, easy to use and powerful.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/firefox/2020/03/28/send-firefox-com-rocks.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/firefox/2020/03/28/send-firefox-com-rocks.html</guid>
        
        <category>firefox</category>
        
        <category>large_files</category>
        
        
        <category>firefox</category>
        
      </item>
    
      <item>
        <title>Having Hatchbox Redirect All http Sites it Manages to https</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01292.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;When you are using hatchbox and SSL in cluster mode you end up with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a load balanced cluster&lt;/li&gt;
  &lt;li&gt;that uses nginx as the load balancer&lt;/li&gt;
  &lt;li&gt;and nginx on each web node&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes it hard to understand where the http to https redirect goes.  The answer is that you need to but this on the load balancer and here's a code snippet:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server_name _;
return 301 https://$host$request_uri;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This gets set as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into Hatchbox.io&lt;/li&gt;
  &lt;li&gt;Go into your app.&lt;/li&gt;
  &lt;li&gt;Go to Advanced.&lt;/li&gt;
  &lt;li&gt;Select Nginx Configuration from the drop down menu&lt;/li&gt;
  &lt;li&gt;Select the Load Balancer tab.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add these changes below the &lt;strong&gt;listen [::]:80;&lt;/strong&gt; directive and then do a deploy.&lt;/p&gt;

&lt;p&gt;For reference, you can see &lt;a href=&quot;https://linuxize.com/post/redirect-http-to-https-in-nginx/&quot;&gt;linuxize&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/hatchbox/2020/03/28/having-hatchbox-redirect-all-http-sites-it-manages-to-https.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/hatchbox/2020/03/28/having-hatchbox-redirect-all-http-sites-it-manages-to-https.html</guid>
        
        <category>hatchbox</category>
        
        <category>https</category>
        
        
        <category>hatchbox</category>
        
      </item>
    
      <item>
        <title>ruby invalid option dash colon Or When Ruby Goes Insane in the Brain</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8513.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is a short one but a weird one.  My main box rebooted today and when I went to create a blog post, I got this madness:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ jekyll post &quot;A Social Media Marketing Strategy that Mom Would Approve&quot;
ruby: invalid option -:  (-h will show valid options) (RuntimeError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In all my years of ruby, I've &lt;em&gt;never&lt;/em&gt; seen &lt;strong&gt;-:&lt;/strong&gt;.   All the normal jiggery pokery of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;which ruby&lt;/li&gt;
  &lt;li&gt;rvm list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;etc failed to give me any insights.  I finally found the answer on an obscure &lt;a href=&quot;https://github.com/asdf-vm/asdf-ruby/issues/154&quot;&gt;Github issue&lt;/a&gt; that said &quot;unset RUBYOPT&quot; so:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ unset RUBYOPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that gave me back:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;blog on  gh-pages [🤷‍] via 💎 v2.3.1 on ☁️  us-west-2 
❯ ruby --version
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin16]

blog on  gh-pages [🤷‍] via 💎 v2.3.1 on ☁️  us-west-2 
❯ jekyll post &quot;A Social Marketing Strategy that Mom Would Approve&quot;
New post created at _posts/2020-03-24-a-social-marketing-strategy-that-mom-would-approve.md.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now, once again, I can (joyfully) write!&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/03/24/ruby-invalid-option-or-when-ruby-goes-insane-in-the-brain.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/03/24/ruby-invalid-option-or-when-ruby-goes-insane-in-the-brain.html</guid>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>A Social Marketing Strategy that Mom Would Approve</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC09082.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;There are a lot of times in life when I don't know what to do and so I ask myself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WWMD?  This is also known as &lt;em&gt;What Would Mom Do&lt;/em&gt;?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, when confronted with the question of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How should social media marketing be handled for a new website focused on COVID-19?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I thought &quot;What would Mom do?&quot; and I came up with the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mom would tell people when there is something new on the web site in the same way that Mom always told people when something new was going on with her kids.&lt;/li&gt;
  &lt;li&gt;Mom would say Thank You when appropriate.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;telling-people-about-something-new&quot;&gt;Telling People About Something New&lt;/h2&gt;

&lt;p&gt;The first aspect of telling people about something new is that when something changes, you let them know.  Yesterday, for example, we redesigned the entire &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;covidnearme.org&lt;/a&gt; site and added a bunch of new features so I would argue for making social media posts to different sites like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twitter - screen shot and a short message &quot;Major changes - blah, blah&quot;&lt;/li&gt;
  &lt;li&gt;Facebook - much the same&lt;/li&gt;
  &lt;li&gt;Instagram - a series of screenshots&lt;/li&gt;
  &lt;li&gt;Youtube - a short video talking about the home page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After doing that on Day 1 then I would follow that up with a set of posts about each individual feature such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Risk wizard&lt;/li&gt;
  &lt;li&gt;Symptom tracker&lt;/li&gt;
  &lt;li&gt;Hospital Experience&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;saying-thank-you&quot;&gt;Saying Thank You&lt;/h2&gt;

&lt;p&gt;The next thing that I would do is I would use good manners and say thank you to the different technology providers that we use to make the site.  Here's an example tweet that I made a few weeks ago:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I could not have built this as quickly without the awesome that is Jumpstart. Full tech stack and thank yous in &lt;a href=&quot;https://twitter.com/fuzzygroup/status/1239961412224589827&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you see the &lt;a href=&quot;https://covidnearme.org/powered_by&quot;&gt;Powered By page&lt;/a&gt; on CovidNearMe, you could take each of the text blocks and make a tweet or other social media post from that text and that image.  The important thing here is to cc / @ mention / # hash tag someone associated with the product.  For example if you were making a post thanking the HoneyBadger product, it would be good to include @honeybadgerapp with the tweet.  The idea of referencing the creator of the product is that it gives them an incentive to retweet / share this with their audience.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/marketing/2020/03/24/a-social-marketing-strategy-that-mom-would-approve.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/marketing/2020/03/24/a-social-marketing-strategy-that-mom-would-approve.html</guid>
        
        <category>marketing</category>
        
        <category>covidnearme</category>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Deploying a Rails App Using HatchBox onto Google Cloud Platform</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01806.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This blog post is a quickie where I document how I deployed CovidNearMe onto Google Cloud Platform or GCP using &lt;a href=&quot;https://www.hatchbox.io&quot;&gt;HatchBox.io&lt;/a&gt;.  I need to start by giving a huge shout out to &lt;strong&gt;Tony Carnevale&lt;/strong&gt; from Google who went above and beyond in providing outstanding support.&lt;/p&gt;

&lt;p&gt;Here are the stages.&lt;/p&gt;

&lt;h2 id=&quot;stage-1-create-a-cluster&quot;&gt;Stage 1: Create a Cluster&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Even a single machine is considered a cluster.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://www.hatchbox.io&quot;&gt;HatchBox.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Login with your account.&lt;/li&gt;
  &lt;li&gt;Click on Clusters and define a &lt;a href=&quot;https://www.hatchbox.io/clusters/new&quot;&gt;New Cluster&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Name the cluster &lt;strong&gt;GCP Covid Near Me&lt;/strong&gt; (or that's what I did).&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Somewhere Else&lt;/strong&gt; as the hosting provider.&lt;/li&gt;
  &lt;li&gt;Select the &lt;strong&gt;Everything on a Single Server&lt;/strong&gt; option.&lt;/li&gt;
  &lt;li&gt;If you are using the GCP Cloud SQL (postgresql) and GCP Redis then remove these options from the Roles list.&lt;/li&gt;
  &lt;li&gt;Enter the IP address under public ip.&lt;/li&gt;
  &lt;li&gt;Set the private IP to 127.0.0.&lt;/li&gt;
  &lt;li&gt;There appears to be a bug where you can't provision the server unless a local redis installation is selected so add it back.&lt;/li&gt;
  &lt;li&gt;Click provision the server and you will be given an SSH command to run as root on the box.  You SSH in, do a sudo su, execute the command and exit out&lt;/li&gt;
  &lt;li&gt;You click Test / Provision (I forget which) and your server will be flawlessly setup.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;stage-2-create-an-app-on-the-cluster&quot;&gt;Stage 2: Create an App on the Cluster&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Click on &lt;a href=&quot;https://www.hatchbox.io/apps&quot;&gt;Apps&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Click on &lt;a href=&quot;https://www.hatchbox.io/apps/new&quot;&gt;Create a New App&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Choose the cluster from the drop down list.&lt;/li&gt;
  &lt;li&gt;Click on your git repo host.&lt;/li&gt;
  &lt;li&gt;Set the name of your application (I like to include the name of the cluster with the app name since this app is already deployed to digital ocean).&lt;/li&gt;
  &lt;li&gt;Enter the name of the repo (easily find this from .git/config in your Rails root directory).&lt;/li&gt;
  &lt;li&gt;Set external host for the database if you are using Google's Cloud SQL.  This means that you need to  define a postgres configuration url.  The format for this url is this: &lt;strong&gt;postgresql://user:password@databasehost.com/database&lt;/strong&gt;.  You simply need to replace user with your username, password with your password, databasehost.com with your database server and database with the name of the database.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Define your Rails Master Key right away so you don't screw this up and have to ask &lt;a href=&quot;https://gorails.com&quot;&gt;Chris Oliver&lt;/a&gt; for support (and thus sound like an idiot).  Your rails Master Key can be found in and copied with: cat config/master.key&lt;/td&gt;
          &lt;td&gt;pbcopy (if you are on OSX)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Do an initial deploy.  This will give you an HTTP only application.  You can't have HTTPS until you have a domain assigned to the server so you have to start with HTTP.&lt;/li&gt;
  &lt;li&gt;You can then define SSL.  I'd like to illustrate those steps but I didn't write them down well enough so that will have to be a future blog post.&lt;/li&gt;
  &lt;li&gt;Make sure that you have SSH on the GCP cluster open to the IP address for the Hatchbox deployment engine.  This ip address, today, March 24, 2020, is &lt;strong&gt;94.53.199.250&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 22 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/22/deploying-a-rails-app-using-hatchbox-onto-google-cloud-platform.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/22/deploying-a-rails-app-using-hatchbox-onto-google-cloud-platform.html</guid>
        
        <category>rails</category>
        
        <category>hatchbox</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You're Going to Have Visitors to Your Home in the Age of Covid - Here's What to Do</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08774.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I had a really, really interesting talk with a friend yesterday about the current times and they commented to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;My mom has come to live with me and she is immuno-compromised (COPD) so we're taking this really, really seriously.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even though perhaps we should all just hunker down, adopt a bunker mentality and never let anyone into our homes, that's just &lt;strong&gt;not realistic&lt;/strong&gt; or &lt;strong&gt;even viable&lt;/strong&gt;.  What we need to do is be &lt;em&gt;smart&lt;/em&gt; about this.  They spoke to me a bit about their precautions and I've merged them with the things we are doing and here you go!&lt;/p&gt;

&lt;h2 id=&quot;you-are-going-to-have-visitors-so-be-safe&quot;&gt;You Are Going to Have Visitors So Be Safe!&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Put a hand washing reminder sign on your door.&lt;/li&gt;
  &lt;li&gt;Put wipes by the door so that no one has to touch your door handle.  If you can't get wipes then maybe a sack of old grocery bags.&lt;/li&gt;
  &lt;li&gt;Put a trash can by the inside of the door so you can throw away the wipe or grocery bag.&lt;/li&gt;
  &lt;li&gt;Shoes come off inside the door and are left on a mat&lt;/li&gt;
  &lt;li&gt;Remove the hand towels from all your bathrooms and substitute paper towels (bad hand washing can leave the virus on a cloth towel for the next person).&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 19 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/19/so-you-re-going-to-have-visitors-to-your-home-in-the-age-of-covid-here-s-what-to-do.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/19/so-you-re-going-to-have-visitors-to-your-home-in-the-age-of-covid-here-s-what-to-do.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>A Drop Dead Stupid Rails Testing Trick</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8553.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is an old school trick that you use when you don't have a robust test suite and / or a CI environment.  When you run Rails in development mode it is VERY, VERY forgiving of little details like syntax errors – the type of thing that grind your web server to a hard stop.&lt;/p&gt;

&lt;p&gt;The trick is to use &lt;strong&gt;RAILS_ENV=production&lt;/strong&gt; in development mode and that causes syntax errors to get caught:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=production bundle exec rails s -p3169
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's an example stack trace:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	20: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/tsort.rb:228:in `block in tsort_each'
	19: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/initializable.rb:61:in `block in run_initializers'
	18: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/initializable.rb:32:in `run'
	17: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/initializable.rb:32:in `instance_exec'
	16: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/application/finisher.rb:122:in `block in &amp;lt;module:Finisher&amp;gt;'
	15: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:449:in `eager_load_all'
	14: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:449:in `each'
	13: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:338:in `eager_load'
	12: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:338:in `synchronize'
	11: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:346:in `block in eager_load'
	10: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:682:in `ls'
	 9: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:682:in `foreach'
	 8: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:685:in `block in ls'
	 7: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:351:in `block (2 levels) in eager_load'
	 6: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:351:in `const_get'
	 5: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/kernel.rb:16:in `require'
	 4: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:31:in `require'
	 3: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require_with_bootsnap_lfi'
	 2: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
	 1: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:23:in `block in require_with_bootsnap_lfi'
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:23:in `require': /Users/sjohnson/Sync/coding/rails/covid_morbidity/app/controllers/symptoms_controller.rb:53: syntax error, unexpected local variable or method, expecting '}' (SyntaxError)
      ip_address: request.remote_ip,
      ^~~~~~~~~~
/Users/sjohnson/Sync/coding/rails/covid_morbidity/app/controllers/symptoms_controller.rb:54: syntax error, unexpected tLABEL, expecting '='
      user_agent: request.user_agent
      ^~~~~~~~~~~
/Users/sjohnson/Sync/coding/rails/covid_morbidity/app/controllers/symptoms_controller.rb:55: syntax error, unexpected '}', expecting `end'
    }
    ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ideally you would never have to do this but it really can be a useful trick when you don't have a full CI environment setup.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/19/a-drop-dead-stupid-rails-testing-trick.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/19/a-drop-dead-stupid-rails-testing-trick.html</guid>
        
        <category>rails</category>
        
        <category>testing</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Loading Zip Codes with SmarterCSV Gem</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2664.jpeg&quot; alt=&quot;IMG_2664.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Zip code data is always problematic due to the leading zeros.  The &lt;a href=&quot;https://github.com/tilo/smarter_csv&quot;&gt;smarter_csv&lt;/a&gt; gem in Rails defaults to automatically handling numbers as numerics, not strings, which means that you lose 00408 to just 408.  Here's an example of a work around using a rake task to load data:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# bundle exec rake data:import_geography --trace&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:import_geography&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lib/tasks/data/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Geocodes_USA_with_Counties.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;geographies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SmarterCSV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;hash_transformations: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:convert_values_to_numeric_unless_leading_zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;convert_values_to_numeric: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;except: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;geographies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;g_obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Geography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This wasn't the &lt;a href=&quot;https://github.com/tilo/smarter_csv/issues/151&quot;&gt;accepted work around&lt;/a&gt; but a hack; sigh.  The :convert_values_to_numeric_unless_leading_zeros transformation doesn't seem work.  Issue filed; I hope to fix this myself down the road.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/18/loading-zip-codes-with-smartercsv-gem.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/18/loading-zip-codes-with-smartercsv-gem.html</guid>
        
        <category>rails</category>
        
        <category>csv</category>
        
        <category>covidnearme.org</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>How to Help a Quarantined Person</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01209.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Note: If you're concerned about COVID-19, I'd encourage you to check out &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;CovidNearMe.org&lt;/a&gt;.  Disclaimer - I'm one of the authors of it.&lt;/p&gt;

&lt;p&gt;I've now personally seen the impact of COVID-19 – a good friend – who was in my house less than 10 days ago has been diagnosed with the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;May have COVID-19 but a test wasn't available&lt;/li&gt;
  &lt;li&gt;Need to self quarantine for 2 weeks following the onset of symptoms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This raises the question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How do you help a person in quarantine?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some thoughts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You don't want to be in that person's physical presence.  It is QUARANTINE.&lt;/li&gt;
  &lt;li&gt;But all of us are a community.  You can't NOT help people; that isn't an option.&lt;/li&gt;
  &lt;li&gt;You can online order things for them.&lt;/li&gt;
  &lt;li&gt;You deliver to their front porch or front door the things that they need.  &lt;strong&gt;And then you leave – be in your car before they come out&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Given that theft may be a concern, it is likely good to leave things somewhat protected like between outer and inner doors.&lt;/li&gt;
  &lt;li&gt;If you don't have hand sanitizer to use after touching their door then bring a plastic grocery sack to touch the door handle and such  And then throw it away.&lt;/li&gt;
  &lt;li&gt;You call them to tell them that what they need is waiting for them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-do-you-keep-people-company&quot;&gt;How Do You Keep People Company?&lt;/h2&gt;

&lt;p&gt;For a lot of people, particularly extroverted social folk, being in quarantine is almost physically painful.  Keep in mind that people need company but that phone calls may be hard due to sore throats.  So think a lot about:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;text messaging&lt;/li&gt;
  &lt;li&gt;instant messaging&lt;/li&gt;
  &lt;li&gt;perhaps even doing a shared activity like &quot;virtual presence&quot; like watching something together on Netflix or Youtube&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-does-a-quarantined-person-need&quot;&gt;What Does a Quarantined Person Need?&lt;/h2&gt;

&lt;p&gt;Here's what I would recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Liquids that they like to drink; for this person it was tea and honey&lt;/li&gt;
  &lt;li&gt;Gatorade or another sports drink for dehydration&lt;/li&gt;
  &lt;li&gt;Easy to prepare food&lt;/li&gt;
  &lt;li&gt;Cold / Cough medicine&lt;/li&gt;
  &lt;li&gt;Help getting their prescriptions picked up&lt;/li&gt;
  &lt;li&gt;Painkillers but not &lt;a href=&quot;https://www.sciencealert.com/who-recommends-to-avoid-taking-ibuprofen-for-covid-19-symptoms&quot;&gt;Ibuoprofen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Humidifier&lt;/li&gt;
  &lt;li&gt;Thermometer&lt;/li&gt;
  &lt;li&gt;Soap&lt;/li&gt;
  &lt;li&gt;Crackers or something to help with nausea&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-thoughts&quot;&gt;Other Thoughts&lt;/h2&gt;

&lt;p&gt;I'd like to tell you that all of this can be done online (and, yes, CVS will do online ordering and delivery) but I don't think that's necessarily correct given the size of this crisis.  I think we are going to need to do a lot of physical visits to help our friends and neighbors.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/18/how-to-help-a-quarantined-person.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/18/how-to-help-a-quarantined-person.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>Gluten Free Baking 101</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2629.jpeg&quot; alt=&quot;IMG_2629.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Given the number of people who are avoid gluten these days, I thought I'd write up a few basic tips and pointers to some of my favorite gluten free recipes.&lt;/p&gt;

&lt;h2 id=&quot;general-gluten-free-banking-tips-from-years-of-experience&quot;&gt;General Gluten Free Banking Tips From Years of Experience&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Use a 1:1 flour replacement.  My current favorite is &lt;a href=&quot;https://www.amazon.com/Krusteaz-Gluten-Purpose-Flour-32-Ounce/dp/B013KRV2LU/&quot;&gt;Krusteaz&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;If you are baking gluten free, don't taste the batter!  A lot of gluten free flours are based on bean flours and bean flour, before it is baked, takes like crap.&lt;/li&gt;
  &lt;li&gt;Anything you bake with a gluten free flour is structurally weaker than with gluten because gluten is a strong, elastic protein.&lt;/li&gt;
  &lt;li&gt;If you want to make bread then just buy the book &lt;a href=&quot;https://www.amazon.com/Gluten-Free-Artisan-Bread-Five-Minutes/dp/1250018315/&quot;&gt;Gluten Free Artisan Bread in Five Minutes a Day&lt;/a&gt;.  Boules you bake from the basic recipe, page 63, are fantastic.  They are smaller than normal boules (lack of strength) but they taste and feel like real bread.  As a former daily bread baker, these book was like a revelation from on high.&lt;/li&gt;
  &lt;li&gt;A 1:1 flour can generally be substituted in place of wheat flour without other changes except for issues of strength / size (make things smaller).&lt;/li&gt;
  &lt;li&gt;Krusteaz has a great &lt;a href=&quot;https://www.amazon.com/Krusteaz-Gluten-Buttermilk-Pancake-16-Ounce/dp/B00K73KL9U/r&quot;&gt;gluten free pancake mix&lt;/a&gt;.  It is just easier than making it yourself.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;some-of-my-favorite-gluten-free-recipes&quot;&gt;Some of My Favorite Gluten Free Recipes&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/baked_goods/2019/12/11/gluten-free-chocolate-chip-pecan-scones.html&quot;&gt;Almond Flour Chocolate Chip Pecan Scones&lt;/a&gt; - I've probably made 50+ batches of these.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/breakfast/2019/10/17/gluten-free-lemon-ricotta-pancakes-with-thanks-to-kenny-shopsin.html&quot;&gt;Lemon Ricotta Pancakes&lt;/a&gt; - from one of the most entertaining cookbooks I ever read.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/bread/2019/08/04/gluten-free-peach-jalapeno-cornbread.html&quot;&gt;Peach Jalapeno Cornbread&lt;/a&gt; - this was amaze balls.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/pancakes/2019/10/20/gluten-free-pumpkin-pecan-pancakes.html&quot;&gt;Pumpkin Pecan Pancakes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/dessert/2020/03/01/gluten-free-chocolate-chili-bites.html&quot;&gt;Chocolate Chili Bites&lt;/a&gt; - like mini brownies with attitude.  Strongly recommended.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/potato/2020/02/10/gluten-free-potato-scones.html&quot;&gt;Potato Scones&lt;/a&gt; - my favorite thing in the world to do with mashed potatoes after the first consumption&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/bread/2020/03/05/gluten-free-almond-flour-biscuits.html&quot;&gt;Almond Flour Biscuits&lt;/a&gt; - nut flours don't make tall biscuits but they do make biscuits&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/breakfast/2016/12/26/gluten-free-swedish-pancakes-with-lingonberry-jam.html&quot;&gt;Swedish Pancakes&lt;/a&gt; - Can you tell that I like pancakes?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/snack/2013/07/15/gluten-free-energy-bites.html&quot;&gt;Energy Bites&lt;/a&gt; - Simple, sweet and actually heathy and you probably don't need to buy anything special.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/baked_goods/2019/02/03/gluten-free-brownies-for-game-night.html&quot;&gt;Brownies for Game Night&lt;/a&gt; - Because brownies!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/baking/2019/09/01/gluten-free-corn-muffin-mix.html&quot;&gt;Corn Muffins&lt;/a&gt; - Because muffins!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;more-recipes&quot;&gt;More Recipes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/&quot;&gt;All my recipes can be found here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/food/2020/03/16/gluten-free-baking-101.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/food/2020/03/16/gluten-free-baking-101.html</guid>
        
        <category>food</category>
        
        <category>gluten_free</category>
        
        
        <category>food</category>
        
      </item>
    
      <item>
        <title>Assembly Line Workers and COVID-19 - What Does An Employer Do About Touching Your Face?</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03233.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I have a number of friends who work on assembly lines and all of them are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Terrified of getting sick&lt;/li&gt;
  &lt;li&gt;Have no option of working from home&lt;/li&gt;
  &lt;li&gt;Want to work&lt;/li&gt;
  &lt;li&gt;Need to work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once upon a time my father used to own a manufacturing operation and this is the advice that I'd give him - buy these for all your line workers:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2748.jpeg&quot; alt=&quot;IMG_2748.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the picture above, I am wearing my face shield that I use when I cut wood on my table saw.  It:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Isn't a mask (and that's ok because there is a shortage of masks and masks aren't as effective as you would think)&lt;/li&gt;
  &lt;li&gt;Costs only $15 at Menards or Home Depot&lt;/li&gt;
  &lt;li&gt;Should be readily available as it isn't a medical device&lt;/li&gt;
  &lt;li&gt;Qualifies as valid safety equipment since that is its purpose&lt;/li&gt;
  &lt;li&gt;WILL REMIND PEOPLE TO NOT TOUCH THEIR FACE!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As an employer, whether or not you offer health care, you simply &lt;strong&gt;don't want your employees getting sick&lt;/strong&gt;.  And I'm firmly of the belief that people are smart but often get distracted so giving them a visual reminder &quot;don't touch your face&quot; is probably helpful.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/16/assembly-line-workers-and-covid-19-what-does-an-employer-do-about-touching-your-face.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/16/assembly-line-workers-and-covid-19-what-does-an-employer-do-about-touching-your-face.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>Making Urls Paste with Metadata Preview In Facebook, Facebook Messenger, Twitter, Apple Messages</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2668.jpeg&quot; alt=&quot;IMG_2668.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am an old tech guy.  I was at the conference where TBL announced the web and I wrote my first HTML snippet just a few years later.  But I pretty quickly moved from front end HTML onto back end web development and there are techniques that, while common today, I have never learned.&lt;/p&gt;

&lt;p&gt;An example of this is making urls appear, with metadata, when they are pasted into a messaging tool like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Facebook Messenger&lt;/li&gt;
  &lt;li&gt;Apple Messages&lt;/li&gt;
  &lt;li&gt;Facebook itself&lt;/li&gt;
  &lt;li&gt;Twitter itself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We've all seen this.  Sometimes you paste a url into Facebook Messenger and all that comes out is the url itself.  And sometimes you get a picture, a title, etc.  The secret to this is three fold:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A set of HTML meta tags for Facebook&lt;/li&gt;
  &lt;li&gt;A set of HTML meta tags for Twitter&lt;/li&gt;
  &lt;li&gt;Testing it in a debugging tool like the &lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot;&gt;Facebook Sharing Debugger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1-the-html-meta-tags-for-facebook&quot;&gt;Step 1: The HTML Meta Tags for Facebook&lt;/h2&gt;

&lt;p&gt;Here is an example of the HTML meta tags for Facebook:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:card&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;summary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:site&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@fuzzygroup&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:creator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@fuzzygroup&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org -- a web site for tracking COVID-19 near you&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org - an easy to use web site for watching the spread of COVID-19 in your country and / or state&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://covidnearme.org/assets/covid-5c8b7d67715397bef73ccaf0ee4402a1952d97123328aeb2db839ca071583c98.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-the-html-meta-tags-for-twitter&quot;&gt;Step 2: The HTML Meta Tags for Twitter&lt;/h2&gt;

&lt;p&gt;Here is an example of the HTML meta tags for Twitter:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:url&quot;&lt;/span&gt;                &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.covidnearme.org/&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:type&quot;&lt;/span&gt;               &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;website&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:locale&quot;&lt;/span&gt;             &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en_US&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt;              &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org -- a web site for tracking COVID-19 near you&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt;        &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org - an easy to use web site for watching the spread of COVID-19 in your country and / or state&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:image&quot;&lt;/span&gt;              &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://covidnearme.org/assets/covid-5c8b7d67715397bef73ccaf0ee4402a1952d97123328aeb2db839ca071583c98.png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-testing-in-the-sharing-debugger&quot;&gt;Step 3: Testing in The Sharing Debugger&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot;&gt;https://developers.facebook.com/tools/debug/&lt;/a&gt; and paste in your url.  You may need to click the Scrape Again button a few times while you work this out.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/webdev/2020/03/14/making-urls-paste-with-metadata-preview-in-facebook-messenger-twitter-apple-messages.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/webdev/2020/03/14/making-urls-paste-with-metadata-preview-in-facebook-messenger-twitter-apple-messages.html</guid>
        
        <category>facebook</category>
        
        <category>twitter</category>
        
        <category>messages</category>
        
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>The Five Second Rule No Longer Applies in the Age of Covid</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08845.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I just dropped a pill on the ground as I took my daily vitamins and I picked it it up and said &quot;5 second rule&quot; before popping it in my mouth.  And then it struck me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the age of covid, the 5 second rule no longer applies.  Covid can live on surfaces for up to 3 days.  &lt;a href=&quot;https://www.technologyreview.com/s/615348/heres-how-long-the-coronavirus-can-stay-in-the-air-and-on-packages/&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/03/13/the-five-second-rule-no-longer-applies-in-the-age-of-covid.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/03/13/the-five-second-rule-no-longer-applies-in-the-age-of-covid.html</guid>
        
        <category>covid</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Restart ID sequences in Postgres on Truncation</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:35:13.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is from a real world thing that I'm about to release.&lt;/p&gt;

&lt;p&gt;Like a lot of database apps in the world, mine generally tend to use auto incrementing ids for object identifiers.  An object identifier is a value in a system which uniquely identifies something.  Let's say you have a url like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3169/locations?country_id=91    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What that is saying, under the hood, is &quot;Get the data from the locations store and give me the object with id value 91&quot;.  The thing that I'm currently building is populated with a bunch of data which is coming from CSV files that I'm loading from the Internet and I need to wipe the data in the system every time it rebuilds.  Now when I say location store, I mean, in this case, a locations table in a Postgres database.  When you wipe the contents of a table in Postgres you end up with the next object in the table getting the last ID value plus 1.&lt;/p&gt;

&lt;p&gt;The secret is to add this snippet to your truncation routine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RESTART IDENTITY
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or in full:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TRUNCATE states RESTART IDENTITY    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And in Rails I have this implemented on all my core classes as:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;truncate&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TRUNCATE states RESTART IDENTITY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since this is a def self., think of it as a C style static thing.  By defining it this way, I can simply call it as State.truncate to eliminate all data in my states store (ok its is a table but it could be more complex) and restart my ID sequences.  And in cases it wasn't clear exactly why you want this, since I'm processing the same data files in Production as in Development, my bookmarks become consistent allowing easier debugging.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/sql/2020/03/13/restart-id-sequences-in-postgres-on-truncation.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sql/2020/03/13/restart-id-sequences-in-postgres-on-truncation.html</guid>
        
        <category>sql</category>
        
        <category>postgres</category>
        
        <category>rails</category>
        
        
        <category>sql</category>
        
      </item>
    
      <item>
        <title>What is covidnearme.org ?</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:46:27.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I'd like to say that I'm happy to announce:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.covidnearme.org/&quot;&gt;https://www.covidnearme.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;but I'm not.  Like a lot of us, nay, most of us, I find the current COVID-19 / Corona virus bothersome if not scary.  But the world is what it is and we are better off knowing more about COVID-19 rather than less so I made a tool.&lt;/p&gt;

&lt;h2 id=&quot;what-is-covidnearmeorg&quot;&gt;What is covidnearme.org?&lt;/h2&gt;

&lt;p&gt;Covnearme.org is a web site which lets you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Easily drill down to where you live.&lt;/li&gt;
  &lt;li&gt;Bookmark a location or location that you care about&lt;/li&gt;
  &lt;li&gt;See a leaderboard of cases&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;but-what-happened-in-the-us-on-310&quot;&gt;&lt;a name=&quot;hopkinswheresmylocaldata&quot;&gt;&lt;/a&gt;BUT WHAT HAPPENED IN THE US ON 3/10?&lt;/h2&gt;

&lt;p&gt;That is apparently the date when Johns Hopkins stopped reporting US level county data and only data at the state level.  Yes that means that the US is officially &lt;strong&gt;LESS OPEN&lt;/strong&gt; than China.  Let's compare a screenshot between Seattle and Hubei:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/china.png&quot; alt=&quot;IMG_2192.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/seattle.png&quot; alt=&quot;IMG_2192.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you think this is the same bull crap that we do then please use this hashtag when you tweet:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#hopkinswheresmylocaldata #Covid_19 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wheres-the-damn-map&quot;&gt;Where's the Damn Map?&lt;/h2&gt;

&lt;p&gt;We didn't put one in (yet).  I've been using the &lt;a href=&quot;https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6&quot;&gt;Hopkins tracker&lt;/a&gt; for several weeks now and it gives me a great feel for the global scene but I don't just want global - I want local.  And I'm too damn fat fingered to make their map work for me easily.&lt;/p&gt;

&lt;h2 id=&quot;why-did-you-build-this&quot;&gt;Why Did You Build This?&lt;/h2&gt;

&lt;p&gt;We wanted:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The ability to know what's happening &lt;strong&gt;near&lt;/strong&gt; the people we love.&lt;/li&gt;
  &lt;li&gt;The ability to bookmark a location - our homes, our parent's homes, our friends workplaces&lt;/li&gt;
  &lt;li&gt;The ability to know metrics which people aren't posting yet like the death metrics (why the hell is Italy so much higher?) and the recovery metrics (Seattle has a lot of cases but the recovery percentages are pretty good)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-do-i-give-you-bugs&quot;&gt;How Do I Give You Bugs?&lt;/h2&gt;

&lt;p&gt;We have setup a public github repo for this to capture bugs as github issues.  Just file an issue and please, please, please give us the url to where you have issues. Goto:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/fuzzygroup/covdidnearme_bugs/issues&quot;&gt;https://github.com/fuzzygroup/covdidnearme_bugs/issues&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If anyone out there in the bug tracking world wants to give us tooling for bugs, contact fuzzygroup at gmail.com&lt;/p&gt;

&lt;h2 id=&quot;who-the-hell-are-you&quot;&gt;Who the Hell Are You?&lt;/h2&gt;

&lt;p&gt;You keep saying we. Who is we?  There are two of us who built this:&lt;/p&gt;

&lt;h3 id=&quot;scott-johnson&quot;&gt;Scott Johnson&lt;/h3&gt;

&lt;p&gt;Scott Johnson / fuzzygroup / &lt;a href=&quot;https://www.fuzzyblog.io/blog/&quot;&gt;fuzzyblog&lt;/a&gt;.  I'm a long time tech / startup guy who has been building things forever.  You might know me from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The blogging world where I once built Feedster years and years ago.&lt;/li&gt;
  &lt;li&gt;I also built &lt;a href=&quot;https://www.jobhound.io&quot;&gt;JobHound.io&lt;/a&gt;; yes I know it is kinda broken right now; sorry; I've been busy on this.&lt;/li&gt;
  &lt;li&gt;I spent over a decade building the late AppData which was the red headed step child in the App Analytics world (we competed, unsuccessfully with AppAnnie) but that time taught me a ton about data and data science.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm also a husband, father, writer and a member of science fiction fandom.  I'm currently leading development for a Machine Learning project for the &lt;a href=&quot;https://www.adl.org/&quot;&gt;ADL&lt;/a&gt;.  And I build side projects; oh lord do I build side projects.  This is another one.&lt;/p&gt;

&lt;h3 id=&quot;elaine-e-thompson&quot;&gt;Elaine E Thompson&lt;/h3&gt;

&lt;p&gt;My cofounder on this is Elaine E. Thompson, PhD.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dr. Thompson is a bioinformatician who manages a major digital pathology AI project for the Department of Defense.&lt;/li&gt;
  &lt;li&gt;Before that she worked at the FDA, leading research in the CBER HIVE bioinformatics group.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More on both of us can be found &lt;a href=&quot;http://covidnearme.org/about&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wheres-the-data-coming-from&quot;&gt;Where's the Data Coming From?&lt;/h2&gt;

&lt;p&gt;We are using the &lt;a href=&quot;https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data&quot;&gt;Hopkins data&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;but-theres-an-error-&quot;&gt;But There's an Error !&lt;/h2&gt;

&lt;p&gt;Yep.  We've seen it to.  There are two types of errors that you'll find here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;XYZ Broke&lt;/strong&gt; aka We were stooopid.  Software engineers make bugs and we are no exceptions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data is Wrong&lt;/strong&gt;.  We are only as good as the Hopkins data and the Hopkins data does have some issues (there are typos like &quot;Wetchester&quot;) but they have done a great job and we appreciate the hell out of what they have done.  Go Hopkins!!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-frequently-is-this-updated&quot;&gt;How Frequently is this Updated?&lt;/h2&gt;

&lt;p&gt;We are rebuilding this daily as frequently as Hopkins updates their github source.  Unfortunately that's only once per day and usually we are 24 hours behind their tracker.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;is-this-free&quot;&gt;Is This Free?&lt;/h2&gt;

&lt;p&gt;Yep.  We wanted it and you get it too.&lt;/p&gt;

&lt;h2 id=&quot;am-i-tracked&quot;&gt;Am I Tracked?&lt;/h2&gt;

&lt;p&gt;Nope.&lt;/p&gt;

&lt;h2 id=&quot;whats-the-commercial-play-here&quot;&gt;What's the Commercial Play Here?&lt;/h2&gt;

&lt;p&gt;Yep. I wanted this for myself but we aren't 100% charitable here.  We have a side project going around Machine Learning labeling, &lt;a href=&quot;https://www.netlabler.com&quot;&gt;NetLabeler&lt;/a&gt; and we took time away from that to build this.&lt;br /&gt;
If you have any interest in Machine Learning labeling (and you likely don't and that's ok) then please signup for our mailing list here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://covidnearme.org/&quot;&gt;https://covidnearme.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;how-did-you-build-this-and-the-thank-yous&quot;&gt;How Did You Build This and the Thank Yous&lt;/h2&gt;

&lt;p&gt;We built this with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;.  I've never met a language that I love as much; Ruby changed my life for the better.  Thank you Matz and crew.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt;.  Yep.  I'm a Rails guy.  Even though Rails takes a lot of grief these days, it remains the &lt;strong&gt;fastest way to go from nothing to something real in just days&lt;/strong&gt; (this started just a few days ago).  Thank you DHH and Rails community.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;Postgres&lt;/a&gt;.  I'm historically a MySQL guy but I do a lot of Postgres these days and I'm coming to like the zen of Postgres.  Thanks!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;JumpStart Pro&lt;/a&gt;.  I'm basically a backend guy and JumpStart Pro is a Rails application template which makes your Rails app basically look great and handles lots and lots of things for you like SAAS and such.  Thank you Chris Oliver and GoRails (they make JumpStart Pro).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hatchbox.io/&quot;&gt;HatchBox&lt;/a&gt;.  Rails deployment is the ugly, dark, evil, crap ass side of the Rails world.  Rails deployment is generally like that alcoholic uncle who is an asshole at family gatherings.  We all tolerate Rails deployment because we love Rails but good lord Rails core team - the platform is how many damn years old now?  Someone please make this easy.  But, in the interim, there's Hatchbox which makes Rails deployment the best experience I've ever had. Thank you Chris Oliver and GoRails (they make HatchBox too).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeybadger.io/&quot;&gt;HoneyBadger&lt;/a&gt;.  HoneyBadger is the best way I've found to capture runtime errors in your software.  A request to the HoneyBadger team - I'm a legacy paid user on a micro account.  Any chance of getting my fuzzygroup account upgraded so my other developer on this could have access?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;Jira&lt;/a&gt;.  We are using a free Jira account to manage our development on this.  And while I've historically loathed Jira, I'm slowly being converted to the awesomeness of Jira.  A request to the Jira team - could we get our account upgraded perhaps?  Pretty please?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.do.co/c/7942f29e0585&quot;&gt;Digital Ocean&lt;/a&gt;.  Digital Ocean or DO is the best cheap hosting I've used in years.  I've run JobHound.io on Digital Ocean for years and they've been flawless (yes it is broke now but that's me not them).  This DO link includes my referral and gets me some free credits to pay for the hosting on this so feel free to signup to support covidnearme.org.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://github.com/monterail/zip-codes&quot;&gt;zip-codes gem by monterail&lt;/a&gt; on github. The very first feature request we got on this project was for Zipcode to state translation (the search bar on the left) and this gem was brilliant.  Thank you!&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/13/announcing-covidnearme-org.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/13/announcing-covidnearme-org.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>The Bullcrappery That is Offering Only Magic Link Authentication</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:38:54.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I just signed up a new service, &lt;a href=&quot;https://simpleanalytics.com/&quot;&gt;SimpleAnalytics&lt;/a&gt; because, well, if I never look again at Google Analytics then I'll be happy as hell.  I can't say enough bad things about Google Analytics – and I've been using it since it was &lt;a href=&quot;https://en.wikipedia.org/wiki/Urchin_(software)&quot;&gt;Urchin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Simple Analytics appears to be an impressive tool and I want to launching something, well, &lt;strong&gt;TODAY&lt;/strong&gt; so when they offered a simple signup and easy to use workflow, I bit.  I even gave them a credit card.  And then I went to add my co-founder on this project to it and, well, &lt;em&gt;crap&lt;/em&gt;.  They &lt;strong&gt;only&lt;/strong&gt; offer Magic Link authentication.  Sigh.  &lt;strong&gt;censored&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Magic Link Authentication is that beautiful concept that Slack pioneered where they just:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Email you a link to authenticate with.&lt;/li&gt;
  &lt;li&gt;You click the link and WHAM!&lt;/li&gt;
  &lt;li&gt;You're in.&lt;/li&gt;
  &lt;li&gt;No account stuff.&lt;/li&gt;
  &lt;li&gt;No password.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it feels like &lt;strong&gt;magic&lt;/strong&gt;.  I was blown away by this the first time I used it in Slack and I, well, I actually did a small bow towards Silicon Valley and the &lt;strong&gt;awesomeness&lt;/strong&gt; that is Stuart Butterfield (he is the guy behind Slack, the guy behind Flickr and the guy behind Game Never Ending).  Stuart is awesome (imho but so is Caterina also of course).&lt;/p&gt;

&lt;p&gt;But Magic Link Authentication isn't supposed to be your only approach to authentication.  Tomorrow I leave my home office for a long weekend.  The Magic Link Authentication email that I just forwarded to my partner on this project has a duration of only 3 hours.  My partner doesn't have access to my email (and nor should they; it is my damn email).  So let's say that they somehow need to re-authenticate (browser crash; cookie expire; whatever), their only option is to send me a text message that begs:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please kind partner of mine - will you request a Magic Link again and then wait for the email to arrive to you and then please forward it on to me?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's absolute crap imho.  Usernames and passwords are not that damn hard.  As a company SimpleAnalytics is on a &lt;a href=&quot;https://blog.simpleanalytics.com/how-we-hit-our-30k-annual-recurring-revenue-milestone&quot;&gt;$360,000 run rate&lt;/a&gt; – figure out a way to add a second person onto the damn account.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;For all my bitching:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I like the Simple Analytics product.&lt;/li&gt;
  &lt;li&gt;I wouldn't have paid for it otherwise.&lt;/li&gt;
  &lt;li&gt;I despise Google Analytics which needs to die, painfully, by fire&lt;/li&gt;
  &lt;li&gt;I want them to succeed.&lt;/li&gt;
  &lt;li&gt;I am likely to keep paying them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but I know a lot about authentication (yes Virginia I even built &lt;a href=&quot;https://en.wikipedia.org/wiki/Security_Assertion_Markup_Language&quot;&gt;SAML&lt;/a&gt; tools once upon a time and &lt;a href=&quot;https://en.wikipedia.org/wiki/Kerberos_(protocol)&quot;&gt;Kerberos&lt;/a&gt; before that) and authentication isn't as simple as Magic Links.  Even I want it to be as simple as Magic Links but it just plain isn't.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/login/2020/03/12/the-bullcrappery-that-is-offering-only-magic-link-authentication.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/login/2020/03/12/the-bullcrappery-that-is-offering-only-magic-link-authentication.html</guid>
        
        <category>authentication</category>
        
        <category>login</category>
        
        
        <category>login</category>
        
      </item>
    
      <item>
        <title>Six Tips for Interviewing Software Engineers When You Aren't Technical</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01821.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Interviewing engineers when you aren't one is a regular human resources task that tends to give non technical folk fits and for good reasons.&lt;/p&gt;

&lt;h2 id=&quot;1-focus-on-what-you-can-interview-them-about&quot;&gt;1. Focus on What You Can Interview them About&lt;/h2&gt;

&lt;p&gt;To the non engineer, our job is all about coding but that's actually only a part of what an engineer does.  Engineers exist in the same ecosystem as any employee and there are all kinds of questions about work practices that need to be asked.  For example if remote work is a part of your work environment then dig down into how that person might function in a remote context.&lt;/p&gt;

&lt;h2 id=&quot;2-communications-ability-is-always-key&quot;&gt;2. Communications Ability Is Always Key&lt;/h2&gt;

&lt;p&gt;Engineers do not work in a vacuum and the ability to communicate is a key ability that improves the quality of their work.  Ask questions and see how the engineer communicates.&lt;/p&gt;

&lt;h2 id=&quot;3-look-for-attitude&quot;&gt;3. Look for Attitude&lt;/h2&gt;

&lt;p&gt;A lot of engineers love to drown non technical people in what amounts to techno babel – it is a way for us (yes I am an engineer myself) to feel superior.  Look for hints of that attitude during the interview and if you find it &lt;strong&gt;before&lt;/strong&gt; they are an employee then you should expect it to be even worse once they are an employee.&lt;/p&gt;

&lt;h2 id=&quot;4-look-for-values-alignment--culture-fit&quot;&gt;4. Look for Values Alignment / Culture Fit&lt;/h2&gt;

&lt;p&gt;When I'm an interviewer, I care most about whether or not the candidate can do the technical work because, honestly, I can work with anyone – in the end all I care about (mostly) is whether or not the code works.  Now if you are non technical then you don't care about that but you likely care a lot about value alignment and culture fit so dig in there.&lt;/p&gt;

&lt;h2 id=&quot;5-look-at-work-practices&quot;&gt;5. Look at Work Practices&lt;/h2&gt;

&lt;p&gt;Even if you aren't technical, you likely have some idea around work practices in development from either past experience or media.  It is ok to ask a general question like &quot;I have a bug in what you are working on - how do you handle it?&quot;.  And then what you are looking for is some kind of logical approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My first two answers on this one are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They either log the bug formally in the bug tracker / ticket system&lt;/li&gt;
  &lt;li&gt;They try and reproduce it&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;6-salary--benefits--company-details&quot;&gt;6. Salary / Benefits / Company Details&lt;/h2&gt;

&lt;p&gt;If you are a non technical interviewer then there is a good chance that you get the (oh joy) role of tackling salary / benefits / company stuff.  This is something that has to be dealt with.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-coding-tests&quot;&gt;Sidebar: Coding Tests&lt;/h2&gt;

&lt;p&gt;I'm a firm believer in NOT doing coding tests particularly for senior engineering roles.  There are all kinds of reasons for this that should likely be the topic of another blog post.  I tend to take people's word that if they tell me they can do X competently then that's true.  And the reason for this is that if they misrepresent themselves, well, that's a fireable thing.  And I lost my fear of firing people before I turned 20 years old.&lt;/p&gt;

&lt;p&gt;If you feel like you have to prove coding quality upfront then I recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;White boarding exercises&lt;/li&gt;
  &lt;li&gt;Rigorous reference checks&lt;/li&gt;
  &lt;li&gt;Code samples&lt;/li&gt;
  &lt;li&gt;Published Github code&lt;/li&gt;
  &lt;li&gt;Contributions to open source projects&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/03/10/six-tips-for-interviewing-software-engineers-when-you-aren-t-technical.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/03/10/six-tips-for-interviewing-software-engineers-when-you-aren-t-technical.html</guid>
        
        <category>startup</category>
        
        <category>hr</category>
        
        <category>hr</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>COVID-19 / Coronavirus Prep</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03241.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Written: 3/10/2020 @ 4:25 PM EST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When changes are made then I will put an update time on this.&lt;/p&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;Here are the quick bullet points:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This isn't the apocalypse; but it is going to be a bad time. The mortality rates vary by age but average many times worse than flu.&lt;/li&gt;
  &lt;li&gt;Minimizing non essential travel and trips out is smart.&lt;/li&gt;
  &lt;li&gt;Keep three feet separation between people as a general guideline.&lt;/li&gt;
  &lt;li&gt;Having extra food on hand is worthwhile; having lots of water isn't because you can't practically have enough on hand.&lt;/li&gt;
  &lt;li&gt;In terms of food - treat it as you are pre-buying groceries for a bad winter storm; just get things that last for a long time and the best case scenario is you donate stuff to food banks / homeless shelters.&lt;/li&gt;
  &lt;li&gt;This is a respiratory thing so if you have asthma then you want to have an extra inhaler on hand before they run out.&lt;/li&gt;
  &lt;li&gt;Key things to buy in addition to food: Cough and Cold Medicine, Ibuprofen, Tylenol, Paper Towels, Toilet paper&lt;/li&gt;
  &lt;li&gt;It is unclear to me that hand sanitizer works on virus but hand washing does work so do the soap and water drill.&lt;/li&gt;
  &lt;li&gt;Cracked hands and small cuts on the hands are places for infection to get in so put moisturizer, bandaids and Neosporin where you need them (I put them in my cars).&lt;/li&gt;
  &lt;li&gt;There are likely to be supply chain issues on things from China.&lt;/li&gt;
  &lt;li&gt;Masks generally speaking aren't worthwhile and are best saved for emergency workers.&lt;/li&gt;
  &lt;li&gt;Hand washing is a must when you return home - make sure to NOT use a shared towel for drying (buy extra paper towels) and to turn off the water with your elbow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tracking-tools&quot;&gt;Tracking Tools&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6&quot;&gt;Johns Hopkins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.worldometers.info/coronavirus/#news&quot;&gt;Worldometers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coronavirus.arik.io/#/?checkedCountries=US&amp;amp;showCases=true&amp;amp;showDeaths=true&amp;amp;showRecoveries=true&amp;amp;axes=joint&amp;amp;scale=linear&amp;amp;derivative=false&amp;amp;includeCruiseShipDescendants=false&amp;amp;regression=none&amp;amp;modelOffset=0&amp;amp;extrapolationSize=5&amp;amp;mapDataSource=deaths&amp;amp;mapDataReference=relative%3Arecoveries&quot;&gt;Coronavirus.arik.io - US Graph&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.isitcancelledyet.com/&quot;&gt;Calendar of Cancellations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.isitcanceledyet.com/&quot;&gt;Funny Cancellations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;good-things-to-read&quot;&gt;Good Things to Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://threadreaderapp.com/thread/1237142891077697538.html&quot;&gt;Italy Triage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.popsci.com/story/diy/diy-hand-sanitizer/&quot;&gt;How to make your own Hand Sanitizer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.independent.co.uk/news/world/americas/coronavirus-new-york-national-guard-cuomo-containment-zone-new-rochelle-a9391296.html&quot;&gt;National Guard Deployed to New York&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.miamiherald.com/news/local/immigration/article241046076.html&quot;&gt;Immigration Posters Removed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/tami.lieberman?__tn__=%2CdCH-R-R&amp;amp;eid=ARA0HiwGZ1RiywqDE-heKPLIj1wAs6ynbhkKpoQXW5smCes-zpptXu71ZdVy3wTozgVIlPIEpaBL71eO&amp;amp;hc_ref=ARSrzQFW6krauYQLwZTMmef4B0EwG2mUDZgUZOmqwLq0AxlvyQVl0Q2qYU0350DtPmc&amp;amp;fref=nf&quot;&gt;Slowing the Spread&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/dpmott/status/1237363511786905601&quot;&gt;Slowing the Spread - 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://threadreaderapp.com/thread/1236095180459003909.html&quot;&gt;Systemic Health Care Failure and Math&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;worth-a-listen&quot;&gt;Worth a Listen&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://radioopensource.org/plagues-pathogens-and-panic/&quot;&gt;Open Source Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/03/10/covid-19-coronavirus-prep.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/03/10/covid-19-coronavirus-prep.html</guid>
        
        <category>covid</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Machine Learning Datasets for NLP</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:39:25.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Today is a short one, just pointers to some datasets for Machine Learning data sets that I keep losing.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/datasets&quot;&gt;Kaggle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lionbridge.ai/datasets/the-best-25-datasets-for-natural-language-processing/&quot;&gt;LionBridge.ai&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://millionsongdataset.com/&quot;&gt;Million Song Dataset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/syncedreview/2019-in-review-10-open-sourced-ai-datasets-c42b73e21c82&quot;&gt;Synced Review&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.twitter.com/en/docs/labs/sampled-stream/api-reference/get-tweets-stream-sample-v1&quot;&gt;Twitter Sample Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 09 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/netlabeler/2020/03/09/machine-learning-datasets-for-nlp.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/netlabeler/2020/03/09/machine-learning-datasets-for-nlp.html</guid>
        
        <category>netlabeler</category>
        
        <category>machine_learning</category>
        
        
        <category>netlabeler</category>
        
      </item>
    
      <item>
        <title>Casting in Python and Redis</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01337.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I recently had this situation in &lt;a href=&quot;https://redislabs.com/lp/python-redis/&quot;&gt;Python and Redis&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis.lpush(kafka_topic_name, current_filename)
redis.exceptions.ResponseError: WRONGTYPE Operation against a key holding the wrong kind of value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I did my normal deal of debugging by adding:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import pdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdb.set_trace()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;before the lpush call and I tried it manually by typing out &lt;em&gt;redis.lpush(kafka_topic_name, current_filename) ENTER&lt;/em&gt; and it, naturally, worked fine.  &lt;em&gt;Grumble&lt;/em&gt;. What I finally ended up doing is wrapping a str() call as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis.lpush(str(kafka_topic_name), (current_filename))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that let things work correctly.  In talking with another Python programmer, we came to the conclusion that Python's auto casting of things between &lt;a href=&quot;https://stackoverflow.com/questions/6269765/what-does-the-b-character-do-in-front-of-a-string-literal&quot;&gt;byte literals and strings&lt;/a&gt; was the culprit.  Wrapping a str() call around both the list name and the list value solved things nicely.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I figured this out by moving from a &lt;strong&gt;lpush&lt;/strong&gt; operation on Redis to a &lt;strong&gt;sadd&lt;/strong&gt; operation and then retrieving back a single entry which showed me the Python b prefix:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b'/Users/sjohnson/Sync/fuzzygroup/adl/ohi_kafka/experts-all/data/twitter/25400bcd1142564b4476c178935bd736.json'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;also---dont-forget-about-unicode&quot;&gt;Also - Don't Forget About Unicode&lt;/h2&gt;

&lt;p&gt;I dug into this further and a least part of this issue for string conversion from Python byte ranges into actual strings is that you need to use a&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;current_filename.decode(&quot;utf-8&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;call because the Python byte range has no idea what the encoding was.  Now I will admit that I'm surprised that Python didn't realize &quot;Ok we're reading data from the filesystem's dir() operation&quot; and it is OS-X so the encoding must be XYZ (utf-8 I would think).  Here's an example of this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import sys
&amp;gt;&amp;gt;&amp;gt; sys.stdout.encoding
'UTF-8'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And since my coworker on this project uses Linux, I guess I need to embed that into my application (note - it isn't 100% clear to me that sys.stdout.encoding is the same as the encoding of the filesystem's directory output; there is also the  sys.setdefaultencoding('utf-8') call).&lt;/p&gt;

&lt;p&gt;See Also:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27848037/python-unicodedecodeerror-while-listing-directory&quot;&gt;Stack Overflow 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/606191/convert-bytes-to-a-string&quot;&gt;Stack Overflow 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugs.python.org/issue17860&quot;&gt;Related Python Bug Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sidebar-deleting-a-redis-list&quot;&gt;Sidebar: Deleting a Redis List&lt;/h2&gt;

&lt;p&gt;As you might imagine, this type of error led me to creating a number of redis lists with bad data. There isn't an explicit delete command in Redis which gives two work arounds:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Iterate over the list and simply pop everything off; at the end the list goes away&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.redisgreen.net/blog/deleting-large-lists/&quot;&gt;Rename the list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/03/08/casting-in-python-and-redis.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/03/08/casting-in-python-and-redis.html</guid>
        
        <category>python</category>
        
        <category>redis</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Reloading the REPL in Python</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/607483cd3c96fc17beee37cd0248294a.jpg&quot; alt=&quot;607483cd3c96fc17beee37cd0248294a.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you know something well you always look to learn by analogy.  Today's short topic is reloading the REPL (read-evaluate-print-loop) interactive console in Python and then contrast between Python and Rails.  And, yes, I get that Python is a language and Rails is a framework but where you tend to work directly in the Python console, you also tend to work directly in the Rails console (as opposed to the IRB Ruby console on which the Rails console is based but the Rails console improves it a lot).&lt;/p&gt;

&lt;p&gt;The reason this is important is that if you use a REPL a lot, well, you are constantly switching between editor and REPL and until this damn blog post, I had to quit my Python console every damn time.  Just imagine me cursing up a blue streak and you will get a small fraction of my frustration when you see the difference below between Python and Rails.&lt;/p&gt;

&lt;h2 id=&quot;python---launching-the-console&quot;&gt;Python - Launching the Console&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rails---launching-the-console&quot;&gt;Rails - Launching the Console&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails c    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You may have to type this as bundle exec rails c (also knowing as the &quot;bundle exec&quot; tax).&lt;/p&gt;

&lt;h2 id=&quot;python---reloading-the-console-when-you-change-your-code&quot;&gt;Python - Reloading the Console When You Change Your Code&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import importlib
importlib.reload(your_module_name_here)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import expert_classification
# try some code; find bug; fix bug
import importlib
importlib.reload(expert_classification)
# try code again
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rails---reloading-the-console-when-you-change-your-code&quot;&gt;Rails - Reloading the Console When You Change Your Code&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reload!    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you change your Rails gem stack then you have to exit the console entirely.  I'll give you that.&lt;/p&gt;

&lt;h2 id=&quot;why-this-matters-why-rails-is-better-here-and-a-rant&quot;&gt;Why This Matters, Why Rails is Better Here And a Rant&lt;/h2&gt;

&lt;p&gt;It is hard to know when you're changing stuff with more than a single module exactly what you changed.  The Rails method of typing &lt;strong&gt;reload!&lt;/strong&gt; and having your whole environment reloaded solved this entirely.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reload method on importlib is new in Python 3.4.  &lt;strong&gt;Insert emoji of Munsch scream here&lt;/strong&gt; How the hell is this possible that reloading came only on March 17, 2014 when Python started shipping in December 1989?  I can't remember ever not having reload! in Rails.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-making-this-automatic-with-an-ipython-configuration&quot;&gt;Sidebar: Making this Automatic with an iPython Configuration&lt;/h2&gt;

&lt;p&gt;Create your profile first:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipython profile create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Edit it (your editor and path will be different but it will be something like this):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mate /Users/sjohnson/.ipython/profile_default/ipython_config.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Put these lines in place:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c = get_config()
c.InteractiveShellApp.exec_lines = ['load_ext autoreload', 'autoreload 2']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save, exit and restart iPython and your changes will be handled automagically.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-originalthe-magic-answer-with-some-bitterness-and-anger---welcome-to-ipython&quot;&gt;Sidebar Original:The Magic Answer with Some Bitterness and Anger - Welcome to Ipython&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I wrote this sidebar originally and then I found the answer but I like the bitterness and rage here and I know one of my readers will be tickled pink by this (as will her husband should she pass it on).&lt;/p&gt;

&lt;p&gt;I did more digging and apparently iPython fixes this with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;load_ext autoreload
autoreload 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm still going to argue that this being 2 commands instead of 1 (although the 2 parameter to autoreload above does make subsequent code changes automatic) and yes you can supposedly make this automatic with an iPython profile configuration but even:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipython profile create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then modifying the profile to have:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c = get_config()
c.InteractiveShellApp.code_to_run = 'load_ext autoreload'
c.InteractiveShellApp.code_to_run = 'autoreload 2'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;isn't right because the 3rd line tosses a syntax error and when I eliminate the third line, the second line causes iPython to exit on startup – but they do work interactively.  And, yes, yes with sufficient googling I could fix this but I've got code to write and this is an &lt;strong&gt;endless rabbit hole of suckitude&lt;/strong&gt; so route this entire blog post to /dev/null and just exit the REPL and re-enter or remember this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use ipython not python3&lt;/li&gt;
  &lt;li&gt;At the start of your session always type &lt;strong&gt;load_ext autoreload&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;And then type: &lt;strong&gt;autoreload 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2534480/proper-way-to-reload-a-python-module-from-the-console&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipython.org/ipython-doc/3/config/extensions/autoreload.html&quot;&gt;iPython Older&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html&quot;&gt;iPython Current&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/reloading-modules-python/&quot;&gt;Geeks for Geeks on Reload&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/importlib.html#importlib.reload&quot;&gt;The Reload Method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 07 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/03/07/reloading-the-repl-in-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/03/07/reloading-the-repl-in-python.html</guid>
        
        <category>python</category>
        
        <category>rails</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Emulating Ruby's Benchmark.real_time in Python Using a Context Manager</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2291.jpeg&quot; alt=&quot;IMG_2291.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the most confusing aspects of multi language programming is when you know how to do it in your preferred language and when you are trying to figure it out in your new language.  And, as any reader of this blog knows, Ruby is always, always, always my preferred language.  But, as my perspective on languages widens, I suspect you could say that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby is my wife but&lt;/li&gt;
  &lt;li&gt;I have a serious relationship with Python&lt;/li&gt;
  &lt;li&gt;And I'm now flirting with Rust and seeing if I want to bring her to the dance …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But enough of that foolishness, today's topic is code benchmarking.  Here's what I would do in Ruby:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;elapsed_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;realtime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some_long_running_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'some_long_running_method'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsed_time&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By defining the results variable outside the &lt;strong&gt;block&lt;/strong&gt; of code (the bits between do and end), it basically gets a transitive scope that allows what is computed inside the block to exist outside the block.  And then I set the associative array (also known as a hash) to have a key for the method, some_long_running_method, and also the elapsed time.  This way I can build up a hash of all my methods and how long they take.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A block is a &quot;lexical scope&quot; during which (the code between the do and end), variables are local only to that scope (unless you &quot;shadow&quot; it with a variable of the same name).&lt;/p&gt;

&lt;p&gt;My pairing partner on this project, Grant, has told me &quot;You could use a context manager for this&quot;.  And this led me to these Python docs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/contextlib.html&quot;&gt;ContextLib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/context-manager-in-python/&quot;&gt;Geeks for Geeks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I found both of these very pythonic – which, for me, means I &lt;em&gt;didn't understand them at all&lt;/em&gt;.  Happily I was able to cobble together a basic example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;contextlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contextmanager&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_long_running_method1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_long_running_method2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contextmanager&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;benchmark_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t_0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;run_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmark_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run_time&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test_sleep'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;some_long_running_method1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test_foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;some_long_running_method1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The @contextmanager is apparently a &quot;python decorator&quot;.  I don't really understand decorators any more than I understand interior decorators so, well, there's that.&lt;/p&gt;

&lt;p&gt;The end result of this is a Python dictionary like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'some_long_running_method1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.696846008300781e-05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'some_long_running_method2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.696846008300781e-05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's how this looks like in a production code refactor:&lt;/p&gt;

&lt;h2 id=&quot;before&quot;&gt;Before&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;time_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop_from_topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kafka_conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka_topic_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_debugging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'common_kafka.pop_from_topic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;after&quot;&gt;After&lt;/h2&gt;

&lt;p&gt;You should note that my timer routine now is located in a common file named common_debugger.py.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;common_debugger&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_debugging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'common_kafka.pop_from_topic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop_from_topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kafka_conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka_topic_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is pretty clearly an improvement in terms of reducing complexity and code cruft.  Context managers are an interesting improvement to Python even if I personally found the documentation confusing.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/03/06/emulating-ruby-s-benchmark-realtime-in-python-using-a-context-manager.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/03/06/emulating-ruby-s-benchmark-realtime-in-python-using-a-context-manager.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>PDF Text Extraction Is Hard Even for AWS Textract</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2329.jpeg&quot; alt=&quot;IMG_2329.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have always found that serendipity plays a large role in my technical life.  For example I recently ran into a great article and discussion thread on PDF Text Extraction:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.filingdb.com/pdf-text-extraction&quot;&gt;Article&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22473263&quot;&gt;Discussion Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The thrust of this article amounts to &quot;PDF Processing Is Hard and Here's Why&quot; (tldr - PDF isn't a document format as much as a layout format and how things are laid out generally bears little relationship to their structure as &quot;document elements&quot;).&lt;/p&gt;

&lt;p&gt;Now lately I've been involved in some resume processing lately and this made me say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hm… Can I extract just the email addresses programmatically from this stack of resumes?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I found that following the techniques in this &lt;a href=&quot;https://medium.com/@rqaiserr/how-to-convert-pdfs-into-searchable-key-words-with-python-85aab86c544f&quot;&gt;Medium article&lt;/a&gt;, I was able to extract roughly 70% of the email addresses from a small sample.  And while 70% isn't bad, I suspected that better should be possible.  And that led me to the &lt;a href=&quot;https://aws.amazon.com/textract/&quot;&gt;AWS Textract&lt;/a&gt; service.&lt;/p&gt;

&lt;p&gt;Unfortunately what I found was that even the &quot;machine learning&quot; powered Textract service:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Amazon Textract overcomes these challenges by using machine learning to instantly “read” virtually any type of document to accurately extract text and data without the need for any manual effort or custom code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;failed to get email addresses reliably out of simple PDF resumes (note - my overall review on Textract is still generally positive; see Conclusion below).  The failure rate was better – roughly 10% instead of 30% but it still failed.  What I did find fascinating, however, is how AWS Textract works under the hood.  There appear to be  three results from the Textract API call:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;apiResponse.json&lt;/li&gt;
  &lt;li&gt;keyValues.csv&lt;/li&gt;
  &lt;li&gt;rawText.txt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These three results have different functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a set of bounding boxes with text elements right down to geometry&lt;/li&gt;
  &lt;li&gt;a set of semantic fields that they found in the document (I generally found this pretty useless; for a resume I would have expected things like contact info to be key values; instead it was a graduation date)&lt;/li&gt;
  &lt;li&gt;the full text of the document&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of the apiResponse.json which was the most interesting of these (note that I modified the contact info before to be nonsense values in the interest of candidate privacy):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;DocumentMetadata&quot;: {
    &quot;Pages&quot;: 1
  },
  &quot;JobStatus&quot;: &quot;SUCCEEDED&quot;,
  &quot;Blocks&quot;: [
    {
      &quot;BlockType&quot;: &quot;PAGE&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 1,
          &quot;Height&quot;: 1,
          &quot;Left&quot;: 0,
          &quot;Top&quot;: 0
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0,
            &quot;Y&quot;: 0
          },
          {
            &quot;X&quot;: 1,
            &quot;Y&quot;: 0
          },
          {
            &quot;X&quot;: 1,
            &quot;Y&quot;: 1
          },
          {
            &quot;X&quot;: 0,
            &quot;Y&quot;: 1
          }
        ]
      },
      &quot;Id&quot;: &quot;87aab91c-10c3-4191-86ef-1a0f250967be&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;84fa231e-2427-4ca5-9b17-4259f503c86b&quot;,
            &quot;05b76c03-093d-4910-92d3-fb44105a7ba8&quot;,
            &quot;d15f7eec-b028-44cd-ae33-533056aa4781&quot;,
            &quot;58e06118-f8e4-480f-b959-3f446bbab5d9&quot;,
            &quot;0d917c44-f204-429f-8cbb-8ec9cb5c7e00&quot;,
            &quot;463bcf6d-c759-49be-b29f-29037e183064&quot;,
            &quot;afe3b98b-7fdb-47ff-8102-593bd827eb8a&quot;,
            &quot;ae57ff27-7202-49fa-b655-6bc8b6ffd789&quot;,
            &quot;71580491-1cd2-423e-806f-5e0feef655b3&quot;,
            &quot;a64ce3df-d8fb-4d83-85df-591d18f4bcb3&quot;,
            &quot;8fe6464f-56bd-4c34-97a9-bb006d45b344&quot;,
            &quot;35c2359a-116a-40d6-8273-e3f4d4c5e2b4&quot;,
            &quot;e1bde700-0c89-42d0-853d-0bc4993399f9&quot;,
            &quot;b3109ceb-d8f8-421e-9244-a07a2a9b5239&quot;,
            &quot;f5152abc-6df8-48c0-ae3b-77027809101f&quot;,
            &quot;a046da52-4cea-4e29-a89a-45f21beea3cb&quot;,
            &quot;3cd7399f-6a98-4b4b-897f-78f9b137df21&quot;,
            &quot;bef5b4a7-a1c7-450d-8986-491152dd6d2f&quot;,
            &quot;f351ecec-c23f-4a3a-b9f5-424e596c9415&quot;,
            &quot;75e884d1-50f9-4065-8f69-2d4b58e30d4a&quot;,
            &quot;9a296dac-b804-4613-996b-edfceccfe256&quot;,
            &quot;ae7d1032-90a2-4274-987e-e8eafc61d7e7&quot;,
            &quot;2dc6fe79-2a69-48cb-a4ba-bf8a405acbcd&quot;,
            &quot;d4652eb5-9071-4451-8fcf-46bd61f1c036&quot;,
            &quot;b0fa99d4-fa78-41c7-adf4-0e856e5fbf7b&quot;,
            &quot;d7ac3623-e47c-4200-b55c-11f534058333&quot;,
            &quot;8e157557-b7ab-432b-b0a7-91aaa90672fc&quot;,
            &quot;f602d231-16ef-4eb4-bf25-b03103a9ea06&quot;,
            &quot;836e2ef9-1400-4091-82ba-c89483dea265&quot;,
            &quot;52c86df4-7855-4c6d-b6ed-7bce72e0e27b&quot;,
            &quot;f549a067-879d-4536-93df-47b2be6522ea&quot;,
            &quot;e3340758-ab33-4029-894b-a95b2291e8d9&quot;,
            &quot;5e72a4a3-cb40-4760-b4d9-2168e35d20a7&quot;,
            &quot;a9ee3dfb-67da-4f70-b72e-296302fe73bd&quot;,
            &quot;740d09a0-cbe1-4094-af3f-240a492f7742&quot;,
            &quot;99ed5bc2-8bc5-48c8-8fb1-d25984702d49&quot;,
            &quot;bfd03b33-7bdc-4115-bfc5-3c2aa2cc2c07&quot;,
            &quot;e4fb79b6-6015-46a2-8474-d0aa12f3ab8c&quot;,
            &quot;62c38550-9fb4-4f8f-ae31-d7137294439e&quot;,
            &quot;0d8fa105-9bcb-4a6d-b3f9-f3332202edfe&quot;,
            &quot;8a221c4f-0fc4-4db8-b550-5b4592d9d7cd&quot;,
            &quot;290058c0-1c75-43b8-b158-bdd409ae8a83&quot;,
            &quot;98ae6f91-842a-4aa9-b78b-7bed745ad9cd&quot;,
            &quot;f4e7228c-6117-462f-a2de-12fe9fdbd318&quot;,
            &quot;8dbc468c-5323-4df0-895c-8ec141d270ff&quot;,
            &quot;1bd5d158-a9f5-4942-aecb-1ad4acbe0242&quot;,
            &quot;3c2c9a98-32cd-44bd-a41d-2d167fd0c660&quot;,
            &quot;ffe50c97-3ef7-485d-9662-0e51bc0532e9&quot;,
            &quot;44eab195-e89f-4468-a6ac-7e783eea7e70&quot;,
            &quot;905344ed-5bb6-4a48-90c1-91ec5df2731e&quot;,
            &quot;9a9d401a-646f-4c63-848e-c63ced45613c&quot;,
            &quot;c169fa15-17a9-4d66-a2a5-d04604717f41&quot;,
            &quot;5fdaccd1-0548-40d6-91f5-e715ea6cc7cc&quot;,
            &quot;4931b0c8-d22a-49b5-b693-7c8e2cd57b2b&quot;,
            &quot;91568b1f-4724-40d0-8018-29385ff48b41&quot;,
            &quot;38ed7115-a109-40f9-bc58-efd346b0189d&quot;,
            &quot;ba5b8e71-c982-49a4-a32e-2505eb07634a&quot;,
            &quot;2f25027e-774c-4284-a52a-615fef4b8a9e&quot;,
            &quot;bb2239fe-e9e0-4498-8632-94a7edcb144e&quot;,
            &quot;1d651db9-1518-4432-85d2-9d7cf9362847&quot;,
            &quot;e419bc6c-690a-4bef-b830-1b991b88949c&quot;,
            &quot;1e5306d2-e0ea-4b47-953e-8140b8c7cbcb&quot;,
            &quot;71fb110f-a8a6-4285-bc25-63941faf0778&quot;,
            &quot;62832387-9ea9-4564-a4c3-871c5f15d729&quot;,
            &quot;59b7a3e4-acea-4625-b6f8-05886d558e52&quot;,
            &quot;14336d40-fd0c-47b7-aff6-5213c6d7a0f7&quot;,
            &quot;e58e4ba0-567f-494d-91d8-fb2c4aa6eec0&quot;,
            &quot;29cea082-c4df-41cf-9a68-1c9a388be9b3&quot;,
            &quot;24abce03-8a73-4c2e-9bca-e25ee82d7ce5&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
    {
      &quot;BlockType&quot;: &quot;LINE&quot;,
      &quot;Confidence&quot;: 99.34569549560547,
      &quot;Text&quot;: &quot;Austin Johnson&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 0.17683932185173035,
          &quot;Height&quot;: 0.01665823720395565,
          &quot;Left&quot;: 0.4110524356365204,
          &quot;Top&quot;: 0.046603888273239136
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0.4110524356365204,
            &quot;Y&quot;: 0.046603888273239136
          },
          {
            &quot;X&quot;: 0.5878917574882507,
            &quot;Y&quot;: 0.046603888273239136
          },
          {
            &quot;X&quot;: 0.5878917574882507,
            &quot;Y&quot;: 0.06326212733983994
          },
          {
            &quot;X&quot;: 0.4110524356365204,
            &quot;Y&quot;: 0.06326212733983994
          }
        ]
      },
      &quot;Id&quot;: &quot;84fa231e-2427-4ca5-9b17-4259f503c86b&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;b90a16d9-f9a8-40b9-8407-1f41d7434c0f&quot;,
            &quot;af247f18-04bb-45ce-b48b-884440f3f669&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
    {
      &quot;BlockType&quot;: &quot;LINE&quot;,
      &quot;Confidence&quot;: 91.6850357055664,
      &quot;Text&quot;: &quot;+1 (267) 999-8879&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 0.14686554670333862,
          &quot;Height&quot;: 0.014410415664315224,
          &quot;Left&quot;: 0.08256683498620987,
          &quot;Top&quot;: 0.06718409806489944
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0.08256683498620987,
            &quot;Y&quot;: 0.06718409806489944
          },
          {
            &quot;X&quot;: 0.2294323742389679,
            &quot;Y&quot;: 0.06718409806489944
          },
          {
            &quot;X&quot;: 0.2294323742389679,
            &quot;Y&quot;: 0.08159451931715012
          },
          {
            &quot;X&quot;: 0.08256683498620987,
            &quot;Y&quot;: 0.08159451931715012
          }
        ]
      },
      &quot;Id&quot;: &quot;05b76c03-093d-4910-92d3-fb44105a7ba8&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;9b1f5522-2874-4348-9deb-c91b8f46ffe0&quot;,
            &quot;4331a1bf-ecc0-4d5a-b4fe-d19b1a3629d5&quot;,
            &quot;8c09ea37-ace2-4dd3-83e2-83137fc27f10&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
    {
      &quot;BlockType&quot;: &quot;LINE&quot;,
      &quot;Confidence&quot;: 98.89478302001953,
      &quot;Text&quot;: &quot;austinjohnson@gmail.com&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 0.21318471431732178,
          &quot;Height&quot;: 0.015170887112617493,
          &quot;Left&quot;: 0.7046566009521484,
          &quot;Top&quot;: 0.06679927557706833
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0.7046566009521484,
            &quot;Y&quot;: 0.06679927557706833
          },
          {
            &quot;X&quot;: 0.9178413152694702,
            &quot;Y&quot;: 0.06679927557706833
          },
          {
            &quot;X&quot;: 0.9178413152694702,
            &quot;Y&quot;: 0.08197016268968582
          },
          {
            &quot;X&quot;: 0.7046566009521484,
            &quot;Y&quot;: 0.08197016268968582
          }
        ]
      },
      &quot;Id&quot;: &quot;d15f7eec-b028-44cd-ae33-533056aa4781&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;4e82dc44-c82f-4b30-b830-d13d201f61ad&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It would actually be pretty simply to take this JSON and walk across it with a map operation on a series of regular expressions and extract an email address -or- a header block (on the assumption that resumes have contact info in the first say 10 lines of the resume).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Even though I wasn't as impressed by the Textract as I wanted to be, it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;performed quite well&lt;/li&gt;
  &lt;li&gt;was easier to get running that using Python and NLTK&lt;/li&gt;
  &lt;li&gt;didn't return the amount of garble text (i.e. PDF display instructions) that I saw using Python&lt;/li&gt;
  &lt;li&gt;structured the API results well enough that I could easily manipulate it to get the information I wanted out of the result&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bravo AWS!  Nicely done.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/03/05/pdf-text-extraction-is-hard-even-for-aws-textract.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/03/05/pdf-text-extraction-is-hard-even-for-aws-textract.html</guid>
        
        <category>aws</category>
        
        <category>python</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>When to Use a Helper Method in Rails</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:35:17.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;One of the more interesting facilities in Rails &lt;em&gt;helpers&lt;/em&gt; which reside in app/helpers/*.rb and are used, well, as helpers.  Helpers are basically display level execution of Ruby code.  I recently wrote what I thought was a great example of a helper so I thought I'd document it.  What I had was a object, stored in the database which had a bunch of data that I needed to display:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;the object, called a label
  A serialized hash called labeled_data
     label0 
     label1
     label2
     label3
     label4
     label5
     label6
     label7
     label8
     label9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I wanted to do was transform this, at display time, to an HTML structure like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;label0: &amp;lt;b&amp;gt;The Data for Label 0&amp;lt;/b&amp;gt;
&amp;lt;p&amp;gt;label1: &amp;lt;b&amp;gt;The Data for Label 0&amp;lt;/b&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and, correctly, not show label2, etc if they were blank.  And, naturally, do the right thing when there was no data in the labeled_data hash, etc.  And while I could have done this with a view and code wrapped in evaluation / output tags:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;% and %&amp;gt; or &amp;lt;%= or %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;it is dramatically cleaner to write this type of thing as a helper and then call it as a function like display_labeled_data(label).  Not only does this make the code much cleaner than evaluation / output tags, it also has the advantage of being testable.  Now all that said, here is the code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;display_labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;p&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;:&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;extracted_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;br/&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html_safe&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The key idea here is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create an output object, in this case an array or []&lt;/li&gt;
  &lt;li&gt;loop a data structure – label.labeled_data.keys&lt;/li&gt;
  &lt;li&gt;as you loop the data structure, put things into the output object like a paragraph tag, the name of the key i.e. &quot;label0&quot;, a ':'&lt;/li&gt;
  &lt;li&gt;clean up the data by converting new lines to html line breaks&lt;/li&gt;
  &lt;li&gt;add the data into the output element&lt;/li&gt;
  &lt;li&gt;add a closing p tag&lt;/li&gt;
  &lt;li&gt;add a line break onto every element of the output object (using join which acts like a map command) and then tell the Rails environment to NOT escape the output because it is known to be &quot;html_safe&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This routine is then called in my display template like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= display_labeled_data(@label) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;on the show page for the labels controller.  See – Rails helpers, easy peasy!&lt;/p&gt;

&lt;h2 id=&quot;pro-tip---helpers-like-rake-tasks-have-a-global-namespace&quot;&gt;Pro Tip - Helpers, like Rake Tasks, have a Global Namespace&lt;/h2&gt;

&lt;p&gt;And, in closing here's the pro tip:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Helpers, like Rake tasks, are stored in different files&lt;/li&gt;
  &lt;li&gt;This makes you think that a display_labeled_data method in, say, labels_helper.rb which is different from a method called display_labeled_data in say projects_helper.rb.&lt;/li&gt;
  &lt;li&gt;Nope!  It is a global namespace&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that is why I simply put all my helpers into the project level application_helper.rb instead of into the controller level, automatically generated helpers – it helps me always remember that helpers share a global namespace.  And keep in mind that methods defined in rake tasks also share a global namespace.&lt;/p&gt;

&lt;p&gt;Oh and did I mention that when you have multiple versions of the same method, which one gets called is often random because it depends on compilation order which is tied to filesystem return order on lists of all files with a .rb extension …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The global namespace thing on Rake tasks can be particularly tricky when you a Ruby gem which injects Rake tasks into your project behind the scenes.  This one time, I had a one day contractor who checked in a Rake task with a method named &lt;strong&gt;run&lt;/strong&gt;.  And that was just fine until 9 months later when we switched our deployment method from Capistrano to Vlad and Vlad, at least at that time, had a method internal to its Rake task called &lt;strong&gt;run&lt;/strong&gt;.  Chasing that one down literally gave me some gray hairs.  Ah, happy, happy joy joy!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/04/when-to-use-a-helper-method-in-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/04/when-to-use-a-helper-method-in-rails.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>netlabeler</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Your Global .gitconfig</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2192.jpeg&quot; alt=&quot;IMG_2192.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had a question recently about my use of &lt;strong&gt;git trash&lt;/strong&gt; which isn't a standard git command.  I accomplished this, about a decade ago, by modifying ~/.gitconfig and, well, I haven't thought about it ever since.  Here's my ~/.gitconfig as an example.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[color]
diff = auto
status = auto
branch = auto
[color &quot;branch&quot;]
current = yellow reverse
local = yellow
remote = green
[color &quot;diff&quot;]
meta = yellow bold
frag = magenta bold
old = red bold
new = green bold
[color &quot;status&quot;]
added = yellow
changed = green
untracked = cyan
[user]
name = Scott Johnson
email = blahblahblah@gmail.com
[alias]
co = checkout
st = status
br = branch
trash = checkout -f
lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset' --abbrev-commit
[apply]
whitespace = nowarn
[core]
excludesfile = /Users/sjohnson/.gitignore_global
[difftool &quot;sourcetree&quot;]
cmd = opendiff \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;
path = 
[mergetool &quot;sourcetree&quot;]
cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot; -ancestor \&quot;$BASE\&quot; -merge \&quot;$MERGED\&quot;
trustExitCode = true
[filter &quot;lfs&quot;]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
required = true
process = git-lfs filter-process
[push]
default = simple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The key thing, to support git trash, is the [alias] section.  This is where you can define your own custom commands based on the fundamental git primitives.  My git lg command is also pretty nice (and courtesy from Sean Kennedy).&lt;/p&gt;

&lt;p&gt;Another really, really useful thing is the excludesfile setting which lets you tell git to never, ever worry about a file like the cursed &lt;strong&gt;.DS_Store&lt;/strong&gt; files which OSX persists in generating.&lt;/p&gt;

&lt;p&gt;This is generally stored in something like /Users/username/.gitignore_global.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2020/03/03/your-global-gitconfig.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2020/03/03/your-global-gitconfig.html</guid>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>No React Native Didn't Just Get Killed</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:45:00.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Once upon a time I blogged about the controversial things but now, well, I mostly don't care.  Still every so often you come along someone getting things so, so, so wrong that you feel compelled to respond.  I'm speaking to this tweet by DHH, someone I deeply, deeply respect:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Did Facebook just kill off React Native? Either way, it's funny that I actually agree. &lt;a href=&quot;https://twitter.com/dhh/status/1234644555258978304&quot;&gt;More&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nope.  We didn't just see React Native get killed.  Just because Facebook may not be using it for Messenger, it doesn't mean that React Native has been killed.  What it likely means is that React Native simply &lt;strong&gt;isn't the right technology&lt;/strong&gt; for Messenger at this time.&lt;/p&gt;

&lt;p&gt;Here is what React Native lets you do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use a single code base across multiple platforms.&lt;/li&gt;
  &lt;li&gt;Have less employees on the same project because it is a single code base.&lt;/li&gt;
  &lt;li&gt;Work in JavaScript instead of native languages (Objective C / Swift or Java / Kotlin).&lt;/li&gt;
  &lt;li&gt;Have an app that works more universally instead of more &quot;platform like&quot; (i.e. the user interface abstractions that a cross platform tool like React Native use have a cost in terms of look and feel) .&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I mean does anyone actually think that Facebook can't afford multiple teams to work on Messenger?  I certainly don't.  And I also don't think that Facebook needs to have developers working in JavaScript instead of native languages.  My suspicion is that Facebook simply made an &lt;strong&gt;economic decision&lt;/strong&gt; around resourcing of teams and / or a decision that native languages would result in a better user experience.  But this is an economic decision that is tied to the large economic resources that Facebook has.  We saw a similar decision a year or two ago when AirBnB left React Native and, again, that did not kill React Native.&lt;/p&gt;

&lt;p&gt;Cross platform development technologies like React Native and Flutter still have a place in the world as most companies / organizations simply don't have the massive economic resources of a Facebook (or AirBnB).&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/react/2020/03/03/no-react-native-didn-t-just-get-killed.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/react/2020/03/03/no-react-native-didn-t-just-get-killed.html</guid>
        
        <category>react</category>
        
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>Using Rust Playground for Hello World and Variable Interpolation</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1313.jpg&quot; alt=&quot;IMG_1313.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.facebook.com/autumnmottart&quot;&gt;Artwork by my friend Autumn Mott; Hopefully I can find a better link to put here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a Monday and what better way to start your 6 am Monday morning then learning some of the elements of a new language – Rust.&lt;/p&gt;

&lt;p&gt;I started by adding a link in my Browser toolbar to the Rust Playground which amounts to a web based REPL (Read Evaluate Print Loop) for Rust where you can type in Rust code and run it.  Yes I know it really isn't a REPL because Rust is a compiled language not an interpreted one but it functions well enough as a REPL that I can wrap my Ruby tinged mind around it.&lt;/p&gt;

&lt;p&gt;Here's the Hello World program that automatically appears in the Rust playground&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output of this is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello, world!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That's pretty easy to understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A main function defined with fn&lt;/li&gt;
  &lt;li&gt;A print line function defined with a ! (my previous Rust reading tells me that's a macro indicator)&lt;/li&gt;
  &lt;li&gt;{ and } to denote structure&lt;/li&gt;
  &lt;li&gt;A ; to denote the end of lines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I wanted to make a simple change to experiment with the use of variables so I added a main2() function and called it from main():&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;main2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The value of x is: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The value of y is: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output of this is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello, world!
The value of x is: 5
The value of y is: 6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can see that the &lt;strong&gt;let&lt;/strong&gt; keyword assigns a variable and that {} binds a variable into a string (which is generally called interpolation).&lt;/p&gt;

&lt;p&gt;Note: Variables quickly bring you in to the heart of Rust – &lt;a href=&quot;https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html&quot;&gt;immutability&lt;/a&gt; – and here there by dragons that hopefully come up tomorrow after some reading.&lt;/p&gt;

&lt;h2 id=&quot;link&quot;&gt;Link&lt;/h2&gt;

&lt;p&gt;Here's a &lt;a href=&quot;https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=496e2617d024958faf48d84553bd8cf1&quot;&gt;permanent link&lt;/a&gt; to this if you want to try it out.&lt;/p&gt;

&lt;h2 id=&quot;what-about-replit&quot;&gt;What about Repl.it?&lt;/h2&gt;

&lt;p&gt;Another way to have a web based REPL for Rust is &lt;a href=&quot;https;//www.repl.it&quot;&gt;Repl.it&lt;/a&gt;.  And while I like the concept of repl.it, they have eliminated any privacy without a paid account: Upgrade your account for private repls.  This appears on the bottom of every new REPL you create and at $74 / 12 months that feels &lt;a href=&quot;https://repl.it/site/pricing&quot;&gt;expensive&lt;/a&gt; simply for the basics of privacy.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/03/02/using-rust-playground-for-hello-world-and-variable-interpolation.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/03/02/using-rust-playground-for-hello-world-and-variable-interpolation.html</guid>
        
        <category>rust</category>
        
        <category>variables</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Rails Form Technique - Using collection_select with Open Structs</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0741.jpeg&quot; alt=&quot;IMG_0741.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've written about Open Structs before:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2017/01/16/ruby-how-to-sort-an-open-struct.html&quot;&gt;Sorting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2020/02/09/when-you-need-a-ruby-data-structure-that-responds-to-method-calls-use-openstruct.html&quot;&gt;Responding to Method Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To review, an Open Struct is a hash like data structure that responds to dot methods (i.e. .id or .name).  I use these in a lot of different places and I just finished using them for a form &lt;a href=&quot;https://apidock.com/rails/ActionView/Helpers/FormOptionsHelper/collection_select&quot;&gt;collection_select&lt;/a&gt; operation.&lt;/p&gt;

&lt;p&gt;The Rails collection_select form helper is really designed to work with database objects that you need to make pick lists from.  The canonical usage is like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form.label :project_id %&amp;gt;
&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collection_select&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The expression current_user.projects.all is a list of all projects as an iterable ActiveRecord collection and what collection_select does under the hood is loop over the collection and call the .id and .name methods (.id is the value in the collection and .name is what's displayed).  And this works &lt;strong&gt;great&lt;/strong&gt; – until what you have to select isn't a database collection.  And that, dear reader, is where open structs come out to play!&lt;/p&gt;

&lt;p&gt;Here's what I just did:&lt;/p&gt;

&lt;h2 id=&quot;controller-side&quot;&gt;Controller Side&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;web_browser_on_computer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Web Browser (Desktop Computer)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mobile_app&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mobile App&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This defines an array of open struct objects.  And an array is an iterable collection just like the database collection so this implementation, despite being an entirely different underlying data structure, works just like the ActiveRecord collection based version.&lt;/p&gt;

&lt;h2 id=&quot;view-side&quot;&gt;View Side&lt;/h2&gt;

&lt;p&gt;And here's the view side:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form.label :context %&amp;gt;
&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collection_select&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;appearance&quot;&gt;Appearance&lt;/h2&gt;

&lt;p&gt;Here's how this looks by default and then when dropped down:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/collection_select_open_struct01.png&quot; alt=&quot;collection_select_open_struct01.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/collection_select_open_struct02.png&quot; alt=&quot;collection_select_open_struct02.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/01/rails-form-technique-using-collection-select-with-open-structs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/01/rails-form-technique-using-collection-select-with-open-structs.html</guid>
        
        <category>rails</category>
        
        <category>open_struct</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Access to Rust Docs When You are Offline</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01114.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This one is short but simple since I didn't have it on my last flight and I fly again tomorrow.  To access your Rust documentation when you aren't online:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rustup docs --book
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That brings up a browser with a full implementation of the rust docs.  Not only is there a full table of contents but it is also searchable.&lt;/p&gt;

&lt;p&gt;There is also the magic of &lt;a href=&quot;https://devdocs.io/r&quot;&gt;devdocs.io&lt;/a&gt; but that requires that you were wise enough to have pre-clicked the install for offline option.  And, alas, I was not.&lt;/p&gt;

</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/02/29/getting-access-to-rust-docs-when-you-are-offline.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/02/29/getting-access-to-rust-docs-when-you-are-offline.html</guid>
        
        <category>rust</category>
        
        <category>docs</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Stupid Simple Duplicate Prevention Using Redis</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2004.jpg&quot; alt=&quot;IMG_2004.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I just saw this log message popup on a SystemD service I wrote yesterday:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Feb 24 10:27:11 ip-172-31-24-213 reddit_to_kafka[18391]: Already exists in redis so also in kafka so skipping
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sometimes you need to solve a problem without a lot of effort.  Yesterday I needed to populate a Kafka queue with data and I didn't want to worry about duplicates flowing into it.  Here's what I knew:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My source wasn't a stream but a set of social media posts that I was monitoring&lt;/li&gt;
  &lt;li&gt;I didn't have a database&lt;/li&gt;
  &lt;li&gt;I didn't want the overhead of checking a database before I inserted&lt;/li&gt;
  &lt;li&gt;Every post had an id that I knew would be unique (if I pre-pended it with the name of the source)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever I have a problem like this, I reach for &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; almost instinctively.  My stupid, simple solution was as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create a key i.e. key = &quot;reddit_#{message.id}&quot;&lt;/li&gt;
  &lt;li&gt;create a Redis object i.e. redis = Redis.new&lt;/li&gt;
  &lt;li&gt;check if the key already exists using redis.exists(key)&lt;/li&gt;
  &lt;li&gt;if that check returns true then do nothing&lt;/li&gt;
  &lt;li&gt;if that check returns false then add the data and set the key (you want to do this AFTER adding the data in case the add fails; atomicity, even pseudo atomicity is a thing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The beauty of Redis is that it installs using nothing more than:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that installs a local installation of Redis – and starts it – that any process can easily connect to (and there are always language bindings for Redis seemingly).  This easy usability for Redis makes it invaluable for this type of task.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: Given the size of my input source and its frequency, I'm not even going to worry about the number of keys and the fact that this approach is pretty brain dead.  When we get a larger volume data feed, I'll circle back and fix it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: It took longer to write this up than it did to actually implement and test this.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2020/02/24/stupid-simple-duplicate-prevention-using-redis.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2020/02/24/stupid-simple-duplicate-prevention-using-redis.html</guid>
        
        <category>redis</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>Generating Your First Rust App with Cargo</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0833.jpeg&quot; alt=&quot;IMG_0833.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Rust tool cargo is the Rust equivalent of rake and bundler and rails combined (these are Ruby tools).  Cargo is what you use to generate a new Rust app.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cargo new loader_datastreamer_to_kafka_rust
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This generates a new, correctly laid out project directory.  And here's what it looks like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ tree
.
├── Cargo.toml
└── src
    └── main.rs

1 directory, 2 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Cargo.toml file is a package manifest which has a default contents of this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ cat Cargo.toml
[package]
name = &quot;loader_datastreamer_to_kafka_rust1&quot;
version = &quot;0.1.0&quot;
authors = [&quot;Scott Johnson &amp;lt;blahblah@gmail.com&amp;gt;&quot;]
edition = &quot;2018&quot;

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any Rust packages, which are named &lt;strong&gt;crates&lt;/strong&gt;, you use in your application would be listed under the dependencies section.  Here's an example of that:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[dependencies]
notify = &quot;4.0.15&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That's an example of using the &lt;a href=&quot;https://crates.io/crates/notify&quot;&gt;notify crate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Your default main.rs file is always stored in src and looks like this initially:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ cat src/main.rs
fn main() {
    println!(&quot;Hello, world!&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yep – you get a Hello World for free when you create any Rust application.&lt;/p&gt;

&lt;p&gt;Cargo actually does quite a bit more than just creating your Rust application but that's a topic for another day.&lt;/p&gt;

</description>
        <pubDate>Sun, 23 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/02/23/generating-your-first-rust-app-with-cargo.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/02/23/generating-your-first-rust-app-with-cargo.html</guid>
        
        <category>rust</category>
        
        <category>docs</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Advice on Importing Wunderlist to Todoist</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1577_hands_only.jpeg&quot; alt=&quot;IMG_1577_hands_only.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wunderlist is now on the real verge of being shutdown by Microsoft and Todoist claims to be &lt;a href=&quot;https://todoist.com/import/wunderlist&quot;&gt;import compatible&lt;/a&gt;.  One thing to know is that Todoist Free has a limit of 50 lists.  If you've used Wunderlist for any number of years then you may find your import failing.  Two options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Merge lists in Wunderlist before importing (I think the limit is the number of discrete lists not the total number of list items)&lt;/li&gt;
  &lt;li&gt;Buy Todoist paid edition (I did only the first paid edition) before you import&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you import and you get a Failed Import message then that's the sign that you need to do either 1 or 2.  The first time I imported, import failed without any feedback.  Props to Todoist for fixing this pretty quickly and that's the reason I paid.&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/wunderlist/2020/02/22/advice-on-importing-wunderlist-to-todoist.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/wunderlist/2020/02/22/advice-on-importing-wunderlist-to-todoist.html</guid>
        
        <category>wunderlist</category>
        
        
        <category>wunderlist</category>
        
      </item>
    
      <item>
        <title>Great Rust Libraries / Tools</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1986.jpeg&quot; alt=&quot;IMG_1986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't often do the dance with new languages.  I suspect you could view my approach to languages as monogamy – I've been in a long term, monogamous relationship with Ruby now since 2007.  But 12 years is a long time and deciding to dance with Python this past fall was perhaps my break through event away from &quot;language monogamy&quot;.  I'm now happily dating other languages and the latest one to turn my head is &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I've been very impressed with the quality of the core tooling around Rust and here are some of those tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/IntrepidPig/orca&quot;&gt;https://github.com/IntrepidPig/orca&lt;/a&gt; – Reddit client library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/aho-corasick&quot;&gt;https://github.com/BurntSushi/aho-corasick&lt;/a&gt; – String / Substring matcher&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/aho-corasick&quot;&gt;https://crates.io/crates/kafka&lt;/a&gt; – Kafka client&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/notify-rs/notify&quot;&gt;https://github.com/notify-rs/notify&lt;/a&gt; – Filesystem watcher; this is what drew me to using Rust; I have a high performance application where I'm virtually certain Ruby is going to fall over and die.  Rust gives me an alternative.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/francesca64/hotwatch&quot;&gt;https://github.com/francesca64/hotwatch&lt;/a&gt; - make notify easier to use&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://eradman.com/entrproject/&quot;&gt;http://eradman.com/entrproject/&lt;/a&gt;  – A filesystem watcher built on top of Rust; possible alternative.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://eradman.com/entrproject/&quot;&gt;https://github.com/watchexec/watchexec&lt;/a&gt; – Another filesystem watcher built on top of Rust; possible alternative.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/spacejam/sled&quot;&gt;https://github.com/spacejam/sled&lt;/a&gt; – An embedded database built in Rust&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bastion-rs/bastion&quot;&gt;https://github.com/bastion-rs/bastion&lt;/a&gt; – Seemingly an Erlang like distributed runtime; fascinating AF if it is true&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the reasons you use Rust is performance and the metrics on Sled are pretty impressive:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;over a billion operations in under a minute at 95% read 5% writes on 16 cores on a small dataset&lt;/li&gt;
  &lt;li&gt;a crash-safe monotonic ID generator capable of generating 75-125 million unique ID's per second&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sources--things-to-read&quot;&gt;Sources / Things to Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.rust-lang.org/learn/get-started&quot;&gt;Getting Started with Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.codeship.com/coming-rust-ruby/&quot;&gt;Rust and Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/getting-started-with-rust-and-kafka/&quot;&gt;Rust and Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rust/comments/57ybqa/watchexec_rustbased_file_watcher_for_os_x_linux/&quot;&gt;Rust File Watcher&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/carols10cents/rust.tmbundle&quot;&gt;Textmate 2 and Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://crates.io/&quot;&gt;Rust Package Index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 21 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/02/21/great-rust-libraries-tools.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/02/21/great-rust-libraries-tools.html</guid>
        
        <category>rust</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>ADL Bias and Diversity Training</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03017.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;As a contractor for the ADL, I recently went through our official bias and diversity training.  I put together my notes on that for a new hire who recently joined us.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0798.jpeg&quot; alt=&quot;IMG_0798.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0799.jpeg&quot; alt=&quot;IMG_0799.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0800.jpeg&quot; alt=&quot;IMG_0800.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0801.jpeg&quot; alt=&quot;IMG_0801.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0802.jpeg&quot; alt=&quot;IMG_0802.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0803.jpeg&quot; alt=&quot;IMG_0803.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0804.jpeg&quot; alt=&quot;IMG_0804.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0805.jpeg&quot; alt=&quot;IMG_0805.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0806.jpeg&quot; alt=&quot;IMG_0806.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0807.jpeg&quot; alt=&quot;IMG_0807.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0808.jpeg&quot; alt=&quot;IMG_0808.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0809.jpeg&quot; alt=&quot;IMG_0809.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0810.jpeg&quot; alt=&quot;IMG_0810.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0812.jpeg&quot; alt=&quot;IMG_0812.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0813.jpeg&quot; alt=&quot;IMG_0813.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0814.jpeg&quot; alt=&quot;IMG_0814.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0815.jpeg&quot; alt=&quot;IMG_0815.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here are some of the discussion questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is it ok for people of a group to use slurs about their own identity?&lt;/li&gt;
  &lt;li&gt;Should airlines be required to provide multiple seats to obese people ?&lt;/li&gt;
  &lt;li&gt;Does your work place treat everyone fairly?&lt;/li&gt;
  &lt;li&gt;Can anyone be successful in the USA?&lt;/li&gt;
  &lt;li&gt;Does the USA live up to its ideals of racial diversity?&lt;/li&gt;
  &lt;li&gt;Do women have the same opportunities as men?&lt;/li&gt;
  &lt;li&gt;Do people of color have the same opportunities as white people?&lt;/li&gt;
  &lt;li&gt;Peanut butter racism&lt;/li&gt;
  &lt;li&gt;Blind spot bias you may have bias that you see in others but can't see in yourself&lt;/li&gt;
  &lt;li&gt;White fragility by d Angelo&lt;/li&gt;
  &lt;li&gt;MTV micro aggressions&lt;/li&gt;
  &lt;li&gt;(my personal favorite (this is a Scott thing)- &lt;a href=&quot;https://www.youtube.com/watch?v=oQbei5JGiT8&quot;&gt;Tea and Consent&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 20 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bias/2020/02/20/adl-bias-and-diversity-training.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bias/2020/02/20/adl-bias-and-diversity-training.html</guid>
        
        <category>bias</category>
        
        <category>diversity</category>
        
        
        <category>bias</category>
        
      </item>
    
      <item>
        <title>Rails Console and Test Mode</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1831.jpeg&quot; alt=&quot;IMG_1831.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a short one but a good one.  One really useful trick is to launch Rails console in test mode:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ RAILS_ENV=test rails c
Running via Spring preloader in process 41705
Loading test environment (Rails 6.0.2.1)
irb: warn: can't alias context from irb_context.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can check the Rails environment this way:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.7.0 :001 &amp;gt; Rails.env
&quot;test&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The benefit to this is that you can work directly with FactoryBot and experiment with factories:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.7.0 :002 &amp;gt; project = FactoryBot.create(:project, name: &quot;Scott's Project&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FactoryBot is installed via Gemfile and locked into test environment only (which is why you need to launch Rails console in test mode):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :test do
  # Adds support for Capybara system testing and selenium driver
  gem &quot;capybara&quot;, &quot;&amp;gt;= 2.15&quot;
  gem &quot;selenium-webdriver&quot;
  # Easy installation and use of web drivers to run system tests with browsers
  gem &quot;webdrivers&quot;
  gem 'factory_bot_rails'
  #gem 'database_cleaner'
  # gem 'shoulda'
  # gem 'shoulda-matchers'
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 19 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/02/19/rails-console-and-test-mode.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/02/19/rails-console-and-test-mode.html</guid>
        
        <category>rails</category>
        
        <category>test</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Great Con Signage</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03827.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I spent a lot of time in the world of Science Fiction and Fantasy conventions and it has fascinated me how far that world is beyond the normal (aka muggle or mundane) world when it comes to concepts like consent.  I was recently at the &lt;a href=&quot;http://confusionsf.org/&quot;&gt;Confusion&lt;/a&gt; convention in Detroit and I captured the signage that talked about these things because they did such a good job with it (and with integrating it into the con's How To Train Your Confusion theme).&lt;/p&gt;

&lt;h2 id=&quot;consent-related-signage&quot;&gt;Consent Related Signage&lt;/h2&gt;

&lt;p&gt;Here is the consent related signage:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1478_2.jpeg&quot; alt=&quot;IMG_1478_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1483_2.jpeg&quot; alt=&quot;IMG_1483_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1485_2.jpeg&quot; alt=&quot;IMG_1485_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1484_2.jpeg&quot; alt=&quot;IMG_1484_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1482_2.jpeg&quot; alt=&quot;IMG_1482_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1480_2.jpeg&quot; alt=&quot;IMG_1480_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gluten-free-signage&quot;&gt;Gluten Free Signage&lt;/h2&gt;

&lt;p&gt;Since I'm a food person, I also captured how they approached the gluten free signage:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1472_2.jpeg&quot; alt=&quot;IMG_1472_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1473_2.jpeg&quot; alt=&quot;IMG_1473_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;about-confusion&quot;&gt;About Confusion&lt;/h2&gt;

&lt;p&gt;Confusion is a fan run, Detroit based science fiction convention with a surprisingly good &quot;feel&quot; to it. Among the cool features is a dance party DJ'd by non other than &lt;a href=&quot;https://whatever.scalzi.com/&quot;&gt;John Scalzi&lt;/a&gt;.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/cons/2020/02/18/great-con-signage.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cons/2020/02/18/great-con-signage.html</guid>
        
        <category>cons</category>
        
        <category>gender</category>
        
        <category>consent</category>
        
        
        <category>cons</category>
        
      </item>
    
      <item>
        <title>So You Just Graduated with a Computer Degree</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/photo_2020-02-18 06.42.12.jpeg&quot; alt=&quot;photo_2020-02-18 06.42.12.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have a good friend who is about to graduate with a Computer Science degree and, as a seasoned professional in the field (aka old fart), I know he's going to be asking me for advice.  And if I'm going to give cogent advice, I always feel that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It might be useful to someone else so putting it online is helpful&lt;/li&gt;
  &lt;li&gt;Advice is improved by clear thinking and clear thinking comes from written expression (at least for me)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My view of the time between graduation and joining the workforce is that you want to build the habits that will make you succcessful in your &lt;strong&gt;career&lt;/strong&gt;.  Note that I said &lt;strong&gt;career&lt;/strong&gt; and not your first job.&lt;/p&gt;

&lt;h2 id=&quot;your-job-will-be-40-hours-per-week&quot;&gt;Your Job Will Be 40 Hours Per Week&lt;/h2&gt;

&lt;p&gt;My first bit of real advice to a new graduate is that your job, unless it pays overtime, is 40 hours per week.  Your employer will always subtly or not so subtly encourage you to work more and, if you like computer stuff, it is &lt;em&gt;easy&lt;/em&gt; to fall into a model where you work more than 40 hours.  I did this for years and years and, imho, it didn't pay off.  We all have the belief that if we work hard and put in the time that we will get ahead.  Given the myriad disconnects between employer and employee, I no longer think that's the case.  And, yes, there are times where some extra work is called for but making it a systemic practice that defines your life, well, that's just dumb and it is &lt;strong&gt;poor career management&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;build-something&quot;&gt;Build Something&lt;/h2&gt;

&lt;p&gt;My basic recommendation to you is that you build something that you personally want.  This is also known as a side project.  I'm a fan of side projects as a way of improving yourself / teaching yourself new things.  And, sometimes, side projects become real and make you money (my RSS search that I made back in 2003 over a snowy weekend ended up becoming a venture funded thing).  Now that is a best case, you could also end up with a directory of side projects that never go anywhere (I have that too).  You should understand that what is going to happen to you once you graduate and leave formal academia is your skills begin to atrophy; this is real and it happens.  A side project, even a crappy one that you think no employer might appreciate, keeps your engineering skills alive.  And even though you'd like to think you are going to roll from school right into engineering work but when you see articles like &lt;a href=&quot;https://daves.blog/blog/why-cant-good-engineers-get-hired&quot;&gt;this&lt;/a&gt; regularly appearing, it means that the hiring path is sometimes not so clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Employers, and, yes, I'm one, are generally impressed by side projects.  Most people don't have them so they do distinguish you from other candidates.&lt;/p&gt;

&lt;h2 id=&quot;network&quot;&gt;Network&lt;/h2&gt;

&lt;p&gt;Networking, generally a hard thing for engineers, is an invaluable skill and the best way to understand it if you are an engineer is this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Networking is &quot;Lunch with Friends You Might Not Have Made Yet&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my friends case, he and I are having lunch today and we will talk shop a bit.  Now this is easier because he actually knows me and can talk to me.  But that's the essence of networking - it is learning to talk to people and that is an invaluable skill.&lt;/p&gt;

&lt;h2 id=&quot;goto-meetups&quot;&gt;Goto Meetups&lt;/h2&gt;

&lt;p&gt;If you don't have people you can network with then you need to find them and the best way is generally your local meetup.  Even here in Indianapolis, not a huge city and certainly not a tech hub, I could literally go to a meetup every day for lunch and dinner and advance my career in terms of learning and meeting people.  And I've never seen a meetup where they don't go around the room and ask:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Who's hiring?&lt;/li&gt;
  &lt;li&gt;Who's looking for work?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, wham!, right there you have a ready made job opportunity.&lt;/p&gt;

&lt;p&gt;So figure out what you're interested in and join a meetup and get involved.&lt;/p&gt;

&lt;h2 id=&quot;volunteer&quot;&gt;Volunteer&lt;/h2&gt;

&lt;p&gt;I didn't used to be a fan of this but a good friend turned me onto community involvement and volunteering over the past 15 months or so and it has been a very good thing for me.  I actually did a stint as Head of Engineering for StarBase Indy, a local, fan run science fiction convention.  There is always something that needs computer assistance whether it is a local convention, a charity, a cause or some such.  This is another way you can build your skills.&lt;/p&gt;

&lt;h2 id=&quot;build-your-online-profile&quot;&gt;Build Your Online Profile&lt;/h2&gt;

&lt;p&gt;I'm a fan of building a robust online profile.  Now, for me, that mostly amounts to my blog (which you are reading) since I like to write but there are lots of ways to make an online profile:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Answer Stack Overflow Questions&lt;/li&gt;
  &lt;li&gt;Improve Documentation (I can cite one person that I hired into a 6 figure job who got that job mostly because he had contributed to Rails core documentation)&lt;/li&gt;
  &lt;li&gt;Help out with projects on github&lt;/li&gt;
  &lt;li&gt;.. (There are so many online things in the area of software development)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My general recommendation here is use the same profile picture and username across activities since there are candidate evaluation tools that take that into account.&lt;/p&gt;

&lt;h2 id=&quot;it-is-all-about-continuous-self-improvement&quot;&gt;It Is All About Continuous Self Improvement&lt;/h2&gt;

&lt;p&gt;If you look at the points above, it really is all about continuous self improvement.  This is the core habit that you really want to build.&lt;/p&gt;

&lt;h2 id=&quot;buy-josh-doodys-book-now&quot;&gt;Buy Josh Doody's Book Now&lt;/h2&gt;

&lt;p&gt;I'm going to close this out by pimping out a favorite book of mine, &lt;a href=&quot;https://fearlesssalarynegotiation.com/&quot;&gt;Fearless Salary Negotiation&lt;/a&gt; by Josh Doody.  Josh's book is the single best book I've ever read about the practical side of getting a job and the hardest bit for engineers – negotiating our compensation.  I am a 52 year old engineer who has been doing this type of work (ahem crap) for over 30 years and I got a dramatic boost in current gig from what I learned from this book.  If you read this book early in your career, I suspect you can do this most of your career.  This book is short, to the point and utterly hands on.  I can't recommend it enough.&lt;/p&gt;

&lt;p&gt;Note: There is no referral agreement, no tracking code, etc between Josh and I.  I'm simply a fan of his work since it has literally changed my career.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/student/2020/02/17/so-you-just-graduated-with-a-computer-degree.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/student/2020/02/17/so-you-just-graduated-with-a-computer-degree.html</guid>
        
        <category>student</category>
        
        
        <category>student</category>
        
      </item>
    
      <item>
        <title>Writing Ruby Programs Like a Python Programmer</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08786.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;As of late, I have found myself writing a number of what amount to &quot;Non Rails&quot; tools.  These are tools that tend to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run continuously in the background&lt;/li&gt;
  &lt;li&gt;Are deployed as SystemD services on Unix boxes&lt;/li&gt;
  &lt;li&gt;Have the normal issues of coding complexities between development (OSX) and production (Ubuntu)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though I normally just generate a Rails application for even my command line tools, this project felt like minimalism was called for and, well, I wanted that particular challenge.&lt;/p&gt;

&lt;p&gt;In the remainder of this blog post, I'm going to talk about what this looks like and what I've learned from spending a few months in the Python world and how I'm applying it here.&lt;/p&gt;

&lt;h2 id=&quot;file-structure&quot;&gt;File Structure&lt;/h2&gt;

&lt;p&gt;Here's a directory listing from one of these tools.  The thing to understand is that &quot;ohi&quot; is the abbreviation for the project (which explains why you see it multiple times).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ ls -l
total 64
-rw-r--r--@ 1 sjohnson  staff   189 Feb 24 09:58 Gemfile
-rw-r--r--  1 sjohnson  staff  2083 Feb 24 09:58 Gemfile.lock
-rw-r--r--@ 1 sjohnson  staff   307 Feb 24 10:21 README.md
-rwxr-xr-x@ 1 sjohnson  staff   111 Feb 24 14:35 deploy.sh
-rw-r--r--@ 1 sjohnson  staff  3542 Feb 24 14:07 loader.rb
-rw-r--r--@ 1 sjohnson  staff  1477 Feb 24 14:12 loader_kafka_to_ohi.rb
-rw-r--r--@ 1 sjohnson  staff   436 Feb 24 10:29 loader_kafka_to_ohi.service
-rw-r--r--@ 1 sjohnson  staff   125 Feb 24 10:22 loader_kafka_to_ohi.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the role of each of these pieces:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gemfile / Gemfile.lock – the standard Ruby packages that the tool relies on&lt;/li&gt;
  &lt;li&gt;README.md – the Readme&lt;/li&gt;
  &lt;li&gt;deploy.sh – a shell script that SCP's everything up to a deployment server.  Yeah, yeah. I need CI/CD.  And it will come but for now this makes deployment easy.&lt;/li&gt;
  &lt;li&gt;loader.rb – the &quot;God&quot; class for this tool (explained below)&lt;/li&gt;
  &lt;li&gt;loader_kafka_to_ohi.rb – the actual main loop for the tool&lt;/li&gt;
  &lt;li&gt;loader_kafka_to_ohi.service – the SystemD service file for this&lt;/li&gt;
  &lt;li&gt;loader_kafka_to_ohi.sh – the shell script called by the SystemD service file&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;it-really-is-about-separating-def-main-from-supporting-functions&quot;&gt;It really is About Separating def main From Supporting Functions&lt;/h2&gt;

&lt;p&gt;While all these tools tend to come down to the 8 files above (or variants on them), the bulk of it is in two files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;loader_kafka_to_ohi.rb&lt;/li&gt;
  &lt;li&gt;loader.rb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first file, loader_kafka_to_ohi.rb, basically amounts to  a few sections:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A comment at the very top showing how to execute it including any command line arguments&lt;/li&gt;
  &lt;li&gt;A set of require statements to load the gems (remember - this isn't Rails so you need to manually require your gems)&lt;/li&gt;
  &lt;li&gt;Constant declaration&lt;/li&gt;
  &lt;li&gt;A def main function&lt;/li&gt;
  &lt;li&gt;A call to execute main()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the skeleton:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Execution Example&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# RAILS_ENV=development TOPIC=reddit ruby loader_reddit_to_kafka.rb&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'kafka'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mechanize'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ostruct'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redd'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'loader'&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TOPIC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# code here&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note 0&lt;/strong&gt;: You'll notice that I still use the convention of RAILS_ENV for the environment; I'm too damn trained at this point in my career to even consider naming that something else&lt;/p&gt;

&lt;p&gt;Having written a number of these tools lately, I can definitively state that there is a &lt;strong&gt;huge&lt;/strong&gt; clarity of code benefit to separating out the main loop from the supporting code.  It is a forest for the trees sort of thing.&lt;/p&gt;

&lt;p&gt;The second file, loader.rb, is a &quot;God Class&quot; which wraps every function used by main (or any of the functions that main calls) into a single class.  Given that the underlying function of this tool is to load data, well, I call the class: Loader i..e&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Loader&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Even though a God class is generally a bad thing (poor use of name spaces, too big, etc.), I found it to be a decent compromise in terms of abstractions simply because it makes debugging &lt;em&gt;trivial&lt;/em&gt;.  I find myself constantly switching between local development and remote development (where all my tooling like Kafka, my API server, etc) exist.  With a god class like loader, I can easily ssh into my production box and then just use irb in my deployment directory to:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'loader'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then continue figuring out whatever problem has come up with easy access to functions in my god class (everything is just a def self.whatever method in loader.rb so all methods can be called trivially).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: My main loop including require statements, constants and declarations is less than 60 lines and my god class is less than 160 lines.  As I said this is a compromise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Normally the term God object is used instead of &quot;God class&quot; but since I'm not actually ever instantiating an object, it felt like God class was more accurate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: But shouldn't you always have your development environment mirror your production environment?  Sure in an ideal world but Kafka servers are a &lt;em&gt;damn censored&lt;/em&gt; pain in the arse to setup where as the AWS managed kafka service is almost brainless in its simplicity.  This is a very lightly staffed project and I chose to spend my time on coding rather than DevOps (and, yes, getting something complex installed locally is still DevOps).&lt;/p&gt;

&lt;h2 id=&quot;use-require_relative-to-import-a-god-class&quot;&gt;Use require_relative to Import A God Class&lt;/h2&gt;

&lt;p&gt;The key technique to making this style of development work was my realizing that while &lt;a href=&quot;https://www.thoughtco.com/requre-method-2908199&quot;&gt;require&lt;/a&gt; worked for gems, it worked poorly, if at all, for my own function libraries.  The reason for this is apparently Ruby madness with respect to the current working directory or cwd.  Happily &lt;a href=&quot;https://stackoverflow.com/questions/9750610/ruby-require-error-cannot-load-such-file&quot;&gt;require_relative solves this issue with flying colors&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wheres-the-python-connection&quot;&gt;Where's the Python Connection?&lt;/h2&gt;

&lt;p&gt;I find this technique, a god class with require_relative, to be very similar to coding in Python using import statements.  Oddly Python feels a bit more object oriented because anything you import automatically gets treated as a namespace that makes coding look like a class.  Python folk use this technique very readily and I find that flexibility quite pleasant in Ruby (even if I have to define a class to make it work).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 4&lt;/strong&gt;: Yes I should be able to do this also with &lt;a href=&quot;https://ruby-doc.com/docs/ProgrammingRuby/html/tut_modules.html&quot;&gt;modules&lt;/a&gt; but I've found modules to be problematic in past experience so … (and I freely admit that it might be me).&lt;/p&gt;

&lt;h2 id=&quot;what-about-test-coverage&quot;&gt;What About Test Coverage&lt;/h2&gt;

&lt;p&gt;While I shudder to admit it, I actually haven't written test coverage for these things yet.  When I do I'll figure out how to graft test coverage onto a non Rails application.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/15/writing-ruby-programs-like-a-python-programmer.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/15/writing-ruby-programs-like-a-python-programmer.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Installing Ruby using rbenv on Ubuntu 18</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1813.jpeg&quot; alt=&quot;IMG_1813.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;Rbenv&lt;/a&gt; provides a powerful tool for installing ruby on whether on your local box or on your server environment.  While I have traditionally used &lt;a href=&quot;https://rvm.io/&quot;&gt;RVM&lt;/a&gt; for local ruby development, I have found RVM problematic for use in a server context.  As long as you are using bash -lc along with things like &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2020/02/13/making-ruby-scripts-work-under-system-d-using-rbenv.html&quot;&gt;CRON jobs or System D&lt;/a&gt;, rbenv seems to be a great server side tool.&lt;/p&gt;

&lt;p&gt;My inspiration for this came from the &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-ubuntu-16-04&quot;&gt;Digital Ocean&lt;/a&gt; docs.  As always, Digital Ocean does a great job on documentation.&lt;/p&gt;

&lt;p&gt;Here are the steps to get rbenv installed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install rbenv
rbenv
sudo apt-get install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
git clone https://github.com/rbenv/rbenv.git ~/.rbenv
echo 'export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
rbenv install -l | grep 2.7.0
rbenv install 2.7.0
rbenv global 2.7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are the lines from my history file showing my flailing as I attempted to get rbenv installed.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;307  rbenv
308  rbenv install 2.7.0
309  rbenv install --list | grep 2.7
310  cd ~/.rbenv/plugins/ruby-build
311  which ruby-build
312  /usr/bin/ruby-build --version
313  cd ~/.rbenv/plugins/ruby-build
314  sudo apt-get upgrade ruby-build
315  /usr/bin/ruby-build --version
316  rbenv install --list | grep 2.7
317  sudo apt-get install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
318  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
319  echo 'export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
320  echo 'eval &quot;$(rbenv init -)&quot;' &amp;gt;&amp;gt; ~/.bashrc
321  source ~/.bashrc
322  type rbenv
323  git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
324  rbenv install -l
325  rbenv install -l | grep 2.7.0
326  rbenv install 2.7.0
327  rbenv global 2.7.0
328  pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 14 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/14/installing-ruby-using-rbenv-on-ubuntu-18.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/14/installing-ruby-using-rbenv-on-ubuntu-18.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Making Ruby Scripts work Under System D Using rbenv</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1840.jpg&quot; alt=&quot;IMG_1840.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This has bit me I think every single time I make a SystemD launch script using ruby and rbenv (RVM is worse; imho). Perhaps writing it down for once makes the lesson stick.&lt;/p&gt;

&lt;p&gt;Let's start with our SystemD unit file that doesn't work:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Twitter To Kafka

[Service]
SyslogIdentifier=twitter_to_kafka
User=ubuntu
PIDFile=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.pid
WorkingDirectory=/home/ubuntu/twitter_to_kafka

ExecStart=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.sh
ExecReload=/home/twitter_to_kafka/twitter_to_kafka/twitter_to_kafka.sh
ExecStop=/bin/kill -s QUIT $MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This generates errors like these:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ sudo systemctl status twitter_to_kafka.service
● twitter_to_kafka.service - Twitter To Kafka
   Loaded: loaded (/lib/systemd/system/twitter_to_kafka.service; enabled; vendor preset: enabled)
   Active: failed (Result: exit-code) since Thu 2020-02-13 12:57:48 UTC; 1min 54s ago
  Process: 7615 ExecStart=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.sh (code=exited, status=203/EXEC)
 Main PID: 7615 (code=exited, status=203/EXEC)

Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Main process exited, code=exited, status=203/EXEC
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Failed with result 'exit-code'.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Service hold-off time over, scheduling restart.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Scheduled restart job, restart counter is at 5.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: Stopped Twitter To Kafka.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Start request repeated too quickly.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Failed with result 'exit-code'.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: Failed to start Twitter To Kafka.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem is that rbenv is a shell extension so the shell has to be loaded to run this correctly.  Just adding /bin/bash -lc to ExecStart and ExecReload fixes this.  Here's the actual working unit file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Twitter To Kafka

[Service]
SyslogIdentifier=twitter_to_kafka
User=ubuntu
PIDFile=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.pid
WorkingDirectory=/home/ubuntu/twitter_to_kafka

ExecStart=/bin/bash -lc /home/ubuntu/twitter_to_kafka/twitter_to_kafka.sh
ExecReload=/bin/bash -lc /home/twitter_to_kafka/twitter_to_kafka/twitter_to_kafka.sh
ExecStop=/bin/kill -s QUIT $MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sample github file where I found &lt;a href=&quot;https://gist.github.com/unonasoft/48fd1df0f6a8a7a8e554632c9066178b&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/13/making-ruby-scripts-work-under-system-d-using-rbenv.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/13/making-ruby-scripts-work-under-system-d-using-rbenv.html</guid>
        
        <category>ruby</category>
        
        <category>systemd</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Started with Ruby and an AWS Managed Kafka Server</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1839.jpg&quot; alt=&quot;IMG_1839.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am in the position of building a data pipeline that looks like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kafka as the core repository using an &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/msk/home?region=us-east-2#/home&quot;&gt;AWS Managed Kafka Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A data feed from Twitter feeding into Kafka using the &lt;a href=&quot;https://github.com/zendesk/ruby-kafka&quot;&gt;ruby-kafka&lt;/a&gt; gem from Zendesk&lt;/li&gt;
  &lt;li&gt;Python Machine Learning routines processing the data in Kafka and outputting it to SQS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this blog post I will walk through creating the Kafka server and then show you the initial configuration to get Ruby to talk to it.&lt;/p&gt;

&lt;h2 id=&quot;core-assumptions&quot;&gt;Core Assumptions&lt;/h2&gt;

&lt;p&gt;Here are the core assumptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AWS Managed Kafka Instance in the same VPC as an EC2 Instance&lt;/li&gt;
  &lt;li&gt;Ruby 2.7&lt;/li&gt;
  &lt;li&gt;Minimal ruby script; just enough to connect and put one thing into a topic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-kafka-pricing&quot;&gt;AWS Kafka Pricing&lt;/h2&gt;

&lt;p&gt;The baseline pricing for an AWS kafka.m5.large cluster is:  0.21 / hour &lt;strong&gt;without factoring in storage&lt;/strong&gt;.  0.21 / hour means nothing to me so here's the calculation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0.21 * 24 = $5.04 / day&lt;/li&gt;
  &lt;li&gt;0.21 * 24 * 7 = $35.28 / week&lt;/li&gt;
  &lt;li&gt;0.21 * 24 * 30 = $151.20 / month&lt;/li&gt;
  &lt;li&gt;0.21 * 24 * 365 = $1839.60 / year&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whether or not this is a good deal depends on your budget and application but what I can tell you is that the AWS Managed Kafka is phenomenally easy to setup and get started with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Read thru the creation process below because I suspect it has pricing implications.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-kafka-instance&quot;&gt;Creating the Kafka Instance&lt;/h2&gt;

&lt;p&gt;The new Managed Kafka service from AWS makes creating a Kafka instance absolutely trivial.  You do need to know the VPC id of your instance to make things easier.  You want to start &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/msk/home?#/cluster/create&quot;&gt;here&lt;/a&gt; to create a Kafka cluster.  Here are screenshots of the entire creation flow along with notes on anything I thought relevant.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_kafka_01_name_version_config.png&quot; alt=&quot;aws_kafka_01_name_version_config.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Naming your Kafka cluster is pretty simple and unless you are an expert I'd go with the standard configuration.  AWS sometimes lags behind on their versions of open source stuff so keep that in mind.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.aws.amazon.com/msk/latest/developerguide/msk-default-configuration.html&quot;&gt;standard configuration options&lt;/a&gt; are generally pretty good.  I might argue that auto.create.topics.enable should be enabled by default but that's a debatable point and really one tied to application needs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_02_networking.png&quot; alt=&quot;aws_kafka_02_networking.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The networking options are where you likely will get into trouble.  You want to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Choose the same VPC as your instances&lt;/li&gt;
  &lt;li&gt;Match the availability zones per your needs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_03_availabilty_zone.png&quot; alt=&quot;aws_kafka_03_availabilty_zone.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_04_brokers_and_tags.png&quot; alt=&quot;aws_kafka_04_brokers_and_tags.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unless you are experienced at Kafka and can estimate your needs, I'd recommend setting the broker size to the minimum.   You automatically end up with a broker in each availability zone:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Your cluster will have 2 total brokers, distributed evenly across your 2 Availability Zones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Given that the broker is described as &quot;kafka.m5.large&quot; which is also the item in the pricing page, it occurs to me that perhaps my pricing above needs to be doubled (if 2 availability zones) or tripled (if 3 availability zones).  This is unclear to me and I'm not sure if I'll know until I see a bill.&lt;/p&gt;

&lt;p&gt;I added a Name tag matching the name of the project and a Type tag of 'kafka' to better help understand the bill.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_05_storage.png&quot; alt=&quot;aws_kafka_05_storage.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The default storage is 1000 gb (so 1 terabyte).  I have no idea if this is enough storage or too little but you can't decrease it so I left it at the default.&lt;/p&gt;

&lt;p&gt;Also:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EBS storage volume per broker.  You can't decrease the storage after the cluster is created.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My guess is that whatever the storage bill is, it is either doubled or tripled based on the number of availability zones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_06_encryption.png&quot; alt=&quot;aws_kafka_06_encryption.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For this application which isn't particularly secure (it is based on public data from the Internet), I turned off most of the encryption options.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_07_auth_and_monitoring.png&quot; alt=&quot;aws_kafka_07_auth_and_monitoring.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I turned on most of the monitoring options down to the Topic level.  I also setup the Grafana option so that I can monitor down to the CPU / Disk level.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_07a_advanced.png&quot; alt=&quot;aws_kafka_07a_advanced.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: The Advanced settings option is the one I missed the first time around.  I set this to be the same security group as I use for my instances.  You don't have to use the same security group but if you aren't an AWS networking guru (and I'm not), this is very, very helpful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_08_create.png&quot; alt=&quot;aws_kafka_08_create.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just click the Create Cluster button and wait for a bit for your cluster to be created.&lt;/p&gt;

&lt;h2 id=&quot;once-your-cluster-is-created&quot;&gt;Once Your Cluster Is Created&lt;/h2&gt;

&lt;p&gt;Once creation is complete the you want to click the View Client Information button at the top of the Details tab and you'll get something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b-2.ohi.88aa.c4.kafka.us-east-2.amazonaws.com:9092,b-1.ohi.qwq88.c4.kafka.us-east-2.amazonaws.com:9092
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These aren't my actual kafka details but, even if they were, it wouldn't matter because unless you are part of my AWS security group (or I open it to the world) then you can't get access.&lt;/p&gt;

&lt;h2 id=&quot;getting-your-security-groups-right&quot;&gt;Getting Your Security Groups Right&lt;/h2&gt;

&lt;p&gt;I made things a lot easier by using the same security groups for my instance that is going to write to kafka and my kafka cluster.  But, what I found, is that I would get connection errors like these:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Kafka::ConnectionError (Could not connect to any of the seed brokers:)
- kafka://b-2.ohi.aaaddd.c4.kafka.us-east-2.amazonaws.com:9092: Connection timed out
- kafka://b-1.ohi.aaaddd.c4.kafka.us-east-2.amazonaws.com:9092: Connection timed out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;whenever I tried to do anything with my kafka cluster.  What I found was an answer at the security group layer &lt;a href=&quot;https://docs.aws.amazon.com/msk/latest/developerguide/create-client-machine.html&quot;&gt;here&lt;/a&gt;.  I have not seen this referenced anywhere else and here is my write up on what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Find the VPC that your instance and your security group are using (you will need to confirm this on your &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/ec2/v2/home?#Instances:sort=publicIp&quot;&gt;instance settings&lt;/a&gt; and your &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/msk/home?&quot;&gt;kafka&lt;/a&gt; settings).&lt;/li&gt;
  &lt;li&gt;Open the AWS VPC console &lt;a href=&quot;https://console.aws.amazon.com/vpc/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;In the navigation pane, choose Security Groups. In the VPC ID column of the security groups, find the row that contains the ID you found in Step 1 and the Description column has the value default VPC security group. Choose this row by selecting the check box in the first column.&lt;/li&gt;
  &lt;li&gt;In the Inbound Rules tab, choose Edit rules.&lt;/li&gt;
  &lt;li&gt;Choose Add Rule.&lt;/li&gt;
  &lt;li&gt;In the new rule, choose All traffic in the Type column. In the second field in the Source column, enter the ID of the security group of the client machine. This is the group ID that you saved earlier.&lt;/li&gt;
  &lt;li&gt;Choose Save rules.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that magically made connectivity to my Kafka cluster work.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;ruby-script&quot;&gt;Ruby Script&lt;/h2&gt;

&lt;p&gt;Here are three basic ways you can test connectivity to your kafka cluster with the ruby kafka gem.&lt;/p&gt;

&lt;h3 id=&quot;test-script-1---try-and-get-the-topics&quot;&gt;Test Script 1 - Try and Get the Topics&lt;/h3&gt;

&lt;p&gt;Kafka divides where your content goes into &quot;topics&quot; (think buckets).  Here's how to get those topics back as an array:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-2.ohi.eee.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-1.ohi.fff.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;topics&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;test-script-2---try-and-put-something-in-a-non-existent-topic&quot;&gt;Test Script 2 - Try and Put Something in a Non Existent Topic&lt;/h3&gt;

&lt;p&gt;Even if this fails due to a non existent topic, it should fail correctly (i.e. that the topic doesn't exist not that it can't connect to kafka).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-2.ohi.eee.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-1.ohi.fff.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deliver_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;topic: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;test-script-3---higher-performance-delivery-of-messages&quot;&gt;Test Script 3 - Higher Performance Delivery of Messages&lt;/h3&gt;

&lt;p&gt;This approach, from the ruby-kafka documentation, is supposed to be a higher performance approach.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-2.ohi.eee.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-1.ohi.fff.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Instantiate a new producer.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;producer&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Add a message to the producer buffer.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;produce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;topic: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test-messages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Deliver the messages to Kafka.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deliver_messages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: I haven't delved deeply enough into the docs yet to understand the real differences between #2 and #3 particularly in a streaming context.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/02/12/getting-started-with-ruby-and-an-aws-managed-kafka-server.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/02/12/getting-started-with-ruby-and-an-aws-managed-kafka-server.html</guid>
        
        <category>aws</category>
        
        <category>ruby</category>
        
        <category>kafka</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Management Anti Pattern - How to Demoralize Team Members Without Doing Anything</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1624.jpeg&quot; alt=&quot;IMG_1624.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have discovered a wonderful &lt;strong&gt;anti pattern&lt;/strong&gt; for absolutely demoralizing team members in a remote context and it is drop dead simple:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you are someone's manager, simply &lt;strong&gt;don't respond&lt;/strong&gt; to the things that they send you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The magic of this is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It requires that you do absolutely &lt;strong&gt;nothing&lt;/strong&gt;!&lt;/li&gt;
  &lt;li&gt;It works whether you are not responding to Email, Slack or another method&lt;/li&gt;
  &lt;li&gt;It entirely demoralizes even experienced, motivated team members&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Not Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're a manager, it is easy to fall into the trap of saying to yourself &quot;Hm… This is &lt;strong&gt;interesting&lt;/strong&gt;.  I need more time to respond to it&quot; and then lose track of it in the ever growing flood of Slack / Email / Etc.  I'm sorry but that's just a &lt;em&gt;bullshite&lt;/em&gt; excuse.  If something is actually interesting then your &lt;strong&gt;responsibility&lt;/strong&gt; as a manager is to acknowledge it with &quot;Thanks.  I need to think about this; will get back to you&quot;.  And if it isn't interesting to you then simply say that explicitly.  Leaving people hanging and wondering is a horrible approach to management.&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/02/11/management-anti-pattern-how-to-demoralize-team-members-without-doing-anything.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/02/11/management-anti-pattern-how-to-demoralize-team-members-without-doing-anything.html</guid>
        
        <category>startup</category>
        
        <category>management</category>
        
        <category>remote_work</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Ruby vs Rails</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1812.jpeg&quot; alt=&quot;IMG_1812.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I always find it interesting when I hit a Rails-ism when I'm working in a pure Ruby context. I define a Rails-ism as something that is one way in Ruby and another way in Rails. In this case I'm writing a simple background daemon which is going to stream data out of the Twitter sample stream and commit to Kafka for downstream processing.&lt;/p&gt;

&lt;p&gt;Here's the first thing that bit me:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TOPIC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blank?&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;No topic specified; exiting&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this gave an immediate failure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ TOPIC=twitter RAILS_ENV=development ruby kafka_loader.rb
Traceback (most recent call last):
kafka_loader.rb:19:in `&amp;lt;main&amp;gt;': undefined method `blank?' for &quot;twitter&quot;:String (NoMethodError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The easiest way to understand something like this is to test it in irb.  The irb tool is the underlying engine in rails console (&quot;rails c&quot;) but without your application specific classes loaded in so it is just pure ruby.&lt;/p&gt;

&lt;p&gt;Here's how you would test something like this in irb:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.7.0 :001 &amp;gt; &quot;&quot;.blank?
Traceback (most recent call last):
       16: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/friendly_errors.rb:123:in `with_friendly_errors'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/bundler-2.1.2/libexec/bundle:46:in `block in &amp;lt;top (required)&amp;gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:24:in `start'
       13: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `start'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:30:in `dispatch'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor.rb:399:in `dispatch'
       10: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:476:in `exec'
        7: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `run'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `kernel_load'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `load'
        4: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&amp;lt;top (required)&amp;gt;'
        3: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `load'
        2: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/irb-1.2.1/exe/irb:11:in `&amp;lt;top (required)&amp;gt;'
        1: from (irb):1
NoMethodError (undefined method `blank?' for &quot;&quot;:String)
2.7.0 :002 &amp;gt; &quot;&quot;.empty?
 =&amp;gt; true
2.7.0 :003 &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Off the top of my head, I knew that .empty? was the underlying method that .blank? was aliased to.  And I could test either of these on an empty string as a way to figure this out.  When you have this type of thing, a quick google for &quot;rails whatever&quot; often is all you need to understand it.  The top hit for &lt;em&gt;rails blank?&lt;/em&gt; was a nicely written piece by &lt;a href=&quot;https://blog.arkency.com/2017/07/nil-empty-blank-ruby-rails-difference/&quot;&gt;Arkency&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another example of this came up here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Traceback (most recent call last):
	1: from kafka_loader.rb:188:in `&amp;lt;main&amp;gt;'
kafka_loader.rb:77:in `kafka_connect': undefined method `second' for #&amp;lt;Array:0x00007fe197c3d4c8&amp;gt; (NoMethodError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case, again, I knew that .second was a method that Rails sticks into the array class.  The fix here was to move to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[0]  and [1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to access the first and second elements in the array.&lt;/p&gt;

&lt;p&gt;You can easily see that .first actually works on arrays but I moved to [0] and [1] anyway to keep the semantics of the code the same:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ irb
cannot load such file -- awesome_print
2.7.0 :001 &amp;gt; foo = []
2.7.0 :002 &amp;gt; foo.first
 =&amp;gt; nil
2.7.0 :003 &amp;gt; foo.second
Traceback (most recent call last):
       16: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/friendly_errors.rb:123:in `with_friendly_errors'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/bundler-2.1.2/libexec/bundle:46:in `block in &amp;lt;top (required)&amp;gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:24:in `start'
       13: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `start'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:30:in `dispatch'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor.rb:399:in `dispatch'
       10: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:476:in `exec'
        7: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `run'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `kernel_load'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `load'
        4: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&amp;lt;top (required)&amp;gt;'
        3: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `load'
        2: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/irb-1.2.1/exe/irb:11:in `&amp;lt;top (required)&amp;gt;'
        1: from (irb):3
NoMethodError (undefined method `second' for []:Array)
Did you mean?  send
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 10 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/10/ruby-vs-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/10/ruby-vs-rails.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>When You Need a Ruby Data Structure that Responds to Method Calls - Use OpenStruct</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1838.jpg&quot; alt=&quot;IMG_1838.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the position of building a system where there is one source of truth for configuration – an API from the the user interface component of the system (this is the part that will always be online so it made sense for it to serve the api).  The problem is that I have a server side component that needs to go online today as in &lt;strong&gt;now&lt;/strong&gt;.  And that API isn't yet available.  I basically have a section in my code where I get the configuration data.  My normal approach is to create a ruby Mechanize object and do a page fetch against the configuration API.  This returns a response object with a .body method that can be parsed something like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My means of working around this without an API is to use an OpenStruct as follows:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
&quot;kafka_servers&quot;:[&quot;b-2.AAA.ccc.c4.kafka.us-east-2.amazonaws.com:9092&quot;,&quot;b-1.BBB.ccc.c4.kafka.us-east-2.amazonaws.com:9092&quot;]}'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OpenStruct is a hash like data structure that responds to ruby dot messages so my &quot;response&quot; object above in the second code block will respond to &quot;.body&quot;.  Overall OpenStructs are a very, very useful tool for this type of pseudo mocking behavior.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: OpenStruct is built into Rails so you can just a &quot;response = OpenStruct.new&quot; at any point.  If you are building pure Ruby software then you need to first require it with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require 'ostruct'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then use it with &quot;response = OpenStruct.new&quot;.  There is no Gem component to use OpenStruct – it is a part of the Ruby standard library but it isn't available until you do a require.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/09/when-you-need-a-ruby-data-structure-that-responds-to-method-calls-use-openstruct.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/09/when-you-need-a-ruby-data-structure-that-responds-to-method-calls-use-openstruct.html</guid>
        
        <category>ruby</category>
        
        <category>open_struct</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>A Regular Expression for Validating An Internet Domain</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:39:02.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Despite the power and truth of Jamie Zawinski's law:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Regular Expressions: Now You Have Two Problems &lt;a href=&quot;https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/&quot;&gt;Jeff Atwood's Perspective&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like Jeff, I too really, really &lt;strong&gt;love&lt;/strong&gt; regular expressions or regexes.  I use this one a lot and I finally learned to use \S (Any non-whitespace character) so here's a regex&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^\S+\.\S+$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;that I wrote yesterday to &quot;validate&quot; the permitted characters in an Internet domain.  I was all proud of this and wrote this blog post only to realize that pride really does goeth before a fall – this will NOT correctly validate an Internet domain.  As I write this post, I realize that the number of allowed characters in an Internet domain are actually NOT any non-whitespace characters and here's the proof that I actually got that wrong yesterday when I put something online using it:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/rubular_and_underscores.png&quot; alt=&quot;rubular_and_underscores.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The fact that Rubular allows through an _ which is NOT a valid character in domains is problematic.&lt;/p&gt;

&lt;p&gt;So the right way to do this, DAMN IT, is something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this actually works:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/rubular_no_s.png&quot; alt=&quot;rubular_no_s.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The [A-Za-z0-9-]+ is a &quot;character class&quot; which says &quot;Any uppercase or lowercase letter plus 0-9 plus a -&quot; are allowed (any order, any quantity)&quot;.&lt;/p&gt;

&lt;p&gt;Regular Expressions – Now you have two problems.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/regex/2020/02/03/a-regex-for-an-internet-domain.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/regex/2020/02/03/a-regex-for-an-internet-domain.html</guid>
        
        <category>regex</category>
        
        
        <category>regex</category>
        
      </item>
    
      <item>
        <title>When You Can't Run Rails Console Restart Spring</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1621.jpeg&quot; alt=&quot;IMG_1621.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I just hit this little gem of a pissant thing (yep - it is already that type of day):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=development rails c
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/application/configuration.rb:241:in `database_configuration': Cannot load database configuration:
Could not load database configuration. No such file - [&quot;config/database.yml&quot;] (RuntimeError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The issue was that I changed my underlying project directory and then had to re clone at the git level.  The culprit, naturally, was Spring so it took a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/spring stop
bin/spring start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this time, I actually put the answer into &lt;a href=&quot;https://stackoverflow.com/questions/32539062/rails-could-not-load-database-configuration-no-such-file/60024457#60024457&quot;&gt;Stack Overflow&lt;/a&gt;; I wonder if it will get accepted.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/02/02/when-you-can-t-run-rails-console-restart-spring.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/02/02/when-you-can-t-run-rails-console-restart-spring.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>The Power of Using Production In Development</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1647.jpeg&quot; alt=&quot;IMG_1647.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I spent a lot of time today trying to get something to deploy and hitting a near unending set of small issues that still broke the entire deploy (Rails in production mode is WAY less forgiving than Rails in development mode).  And, to be honest, the constant stream of cursing was, perhaps, my less than finest moment (friends of mine, at least two, are now laughing hard).&lt;/p&gt;

&lt;p&gt;An old school trick for helping with this is to run production mode locally and see if rails console comes up.  As a general rule of thumb, if rails console works, then rails itself will work.&lt;/p&gt;

&lt;p&gt;Here's how to do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=production bundle exec rails c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this one, simple, stupid trick tends to reveal a lot of issues.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/02/01/the-power-of-production-in-development.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/02/01/the-power-of-production-in-development.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Belt and Suspenders and Possible Overcomplications in Home Control</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1623.jpeg&quot; alt=&quot;IMG_1623.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I mildly shudder to write this post and I strongly hope that it  received with all the &lt;strong&gt;good intentions&lt;/strong&gt; that I have.  I saw that my friend Greg Stein wrote a &lt;a href=&quot;http://prng.blogspot.com/2020/02/howto-environment-sensors-in-home.html&quot;&gt;damn interesting post about home control and water sensors&lt;/a&gt;.  Greg is one of those scarily smart folks that makes me feel a bit like a knuckle dragging monkey, who, at times, is picking things out of his fur and debating &quot;should I eat this or not?&quot;.&lt;/p&gt;

&lt;p&gt;In this post, Greg builds a wonderful home control system that will notify him anywhere that he is in the world if a leak occurs (he had a fish tank leak that led to him say &quot;hm… I can fix this&quot;).  This is utterly classic &quot;Nerd Itch Scratching&quot; and I actually love the solution that he came up with but it made me think a lot about the number of &lt;em&gt;moving parts&lt;/em&gt; in his solution.  I had a similar issue back in 2017 and I &lt;a href=&quot;https://fuzzyblog.io/blog/house/2017/01/07/protecting-your-home-from-water-damage.html&quot;&gt;wrote up my solution at that time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is one of those things where I suspect the actual answer is both things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sophisticated approach that let's you monitor from anywhere and play with a time series database (&lt;a href=&quot;https://www.influxdata.com/&quot;&gt;InfluxDB&lt;/a&gt;; I'm jealous, TSDBs are cool)&lt;/li&gt;
  &lt;li&gt;The brutally simply solution that I came up with because even if what I did isn't remotely monitorable, my solution is so simple (and cheap) that it qualifies as backup to the complex solution&lt;/li&gt;
  &lt;li&gt;You spend more time at home than you do away which means that statistically the leak is more likely to happen when you are home.  And  because systems with lots of moving parts are inherently something that can break, having backup, even if imperfect might not be a bad idea.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/hardware/2020/02/01/belt-suspenders-and-possible-overcomplications-in-home-control.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/hardware/2020/02/01/belt-suspenders-and-possible-overcomplications-in-home-control.html</guid>
        
        <category>hardware</category>
        
        <category>home_control</category>
        
        
        <category>hardware</category>
        
      </item>
    
      <item>
        <title>Notes on Setting Up Stripe for Use with Jumpstart Pro</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1562.jpeg&quot; alt=&quot;IMG_1562.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I just finished, with a &lt;a href=&quot;https://eethomp.github.io&quot;&gt;colleague's assistance&lt;/a&gt;, the SAAS implementation of a multi license product using &lt;a href=&quot;https://www.stripe.com/&quot;&gt;Stripe&lt;/a&gt; as the billing engine and &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Pro&lt;/a&gt; as the Rails application template.  Listed below, in a mildly random order, are the steps we had to take:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a Stripe account.&lt;/li&gt;
  &lt;li&gt;Add your bank account credentials.&lt;/li&gt;
  &lt;li&gt;Define your &lt;a href=&quot;https://dashboard.stripe.com/test/subscriptions/products&quot;&gt;product&lt;/a&gt; within Stripe.&lt;/li&gt;
  &lt;li&gt;Define your subscription plans within the product inside Stripe.  Pricing plans nest within one product which is not intuitive.&lt;/li&gt;
  &lt;li&gt;Add the Stripe credentials to the Rails environment. &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html&quot;&gt;Read This Post!&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;In the /admin/plans urls on your Jumpstart based application, define the plans and prices that you want to offer (remember to enter prices in pennies) and make sure that the plan identifier that Stripe generated is entered into the stripe field inside the plan creation tool.&lt;/li&gt;
  &lt;li&gt;Install the &lt;a href=&quot;https://stripe.com/docs/stripe-cli&quot;&gt;Stripe listen&lt;/a&gt; tool using Homebrew: brew install stripe/stripe-cli/stripe&lt;/li&gt;
  &lt;li&gt;Authenticate your Stripe listen with your stripe API key like this: stripe login –api-key pk_BLAH_FOO_BAR_BAZ_DOH_HOMER&lt;/li&gt;
  &lt;li&gt;Start the Stripe Listen tool (it defaults to port 3000; if you are running Rails on another port then you need to figure that bit out yourself).&lt;/li&gt;
  &lt;li&gt;Confirm in a browser that this is the right api return value (and, yes, this supports &lt;a href=&quot;https://www.choosyosx.com/&quot;&gt;Choosy&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;When you see the webhook signing secret show up then use the &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html&quot;&gt;rails credentials:edit&lt;/a&gt; to add that to your environment.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a test transaction using the &lt;a href=&quot;https://stripe.com/docs/testing#cards&quot;&gt;Stripe test card numbers&lt;/a&gt; and you should see in the logs that the transaction went all the way through with entries something like the ones below.&lt;/p&gt;

    &lt;p&gt;stripe listen&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Ready! Your webhook signing secret is whsec_TRyDDDDDDDDDDDwnW3Y3u6TY7hDc (^C to quit)
2020-01-31 21:07:18   –&amp;gt; setup_intent.succeeded [evt_1G7BOCARA9hqQw13nA4]
2020-01-31 21:07:24   –&amp;gt; customer.created [evt_1G7BODARA9hqQw13uTOc]
2020-01-31 21:07:28   –&amp;gt; payment_method.attached [evt_1G7BOEARA33c6vCsbI]
2020-01-31 21:07:31   –&amp;gt; customer.updated [evt_1G7BOEARA3b1n6m7mC]
2020-01-31 21:09:25   –&amp;gt; setup_intent.created [evt_1G7BQGARA9hucov62]
2020-01-31 21:09:30   –&amp;gt; setup_intent.created [evt_1G7BQJARzeSJPFuu]
2020-01-31 21:09:33   –&amp;gt; setup_intent.succeeded [evt_1G7BQ3uheaVInO]
2020-01-31 21:09:34   –&amp;gt; customer.updated [evt_1G7BQJARA9hqQNa0]
2020-01-31 21:09:35   –&amp;gt; invoice.created [evt_1G7BQJARA9hqQw13Rei]
2020-01-31 21:09:35   –&amp;gt; invoice.finalized [evt_1G7BQJARA9hqQw13LaF]
2020-01-31 21:09:36   –&amp;gt; customer.subscription.created [evt_1G7BQKARA9tQAPyfk]
2020-01-31 21:09:43   –&amp;gt; invoice.payment_succeeded [evt_1G7BQKARA9hqPYpc]&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Once you do all the above steps then you still need to use the Copy Product to Live mode option to move the products and plans you built for testing to the production mode.  And then you'll need to move the subscription plan ids over as well since these will be changed.&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/stripe/2020/01/31/notes-on-setting-up-stripe-for-use-with-jumpstart-pro.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/stripe/2020/01/31/notes-on-setting-up-stripe-for-use-with-jumpstart-pro.html</guid>
        
        <category>stripe</category>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>stripe</category>
        
      </item>
    
      <item>
        <title>So My Mac Keeps Crashing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6366.jpeg&quot; alt=&quot;IMG_6366.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the unenviable position of my MacBook Pro (2015 vintage) crashing regularly – once yesterday, twice the day before, once the day before.  I used to have an uptime measured in the tens of days – there have been periods when I had an uptime measured, on this computer and this OS version, of 100 plus days.  And now I have this bit of pathetic:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ uptime
 7:04  up 16:23, 79 users, load averages: 5.52 26.30 57.61
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yep.  That's 16 hours.  &lt;em&gt;grumble&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So something changed – but what?  The problem here is that whatever changed, there was a clear temporal disconnect between the change and the start of the crashing.  And &lt;strong&gt;wham&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I took a phone call and walked away from my computer&lt;/li&gt;
  &lt;li&gt;I returned and my machine was again crashed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the characteristics of the crash:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the foreground app was TextMate 2 (almost always the foreground app on my computer)&lt;/li&gt;
  &lt;li&gt;caps lock doesn't turn on&lt;/li&gt;
  &lt;li&gt;machine apple logo doesn't turn off when the lid is closed&lt;/li&gt;
  &lt;li&gt;mouse doesn't move&lt;/li&gt;
  &lt;li&gt;no crash log event file is generated that tells me what happened and (uselessly) &quot;report it to apple&quot; when I restart.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's what I've tried so far:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stopping using Chrome (because Chrome is a damn beast using more resources than anything else on my machine)&lt;/li&gt;
  &lt;li&gt;turning off Dropbox&lt;/li&gt;
  &lt;li&gt;turning off bluetooth (because I recently turned it on)&lt;/li&gt;
  &lt;li&gt;stopping my TimeMachine backup&lt;/li&gt;
  &lt;li&gt;dumping my normal trinity of chat apps: FB Messenger, Signal and Telegram&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my theory is that something is happening when my machine isn't actually processing input (whether mouse or keyboard) such as an update process.  And since this seemingly started happening without any formal update process, it is likely an app which self updates.  So, my next task is to close:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DropBox&lt;/li&gt;
  &lt;li&gt;Box Sync&lt;/li&gt;
  &lt;li&gt;CleanMyMac&lt;/li&gt;
  &lt;li&gt;KeyBase&lt;/li&gt;
  &lt;li&gt;Tuple&lt;/li&gt;
  &lt;li&gt;Duet&lt;/li&gt;
  &lt;li&gt;Alfred&lt;/li&gt;
  &lt;li&gt;Slack&lt;/li&gt;
  &lt;li&gt;Sublime&lt;/li&gt;
  &lt;li&gt;Messages&lt;/li&gt;
  &lt;li&gt;Notes&lt;/li&gt;
  &lt;li&gt;Postico&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, when I walked away to go to the grocery store, my machine crashed again.  This time I'm also closing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SyncThing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this doesn't work then my apparent options are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;change my computer usage so if I'm not at the keyboard working, the lid is closed&lt;/li&gt;
  &lt;li&gt;upgrade the os (undesirable because I'm deliberately staying at Mojave)&lt;/li&gt;
  &lt;li&gt;new computer (also undesirable because that means I get forced off Mojave and Apple has yet to ship a 13&quot; Macbook Pro which takes 32 gigs of RAM)&lt;/li&gt;
  &lt;li&gt;temporarily swap over to another machine in the house until Apple ships new hardware&lt;/li&gt;
  &lt;li&gt;take my machine to Apple and see if hardware diagnostics reveal anything; undesirable because its not currently backed up and can't stay running long enough to back anything up&lt;/li&gt;
  &lt;li&gt;create a new user account on the machine and see if working in that new user account changes anything&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also did do a TextMate update today so maybe that fixes something. Sigh.&lt;/p&gt;

&lt;p&gt;One useful tool that I remembered for looking at log files of what's going on on my mac is &lt;a href=&quot;https://blog.macsales.com/45586-how-to-use-the-mac-console-app-to-diagnose-a-crash/&quot;&gt;Console&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;update-after-several-hours&quot;&gt;Update After Several Hours&lt;/h2&gt;

&lt;p&gt;Well my machine has now been usable for several hours.  I'll just need to keep using it and see what happens.  &lt;em&gt;additional grumbles&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/01/30/so-my-mac-keeps-crashing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/01/30/so-my-mac-keeps-crashing.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Where is my Rails 6 Master Key</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1422.jpeg&quot; alt=&quot;IMG_1422.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Your Rails 6 master key is located in:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/credentials/production.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and it is likely stored as a hidden file.  I believe that this is generated when the project is generated but I'm not 100% certain.&lt;/p&gt;

&lt;p&gt;See this &lt;a href=&quot;https://www.reddit.com/r/rails/comments/ci45t2/rails_6_masterkey/&quot;&gt;Reddit post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/29/where-is-my-rails-6-master-key.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/29/where-is-my-rails-6-master-key.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Turning Off Ruby Deprecation Warnings When Running Tests</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1384.jpeg&quot; alt=&quot;IMG_1384.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The combination of Rails 6 and Ruby 2.7, or perhaps just Rails 6, introduced some new deprecation warnings and, lately, I've been seeing this cruft constantly:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/
Running via Spring preloader in process 34024
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activemodel-6.0.2.1/lib/active_model/type/integer.rb:13: warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activemodel-6.0.2.1/lib/active_model/type/value.rb:8: warning: The called method `initialize' is defined here
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activerecord-6.0.2.1/lib/active_record/connection_adapters/postgresql/oid/specialized_string.rb:12: warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activemodel-6.0.2.1/lib/active_model/type/value.rb:8: warning: The called method `initialize' is defined here
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, in the immortal words of &lt;a href=&quot;https://www.youtube.com/watch?v=4xmckWVPRaI&quot;&gt;Twisted Sister&lt;/a&gt;, we're not going to take it anymore.&lt;/p&gt;

&lt;p&gt;The solution is a bit more byzantine than I have found in the Rails world and a bunch of the options in the &lt;a href=&quot;https://stackoverflow.com/questions/5591509/suppress-ruby-warnings-when-running-specs&quot;&gt;Stack Overflow &quot;top of Google&quot; but no longer accurate post&lt;/a&gt; no longer work or aren't quite what you expect.&lt;/p&gt;

&lt;p&gt;The easy solution is to add:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$VERBOSE=nil
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to the top of config/environments/test.rb so it looks like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vg&quot;&gt;$VERBOSE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Settings specified here will take precedence over those in config/application.rb.&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# The test environment is used exclusively to run your application's&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# test suite. You never need to work with it otherwise. Remember that&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# your test database is &quot;scratch space&quot; for the test suite and is wiped&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# and recreated between test runs. Don't rely on the data there!&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cache_classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Obviously the rest of the file has to be there but that $VERBOSE=nil silences all the cruft.&lt;/p&gt;

&lt;p&gt;One other solution, RUBYOPT=&quot;-W0&quot;, prepended before you run the test doesn't work with the new use of &quot;rails&quot; to run your tests but does work with &quot;rake&quot; to run your tests so:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RUBYOPT=W0 rake test test/models/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, that said, $VERBOSE=nil is a better option because it goes in at the project level and affects all developers on the project.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/28/turning-off-ruby-deprecation-warnings-when-running-tests.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/28/turning-off-ruby-deprecation-warnings-when-running-tests.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Test Basics</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1419.jpeg&quot; alt=&quot;IMG_1419.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;More than a decade using RSpec has left me flummoxed in terms of &quot;classical&quot; Rails testing.  I'm on a new project built using the Jumpstart application template and all the tests are standard Rails tests so here's a quick recap that I wrote, well, to force myself to step back in time and go &quot;old school&quot;.  And if you don't like my version then you should really read &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;this&lt;/a&gt;.  And if you are using Devise for authentication then you really must read &lt;a href=&quot;https://medium.com/@yutafujii_59175/a-simple-login-test-with-rails-devise-and-unit-test-68bc4fade4ba&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;making-tests-debuggable&quot;&gt;Making Tests Debuggable&lt;/h2&gt;

&lt;p&gt;The ability to use byebug in a testing context for breakpoints and stepping through code is utterly invaluable.  Here's what you need to do for that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add byebug into a development, test group in Gemfile.&lt;/li&gt;
  &lt;li&gt;Add the line &lt;strong&gt;require 'byebug'&lt;/strong&gt; to the very top of test_helper.rb&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-do-you-skip-a-test&quot;&gt;How Do You Skip a Test?&lt;/h2&gt;

&lt;p&gt;You put the keyword 'skip' at the top of the test that you need to skip.  This is equivalent to xit in RSpec.&lt;/p&gt;

&lt;h2 id=&quot;running-tests&quot;&gt;Running Tests&lt;/h2&gt;

&lt;p&gt;The very basic of testing is nothing more than test execution so to run all model tests:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and to run one file&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/user_test.rb    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and to run everything:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and to run with verbose mode:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test -v test/models  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and to run verbosely and fail on the first test failure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test -v -f test/helpers/application_helper.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and to run just one specific test:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/controllers/labels_controller_test.rb:9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: RSpec is very good at running the next test if the line number shifts a bit (example you put in :8 but you added a line so its actually :9).  With standard rails test, you get this madness:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ rails test test/controllers/projects_controller_test.rb:17
Running via Spring preloader in process 95090
Run options: --seed 52687

# Running:

Finished in 0.010622s, 0.0000 runs/s, 0.0000 assertions/s.
0 runs, 0 assertions, 0 failures, 0 errors, 0 skips
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The 0 runs, 0 assertions, 0 failures, 0 errors, 0 skips can best be interpreted as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Yo! Hoser! I don't know what to do here so I'm going to confuse you deliberately. Ha Haw!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;death-to-fixtures-viva-la-factory-bot&quot;&gt;Death to Fixtures; Viva La Factory Bot&lt;/h2&gt;

&lt;p&gt;Within the RSpec world, we long, long ago tossed out the concept of static fixtures and embraced the world of Factories via &lt;a href=&quot;https://github.com/thoughtbot/factory_bot/blob/master/GETTING_STARTED.md&quot;&gt;FactoryBot&lt;/a&gt;. I haven't used classical Rails testing with FactoryBot before but here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add FactoryBot to Gemfile in a test section.&lt;/li&gt;
  &lt;li&gt;Run bundle install.&lt;/li&gt;
  &lt;li&gt;Create a factories directory mkdir test/factories&lt;/li&gt;
  &lt;li&gt;Generate a sample factory&lt;/li&gt;
  &lt;li&gt;Add include FactoryBot::Syntax::Methods to the top of test/test_helper.rb&lt;/li&gt;
  &lt;li&gt;Stop spring with  bin/spring stop&lt;/li&gt;
  &lt;li&gt;Start spring with  bin/spring start&lt;/li&gt;
  &lt;li&gt;Write a simple test using FactoryBot like my &lt;a href=&quot;https://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html&quot;&gt;test foo blog post&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Run the test.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a sample test using my foo example:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test_helper'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LabelTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveSupport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TestCase&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return FOO'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;writing-tests&quot;&gt;Writing Tests&lt;/h2&gt;

&lt;p&gt;As shown above, the canonical test operator is assert_something (or just assert).  Above I am using assert_equal but there are lots of assertion statements including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;assert&lt;/li&gt;
  &lt;li&gt;assert_equal&lt;/li&gt;
  &lt;li&gt;assert_response&lt;/li&gt;
  &lt;li&gt;assert_difference do&lt;/li&gt;
  &lt;li&gt;assert_redirected_to&lt;/li&gt;
  &lt;li&gt;assert_not_nil&lt;/li&gt;
  &lt;li&gt;assert_no_difference do&lt;/li&gt;
  &lt;li&gt;assert_match&lt;/li&gt;
  &lt;li&gt;assert_select&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I am certain that there are more but this is a decent sampling of most of the assertion statements that I can remember using once upon a time.&lt;/p&gt;

&lt;h2 id=&quot;using-assert_redirected_to&quot;&gt;Using assert_redirected_to&lt;/h2&gt;

&lt;p&gt;Here's a minimal example of assert_redirected_to:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get index and redirect to / when logged in and no projects&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_user_session_path&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 27 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/27/rails-test-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/27/rails-test-basics.html</guid>
        
        <category>rails</category>
        
        <category>test</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails -- NoMethodError undefined method unpack1 for nil NilClass</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1464.jpeg&quot; alt=&quot;IMG_1464.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently started a new application and tried running the generated tests and got this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/user_test.rb
Running via Spring preloader in process 27379
Run options: --seed 14413

# Running:

E

Error:
UserTest#test_can_delete_user_with_teams:
NoMethodError: undefined method `unpack1' for nil:NilClass
    app/models/user/connected_account.rb:37:in `&amp;lt;class:ConnectedAccount&amp;gt;'
    app/models/user/connected_account.rb:31:in `&amp;lt;main&amp;gt;'


rails test test/models/user_test.rb:57

E

Error:
UserTest#test_user_has_a_personal_team:
NoMethodError: undefined method `unpack1' for nil:NilClass
    app/models/user/connected_account.rb:37:in `&amp;lt;class:ConnectedAccount&amp;gt;'
    app/models/user/connected_account.rb:31:in `&amp;lt;main&amp;gt;'


rails test test/models/user_test.rb:52

E

Error:
UserTest#test_user_has_many_teams:
NoMethodError: undefined method `unpack1' for nil:NilClass
    app/models/user/connected_account.rb:37:in `&amp;lt;class:ConnectedAccount&amp;gt;'
    app/models/user/connected_account.rb:31:in `&amp;lt;main&amp;gt;'


rails test test/models/user_test.rb:46



Finished in 0.060465s, 49.6155 runs/s, 0.0000 assertions/s.
3 runs, 0 assertions, 0 failures, 3 errors, 0 skips
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now this is the the first time I've used test (as opposed to RSpec) in more than a decade and I was more than a bit taken aback.  A quick &lt;a href=&quot;https://stackoverflow.com/questions/57197682/in-decode64-undefined-method-unpack1-for-nilnilclass-nomethoderror&quot;&gt;Stack Overflow&lt;/a&gt; led me to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The error happens if you call Base64.decode64(nil). The method however is strictly expecting a String object here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now the line of code in question is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;attr_encrypted&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;key: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;access_token_encryption_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the implication is that:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;access_token_encryption_key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;is returning &lt;strong&gt;nil&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The solution is actually pretty simple – create the credentials file using:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EDITOR=vi rails credentials:edit --environment test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See this &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html&quot;&gt;blog post&lt;/a&gt; for why you have to use EDITOR=vi.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/26/rails-nomethoderror-undefined-method-unpack1-for-nil-nilclass.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/26/rails-nomethoderror-undefined-method-unpack1-for-nil-nilclass.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Started with Pundit</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1424.jpeg&quot; alt=&quot;IMG_1424.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/varvet/pundit&quot;&gt;Pundit&lt;/a&gt;, a Rails gem that my former boss, Taylor Williams, taught me is a tool for &quot;simple, robust and scalable authorization system&quot; and the more I play with authorization, the more true I find that.  This blog post lays out how to get started with Pundit with more details coming down the road.&lt;/p&gt;

&lt;p&gt;I will freely admit that when Taylor taught me Pundit, I grokked about maybe 1/10th of 1/10th of what he taught me (the &lt;a href=&quot;https://www.seaseducation.com/attain-info/&quot;&gt;project I worked on under Taylor&lt;/a&gt; had a staggeringly complex security scheme).  What I found, once I started from scratch with Pundit, is that it is strikingly simple to understand and a huge improvement over former Rails security gems like CanCan.&lt;/p&gt;

&lt;h2 id=&quot;security-basics-authentication-versus-authorization&quot;&gt;Security Basics: Authentication versus Authorization&lt;/h2&gt;

&lt;p&gt;There are two basic security concepts that often get tangled up together so let's start with the basics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication - Should the user be allowed access into the &lt;strong&gt;system&lt;/strong&gt;?&lt;/li&gt;
  &lt;li&gt;Authorization - Should the user be granted permission to do &lt;strong&gt;something&lt;/strong&gt; with a &lt;strong&gt;item&lt;/strong&gt; within the &lt;strong&gt;system&lt;/strong&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It should be noted that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;system&lt;/li&gt;
  &lt;li&gt;something&lt;/li&gt;
  &lt;li&gt;item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;are all not defined.  That's actually intentional at this point because we need to work in terms of abstractions and all of those are abstract.&lt;/p&gt;

&lt;h2 id=&quot;installing-pundit&quot;&gt;Installing Pundit&lt;/h2&gt;

&lt;p&gt;Here's what you have to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add it into Gemfile i.e. gem &quot;pundit&quot;&lt;/li&gt;
  &lt;li&gt;Add it into application_controller.rb i.e. include Pundit&lt;/li&gt;
  &lt;li&gt;Run the pundit generator: rails g pundit:install&lt;/li&gt;
  &lt;li&gt;Restart your server&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;using-pundit&quot;&gt;Using Pundit&lt;/h2&gt;

&lt;p&gt;The way that Pundit works is that authorization is handled at the Rails controller level via an &lt;strong&gt;authorize&lt;/strong&gt; statement like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# GET /projects&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@projects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id DESC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@projects&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So you make an instance variable of what you want to display in your HTML view template and then you authorize it via Pundit.  The authorization is then defined by a Policy file stored in /app/policies/classname_policy.rb.  Here's an example for the project.rb class:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectPolicy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationPolicy&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Inheriting from the application policy scope generated by the generator&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scope&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Scope&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;resolve&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;admin?&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;active: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# this ilustrates that the user MUST be logged in and &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# that the owner of the data has to be the logged in user&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edit?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 25 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/25/getting-started-with-pundit.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/25/getting-started-with-pundit.html</guid>
        
        <category>pundit</category>
        
        <category>rails</category>
        
        <category>security</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When rails credentials:edit Won't Save Your Credentials</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1474.jpeg&quot; alt=&quot;IMG_1474.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rails 5.2 and Rails 6 introduced the idea of rails credentials:edit which allowed you to create encrypted credentials that stored things like API keys with commands like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails credentials:edit --environment development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What this does is create a file in config/credentials and edit and then (theoretically) save it, in an encrypted state.&lt;/p&gt;

&lt;p&gt;I was recently using this on a Rails 6 application and I found that no matter what I did my credentials &lt;strong&gt;did not&lt;/strong&gt; save.  A &lt;a href=&quot;https://eethomp.github.io/&quot;&gt;colleague&lt;/a&gt; of mine traced this to an issue with the $EDITOR variable I had set via this &lt;a href=&quot;https://stackoverflow.com/questions/48539408/rails-5-2-encrypted-credentials-not-saving&quot;&gt;Stack Overflow post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I had this problem in rails 5.2.0 using textmate as the editor. It turns out the credentials file must be closed after save in order for the changes to persist.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My $EDITOR variable was set to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $EDITOR
/usr/local/bin/mate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The solution was actually simple – specify the editor before you run the command (and use VI as the editor) so:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EDITOR=vi rails credentials:edit --environment development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And bada bing, bada boom – my credentials were actually saved.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bigbinary.com/2019/07/03/rails-6-adds-support-for-multi-environment-credentials.html&quot;&gt;Big Binary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50435193/cannot-edit-rails-credentials-rails-5-2&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/cedarcode/rails-5-2-credentials-9b3324851336&quot;&gt;CedarCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html</guid>
        
        <category>rails</category>
        
        <category>credentials</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>We Live in a Science Fiction Universe After All</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1441.jpeg&quot; alt=&quot;IMG_1441.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A number of years ago, the late &lt;a href=&quot;https://en.wikipedia.org/wiki/Charles_Sheffield&quot;&gt;Charles Sheffield&lt;/a&gt; had a book titled, I think &quot;Dark as Day&quot;, which had as a feature a &quot;fax&quot; which was an AI based  psuedo answering machine that you could chat with when the person you wanted wasn't available:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MORD: the idiosyncratic high-level Fax of the late Mordecai Perlman. e-reading.club &lt;a href=&quot;https://www.e-reading.club/chapter.php/151398/0/Sheffield_-_Dark_as_Day.html&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And today I read via Hacker News that I can build this using Google CoLab (&lt;a href=&quot;http://www.svilentodorov.xyz/blog/gpt-15b-chat-finetune/&quot;&gt;article&lt;/a&gt; / &lt;a href=&quot;https://news.ycombinator.com/item?id=22128652&quot;&gt;discussion&lt;/a&gt;) based on my Facebook Chat data.  Wow.&lt;/p&gt;

&lt;p&gt;We really do live in a science fictional universe.  I still want my flying car tho.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don't have a ton to say about this but I find the prospect fascinating and something I want to play with hence the blog post.&lt;/p&gt;

</description>
        <pubDate>Thu, 23 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/23/we-live-in-a-science-fiction-universe-after-all.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/23/we-live-in-a-science-fiction-universe-after-all.html</guid>
        
        <category>machine_learning</category>
        
        <category>nlp</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Understanding the Power of rails g scaffold</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1463.jpeg&quot; alt=&quot;IMG_1463.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wow.  I am a damn idiot who has literally made his life harder than it ever needed to be — for years.  Sigh.  I am referring to the Rails generator and the &lt;strong&gt;scaffold&lt;/strong&gt; command.  When you have complex software tools, sometimes you don't discover features – great damn features – for a long time.  In this case I'm referring to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rails g scaffold pluralized_object_name&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my case, I'm building a project where the ultimate goal is to create a &lt;em&gt;label&lt;/em&gt; on &lt;em&gt;something&lt;/em&gt;.  Never mind what a label is or what the something is.  A friend I've been helping with Rails recently asked me what &lt;strong&gt;rails g scaffold&lt;/strong&gt; does and I muttered something about &quot;makes the model and controller in one go&quot; but I never thought to try it myself until just now.  HOLY CRAP!  Wow.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rails g scaffold labels&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here's what this generated for me:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g scaffold Labels
Running via Spring preloader in process 78104
[WARNING] The model name 'Labels' was recognized as a plural, using the singular 'Label' 
instead. Override with --force-plural or setup custom inflection rules for 
this noun before running the generator.
      invoke  active_record
      create    db/migrate/20200122100533_create_labels.rb
      create    app/models/label.rb
      invoke    test_unit
      create      test/models/label_test.rb
      create      test/fixtures/labels.yml
      invoke  resource_route
       route    resources :labels
      invoke  scaffold_controller
      create    app/controllers/labels_controller.rb
      invoke    erb
      create      app/views/labels
      create      app/views/labels/index.html.erb
      create      app/views/labels/edit.html.erb
      create      app/views/labels/show.html.erb
      create      app/views/labels/new.html.erb
      create      app/views/labels/_form.html.erb
      append      app/views/shared/_left_nav.html.erb
      invoke    test_unit
      create      test/controllers/labels_controller_test.rb
      create      test/system/labels_test.rb
      invoke    helper
      create      app/helpers/labels_helper.rb
      invoke      test_unit
      invoke  assets
      invoke    scss
      create      app/assets/stylesheets/labels.scss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this isn't just creating a raw file structure, the core controller itself and the tests are actually built for you.&lt;/p&gt;

&lt;p&gt;Here's the controller:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LabelsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels/1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels/new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels/1/edit&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edit&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# POST /labels&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label was successfully created.'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# PATCH/PUT /labels/1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label was successfully updated.'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# DELETE /labels/1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label was successfully destroyed.'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Use callbacks to share common setup or constraints between actions.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_label&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Only allow a trusted parameter &quot;white list&quot; through.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;label_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's the controller test:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test_helper'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LabelsControllerTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionDispatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IntegrationTest&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get index&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get new&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_label_url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should create label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_difference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label.count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;params: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should show label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get edit&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edit_label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should update label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;params: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should destroy label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_difference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label.count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I've always been using generators:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g model label 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g controller Labels
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but then, for years, I've been manually writing my controllers, stubbing out my controller tests, adding stuff to the routes file, etc.  Wow.  I am just dumb founded in terms of how this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;improves the speed of rapid prototyping with Rails&lt;/li&gt;
  &lt;li&gt;improves quality by generating a test scaffold&lt;/li&gt;
  &lt;li&gt;writes a modern controller (I have certain learned coding practices that are likely pretty crappy from a decade plus of Rails experience when practices have changed)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;

&lt;p&gt;Here are some things that I don't like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I'm personally an rspec junkie but the simple fact that this generates a complete test biases me towards it (note - I checked on a project where rspec was the default and it did generate a similar test but with rspec syntax) so this isn't really a caveat but something I wanted to point out&lt;/li&gt;
  &lt;li&gt;No support for generating factories, even on my project with rspec configured, but this is &lt;a href=&quot;https://guides.rubyonrails.org/generators.html&quot;&gt;customizable&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;No support for authorization (and I get that there can't be since that's an app level thing but security holes and security testing is damn important)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;at-least-im-not-the-only-idiot-out-there&quot;&gt;At Least I'm Not the Only Idiot Out There&lt;/h2&gt;

&lt;p&gt;I know there are people within the Rails community that are &quot;generator resistant&quot;.  Hell – one of the Rails folk I loved pairing with most in known space used to (gently) chastise me for using &quot;rails g&quot; for anything other than the core migration.&lt;/p&gt;

&lt;p&gt;I know that if I was running a big Rails project, like the one that I used to be on, I'd not only make sure that my team used this but I'd also invest the time in customizing this pretty heavily so:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a factory file was generated&lt;/li&gt;
  &lt;li&gt;access control was added to the controller (I'd do it by an inheritance via a base_controller but an authorization directive was fine)&lt;/li&gt;
  &lt;li&gt;a policy file was written (useful if you are using Pundit)&lt;/li&gt;
  &lt;li&gt;the controller tests were enhanced with a logged in / logged out set of tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the power of generators – they are customizable and you can reduce the repetitive code that your team manually generates every single time.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/22/understanding-the-power-of-rails-g-scaffold.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/22/understanding-the-power-of-rails-g-scaffold.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Looking Back - Jumpstart Pro - The Best Development Decision I Made in 2019</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1442.jpeg&quot; alt=&quot;IMG_1442.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't generally do the retrospective (save in an agile context) – I prefer to look forward.  And, yes, I'll admit that given some of the crap in my personal life these days, there's a reason for that.  Now, that said, I've been thinking back over my 2019 year and I wanted to comment on my single best development decision of 2019:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Buying &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Pro&lt;/a&gt; was my single best development decision in all of 2019.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like a lot of developers out there, I'm a back end guy.  Yes I can do front end stuff but it tends towards a local maxima that might best be defined as &lt;strong&gt;ugly&lt;/strong&gt; or even, perhaps, &lt;strong&gt;fugly&lt;/strong&gt;.  And, now, I can happily say &lt;em&gt;never again&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Jumpstart Pro is an application template for your next Rails app that gives you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A prebuilt starting point&lt;/li&gt;
  &lt;li&gt;where the things that you are going to do anyway are already done&lt;/li&gt;
  &lt;li&gt;like devise&lt;/li&gt;
  &lt;li&gt;like a CSS grid (Tailwind)&lt;/li&gt;
  &lt;li&gt;like transactional email&lt;/li&gt;
  &lt;li&gt;like html templates that look good&lt;/li&gt;
  &lt;li&gt;like a scaffolding generator that is all setup including tests&lt;/li&gt;
  &lt;li&gt;like …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I bought Jumpstart Pro back in August when I had a side project that I was already pretty deep into and since Jumpstart Pro is best for &lt;em&gt;new&lt;/em&gt; projects, well, I put it aside – and that was &lt;strong&gt;stupid&lt;/strong&gt; of me.  I should have trusted that &lt;a href=&quot;https://www.gorails.com/&quot;&gt;Chris Oliver&lt;/a&gt;, the author of Jumpstart, made Jumpstart awesome – because he did.  When I finally realized how good Jumpstart was, well, I started a different side project because I wanted to experience Rails from his perspective.  And now that I'm about to ship this new side project, the only thing I have to say is &lt;strong&gt;absolutely worth it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Best damn development decision I made in 2019.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/21/looking-back-jumpstart-pro-the-best-development-decision-i-made-in-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/21/looking-back-jumpstart-pro-the-best-development-decision-i-made-in-2019.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Used to Postgres from MySQL - I Choose You, Postico</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1452.jpeg&quot; alt=&quot;IMG_1452.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite my mildly fanatical adherence to MySQL, there really is nothing wrong with Postgres and quite a bit to like.  Given that Postgres is the default database for Heroku, I am spending more and more time using Postgres these days.  What I've found is that my resistance to Postgres, more than anything else, was simply that I was really, really used to the MySQL command line and shell.&lt;/p&gt;

&lt;p&gt;What I've found is that if you pair &lt;a href=&quot;https://eggerapps.at/postico/&quot;&gt;Postico&lt;/a&gt; with Postgres then it makes a very easy transition from MySQL.  Postico is a wonderfully written app (yes I'm a paid user now) that provides a great DB viewing and manipulation tool right down to row level editing.  I found myself today, rather than writing a web form to update the database simply editing the data with Postico.  Given how easily I generate CRUD apps, that's a pretty big step for me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/01/20/getting-used-to-postgres-from-mysql-i-choose-you-postico.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/01/20/getting-used-to-postgres-from-mysql-i-choose-you-postico.html</guid>
        
        <category>postgres</category>
        
        <category>mysql</category>
        
        <category>postico</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>When Zoom Is Too Heavy for Your Laptop Just Use Your Phone or iPad</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_5717.jpeg&quot; alt=&quot;IMG_5717.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is short but sweet and, honestly, the bulk of it is right in the title.  I'm a pretty hard core software developer and I've found that the Zoom video chat tool, which my team uses every single day, tends to be big, fat and slow – to such a degree that my MacBook crashes from time to time.  You should note that I do run a 2015 MacBook Pro 13&quot; so not the best machine by today's standards but still absolutely serviceable as a daily driver for most development chores.&lt;/p&gt;

&lt;p&gt;It occurred to me recently that both my phone and my iPad are actually faster than my laptop so I fired up Zoom on them for a conference all and wow was it better.  I was able to code through my team call and participate in the team video chat.  While my phone worked perfectly well, it had a tendency to slide a bit leading me to break out my home made phone stand (no pic; since my phone is in it how can I take a pic; ask me personally if you care or want one).  My iPad, however, since it has the keyboard case, works fantastically well for this tho.&lt;/p&gt;

&lt;p&gt;I'm also starting to use my iPad as my &quot;chat workstation&quot; allowing me to more easily partition the myriad chat apps that we all seem to use concurrently and focus on development more while still participating in chats without getting list in them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2020/01/19/when-zoom-is-too-heavy-for-your-laptop-just-use-your-phone.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2020/01/19/when-zoom-is-too-heavy-for-your-laptop-just-use-your-phone.html</guid>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Markdown Editors</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9165.jpeg&quot; alt=&quot;IMG_9165.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yesterday I talked about using gist.github.com and Markdown.  And I assumed that you wanted to work in &quot;raw&quot; markdown but that's like writing raw HTML - fine if you like it but not for everyone.  A lot of people prefer a true Markdown editor where the tags appear visually as they might in Microsoft word.  With a tool like this you can write in Markdown visually and then copy and paste (or export) into a Markdown file that you could put into gist.github.com.&lt;/p&gt;

&lt;p&gt;Here are some decent Markdown tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate 2&lt;/a&gt; (OSX); this is an OSX only coding editor which a markdown mode which works pretty well&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;SublimeText&lt;/a&gt;; similar to TextMate 2 but works on Windows also&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.typora.io/&quot;&gt;Typora&lt;/a&gt;; top google hit; haven't looked at greatly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://markdownpad.com/&quot;&gt;MarkdownPad&lt;/a&gt;; free; looks like a dual pane NotePad i.e. markdown view on the left; writing window on the right.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://marp.app/&quot;&gt;Marp Next&lt;/a&gt; - a tool for using Markdown for presentations; not for writing but just interesting that it even exists!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personally I use TextMate 2 but I've been in that editor so long that I know it cold.  As with any writing on a computer, use what works for you. There are lots and lots of tools for Markdown.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/markdown/2020/01/18/markdown-editor-options.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/markdown/2020/01/18/markdown-editor-options.html</guid>
        
        <category>markdown</category>
        
        <category>internet</category>
        
        
        <category>markdown</category>
        
      </item>
    
      <item>
        <title>Welcome to gist.github.com/username</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7726.jpeg&quot; alt=&quot;IMG_7726.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'd love to tell you that I figured this one out on my own but I didn't – my friend Nick Janetakis taught me this trick.  Here's the problem statement:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you have a text document that you want someone to review, how do you put that document onto the Internet?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One obvious answer is Google Docs.  Another is some kind of shared file tool like Dropbox.  But these tools are &lt;em&gt;heavy&lt;/em&gt;.  The idea of a &lt;em&gt;heavy&lt;/em&gt; tool is a developer thing and it means that the tool does so much more than you need to solve the problem that using it feels awkward.  So let's restate the problem:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you have a text document that you want someone to review, what's a &lt;strong&gt;lightweight&lt;/strong&gt; tool that you can use to put that document on the Internet?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you start to work with people online, they often show you some cool tool that you never knew existed.  And this is just that type of thing.  Nick showed me:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://gist.github.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you goto &lt;a href=&quot;https://gist.github.com/&quot;&gt;https://gist.github.com/&lt;/a&gt; when you are logged into Github then you get a place where you can create a &lt;strong&gt;gist&lt;/strong&gt;.  The idea of a gist is that it is a snippet of text that you share online.  Now this was originally written for Programmer Foo to share a code routine with Programmer Bar who, in turn, might them change it and share with Programmer Baz.&lt;/p&gt;

&lt;p&gt;Now you might be thinking that how does a web based code sharing tool make it possible for you to share a document ?  The answer is simple: &lt;strong&gt;markdown&lt;/strong&gt;.  Markdown is an Internet standard for online writing which uses simple ASCII encoding to generate html.  For example a single # character means &quot;Make a Heading of Level 1&quot;, two ## characters means &quot;Make a heading of Level 2&quot;.  Here is a &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown Cheatsheet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What you can do to share a document is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a github account if you don't have one and login.&lt;/li&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://gist.github.com/&quot;&gt;gist.github.com&lt;/a&gt; and click the + sign in the black header.&lt;/li&gt;
  &lt;li&gt;This creates a new gist which gives you a web form where you can enter it.&lt;/li&gt;
  &lt;li&gt;Enter a filename like timeline.md (the .md extension is for markdown).  The filename extension tells Github how to display it / how it works with it when you are creating / editing it.&lt;/li&gt;
  &lt;li&gt;Format your text document with Markdown tags and then click either Create Secret Gist or Create Public Gist.&lt;/li&gt;
  &lt;li&gt;Gists are posted online not by the filename but by a hash like e02bd259a36fe28ea28560fe92c01bab.  This hash is a non guessable thing and it is uniquely constructed so even if you know my github username is fuzzygroup, you can't guess what my gist url for something might be.&lt;/li&gt;
  &lt;li&gt;The difference between Create Secret Gist and Create Public Gist is that the public option lists gists on the gist.github.com url where people can publicly rank them, share them, etc.  I always, always, always click Create Secret Gist.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's how you edit a gist that someone gives you:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a github account if you don't have one and login.&lt;/li&gt;
  &lt;li&gt;Goto the gist url you were given.&lt;/li&gt;
  &lt;li&gt;Click the Fork button at the top.  Forking is a version control concept from the programming world which basically says &quot;I want to make a new version of this that is &lt;strong&gt;MINE&lt;/strong&gt; i.e. a fork of the original&quot;.&lt;/li&gt;
  &lt;li&gt;Github will copy this data over to your account and change the url accordingly.&lt;/li&gt;
  &lt;li&gt;Now click the Edit button and the Markdown editing window will appear and you can make changes as you desire.&lt;/li&gt;
  &lt;li&gt;Your url is now tied to your username and the public / secret status is the same i.e. you end up with whatever security status you had originally.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 17 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2020/01/17/welcome-to-gist-github-com-username.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2020/01/17/welcome-to-gist-github-com-username.html</guid>
        
        <category>git</category>
        
        <category>gist</category>
        
        <category>markdown</category>
        
        <category>internet</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Two New Tools for Git</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01335.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Despite my friend Sean Kennedy's best efforts, I'm still a damn command line git user but he has tried.  Old dogs / new tricks.  Two new tools for git (or new to me at least) are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimemerge.com/&quot;&gt;Sublime Merge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-fork.com/&quot;&gt;Git Fork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know both of these are good but I just can't bring myself to use them.  Of the two I suspect I'd prefer Sublime Merge as Sublime Text is increasingly my backup editor when TextMate vomits its own brain and goes into a spasm of bullshite; sigh.&lt;/p&gt;

</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2020/01/16/two-new-tools-for-git.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2020/01/16/two-new-tools-for-git.html</guid>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Fixing TextMate 2 When It Goes Insane</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01325.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;If you find that TextMate won't start up or if it does that you can't type and it won't respond to commands then this is a sign that TextMate's startup data has gotten hosed.  What you need to do is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Locate where TextMate &lt;a href=&quot;https://fuzzyblog.io/blog/text/2017/10/08/forensic-computing-1-finding-textmate-untitled-documents.html&quot;&gt;stores its unsaved documents&lt;/a&gt;.  For me this is ls -l /Users/sjohnson/Library/Application\ Support/TextMate/Session/&lt;/li&gt;
  &lt;li&gt;Change to this directory using cd.&lt;/li&gt;
  &lt;li&gt;Create a new directory in this location such as temp1.&lt;/li&gt;
  &lt;li&gt;Do a mv of everything into the new directory.&lt;/li&gt;
  &lt;li&gt;Kill off the TextMate process.&lt;/li&gt;
  &lt;li&gt;Relaunch it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's what the end result of this should be:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls -l /Users/sjohnson/Library/Application\ Support/TextMate/Session/ 
total 536
-rw-r--r--   1 sjohnson  staff  90428 Jan 16 04:19 Info.plist
drwxr-xr-x  74 sjohnson  staff   2368 Dec 10 09:40 temp1
-rw-r--r--@  1 sjohnson  staff      4 Dec 26 10:51 untitled 10.txt
-rw-r--r--@  1 sjohnson  staff   6921 Dec 26 11:31 untitled 11.txt
-rw-r--r--@  1 sjohnson  staff     79 Dec 26 14:19 untitled 12.txt
-rw-r--r--@  1 sjohnson  staff    647 Dec 27 08:07 untitled 13.txt
-rw-r--r--@  1 sjohnson  staff    741 Dec 30 12:21 untitled 14.txt
-rw-r--r--@  1 sjohnson  staff    226 Dec 30 14:09 untitled 15.txt
-rw-r--r--@  1 sjohnson  staff     85 Dec 30 14:08 untitled 16.txt
-rw-r--r--@  1 sjohnson  staff    635 Dec 30 21:03 untitled 17.txt
-rw-r--r--@  1 sjohnson  staff    776 Jan  7 05:22 untitled 18.txt
-rw-r--r--@  1 sjohnson  staff   5125 Jan  7 05:28 untitled 19.txt
-rw-r--r--@  1 sjohnson  staff    803 Dec 12 23:30 untitled 2.txt
-rw-r--r--@  1 sjohnson  staff   1949 Jan  7 13:05 untitled 20.txt
-rw-r--r--@  1 sjohnson  staff   5367 Jan  7 13:20 untitled 21.txt
-rw-r--r--@  1 sjohnson  staff    326 Jan  7 15:24 untitled 22.txt
-rw-r--r--@  1 sjohnson  staff     16 Jan  8 01:43 untitled 23.txt
-rw-r--r--@  1 sjohnson  staff     44 Jan  9 14:22 untitled 24.txt
-rw-r--r--@  1 sjohnson  staff   3635 Jan 10 00:28 untitled 25.txt
-rw-r--r--@  1 sjohnson  staff      8 Jan 10 15:10 untitled 26.txt
-rw-r--r--@  1 sjohnson  staff   7245 Jan 10 17:26 untitled 27.txt
-rw-r--r--@  1 sjohnson  staff    277 Jan 11 05:22 untitled 28.txt
-rw-r--r--@  1 sjohnson  staff    497 Jan 12 06:03 untitled 29.txt
-rw-r--r--@  1 sjohnson  staff    244 Dec 18 18:25 untitled 3.txt
-rw-r--r--@  1 sjohnson  staff    672 Jan 13 20:25 untitled 30.txt
-rw-r--r--@  1 sjohnson  staff  10420 Jan 14 07:12 untitled 31.txt
-rw-r--r--@  1 sjohnson  staff     30 Jan 14 20:10 untitled 32.txt
-rw-r--r--@  1 sjohnson  staff     36 Jan 14 22:19 untitled 33.txt
-rw-r--r--@  1 sjohnson  staff    645 Jan 14 22:43 untitled 34.txt
-rw-r--r--@  1 sjohnson  staff   1377 Jan 15 04:12 untitled 35.txt
-rw-r--r--@  1 sjohnson  staff    732 Jan 15 04:08 untitled 36.txt
-rw-r--r--@  1 sjohnson  staff    443 Jan 15 07:04 untitled 37.txt
-rw-r--r--@  1 sjohnson  staff   2273 Jan 15 08:21 untitled 38.txt
-rw-r--r--@  1 sjohnson  staff    187 Dec 17 06:48 untitled 4.txt
-rw-r--r--@  1 sjohnson  staff   1045 Dec 20 06:50 untitled 5.txt
-rw-r--r--@  1 sjohnson  staff     19 Dec 20 15:21 untitled 6.txt
-rw-r--r--@  1 sjohnson  staff    842 Dec 21 03:32 untitled 7.txt
-rw-r--r--@  1 sjohnson  staff     79 Dec 23 11:11 untitled 8.txt
-rw-r--r--@  1 sjohnson  staff     31 Dec 23 16:50 untitled 9.txt
-rw-r--r--@  1 sjohnson  staff    375 Dec 10 17:22 untitled.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The file Info.plist is an xml registrry&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/textmate/2020/01/15/fixing-textmate-2-when-it-goes-insane.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/textmate/2020/01/15/fixing-textmate-2-when-it-goes-insane.html</guid>
        
        <category>textmate</category>
        
        
        <category>textmate</category>
        
      </item>
    
      <item>
        <title>What is Machine Learning?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_5718.jpeg&quot; alt=&quot;IMG_5718.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have written a number of posts about different aspects of Machine Learning but, it occurs to me, not a single one that actually says &quot;Machine Learning is xyz and here are the definitions&quot; so here goes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Machine Learning is a technology that allows a computer (&quot;the Machine&quot;)  to take a &quot;corpus&quot; of &quot;labeled&quot; &quot;training data&quot; and then &quot;learn&quot; how to do something that the training data teaches the computer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the above is my definition but let's look at Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Machine learning (ML) is the scientific study of algorithms and statistical models that computer systems use to perform a specific task without using explicit instructions, relying on patterns and inference instead. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model based on sample data, known as &quot;training data&quot;, in order to make predictions or decisions without being explicitly programmed to perform the task.[1][2]:2 Machine learning algorithms are used in a wide variety of applications, such as email filtering and computer vision, where it is difficult or infeasible to develop a conventional algorithm for effectively performing the task.&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_learning&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, while it is a simplification, the underlying thing idea driving machine learning is that of &lt;em&gt;data driven pattern recognition&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Basically the Machine Learning process amounts to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take a bunch of data and construct a set of examples that illustrate what you want the machine to learn.  This is called &lt;em&gt;Training Data&lt;/em&gt; and the overall collection amounts to a &lt;em&gt;Corpus&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Add metadata to these examples in a way that represent what you want the machine to learn.  Examples could be blocks of text, images, video files or whatever.  I personally work mostly in text but I have machine learning buddies who do things learning on images of cancerous masses.  This is called &lt;em&gt;Labeling&lt;/em&gt;.  Labeling might consist of different things like adding Yes / No / Abstain values to a tweet or even extracting information from a recipe like the ingredients.&lt;/li&gt;
  &lt;li&gt;Running a computer program, the &lt;em&gt;training program&lt;/em&gt;, against the data to generate a &quot;neural network&quot;, a computational engine that works much like the associative memory in our brains.  And, just as we don't understand how our brains work, we often don't understand how a neural network works.  This is known as the explainability problem in Machine Learning and I talk about it &lt;a href=&quot;https://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, you have to be careful, because this is a simplification of a very complex technology but the above is the essence of Machine Learning.&lt;/p&gt;

&lt;p&gt;Each of the key terms above, as well as a few others relevant to Machine Learning is described below.&lt;/p&gt;

&lt;h2 id=&quot;gpu&quot;&gt;GPU&lt;/h2&gt;

&lt;p&gt;A GPU or &quot;Graphics Processing Unit&quot; is a very, very powerful computer chip that is needed to run the training program that trains the neural network.  Without a GPU, creating the neural network can literally take weeks.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;neural-network&quot;&gt;Neural Network&lt;/h2&gt;

&lt;p&gt;A neural network is an approach to computation that makes a computer work more similarly to a human brain.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Neural_network&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;corpus&quot;&gt;Corpus&lt;/h2&gt;

&lt;p&gt;This is a fancy damn word that means &quot;related collection of stuff&quot;.  Generally Machine Learning refers to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Text_corpus&quot;&gt;textual corpus&lt;/a&gt; but it could be a collection of images.&lt;/p&gt;

&lt;h2 id=&quot;labels&quot;&gt;Labels&lt;/h2&gt;

&lt;p&gt;Labels are the values applied to training data that represent what you want the machine to learn.&lt;/p&gt;

&lt;h2 id=&quot;labeling&quot;&gt;Labeling&lt;/h2&gt;

&lt;p&gt;Labeling is the process of adding labels to the training data.&lt;/p&gt;

&lt;h2 id=&quot;labeler&quot;&gt;Labeler&lt;/h2&gt;

&lt;p&gt;The labeler is the software that makes applying labels to the training data easier.  A labeler might be a special computer program or even Microsoft Excel or something like AirTable.&lt;/p&gt;

&lt;h2 id=&quot;training-set&quot;&gt;Training Set&lt;/h2&gt;

&lt;p&gt;The training set is the collection of data that you use to generate your models.  The amount of data in a training set varies but it can often be as much as tens of thousands of labeled examples.&lt;/p&gt;

&lt;h2 id=&quot;test-set&quot;&gt;Test Set&lt;/h2&gt;

&lt;p&gt;The test set is the collection of labeled data that you use to make sure that your trained model learns the way you think it does.  After you train your model using the training set then you benchmark your model against the test set.  Depending on how you build your models there can actually be many different sets.&lt;/p&gt;

&lt;h2 id=&quot;precision--recall--f1--auc-and-other-weird-words&quot;&gt;Precision / Recall / F1 / AUC and Other Weird Words&lt;/h2&gt;

&lt;p&gt;These are terms that are used to measure how your model performs and are different mathematical approaches for model performance.&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;This blog post was reviewed by Elaine Thompson and Grant Vousden-Dishington.  My thanks are extended to both of them.&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/14/what-is-machine-learning.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/14/what-is-machine-learning.html</guid>
        
        <category>machine_learning</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>How To Detox Someone From Alcohol</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01380.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I write this from real world, personal experience a number of years ago (1998) and it is, to this day, one of the most painful personal memories I have.  If you are taking the time to read this then a) my heart goes out to you because you are almost certainly reading this from a position of need not idle curiosity and b) if you need someone to talk to, my contact info is public and you can reach out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I am not a doctor.  I am not a biologist.  You do this &lt;strong&gt;at your own risk&lt;/strong&gt; and there are dedicated alcohol treatment facilities that do this professionally.  Detoxing a serious drinker is risky to their health but it can be done at home and for a fraction of the cost of the alcohol treatment facilities.  But you pay the cost in emotional energy, loss of sleep, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: When I described what I was did, years later, to a professional, they told me: &quot;Alcohol and benzo withdrawal is more deadly than heroin. They need medical supervision.&quot;  I don't disagree - to this day - but you can't force someone into treatment.  And sometimes you play the hand that life deals you.&lt;/p&gt;

&lt;p&gt;I would argue that alcohol abuse is roughly as old as alcohol itself and, thus, roughly as old as civilization itself since we know that fermented beverages date back at least to Egyptian times.  The process of removing the physical effects of alcohol from an individual who is drinking to much is referred to as detox (you are literally removing the toxic compound from their body).  The term for this is generally &quot;tapering&quot; and consists of nothing more complex than drinking less and less per day until you are at a desired level.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;You should really read every one of these – IN DETAIL – before you even think of attempting this.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hams.cc/taper/&quot;&gt;How to Taper Off Alcohol&lt;/a&gt; BEST DAMN THING TO READ; I wish this had been online back in 1998&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.drugrehab.com/addiction/alcohol/detox-at-home/&quot;&gt;Alcohol Detox at Home&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.alcohol.org.nz/alcohol-its-effects/health-effects/alcohol-poisoning&quot;&gt;Alcohol Poisoning&lt;/a&gt; SECOND BEST DAMN THING TO READ.  Alcoholics have a lot of health issues and this taught me how many health issues I dealt with once upon a time were actually nothing more than drinking too much.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.psychologytoday.com/us/blog/view-the-mist/201610/when-someone-refuses-treatment&quot;&gt;When Someone Refuses Treatment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;who-the-people-are&quot;&gt;Who The People Are&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The person who needs to be detoxed – the &lt;strong&gt;detoxee&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The person or persons who is doing the detoxing – the &lt;strong&gt;detoxer&lt;/strong&gt; or &lt;strong&gt;detoxers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-basic-concept&quot;&gt;The Basic Concept&lt;/h2&gt;

&lt;p&gt;Detoxing someone from alcohol basically is conceptually simple and the core idea is that of tapering the person's daily consumption down from their maximum dose down to some kind of viable daily amount.  And the way you do this is you use an alcoholic beverage which has a lower amount of alcohol per serving than the detoxee is used to. The typical model is that you use beers / ciders / gluten free sparkling water alcoholic beverages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I personally don't believe in sobriety; I believe in moderation.  If someone has an alcohol problem, my personal belief is the goal is to get them to a reasonable consumption amount NOT to get them to stop.  Your belief may vary but the actual recidivism rates for AA are strikingly higher than the numbers they publicly report.&lt;/p&gt;

&lt;h2 id=&quot;how-do-you-measure-their-maximum-dose&quot;&gt;How Do You Measure Their Maximum Dose&lt;/h2&gt;

&lt;p&gt;This is what I did.  I was sneaky:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Any alcoholic tends to consume whatever is right in front of them, generally their favorite type of spirit&lt;/li&gt;
  &lt;li&gt;Get rid of any partial bottles of said spirit type&lt;/li&gt;
  &lt;li&gt;Buy a single new bottle&lt;/li&gt;
  &lt;li&gt;After a 24 hour period you measure the amount that was consumed&lt;/li&gt;
  &lt;li&gt;You then assess if during that 24 hour period she was basically about the same or if it was an outlier&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-do-you-convince-someone-they-have-a-problem&quot;&gt;How Do You Convince Someone They Have A Problem?&lt;/h2&gt;

&lt;p&gt;In the grand tradition of a 4th Grade Arts and Crafts project, I picked up a tray table from Good Will and mounted a set of shot glasses on it that correspond to the amount of alcohol consumed during that 24 hour period.  I then presented it to the detoxee. And, lo and behold, math is kinda hard to refute:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1418a.jpeg&quot; alt=&quot;IMG_1418a.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: Shot glasses generally are 1.5 ounces.  So take the maximum amount consumed in ounces and then divide by 1.5.  That's the number of shot glasses you need to mount.  Construction adhesive works particularly well for this.&lt;/p&gt;

&lt;h2 id=&quot;heres-what-you-need-to-pull-this-off&quot;&gt;Here's What You Need to Pull This Off&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You need to know the maximum amount the person you are trying to detox drinks.  This is measured in &quot;standard drinks&quot; (see the links below to understand that)&lt;/li&gt;
  &lt;li&gt;You need to know the time period you are trying to do this in.  You might be trying to detox someone in 7 days.  Or you might be trying to do this in 14 days.  Or whatever.&lt;/li&gt;
  &lt;li&gt;You need to accept that all addicts are liars.&lt;/li&gt;
  &lt;li&gt;Gatorade; lots of it.  Dehydration is a very real risk.&lt;/li&gt;
  &lt;li&gt;Blood pressure monitor.  You need to watch the detoxee's blood pressure regularly and log it.&lt;/li&gt;
  &lt;li&gt;You need a type of alcohol that detoxee likes to drink and that their dietary restrictions can handle and that has a lower amount of alcohol per serving than they are used to&lt;/li&gt;
  &lt;li&gt;You need a printed out Google Spreadsheet that matches the number of standard drinks you are detoxing from with the time period you are detoxing over mapped to the detoxee's waking hours.  Here's the old Excel Spreadsheet I used back in 1998 that I converted to &lt;a href=&quot;https://docs.google.com/spreadsheets/d/14XrmbDDeeG9KmipxHEvHpzBYVTeYRFgzlQkN1b4-g9c/edit?usp=sharing&quot;&gt;Google Spreadsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A block of time that is as uninterrupted as possible&lt;/li&gt;
  &lt;li&gt;Daily doses of Vitamin B1 (thiamin); this helps with the diminished cognition that all alcoholics suffer from.  It is dirt cheap and just Amazon it.&lt;/li&gt;
  &lt;li&gt;Media / music that the detoxee can binge consume to distract themselves; this was a lot harder back in 1998 but is trivial nowadays with Netflix and Prime&lt;/li&gt;
  &lt;li&gt;All alcohol in the house that isn't for detox purposes needs to be under lock and key.  You need to check every stash place where the detoxee has booze.  This includes home offices, briefcases, purses, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;day-1&quot;&gt;Day 1&lt;/h2&gt;

&lt;p&gt;You start the process by giving the detoxee a schedule of drinks and a cooler of the beverages they need to drink hourly.  Each hour they consume something they check it off the schedule.&lt;/p&gt;

&lt;h2 id=&quot;day-n&quot;&gt;Day n&lt;/h2&gt;

&lt;p&gt;You just continue day 1, following the schedule, and, hopefully, the detoxee is drinking less each day.  Each day you should see less of the physical symptoms of the alcohol abuse (less vomiting; less sweats; reduced rage; less paranoia, etc).&lt;/p&gt;

&lt;h2 id=&quot;surviving-this-process-as-the-detoxer&quot;&gt;Surviving this Process as the Detoxer&lt;/h2&gt;

&lt;p&gt;My friend, you are in a shitty ride.  I remember this process with searing intensity and my the lightest of the swear phrases I used to describe some of the days was &quot;rat fucking bullshit&quot;.  Given the amount of shame that the detoxee generally has about this, you are likely to be alone through the process as the detoxee doesn't want anyone else to see them at their literal worst (paranoid, vomiting, sweating rage monsters that accuse you of all kinds of ill intent).  Here's what I recommend for you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take the detox period off from work&lt;/li&gt;
  &lt;li&gt;Send kids, if you have them, away to stay with relatives&lt;/li&gt;
  &lt;li&gt;Buy your favorite food(s) in bulk and stockpile them so there are treats for you&lt;/li&gt;
  &lt;li&gt;Nap whenever you can.  You are effectively an unpaid nurse who has to clean up vomit buckets, prepare food, be an emotional punching bag, etc.  Sleep helps.&lt;/li&gt;
  &lt;li&gt;Realize that the detoxee isn't actually mad at you; they are mad at themselves and you are just a convenient target.  The emotional abuse that will be leveled at you is beyond toxic and this is the single hardest part.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you can survive this.  I did and so have many, many others since the dawn of time.&lt;/p&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank Yous&lt;/h2&gt;

&lt;p&gt;Over the years I have spoken to a number of people about this particularly surreal and shitty life experience.  If you are still in my life and you are reading this then thank you.  Each and every one of you made a difference.&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/alcohol/2020/01/14/how-to-detox-someone-from-alcohol.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/alcohol/2020/01/14/how-to-detox-someone-from-alcohol.html</guid>
        
        <category>alcohol</category>
        
        <category>life</category>
        
        
        <category>alcohol</category>
        
      </item>
    
      <item>
        <title>Protecting Your Kid From the Internet</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0935.jpeg&quot; alt=&quot;IMG_0935.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't care how permissive / how liberal a parent you are, I suspect that you would have problems with your relatively young kid (let's say &lt;strong&gt;under&lt;/strong&gt; 18) going into a place like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/porn_shop.jpg&quot; alt=&quot;sex_shop_image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I look at putting the Internet into your home without some kind of Internet filtering as analogous to letting your kids walk into a place like this and not stopping them.  In the rest of this post I'll talk about Internet filtering and the first ever product, Disney Circle, that I've found is worth using&lt;/p&gt;

&lt;h2 id=&quot;my-credentials-to-even-write-this&quot;&gt;My Credentials to Even Write This&lt;/h2&gt;

&lt;p&gt;On a personal level I am a husband and father (two sons, 18 and 13).  I'm also a software engineer who has been active on the Internet since the pre-web days and I've spent a large amount of my professional life dealing with spam and bad actors on the Internet.  Finally I'm a firm believer in free speech and as my wife might comment, I'm the furthest thing from a prude in any way, shape or form.  Those last two points, free speech and not being a prude make this a hard post for me to write as I am generally &lt;strong&gt;philosophically opposed&lt;/strong&gt; to Internet filtering.  Now, that said, I would never let my kid walk into a place like that pictured above and I don't think you should either – what happens there is an adult activity and there is a reason why its actually illegal to be in there if you're under 18.&lt;/p&gt;

&lt;h3 id=&quot;internet-filtering-overview&quot;&gt;Internet Filtering Overview&lt;/h3&gt;

&lt;p&gt;Internet filtering is just that – the idea of selectively blocking portions of the Internet i.e. filtering.  From the bits, bytes and megabytes perspective, internet filtering is a hard technical problem for a whole bunch of reasons.  And, alas, those actually don't matter all that much so I'm going to skip nerding out here as much as I might like to do a deep dive into Internet architecture.&lt;/p&gt;

&lt;h3 id=&quot;disney-circle&quot;&gt;Disney Circle&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Circle-Parental-Controls-Internet-Devices/dp/B07QQHRB8P/ref=sr_1_1_sspa?keywords=disney+circle&amp;amp;qid=1578914466&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExSjZMWjVISU85RDhNJmVuY3J5cHRlZElkPUEwODA5MTA2Q0ROWFFTSktTWkpKJmVuY3J5cHRlZEFkSWQ9QTAzNTE0MDgzMEZMUkpBSkdZNEM5JndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ==&quot;&gt;Disney Circle&lt;/a&gt; is a hardware box that plugs into your wifi network and acts to intercept network traffic and block things that fall into the category of malicious stuff including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Porn&lt;/li&gt;
  &lt;li&gt;Gambling&lt;/li&gt;
  &lt;li&gt;Drug related content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a variety of well thought out parental controls which give you category level granularity down to things like &quot;Allow Facebook but not Twitter&quot;.&lt;/p&gt;

&lt;p&gt;I honestly didn't expect to like Disney Circle and I find myself in the rare position of not being able to say enough good things about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you use a mesh networking product like Eero, you may find that Disney Circle doesn't work with it so you might specifically find out before you buy one.&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2020/01/13/protecting-your-kid-from-the-internet.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2020/01/13/protecting-your-kid-from-the-internet.html</guid>
        
        
      </item>
    
      <item>
        <title>Startup Coach 02 - How to Learn Technology Stuff Quickly Part 1</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6390.jpeg&quot; alt=&quot;IMG_6390.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are typically two types of folks that want to have their own startup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Engineers / Technical folk who have the ability to create their own products / services / mobile apps / SAAS apps&lt;/li&gt;
  &lt;li&gt;Business Folk who have a concept but don't have the ability to create their own technology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are exceptions to the rule – sometimes you will see someone who straddles these lines (I do; I'm both more than business savvy and I write code like demon every damn day) – but, generally, this is the split that you see.&lt;/p&gt;

&lt;p&gt;This post is written for the business person who finds themselves with the need to learn technical things quickly.  I'm going to tell you how, decades ago, I learned &lt;em&gt;how to learn&lt;/em&gt; technology stuff and then, in part two, I'm going to give recommendations for how I'd approach this in 2020.&lt;/p&gt;

&lt;h2 id=&quot;how-i-learned-technology-stuff--in-april-1982&quot;&gt;How I Learned Technology Stuff – in April, 1982&lt;/h2&gt;

&lt;p&gt;I date my technology education back to April 1982 (it was likely earlier since this was a cover date on a periodical and magazines come out before the date on the cover so they have news stand time but we'll go with April).   Going on that date, this puts me at:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1967&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magazine_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1982&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;040&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magazine_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;14.372602739726027&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so let's call it 14 years old.  At this point I was likely a sophomore in high school with no formal computer training save for I owned an early personal computer which I mostly used for playing games.&lt;/p&gt;

&lt;p&gt;And then I walked into the local Walden Books and discovered Byte Magazine:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;https://ia802603.us.archive.org/BookReader/BookReaderImages.php?zip=/26/items/byte-magazine-1982-04/1982_04_BYTE_07-04_Human_Factors_Engineering_jp2.zip&amp;amp;file=1982_04_BYTE_07-04_Human_Factors_Engineering_jp2/1982_04_BYTE_07-04_Human_Factors_Engineering_0000.jp2&amp;amp;scale=16&amp;amp;rotate=0&quot; alt=&quot;https://ia802603.us.archive.org/BookReader/BookReaderImages.php?zip=/26/items/byte-magazine-1982-04/1982_04_BYTE_07-04_Human_Factors_Engineering_jp2.zip&amp;amp;file=1982_04_BYTE_07-04_Human_Factors_Engineering_jp2/1982_04_BYTE_07-04_Human_Factors_Engineering_0000.jp2&amp;amp;scale=16&amp;amp;rotate=0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can read this issue online &lt;a href=&quot;https://archive.org/details/byte-magazine-1982-04&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;and I was just plain fascinated.  What I discovered was that not only did I &lt;strong&gt;not understand&lt;/strong&gt; this magazine, I maybe understood only every 15th word (generally pronouns).  But what I did was this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I simply read it even though I didn't understand it&lt;/li&gt;
  &lt;li&gt;I bought the next issue&lt;/li&gt;
  &lt;li&gt;And I read that and I understood a bit more&lt;/li&gt;
  &lt;li&gt;Lather; rinse; repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then, five years later, I started my first software company based on what I learned from reading Byte magazine.  And, honestly, at that point I really qualified purely as the business folk (albeit one with a strong product focus; not engineering; product definition / product management).  And I want to be clear about something – I didn't spend 5 years learning technology stuff.  During that time, I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Became an Eagle Scout&lt;/li&gt;
  &lt;li&gt;Learned a bit of Basic programming&lt;/li&gt;
  &lt;li&gt;Learned to drive and work on cars&lt;/li&gt;
  &lt;li&gt;Finished High School&lt;/li&gt;
  &lt;li&gt;Discovered girls and, my, my – what a deep and wonderful journey that began for me&lt;/li&gt;
  &lt;li&gt;Started my first business (we fixed old school tube televisions mostly in the inner city)&lt;/li&gt;
  &lt;li&gt;Worked in the family business a lot (full time during the summers)&lt;/li&gt;
  &lt;li&gt;Went to college for 2 years before dropping out and starting my software company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What that single issue of Byte Magazine taught me was the power of &lt;strong&gt;immersion&lt;/strong&gt;.  If you need to learn something then what you do is a deep dive into it and, if you &lt;strong&gt;really&lt;/strong&gt; want it, I am a firm believer that you can master whatever you want.  And, I will admit, that there are certain things you want to learn of which there are intellectual capabilities that you may not have (for example, I'm never going to learn certain types of higher math; I'm just not wired for that).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: When I entered high school I was in remedial math; I left high school with calculus under my belt having taken 5 years of math in 4 years.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I'm don't dispute that I'm a sort of smart guy but what I really am is &lt;strong&gt;somebody who learned how to learn&lt;/strong&gt; very, very early.  I'm also a damn hard worker.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/12/startup-coach-02-how-to-learn-technology-stuff.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/12/startup-coach-02-how-to-learn-technology-stuff.html</guid>
        
        <category>startup</category>
        
        <category>startup_coach</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Tools for Tailwind CSS</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6308.jpeg&quot; alt=&quot;IMG_6308.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tailwind is a CSS grid library that is an alternative to Bootstrap and, well, something I'm increasingly using.  Here are some handy, dandy Tailwind tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@mattburgess/getting-started-with-tailwindcss-3190def35361&quot;&gt;Tailwind Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hanneslund.github.io/elm-tailwind-button-maker/&quot;&gt;Tailwind Button Generator&lt;/a&gt; (written in &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;!!!!)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwindgrids.com/#/&quot;&gt;Tailwind Grid Generator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tailwindtoolbox.com/&quot;&gt;Tailwind Toolbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwind.build/&quot;&gt;Tailwind Builder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 11 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/css/2020/01/11/tools-for-tailwind-css.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/css/2020/01/11/tools-for-tailwind-css.html</guid>
        
        <category>css</category>
        
        <category>tailwind</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Adding Explainability to Machine Learning Routines via Runtime Execution of Labeling Functions</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0928.jpeg&quot; alt=&quot;IMG_0928.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am spending much of my time these days in the world of machine learning and I'm finding that it is &lt;strong&gt;profoundly interesting&lt;/strong&gt;.  One of the most interesting aspects of machine learning, for me, is the &lt;em&gt;black box&lt;/em&gt; nature of machine learning's output.  What we typically get from a machine learning model what the model thinks but not how it arrived at that result.  And this lack of explainability is true for machine learning whether the underlying technology is Tensor Flow for image segmentation or Bert / Roberta / Albert for text processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:  Bert / Roberta / Albert are machine learning tools that generate linguistically savvy models that understand English language content.&lt;/p&gt;

&lt;p&gt;As a side note, given how hard it is for most people to understand why they think what they think, is the black box nature of machine learning actually all that surprising?&lt;/p&gt;

&lt;h2 id=&quot;machine-learning-basics-for-the-newbie&quot;&gt;Machine Learning Basics for the Newbie&lt;/h2&gt;

&lt;p&gt;The world of machine learning, which appears intimidating as hell to the newbie, actually isn't that hard but the terms can be terrifying.  Someone recently asked me what I was doing and this was my answer:&lt;/p&gt;

&lt;p&gt;&quot;I am working on a weekly supervised learning model for an anti Semitic classifier that will be used in a Kafka data pipeline. &quot;&lt;/p&gt;

&lt;p&gt;Here are the very basics of machine learning:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Machine Learning is just that - a way for a machine to learn from data.&lt;/li&gt;
  &lt;li&gt;The underlying idea of machine learning is pretty much just &lt;em&gt;pattern recognition&lt;/em&gt; based on data fed through a neural network.&lt;/li&gt;
  &lt;li&gt;To make machine learning work you &quot;label&quot; a data set which means you tell the machine that for Example X, the answer you want is Foo and for Example Y, the answer is Bar.  And you do this over and over and over (sometimes you have to label 50,000 examples; that's what my current project uses).&lt;/li&gt;
  &lt;li&gt;You give a program, generally called a training program, this labeled data and then it thinks on this for a while and creates what is called a &lt;strong&gt;model&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;model&lt;/strong&gt; is a trained neural network which understands how to process data like what you trained it with and give back results of the types that you taught it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot of terms that I could throw around - Python, Bert / Alberta / Roberta, TensorFlow, Convolutional Neural Network, Adversarial Neural Network and so on but the essence of machine learning are the bullet points above.&lt;/p&gt;

&lt;h2 id=&quot;labeling-and-machine-learning&quot;&gt;Labeling and Machine Learning&lt;/h2&gt;

&lt;p&gt;There are two general approaches to labeling data for machine learning, one classical and one new:&lt;/p&gt;

&lt;h3 id=&quot;classical&quot;&gt;Classical&lt;/h3&gt;

&lt;p&gt;With a classical approach, you generate a set of &quot;labeled&quot; data by humans manually labeling a large set of data with yes / no (or something else) options.  This is generally measured in the tens of thousands of chunks of labeled data.  This is generally expensive and time consuming.&lt;/p&gt;

&lt;h3 id=&quot;new&quot;&gt;New&lt;/h3&gt;

&lt;p&gt;A newer approach falls into the category of &lt;em&gt;Weak Supervision&lt;/em&gt; where you leverage a series of what are called labeling functions (lfs for short) along with a new technology called Snorkel.  This is termed &quot;weak supervision&quot; because the supervision of the process is just that – weak (less human training).&lt;/p&gt;

&lt;p&gt;A labeling function is often nothing more than a regular expression that returns true / false / abstain.  The idea of a labeling function is to leverage human expertise that can be easily codified into a rule set.  You then run these labeling functions against your dataset and build a matrix of the results.  That matrix, along with the data itself allows you to generate a machine learning model which has similar performance characteristics as the classical approach but with a fraction of the amount of training data – think 500 to 1000 labeled chunks of data instead of tens of thousands of chunks.&lt;/p&gt;

&lt;h2 id=&quot;leveraging-the-labeling-functions&quot;&gt;Leveraging the Labeling Functions&lt;/h2&gt;

&lt;p&gt;It is important to understand that the labeling functions aren't a part of the machine learning model – they simply generate the training data that create the machine learning model.  To draw in a metaphor, labeling functions are like the loom which &lt;em&gt;creates&lt;/em&gt; the blanket but is &lt;em&gt;not itself&lt;/em&gt; part of the blanket.  Because the labeling functions aren't actually part of the model, they don't actually run on the data that model processes.  So when you process a chunk of data through the machine learning model, it can tell you the result but it can't tell you why.&lt;/p&gt;

&lt;p&gt;But, and here's the &lt;em&gt;new thing&lt;/em&gt;, you could take the chunk of data you processed through the machine learning model and run it through the labeling functions at &lt;strong&gt;runtime&lt;/strong&gt; to get back a set of matches from the labeling functions.  These matches can make the output of the model explainable.  Labeling functions, even though they are thought solely to a part of the training process, can still be used at runtime.&lt;/p&gt;

&lt;h3 id=&quot;practical-implementation&quot;&gt;Practical Implementation&lt;/h3&gt;

&lt;p&gt;Here's how this might be implemented in a web based online system which processes data though a model that has users:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write a set of labeling functions.&lt;/li&gt;
  &lt;li&gt;Process the data set through the labeling functions and generate a model.&lt;/li&gt;
  &lt;li&gt;Deploy the model into a production environment.&lt;/li&gt;
  &lt;li&gt;Deploy the labeling functions into a production environment wrapped into an API that accepts the same data fed into the model.  This might be an http api or a thrift api or whatever; this depends on the system.&lt;/li&gt;
  &lt;li&gt;Process data through the model.&lt;/li&gt;
  &lt;li&gt;When the user requests &quot;Explain&quot; on the results of the model, pass the data through the labeling functions API and display the results of the labeling functions in a way that the user can understand them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;the-counter-speech-issue&quot;&gt;The Counter Speech Issue&lt;/h3&gt;

&lt;p&gt;My machine learning work is specifically in the arena of identifying / measuring hate speech on public social platforms.  When you work in the hate speech arena, a key consideration is &lt;em&gt;counter speech&lt;/em&gt;.  Counter speech is speech that attempts to address hate speech / fight hate speech.  Now the typical mechanism for counter speech is that it often quotes the hateful speech and then attempts to defuse it.  Counter speech when processed through a well defined machine learning model tends to &lt;strong&gt;not&lt;/strong&gt; be identified as hateful because the underlying model technology (Bert / Roberta / Albert) understands the linguistic nature of the speech and discount the specific nouns inside it.&lt;/p&gt;

&lt;p&gt;Now, given that counter speech tends to use the same words as hate speech, labeling functions that attempt to explain counter speech tend to explain it as hateful (where as the machine learning model tends to identify counter speech as non hateful).  The issue here is that regular expressions don't understand the linguistic subtleties that a machine learning model based on bert / roberta / albert does understand.  A possible way to address this is to enable the explain function to only operate for things are hateful not things that aren't hateful.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/a-look-into-snorkel-drybell-8e9e781dc250&quot;&gt;A Look Into Snorkel Drybell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1812.00417&quot;&gt;Arxiv Paper on Snorkel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zdnet.com/article/is-googles-snorkel-drybell-the-future-of-enterprise-data-management/&quot;&gt;ZdNet on Snorkel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.snorkel.org/&quot;&gt;Snorkel.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ai.googleblog.com/2019/03/harnessing-organizational-knowledge-for.html&quot;&gt;Google AI Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/sculpt/a-technique-for-building-nlp-classifiers-efficiently-with-transfer-learning-and-weak-supervision-a8e2f21ca9c8&quot;&gt;Sculpt on Building AI Classifiers Using NLP (Abraham)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://explosion.ai/demos/displacy&quot;&gt;Displacy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spacy.io/models&quot;&gt;Spacy Models&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html</guid>
        
        <category>machine_learning</category>
        
        <category>python</category>
        
        <category>snorkel</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Creating an All New Rails App</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/2017-02-20_08.11.21.jpg&quot; alt=&quot;2017-02-20_08.11.21.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have been mentoring a person new to Rails for the past several weeks and it is always instructive to see where someone new to the platform has issues.  This blog post walks through the commands we used today and explains them.  If you're an old hat at this, just move on but if you're starting out, I suspect this may be quite helpful.&lt;/p&gt;

&lt;h2 id=&quot;navigate-to-the-right-starting-directory&quot;&gt;Navigate to the Right Starting Directory&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/rails/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;make-sure-rails-is-ok&quot;&gt;Make Sure Rails is Ok&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;set-the-ruby-version&quot;&gt;Set the Ruby Version&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rvm use 2.7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;find-a-rails-new-command-from-my-history&quot;&gt;Find a Rails New Command from my History&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;history | grep 'rails new'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-a-new-rails-app&quot;&gt;Create a New Rails App&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new dev_home_page --database=mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;change-into-the-directory&quot;&gt;Change Into The Directory&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd dev_home_page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-bundle-install&quot;&gt;Run Bundle Install&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;start-a-web-server&quot;&gt;Start a Web Server&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3096
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the web server in your browser with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3096/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;close-web-server-with-ctrlc-and-edit-configdatabaseyml&quot;&gt;Close Web Server with Ctrl+C and Edit config/database.yml&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mate config/database.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need to set the user and password on your database server in the first configuration block within the database.yml file.&lt;/p&gt;

&lt;h2 id=&quot;create-the-database-itself&quot;&gt;Create the Database Itself&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-rake-dbmigrate&quot;&gt;Run rake db:migrate&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;start-two-more-terminal-panes&quot;&gt;Start Two More Terminal Panes&lt;/h2&gt;

&lt;p&gt;I run iTerm and I'm a firm believer in the &quot;The Trininty of Terminal Windows for Rails Development&quot; so I right click in my terminal window and select Split Pane Horizontally twice giving me 3 terminal windows in one.  I then go back to my first terminal window and get the current directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: The trinity of terminal windows is Web Server, Rails Console and a Command Line for git commits / whatever else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: The same result can be done with 3 tabs in standard OSX Terminal.  I just &lt;strong&gt;adore&lt;/strong&gt; iTerm; it has made my life better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: Start your Rails Console in the middle pane with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;get-the-current-directory-and-set-all-terminal-panes-to-this-directory&quot;&gt;Get the Current Directory and Set all Terminal Panes to this Directory&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pwd 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then in each other terminal pane, do:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/rails/dev_home_page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the directory that pwd displayed or you.&lt;/p&gt;

&lt;h2 id=&quot;install-yarn&quot;&gt;Install Yarn&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -o- -L https://yarnpkg.com/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Update your current terminal window's path with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add yarn to your application:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn install --check-files    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;re-run-the-web-server-from-the-top-terminal-pane&quot;&gt;Re-Run the Web Server from the Top Terminal Pane&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3096
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point the errors seen initially should be gone entirely.  Open the web server in your browser with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3096/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-a-model-and-edit-the-migration&quot;&gt;Create a Model and Edit the Migration&lt;/h2&gt;

&lt;p&gt;The next real test of being able to make a Rails app is to generate a model.  If this works then your entire Rails app should be setup correctly:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g model Project
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 09 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/09/creating-an-all-new-rails-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/09/creating-an-all-new-rails-app.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Finding Your Rhythm as a Remote Worker</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7013.JPG&quot; alt=&quot;IMG_7013.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Denver Skyline from a Remote Worker's Office; Photo Credit - Kim Corbett; Thank You)&lt;/p&gt;

&lt;p&gt;I have been, with one 9 month exception, a fully remote worker since 1999 and a manager of remote workers since 1996.  Heading into 2020 that puts me at over 20 years of solid, day in and day out remote work so, I'll admit, that I &lt;strong&gt;know&lt;/strong&gt; a thing or two about remote work.  I've both been a remote worker, managed remote workers and I think all possible permutations.  This post attempts to summarize what works for &lt;strong&gt;me&lt;/strong&gt;.  What works for &lt;strong&gt;you&lt;/strong&gt; will almost certainly be different but I suspect the same meta principles will apply.&lt;/p&gt;

&lt;h1 id=&quot;routine-routine-routine&quot;&gt;Routine, Routine, Routine&lt;/h1&gt;

&lt;p&gt;Day in and day out my days look remarkably similar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;roll out of bed sometime between 3 am and 6 am&lt;/li&gt;
  &lt;li&gt;shower, shave, dress, etc.  Even tho the only people that ever see me are my wife, kids and cats (yes they are peole to me) I still dress like I was going into an office every day.&lt;/li&gt;
  &lt;li&gt;hit &lt;a href=&quot;http://www.meh.com/&quot;&gt;meh&lt;/a&gt; while it hasn't sold out and see if there is something cheap I can treat myself to&lt;/li&gt;
  &lt;li&gt;hit the hardest code immediately and get my momentum going&lt;/li&gt;
  &lt;li&gt;take advantage of the &lt;a href=&quot;https://fuzzyblog.io/blog/startup/2016/10/29/startup-learnings-i-do-all-my-coding-before-anyone-gets-to-work-or-what-ed-fisher-taught-me.html&quot;&gt;early morning, blessed quiet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;continue until the end of the day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know that some remote workers are constantly changing location and fully embrace the digital nomad lifestyle (&lt;a href=&quot;http://wanderling.co/how-i-work-from-anywhere-in-the-world&quot;&gt;example&lt;/a&gt;).  And that is brilliant that they are able to do so but for myself I really appreciate consistency.  And I adore having a solid, fast connection like fiber – you don't get that when you move regularly.&lt;/p&gt;

&lt;h1 id=&quot;it-is-still-work&quot;&gt;It Is Still Work&lt;/h1&gt;

&lt;p&gt;The single biggest mistake that everyone, and that has included me in the past, makes with remote work is not treating it as work.  Because you are the one at home it is all too easy for your spouse (or yourself) to assume &quot;oh they can also do a load of laundry&quot; or some other house hold task.  &lt;strong&gt;No&lt;/strong&gt;.  &lt;strong&gt;You&lt;/strong&gt;.  &lt;strong&gt;Can't&lt;/strong&gt;.  Work is work and home is home.  I find that my greatest productivity comes when my door is shut and I can concentrate.  Now your results might vary&lt;/p&gt;

&lt;h1 id=&quot;you-dont-have-colleagues-so-figure-out-how-to-do-everything-alone&quot;&gt;You Don't Have Colleagues So Figure Out How to Do Everything Alone&lt;/h1&gt;

&lt;p&gt;When you are a remote worker you do have colleagues but, often, when you are the odd man out in the remote wilderness you may find that, ahem, they aren't always helpful.  Being able and willing to figure things out on your own is a key skill.&lt;/p&gt;

&lt;h1 id=&quot;gear---you-never-know&quot;&gt;Gear - You Never Know&lt;/h1&gt;

&lt;p&gt;I almost never throw any computer gear out.  As a remote engineer there is no one to turn to in the next cubicle and say something like &quot;I need a USB to firewire adapter to get some data off this old drive that might help me with my current code&quot;.  Can I go to the computer store for that?  Sure.  I even have a Fry's 20 minutes away but that 20 minute drive easily turns into:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20 minutes there&lt;/li&gt;
  &lt;li&gt;20 minutes back&lt;/li&gt;
  &lt;li&gt;20 minutes shopping&lt;/li&gt;
  &lt;li&gt;an hour plus getting my head back where it was before I left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I stay in my cozy home environment, even if I'm rooting thru a cable bin for something I can keep my current context solid in my head.  But if I have to get into a car and engage the outside world then it is a given that I have lost it and it will usually take a solid hour to get my brain back to where it needs to be (if the problem is complex).&lt;/p&gt;

&lt;p&gt;If you don't keep a gear box where you toss old hard drives, cables, an odd network hub, etc then I strongly encourage you to do so.  Odds are that this pack rat tendency will drive your spouse mad but the productivity benefits are real.&lt;/p&gt;

&lt;h1 id=&quot;engineer-invest-in-thyself&quot;&gt;Engineer Invest In Thyself&lt;/h1&gt;

&lt;p&gt;I don't think I'm wrong in saying that engineers are notoriously cheap.  We all look at technology and think to ourselves &quot;I could build that&quot; – even when it is normally untrue.  One of the very best decisions you can make is to invest in yourself.  There are three great purchases that I've made over the years that really, truly improved my productivity:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/startup/2016/10/21/startup-learnings-what-francois-schiettecatte-taught-me.html&quot;&gt;an Aeron chair&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bose Quiet Comfort Headphones&lt;/li&gt;
  &lt;li&gt;Building My Own Computer Desk&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll sit in the same chair for sometimes 14 to 16 hours per day.  I don't ever have back pain and I never even notice my chair – an Aeron is just that good.  Similarly there are times when I've pair programmed for 10 hours straight and my ears don't hurt.  I can wear Quiet Comfort headphones all damn day.  When I got them they were $350 which I thought at the time was absurd but all other pairs of headphones just didn't cut it.  And if you buy two or three pairs of $60 headphones then you're almost half way there anyway.&lt;/p&gt;

&lt;p&gt;I haven't spoken about my adventures earlier this year in building exactly the computer desk I've always wanted but I will someday.  A bad day in the office about a month ago sent me racing to the lumber yard and two days later I had ripped out the absolutely shite working surface I had and replaced it with this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/desk1.jpg&quot; alt=&quot;desk1&quot; /&gt; 
(simple, flat, 8 foot span)
&lt;img src=&quot;/blog/assets/desk2.jpg&quot; alt=&quot;desk2&quot; /&gt;
(most of the computers in place; there are more now)
&lt;img src=&quot;/blog/assets/desk3.jpg&quot; alt=&quot;desk3&quot; /&gt; 
(Nice cut outs for cable transfer)
&lt;img src=&quot;/blog/assets/desk4.jpg&quot; alt=&quot;desk4&quot; /&gt; 
(why you make your own desk - the desire to NOT have a visual rats nest of all the cabling that modern computing &lt;strong&gt;requires&lt;/strong&gt;; there are 6 power strips under my desk and all are full; I'm about to add a seventh)&lt;/p&gt;

&lt;p&gt;All total I spent less than 8 hours in rough carpentry from start to finish on this and I highly recommend it if you are a hands on person.  I've wanted to do this for more than a decade now and I'm tremendously happy that I did.&lt;/p&gt;

&lt;p&gt;The only sad thing about making my own desk is that my wife recently got me &lt;a href=&quot;https://www.amazon.com/Good-Clean-Fun-Misadventures-Offerman/dp/1101984651/ref=sr_1_1?ie=UTF8&amp;amp;qid=1480930872&amp;amp;sr=8-1&amp;amp;keywords=nick+offerman&quot;&gt;Nick Offerman's Good Clean Fun&lt;/a&gt; book and now I really want to make another one this time as a trestle table.  Sigh.  If you are a woodworker and you haven't read Offerman yet then I highly recommend it.  You would never believe that an actor could teach you wood working but he does a credible job and spins a wonderful tale in the doing.&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2020/01/08/finding-your-rhythm-as-a-remote-worker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2020/01/08/finding-your-rhythm-as-a-remote-worker.html</guid>
        
        <category>remote</category>
        
        <category>work_from_home</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>An Open Letter to Bob Frankston</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1312.jpg&quot; alt=&quot;IMG_1312.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;Hi &lt;a href=&quot;https://en.wikipedia.org/wiki/Bob_Frankston&quot;&gt;Bob&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I strongly doubt you remember but I met you years ago as part of the Boston Blogging group that &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt; used to organize.  About the same time I also met &lt;a href=&quot;https://en.wikipedia.org/wiki/Dan_Bricklin&quot;&gt;Dan Bricklin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to make a suggestion to you.  I've been subscribed to you in my aggregator for a long time but due to the design of aggregators, it isn't clear if a post in the aggregator is full content or summary.  Here's all I saw of your current (wonderful) &lt;a href=&quot;http://rmf.vc/IEEECE202001&quot;&gt;CES post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CES is a time to see new products and services. Alas, my expectations might be too high.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here is how this appears in an aggregator:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/frankston_aggregator.png&quot; alt=&quot;frankston_aggregator.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I thought this was just a lament but I happened to click through and lo and below, a &lt;strong&gt;wonderful&lt;/strong&gt; bit of writing.&lt;/p&gt;

&lt;p&gt;So my suggestion to you is to change your blogging tool to output the &lt;em&gt;full content&lt;/em&gt; of each post you write.  I'm pretty certain you wrote your own blogging tool and, thus, I know this is possible; you obviously have the skills (and if that isn't the greatest understatement I've made blogging, I don't know what is).&lt;/p&gt;

&lt;p&gt;My suspicion is that for &lt;strong&gt;yourself&lt;/strong&gt; it is more important that you get your ideas out into the universe than that you drive people to &lt;strong&gt;your&lt;/strong&gt; site.  This is the single best reason for a full content feed.  Every time you have to rely on someone clicking thru from their aggregator to your site, there is a solid chance (1 in 2; 1 in 3; 1 in 5; 1 in 10 ???) that they just won't).  Often times they don't ever know that there is more content out there; I certainly didn't and I've been in the RSS world now for almost 20 years and I have pretty solid credentials in the RSS world – I was the creator of the Feedster RSS and Blog search engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My own &lt;a href=&quot;https://fuzzyblog.io/blog/&quot;&gt;blog&lt;/a&gt; and my &lt;a href=&quot;https://fuzzyblog.io/recipes/&quot;&gt;recipes&lt;/a&gt; are all done with full content feeds so I'm not askign you to do anything that I'm not doing.  Also full content feeds aren't really any harder than a summary feed - just put out the full content.  Feel free to use &lt;a href=&quot;https://fuzzyblog.io/blog/feed.xml&quot;&gt;my feed&lt;/a&gt; as an example.  Even better – use &lt;a href=&quot;http://scripting.com/rss.xml&quot;&gt;Dave's&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Btw I loved this point: &quot;I mount the devices as soft infrastructure using 3M Command Strips which means I can take it off the wall and use it as a flashlight.&quot;.  Damn brilliant and I've started doing this with devices.  Thank you.&lt;/p&gt;

&lt;p&gt;And thank you for all the wonderful work you've done over the years. I started with VisiCalc way, way back in the 80s.&lt;/p&gt;

&lt;p&gt;Scott&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rss/2020/01/07/an-open-letter-to-bob-frankston.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rss/2020/01/07/an-open-letter-to-bob-frankston.html</guid>
        
        <category>rss</category>
        
        <category>blogging</category>
        
        
        <category>rss</category>
        
      </item>
    
      <item>
        <title>Python Tips - Playing with Pandas</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6444.jpeg&quot; alt=&quot;IMG_6444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I write this it is 3:45 am and I am playing with Python.  I have a small script that looks like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DATA_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;data/&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;file.json&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATA_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;dataset_head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The pandas library give you a bunch of facilities for looking at data and organizing it into what are called data frames.  If you think of pandas as a spreadsheet that you can use programmatically, well, that's not far off.  Pandas is widely used for Python data processing and can read data from CSV and JSON formats (among others).&lt;/p&gt;

&lt;p&gt;If I want to investigate the length of a variable, I can do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) len(dataset)
45648
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if I want to know the type of a variable, I can do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type(dataset)
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if I want to know the columns that Pandas as loaded from the json, I can do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; dataset.columns
Index(['tweet_id', 'timestamp_us_eastern', 'author_handle',
       'author_screenname', 'authority', 'predicted_gender',
       'predicted_language', 'predicted_country',
       'predicted_state_or_province', 'predicted_city', 'given_location',
       'followers', 'following', 'predicted_sentiment', 'context_notes',
       'antisemitic_classification', 'author_bio', 'text', 'is_truncated',
       'is_retweet', 'lang', 'Majority Model', 'label'],
      dtype='object')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What this tells me is that I have a dataset variable with a text column that I can access by dataset.text.  And then if I want the first 'row' of data in this column, I can do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) dataset.text[0]
&quot;Jerry Seinfeld spent a lot of time in Israel's apartheid State supporting the Zionists and giving the bastards credibility. Think its fair to shun his crappy unfunny TV Shows. Let him know what people think of him brown nosing the terrorists of Israel.\n&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So [0] gives the first bit of data.  And, correspondingly, [1] gives the next bit:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) dataset.text[1]
'RT @papicek: @BrncicIvo @fouadhaidar @MehDonaldTrump @AlyseRadenovicA @Sean_x_Larkin @Wandaspangler2 @z123Alpha @Mark_E_Noonan @pouria_63 @KirstyMartin19 @rico_hands @pickle_shmickle @_antizionism @MrBacteriaThief @AltRightJoseph @muld_ulme @kenmckelvey224 @kratze1935 @ExpertZionist @WorldneedsL0VE @amerikagulag @Loo_Siffa @Aristilus @gazaboatconvoy Zionists came up with jut about every form of terrorism you can think of: https://t.co/qvmuMpVWHQ https://t.co/EUg4EviJAe\n'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now that we know this, if we wanted to loop over all the bits of data in dataset.text, a simple Python for loop would do this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let's say that you have a variable wordfreq and you want to look at the string version of a variable, you can do this with the &lt;strong&gt;str&lt;/strong&gt; function:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; str(wordfreq)
'[12, 1, 1, 1, 1, 10, 1, 1, 1, 10, 1, 3, 1, 2, 1, 1, 3, 1, 12, 1]'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 06 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/01/06/python-tips-playing-with-pandas.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/01/06/python-tips-playing-with-pandas.html</guid>
        
        <category>python</category>
        
        <category>pandas</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Pundit and Group By Operations - DOH</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6430.jpeg&quot; alt=&quot;IMG_6430.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of working out security for a new side project (yes, yes, yes - I know; I have too many of these but they are such a good teaching tool for one's self) and I wanted to use &lt;a href=&quot;https://github.com/varvet/pundit&quot;&gt;pundit&lt;/a&gt;.  Pundit, for those who haven't played with it, is a Ruby gem which makes authorization at the controller level easier.&lt;/p&gt;

&lt;h2 id=&quot;authorization-authentication-oh-my&quot;&gt;Authorization, Authentication, Oh My&lt;/h2&gt;

&lt;p&gt;Just to review the very basics of computer security, there are two key concepts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication is who you are to a system&lt;/li&gt;
  &lt;li&gt;Authorization is what you can do to an object within that system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the Rails world of MVC (model, view, controller) architecture, security happens at the controller because that is where the request from the user comes in.&lt;/p&gt;

&lt;p&gt;The way that pundit works is you add a top level directory under app called policies and then there is a generic application_policy.rb as well as a classname_policy.rb file for each ActiveRecord class (change classname to the name of an actual class) in your application.  And, inside each classname_policy.rb file you define permission rules for each controller action.  In short Pundit is a well thought out, fairly seamless way to integrate security in your Rails application.  I like Pundit for more than I ever liked &lt;a href=&quot;https://github.com/ryanb/cancan&quot;&gt;CanCan&lt;/a&gt;, another tool for this same type of problem.&lt;/p&gt;

&lt;h2 id=&quot;my-application&quot;&gt;My Application&lt;/h2&gt;

&lt;p&gt;Here is the rough security rules that I wanted to follow (comments from the Pundit policy model):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-created-it&quot;&gt;yes you can view the object if YOU created it&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-belong-to-the-organization_group&quot;&gt;yes you can view the object if you belong to the organization_group&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-belong-to-the-organization-and-you-are-a-boss&quot;&gt;yes you can view the object if you belong to the organization and you are a boss&lt;/h1&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So when I started down this path, I immediately started getting a Pundit error that I've never seen before and that I didn't understand:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pundit::NotDefinedError: unable to find policy `HashPolicy` for `{}`    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this error sent me through the normal spiral of google results only to find relatively few results.  This &lt;a href=&quot;https://github.com/ankane/groupdate/issues/94&quot;&gt;one&lt;/a&gt;, which I didn't read well, however, was prescient.  And I continued down the path of debugging this at a lower and lower level until I found myself dropping byebug into Pundit itself in this method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;policy&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;safe_constantize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And what I found was that the &quot;object&quot; that Pundit had was just {} which made no sense to me.  And then I looked at my controller and saw what I was doing:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'quarter_id ASC, name ASC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quarter_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I discovered, as I continued to debug this is that I had a failure in my test setup and that, with the .group_by method which converts an ActiveRecord collection into a hash which points to an ActiveRecord collection meant that all Pundit was getting was nothing more than {} which, naturally, led to the failure above.&lt;/p&gt;

&lt;p&gt;The solution was to initially fix my test setup (damn RSpec let statements; how they hell do they actually work; sigh) and then change my controller action to be this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'quarter_id ASC, name ASC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quarter_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that, naturally, is almost identical to what Ankane had (the prescient github post I cited earlier; big damn sigh).&lt;/p&gt;

&lt;p&gt;Note to Self: Pay more attention to Ankane; something I already know.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/05/pundit-and-group-by-operations-doh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/05/pundit-and-group-by-operations-doh.html</guid>
        
        <category>rails</category>
        
        <category>pundit</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Startup Coach 01 The Opportunity Profile</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6593.jpeg&quot; alt=&quot;IMG_6593.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is the first blog post in what I hope becomes a series that I'm calling &quot;Startup Coach&quot;.  I have a friend who wants their own business and I offered to write a blog post a week along the veins of how to do a startup.  Each week I plan to take a single topic and discuss it .  If you'd like to suggest a topic then my email address is fuzzygroup at gmail and I'd be happy to slot something into the queue.&lt;/p&gt;

&lt;p&gt;Today's topic is what I refer to as the Opportunity Profile.  This is a single document that I write at the very beginning of anything that even smells of being entrepreneurial.  The idea behind the opportunity profile is to document the opportunity – in as much detail as you can at the moment of the initial idea.  Everyone's opportunity project is always going to be a little bit different depending on how you conceptualize an opportunity.  My personal opportunity profiles tend to be heavy on product focus and less focused on business side issues simply because that's how I roll.  If you, for example, were strong on the business side then your opportunity profile might sketch out the entire business model and then have a place holder called &quot;Product Goes Here&quot;.&lt;/p&gt;

&lt;p&gt;Here are the topics that I usually put in an opportunity profile:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Overview&lt;/li&gt;
  &lt;li&gt;Tag Lines&lt;/li&gt;
  &lt;li&gt;Business Model&lt;/li&gt;
  &lt;li&gt;Product Overview&lt;/li&gt;
  &lt;li&gt;Competition&lt;/li&gt;
  &lt;li&gt;Development Approach (how I would tackle development)&lt;/li&gt;
  &lt;li&gt;Marketing&lt;/li&gt;
  &lt;li&gt;Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This document might be nothing more than a set of bullet points.  It might be fleshed out.  The important thing is to capture that initial &lt;strong&gt;ideation moment&lt;/strong&gt; when the problem you're trying to solve is crystal clear and you have that rush of &lt;em&gt;intellectual adrenaline&lt;/em&gt;.  And I would note the last sentence doesn't resonate for you, perhaps, you're not cut out for founding a startup.  And, yes, that's harsh and I apologize but I'm a pretty big believer that you are either a startup person or you aren't.&lt;/p&gt;

&lt;p&gt;The way that I recommend writing these, in 2019, is as a Google Doc.  The reason for this is that one of the very best actions you can take with an opportunity profile is to share the link to it to your friends and family and get other people's opinion.  And that brings us to the next topic.&lt;/p&gt;

&lt;h2 id=&quot;but-my-idea-is-unique&quot;&gt;But My Idea is Unique&lt;/h2&gt;

&lt;p&gt;I know that sharing ideas is often hard for entrepreneurs but here's the brutal truth about startup ideas at this stage: &lt;strong&gt;They Really Aren't Worth Anything at All&lt;/strong&gt;.  Now, I get it, that's hard for people to hear – everyone wants to think their idea is brilliant and special but, honestly, it likely isn't.  Most ideas are already out there in one form or another and what actually matters is &lt;strong&gt;idea execution&lt;/strong&gt;.  We all want to believe that the first person in a market succeeds but that's actually rarely, if ever, the case.  And let me back that up with two examples of late market entrants that executed better and succeeded:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Yahoo was not the first web search engine; Web Crawler was and yet Yahoo executed better and succeeded for a lot of years until&lt;/li&gt;
  &lt;li&gt;Google came in an executed better (by recognizing that search was important and making a better mouse trap)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;but-there-are-great-ideas-&quot;&gt;But There Are Great Ideas …&lt;/h2&gt;

&lt;p&gt;I will admit that, on very, very rare occasions, there are great ideas that are simply stunning in their brilliance and the &lt;strong&gt;one&lt;/strong&gt; example that I can point to is HotMail (the generic idea of web based email).  HotMail was uniquely brilliant and a fantastic idea.  If I had had that idea, yeah, I likely would have been pretty careful about it.  But, and this is important, web based email &lt;strong&gt;NOW&lt;/strong&gt; makes a metric ton of sense – would it back in 1995 when the definition of a web browser was so much more limited?  I think that this is an important point to consider.&lt;/p&gt;

&lt;h2 id=&quot;so-you-wrote-a-google-doc---what-now&quot;&gt;So You Wrote a Google Doc - What Now?&lt;/h2&gt;

&lt;p&gt;My best advice to you is turn on Sharing in your google doc and then email it out to whatever your close circle of friends and family and say to them &quot;I had this idea; can you poke holes in it for me?&quot;.  I did this recently with an idea I had (the Cat example below) and I got feedback in like 24 hours that deflated the concept entirely (and it was a bad idea for me to pursue; I lacked the right attributes for the opportunity but that's the topic of next week's post).&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Here are two opportunity profiles that were near the top of my Google Drive:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PhwX4M6G6qFgwC8BLJGjoJy9AT52m9qVlwkI6PFQJOs/edit?usp=sharing&quot;&gt;Cat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/12LP2X2WiviMmz7kqB5qgJpRtuqD5NnrurmhOMJ3AHzc/edit?usp=sharing&quot;&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html</guid>
        
        <category>startup</category>
        
        <category>startup_coach</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>When Jupyter Notebooks Won't Import Libraries</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9429.jpeg&quot; alt=&quot;IMG_9429.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't claim to be an expert when it comes to Python.  At best I'm an apprentice striving to be a journey man.  One of the interesting tools in the Python / Data Science ecosystem is the Jupyter Notebook which gives a cell based representation of code, visualizations, documentation and execution flow and allows you to package things up for distribution i.e. hand your work, in a complete fashion, from say Data Scientist 1 (&quot;Rebekah&quot;) to Data Scientist 2 (&quot;Dawn&quot;).  This is a laudable goal and one that I theoretically agree with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Jupyter Notebooks do NOT include data so that's still external to the notebook, something that can easily bite you (as it is currently biting me).&lt;/p&gt;

&lt;p&gt;I know a lot of pythonistas simply install libraries to their local machine and just have a collection of tools that the throw at problems.  This, however, is a terrible practice due to code deprecation, version conflicts, etc.  I say this with authority because I've been through this in the Ruby world before we all regularly started using Ruby virtual environments / Ruby version managers like RBENV / RVM which manage dependencies on a per project basis.  Knowing this, my first practice with Python, is to always create a virtual environment, generally using Virtual ENV (VENV).&lt;/p&gt;

&lt;p&gt;So, when I set out today to use a Jupyter Notebook, my first approach was to make this work with a Jupyter Notebook.  And, alas, I haven't been so lucky as to make this work cleanly with a Python virtual environment like VENV.  Here are some of the things I tried:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Installing jupyter into the virtual env and running from bin/jupyter notebook&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://anbasile.github.io/programming/2017/06/25/jupyter-venv/&quot;&gt;Following Angelo Basille's Directions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://janakiev.com/blog/jupyter-virtual-envs/&quot;&gt;Following Janakiev's Directions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44586234/how-to-change-kernel-when-jupyter-notebook-shows-only-one-python?rq=1&quot;&gt;Changing the Kernel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're curious about how to use Python Virtual Environments, I wrote a &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html&quot;&gt;solid tutorial back in September&lt;/a&gt; that I used to get a full installation of Tensor Flow up and running.  I've referred back to this over and over, each time I needed a Python Virtual Environment, so I know it works.&lt;/p&gt;

&lt;p&gt;I'm sure there is a way to mess about with virtual environments and Jupyter Notebooks to make them work but, honestly, I'm skeptical on notebooks and how they obfuscate code and data together anyway so I thought &quot;How do I just make this a Python script&quot;.  I took this approach because I was absolutely certain that I could make a virtual environment work with just Python.  And, thanks to my pairing partner, Grant, there is, indeed, a way.&lt;/p&gt;

&lt;h2 id=&quot;making-a-jupyter-notebook-into-a-python-script-with-a-virtual-env&quot;&gt;Making a Jupyter Notebook into a Python Script with a Virtual Env&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Follow the instructions &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html&quot;&gt;here&lt;/a&gt; to setup VENV for a new project in a new directory.&lt;/li&gt;
  &lt;li&gt;Use File menu, Export as Python to write a single Python script representing the notebook.&lt;/li&gt;
  &lt;li&gt;Create a requirements.txt file as per the instructions &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go through the Python code that was exported and convert the import / from instructions to the right &lt;a href=&quot;http://packages.pypy.org/&quot;&gt;PyPy package index&lt;/a&gt; name entry in the requirements.txt file.  Be aware that there isn't a straight correspondence between the import statements and the package names.  For example you import from &quot;metal&quot; in the notebook I'm porting but the package name is actually &quot;snorkel-metal&quot; and you import from sklearn but the package name is actually scikit-learn.  Python's there's only one way to do this mantra, in the area of package management, is just plain crap.  Sigh.&lt;/li&gt;
  &lt;li&gt;Run pip3 install -r requirements.txt&lt;/li&gt;
  &lt;li&gt;Run your python script and then adjust the requirements.txt file accordingly.  You will almost certainly need to change some things but, by and large, I'm finding that this process does work.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/01/03/when-jupyter-notebooks-won-t-import-libraries.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/01/03/when-jupyter-notebooks-won-t-import-libraries.html</guid>
        
        <category>python</category>
        
        <category>jupyter</category>
        
        <category>data_science</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Ruby Testing Technique - The Power and Stupidity of def foo</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0736.jpeg&quot; alt=&quot;IMG_0736.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had an abysmal day yesterday coding on my side project.  Ok – coding on one of my side projects.  I had one of those days where you try to do something simple and NOTHING, NOT ONE DAMN THING, WORKS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Every software engineer knows this type of day.  They aren't days that you talk about with anyone in your life because you spend hours failing at something that you know is so damn simple that, if you can't make it work, you should honestly give up software engineering and go cut grass for a living.  I refer to these days, when I have them, as spirit crushers / brain emasculators. And when they occur, I find that a nap (or a snickers bar) is the best medicine.&lt;/p&gt;

&lt;p&gt;All I was trying to do was make a simple factory work.  For those who aren't deeply immersed in the world of software testing in ruby, a factory is a software method which creates a sample object that represents the actual object so it can be tested.  Factories are used in place of actual objects, generally, because they run faster.&lt;/p&gt;

&lt;p&gt;Here was the definition of the factory:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objective&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Faker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organization&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objective_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;okr_team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quarter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All this means is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an object named objective&lt;/li&gt;
  &lt;li&gt;Give it a name attribute that is pulled from a library called Faker using the first_name method&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the user object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the organization object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the objective_type object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the okr_team object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the quarter object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although this might seem complex, it is actually drop dead simple and something that I've probably done hundreds if not thousands of times.  And yet, yesterday, all I could get was some variant on this &lt;em&gt;censored&lt;/em&gt; backtrace:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ActiveRecord::RecordInvalid:
  Validation failed: Organization must exist, User can't be blank, Organization can't be blank
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:91:in `persist'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:25:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:82:in `block in fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `instance_eval'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabricate.rb:33:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication.rb:65:in `Fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:120:in `block in generate_value'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:41:in `instance_exec'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:41:in `execute'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:29:in `processed_value'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:97:in `block in process_attributes'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:96:in `each'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:96:in `process_attributes'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:6:in `build'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:20:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:82:in `block in fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `instance_eval'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabricate.rb:33:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication.rb:65:in `Fabricate'
# ./spec/controllers/objectives_controller_spec.rb:20:in `block (4 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I blew I don't know how much time on this in the early morning hours.  This is one of the problems with solo side projects – you don't have anyone you can ask when you hit a blocker like this.  Finally, around 6 am, I threw my hands up, muttered a few choice words and then went back to bed.&lt;/p&gt;

&lt;p&gt;And now, 24 hours later, I find myself having solved this and it is through, what I will always remember as &quot;The Power of Foo&quot;.  Here is what I did:&lt;/p&gt;

&lt;h2 id=&quot;step-1-implement-class-and-instance-methods-called-foo-on-user&quot;&gt;Step 1: Implement class and instance methods called foo on User&lt;/h2&gt;

&lt;p&gt;Like a lot of classes in a Rails project that exist to simply support the database, I didn't actually have any methods in my User class.  Now, I would assume that this means that my class was was fine – but what if it wasn't?  So I thought to myself – what if the problem is something that I'm just not seeing?  And so I started to add a &lt;strong&gt;stupid&lt;/strong&gt; method called foo to my user class both at the class level and the instance level:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This gave me something that I could test:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return FOO'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will notice that my output between the two methods is different - 'bar' versus 'BAR' which I did deliberately to ensure that I'm not inadvertently calling a class method versus an instance method or vice versa.  And, happily, this worked perfectly.  Now, let's bring back our Factory definition for user:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objective&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Faker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organization&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objective_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;okr_team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quarter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My next step was to implement this same approach on organization.  And then on objective_type.  And then on okr_team – and that's where I hit a problem:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rspec spec/models/okr_team_spec.rb

Randomized with seed 33038

OkrTeam
  .foo
    should return FOO
  #foo
    should return foo (FAILED - 1)

Failures:

  1) OkrTeam#foo should return foo
     Failure/Error: subject = FactoryBot.create(:okr_team)

     NoMethodError:
       undefined method `user=' for #&amp;lt;OkrTeam:0x00007ff431cfca88&amp;gt;
       Did you mean?  user_id=
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:16:in `public_send'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:16:in `block (2 levels) in object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:15:in `each'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:15:in `block in object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:14:in `tap'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:14:in `object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/evaluation.rb:13:in `object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/strategy/create.rb:9:in `result'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory.rb:43:in `run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory_runner.rb:29:in `block in run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory_runner.rb:28:in `run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/strategy_syntax_method_registrar.rb:20:in `block in define_singular_strategy_method'
     # ./spec/models/okr_team_spec.rb:25:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

Top 2 slowest examples (0.4025 seconds, 98.4% of total time):
  OkrTeam#foo should return foo
    0.3979 seconds ./spec/models/okr_team_spec.rb:24
  OkrTeam.foo should return FOO
    0.0046 seconds ./spec/models/okr_team_spec.rb:31

Finished in 0.40894 seconds (files took 3.55 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/models/okr_team_spec.rb:24 # OkrTeam#foo should return foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my okr_team model, I discovered that I was missing a &lt;strong&gt;belongs_to&lt;/strong&gt; relationship, specifically a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;belongs_to :user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that, dear reader, was sufficient to bring my whole house of software cards crashing to a pile.  I was actually fairly surprised by this; it was a dependency failure that I hadn't seen before.  My missing relationship was a consequence of my very productive &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html&quot;&gt;Example Data&lt;/a&gt; approach to building this side project.&lt;/p&gt;

&lt;h2 id=&quot;the-moral-of-the-story&quot;&gt;The Moral of the Story&lt;/h2&gt;

&lt;p&gt;I think that from now on I'm always going to implement a useless method called def foo and def self.foo to prove that a class works – even if it has &quot;no code&quot; – as even &lt;strong&gt;no code&lt;/strong&gt; can, curiously, have bugs.  So the real moral of the story is &lt;strong&gt;TEST EVERYTHING&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>testing</category>
        
        <category>rspec</category>
        
        
        <category>rspec</category>
        
      </item>
    
      <item>
        <title>In Celebration of Event Organizers - Happy Birthday Kevin Werbach</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9458.jpeg&quot; alt=&quot;IMG_9458.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Taken November 20, 2019 which is significant only because that is my birthday&lt;/p&gt;

&lt;p&gt;I'm writing this blog post because my Facebook feed just flashed by at me &quot;Today is &lt;strong&gt;Kevin Werbach's&lt;/strong&gt; Birthday&quot; and that made me &lt;em&gt;remember&lt;/em&gt;.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Kevin_Werbach&quot;&gt;Kevin Werbach&lt;/a&gt; is a technology analyst and professor at the Wharton School and someone who is far more important to my life than I ever was to him.  This blog post is a tribute to him because he, through a random act of kindness, had a pretty big impact on my life (and I bet he has never realized this; nor should he).&lt;/p&gt;

&lt;p&gt;Back in 2003, I had created the RSS search engine Feedster and had just merged it with RSS-Search which was created by Francois Schiettecatte and he and I, as two nerds do, were trying to figure out &quot;what the hell do we do with this; we have a product and traffic but no business strategy and an ever increasing hosting bill on Scott's credit card that we keep rolling forward each month&quot;.  I saw that Kevin had setup the SuperNova conference and I reached out to him and said &quot;I'd love to come but I just can't afford it; help&quot; and Kevin, with absolute graciousness, gave me a free ticket.&lt;/p&gt;

&lt;p&gt;I made it down to the DC area for the conference, networked unsuccessfully for a day or two and ended up getting a cab to the airport with Scott Rafer, henceforth referred to as Rafer since I am also a Scott.  A chance thunderstorm stranded Rafer and I at the airport for like 7 hours and during that time I got to know him well enough to ask him to be on our advisory board.  And, shortly there after, I hired Rafer as Feedster's first CEO.  And that hiring led to a whole chain of events detailed below.&lt;/p&gt;

&lt;p&gt;So here's the chain of events that Kevin started which, interestingly, lead right up to today:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Kevin gave me a ticket to SuperNova when I couldn't afford one.&lt;/li&gt;
  &lt;li&gt;A random meeting led to a colleague and then a CEO.&lt;/li&gt;
  &lt;li&gt;Rafer led Feedster's legal formation, office space, hiring and funding efforts.  He made a pile of code into a business.&lt;/li&gt;
  &lt;li&gt;We ended up employing a (small) bunch of people and being in business for 3 years.&lt;/li&gt;
  &lt;li&gt;Because of Rafer, I ended up having a much larger presence in Silicon Valley than I should have given that I lived in Boston.&lt;/li&gt;
  &lt;li&gt;Thanks to my Silicon Valley connections, I got to know a large number of interesting people including Dave Sifry (who at that time was the founder of my biggest competitor, Technorati).&lt;/li&gt;
  &lt;li&gt;My work at Feedster led to my getting hired at eduFire which took me into the world of Ruby and Rails and cloud computing.&lt;/li&gt;
  &lt;li&gt;I'm still working off a lot of connections I made back in 2003 to 2006.  This includes my current role leading measurement of hate speech for the ADL where I was hired by Dave Sifry (this is now the third time I've taken a role reporting to Dave Sifry).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'd like to pretend that Feedster would have been successful if I hadn't met Rafer but we very much needed capital and meeting Rafer was a strategic inflection point for me.  And that wouldn't have happened without Kevin so &lt;strong&gt;Happy Birthday Kevin&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;And so, in closing, if you are an event organizer, taking a chance on the proverbial little guy sometimes has profound implications for them.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/03/in-celebration-of-event-organizers-happy-birthday-kevin-werbach.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/03/in-celebration-of-event-organizers-happy-birthday-kevin-werbach.html</guid>
        
        <category>startup</category>
        
        <category>events</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Jumpstart Rails Tutorial 01 - Bringing an Existing Codebase In</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0902.jpeg&quot; alt=&quot;IMG_0902.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updated&lt;/strong&gt;: 5/5/2020&lt;/p&gt;

&lt;p&gt;It is the second day of the New Year – welcome to 2020 – and I have still failed to launch my side project that I started midway through 2019.  Sigh.  I find myself fundamentally regretting this but, well, life:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Job&lt;/li&gt;
  &lt;li&gt;Wife in Hospital&lt;/li&gt;
  &lt;li&gt;Son and Schooling Issues&lt;/li&gt;
  &lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my New Year's Resolution(s) is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch by end of Q1, 2020&lt;/li&gt;
  &lt;li&gt;Not have deployment eat my brain&lt;/li&gt;
  &lt;li&gt;Launch with Something that I'm Visually Proud Of&lt;/li&gt;
  &lt;li&gt;Launch with SAAS billing features from day 1 and Get paying Customers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That last item, SAAS billing features, is a sticky point.  I've actually implemented this myself before – I wrote all the back end code for the AppData SAAS engine which successfully processed over 3.1 million dollars in revenue over a 5 year period (BrainTree api).  And I really, really, really don't want to rewrite that.  Nor do I want to use a third party service and lose another percentage chunk over baseline Stripe fees.&lt;/p&gt;

&lt;p&gt;And all of this means that I need to use the &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Rails&lt;/a&gt; application framework.  I already have a license for it anyway and the issue is that I need to port an existing, almost complete Rails app into it.  All of the blog posts starting with Jumpstart Rails Tutorial nn will cover this process.  While there is &lt;a href=&quot;https://jumpstartrails.com/docs/&quot;&gt;good documentation for Jumpstart Rails&lt;/a&gt;, it is reference material rather than how to material.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If anything I write during this series comes off as critical of Chris Oliver, the man behind Jumpstart Rails, it isn't.  I am an unabashed fan of the &lt;strong&gt;damn fine&lt;/strong&gt; work that Chris Oliver does.&lt;/p&gt;

&lt;h2 id=&quot;step-1---getting-started-with-jumpstart-rails---clone-the-repo&quot;&gt;Step 1 - Getting Started with Jumpstart Rails - Clone the Repo&lt;/h2&gt;

&lt;p&gt;The first step is to purchase an actual license for Jumpstart Rails. This will get you added onto the Jumpstart Rails git repo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://gitlab.com/gorails/jumpstart-pro
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What you need to do is begin by cloning this repo down to your local system:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@gitlab.com:gorails/jumpstart-pro.git web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You notice that I changed the name of this to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I changed it since my previous repo name was web_change_me_now and this is going to be the second version of it.&lt;/p&gt;

&lt;h2 id=&quot;step-2---run-yarn-install&quot;&gt;Step 2 - Run Yarn Install&lt;/h2&gt;

&lt;p&gt;Change into the directory that you just cloned the repo into and:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd web_change_me_now2
yarn install --check-files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3---update-databaseyml&quot;&gt;Step 3 - Update database.yml&lt;/h2&gt;

&lt;p&gt;The file config/database.yml needs to be updated to reflect the name of your new application's database.  This means changing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;jumpstart_development&lt;/li&gt;
  &lt;li&gt;jumpstart_test&lt;/li&gt;
  &lt;li&gt;jumpstart_production&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-4---add-your-local-version-to-github&quot;&gt;Step 4 - Add Your Local Version to Github&lt;/h2&gt;

&lt;p&gt;I then went to github (I'm a staunch github user instead of gitlib) and created a new repo named:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I then needed to add this as an origin:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add web_change_me_now2 git@github.com:fuzzygroup/web_change_me_now2.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My next step is to push.  Now I need to be careful here since I can't push back to the gitlab remote since I don't have permissions for that (and any changes I make are to &lt;strong&gt;my application&lt;/strong&gt; not the template).  Here's the push syntax:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* make some silly ass change; I messed about with README.md */
git add .
git commit -m &quot;readme change&quot;
git push web_change_me_now2 master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don't use remotes all that much – and I suspect outside of Heroku, you don't either – so here's the syntax:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push ORIGIN_NAME BRANCH_NAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So if I want to push my changes, I need to do:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push web_change_me_now2 master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You may want to reverse the order of Steps 5 and 4 (i.e. create a local develop branch first and then push to that) .  After that you can change into master, merge develop and then push to master.  Overall that seems to work better but I'm still confirming this which is why I haven't fully rewritten this blog post.&lt;/p&gt;

&lt;h2 id=&quot;step-5---getting-a-develop-branch-in-place&quot;&gt;Step 5 - Getting a develop Branch in Place&lt;/h2&gt;

&lt;p&gt;I'm a firm believer in a simple, branch based approach to git.  I've talked about this before and, specifically:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Always work in a branch tied to an issue number.&lt;/li&gt;
  &lt;li&gt;Issue branches are merged into develop.&lt;/li&gt;
  &lt;li&gt;Develop is merged into master.&lt;/li&gt;
  &lt;li&gt;Master is then deployed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is simple, straight forward and clean.  I've now worked on teams up to 10 people in size and in Rails code bases of several hundred thousand lines using this with nary a hitch so it is an excellent model for small startups.&lt;/p&gt;

&lt;p&gt;This needs to be done in your terminal and then in Github itself:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In your terminal, create a branch named develop with: &lt;strong&gt;git branch develop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;In your terminal, change into that branch with: &lt;strong&gt;git co develop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Again update the README.md so you have something to push.&lt;/li&gt;
  &lt;li&gt;Add with: &lt;strong&gt;git add .&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Commit with: &lt;strong&gt;git commit -m &quot;readme change&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Push with: git push web_change_me_now2 develop&lt;/li&gt;
  &lt;li&gt;Go into github and pull up your repository.&lt;/li&gt;
  &lt;li&gt;Go into the settings link.  Mine is here: https://github.com/gochangeme/web_change_me_now2/settings&lt;/li&gt;
  &lt;li&gt;Go into the Branches link.  Mine is here: https://github.com/gochangeme/web_change_me_now3/settings/branches&lt;/li&gt;
  &lt;li&gt;You will see the default branch is set to master.  Use the drop down to pick develop and then click the update button.&lt;/li&gt;
  &lt;li&gt;Click the I understand … button.&lt;/li&gt;
  &lt;li&gt;Submit the pull request (you may need to change things a bit with the drop down due to changing the default).&lt;/li&gt;
  &lt;li&gt;Click the merge button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point you are now set for development using the model above.  The next blog post along these lines will focus on taking an initial model and controller and start to develop a porting process.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/02/jumpstart-rails-tutorial-01-bringing-an-existing-codebase-in.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/02/jumpstart-rails-tutorial-01-bringing-an-existing-codebase-in.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Making the Trix Editor Resizable</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0935.jpeg&quot; alt=&quot;IMG_0935.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is interesting that my first post of 2020 is actually a CSS trick.  That's quite an evolution in my web development practices from 2019.  Here is a CSS addition that limits the max height of your trix editor window and makes it resizable:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.trix-content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;800px&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;#set&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;want&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow-y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;trix-editor-resources&quot;&gt;Trix Editor Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://trix-editor.org/&quot;&gt;https://trix-editor.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gorails.com/episodes/trix-editor&quot;&gt;Go Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://headway.io/blog/how-to-use-trix-and-shrine-for-wysiwyg-editing-with-drag-and-drop-image-uploading/&quot;&gt;Headway on Trix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/basecamp/trix&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 01 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/trix/2020/01/01/making-the-trix-editor-resizable.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/trix/2020/01/01/making-the-trix-editor-resizable.html</guid>
        
        <category>css</category>
        
        <category>trix</category>
        
        
        <category>trix</category>
        
      </item>
    
      <item>
        <title>Updating to the Latest Version of JumpStart Pro</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0939.jpeg&quot; alt=&quot;IMG_0939.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I've been using JumpStart Pro to  build a new side project and in a discussion with Chris Oliver, the creator of JumpStart Pro, I reported a bug which he said &quot;Oh - you should update to the latest&quot;.  He viewed the update process as something seamless and I, honestly, didn't get it.  And, in researching this, I discovered that I made a fatal mistake.  The rest of this blog post covers that mistake and explains how you update JumpStart Pro.  Here's the tldr (too long; did not read):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ALWAYS, ALWAYS, ALWAYS create a new app based on JumpStart Pro by cloning it from the GitLab source i.e. you start with: &quot;git clone git@gitlab.com:gorails/jumpstart-pro.git YOUR_PROJECT_NAME&quot;&lt;/li&gt;
  &lt;li&gt;Go to github and create a repo for YOUR_PROJECT_NAME&lt;/li&gt;
  &lt;li&gt;Copy the github clone info and add it as a separate remote: git remote add YOUR_PROJECT_NAME git@github.com:YOUR_GITHUB_USERNAME/YOUR_PROJECT_NAME.git&lt;/li&gt;
  &lt;li&gt;Make a change like updating the README.md and do the add / commit dance and push to your repo as  git push YOUR_PROJECT_NAME master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though I've worked with Git for more than a decade now, I've previously only worked with Heroku as a git remote so I missed the implications of this when I originally cloned my first JumpStart Pro app.  Sigh.&lt;/p&gt;

&lt;p&gt;The critical mistake I made was that I had started my second JumpStart Pro project by copying from the first JumpStart Pro project I had made and the NOT moving over the .git folder.  This meant that my new project was now disconnected from the original remote so I couldn't just do a git pull to update it.&lt;/p&gt;

&lt;h2 id=&quot;fixing-my-own-stupidity&quot;&gt;Fixing My Own Stupidity&lt;/h2&gt;

&lt;p&gt;Here's what I did to fix this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I started by creating a new application cloning into a new location: git clone git@gitlab.com:gorails/jumpstart-pro.git okrsnow&lt;/li&gt;
  &lt;li&gt;I created a new git repo for my app&lt;/li&gt;
  &lt;li&gt;I added the new repo with: git remote add okrsnow git@github.com:fuzzygroup/okrsnow.git&lt;/li&gt;
  &lt;li&gt;I made a change and pushed to git push okrsnow master&lt;/li&gt;
  &lt;li&gt;I manually copied over all the code from my original JumpStart pro repo.  Given that Rails apps have such a clearly defined directory structure, this was tedious but not insurmountable.&lt;/li&gt;
  &lt;li&gt;I had to adapt my normal development practices so that I remember to always use the remote when workign with branches.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;oh-and-about-that-bug&quot;&gt;Oh and About that Bug&lt;/h2&gt;

&lt;p&gt;I noticed that Chris fixed it within a few hours of my reporting it.  Thanks Chris!&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/12/29/updating-to-the-lastest-version-of-jumpstart-pro.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/12/29/updating-to-the-lastest-version-of-jumpstart-pro.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Heroku and Route 53 - Using Amazon for Domain Registration with Heroku for Hosting</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08749.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;https://devcenter.heroku.com/articles/route-53&lt;/p&gt;

&lt;p&gt;https://devcenter.heroku.com/articles/route-53&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2 took 5m33s
❯ heroku domains:add okrsnow.com
Adding okrsnow.com to ⬢ okrsnow… done
Configure your app's DNS provider to point to the DNS Target thawing-coral-9zbepdxpaa0ondgs6ubrpre7.herokudns.com.
For help, see https://devcenter.heroku.com/articles/custom-domains&lt;/p&gt;

&lt;p&gt;The domain okrsnow.com has been enqueued for addition
Run heroku domains:wait 'okrsnow.com' to wait for completion&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2 took 2s
❯ heroku domains:add www.okrsnow.com
Adding www.okrsnow.com to ⬢ okrsnow… done
Configure your app's DNS provider to point to the DNS Target quiet-cephalopod-d3uo5fkp1t6x7dnqtpyc1jue.herokudns.com.
For help, see https://devcenter.heroku.com/articles/custom-domains&lt;/p&gt;

&lt;p&gt;The domain www.okrsnow.com has been enqueued for addition
Run heroku domains:wait 'www.okrsnow.com' to wait for completion&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2
❯&lt;/p&gt;

</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2019/12/29/heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/12/29/heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.html</guid>
        
        
      </item>
    
      <item>
        <title>Getting Past the unpack1 error on Heroku</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:38:16.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;11373* heroku domains:add okrsnow.com
11374* heroku domains:add www.okrsnow.com
11376* mate _posts/2019-12-29-heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.md
11377* heroku logs
11378* heroku logs –tail
11379* heroku config:set RAILS_MASTER_KEY=123456789abcefg
11380* git push heroku master
11384* git push heroku master
11385* heroku logs –tail
11390* git push heroku master
11391* heroku config:set RAILS_MASTER_KEY=config/credentials/production.yml.enc
11395* git push heroku master
11396* heroku config:set RAILS_MASTER_KEY=f9d510292a72197cb71c44617a6f71690ebe5fde9aaf7c0b19dc0427aeef62e2143e271260e169fd04ab3681f1df173d6079c740f8aeafff491787974809b9aa
11397* git push heroku master
11399* heroku config:set RAILS_MASTER_KEY=65371bc52c911ea14494c5905c07c1cf
11400* git push heroku master
11402  heroku logs tail -f
11404  heroku logs –tail
11409  heroku logs –tail
11411  history | grep heroku
11412  heroku config
11413  bundle exec heroku rake db:migrate
11414  bundle exec heroku rake seed:init&lt;/p&gt;

&lt;p&gt;https://jumpstartrails.com/discussions/88&lt;/p&gt;

&lt;p&gt;remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/rake-13.0.1/exe/rake:27:in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;top (required)&amp;gt;'
remote:
remote:        Caused by:
remote:        ArgumentError: key must be 16 bytes
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:193:in &lt;/code&gt;key='
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:193:in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_decrypt'
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:157:in &lt;/code&gt;decrypt_and_verify'
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/messages/rotator.rb:21:in `decrypt_and_verify'
remote&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2019/12/29/getting-past-the-unpack1-error-on-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/12/29/getting-past-the-unpack1-error-on-heroku.html</guid>
        
        
      </item>
    
      <item>
        <title>How Do You Know What ActiveRecord Table Has a user_id Attribute?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0903.jpeg&quot; alt=&quot;IMG_0903.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Even though I'm a firm, firm believer in agile, I've recently been experimenting with a throwback to waterfall style development and it very quickly left me with a fully featured data structure of tables and relationships modeled as &lt;strong&gt;example data&lt;/strong&gt;.  What I did is very rapidly write a series of migrations and then populate them to represent a sample &quot;installation&quot;.  My goal with this approach was to play to my strengths – data modeling – and avoid getting tied down in user interface stuff (my weakness).&lt;/p&gt;

&lt;p&gt;This was a very, very interesting approach and what I found was that I got much further along the lines of the &quot;guts&quot; of an application simply because I never got discouraged by:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh Shite – I know this should look good but I'm too much of a hoser to make it look good; I guess I'll put it aside and go watch TV&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The downside to this is that I never bothered setting up the normal associations that you do when you write a migration; I simply thought about this application in terms of the example data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the users who would be using the system&lt;/li&gt;
  &lt;li&gt;the data objects that they would create&lt;/li&gt;
  &lt;li&gt;how the data objects would interact with each other&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the things that I noticed when I started filling in the basics like &quot;belongs_to :user&quot; was that I kept constantly jumping between the class I was working on and the schema file.  Finally it hit me – what I needed was a method that I could execute in the console that would tell me what classes had a user_id attribute.  And so I wrote a class called DataObject (for an ActiveRecord class which stores data) and a method .has_user_id.  What I was looking for was output that looked like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; DataObject.has_user_id
Initiative
Yes - has a user_id field
KeyResultOwner
Yes - has a user_id field
KeyResult
Yes - has a user_id field
ObjectiveOwner
Yes - has a user_id field
ObjectiveType
Objective
Yes - has a user_id field
OkrTeamMember
Yes - has a user_id field
OkrTeam
Yes - has a user_id field
OrganizationGroup
Organization
Quarter
ResponsibilityRole
State
Yes - has a user_id field
User
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's the entirety of the DataObject class:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataObject&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Initiative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KeyResultOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KeyResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjectiveOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjectiveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Objective&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OkrTeamMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OkrTeam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OrganizationGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Quarter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ResponsibilityRole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# DataObject.has_user_id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_user_id&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DataObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;inst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yes - has a user_id field&quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You'll notice the self.all class method returns a list of classes specific to my application.  These are the classes that actually make up the business logic.  I needed to NOT pull all classes in the application because I built this on top of a new framework, JumpStart Pro (see next section). JumpStart Pro has a bunch of its own classes for things like Credit Cards, Charges, etc.  I only wanted to focus on the classes that I implemented; hence the .all method.&lt;/p&gt;

&lt;p&gt;In order to use this, all I need to do is go into a console, which I &lt;strong&gt;always, always&lt;/strong&gt; have open anyway (Thanks Jared) and then type DataObject.has_user_id and I'll get a print out similar to the above list.  Using this I was able to much more easily move from class to class and add in my &lt;em&gt;belongs_to user&lt;/em&gt; relationships.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It took about 3 to 4 times longer to write this blog post than it did to write this class.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-gorails-jumpstart&quot;&gt;Sidebar: GoRails JumpStart&lt;/h2&gt;

&lt;p&gt;Given that my weakest skill is user interface, I chose, right from the start, to build this on top of &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;GoRails' JumpStart Pro&lt;/a&gt; product which is a framework for building Rails app and giving you a solid set of underpinnings for a SAAS app.  I've been ridiculously happy so far with JumpStart Pro.  Here's an example of the high quality user interface I've seen from it:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/okrsnow01_edited.png&quot; alt=&quot;okrsnow01_edited.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/okrsnow02_calendar.png&quot; alt=&quot;okrsnow02_calendar.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This last image, the drop down calendar, I did zero work to get that to appear.  All I did was change the field type from a text field to a date field:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form.label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:date_end_at&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form.date_field&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:date_end_at&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Do&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Need&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Complete&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&quot;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;form-control&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will fully admit that I don't actually know if this drop down comes from JumpStart Pro or from Rails 6 and the new form with style forms but, &lt;strong&gt;damn&lt;/strong&gt; is it sexy as hell to get a drop down calendar without ever doing a damn thing.  Here's what I said to my wife as I discovered this in the car on the way home from seeing Trans Siberian Orchestra:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Man that's sexy.  I think I'm more than a bit hard …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JumpStart Pro – Absolutely recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html</guid>
        
        <category>rails</category>
        
        <category>active_record</category>
        
        <category>metaprogramming</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When Your Brand New Windows PC Goes into a The Computer Restarted Unexpectedly Loop</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1083.jpeg&quot; alt=&quot;IMG_1083.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This blog post is for Max, my youngest son, so he can learn what I did to fix this problem.&lt;/p&gt;

&lt;p&gt;So my youngest son got a new Windows gaming PC for this Christmas from his Grandmother (thank you Nanny) and when he started it up, all he saw was this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1097.jpeg&quot; alt=&quot;IMG_1097.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The normal diagnostic steps of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pull the graphics card and use motherboard graphics&lt;/li&gt;
  &lt;li&gt;Check that the RAM is seated&lt;/li&gt;
  &lt;li&gt;Double check all cables are connected&lt;/li&gt;
  &lt;li&gt;Change the boot order options and make sure that the right boot device (SSD) is used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We ordered this from Best Buy and my suspicion is that someone had previously bought this computer and partially run thru Windows setup and failed.  Since the device is brand new, all we need to do is trick Windows into running through the setup process from scratch.&lt;/p&gt;

&lt;p&gt;Here's how I solved this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Press shift+F10 to get a command prompt.  Clap loudly for seeing a DOS prompt for the first time in ages.&lt;/li&gt;
  &lt;li&gt;Type regedit and press enter.&lt;/li&gt;
  &lt;li&gt;Navigate to this key: &lt;strong&gt;HKLM/SYSTEM/SETUP/STATUS/ChildCompletion&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click on setup.exe and change the value from 1 to 3.&lt;/li&gt;
  &lt;li&gt;Press ALT+F and select Exit from the File menu to exit RegEdit.&lt;/li&gt;
  &lt;li&gt;Exit out of the command prompt by typing exit and pressing ENTER.&lt;/li&gt;
  &lt;li&gt;Reboot the computer by clicking ok at the &quot;The Computer Restarted Unexpectedly…&quot; dialog box.&lt;/li&gt;
  &lt;li&gt;Run through the Windows setup process from scratch and all should be good.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thewindowsclub.com/computer-restarted-unexpectedly-encountered-unexpected-error&quot;&gt;TheWindowsClub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/windows/2019/12/25/when-your-brand-new-windows-pc-goes-into-a-the-computer-restarted-unexpectedly-loop.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/windows/2019/12/25/when-your-brand-new-windows-pc-goes-into-a-the-computer-restarted-unexpectedly-loop.html</guid>
        
        <category>windows</category>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Don't Beat Yourself Up - That's the World's Job</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1048.jpg&quot; alt=&quot;IMG_1048.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;Today is December 23rd and I am writing in the wee hours, that wonderfully still time when all is quiet in the world.  Between the early hour and the time of year, I've found that this always makes me thoughtful.&lt;/p&gt;

&lt;p&gt;Many of the people I know and care for are terribly hard on themselves.  They seem to feel that if they aren't perfect, they need to beat themselves up for that lack of perfection.  And I get being self critical – trust me, I really, really do but it simply isn't necessary, that's what the &lt;strong&gt;world&lt;/strong&gt; does for you.  There is no need to rake yourself over the coals; the world and your detractors (and we all have detractors) will do that for you.  Now, while I find Ernest Hemingway often problematic, this is something that he really understood.  I read his novel, a &lt;em&gt;Farewell to Arms&lt;/em&gt; over 30 years ago, and this quote has been floating about in my brain ever since:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“If people bring so much courage to this world the world has to kill them to break them, so of course it kills them. The world breaks every one and afterward many are strong at the broken places. But those that will not break it kills. It kills the very good and the very gentle and the very brave impartially. If you are none of these you can be sure it will kill you too but there will be no special hurry.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;― &lt;a href=&quot;https://en.wikipedia.org/wiki/Ernest_Hemingway&quot;&gt;Ernest Hemingway&lt;/a&gt;, &lt;a href=&quot;https://www.goodreads.com/work/quotes/4652599-a-farewell-to-arms&quot;&gt;A Farewell to Arms&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/philosophy/2019/12/23/don-t-beat-yourself-up-that-s-the-world-s-job.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/philosophy/2019/12/23/don-t-beat-yourself-up-that-s-the-world-s-job.html</guid>
        
        <category>philosophy</category>
        
        
        <category>philosophy</category>
        
      </item>
    
      <item>
        <title>Understanding OKRs</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1050.jpg&quot; alt=&quot;IMG_1050.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;During last week's offsite, my boss let us know that he wanted to go down the &lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;OKR&lt;/a&gt; rabbit hole in 2020.  OKR stands for Objectives and  Key Results and is a management philosophy promoted by &lt;a href=&quot;https://en.wikipedia.org/wiki/John_Doerr&quot;&gt;John Doerr&lt;/a&gt; of &lt;a href=&quot;https://en.wikipedia.org/wiki/Kleiner_Perkins&quot;&gt;Kleiner Perkins&lt;/a&gt; who most famously got it internalized by Google with great success.  According to &lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Objectives and key results is a framework for defining and tracking objectives and their outcomes.  OKRs comprise an objective—a clearly defined goal—and one or more key results—specific measures used to track the achievement of that goal.  The goal of OKR is to define how to achieve objectives through concrete, specific and measurable actions.  Key results can be measured on a 0-100% scale or any numerical unit (e.g. dollar amount, %, items, etc.). Objectives should also be supported by initiatives, which are the plans and activities that help to achieve the objective and move forward the key results.&lt;/p&gt;

&lt;p&gt;Although the core idea of OKRs is that you have both Objectives and Key Results and that seems obvious, I've always found that examples give things clarity.  So here are some examples:&lt;/p&gt;

&lt;h2 id=&quot;objective&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Research and improve customer satisfaction&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Exceed Net Promoter Score (NPS) of over 8.0&lt;/li&gt;
  &lt;li&gt;Get 1000 survey responses to annual satisfaction survey&lt;/li&gt;
  &lt;li&gt;Conduct 50 phone interviews with top customers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-1&quot;&gt;Objective:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Improve internal employee engagement&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-1&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Conduct 3 monthly “Fun Friday” all-hands meetings with motivational speakers&lt;/li&gt;
  &lt;li&gt;Implement tracking system in 3 different teams&lt;/li&gt;
  &lt;li&gt;Reach weekly employee satisfaction score of at least 4.7 points&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-2&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Finish raising new capital for our growth needs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-2&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;E-mail and phone outreach to 100 VCs and seed funds&lt;/li&gt;
  &lt;li&gt;Get at least 30 second contact meetings or conference calls&lt;/li&gt;
  &lt;li&gt;Solicit at least 3 term sheets of our minimum required terms&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-3&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Simplify &amp;amp; clarify our product, messaging, presentation of things we do&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-3&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;25 on-site user-testing sessions to understand key product misunderstandings&lt;/li&gt;
  &lt;li&gt;10 tests of our recent infographics and slide decks for customer understanding&lt;/li&gt;
  &lt;li&gt;Get 1000 answers to an online user survey sent to all last quarter’s signups&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-4&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Grow Our Corporate Global Business&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-4&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Hit company global sales target of $100 Million in Sales&lt;/li&gt;
  &lt;li&gt;Achieve 100% year-to-year sales growth in the EMEA geography&lt;/li&gt;
  &lt;li&gt;Increase the company average deal size by 30% with upsells&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My thanks to the &lt;a href=&quot;https://blog.newsteer.com/okr-goals-practical-examples-for-companies-and-startups-a1d2fbb037c5&quot;&gt;Steer blog&lt;/a&gt; which published these examples.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/okr/2019/12/22/understanding-okrs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/okr/2019/12/22/understanding-okrs.html</guid>
        
        <category>okr</category>
        
        <category>startup</category>
        
        
        <category>okr</category>
        
      </item>
    
      <item>
        <title>How Do You Know the Charge Status of Your Apple Pencil</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0737.jpeg&quot; alt=&quot;IMG_0737.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm a new user to my Apple Pencil, the one with the magnet that charges on the top of the iPad.  I mean I've had it since I got an iPad Pro but I dropped it in my laptop bag and, well, never even remembered it existed.  A friend told me &quot;Use Your iPad with the Apple Pencil and Google Jamboard and its &lt;strong&gt;fantastic&lt;/strong&gt;&quot; (future blog post coming).  And I think that's a great idea but the first problem I found was that my Apple Pencil was dead, dead, dead.&lt;/p&gt;

&lt;p&gt;So the obvious question is how do you know that your Apple Pencil is charged?  I started with 9 to 5 Mac and &lt;a href=&quot;https://ww.9to5mac.com/2019/03/11/apple-pencil-battery/&quot;&gt;their instructions&lt;/a&gt; simply didn't work for me.&lt;/p&gt;

&lt;p&gt;What I discovered is that when you attach your Apple Pencil to your iPad with the magnet, it very quickly flashes the charge on the screen.  You don't need to do anything special to know this – just detach and re-attach.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ipad/2019/12/16/how-do-you-know-the-charge-status-of-your-apple-pencil.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ipad/2019/12/16/how-do-you-know-the-charge-status-of-your-apple-pencil.html</guid>
        
        <category>ipad</category>
        
        <category>apple_pencil</category>
        
        
        <category>ipad</category>
        
      </item>
    
      <item>
        <title>Ruby, ChartKick and chart.js versus Google Charts and the Y Axis Auto Sizing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9948.jpeg&quot; alt=&quot;IMG_9948.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of people in the Open Source world, I rarely know actual people in the Open Source world – but I do know github usernames.  And one of those names that I truly respect is &lt;a href=&quot;https://github.com/ankane&quot;&gt;ankane&lt;/a&gt;.  I've rarely found a bit of code he wrote that I don't like or use.  And while I'm not a big open source creator, I'd like to think that I give back by writing documentation like this blog post.&lt;/p&gt;

&lt;p&gt;Today I'm talking about the &lt;a href=&quot;https://github.com/ankane/chartkick&quot;&gt;ChartKick&lt;/a&gt; library by ankane.  ChartKick is an easy way to build JavaScript charts with a single line of Ruby.  I've used ChartKick on and off for years but how it works has always been a bit of a mystery.  Hopefully this blog post de-mystifies it a bit.&lt;/p&gt;

&lt;h2 id=&quot;chartkick-can-use-different-graphing-engines&quot;&gt;ChartKick Can Use Different Graphing Engines&lt;/h2&gt;

&lt;p&gt;I have always used ChartKick in the past just with the default Google Charts engine.  Much to my surprise, ChartKick can use chart.js underneath.  This is surprising to me and &lt;strong&gt;utterly awesome&lt;/strong&gt;.  &lt;a href=&quot;https://www.ruby-forum.com/t/trying-to-change-chartkick-to-chart-js/251938&quot;&gt;Here's where I learned this&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-chartkick-with-chartjs&quot;&gt;Using ChartKick with chart.js&lt;/h3&gt;

&lt;p&gt;In application.js, you need both of these:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//= require Chart.bundle
//= require chartkick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: This assumes that you aren't using yarn / webpacker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you change application.js, you need to restart your development server.&lt;/p&gt;

&lt;p&gt;Here's a picture of a graph using chart.js:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/chartkick_chart_js.png&quot; alt=&quot;chartkick_chart_js.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-chartkick-with-google-charts&quot;&gt;Using ChartKick with Google Charts&lt;/h3&gt;

&lt;p&gt;If you are using ChartKick with Google Charts then you need to remove the line below from application.js:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//= require Chart.bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then you need to add, into your layout or your html template:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= javascript_include_tag &quot;https://www.gstatic.com/charts/loader.js&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's a picture of a graph using Google Charts:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/chartkick_google_charts.png&quot; alt=&quot;chartkick_google_charts.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;y-axis-auto-sizing--setting-axis-minimums-dynamically&quot;&gt;Y Axis Auto Sizing / Setting Axis Minimums Dynamically&lt;/h2&gt;

&lt;p&gt;The Y axis on my graphs, for years, has always been zero.  I had a friend complain about this to me and a &lt;a href=&quot;https://chartkick.com/&quot;&gt;documentation&lt;/a&gt; grovel (ok I read it more closely than I ever had before) revealed this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;min defaults to 0 for charts with non-negative values. Use nil to let the charting library decide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;adding-a-bit-of-color-to-your-graph&quot;&gt;Adding a Bit of Color to Your Graph&lt;/h2&gt;

&lt;p&gt;I haven't used this in quite a while, so here's a reminder on how to use colors:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= line_chart data, colors: [&quot;#b00&quot;, &quot;#666&quot;] %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Thank you ankane!&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/12/13/ruby-chartkick-and-chart-js-versus-google-charts-and-the-y-axis-auto-sizing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/12/13/ruby-chartkick-and-chart-js-versus-google-charts-and-the-y-axis-auto-sizing.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>chartkick</category>
        
        <category>chartjs</category>
        
        <category>google_charts</category>
        
        <category>yaxis</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Using Xargs to Get Past Argument List Too Long</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9162.jpeg&quot; alt=&quot;IMG_9162.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a quick one.  I have about 25,000 files in a directory that I need to grep across.  I tried:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep '&quot;class&quot;:0' *.json | more
zsh: argument list too long: grep
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That's a problem because when the argument list is too long, nothing can happen.  The solution here is a combination of find and xargs, specifically:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' | xargs grep '&quot;class&quot;:0'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's the output from this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./davidson-data-266118b4178f11ea80474c3275928de7.json:{&quot;count&quot;:3,&quot;hate_speech&quot;:3,&quot;offensive_speech&quot;:0,&quot;neither&quot;:0,&quot;class&quot;:0,&quot;tweet&quot;:&quot;\&quot;@JPantsdotcom @Todd__Kincannon @the__realtony I'm partial
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should be able to use an approach like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find -name '*.json' -exec grep '&quot;class&quot;:0' 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but the embedded grep in find doesn't accept that and fails with this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find: illegal option -- n
usage: find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]
       find [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The closest that I can get to make this work is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' -exec grep 'class' {} +
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and that's not an exact match so, sigh.&lt;/p&gt;

&lt;p&gt;If we return to the original approach and add a -l option flag then we can list only filenames:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' | xargs grep -l '&quot;class&quot;:0'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/833128/what-does-xargs-grep-do&quot;&gt;Stack Overflow on Xargs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6637882/how-can-i-use-grep-to-show-just-filenames-on-linux&quot;&gt;Stack Overflow on Grep&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/128559/solving-mv-argument-list-too-long&quot;&gt;Argument List Too Long&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 12 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/12/12/using-xargs-to-get-past-argument-list-too-long.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/12/12/using-xargs-to-get-past-argument-list-too-long.html</guid>
        
        <category>linux</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>The 12 Bugs of Christmas - A Software Developers' Version</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8539.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This isn't mine but it was forwarded to me via a group chat and, in it, I found a deep, profound and abiding truth:&lt;/p&gt;

&lt;h3 id=&quot;1----for-the-first-bug-of-christmas-my-manager-said-to-me&quot;&gt;1.    For the first bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2----for-the-second-bug-of-christmas-my-manager-said-to-me&quot;&gt;2.    For the second bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3----for-the-third-bug-of-christmas-my-manager-said-to-me&quot;&gt;3.    For the third bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4----for-the-fourth-bug-of-christmas-my-manager-said-to-me&quot;&gt;4.    For the fourth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5----for-the-fifth-bug-of-christmas-my-manager-said-to-me&quot;&gt;5.    For the fifth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6----for-the-sixth-bug-of-christmas-my-manager-said-to-me&quot;&gt;6.    For the sixth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7----for-the-seventh-bug-of-christmas-my-manager-said-to-me&quot;&gt;7.    For the seventh bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;8----for-the-eighth-bug-of-christmas-my-manager-said-to-me&quot;&gt;8.    For the eighth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;9----for-the-ninth-bug-of-christmas-my-manager-said-to-me&quot;&gt;9.    For the ninth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;10--for-the-tenth-bug-of-christmas-my-manager-said-to-me&quot;&gt;10.  For the tenth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11--for-the-eleventh-bug-of-christmas-my-manager-said-to-me&quot;&gt;11.  For the eleventh bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Say it's not supported&lt;/li&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;12--for-the-twelfth-bug-of-christmas-my-manager-said-to-me&quot;&gt;12.  For the twelfth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Tell them it's a feature&lt;/li&gt;
  &lt;li&gt;Say it's not supported&lt;/li&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/humor/2019/12/11/the-12-bugs-of-christmas-a-software-developers-version.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/humor/2019/12/11/the-12-bugs-of-christmas-a-software-developers-version.html</guid>
        
        <category>humor</category>
        
        <category>christmas</category>
        
        
        <category>humor</category>
        
      </item>
    
      <item>
        <title>Ruby to Python Translation Guide</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01245.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&quot;last-update-12122019&quot;&gt;Last Update: 12/12/2019&lt;/h2&gt;

&lt;p&gt;I wrote this guide to different Ruby idioms and how to do them in Python.  Organization is alphabetical.  This will have to be a continually updated document as I keep finding holes in my Python knowledge and my prior practice of &quot;Learn it / Blog it&quot; simply doesn't put enough things into the same place.  I need a single, easily searchable place to store all this random &quot;how to do X cruft&quot;.&lt;/p&gt;

&lt;p&gt;This is written as headings which discuss the problem and then how it is done in Ruby and in Python and then, optionally, a Python context.  Hopefully this approach makes it useful to both ruby-ites and python-istas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: My day to day lingua franca is still Ruby and in a Rails style context where everything is autoloaded.  Python to me is a specialized tool for Data Science / Machine Learning.  I find that Python:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lacks the elegant simplicity of Ruby&lt;/li&gt;
  &lt;li&gt;Python syntax makes my eyes want to bleed, can we have an underscore character please, how about a colon or some more parentheses&lt;/li&gt;
  &lt;li&gt;Is developer hostile by default&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: These are opinions!  I am writing them after a craptastic work day so that and lack of sleep may be tilting my opinions more than a bit; I mean I'm right but still …  And please understand that I fundamentally respect that amazing work that Guido did but I find myself in Matz's camp by preference.  Still nothing else has the ecosystem that Python does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: If you disagree with the above, my twitter handle is fuzzygroup and my email is easily discoverable.  Let the fun begin …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 4&lt;/strong&gt;: This was initially written in late 2019 so the Python flavor / version is 3.7 using VirtualEnv on a Mac with pip3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 5&lt;/strong&gt;: If there's things you want to see here then actually do let me know.  This isn't a planned out document, it is more of a &quot;what made me feel stooopid in Python today&quot; type of thing.&lt;/p&gt;

&lt;h2 id=&quot;debugging&quot;&gt;Debugging&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;getting-all-attributes-of-an-object&quot;&gt;Getting All Attributes of an Object&lt;/h2&gt;

&lt;p&gt;Most Ruby objects, at least in a Rails context, are generally ActiveRecord objects and respond to .attributes so:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attributes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;created_at&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;updated_at&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Write Daily&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;options&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;user_id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;category_id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;has_habits&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;habit_count&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;shareable&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;master_plan&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;active&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python equivalent of this is is to reference the object's internal dict.  Below we have an object called message which is coming in from a streaming data solution called sse:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__dict__&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;all_awardings&quot;:[],&quot;approved_at_utc&quot;:null,&quot;ups&quot;:1,&quot;user_reports&quot;:[]}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'33288433929'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'retry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# There are four different top level things that can be called:
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# despite the appearance, the attributes of data are NOT json buy just a string so this doesn't work:
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'str'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'keys'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;getting-all-methods-for-an-object&quot;&gt;Getting All Methods for an Object&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:[]=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:all?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:any?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:assert_valid_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:assoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chart_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# a crap ton of methods omitted for clarity&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Also and BETTER since it just shows methods on the class; not inherited methods:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                          &lt;span class=&quot;n&quot;&gt;active_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                   &lt;span class=&quot;n&quot;&gt;after_add_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;after_add_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;after_add_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;after_remove_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;after_remove_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;after_remove_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autosave_associated_records_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;before_add_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;before_add_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;before_add_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;before_remove_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;before_remove_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;before_remove_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                                    &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validate_associated_records_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'__class__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__delattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dict__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dir__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__doc__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__format__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init_subclass__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__le__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__lt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__module__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ne__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__new__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce_ex__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__repr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__setattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__sizeof__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__str__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__subclasshook__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__weakref__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'parse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'retry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sse_line_pattern'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sse_line_pattern&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(?P&amp;lt;name&amp;gt;[^:]*):?( ?(?P&amp;lt;value&amp;gt;.*))?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# object.__dict__ gets you an object's data while dir(object) gets you an object's methods
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See: &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html&quot;&gt;Me&lt;/a&gt;, &lt;a href=&quot;https://lerner.co.il/2014/10/14/python-attributes/&quot;&gt;Lerner&lt;/a&gt;, &lt;a href=&quot;https://medium.com/swlh/class-and-object-attributes-python-8191dcd1f4cf&quot;&gt;Swlh&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/questions/6886493/get-all-object-attributes-in-python&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;getting-all-keys-in-a-hash&quot;&gt;Getting All Keys in a Hash&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cat&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dict_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;json-parsing&quot;&gt;JSON Parsing&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;id&quot;: 12345, &quot;message&quot;: &quot;hello&quot;, &quot;array&quot;: [1,2,3,4]}'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;array&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ujson&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;id&quot;: 12345, &quot;message&quot;: &quot;hello&quot;, &quot;array&quot;: [1,2,3,4]}'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dict_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will confess to dipping into a bit of a Ruby idiom here by importing ujson as JSON (all caps).  I find myself constantly making errors in python by calling my json variable json when that's actually an imported class / module.  This one change makes things a lot easier (at least for me).&lt;/p&gt;

&lt;h2 id=&quot;length--size-of-an-object&quot;&gt;Length / Size of an Object&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1826&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;quitting-the-console&quot;&gt;Quitting the console&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;redis&quot;&gt;Redis&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&amp;lt;Redis client v4.1.3 for redis://127.0.0.1:6379/0&amp;gt;&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;string-interpolation&quot;&gt;String Interpolation&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Scott is a &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scott is a &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;try-----safe-navigation-and-python-hashes&quot;&gt;Try / &amp;amp; - Safe Navigation and Python Hashes&lt;/h2&gt;

&lt;p&gt;A ruby hash returns nil if the key specified is missing:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RUBY_VERSION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;ruby-2.3.1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A python dict raises an exception:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/venv/bin/../lib/python3.7/os.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;678&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__getitem__&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RUBY_VERSION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'ruby-2.3.1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The ruby way around this would be to use try or the safe navigation operator:&lt;/p&gt;

&lt;p&gt;https://stackoverflow.com/questions/46390057/from-ruby-to-python-is-there-an-equivalent-of-try&lt;/p&gt;

&lt;h2 id=&quot;the-blank-for-writing-the-next-entry&quot;&gt;The Blank for Writing the Next Entry&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/12/11/ruby-to-python-translation-guide.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/12/11/ruby-to-python-translation-guide.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>A Week of Whole 30 Meals From My Recipes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9141.jpeg&quot; alt=&quot;IMG_9141.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My eldest son needs to lose abut 15 pounds before he leaves for boot camp in the Marines.  So here is a week of Whole 30 Meals planned out for him.  Here are &lt;a href=&quot;IMG_9141.jpeg&quot;&gt;more details on Whole 30&lt;/a&gt; (scroll down about 1/2 way).&lt;/p&gt;

&lt;h2 id=&quot;monday&quot;&gt;Monday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: 3 &lt;a href=&quot;https://fuzzyblog.io/recipes/eggs/2017/03/07/squishy-eggs.html&quot;&gt;Squishy Eggs&lt;/a&gt;, Black Coffee&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Grilled Chicken Breast, Baked potato with Olive Oil (no dairy), Salad with homemade dressing&lt;/li&gt;
  &lt;li&gt;Snack: handful of cashews&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tuesday&quot;&gt;Tuesday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: 2 Fried Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Garlicky Pork Chops, &lt;a href=&quot;https://fuzzyblog.io/recipes/side_dish/2017/03/10/gluten-free-havilah-s-roasted-carrots-with-changes-by-scott.html&quot;&gt;Roasted Carrots&lt;/a&gt;, Salad&lt;/li&gt;
  &lt;li&gt;Snack: Mixed Nuts; no Peanuts&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wednesday&quot;&gt;Wednesday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Scrambled Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Burger patty, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Steak, Broccoli, Salad&lt;/li&gt;
  &lt;li&gt;Snack: Terra Chips&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Apple&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thursday&quot;&gt;Thursday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Omelet&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Burger, Hash Browns&lt;/li&gt;
  &lt;li&gt;Snack: Cashews, Mixed Nuts&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;friday&quot;&gt;Friday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Scrambled Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Steak, Left Over Hash Browns, Sautéed Bell Peppers and Onions&lt;/li&gt;
  &lt;li&gt;Snack: Lara Bar&lt;/li&gt;
  &lt;li&gt;Sweet: Berries&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;saturday&quot;&gt;Saturday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Omelet&lt;/li&gt;
  &lt;li&gt;Lunch: Burgers Wrapped in Lettuce&lt;/li&gt;
  &lt;li&gt;Dinner: Left Over Steak, Mashed Potatoes Made with Chicken Broth&lt;/li&gt;
  &lt;li&gt;Snack: Cashews&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sunday&quot;&gt;Sunday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Fried Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard Boiled Eggs, Salad&lt;/li&gt;
  &lt;li&gt;Dinner: Meat Loaf, Mashed Potatoes&lt;/li&gt;
  &lt;li&gt;Snack: Lara Bar&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/change/2019/12/08/a-week-of-whole-30-meals-from-my-recipes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/change/2019/12/08/a-week-of-whole-30-meals-from-my-recipes.html</guid>
        
        <category>change</category>
        
        <category>weight_loss</category>
        
        <category>whole30</category>
        
        
        <category>change</category>
        
      </item>
    
      <item>
        <title>Dear Bootstrap Why Aren't My Tables Full Width</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01131.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Perhaps I shouldn't have insomnia and then code into the wee hours because this is an exchange that I can see happening if only I could email Bootstrap in the style of Ann Landers …&lt;/p&gt;

&lt;p&gt;Dear Bootstrap,&lt;/p&gt;

&lt;p&gt;I was hoping that you could explain to me why my tables of data aren't full width.&lt;/p&gt;

&lt;p&gt;Here's an example which isn't full width:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/bootstrap_with_table.png&quot; alt=&quot;bootstrap_with_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here's an example which is:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/bootstrap_without_table.png&quot; alt=&quot;bootstrap_without_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The difference between the two bits of markup is:&lt;/p&gt;

&lt;p&gt;The non full width one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table table-condensed table-hover table-striped&quot; style=&quot;width:100%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The full width one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table-condensed table-hover table-striped&quot; style=&quot;width:100%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's an example of what this looks like in full:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/table_full_width.png&quot; alt=&quot;table_full_width.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thank you.
Confused Web Developer that Struggles Mightily with CSS&lt;/p&gt;

&lt;p&gt;Dear Confused Web Developer that Struggles Mightily with CSS,&lt;/p&gt;

&lt;p&gt;I'd love to explain this to you but I also find the bootstrap table model confusing as heck.  What I can tell you is that, for reasons, I don't understand, adding table seems to have two effects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it improves the lines between the data&lt;/li&gt;
  &lt;li&gt;it sets a margin on the table to inset it from the left and right borders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, no, I can't tell you how to work around this but what I can tell you is this:&lt;/p&gt;

&lt;p&gt;When you want a table to span the full width then omit the table class and just use table-condensed.  And, yes, you're going to lose the nice lines; so sorry; nothing can be done here.&lt;/p&gt;

&lt;p&gt;And I'd direct you to my &lt;a href=&quot;https://getbootstrap.com/docs/4.0/content/tables/&quot;&gt;table documentation&lt;/a&gt; where you can find this discussed in full but there's simply no mention of it anywhere in there so I'd assume that even we don't understand this.&lt;/p&gt;

&lt;p&gt;My sincere apologies …&lt;/p&gt;

&lt;p&gt;Bootstrap 4, Your Friendly Neighborhood CSS Grid&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/12/07/dear-bootstrap-why-aren-t-my-tables-full-width.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/12/07/dear-bootstrap-why-aren-t-my-tables-full-width.html</guid>
        
        <category>bootstrap</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Scott's Approach to Weight Loss</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_4203.jpeg&quot; alt=&quot;IMG_4203.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;About two years ago, I lost 20 pounds.  I compared experiences recently with a friend who had lost a bunch of weight and our experiences were so different that I thought I'd write them down.  I'm also writing this down because my eldest son just enlisted in the Marines and he needs to drop weight before he goes to boot camp.&lt;/p&gt;

&lt;p&gt;Here's what worked for me:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Weigh Yourself Every Day&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Whole 30&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Zero App&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exercise At Least 3 times Per Week&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No Dining Out&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these is discussed below.&lt;/p&gt;

&lt;h2 id=&quot;weigh-yourself-every-day&quot;&gt;Weigh Yourself Every Day&lt;/h2&gt;

&lt;p&gt;I'm an engineer, not a weight loss person, but, to my way of thinking, if you're going to try and lose weight then you need a metric and that metric is &lt;strong&gt;your weight&lt;/strong&gt;.  I've now been weighing myself daily since 2017 and I can tell you that weighing daily really helps prevent you from gaining weight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If you need a way to track your weight on a daily basis, reach out to me.  I have a new product coming out that helps with this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you are going to weigh daily then you need to come up with a standard approach.  For me that is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Wake up.&lt;/li&gt;
  &lt;li&gt;Use the bathroom.&lt;/li&gt;
  &lt;li&gt;Weigh; always using the same scale.&lt;/li&gt;
  &lt;li&gt;Log my weight.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;whole-30&quot;&gt;Whole 30&lt;/h2&gt;

&lt;p&gt;I used the Whole 30 approach to diet.  This basically boils down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Whole Foods - simple proteins and vegetables&lt;/li&gt;
  &lt;li&gt;Nothing artificial; everything made from scratch right down to mayonnaise&lt;/li&gt;
  &lt;li&gt;No sugar at all including sugar, honey, maple syrup, etc.&lt;/li&gt;
  &lt;li&gt;No grains&lt;/li&gt;
  &lt;li&gt;No alcohol&lt;/li&gt;
  &lt;li&gt;No beans / legumes&lt;/li&gt;
  &lt;li&gt;No dairy (including milk, cheese, yogurt, butter)&lt;/li&gt;
  &lt;li&gt;No beverages other than water&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the quick list of what you can eat:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vegetables including potatoes (but not corn as that's a grain)&lt;/li&gt;
  &lt;li&gt;Fruits but in moderation&lt;/li&gt;
  &lt;li&gt;Unprocessed Meats&lt;/li&gt;
  &lt;li&gt;Seafood both fish and shellfish&lt;/li&gt;
  &lt;li&gt;Nuts and Seeds but not peanuts (legumes)&lt;/li&gt;
  &lt;li&gt;Olive Oil&lt;/li&gt;
  &lt;li&gt;Coffee (but black; no sugar, no dairy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a good reference to &lt;a href=&quot;https://www.thekitchn.com/what-you-can-and-cant-eat-on-whole30-239838&quot;&gt;Whole 30&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only sweet that I had on Whole 30 was Lara Bars (which are mostly made of cashews) and fruits / dates.  The only drink I had other than water was LaCroix sparkling waters.&lt;/p&gt;

&lt;h2 id=&quot;zero-app&quot;&gt;Zero App&lt;/h2&gt;

&lt;p&gt;One of the more interesting things I did was use an app called the Zero app:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apps.apple.com/us/app/zero-fasting-tracker/id1168348542&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.zerofasting.zero&amp;amp;hl=en_US&quot;&gt;Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of Zero app is that if you give your body more time to digest the food you consume then you will metabolize it better.  I focused on reducing my eating window to lunch and an early dinner (i.e. 5 or 6).  This reduced the window I ate in down to 17 to 18 hours.  And while this is initially hard, after the first few days, it actually isn't bad.&lt;/p&gt;

&lt;h2 id=&quot;exercise&quot;&gt;Exercise&lt;/h2&gt;

&lt;p&gt;I've never been a big exercise person but I did do 15 to 20 minutes on an elliptical 2 or 3 times per week.&lt;/p&gt;

&lt;h2 id=&quot;dining-out---just-say-no&quot;&gt;Dining Out - Just Say No!&lt;/h2&gt;

&lt;p&gt;I know that the U.S. has moved to a food culture that is largely based around dining outside the home / your personal kitchen.  If you're going to do Whole 30 then you pretty much can't dine out at all.  There is the rare occasion when you can find something simple like a piece of broiled fish or a steak but most restaurant dining is optimized towards flavor and that generally means copious amounts of butter / fat / sugar.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/change/2019/12/06/scott-s-approach-to-weight-loss.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/change/2019/12/06/scott-s-approach-to-weight-loss.html</guid>
        
        <category>change</category>
        
        <category>weight_loss</category>
        
        <category>whole30</category>
        
        
        <category>change</category>
        
      </item>
    
      <item>
        <title>Startup Learnings - What Taylor Williams Taught Me</title>
        <description>&lt;p&gt;&lt;img src=&quot;/blog/assets/IMG_0469.jpeg&quot; alt=&quot;IMG_0469.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Code Cat watches disapprovingly as I work …&lt;/p&gt;

&lt;p&gt;The bulk of my career has been spent at the &lt;strong&gt;small&lt;/strong&gt; scale of the startup universe – companies with 15 people or less; often a lot less; more than a few times, I've been the &lt;em&gt;only&lt;/em&gt; engineer. I have done three stints with companies at or near the three figure number of employees: Dataware, Mascot Network and Seas Education.  One of the characteristics of working at the small scale of startups is that what matters is &lt;em&gt;results&lt;/em&gt;.  How you do it generally doesn't matter – that you do it &lt;em&gt;does matter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And, perhaps unsurprisingly, this can lead to some bad things when it comes to &lt;em&gt;engineering processes&lt;/em&gt;.  To this point, I've actually been dubbed &quot;the anti process&quot; in at least one organization I spent some time at.  So keep that in mind as you read on …&lt;/p&gt;

&lt;p&gt;I'm actively working on an (unlaunched) side project and I noticed this today:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/500_pull_requests.png&quot; alt=&quot;500_pull_requests.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That's from the repo on my side project and it indicates that I've created &lt;em&gt;500&lt;/em&gt; pull requests (this was tied to issue #444 which only got merged this morning; the current issue number is 501.  Issue 444 was a major refactor that has been a long coming.&lt;/p&gt;

&lt;p&gt;I'd like to joke that aggressively using pull requests, even on an unlaunched, personal side project, is &quot;how Mother Johnson taught me to do open source&quot; but that would be an untruth.  This is a &lt;a href=&quot;https://fuzzyblog.io/blog/tag.html#learnings&quot;&gt;Startup Learnings&lt;/a&gt; post and I learned this from &lt;strong&gt;Taylor Williams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Taylor Williams is currently the head of software engineering for &lt;a href=&quot;https://www.seaseducation.com&quot;&gt;Seas Education&lt;/a&gt;, a SAAS product focused on record keeping for special education.  I worked for Seas for about 18 months during which time I focused on AWS infrastructure, deployment, Ansible and back end features.  When I came into Seas, Taylor was still a bit on the junior side but I watched him grow and develop as he took on a larger and larger role, culminating in a promotion where he took on leadership of all software engineering, across all product lines.&lt;/p&gt;

&lt;p&gt;What Taylor taught me was git discipline, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All development is done in feature branches tied to a ticket number&lt;/li&gt;
  &lt;li&gt;Feature branches should be atomic and only include changes specific to that ticket&lt;/li&gt;
  &lt;li&gt;The develop branch accepts changes from a feature branch once the tests pass&lt;/li&gt;
  &lt;li&gt;The master branch is always pristine and can be deployed at any time&lt;/li&gt;
  &lt;li&gt;Pull requests are how you merge your feature branch into develop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I actually believe in this process so thoroughly that I &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;documented it&lt;/a&gt; for anyone who works on my side project.  And I've brought it into my current consulting engagement.&lt;/p&gt;

&lt;p&gt;Now I've been using version control for a long time (I started with &lt;a href=&quot;https://en.wikipedia.org/wiki/PVCS&quot;&gt;PVCS&lt;/a&gt;) but I've &lt;strong&gt;never&lt;/strong&gt; had this kind of discipline before my time at Seas.  Taylor had no problem saying to me what amounted to &quot;Dude - you're doing it wrong; we do it this way.&quot;  And I'll admit that I didn't like hearing that because I'm a pretty senior technical guy and criticism can be hard.  But Taylor did it well and I listened and &lt;strong&gt;he was right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I've now brought over 7,000 lines of brand new code into the world using this approach so I think I've pretty firmly adopted it.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rake stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1757 |   1155 |      28 |     136 |   4 |     6 |
| Helpers              |    490 |    382 |       0 |      49 |   0 |     5 |
| Jobs                 |      2 |      2 |       1 |       0 |   0 |     0 |
| Models               |   2980 |   1709 |      27 |     189 |   7 |     7 |
| Mailers              |      4 |      4 |       1 |       0 |   0 |     0 |
| Channels             |      8 |      8 |       2 |       0 |   0 |     0 |
| JavaScripts          |   4351 |   3599 |       0 |     183 |   0 |    17 |
| Libraries            |   1446 |    929 |       0 |       9 |   0 |   101 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |  11038 |   7788 |      59 |     566 |   9 |    11 |
+----------------------+--------+--------+---------+---------+-----+-------+
  Code LOC: 7788     Test LOC: 0     Code to Test Ratio: 1:0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There are tests; rspec tests don't show up here; my test ratio isn't great yet but it is a work in progress:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.rb' | xargs wc -l
     115 ./spec_helper.rb
  ...
    1720 total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So thank you Taylor for breaking my &quot;anti process&quot; tendencies.  I am much, much happier with my code management practices now.&lt;/p&gt;

&lt;p&gt;And, in closing, I would be remiss in not thanking my former pairing partner, &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; for fixing some of the git mishaps that occurred on the way down this learning process.  Thanks Sean!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/12/04/startup-learnings-what-taylor-williams-taught-me.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/12/04/startup-learnings-what-taylor-williams-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>git</category>
        
        <category>taylor_williams</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>What is the President's Role in a Stage Zero Startup?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9167.jpeg&quot; alt=&quot;IMG_9167.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is another one of those &quot;Tales from the Past&quot; blog posts where something kicked off a memory.  In this case, I was at a conference and talking with someone who was President of a startup and they weren't quite sure what to do.  They had found themselves, at a very early stage, sidelined in their own venture and pigeon holed into a tiny portion of the business.  And, keep in mind, that they did have specialized domain knowledge of that portion but still …&lt;/p&gt;

&lt;p&gt;As I listened to them talk, I had a terribly blunt and not politically correct message for them.  They encouraged me to be direct and so, I'm going to be mildly offensive here (bear in mind that I was talking to a woman when I said this a bunch of years ago):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Strap your balls on and be the damn President&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I said that a bunch of years ago and while I find it more offensive today, I believe that it is still good advice.  But before we get to that, let's talk about the &quot;stages&quot; of a startup.&lt;/p&gt;

&lt;h2 id=&quot;the-stages-of-a-startup&quot;&gt;The Stages of a Startup&lt;/h2&gt;

&lt;p&gt;Startups exist at all types of &quot;stages&quot;. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stage Zero&lt;/li&gt;
  &lt;li&gt;Angel Funded&lt;/li&gt;
  &lt;li&gt;Seed Funded&lt;/li&gt;
  &lt;li&gt;Venture Funded&lt;/li&gt;
  &lt;li&gt;Pre IPO&lt;/li&gt;
  &lt;li&gt;Mature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every one of these stages is different but the President's role, in a Stage Zero startup is particularly important:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The President's role in a Stage Zero startup is very, very simple.  The President does whatever is needed to will the startup into existence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's a Scott Johnson quote; I said this.  And I can say it, with a high degree of authority, because I've done it multiple times in my life.  When I started my first software company, I was 19 and I dropped out of college to create hypertext linking software (this was 4 years before Tim Berners Lee created the world wide web).  When I say &quot;will it into existence&quot;, I know what I'm saying because when I did this, I wasn't a programmer or a software engineer; I simply wanted to create this product.  Creating that company, NTERGAID, was literally an act of will.&lt;/p&gt;

&lt;p&gt;And, despite all the pain that goes into a Stage Zero startup, one of my favorite stages in a startup is what I refer to as &lt;strong&gt;Stage Zero&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-stage-zero-for-a-startup&quot;&gt;What is Stage Zero for a Startup?&lt;/h2&gt;

&lt;p&gt;As I look at startups, Stage Zero is what you have – before you have anything.  Stage Zero can mean:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 guys around a placemat in a restaurant idly dreaming&lt;/li&gt;
  &lt;li&gt;A business plan that you haven't shown anyone&lt;/li&gt;
  &lt;li&gt;A team that isn't yet operating&lt;/li&gt;
  &lt;li&gt;A pile of code and a running website that isn't really a business yet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In essence, Stage Zero is what you have &lt;strong&gt;before you start&lt;/strong&gt;.  You don't have investors, you don't have customers, you don't have product-market fit and you generally don't even have a product.&lt;/p&gt;

&lt;h2 id=&quot;what-does-a-president-do-at-stage-zero&quot;&gt;What Does a President Do at Stage Zero?&lt;/h2&gt;

&lt;p&gt;When you come to a startup leadership position from a mature industry, you often have the idea that you have a specific tasks or tasks in front of you.  In a startup that simply isn't true.  Here's what a President does in a Stage Zero startup:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;They do whatever it takes to come to market.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An expression that I personally love is &lt;a href=&quot;https://en.wikipedia.org/wiki/Root_hog,_or_die&quot;&gt;Root, Hog or Die&lt;/a&gt; which, according to Wikipedia, is &quot;an idiomatic expression for self-reliance&quot;.  And that's the nature of being President of a startup, you have to be self reliant because there aren't the other people around to do things that exist in a mature organization.&lt;/p&gt;

&lt;p&gt;On any given morning in a startup, the President's tasks might include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Settling a dispute between engineering (ok; the one engineer you have hired) and &quot;product management&quot; (the one person who owns the product vision)&lt;/li&gt;
  &lt;li&gt;Editing copy on the website&lt;/li&gt;
  &lt;li&gt;Cleaning the bathroom&lt;/li&gt;
  &lt;li&gt;Arranging for food for the people that are staying late tonight&lt;/li&gt;
  &lt;li&gt;Worrying about funding and burn rate&lt;/li&gt;
  &lt;li&gt;Figuring out the go to market strategy&lt;/li&gt;
  &lt;li&gt;Negotiating strategic alliances&lt;/li&gt;
  &lt;li&gt;Having a conversation with a new hire about something uncomfortable like the fact that they smell and other staffers have complained (this actually happened to me)&lt;/li&gt;
  &lt;li&gt;Recruiting the next hire(s)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Getting a startup out of Stage Zero means solving a thousand, thousand problems both small and large.  And classical business training says that management is a specialized skill where you get to worry mostly about the big picture.  That simply isn't the case in a Stage Zero startup.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/12/03/what-is-the-president-s-role-in-a-stage-zero-startup.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/12/03/what-is-the-president-s-role-in-a-stage-zero-startup.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Starbase Indy / SBI Engineering Post Mortem for 2019</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9451.jpeg&quot; alt=&quot;IMG_9451.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This document is a &quot;post mortem&quot;.  I generally write these after any significant project I'm involved in ends.  The idea is to capture the good (What Worked), the bad (What Didn't Work) and the next (Changes for Next Year).  I am writing this as a public document on my personal blog so that it is accessible for next year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the very term SBI means nothing to you, dear reader, then just move on.  SBI is short for Starbase Indy, a local to Indianapolis, science fiction / star trek / STEM convention (con) held annually over Thanksgiving.  I headed up engineering for the con for 2019 when we deployed a new &quot;bridge&quot; (stage backdrop that looks like a starship bridge.  Here are some pictures for reference:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0443.jpeg&quot; alt=&quot;IMG_0443.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0407.jpeg&quot; alt=&quot;IMG_0407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0441-2.jpg&quot; alt=&quot;IMG_0441-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This last pic is courtesy of Samantha Waltz; Thank you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This document was written with assistance from my wife Shelley.  I could not have done this without her support and competent assistance.  Thank you.&lt;/p&gt;

&lt;h2 id=&quot;what-worked&quot;&gt;What Worked&lt;/h2&gt;

&lt;p&gt;Here's what worked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The new bridge looked amazing.&lt;/li&gt;
  &lt;li&gt;Attaching the bridge panels by zip ties was generally a huge success&lt;/li&gt;
  &lt;li&gt;Attaching the screens in front of the panels (as opposed to a cut thru, behind) was a success.  And it preserves our ability to upgrade / replace monitors if something happens to the current ones.&lt;/li&gt;
  &lt;li&gt;Applying gaffers tape to the intersection of the bridge panels was essential (thanks Dave).&lt;/li&gt;
  &lt;li&gt;The new decals for the bridge panels were lovely; thanks go out to Emily Grumble for design and implementation and Lillian Sams for the donation to fund them.&lt;/li&gt;
  &lt;li&gt;Joseph Campbell of &quot;Signs from the Emissary&quot; was a huge assistance in getting the bridge decals in place at the very last minute; thank you Joe!&lt;/li&gt;
  &lt;li&gt;Assembling the initial bridge components goes faster if you put them on their back.&lt;/li&gt;
  &lt;li&gt;Tear down was fast with a speed of 4 hours and 13 minutes from start to return of the U-Haul.&lt;/li&gt;
  &lt;li&gt;The 26 foot U-Haul truck is actually needed to transport everything.  Never rent smaller.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-didnt-work&quot;&gt;What Didn't Work&lt;/h2&gt;

&lt;p&gt;Here is what didn't work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The holes for attaching the bridge panels via zip ties aren't positioned well so getting them in in a few places kinda sucks; I doubt this can be fixed now but its annoying.&lt;/li&gt;
  &lt;li&gt;Knowing the order to attach the bridge panels in is key.  Our first attempt to assemble the panels was a complete fail.  Here is the right order: Keyboard Panels, Bottom Panels, Top Panels, Screen Panels (after the monitors have been affixed).&lt;/li&gt;
  &lt;li&gt;A 26 foot truck cannot be backed into the loading dock of the Indianapolis Wyndam East Ballroom.  Don't even try; just carry stuff down the ramp.&lt;/li&gt;
  &lt;li&gt;More people for the tear down would have been useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;changes-for-next-year&quot;&gt;Changes for Next Year&lt;/h2&gt;

&lt;p&gt;Here's what I'd change for next year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write assembly documentation / shoot assembly videos; only 1 person, for example, knew how to assemble the turbolift doors.&lt;/li&gt;
  &lt;li&gt;The holodeck arch is a disaster to assemble.  Either documentation or improvements are needed.  Having a set of videos that volunteers could watch before hand would be great.&lt;/li&gt;
  &lt;li&gt;The holodeck arch needs a better light diffuser than the piece of white butchers paper I shoved into it at the 11th hour.&lt;/li&gt;
  &lt;li&gt;I'd add black pinstripe tape to the vertical line where the zip ties go so we don't have to paint them furiously at the last minute.&lt;/li&gt;
  &lt;li&gt;We need to tell volunteers to bring work gloves.&lt;/li&gt;
  &lt;li&gt;Make public facebook events for setup and teardown to encourage participation.  Thank you Sooz for this idea.&lt;/li&gt;
  &lt;li&gt;A hand truck or dolly HAS TO GO TO THE STORAGE UNIT for load out / load in. We forgot this for load out and it was painful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank You's&lt;/h2&gt;

&lt;p&gt;In an epic management fail on my part, I do not have everyone's name to thank them but here's a try.  Thank you to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shelley Johnson&lt;/li&gt;
  &lt;li&gt;Timo Von Burkowski &quot;The Superstar At the Last Minute&quot;&lt;/li&gt;
  &lt;li&gt;Dave Mott&lt;/li&gt;
  &lt;li&gt;Johnny&lt;/li&gt;
  &lt;li&gt;Matt &quot;Dr. Picardo&quot;&lt;/li&gt;
  &lt;li&gt;Donna&lt;/li&gt;
  &lt;li&gt;Andy Sams&lt;/li&gt;
  &lt;li&gt;Chris Topher&lt;/li&gt;
  &lt;li&gt;Casey Huber&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My apologies to anyone I left out.  These are mostly the people who struck the set and did load out since my memory of setup is largely gone at this point.  If your name should be here and isn't then please reach out to me and I'll add it.&lt;/p&gt;

</description>
        <pubDate>Mon, 02 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/sbi/2019/12/02/starbase-indy-sbi-engineering-post-mortem-for-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sbi/2019/12/02/starbase-indy-sbi-engineering-post-mortem-for-2019.html</guid>
        
        <category>sbi</category>
        
        <category>con</category>
        
        
        <category>sbi</category>
        
      </item>
    
      <item>
        <title>Using a Cron Job to Run Rake Tasks Inside Your Docker Container</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9341.jpeg&quot; alt=&quot;IMG_9341.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite cron being an age old *nix technology, it alway seems like  scheduling tasks is an annoying thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;https://crontab.guru/&quot;&gt;Cron&lt;/a&gt; is the standard *nix technology for running tasks on a recurring basis like &quot;every monday at 5 am execute this program&quot;.&lt;/p&gt;

&lt;p&gt;We are now doing things like running tasks within containers and that raises the question of where does cron exist:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;within the container?&lt;/li&gt;
  &lt;li&gt;at the OS level?&lt;/li&gt;
  &lt;li&gt;what about multiple instances of the container across different machines?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not going to try and address the bigger picture questions here like multiple instances but I can show you how to use cron at the OS level to drive a rake task within a container.&lt;/p&gt;

&lt;h2 id=&quot;how-do-you-run-something-within-in-a-container&quot;&gt;How Do You Run Something Within in a Container&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that you can easily execute a shell with in a container, from the outside, with this syntax:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it CONTAINER_HASH /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The CONTAINER_HASH is the docker equivalent of a *nix pid (process identifier).&lt;/p&gt;

&lt;h2 id=&quot;how-to-run-a-rake-task&quot;&gt;How to Run a Rake Task&lt;/h2&gt;

&lt;p&gt;And if you can run a shell like /bin/bash within a container from the outside then, &lt;em&gt;drum roll please&lt;/em&gt;, you can easily run anything from outside including a Rake task.  And if you have that then you can easily schedule it.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it 8d76da4ab481  bundle exec rake data_source:update_or_initial_load --trace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The 8d76da4ab481, shown above, is an example of the CONTAINER_HASH.&lt;/p&gt;

&lt;h2 id=&quot;but-docker-container-hashes-change&quot;&gt;But Docker Container Hashes Change…&lt;/h2&gt;

&lt;p&gt;If you think about this a bit there is one real problem – that damn CONTAINER_HASH isn't consistent.  It changes every time the container is restarted.  The trick to making a cron job that runs your rake task is to use a shell script which pulls the container hash dynamically.  And to figure that you we are going to start with my &lt;a href=&quot;https://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html&quot;&gt;dockerbash blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the shell script from the dockerbash post:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash
if [ -z $1 ]; then
  echo &quot;You need to specify the name of the container you want to get into like:&quot;
  echo &quot;dockerbash police&quot;
else
  pid=`docker ps | grep $1 | awk '{print $1}'`
  docker exec -it $pid /bin/bash
fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let's create another shell script calling it, say, docker_datasource_update:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash
pid=`docker ps | grep police | awk '{print $1}'`
docker exec -it $pid bundle exec rake data_source:update_or_initial_load --trace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is for an application which has the word 'police' in its name hence the above grep for the word police.&lt;/p&gt;

&lt;p&gt;Let's say that this is now stored in /usr/local/bin/docker_datasource_update.  You then need to write a cron job to call it:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# m h  dom mon dow   command
0 7 * * * /usr/local/bin/docker_datasource_update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Add the crontab above with &lt;strong&gt;crontab -e&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/29/using-a-cron-job-to-run-rake-tasks-inside-your-docker-container.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/29/using-a-cron-job-to-run-rake-tasks-inside-your-docker-container.html</guid>
        
        <category>docker</category>
        
        <category>rails</category>
        
        <category>rake</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>How to Win the Thanksgiving Meal War</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0476.jpeg&quot; alt=&quot;IMG_0476.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I'm a software engineer by profession with a history of large scale project management and a focus on dependency management.  I'm also a food nerd so I take the holiday meal seriously; perhaps too damn seriously.  Apologies ???  But seriously, just one of these tips may make your holiday meal cooking easier.  See the second bulleted list for the tldr (&quot;too long; did not read&quot;).&lt;/p&gt;

&lt;p&gt;There's no question in my mind that cooking the Thanksgiving meal is the &lt;em&gt;World War II&lt;/em&gt; of holiday meals.  When you have other holidays there is a focus besides the food:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Christmas has presents&lt;/li&gt;
  &lt;li&gt;Easter has religious significance&lt;/li&gt;
  &lt;li&gt;Passover has religious significance&lt;/li&gt;
  &lt;li&gt;Fourth of July has patriotism and parades&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But Thanksgiving is a celebration that is about the food as it is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Harvest_festival&quot;&gt;harvest festival&lt;/a&gt;.  And with the propensity that people have for wanting their particular, favorite side dish, that only increases the focus on cooking.  And that's why, every year, I feel as if making the Thanksgiving meal is my &quot;go to war&quot; meal (and I don't mind that; it is my favorite meal to cook all year long).&lt;/p&gt;

&lt;p&gt;As I write this, I'm preparing to make my 16th consecutive Thanksgiving meal for my wife and children.  And, over, these many, many years, I have developed a number of techniques that make cooking the Thanksgiving meal much, much easier.&lt;/p&gt;

&lt;p&gt;Here are my recommendations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Print Out Recipes in Advance&lt;/li&gt;
  &lt;li&gt;Plan Your Heat Sources&lt;/li&gt;
  &lt;li&gt;The Longest Cooking Time is Your Biggest Constraint&lt;/li&gt;
  &lt;li&gt;Plan Your Timings&lt;/li&gt;
  &lt;li&gt;Plan Who Does What&lt;/li&gt;
  &lt;li&gt;Food Allergies and Practicality&lt;/li&gt;
  &lt;li&gt;Buy an Alexa and Use it for Timings&lt;/li&gt;
  &lt;li&gt;Do Prep Work on Tuesday / Wednesday&lt;/li&gt;
  &lt;li&gt;Wash Dishes Continuously&lt;/li&gt;
  &lt;li&gt;Set a Place for Each Thing You Are Cooking&lt;/li&gt;
  &lt;li&gt;Check the Microwave Before You Sit Down&lt;/li&gt;
  &lt;li&gt;Buy Extra Tupperware To Send Leftovers Away&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these is covered further below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I could easily have titled this article &quot;How an Engineer Cooks Thanksgiving&quot; or, even, &quot;How a Very, Very Nerdy Engineer with a Background in Project Management and Dependencies Cooks Thanksgiving&quot;.  Here's a picture of a cute cat to make up for the massive upcoming descent into food nerd-dom:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9444.jpeg&quot; alt=&quot;IMG_9444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;print-out-recipes-in-advance&quot;&gt;Print Out Recipes in Advance&lt;/h2&gt;

&lt;p&gt;If you buy into my assertion that Thanksgiving is the World War II of holiday cooking then recipes are your &lt;strong&gt;tactical maps&lt;/strong&gt;.  Your recipes guide your way through the holiday meal and as with maps, you want a &lt;strong&gt;printed copy&lt;/strong&gt;.  Yes a phone is great.  A laptop or tablet is even better.  But when the power goes out -or- the Internet goes offline, don't you want paper?  And do you really want gravy spilled on your screen?  Make a print out of every recipe you want to cook – &lt;strong&gt;before&lt;/strong&gt; you start cooking.&lt;/p&gt;

&lt;h2 id=&quot;plan-your-heat-sources&quot;&gt;Plan Your Heat Sources&lt;/h2&gt;

&lt;p&gt;Your primary constraint in cooking a big holiday meal is always, &lt;em&gt;always&lt;/em&gt;, &lt;strong&gt;always&lt;/strong&gt; the number of &lt;em&gt;heat sources&lt;/em&gt;.  If you think about it, most kitchens have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 oven&lt;/li&gt;
  &lt;li&gt;4 burners (and not all of them tend to work)&lt;/li&gt;
  &lt;li&gt;1 microwave&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider the problem of the turkey and the pies.  All of these require the oven and the turkey requires exclusive use of the oven for an extended period.  Understanding what heat sources you have and how long each dish using them for is important.  What I do is make a list of all the dishes with a plan for what heat source that each dish uses.  Here's a picture of what this looked like a few years ago:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: An outdoor grill can be used to keep food warm if needed.  And outdoor grills with side burner are an additional burner!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Reviewer Ariane Woods made the cogent observation &quot;I'll also add that smoking my turkey has been a game changer as it frees up an oven&quot;.  As someone who is a recovered member of the &quot;Cult of the Smoked Turkey&quot;, I can attest to the truth of this statement.  Another option in this vein is the (insanely dangerous) deep fried turkey.&lt;/p&gt;

&lt;h2 id=&quot;the-longest-cooking-time-is-your-biggest-constraint&quot;&gt;The Longest Cooking Time is Your Biggest Constraint&lt;/h2&gt;

&lt;p&gt;When I plan a big holiday meal, I always orient it around the &lt;strong&gt;single longest cooking time&lt;/strong&gt;.  And, for Thanksgiving, that's pretty simple – it is the turkey.  So I start with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Turkey - 4 Hours at 350 (or whatever)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I then use that to structure &lt;strong&gt;everything&lt;/strong&gt; so:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For a 2 pm meal, the turkey needs to start at 10 am.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And there are related dependencies:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gravy uses turkey drippings and takes roughly 15 minutes so that 10 am needs to become 9:45.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, finally, pre-heating is a reality so you get:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Start preheating the oven at 9:30&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;plan-your-timings&quot;&gt;Plan Your Timings&lt;/h2&gt;

&lt;p&gt;With the exception of soups, stews and desserts that need to chill, the best food is always food that is finished cooking just when you are ready to eat it.  The problem here, is that given the constraints above on heat sources, you simply can't have all the dishes becoming ready at exactly the right time.  And this is ok – depending on the dish.  Here's an example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mashed potatoes pretty much don't degrade over time so they can be made almost whenever.&lt;/li&gt;
  &lt;li&gt;Gluten free gravy has a tendency to sometimes become close to solid after it sits for a long time so gluten free gravy is always the last thing I prepare&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plan-who-does-what&quot;&gt;Plan Who Does What&lt;/h2&gt;

&lt;p&gt;I don't know any adult who would disagree with the statement that &lt;em&gt;holidays are stressful&lt;/em&gt;.  One of the ways to manage the stress is to plan out who does what in the kitchen.  This way you can avoid the difficult relative who wants to help all over the place when they are actually only skilled at a few things.  I call this the &quot;No, Aunt Martha, I need you on whipped cream; that's what's on my schedule.&quot; school of thinking.&lt;/p&gt;

&lt;h2 id=&quot;the-master-spreadsheet&quot;&gt;The Master Spreadsheet&lt;/h2&gt;

&lt;p&gt;This year's Thanksgiving is now up to 12 people definite, a few people that may show up and over &lt;em&gt;insert large number here&lt;/em&gt; food dishes broken out into these categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appetizers&lt;/li&gt;
  &lt;li&gt;Protein&lt;/li&gt;
  &lt;li&gt;Sides&lt;/li&gt;
  &lt;li&gt;Libations&lt;/li&gt;
  &lt;li&gt;Breads&lt;/li&gt;
  &lt;li&gt;Desserts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd like to say that this doesn't require a spreadsheet to stay organized – but it does.  &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1up7YK4TyjXYO08rpmN1wId3YiuZUPplgw1y-RtCDtjc/edit?usp=sharing&quot;&gt;Enjoy the Madness&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;food-allergies-and-practicality&quot;&gt;Food Allergies and Practicality&lt;/h2&gt;

&lt;p&gt;If you have people in your life with food allergies such as gluten free / celiac, then, at a minimum, you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Understand the rules of what can touch what&lt;/li&gt;
  &lt;li&gt;Always have plenty of clean food handling implements&lt;/li&gt;
  &lt;li&gt;Know when to have clean butter (the most common contamination issue)&lt;/li&gt;
  &lt;li&gt;Use &lt;strong&gt;gravity&lt;/strong&gt; to help you – place bready things such as dinner rolls in the oven &lt;em&gt;below&lt;/em&gt; anything that might get contaminated as crumbs don't generally fall up&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;buy-an-alexa-and-use-it-for-timings&quot;&gt;Buy an Alexa and Use it for Timings&lt;/h2&gt;

&lt;p&gt;The single best thing I've done, in the past 5 years, to make cooking easier was to buy an Alexa.  When you are juggling multiple dishes, the ability to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alexa set a 30 minute timer named &quot;Pecan Pie&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;just makes everything so, so, so much easier.  If you don't have an Alexa in your kitchen before you make a holiday meal, you re really making your life harder.&lt;/p&gt;

&lt;h2 id=&quot;set-a-place-for-each-thing-you-cook&quot;&gt;Set a Place for Each Thing You Cook&lt;/h2&gt;

&lt;p&gt;This tip is stupid simple but it actually makes a difference.  When you are making a lot of different dishes (my Thanksgiving is embarrassingly large at 15 dishes; yes I could each different pie as a different dish), it is very, very helpful to &quot;set a place&quot; for each dish.  What I mean by this is you take a half sheet of paper, label it for the dish and then place all the ingredients for that dish on that half sheet of paper.  Here's a photo of how this looks:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I will admit that this uses a lot of physical space and you may see it as a pain in the neck.  The advantage of this is that you will never forget to cook something because there is a physical reminder that you simply can't ignore.  This means, for example, that Aunt Edna will get her beloved green bean casserole.&lt;/p&gt;

&lt;h2 id=&quot;check-the-microwave-before-you-sit-down&quot;&gt;Check the Microwave Before You Sit Down&lt;/h2&gt;

&lt;p&gt;The very last thing we cook every year is we put a can of corn in the microwave and put it on 1 minute.  We then scurry around like frenetic hobbits chanting &quot;Foods!  The Foods are coming&quot; and sit down at the table.  And we promptly forget about the damn corn.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;buy-extra-tupperware-to-send-leftovers-away&quot;&gt;Buy Extra Tupperware To Send Leftovers Away&lt;/h2&gt;

&lt;p&gt;When you make as much food as I do, one of the better tricks to avoid &quot;Fridge Capacity Crisis&quot; is to buy a bunch of extra Tupperware and then send people home with food i.e. &quot;Enjoyed the Mashed Potatoes, Great!  Here you go!&quot;. If you are really creative, you can make up mini meal plates for each guest and and them home with all of it.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/cooking/2019/11/27/how-to-win-the-thanksgiving-meal-war.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cooking/2019/11/27/how-to-win-the-thanksgiving-meal-war.html</guid>
        
        <category>cooking</category>
        
        <category>thanksgiving</category>
        
        <category>holiday</category>
        
        
        <category>cooking</category>
        
      </item>
    
      <item>
        <title>Using Eternal Terminal with OSX and AWS Including Ansible Support</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9163.jpeg&quot; alt=&quot;IMG_9163.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I know, I know – it is 2019 and we're not supposed to be SSH'ing into boxes – but, really, you're going to do it anyway.  And if you are going to ssh into boxes then, for heaven's sake, let's get rid of that stupidity that is your SSH terminal disconnecting whenever there is a simple blip in connectivity.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://eternalterminal.dev/&quot;&gt;Eternal Terminal&lt;/a&gt;, ET, is a mature Open Source project that purports to solve SSH disconnects.  I say &quot;purports&quot; because I have only just installed it and this blog post is my proof of concept to see how well it works.  I'm essentially SSH'd into some box or another roughly 10 to 12 hours a day, 5 to 7 days a week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can strike purports in the above paragraph.  I've now been using Eternal Terminal though a variety of network conditions including changing my wifi connection with long running processes and it works great. I do not understand the deviltry that drives this pretty damn amazing bit of software but I sure do like it.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Here's what you need to do to use ET on a local OSX to remote AWS context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You need to install ET (client) on your OSX box.&lt;/li&gt;
  &lt;li&gt;You need to install ET (server) on your Linux server.&lt;/li&gt;
  &lt;li&gt;You need to start ET (server) on your Linux server.&lt;/li&gt;
  &lt;li&gt;You need to open port 2022 on your AWS security group.&lt;/li&gt;
  &lt;li&gt;You need to adjust your SSH login statements.&lt;/li&gt;
  &lt;li&gt;You may want to use an Ansible Playbook to install ET on your server.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;installing-et-on-osx&quot;&gt;Installing ET on OSX&lt;/h3&gt;

&lt;p&gt;Here's how to install ET on OSX:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install MisterTea/et/et
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;installing-et-on-your-server&quot;&gt;Installing ET on your Server&lt;/h3&gt;

&lt;p&gt;Here's how to install ET on Ubuntu:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install -y software-properties-common
sudo add-apt-repository ppa:jgmath2000/et
sudo apt-get update
sudo apt-get install et
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;starting-eternal-terminal-on-your-server&quot;&gt;Starting Eternal Terminal on Your Server&lt;/h3&gt;

&lt;p&gt;After installation, ET should start automatically.  You can check its status with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status et
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see something like this if ET is running:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;● et.service - Eternal Terminal
   Loaded: loaded (/lib/systemd/system/et.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2019-11-26 21:37:24 UTC; 22min ago
  Process: 6052 ExecStart=/usr/bin/etserver --daemon --cfgfile=/etc/et.cfg (code=exited, status=0/SUCCESS)
 Main PID: 6061 (etserver)
    Tasks: 10 (limit: 4915)
   CGroup: /system.slice/et.service
           └─6061 /usr/bin/etserver --daemon --cfgfile=/etc/et.cfg

Nov 26 21:37:23 ip-172-31-3-194 systemd[1]: Starting Eternal Terminal...
Nov 26 21:37:23 ip-172-31-3-194 systemd[1]: et.service: Can't open PID file /var/run/etserver.pid (yet?) after
Nov 26 21:37:24 ip-172-31-3-194 systemd[1]: Started Eternal Terminal.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;opening-port-2022-on-your-security-group&quot;&gt;Opening Port 2022 on Your Security Group&lt;/h3&gt;

&lt;p&gt;Eternal Terminal on the server relies on port 2022 being open.  This needs to be done at your AWS security group.  Here's how to do this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into console.aws.amazon.com in a browser.&lt;/li&gt;
  &lt;li&gt;Go into EC2 instances.&lt;/li&gt;
  &lt;li&gt;Open Security Groups from the sidebar.&lt;/li&gt;
  &lt;li&gt;Select the Inbound tab.&lt;/li&gt;
  &lt;li&gt;Click the Edit button.&lt;/li&gt;
  &lt;li&gt;Click the Add Rule button.&lt;/li&gt;
  &lt;li&gt;In the Port Range field enter &lt;strong&gt;2022&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In the source field, enter &lt;strong&gt;0.0.0.0/0&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Click the Save button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;changing-your-ssh-login-statement&quot;&gt;Changing Your SSH Login Statement&lt;/h3&gt;

&lt;p&gt;My normal ssh statement looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -i &quot;~/Downloads/adl_fuzzygroup.pem&quot; ubuntu@xx.yy.zz.aa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To use ET, you need to have a &quot;ssh statement&quot; like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;et ubuntu@xx.yy.zz.aa -i &quot;~/Downloads/adl_fuzzygroup.pem&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;an-ansible-playbook-to-automate-server-setup&quot;&gt;An Ansible Playbook to Automate Server Setup&lt;/h3&gt;

&lt;p&gt;If you have more than one server on AWS, you should be using a DevOps tool like Ansible to automate machine setup.  Here's a sample playbook:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---

- name: Configure servers for use with Eternal Terminal
  hosts: all
  become: true
  remote_user: ubuntu
  tasks:
    - name: Install system packages
      apt: pkg= state=latest install_recommends=no
      with_items:
        - software-properties-common

    - name: Add Ansible PPA
      apt_repository: repo=&quot;ppa:jgmath2000/et&quot; update_cache=no

    - name: Update APT cache
      apt: update_cache=yes

    - name: Install system packages
      apt: pkg= state=latest install_recommends=no
      with_items:
        - et
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save the above to playbook_install_et.yml and then run it with a statement like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-playbook -i inventories/inventory.txt playbook_install_et.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternalterminal.dev/&quot;&gt;Eternal Terminal Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MisterTea/EternalTerminal&quot;&gt;Github Eternal Terminal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21640200&quot;&gt;Hacker News Discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/11/26/using-eternal-terminal-with-osx-and-aws-including-ansible-support.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/11/26/using-eternal-terminal-with-osx-and-aws-including-ansible-support.html</guid>
        
        <category>aws</category>
        
        <category>eternal_terminal</category>
        
        <category>osx</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>When You Forget Your Branch Name Use Git Reflog</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9456.jpeg&quot; alt=&quot;IMG_9456.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For my current side project, cmn, I'm using a version control model of issue branches as described &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;here&lt;/a&gt; back in June (about when I started this).  Basically the model is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The master branch is always pristine and always deployable.&lt;/li&gt;
  &lt;li&gt;The develop branch takes changes from issue branches and is then merged into master by a CI server.&lt;/li&gt;
  &lt;li&gt;Anything you work on, no matter how small, gets a github issue and goes thru a pull request approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've never been a real big fan of structured engineering approaches and my last boss, Taylor Williams, did a fantastic job of teaching us this and – &lt;strong&gt;he was right&lt;/strong&gt;.  Even on a small side project, there are definite benefits to solid, well defined workflow processes.&lt;/p&gt;

&lt;p&gt;One disadvantage when you work this way is that you end up with a &lt;strong&gt;lot of branches&lt;/strong&gt;.  And since branches tend to be named for the issue, it isn't always apparent the difference between say 444 and 445.  When branches are transitory such as &quot;fix this bug&quot;, that isn't a big deal.  But when a branch is longer lived, because it just can't be completed in a short period of time, you are likely to simply &lt;em&gt;forget&lt;/em&gt; the branch name.&lt;/p&gt;

&lt;p&gt;As an example, last Thursday night, I started work on a pretty complex enhancement and then a new bug came up Friday morning.  My response was to do an add / commit and then change back to develop and create a new issue and fix that bug.  And, somehow, between Friday morning and tonight, Monday night, the issue number has jumped by 30 issues (if you work this way then you make a lot of issues).  So I went to find the branch and I simply couldn't.  I was at 480 and I looked back at the Github Issues page and I thought it might have been 460 but that turned out not to be it.&lt;/p&gt;

&lt;p&gt;As I thought about it, I realized that I knew when I last worked on it, the preceding Thursday, and there had to be a way to to look at branches by date created.  A bit of &lt;a href=&quot;https://stackoverflow.com/questions/2255416/how-to-determine-when-a-git-branch-was-created&quot;&gt;Internet research&lt;/a&gt; led me to the &lt;strong&gt;git reflog&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git reflog --date=local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is an example of reflog's output:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;e95bf81 HEAD@{Fri Nov 22 09:14:34 2019}: checkout: moving from 460 to develop
fdf7336 HEAD@{Fri Nov 22 09:13:09 2019}: commit: rollup commit
367d9bd HEAD@{Fri Nov 22 09:13:01 2019}: checkout: moving from 458 to 460
367d9bd HEAD@{Fri Nov 22 08:45:15 2019}: commit: rollup commit on habit buddy changes
e95bf81 HEAD@{Fri Nov 22 08:28:30 2019}: checkout: moving from develop to 458
e95bf81 HEAD@{Thu Nov 21 21:13:39 2019}: checkout: moving from 444 to develop
2a11c54 HEAD@{Thu Nov 21 21:13:17 2019}: commit: Rollup on multiple metrics; resume with derived metric
e95bf81 HEAD@{Thu Nov 21 10:12:54 2019}: checkout: moving from develop to 444
e95bf81 HEAD@{Wed Nov 20 14:42:30 2019}: pull origin develop: Fast-forward
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The work had been in the area of multiple metrics so this showed me that it was branch 444.  So a quick:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git co 444
git merge develop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bought my branch up to date so I could resume working on it.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/11/25/when-you-forget-your-branch-name-use-git-reflog.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/11/25/when-you-forget-your-branch-name-use-git-reflog.html</guid>
        
        <category>git</category>
        
        <category>cmn</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Using Github Hub to Create an Issue and Streamline Your Branch Workflow</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9487.jpeg&quot; alt=&quot;IMG_9487.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My git workflow is pretty simple.  Here are the tasks and (where I do them):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an issue that logs what I'm working on  (github website)&lt;/li&gt;
  &lt;li&gt;Use the issue's id number to make a branch (command line)&lt;/li&gt;
  &lt;li&gt;Work on the branch (editor)&lt;/li&gt;
  &lt;li&gt;Add / Commit / Push to the Branch (command line)&lt;/li&gt;
  &lt;li&gt;Create a Pull Request (github website)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Github has a tool called &lt;a href=&quot;https://hub.github.com/&quot;&gt;Github Hub&lt;/a&gt; - &lt;a href=&quot;https://news.ycombinator.com/item?id=20372770&quot;&gt;Hacker News Discussion Thread&lt;/a&gt; -  which allows you to do more operations on the command line than the normal, canonical git actions (add / commit / push).  Henceforth I will be referring to this tool as &lt;strong&gt;hub&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installing-github-hub-on-osx&quot;&gt;Installing Github Hub on OSX&lt;/h2&gt;

&lt;p&gt;To install hub on OSX, you can use brew:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install hub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;if-you-cant-login&quot;&gt;If You Can't Login&lt;/h2&gt;

&lt;p&gt;My first usage of github hub was actually fairly crappy:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hub issue create -m &quot;Update Faq for Why Do Things Appear on the Dashboard&quot;
Error creating issue: Unauthorized (HTTP 401)
Bad credentials
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you hit this error then the first result is a &lt;a href=&quot;https://github.com/github/hub/issues/1067&quot;&gt;very long Github Issues&lt;/a&gt; page.  The long and the short of it is that you need to delete hub's config file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm ~/.config/hub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After this delete, any operation should cause hub to ask you to log in.  And, yes, hub does support Github's two factor authentication so there is that to contend with also.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you still can't use hub after deleting this file then you may have credentials defined in a shell config file like .zshrc or .bashrc.  Read the above linked issue for more.  You also might have better understanding by using the verbose option:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HUB_VERBOSE=1 hub issue create &quot;Update Faq for Why Do Things Appear on the Dashboard&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;and-creating-an-issue&quot;&gt;And Creating an Issue&lt;/h2&gt;

&lt;p&gt;Use the -m flag to create the issue with a title.  This avoids hub opening an editor (which is fine but slows down the process and using hub is to avoid the slowdown):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hub issue create -m &quot;Automate Checking RSS Feeds&quot;
https://github.com/gochangeme/web_change_me_now/issues/465
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And there you have an issue number so now you can can just:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch 465
git co 465
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, yes, I suspect there is a compound command which creates a branch and changes into it in one operation.  I personally prefer to use github via &quot;atomic&quot; commands so if I make a mistake, I can more easily correct recover from it.&lt;/p&gt;

&lt;h2 id=&quot;heres-what-you-can-do-with-hub&quot;&gt;Here's What You Can Do With Hub&lt;/h2&gt;

&lt;p&gt;Here's what you can do with hub (from hub –help):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;api            Low-level GitHub API request interface
browse         Open a GitHub page in the default browser
ci-status      Show the status of GitHub checks for a commit
compare        Open a compare page on GitHub
create         Create this repository on GitHub and add GitHub as origin
delete         Delete a repository on GitHub
fork           Make a fork of a remote repository on GitHub and add as remote
issue          List or create GitHub issues
pr             List or checkout GitHub pull requests
pull-request   Open a pull request on GitHub
release        List or create GitHub releases
sync           Fetch git objects from upstream and update branches
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can easily see myself using pull-request once I get comfortable with issue as I'm already seeing the workflow benefits to hub.  Thank you Gitub!&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/11/24/using-github-hub-to-create-an-issue-and-streamline-your-branch-workflow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/11/24/using-github-hub-to-create-an-issue-and-streamline-your-branch-workflow.html</guid>
        
        <category>git</category>
        
        <category>software_engineering</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Understanding Docker Multi Stage Builds - Installing Python and Ruby in the Same Dockerfile</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01169.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Now that I've come up to speed on Python, I have an application in production that uses both Python and Ruby.  What it does isn't really important but getting it live posed an interesting deployment challenge due to the need to have both Python and Ruby concurrently.&lt;/p&gt;

&lt;p&gt;My initial attempt to make this was work was a native install using Python 3.7 and a fairly large set of Python dependencies on an Ubuntu 18.04 AWS instance.  Unfortunately I kept hitting issues where, well, things just went to hell.  This had me turn to Docker and my thinking was that I should be able to easily build a Dockerfile that supported both Python and Rails.  &lt;em&gt;chuckle&lt;/em&gt;.  Nothing in Docker is actually easy but I got there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reason I needed Python is I was building a &lt;a href=&quot;https://github.com/twintproject/twint&quot;&gt;Twitter&lt;/a&gt; related application and I needed to use the truly excellent Twint library / executable.&lt;/p&gt;

&lt;h2 id=&quot;python-dockerfile-attempt-1&quot;&gt;Python Dockerfile Attempt 1&lt;/h2&gt;

&lt;p&gt;I don't have a full record of this but I tried to pull in a traditional Python install using apt-get.  This worked fairly horribly for reasons that escape me.&lt;/p&gt;

&lt;h2 id=&quot;welcome-to-overlays-and-multiple-from-statements&quot;&gt;Welcome to Overlays and Multiple From Statements&lt;/h2&gt;

&lt;p&gt;My first attempt to make this work failed to work and it failed to really adopt the zen of Docker.  One of the very cool features is that you can build up a Docker container with bits from different containers by using &lt;strong&gt;multiple&lt;/strong&gt; from statements.  This lets you have something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y

FROM ubuntu:latest
FROM ruby:2.6.4-stretch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The term for this is a &lt;a href=&quot;https://dev.to/brpaz/using-docker-multi-stage-builds-during-development-35bc&quot;&gt;Docker Multi Stage Build&lt;/a&gt;.  The trick here is that the output from each FROM statement is logically isolated from each other.  The reason for this is actually pretty simple – standard directory structures.  Given that most *nix environments use similar top level structures like /opt, you simply can't combine things blindly – it needs to be an intentional choice using, &lt;strong&gt;drumroll&lt;/strong&gt;, &lt;strong&gt;copy&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Here's what this multi stage build stuff looked like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda
RUN pip install twint

# The Ruby Stuff Starts Here
FROM ubuntu:latest
FROM ruby:2.6.4-stretch

# This Is The Magic Here 
COPY --from=python /opt/conda/bin/twint /usr/bin
RUN mkdir -p /opt/conda/bin/
COPY --from=python /opt/conda /opt/conda/
COPY --from=python /opt/conda/bin/python /opt/conda/bin/python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last block of lines above show the process of copying from python (the FROM line at the top is named with the &quot;AS python&quot;) and there are two copy statements that were really necessary:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The twint executable needed to be copied to something in the path.  I chose /usr/bin.&lt;/li&gt;
  &lt;li&gt;Since the twint &quot;executable&quot; is written in python, the entire python supporting libraries needed to come with it.  Since this was located in /opt/conda originally and nothing in Ruby used that path, I could simply copy all of it from the python container over to the ruby container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I tried a few different ways to do the copy and I never narrowed it down to which copy statement was exactly needed.  Apologies.  I suspect it should be nothing but &quot;COPY –from=python /opt/conda /opt/conda/&quot; but Docker's documentation on COPY was less than helpful.&lt;/p&gt;

&lt;h2 id=&quot;figuring-out-where-twint-existed&quot;&gt;Figuring Out Where twint Existed&lt;/h2&gt;

&lt;p&gt;The section above is interesting but it relies on one specific bit of knowledge – where the heck that the Twint executable comes from.  And while I might know this for my local environment, I had no idea where it would be installed in a conda environment.  Fortunately the answer was actually pretty easy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a cut down version of this Dockerfile&lt;/li&gt;
  &lt;li&gt;Build it&lt;/li&gt;
  &lt;li&gt;Shell into it and then use ls and which to find things&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how I did this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/twint
touch ~/twint/Dockerfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Docker likes to build directories mostly so it was just easier to give it a directory of its own with a single Dockerfile in it.&lt;/p&gt;

&lt;p&gt;The next step was to edit the Dockerfile and add the following lines:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM ruby:2.6.5-ubuntu
FROM continuumio/miniconda3:latest

RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda

RUN pip install twint
# This trick keeps the container running so you can shell into it
RUN while true; do sleep 1000; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once I had this written, I could do a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build twint
docker ps | grep twint
docker exec CONTAINER_HASH -it /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then I was able to use a combination of ls and which to find the twint binary and gather the information needed for the copy statements above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This technique of generating a small Dockerfile and using it for diagnostic purposes is pretty powerful.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;a-working-python-and-rails-dockerfile-with-twint-support-via-conda&quot;&gt;A Working Python and Rails Dockerfile with Twint Support via Conda&lt;/h2&gt;

&lt;p&gt;Here is how it all came together:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# All The Python Stuff
FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda
RUN pip install twint

# The Ruby Stuff Starts Here
FROM ubuntu:latest
FROM ruby:2.6.4-stretch

RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y git
RUN apt-get install -y ruby
RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev
RUN apt-get install -y nodejs

# This Is The Magic Here 
COPY --from=python /opt/conda/bin/twint /usr/bin
RUN mkdir -p /opt/conda/bin/
COPY --from=python /opt/conda /opt/conda/
COPY --from=python /opt/conda/bin/python /opt/conda/bin/python

RUN mkdir /app
WORKDIR /app

# Install yarn
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y apt-transport-https
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y yarn

COPY Gemfile Gemfile.lock ./
RUN bundle install --binstubs

ENV secret_key_base SOMEKEY

ENV RAILS_ENV production
ENV DB_NAME SOMETHING
ENV DB_USERNAME SOMEUSER
ENV DB_PASSWORD A_PASSWORD
ENV DB_HOST a_host

COPY . .

RUN bundle exec rake RAILS_ENV=production DATABASE_URL=mysql2://user:pass@127.0.0.1/dbname SECRET_TOKEN=dummytoken assets:precompile

CMD puma -C config/puma.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ubuntu-not-alpine&quot;&gt;Ubuntu Not Alpine&lt;/h2&gt;

&lt;p&gt;Yes, yes, yes, I know that I really should have used Alpine.  I started from Ubuntu because I know it well and the additional overhead of Ubuntu wasn't an issue for this product (a small internal application).&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/22/understanding-docker-overlays-multiple-from-statements.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/22/understanding-docker-overlays-multiple-from-statements.html</guid>
        
        <category>docker</category>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Making Your Jekyll Blog Searchable with HTML, JavaScript and Google</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMG_8476.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So yesterday someone said this to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know the problem with your blog – you write so much and its not searchable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Poppycock.  Balderdash.  Fizzle Sticks.  Ok. Maybe.  Yes there's not search box at the top of my blog but anything on the Internet that has a distinct domain name is actually easily searchable just by using Google.  For example, here's how you'd find anything I ever wrote about MySQL:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;site:fuzzyblog.io mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you copy and paste that into google then you're get a search of my site for anything I ever wrote about mysql.&lt;/p&gt;

&lt;p&gt;If we wanted to make this a &quot;feature&quot; of my blog then we would need to do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an HTML form which has a search box and a search button.&lt;/li&gt;
  &lt;li&gt;We'd need some JavaScript to handle assembling the query and sending it to Google.&lt;/li&gt;
  &lt;li&gt;We'd need to integrate it with Jekyll&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1-a-basic-html-form&quot;&gt;Step 1: A Basic HTML Form&lt;/h2&gt;

&lt;p&gt;Here's a basic html form:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.com/search&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;do_search();&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-javascript&quot;&gt;Step 2: JavaScript&lt;/h2&gt;

&lt;p&gt;Here's the JavaScript:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text/javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;do_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;site:fuzzyblog.io &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://www.google.com/search?q=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What this does is take the query in the search field and assign it to a variable.  It then merges it with the &quot;site:fuzzyblog.io&quot; bit of Google syntax.  And, yes, there might be an issue with multi word queries needing to be joined with the + character (that's how HTML rolls but Google is generally pretty flexible).  I'd test this now and rewrite the query but I'm in an aluminum tube at 35,000 feet without any access to Google (or most developer documentation). The final step is to set document.location to the google url for the search.  That forces the query to execute and positions the user on the Google results page.&lt;/p&gt;

&lt;h2 id=&quot;step-3-jekyll-integration&quot;&gt;Step 3: Jekyll Integration&lt;/h2&gt;

&lt;p&gt;In order to integrate this with Jekyll, we need to modify two files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;_includes/head.html&lt;/li&gt;
  &lt;li&gt;_layouts/default.html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The _includes directory holds html templates for the html HEAD element, the header of every page and the footer of every page.  The file head.html needed to be modified to include the JavaScript.&lt;/p&gt;

&lt;p&gt;The _layouts directory holds the html layout files used for content display so that's where the search form needs to be displayed.&lt;/p&gt;

&lt;h2 id=&quot;step-4-success&quot;&gt;Step 4: Success!&lt;/h2&gt;

&lt;p&gt;Here's how it looks without much work at all on usability:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/search.png&quot; alt=&quot;search.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is about as simple an approach to search as you can get:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Free&lt;/li&gt;
  &lt;li&gt;Google might put ads on the results&lt;/li&gt;
  &lt;li&gt;No control over search results presentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it is free, easy to understand and should work for almost anybody.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/11/22/making-your-jekyll-blog-searchable-with-html-javascript-and-google.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/11/22/making-your-jekyll-blog-searchable-with-html-javascript-and-google.html</guid>
        
        <category>search</category>
        
        <category>jekyll</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>If You Pair Program Buy Tuple Now</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9350.jpeg&quot; alt=&quot;IMG_9350.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I've written in the past, I am an unabashed fan of pair programming.  Pair programming is one of the few techniques that I can credibly point to that really, really, really improves software quality.  And since I'm a remote developer, I really, really need good pairing tools.  The unfortunate reality of pair programming is that there really aren't good tools for pairing – until Tuple.&lt;/p&gt;

&lt;p&gt;The current suite of tools for pairing include things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google Hangouts / Google Meet - slow, craptastic user interface&lt;/li&gt;
  &lt;li&gt;Skype - don't get me started; Microsoft gutted Skype and left it for dead in a alley&lt;/li&gt;
  &lt;li&gt;Slack - only available on paid slack; slow, uses a lot of CPU&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While there have been good tools for pairing in the past, notably ScreenHero and Apple Remote Desktop, none of these tools are available today.  ScreenHero got bought by Slack and &quot;integrated&quot; while Apple Remote Desktop, well, I seem to have been the only user who remembers it.&lt;/p&gt;

&lt;p&gt;The current tool I'm using is &lt;a href=&quot;https://tuple.app/&quot;&gt;Tuple&lt;/a&gt; and it is simply &lt;strong&gt;outstanding&lt;/strong&gt;.  Here are some of the reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It just works.  For pairing to be something that you just do on an ad hoc basis, the tool needs to be utterly unobtrusive.  Tuple is brilliantly in its minimalism.&lt;/li&gt;
  &lt;li&gt;It doesn't slow everything on the machine to a crawl.&lt;/li&gt;
  &lt;li&gt;The audio quality is fantastic.&lt;/li&gt;
  &lt;li&gt;It is fast.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the disadvantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is expensive; the model is a monthly fee.&lt;/li&gt;
  &lt;li&gt;It is OSX only.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/pair_programming/2019/11/22/if-you-pair-program-buy-tuple-now.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/pair_programming/2019/11/22/if-you-pair-program-buy-tuple-now.html</guid>
        
        <category>pair_programming</category>
        
        <category>software_engineering</category>
        
        
        <category>pair_programming</category>
        
      </item>
    
      <item>
        <title>Installing mysql2 Gem on OSX when Headers Can't Be Found</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9140.jpeg&quot; alt=&quot;IMG_9140.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're not a Rails user, on OSX, then just nope the heck out of reading this post.  This is some serious nerdery here.&lt;/p&gt;

&lt;p&gt;One of the single most frustrating things about the Rails ecosystem is when you can't get a bundle install operation to finish.  The bundle install, of course, is the process of getting the software tools, &quot;gems&quot;, identified in Gemfile to install.  When you can't get bundle install to finish, you are effectively entirely blocked from continuing with a project.  A friend hit a serious problem recently with bundle install and the mysql2 gem.  I gave some online help via chat and while they solved it without me, I volunteered to write it down so there's a decent explanation / write up.&lt;/p&gt;

&lt;p&gt;Here's the error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ld: library not found for -lssl
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My first suggestion was to try a &quot;brew install mariadb&quot; (mariadb is a fully compatible, &lt;strong&gt;better&lt;/strong&gt; version of MySQL, written by the creator of MySQL).  It turned out that mariadb was already installed.&lt;/p&gt;

&lt;p&gt;So this led me to this &lt;em&gt;blink&lt;/em&gt; and then I asked for &quot;paste me the whole disgustingly long error message on bundle install&quot;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing mysql2 0.5.2 with native extensions
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
/Users/foo/.rbenv/versions/2.6.3/bin/ruby -I
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/2.6.0 -r
./siteconf20191120-7300-1a2t7xt.rb extconf.rb
checking for rb_absint_size()... yes
checking for rb_absint_singlebit_p()... yes
checking for rb_wait_for_single_fd()... yes
-----
Using mysql_config at /usr/local/bin/mysql_config
-----
checking for mysql.h... yes
checking for errmsg.h... yes
checking for SSL_MODE_DISABLED in mysql.h... no
checking for MYSQL_OPT_SSL_ENFORCE in mysql.h... yes
checking for MYSQL.net.vio in mysql.h... no
checking for MYSQL.net.pvio in mysql.h... yes
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes
checking for my_bool in mysql.h... yes
-----
Don't know how to set rpath on your system, if MySQL libraries are not in path
mysql2 may not load
-----
-----
Setting libpath to /usr/local/Cellar/mariadb/10.4.10_1/lib
-----
creating Makefile

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
make &quot;DESTDIR=&quot; clean

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
make &quot;DESTDIR=&quot;
compiling client.c
client.c:140:1: warning: control may reach end of non-void function
[-Wreturn-type]
}
^
1 warning generated.
compiling infile.c
compiling mysql2_ext.c
compiling result.c
compiling statement.c
linking shared-object mysql2/mysql2.bundle
ld: library not found for -lssl
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1

make failed, exit code 2

Gem files will remain installed in
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2 for
inspection.
Results logged to
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/extensions/x86_64-darwin-18/2.6.0/mysql2-0.5.2/gem_make.out

An error occurred while installing mysql2 (0.5.2), and Bundler cannot
continue.
Make sure that gem install mysql2 -v '0.5.2' --source 'https://rubygems.org/'
succeeds before bundling.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My comment was pretty that it simply can't find the libraries, almost certainly the header files for openssl.  This is actually a common install problem for gems.  Happily my friend found the &lt;a href=&quot;https://github.com/brianmario/mysql2/issues/795&quot;&gt;answer&lt;/a&gt; (and without me which is awesome).  Here is what turned out to be needed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This the kind of thing that differs across people's systems / environments so I get why it is an issue despite the mysql2 gem being what – a decade plus old?  But I wish that the build ecosystem for Rails better allowed for things like this because, well, when you can't bundle install, you effectively can't rails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: And I get the open source ethos that if I want this, I should fix it myself.  I'm also aware of how deep a rabbit hole that would be and I don't have the mental energy to even contemplate solving this. So, yeah, I'm going to whine but I'm also massively thankful for the mysql2 gem so thank you brianmario.  Appreciated.  At least I hopefully gave back a bit by explaining this well.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/21/installing-mysql2-gem-on-osx-when-headers-can-t-be-found.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/21/installing-mysql2-gem-on-osx-when-headers-can-t-be-found.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>mysql</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>dockerbash - Making docker exec -it Suck Less</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9169.jpeg&quot; alt=&quot;IMG_9169.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Docker is a container technology that allows you to package up a series of different technologies under (generally) a *nix style operating system.  As things deployed with Docker are generally deployed under a *nix style operating system, it isn't uncommon to want to open a shell into your Docker environment for debugging purposes.&lt;/p&gt;

&lt;p&gt;You can easily do this with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it CONTAINER_HASH /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The CONTAINER_HASH is a value like 311ab7fe0ea1.  This value is fetched from a docker ps command like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep police
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The term 'police' is just some bit of text that identifies the docker process that is running.&lt;/p&gt;

&lt;p&gt;Here's an example of this output:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ docker ps | grep police
311ab7fe0ea1        img-captain-police-crawl:51         &quot;/bin/sh -c 'puma -C…&quot;   4 hours ago         Up 4 hours
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What I'd really like is a command like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dockerbash police
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and have that do the underlying work to generate the docker exec statement.  A little bit of bash scripting gave me this script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You need to specify the name of the container you want to get into like:&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dockerbash police&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; /bin/bash
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save the lines above as dockerbash and make it executable.  After that you can much more easily get a shell prompt inside your docker containers.&lt;/p&gt;

&lt;h2 id=&quot;bash-references&quot;&gt;Bash References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.andreafortuna.org/2018/07/02/bash-scripting-my-own-cheatsheet/&quot;&gt;Bash Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4651437/how-do-i-set-a-variable-to-the-output-of-a-command-in-bash&quot;&gt;How to Set a Variable in Bash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxhint.com/20_awk_examples/#a16&quot;&gt;How to Use Awk to Get the First Variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-does-dockerbash-live&quot;&gt;Where Does dockerbash Live?&lt;/h2&gt;

&lt;p&gt;You cannot store dockerbash in the project that you are deploying via Docker because it needs to exist &lt;strong&gt;on the&lt;/strong&gt; machine that runs your Docker containers, not within your Docker container.  My recommendation is that you have your DevOps tooling such as Ansible install this script.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html</guid>
        
        <category>docker</category>
        
        <category>bash</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>So You Have A Chance to Go Freelance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9359.jpeg&quot; alt=&quot;IMG_9359.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This blog post takes addresses a common problem for technical workers - you have been offered a full time freelance gig and you don't know whether or not to take it based on its value versus your current compensation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Traditionally I have done a crap ass job at making these kind of assessments.  I'm writing this post to hopefully do a better / more &quot;adult&quot; take at this.&lt;/p&gt;

&lt;h1 id=&quot;what-is-your-current-job-worth&quot;&gt;What is Your Current Job Worth?&lt;/h1&gt;

&lt;p&gt;Your current job's worth can be reduced to an equation as follows:&lt;/p&gt;

&lt;p&gt;Salary + Bonus + Vacation + Health Insurance = Total Package&lt;/p&gt;

&lt;p&gt;The real problem here is that valuing health care is effectively a shite show. Health care packages are never directly comparable and when you leave an employer, to some extent, you get what you get.&lt;/p&gt;

&lt;p&gt;This means that the equation become:&lt;/p&gt;

&lt;p&gt;Salary + Bonus + Vacation = Total Package&lt;/p&gt;

&lt;p&gt;Let's assume that you have this type of package:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Salary: $103,000.00&lt;/li&gt;
  &lt;li&gt;Bonus: $25.00 (yep; just laugh with me; some employers don't get it)&lt;/li&gt;
  &lt;li&gt;Total Compensation: $103,025.00&lt;/li&gt;
  &lt;li&gt;Vacation: 2 Weeks&lt;/li&gt;
  &lt;li&gt;Weeks Worked per Year: 50&lt;/li&gt;
  &lt;li&gt;Gross Salary Per Week: $2,060.50 (select 103025.00 / 50; 'coz sql is my favorite calculator)&lt;/li&gt;
  &lt;li&gt;Monthly Salary: &lt;strong&gt;$8,242.00&lt;/strong&gt; (select 2060.50 * 4; )&lt;/li&gt;
  &lt;li&gt;Hourly Salary: $51.5125 (select 8242.00 / 160;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let's say that you were offered a compensation package of $10,000 per month -or- $120,000 on an annualized basis.  The question then becomes is the difference between $10,000 per month and $8,242.00 per month sufficient to cover health care?  And of course there are lots and lots of other things but let's talk about health care to start.&lt;/p&gt;

&lt;h1 id=&quot;fully-loaded-cost---an-alternate-way-to-calculate-your-jobs-worth&quot;&gt;Fully Loaded Cost - An Alternate Way to Calculate Your Job's Worth&lt;/h1&gt;

&lt;p&gt;The example above really only deals with salary plus vacation but a full time job has a lot of other &quot;compensation&quot; things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;computer hardware&lt;/li&gt;
  &lt;li&gt;office space&lt;/li&gt;
  &lt;li&gt;sick days&lt;/li&gt;
  &lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The aggregate value of these non cash compensation items is what I have always referred to as the &quot;fully loaded cost&quot; of employing an engineer and my back of the envelope rule is that you need to allocate between 1.25 x salary to 1.5 x salary so that makes the original compensation package worth:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.25 * 103,000 = 128,750.00; hourly salary equivalent: $77.25&lt;/li&gt;
  &lt;li&gt;1.5 * 103,000 = 154,500.0; hourly salary equivalent: $64.375&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;hourly-rate---another-way-to-look-at-your-offer&quot;&gt;Hourly Rate - Another Way to Look at Your Offer&lt;/h1&gt;

&lt;p&gt;So the offer that we are looking at is for &quot;full time&quot; work at a rate of $10,000 per month or $120,000 per year.  Let's assume that you are working 50 weeks out of the year and you are working 40 hours per week.  That means that we are talking about 2,000 hours per year.  So the hourly rate then becomes:&lt;/p&gt;

&lt;p&gt;120,000 / 2000 = $60 / hour&lt;/p&gt;

&lt;p&gt;As a consultant, I would argue that rate is low.  My last consulting gig went out the door at $125 / hour.  Now, on the other hand, &lt;em&gt;bird in the hand versus bird in the bush&lt;/em&gt;.  This is for a long term project and guaranteed long term work really, really &lt;strong&gt;counts&lt;/strong&gt;.  I suspect that most consultants never come close to making $120,000 / year.&lt;/p&gt;

&lt;p&gt;The comparable hourly rates are listed above.&lt;/p&gt;

&lt;h1 id=&quot;health-care-overview&quot;&gt;Health Care Overview&lt;/h1&gt;

&lt;p&gt;The bulk of this next bit of this came from a good friend, Lisa Meece, the Chairwoman of the local &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Star Base Indy&lt;/a&gt; science fiction convention.  Lisa has been a freelance worker for over a decade now and actually understands health care in a way I don't.  Oh and if you're in the Indianapolis area, consider going to StarBase Indy this coming Thanksgiving:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I can guarantee it is a more fun time than your family weekend&lt;/li&gt;
  &lt;li&gt;There are Klingons to spare including the ever popular &lt;strong&gt;singing Klingon&lt;/strong&gt; aka &quot;&lt;a href=&quot;https://www.youtube.com/channel/UCkuSNmzNppTGu8Inx6e8ufQ&quot;&gt;The Klingon Pop Warrior&lt;/a&gt;&quot;; you haven't felt emotion until you've heard &lt;a href=&quot;https://www.youtube.com/watch?v=VHS9mgJfqSA&quot;&gt;Pat Benatar&lt;/a&gt; in the original Klingon&lt;/li&gt;
  &lt;li&gt;It is a damn good time&lt;/li&gt;
  &lt;li&gt;With my wife Shelley, I'm running Engineering for the con and I'd love to see you there&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;healthcaregov&quot;&gt;Healthcare.gov&lt;/h2&gt;

&lt;p&gt;So here goes for some stuff on health care that I didn't write:&lt;/p&gt;

&lt;p&gt;For insurance, your best bet is the marketplace at &lt;a href=&quot;http://www.healthcare.gov&quot;&gt;www.healthcare.gov&lt;/a&gt;. (when you leave your current job you'll also have an option for COBRA for the first 18 months - the clock runs out at that point for you as an employee). Your HR department should be able to tell you what that will cost you - but even with the concerted efforts being made to kill ACA it's probably still your most economical option for coverage.&lt;/p&gt;

&lt;p&gt;Leaving your current job (and therefore your current coverage) is what's called a &quot;qualifying event&quot; for new coverage. I believe that means you have 30 days from that time to elect coverage under the marketplace. If you wait longer than that you will need to wait until open enrollment, at which point coverage won't start until January, and you don't want that. (You've got 90 days to enroll in COBRA).&lt;/p&gt;

&lt;p&gt;The sucky thing is that the plans available now are not necessarily the plans that will be available for 2020, so you'll have to elect now and then elect again in October for next year.&lt;/p&gt;

&lt;p&gt;You'll want to pay attention to the covered physicians under each plan. This is something you should be able to tell by going to the insurer's website and looking up any physicians you want to be able to keep. That may be enough to make the decision around which plan (or at least which company) to select. Other factors are the premium / deductible / copays.&lt;/p&gt;

&lt;p&gt;And that was her take on health care.&lt;/p&gt;

&lt;h2 id=&quot;cobra&quot;&gt;Cobra&lt;/h2&gt;

&lt;p&gt;When I asked my current employer for Cobra numbers so I had something to go by, here's what they said:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Family Medical $1147.54&lt;/li&gt;
  &lt;li&gt;Family Dental $116.32&lt;/li&gt;
  &lt;li&gt;Family Vision $25.63&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes the monthly insurance premium: $1,289.49&lt;/p&gt;

&lt;h1 id=&quot;tax-implications&quot;&gt;Tax Implications&lt;/h1&gt;

&lt;p&gt;Clearly some portion of personal expenses could be written off if I was a consultant.  Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Computer&lt;/li&gt;
  &lt;li&gt;Home office&lt;/li&gt;
  &lt;li&gt;Internet (partial)&lt;/li&gt;
  &lt;li&gt;Cell phone (likely all)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks again to &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;Lisa Meece&lt;/a&gt; for contributing also to this bit.&lt;/p&gt;

&lt;h1 id=&quot;money-and-the-big-question---will-you-be-happier&quot;&gt;Money and The Big Question - Will You Be Happier?&lt;/h1&gt;

&lt;p&gt;So with the offer described above the previous monthly gross was: 8242.00 with insurance.  The new offer is $10,000 but you have to subtract $1,289.49 to arrive at: $8,710.51.  So technically there is a $500 bump in salary monthly but that is likely negligible given the loss of benefits.&lt;/p&gt;

&lt;p&gt;So if the numbers are roughly the same then, to me, the big question is would you actually be happier being freelance?  Or to paraphrase Shakespeare, &quot;&lt;em&gt;To freelance or not to freelance; that is the question&lt;/em&gt;&quot;.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/19/so-you-have-a-chance-to-go-freelance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/19/so-you-have-a-chance-to-go-freelance.html</guid>
        
        <category>freelance</category>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Do I Buy My Wife Flowers Tonight or Not</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9420a.jpeg&quot; alt=&quot;IMG_9420a.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of software developers, I can be pretty forgetful at times.  If you're in the industry, you know how it goes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You start working on a project and it is February&lt;/li&gt;
  &lt;li&gt;You look up and … it is May and&lt;/li&gt;
  &lt;li&gt;You don't remember all that much of your life between&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A good friend of mine refers to this as falling down a code hole (Thank you Mister Mott) and it really is a thing.  Some people's code holes are a few days long.  Other people's code holes can, in the case of a death march, last for months.&lt;/p&gt;

&lt;p&gt;A bunch of years ago, I came out of a code hole and realized that I couldn't remember when I had last bought my wife flowers (if your wife doesn't like flowers then substitute chocolates, wine, etc).  Any husband worth his salt knows what I mean – that little treat that says to the person you love that you remember their existence and they matter.  I regard that for my personal relationships, buying a woman flowers unexpectedly as akin to lubrication on a mechanical device; something that makes the underlying machine work better. Call if &quot;relationship lubrication&quot; if you will.&lt;/p&gt;

&lt;p&gt;After realizing this, I thought about how I could solve it – in a &lt;strong&gt;natural&lt;/strong&gt; fashion.  I didn't want to put it on a calendar; I didn't want it to be regular so I realized that I could tie it to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Something I did regularly&lt;/li&gt;
  &lt;li&gt;Make it quasi random&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I've an old school Unix guy (originally SunOS back in '89 on a Sun 3 running Qunitus Prolog), what I did was tie this to my shell startup routine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For non computer folks, a &quot;shell&quot; is a program you use to interface directly with the machine&lt;/li&gt;
  &lt;li&gt;A startup routine is a script which runs when the shell starts up&lt;/li&gt;
  &lt;li&gt;As a heavy terminal user, I open a shell 10 or 20 times a day so, over time, I adjusted the probabilities to reflect that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I did was write a &quot;throw of the dice routine&quot; that randomly tells me whether or not to buy flowers.  This can be as complex as you want it to be. I made the example below a little complex and tied in a &quot;on her birthday&quot; routine just in case.&lt;/p&gt;

&lt;p&gt;Here's what this looks like when the throw of the dice doesn't succeed:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/flowers_no.png&quot; alt=&quot;flowers_no.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's what this looks like when it does succeed:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/flowers_yes.png&quot; alt=&quot;flowers_yes.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's the code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/Users/sjohnson/.rvm/rubies/ruby-2.3.1/bin/ruby&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'date'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flowers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wine'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'chocolates'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# raise this if you want to buy things less often; lower it for more&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;improbability_constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1968&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;improbability_constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sample&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You should buy &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;year&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Doofus - it is her birthday; buy at least: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I call this from ~/.zshrc just by calling the ruby script directly.  The same trick works in ~/.bashrc.&lt;/p&gt;

&lt;p&gt;I should admit that a lot of times when this said &quot;Buy Flowers&quot;, I actually didn't – life can be messy and complex and I never intended it directly drive my behavior. What it did do, however, was make me much more aware of the need for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I haven't needed this now for a lot of years so below is a quick reproduction designed to select between flowers, wine, chocolates and a card.  Once I ran it for enough years, I internalized this type of activity as a habit.  And then I moved laptops one year and realized &quot;Heh.  I changed!&quot;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I told my wife about this a few weeks ago and she laughed.  Oh gosh did she laugh …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: While my personal relationship involves a wife and husband, this tool can work regardless of the gender or configuration of your relationship.&lt;/p&gt;

</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html</guid>
        
        <category>relationships</category>
        
        
        <category>relationships</category>
        
      </item>
    
      <item>
        <title>I'm Copying You Since You're So Effective</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9068.jpeg&quot; alt=&quot;IMG_9068.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A close friend recently said to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I'm Copying You Since You're So Effective&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;with respect to how much I tend to get done and I thought I'd elaborate on this a bit since I suspect that why I'm effective isn't always apparent.  These aren't really in any order other than the order that I chose to finish them.  I suspect they are all pretty important.&lt;/p&gt;

&lt;h2 id=&quot;ten-reasons-why-i-think-im-effective&quot;&gt;Ten Reasons Why I Think I'm Effective&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Get Rid Of Anything That Pisses You Off&lt;/strong&gt;.  To the outside world, I'm a pretty chill person.  I try very, very hard to never lose my cool and there's a reason for that – I have a &lt;strong&gt;bad&lt;/strong&gt; temper.  One of the things I learned early on about myself is that getting upset &lt;strong&gt;ruins&lt;/strong&gt; my productivity.  And so what I do is when I find that something pisses me off, I get rid of it – by fixing it.  See my upcoming post on Url Soup for an example.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Time is The Only Thing You Have So Do the Math on Everything&lt;/strong&gt;.  I'm a father, a husband and a technologist and I started my first company when I was 19 – and I've pretty much been busy since I was 19.  This has always made me very, very aware of just how valuable anyone's time is.  I don't waste my time and I hate, hate, hate anything that wastes my time.  Just as an example, I used to &lt;strong&gt;loathe&lt;/strong&gt; configuring new laptops.  Setting up a new laptop, for a developer, is generally about a week long endeavor until I (or any developer I've ever watched) is really comfortable with it.  If you assume that a laptop lasts a developer 3 years and you have 30 years left in your career, that's &lt;strong&gt;10 weeks&lt;/strong&gt; of your life.  Once I did that math then I realized that my figuring out how to configure a laptop quickly and easily was seriously worthwhile and I did (and then I open sourced an &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;example&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Find People Smarter than You – And Copy Them&lt;/strong&gt;.  I'd love to tell you that it was my idea for how to configure a laptop automatically but it wasn't.  I stole this, shamelessly, from &lt;a href=&quot;https://twitter.com/geerlingguy&quot;&gt;Jeff Geerling&lt;/a&gt;; but I did (and do) &lt;a href=&quot;https://fuzzyblog.io/blog/mac/2017/07/31/configuring-your-mac-with-ansible-take-2.html&quot;&gt;credit him&lt;/a&gt;.  One thing I learned early on is that when you don't know what you are doing, finding people smarter than you in an area and copying / learning from them is wise.  I did this with Jim Kearny when I bought my first cell phone, I did this with Wolfram Arnold when I needed to learn TDD, I did this with Matt Mullenweg when I needed to learn logical isolation and SAAS apps and so on.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Messy Beats Perfect Every Damn Time&lt;/strong&gt;.  I write a lot of code and I'll confess something – my code is messy.  I fail at coding in all kinds of ways; my Cyclomatic complexity is too high, I use double quoted strings when single quoted are more efficient, I have too much conditional logic and so on.  And, in my opinion, that's ok because code is organic and it gets better over time – if it needs to get better.  A lot of code doesn't need to get better because most projects, even mine, simply won't succeed.  And if it isn't going to succeed then why make it perfect?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Be a Boy Scout&lt;/strong&gt;.  I doubt it will surprise people that not only was a I a Boy Scout but I was actually an Eagle Scout (and then I discovered girls and, well …).  One of the best things that scouting taught me was &quot;leave your campsite better than you found it&quot; and I've been doing that metaphorically ever since.  My perspective on coding is often pretty simple – I try to leave things better than I found them.  So, yes, I'm going to write messy code (see above) but I'm also going to make it better when I pass back through it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Minimize Discouragement&lt;/strong&gt;.  When doing anything, but particularly when you are starting something new, always try and minimize your discouragement.  There is nothing worse then putting a ton of effort into something and then, at the very end, realizing that you can't make it work.  As an example, I hooked a friend up recently with my &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;Macbook Ansible&lt;/a&gt; configuration repository that installs software on your machine and their first reaction was &quot;Well I don't need all this so I need to customize it&quot;. My response was &quot;Nope!  Find one thing it installs that you actually need and comment everything else out.  Then run it and see if it works at all&quot;.  It doesn't matter what you do with computers, making one thing work is always easier than N things.  This approach gives you a small win which you can then use to encourage yourself to get another win.  I got into the habit of this when I became a remote worker and I was always alone.  When you are always alone, you need to get in the habit of getting yourself wins and managing your own encouragement because there aren't co workers around to help with this.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do it the Same Way Personally and Professionally&lt;/strong&gt;.  This was a very, very hard one for me to master.  What I've found is that if I do something one way professionally then, well, you do it the same way personally.  A good example of that are software development practices with respect to git.  My last boss was an absolute perfectionist regarding branch driven development (you always develop in a branch; branches get merged to develop and then develop gets merged to master which then gets deployed).  And I've taken that model to heart and now I use it for all my side projects – and I've never been happier.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make Anything You Do Regularly Easier.&lt;/strong&gt;  I am a huge believer that if you do anything regularly (and I define regularly as 3 times or more in a short span of time) then you figure out how to make it easier – and you do that.  When you don't make things easier, you either waste time or you end up getting pissed off (see #1 above for how that affects me).  When you work with computers, most things can be made easier, even something as relationally complex as &quot;&lt;a href=&quot;https://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html&quot;&gt;Do I Buy My Wife Flowers This Week?&lt;/a&gt;&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tools Matter; Learn Them Well&lt;/strong&gt;.  I grew up in a hardware store and my favorite department was the tool aisle.  I grew to know the differences between an Estwing hammer and a True Value hammer and why an SK set of sockets was better than Master Mechanic.  When I moved over to computer work, I took that same love of tools with me.I've now been using the same editor since 2006; the same language since 2006.  I honestly don't think it really matters what tools you use but it does matter that you learn them well.  Steven Jobs used to call computes a &lt;a href=&quot;https://www.brainpickings.org/2011/12/21/steve-jobs-bicycle-for-the-mind-1990/&quot;&gt;bicycle for the mind&lt;/a&gt;.  Well if you're a software person, learning your tools well gives you a motorcycle for the brain.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Write It Down If You'll Ever Need It Again&lt;/strong&gt;.  If you've watched my &lt;a href=&quot;https://fuzzyblog.io/blog/&quot;&gt;voluminous output&lt;/a&gt;, you've started to realize that I'll write about anything.  And the reason for that is that writing things down helps &lt;strong&gt;me&lt;/strong&gt;.  I'm an IT professional that deals with large scale, complex systems.  When I learn something, invariably, I'm going to need to do it again.  If I take the time to write it down then not only have I documented it at least fairly well but I've also taken the time to really learn it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If I have a favorite one of all of these, it is the last one, write it down.  That has likely been the single most profound change in making me effective.  And I learned that from &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt;; Thanks Dave.&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/18/i-m-copying-you-since-you-re-so-effective.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/18/i-m-copying-you-since-you-re-so-effective.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Adding Decimal Types to Rails Migrations</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9619.jpeg&quot; alt=&quot;IMG_9619.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like so many other things this falls into the category of &quot;I'll do it 100 more times before I die and I can never remember it so may as well blog it&quot;.  A migration adds a column to a table in a database managed by Rails.  In this case I had a table which needed to manage multiple types of data all front ended by an amount method that dynamically figures out why field to fetch back the data from.  This gave me a column structure like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;int_val (for integers)&lt;/li&gt;
  &lt;li&gt;float_val (for floats like a measurement)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I needed to add money as a value to this table.  Now, yes, I could simply store money in the float_val field but that's a bad practice to start doing because, well, rounding.  Even if it really doesn't matter in the app, it is a bad practice to train yourself on.&lt;/p&gt;

&lt;p&gt;From having done this in the past, I know I need a decimal of the format (something, 2).  This is referred to as the 'scale' and the 'precision' (the number of digits to the right of the decimal place).  So if we have decimal(8,2), that means you can store:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;123,456.78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So your maximum value would be 999,999.99 (just under a million dollars; now say that in a &lt;a href=&quot;https://www.youtube.com/watch?v=l91ISfcuzDw&quot;&gt;Dr. Evil intonation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now writing a migration with precision and scale isn't hard but I always want to do this to allow for placing the column in the right place (it makes my tables 'near' and, yes, I'm just that nerdy).  Here's my migration:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g migration add_decimal_to_metrics
      invoke  active_record
      create    db/migrate/20191118100314_add_decimal_to_metrics.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddDecimalToMetrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:decimal_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:decimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;precision: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scale: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;after: :float_val&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5452653/datatype-decimal6-2&quot;&gt;Stack Overflow on Scale and Precision&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mitrev.net/rails/2015/04/19/rails-migration-generator-specifying-precision-and-scale/&quot;&gt;Mitrev on Migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/18/adding-decimal-types-to-rails-migrations.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/18/adding-decimal-types-to-rails-migrations.html</guid>
        
        <category>rails</category>
        
        <category>mysql</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Adding an Includes Clause to ActiveRecord and Watching the Joy Flow</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9986.jpeg&quot; alt=&quot;IMG_9986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've written in the past about watching your SQL queries stream by in the Rails console and how seeing, well, stupidity / things that look wrong can help guide you to things you need to find.  Here's an example I witnessed recently:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habit = Habit.find(2)
habit.total_this_month

Metric Load (2.5ms) SELECT metrics.date_created_at, metrics.int_val, metrics.float_val, metrics.metric_type_id FROM metrics WHERE metrics.habit_id = 2 AND (date_created_at &amp;gt;= '2019-11-01') AND (date_created_at &amp;lt;= '2019-11-30')
MetricType Load (3.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (38.1ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (17.0ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (40.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (2.7ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (1.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (3.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (5.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (252.9ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (11.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (7.4ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (1.6ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;According to the bug tracker where I logged, this it was logged 5 days ago (so on November 12).  And if you could the number of metric_type queries above, the total is 12.  This is date ordered stuff so it is pretty obvious that what's happening is that metric_type query is getting executed once per day.&lt;/p&gt;

&lt;p&gt;Here's the definition of the total_this_month method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_this_month&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_date_of_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last_date_of_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
  &lt;span class=&quot;n&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's the total_from_date_to_date method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOTAL_FIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;gt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;lt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This type of issue is referred to as an &lt;a href=&quot;https://semaphoreci.com/blog/2017/08/09/faster-rails-eliminating-n-plus-one-queries.html&quot;&gt;N+1 query problem&lt;/a&gt; where each query leads to another query.  The solution here is to use the :includes option on the query to bring in the metric_types table as part of this.&lt;/p&gt;

&lt;p&gt;And here's the fix&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOTAL_FIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;gt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;lt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:metric_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just adding a simple .includes(:metric_type) clause to the where statement fixes this and makes that data available to the underlying .compact.sum operation.  And, yes, to fix a performance problem this easily really does make the joy flow for a developer.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/18/adding-an-includes-clause-to-activerecord-and-watching-the-joy-flow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/18/adding-an-includes-clause-to-activerecord-and-watching-the-joy-flow.html</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        <category>performance</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>The Ruby Safe Navigation Operator</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:39:49.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So I recently moved to running my Ruby code thru &lt;a href=&quot;https://github.com/rubocop-hq/rubocop&quot;&gt;RuboCop&lt;/a&gt; prior to each submission courtesy of the magic that is &lt;a href=&quot;https://evilmartians.com/chronicles/lefthook-knock-your-teams-code-back-into-shape&quot;&gt;Lefthook&lt;/a&gt;.  I don't always fix everything that RuboCop detects but I tend to read thru the reports.  I'm using the &quot;Boy Scout&quot; approach to campsites, i.e. leave your campsite (code base) better than you found it, to at least make some of the changes each time.&lt;/p&gt;

&lt;p&gt;Note: To avoid the massive amount of errors that Rubocop detects via lefthook, I actually have the rubocop options in lefthook.yml commented out:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#     rubocop:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       tags: backend style&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       glob: &quot;*.rb&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       exclude: &quot;application.rb|routes.rb&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       run: bundle exec rubocop --force-exclusion {all_files}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then I run the files individually using:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rubocop -c .rubocop.yaml app/controllers/streaks_controller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here was an interesting error that it just detected:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/controllers/streaks_controller.rb:43:7: C: Style/SafeNavigation: Use safe navigation (&amp;amp;.) instead of checking if an object exists before calling the method.
      s.activate if s
      ^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So what we have here is an ActiveRecord operation and then an if clause:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Streak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;streak_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Safe Navigation operator, &amp;amp;, is designed to be a more concise approach to something like the try operator in that it avoids errors when a method is called on nil:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As its name reflects, the safe navigation operator allows us to safely call a method on a object that can be nil, in the same way as try! does in ActiveSupport. In that regard, if the object is not nil, it sends the method to the object, returning nil otherwise. &lt;a href=&quot;https://www.competa.com/blog/ruby-safe-navigation-operator-methods/&quot;&gt;Competa&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using the safe navigation operator, the above code snippet can be written as:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Streak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;streak_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is one of those cases where I like the clarity of my original approach but the safe navigation operator does shorten up a coding paradigm that is almost everywhere in Ruby code.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theguild.nl/5-reasons-not-to-use-safe-navigation-operators/&quot;&gt;Reasons to Not Use Safe Navigation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/&quot;&gt;More on the Safe Navigation Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 16 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/11/16/the-ruby-safe-navigation-operator.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/11/16/the-ruby-safe-navigation-operator.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Local Development Data for Rails from Your Production Site using Heroku</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9986.jpeg&quot; alt=&quot;IMG_9986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the worst aspects of doing Rails development, although this is not limited to Rails in any way, is getting data to use for development work once your site starts getting users.  Yes I know that you should always have full test coverage and that local data shouldn't be necessary – &lt;strong&gt;but it absolutely is&lt;/strong&gt;.  There is always a class of errors that you simply can't diagnose with a set of data with which to work.&lt;/p&gt;

&lt;p&gt;The happy truth though is that you actually can pretty easily move data from production to development at will (at least as long as the database isn't too massive; when your site gets large it is a different matter).&lt;/p&gt;

&lt;h2 id=&quot;the-approach&quot;&gt;The Approach&lt;/h2&gt;

&lt;p&gt;The approach here is actually pretty simple.  My examples all center around using MySQL as a data store but any database that has solid import / export will work.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To start you should backup your local data just in case you need it back afterwards.&lt;/li&gt;
  &lt;li&gt;You then connect to your remote datastore and use mysqldump to export your data to a local data dump.&lt;/li&gt;
  &lt;li&gt;You then import this local data dump.&lt;/li&gt;
  &lt;li&gt;You debug your site using a much richer set of data.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;making-this-easy-with-a-rake-task&quot;&gt;Making this Easy with a Rake Task&lt;/h2&gt;

&lt;p&gt;Here's a rake task that I wrote that gives you a lot of tasks for dealing with your local / remote databases.  Drop this into lib/tasks and you can see the tasks it offers with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake -T | grep database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:database&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# Generates a mysql load command&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development:mysql_load_data_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_load_data_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#username, password, database &lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' &amp;lt; lib/tasks/data/db_dumps/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Add the load file into the below command &quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  once you copy and paste it back into the terminal&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# generates a mysql command to get into the database&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development_mysql_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# generates a dump data command that puts the data into lib/tasks/data/db_dumps/&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development:mysql_dump_data --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_dump_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt; lib/tasks/data/db_dumps/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.sql&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysqldump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:production&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_dump_data --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_dump_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;About to dump data in 10 seconds (or press CTRL+C) ....&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt; lib/tasks/data/db_dumps/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.sql&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysqldump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
      
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_load_data_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_load_data_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt; '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -h &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# this is how heroku used to work a few months ago, now, not so much...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_heroku_database_params_classic&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capture3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^DB_/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_heroku_database_params&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capture3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^DATABASE_URL:/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# build up a hash of db_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# the database itself is stored as the path in the url but the / needs to be stripped&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_local_database_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;database_configuration&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;database&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/:\s+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dumping-from-production-and-loading-to-development&quot;&gt;Dumping from Production and Loading to Development&lt;/h2&gt;

&lt;p&gt;Here's how to dump the data:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake database:production:mysql_dump_data --trace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's how to load this in:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake database:development:mysql_load_data_command --trace
** Invoke database:development:mysql_load_data_command (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute database:development:mysql_load_data_command
Add the load file into the below command
  once you copy and paste it back into the terminal
mysql -uroot -pADFD!@# change_me_now_development  &amp;lt; lib/tasks/data/db_dumps/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(note - I changed the password above).  And then you need to actually run this command with the correct database file that came from the dump:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uroot -pADFD!@# change_me_now_development  &amp;lt; lib/tasks/data/db_dumps/d3rbmdakuvgkjfkv_2019-11-16.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The database name you get from Heroku is very much a randomized string so don't expect it to be the normal Rails like &quot;_production&quot; style database name.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/16/getting-local-development-data-for-rails-from-your-production-site-using-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/16/getting-local-development-data-for-rails-from-your-production-site-using-heroku.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Updating to the Latest Ansible on Ubuntu</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-19 17:40:01.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;One of the tricky bits about Ansible is that new features in the &quot;language&quot; always require the latest version of Ansible itself.  And, while logical, this can easily bite you.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;s&quot;&gt;TASK [deploy_hate-language-modeling_systemd_start&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;just force systemd to re-execute itself (2.8 and above)] ***&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fatal&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aws_master2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;FAILED! =&amp;gt; {&quot;changed&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &quot;msg&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Unsupported&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(systemd)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;module:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;daemon_reexec&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Supported&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;include:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;daemon_reload,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;enabled,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;masked,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;no_block,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;state,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;user&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;    	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to retry, use&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--limit @/home/ubuntu/ansible/playbook_deploy_hate-language-modeling_master.retry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What that translates to is that Ansible itself doesn't know how to use the parameter &lt;strong&gt;daemon_reexec&lt;/strong&gt;.  And when you've been using an Ansible feature successfully and then it doesn't work on the server, that usually is a rock solid signal &quot;update ansible&quot;.&lt;/p&gt;

&lt;p&gt;Here's how to do this on Ubuntu:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt update
sudo apt install software-properties-common
sudo apt-add-repository --yes --update ppa:ansible/ansible
sudo apt install ansible
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 15 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2019/11/15/updating-to-the-latest-ansible-on-ubuntu.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2019/11/15/updating-to-the-latest-ansible-on-ubuntu.html</guid>
        
        <category>ansible</category>
        
        <category>ubuntu</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>A Redis Hello World in Ruby and Python</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9955.jpeg&quot; alt=&quot;IMG_9955.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A colleague just IM'd me and asked if I have a Hello World for redis and my thought was &quot;No but I can damn well blog one together quick as all get out&quot; so …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the word Redis means nothing to you then may I direct you to the &lt;a href=&quot;https://redis.io/topics/quickstart&quot;&gt;quick start&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;The thing to understand about Redis is that you can use it in two ways:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;As a simple key value store, a nosql database if you like.&lt;/li&gt;
  &lt;li&gt;As a data structure server.  I don't do this much but I am in absolute awe of people who have internalized the Redis data model sufficiently to do this.  The reason for bringing up this point, when I'm not going to cover it is that any developer ought to keep in mind the capabilities of their tools – and Redis is hugely capable.  And if you think that I'm full of crap with what Redis can do with you, may I direct you to &lt;a href=&quot;https://thoughtbot.com/blog/hyperloglogs-in-redis&quot;&gt;HyperLogLog&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hello-world-in-redis-using-ruby&quot;&gt;Hello World in Redis using Ruby&lt;/h2&gt;

&lt;p&gt;The canonical Hello World for redis is using it as a key value store.  Here's an example from Ruby:&lt;/p&gt;

&lt;p&gt;In Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In console:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&amp;lt;Redis client v4.1.3 for redis://127.0.0.1:6379/0&amp;gt;&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's the explanation:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We bring in the Redis gem / class.&lt;/li&gt;
  &lt;li&gt;We create a Redis object.  By default Redis runs on localhost at port 6379.  Redis has a quite solid network architecture so you can have a distributed set of servers with the data fetched back from them.&lt;/li&gt;
  &lt;li&gt;The &quot;set&quot; command takes a name and a value and sets them into the underlying data store.&lt;/li&gt;
  &lt;li&gt;The &quot;get&quot; command takes just the name and fetches back the value.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hello-world-in-redis-using-python&quot;&gt;Hello World in Redis Using Python&lt;/h2&gt;

&lt;p&gt;And here is exactly the same example in Python:&lt;/p&gt;

&lt;p&gt;In requirements.txt:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In console:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you can see that pretty much the exact same explanation applies.  Redis uses a standard set of &quot;verbs&quot; that tend to be implemented similarly across languages.  Salvatore did a brilliant job on Redis and the simplicity of the verbs speaks to that.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/redis/redis-rb&quot;&gt;redis-rb on github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pypi.org/project/redis/&quot;&gt;pypi on redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 15 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2019/11/15/a-redis-hello-world.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2019/11/15/a-redis-hello-world.html</guid>
        
        <category>redis</category>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>A Warning About Git LFS and Large Machine Learning Models and Automated Deployments</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7930.jpeg&quot; alt=&quot;IMG_7930.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Github has a maximum size of 50 mb per file under management.  And that normally works just fine – until the age of machine learning.  Machine learning models are &lt;strong&gt;big&lt;/strong&gt;, staggeringly &lt;strong&gt;big&lt;/strong&gt;.  I'm currently working on a project where the underlying model is like 830 + mb.&lt;/p&gt;

&lt;p&gt;Now when you have large files, git has a facility called &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;&quot;Git LFS&quot; (large file support)&lt;/a&gt; and they purport that it is the solution but, well, it really, really isn't.  Here's what I just ran across (platform is Ubuntu 18 and Ansible):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I have a playbook that handles git clone / git update.&lt;/li&gt;
  &lt;li&gt;When you initially install, the git clone only brings down the non lfs files.&lt;/li&gt;
  &lt;li&gt;I then remembered the lfs issue and modified the playbook to install lfs and run the per repository installation command (cd into your repo directory and then &lt;strong&gt;git lfs install&lt;/strong&gt;).&lt;/li&gt;
  &lt;li&gt;The next stage in the playbook did a git pull and my expectation was that the pull would bring in the large model.  Unfortunately it did not so I had a real wtf moment.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I then logged into the machine manually and deleted the repo and cloned it manually.  And, voila, I got the full model coming down.&lt;/p&gt;

&lt;h2 id=&quot;before-git-lfs-install&quot;&gt;Before Git LFS Install&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hcs hate-language-modeling/
16K	0hate-language-modeling/
16K	total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;after-git-lfs-install-using-manual-git-clone&quot;&gt;After Git LFS Install Using Manual Git Clone&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hcs hate-language-modeling/
836M	hate-language-modeling/
836M	total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Given the importance of automated deploys, this really makes me concerned about using git lfs moving forward.  Yes it is wonderful that I can run the per repository installation command and have it work even after the directory is installed but the git pull, after that command was run, should have brought down the entire model.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2019/11/14/a-warning-about-git-lfs-and-large-machine-learning-models.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2019/11/14/a-warning-about-git-lfs-and-large-machine-learning-models.html</guid>
        
        <category>machine_learning</category>
        
        <category>git</category>
        
        <category>git_lfs</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Making a Streamlit Machine Learning App into a SystemD Service for Deployment via Ansible</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html&quot;&gt;documented recently&lt;/a&gt;, I've become quite the fan of &lt;a href=&quot;https://streamlit.io&quot;&gt;Streamlit&lt;/a&gt; for taking Machine Learning applications written in Python and making them easily available on the web.  Streamlit is a very cool toolkit for taking a Python Machine Learning app and adding a simple UI to it and then hosting it via a built in web server.  I haven't seen anything really like in the Ruby world and I'm quite impressed by its elegance and simplicity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Before you start down the path of implementing this the way I did, see the last section titled &quot;Note: &quot; after the Jenkins section.&lt;/p&gt;

&lt;p&gt;So we have a custom internal app using Streamlit and I am, at present, the only person who can deploy it.  That's, well, stupid.  Deployment always needs to be something that anyone on the technical team should be able to do.  This became increasingly obvious to me when I had to pull over, on Monday afternoon, and deploy fixes to it – in the first snow of the season.  And, yes, I've been a consultant for a lot of my career so I'm ok with this but it still is sub optimal.&lt;/p&gt;

&lt;p&gt;Here's what a deploy using Streamlit onto an Ubuntu server looks like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SSH into the box.&lt;/li&gt;
  &lt;li&gt;Change into the right directory.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Do a ps auwwx&lt;/td&gt;
          &lt;td&gt;grep streamlit and grab the pid (process id).&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Do a kill pid.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git pull&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Source the python virtual environment with: &lt;strong&gt;source ./venv/bin/active&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Restart it with the syntax: &lt;strong&gt;nohup streamlit run dashboard.py&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of this should be able to be automated with &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;.  Well, let's make that most of it.  The flaw in the ointment is the last thing.  Apparently the only thing that Ansible can't automate is something with nohup.  Now I'm sure if I dug in enough I could either understand it find a way around it but a seemingly solid &lt;a href=&quot;https://stackoverflow.com/questions/53345184/how-can-i-run-nohup-command-in-ansible-playbook-task&quot;&gt;Stack Overflow post argues that the right approach is to use SystemD and services rather than nohup&lt;/a&gt; and that seems like a good idea actually.  Ansible can easily start and stop SystemD services so we can throw out the entire pid / kill stuff.&lt;/p&gt;

&lt;h2 id=&quot;a-shell-script-and-a-system-d-unit-file&quot;&gt;A Shell Script and a System D Unit File&lt;/h2&gt;

&lt;p&gt;I don't claim to be a SystemD advocate per se but it is now the current reigning standard so it is better to use it than fight against it (SystemD was pretty controversial within the Unix world).  The basics of SystemD are explained here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-unit_files&quot;&gt;RedHat Overview of SystemD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/&quot;&gt;Linode on SystemD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The core idea is that your program is a service which runs in the background and can be controlled thru a simple set of commands.  Our service is going to be called rundashboard, so our commands become:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sudo systemctl start rundashboard&lt;/li&gt;
  &lt;li&gt;sudo systemctl stop rundashboard&lt;/li&gt;
  &lt;li&gt;sudo systemctl status rundashboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of the output of sudo systemctl status rundashboard&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status rundashboard
● rundashboard.service - Example systemd service.
   Loaded: loaded (/etc/systemd/system/rundashboard.service; dis
   Active: active (running) since Wed 2019-11-13 17:55:37 UTC; 5
 Main PID: 10449 (bash)
    Tasks: 6 (limit: 4915)
   CGroup: /system.slice/rundashboard.service
           ├─10449 /bin/bash /usr/bin/rundashboard.sh
           └─10459 /home/ubuntu/hate-language-modeling/venv/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From an implementation perspective we need to things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shell script which starts our service&lt;/li&gt;
  &lt;li&gt;A SystemD unit file which installs our service into the underlying Unix system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm not a SystemD expert so I'm absolutely certain that there are subtleties of SystemD that I'm overlooking.&lt;/p&gt;

&lt;h3 id=&quot;the-shell-script&quot;&gt;The Shell Script&lt;/h3&gt;

&lt;p&gt;Here's the shell script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/ubuntu/hate-language-modeling
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ./venv/bin/activate
&lt;span class=&quot;nb&quot;&gt;nohup &lt;/span&gt;streamlit run dashboard.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-unit-file&quot;&gt;The SystemD Unit File&lt;/h3&gt;

&lt;p&gt;Here's the SystemD unit file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Run Streamlit Dashboard.

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;simple
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/bash /usr/bin/rundashboard.sh

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;installing-this&quot;&gt;Installing This&lt;/h3&gt;

&lt;p&gt;The shell script needs to be copied to to /usr/bin:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mv rundashboard.sh /usr/bin/rundashboard.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The unit file needs to be copied to /etc/systemd/system/ and set to 644 permissions:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp rundashboard.service /etc/systemd/system
sudo chmod 644 /etc/systemd/system/rundashboard.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;an-ansible-playbook-for-deploying-streamlit&quot;&gt;An Ansible Playbook for Deploying Streamlit&lt;/h2&gt;

&lt;p&gt;While there are lots of ways to use Ansible, I tend to follow a pretty standard approach:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;inventory file that defines the machines on which things are executing&lt;/li&gt;
  &lt;li&gt;playbook that defines the role to be run&lt;/li&gt;
  &lt;li&gt;role that lists out the tasks to be done&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;inventory-file&quot;&gt;Inventory File&lt;/h3&gt;

&lt;p&gt;Given that my specific machines have different IP addresses than yours, I've obfuscated them below.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;aws_box1 ansible_ssh_host=1.2.3.4  ansible_ssh_private_key=/Users/sjohnson/Downloads/adl_fuzzygroup.pem ansible_python_interpreter=/usr/bin/python3&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;aws_box2 ansible_ssh_host=5.6.7.8 ansible_ssh_private_key=/Users/sjohnson/Downloads/adl_fuzzygroup.pem ansible_python_interpreter=/usr/bin/python3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;playbook&quot;&gt;Playbook&lt;/h3&gt;

&lt;p&gt;Here's the playbook:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_git_clone&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_systemd_setup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_git_pull&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_systemd_start&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You'll notice that this is split into four different sections.  The reason for this is that to handle the systemd stuff, the ansible role needs to run as root (the become: true) whereas the git pull / git clone needs to run as the ubuntu user.  And, yes, I know there is an ansible git module that is supposed to work.  And, this time, as &lt;strong&gt;every other&lt;/strong&gt; time I have tried to use it, I failed; hence the work around.&lt;/p&gt;

&lt;h3 id=&quot;the-git-clone-role&quot;&gt;The Git Clone Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Do a git clone if not already checked out&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone git@github.com:adl-tech/hate-language-modeling.git&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/bin/bash&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;creates&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/hate-language-modeling&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-role-setup-role&quot;&gt;The Systemd Role Setup Role&lt;/h3&gt;

&lt;p&gt;An Ansible role is basically a YAML representation of the state of the server that you are trying to achieve.  And, in this case, we need to upload some files into certain locations so we need a files directory which stores them.  Here is the structure of the role that you need to create in your filesystem:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;roles/deploy_hate-language-modeling
├── files
│   ├── rundashboard.service
│   └── rundashboard.sh
└── tasks
    └── main.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's the role itself:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install the service&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files/rundashboard.service&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/systemd/system&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0644'&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install the shell script&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files/rundashboard.sh&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/bin/&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0755'&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Stop the service if is already running&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;systemd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rundashboard&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stopped&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-git-pull-role&quot;&gt;The Git Pull Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Do a git pull&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git pull origin dev&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/hate-language-modeling/&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-start-role&quot;&gt;The Systemd Start Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;start the service&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;systemd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rundashboard&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;started&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-all-this&quot;&gt;Running All This&lt;/h3&gt;

&lt;p&gt;If you've put all the pieces together correctly then you can run this as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ansible-playbook -i inventories/inventory.txt playbook_deploy_hate-language-modeling.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have to run my ansible-playbook with sudo due to messed up python installs on my personal MacBook.  That's a me thing / my mistake not an Ansible thing.&lt;/p&gt;

&lt;p&gt;When it runs you should see output like the following (depending on whether or not you have the delightful cowsay installed locally):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 __________________________________________________________
/ TASK [deploy_hate-language-modeling_git_clone : Do a git \
\ clone if not already checked out]                        /
 ----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _____________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : install \
\ the service]                                                /
 -------------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _____________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : install \
\ the shell script]                                           /
 -------------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 __________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : Stop \
\ the service if is already running]                       /
 ----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________________________________________________
/ TASK [deploy_hate-language-modeling_git_pull : Do a git \
\ pull]                                                   /
 ---------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 ___________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_start : start \
\ the service]                                              /
 -----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [aws_box1]
 ____________
&amp;lt; PLAY RECAP &amp;gt;
 ------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

aws_box1                   : ok=10   changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


adl/antihate/ansible on ☁️  us-west-2 took 25s
❯
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;next-step-jenkins&quot;&gt;Next Step: Jenkins&lt;/h2&gt;

&lt;p&gt;Right now our application can be deployed by any developer who has:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a command line&lt;/li&gt;
  &lt;li&gt;ansible installed locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The real goal here is actually to make it so anyone on our team can deploy this.  And that means that we need a web based user interface that can be wrapped around the Ansible scripting.  In my next bit of writing on this topic, I'll walk thru Jenkins and how to do all that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This ended up being considerably more tricky than is addressed above.  My email is fuzzygroup at gmail.com and you are welcome to reach out to me if you want clarification.  I spent a lot of time writing this up and I can't put more time into it right now but if anyone really needs this, I'll make it a priority.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/11/13/making-a-streamlit-machine-learning-app-into-a-systemd-service.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/11/13/making-a-streamlit-machine-learning-app-into-a-systemd-service.html</guid>
        
        <category>python</category>
        
        <category>streamlit</category>
        
        <category>systemd</category>
        
        <category>linux</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Implementing Safe ActiveRecord Like Queries for Rails</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01335.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;In any SQL based database, a like query is generally an SQL injection attack waiting to happen because the underlying sql statement looks like this:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%foo%'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A 30 year old thank you goes out to InfoWorld and &lt;a href=&quot;https://www.amazon.com/Joe-Celkos-SQL-Smarties-Programming/dp/0123820227&quot;&gt;Joe Celko&lt;/a&gt; who beat into his reader's brains the concept of capitalizing SQL statements for better legibility.  Thank you Joe.&lt;/p&gt;

&lt;p&gt;A seemingly solid &lt;a href=&quot;https://stackoverflow.com/questions/26094430/safe-activerecord-like-query&quot;&gt;StackOverflow post&lt;/a&gt; gives this recommendation:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please note that Model needs to be replaced with the name of your table.  Let's say that our table was named Metric and we have a normal simple_form object for Metric coming into our Rails app with a parameter named q and we have a real world Rails app with a limit clause and pagination.&lt;/p&gt;

&lt;p&gt;Here's how this would look:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@metrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@q&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at desc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@q represents the incoming query&lt;/li&gt;
  &lt;li&gt;note represents the field in our Metrics table that we want to search agains&lt;/li&gt;
  &lt;li&gt;@metrics is the collection of data returned by the search and the where clause is &quot;note.matches(&quot;%#{@q}%&quot;)&quot; to find any instances of the term @q within the note field&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 11 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/11/implementing-safe-activerecord-like-queries.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/11/implementing-safe-activerecord-like-queries.html</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Changing Button Text on Simple Form Submit Buttons</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03012.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This falls into the category of &quot;I'm old and can't remember this so must, must, must write it down&quot; because I keep losing &lt;a href=&quot;https://github.com/plataformatec/simple_form/issues/117&quot;&gt;this html page&lt;/a&gt;.  If you need to change the text on a submit button for a Rails form implemented with simple_form then use:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= f.button :submit, 'Submit This Form', class: 'btn btn-primary' %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 11 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/11/changing-button-text-on-simple-form-submit-buttons.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/11/changing-button-text-on-simple-form-submit-buttons.html</guid>
        
        <category>rails</category>
        
        <category>simple_form</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Using CapRover on AWS</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01340.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I am a Ruby on Rails guy and I &lt;strong&gt;censored&lt;/strong&gt; hate deploying Ruby stuff.  I've been deploying Rails stuff now since 2007 and, quite honestly, it sucked in 2007 and it sucks today.  The only way I've ever found Rails deployment to not suck is by using Heroku which is absolutely magical and wonderful – but expensive.  Now I've recently become hooked on Heroku and the ease of its Git push based deployment structure.  The problem is that I need more power / flexibility with respect to what I'm deploying and this has let me to the &lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover&lt;/a&gt; open source project.&lt;/p&gt;

&lt;p&gt;This project aims to give you a version of Heroku but running on your own hardware.  Given that I'm an AWS guy, I wanted to use CapRover on AWS EC2 instances.&lt;/p&gt;

&lt;h2 id=&quot;setup---1&quot;&gt;Setup - 1&lt;/h2&gt;

&lt;p&gt;I started by installing the CapRover software and here was the first problem that I hit:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
docker: Error response from daemon: driver failed programming external connectivity on endpoint quizzical_snyder (f72be52bf809d139cc012debeadb87b813e02e8fd2ada6fbba97d4503d624c43): Error starting userland proxy: listen tcp 0.0.0.0:80: bind: address already in use.
ERRO[0000] error waiting for container: context canceled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The issue here is that one of these 3 ports is already in use.  And the easiest way to figure this out is to run a succession of netstat commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 3000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That returned nothing.  So onto the next one, 443:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 443
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Again this returned nothing, onto 80:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      21331/nginx: master
tcp6       0      0 :::80                   :::*                    LISTEN      21331/nginx: master
unix  2      [ ACC ]     STREAM     LISTENING     16380    1/init               @ISCSIADM_ABSTRACT_NAMESPACE
unix  3      [ ]         STREAM     CONNECTED     22180    949/dockerd
unix  3      [ ]         STREAM     CONNECTED     38086    4225/python3
unix  2      [ ]         DGRAM                    18052    1010/systemd-logind
unix  3      [ ]         STREAM     CONNECTED     18081    954/dbus-daemon      /var/run/dbus/system_bus_socket
unix  3      [ ]         STREAM     CONNECTED     38087    4225/python3
unix  3      [ ]         STREAM     CONNECTED     18880    954/dbus-daemon
unix  3      [ ]         STREAM     CONNECTED     18080    1010/systemd-logind    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the issue here is that I already have Nginx on this box listening on port 80.  This is clearly &lt;strong&gt;my issue&lt;/strong&gt; and related to my initial work on using Capistrano to partially deploy a Ruby app.&lt;/p&gt;

&lt;p&gt;I solved this by creating a new instance and working there.&lt;/p&gt;

&lt;h2 id=&quot;setup---2&quot;&gt;Setup - 2&lt;/h2&gt;

&lt;p&gt;I then installed docker using Snap and that led me to this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
docker: Error response from daemon: error while creating mount source path '/captain': mkdir /captain: read-only file system.
ERRO[0000] error waiting for container: context canceled    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I've now used Docker for a bunch of years and this led to the typical, crap ass Docker troubleshooting approach of roaming thru Google, looking for a github issue that explains things.  I found one from a &lt;a href=&quot;https://github.com/moby/moby/issues/34427&quot;&gt;January 19, 2019&lt;/a&gt; issue which said &quot;don't use the snap version of Docker&quot;.&lt;/p&gt;

&lt;h2 id=&quot;setup---3&quot;&gt;Setup - 3&lt;/h2&gt;

&lt;p&gt;I'm personally an apt-get fan and I don't even know what we have Snaps but they are the new hotness so I did try them out.  Apparently this is my bad.&lt;/p&gt;

&lt;p&gt;Ok then:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;snap remove docker  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then I reinstalled docker using &lt;a href=&quot;https://phoenixnap.com/kb/how-to-install-docker-on-ubuntu-18-04&quot;&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get remove docker docker-engine docker.io
sudo apt install docker.io
sudo systemctl start docker
sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point you need to log out and log back in and then do a:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point docker should be cleanly installed.&lt;/p&gt;

&lt;p&gt;You probably want to be able to use docker without having to use sudo, so:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo groupadd docker
usermod -a -G docker ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;setup---4&quot;&gt;Setup - 4&lt;/h2&gt;

&lt;p&gt;If you are using AWS then your next likely problem will be this error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover

&amp;gt; caprover@0.0.0 start /usr/src/app
&amp;gt; node ./bin/www

Captain Starting ...
Installing Captain Service ...

 Installation of CapRover is starting...
For troubleshooting, please see: https://caprover.com/docs/troubleshooting.html

 &amp;gt;&amp;gt;&amp;gt; Checking System Compatibility &amp;lt;&amp;lt;&amp;lt;
   Docker Version passed.
   Ubuntu detected.
   X86 CPU detected.
   Total RAM 8363 MB

Are your trying to run CapRover on a local machine or a machine without public IP?
In that case, you need to add this to your installation command:
    -e MAIN_NODE_IP_ADDRESS='127.0.0.1'

Otherwise, if you are running CapRover on a VPS with public IP:
Your firewall may have been blocking an in-use port: 3000
A simple solution on Ubuntu systems is to run &quot;ufw disable&quot; (security risk)
Or [recommended] just allowing necessary ports:
ufw allow 80,443,3000,996,7946,4789,2377/tcp; ufw allow 7946,4789,2377/udp;

See docs for more details on how to fix firewall issues

Finally, if you are an advanced user, and you want to bypass this check (NOT RECOMMENDED),
you can append the docker command with an addition flag: -e BY_PASS_PROXY_CHECK='TRUE'

Installation failed.
Error: Port timed out: 3000
    at Timeout._onTimeout (/usr/src/app/built/utils/CaptainInstaller.js:136:20)
    at ontimeout (timers.js:436:11)
    at tryOnTimeout (timers.js:300:5)
    at listOnTimeout (timers.js:263:5)
    at Timer.processTimers (timers.js:223:10)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;setup---5&quot;&gt;Setup - 5&lt;/h2&gt;

&lt;p&gt;And this needs to be solved by adding to your AWS security group, a hole for port 3000.  Do this with the normal AWS user interface for security groups.  You should future proof yourself by allowing for by ipv4 and ipv6 addresses.&lt;/p&gt;

&lt;p&gt;Once this is done then you can run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And have it actually get CapRover up and running.  And, yes, I actually did a happy dance when this worked.  I might have been holding hands with the cat while I did this.  The cat was not amused.&lt;/p&gt;

&lt;h2 id=&quot;setup---6&quot;&gt;Setup - 6&lt;/h2&gt;

&lt;p&gt;At this point you need to install the local CapRover tooling to setup the server component.  So, on your own machine, do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g caprover    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caprover serversetup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which walks you thru this process:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;------------
CapRover CLI has recently been refactored. Please report potential bugs here: https://github.com/caprover/caprover-cli/issues
------------

Setup CapRover machine on your server...

? have you already started CapRover container on your server? Yes
? IP address of your server: 18.216.143.180
? CapRover server root domain: cartazzi.com
? new CapRover password (min 8 characters): [hidden]
? enter new CapRover password again: [hidden]
? &quot;valid&quot; email address to get certificate and enable HTTPS: fuzzygroup@gmail.com
? CapRover machine name, with whom the login credentials are stored locally: captain-01

CapRover server setup completed: it is available as captain-01 at https://captain.cartazzi.com

For more details and docs see CapRover.com  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;setup---7&quot;&gt;Setup - 7&lt;/h2&gt;

&lt;p&gt;You will need an actual domain that you can bind to your ip address.  And you need to make sure that you assign *.domain.com (or whatever) to it.&lt;/p&gt;

&lt;p&gt;Since I'm an AWS guy, I went to the Route 53 domain manager and found an unused domain of mine, cartazzi.com and bound it to the ip address above.  I then added a *.cartazzi.com wildcard dns entry onto it.&lt;/p&gt;

&lt;h2 id=&quot;setup---8&quot;&gt;Setup - 8&lt;/h2&gt;

&lt;p&gt;Once all this is done then you can to: https://captain.cartazzi.com.  This gives you a web based ui where you can create an app that you can then use a heroku style push deploy to take your code live.  And all of this is magically hooked up to Lets Encrypt for proper https.&lt;/p&gt;

&lt;h2 id=&quot;setup---9&quot;&gt;Setup - 9&lt;/h2&gt;

&lt;p&gt;The magic of all this is tied to the Captain Definition file or captain-definition which is essentially a JSON formatted Dockerfile that defines how the application is built.  And this is where my Docker knowledge failed me.  Here's as far as I got:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat captain-definition
{
  &quot;schemaVersion&quot;: 2,
  &quot;dockerfileLines&quot;: [
	&quot;FROM ubuntu:latest&quot;,
  &quot;FROM ruby:2.6.5-stretch&quot;,
  &quot;RUN rm /etc/localtime&quot;,
	&quot;RUN echo 'Etc/UTC' &amp;gt; /etc/timezone&quot;,
	&quot;RUN ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime&quot;,
	&quot;RUN apt-get update&quot;,
	&quot;RUN apt-get install -y tzdata&quot;,
	&quot;RUN apt-get install -y git&quot;,
	&quot;RUN apt-get install -y ruby&quot;,
	&quot;RUN apt-get install -y postgresql&quot;,
	&quot;RUN apt-get install -y libpq-dev&quot;,
	&quot;RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev&quot;,
	&quot;RUN apt-get install -y nodejs&quot;,
	&quot;RUN mkdir -p /usr/src/app&quot;,
	&quot;WORKDIR /usr/src/app&quot;,
	&quot;RUN gem install bundler&quot;,
	&quot;ADD ./src/Gemfile /usr/src/app/&quot;,
	&quot;ADD ./src/Gemfile.lock /usr/src/app/&quot;,
	&quot;RUN bundle install&quot;,
	&quot;COPY ./src /usr/src/app&quot;,
	&quot;ENV RACK_ENV production&quot;,
	&quot;EXPOSE 80&quot;,
	&quot;CMD [\&quot;rackup\&quot;, \&quot;config.ru\&quot;, \&quot;--host\&quot;, \&quot;0.0.0.0\&quot;, \&quot;--port\&quot;, \&quot;80\&quot;]&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once you have written your captain-definition file, you deploy it with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caprover deploy --default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, alas, this dies with errors:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ caprover deploy --default


------------
CapRover CLI has recently been refactored. Please report potential bugs here: https://github.com/caprover/caprover-cli/issues
------------


Preparing deployment to CapRover...

Ensuring authentication...
Saving tar file to: &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/cts_home_page/temporary-captain-to-deploy.tar&quot;
Using last commit on &quot;caprover&quot;: 2541bb79b9c936a4f624823ddb8a7544a7a0cc42

Deploying cts-home-page to captain-01...

Uploading [====================] 100%  (ETA 0.0s)
Upload done.

This might take several minutes. PLEASE BE PATIENT...

⠸ Building your source code...
------------------------- Mon Nov 11 2019 04:30:15 GMT+0000 (Coordinated Universal Time)
⠇ Building your source code...
[[ TRUNCATED ]]
---&amp;gt; Using cache
---&amp;gt; e876ce01f153
Step 7/23 : RUN apt-get install -y tzdata

---&amp;gt; Using cache
---&amp;gt; b2527a3e63c8
Step 8/23 : RUN apt-get install -y git

---&amp;gt; Using cache
---&amp;gt; cba1d4e5691e
Step 9/23 : RUN apt-get install -y ruby

---&amp;gt; Using cache
---&amp;gt; a5aa1c013480
Step 10/23 : RUN apt-get install -y postgresql

---&amp;gt; Using cache
---&amp;gt; 6667fca6acaa
Step 11/23 : RUN apt-get install -y libpq-dev

---&amp;gt; Using cache
---&amp;gt; b2f1f9d578da
Step 12/23 : RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev

---&amp;gt; Using cache
---&amp;gt; 698c0e61c945
Step 13/23 : RUN apt-get install -y nodejs

---&amp;gt; Using cache
---&amp;gt; a9e2578c2dab
Step 14/23 : RUN mkdir -p /usr/src/app

---&amp;gt; Using cache
---&amp;gt; 30f161f073b3
Step 15/23 : WORKDIR /usr/src/app

---&amp;gt; Using cache
---&amp;gt; 241cfd1f23d4
Step 16/23 : RUN gem install bundler

---&amp;gt; Using cache
---&amp;gt; 1c3707fa9dc1
Step 17/23 : ADD ./src/Gemfile /usr/src/app/

{&quot;message&quot;:&quot;ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory&quot;}
ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory
Build has failed!
----------------------
Deploy failed!
Error: {&quot;message&quot;:&quot;ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory&quot;}
ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory

Something bad happened. Cannot deploy cts-home-page at captain-01.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I am really, really impressed with CapRover and I intend to return to it.  While I didn't get everything working, what did work was &lt;strong&gt;impressive&lt;/strong&gt; and the fact that Rails doesn't deploy is mostly a documentation issue, not a failing, at all, of CapRover.  The issues I had with AWS are also documentation issues.&lt;/p&gt;

&lt;h2 id=&quot;take-2&quot;&gt;Take 2&lt;/h2&gt;

&lt;p&gt;I wrote the above a few hours ago, caught some sleep and then woke up and in the process of closing tabs about CapRover, I found out that you can use a standard Dockerfile by changing your captain-definition to:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;schemaVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dockerfilePath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./Dockerfile&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then here's a valid albeit simple Rails Dockerfile to run on an Ubuntu instance:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM ruby:2.6.5-ubuntu
FROM ubuntu:latest
FROM ruby:2.6.5-stretch

#RUN apk update &amp;amp;&amp;amp; apk add build-base nodejs mariadb-dev tzdata git libxml2-dev

RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y git
RUN apt-get install -y ruby
RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev
RUN apt-get install -y nodejs

RUN mkdir /app
WORKDIR /app

COPY Gemfile Gemfile.lock ./
RUN bundle install --binstubs

COPY . .

# The ENV variables simply need to be set for Rails to correctly pre-compile
# your assets. They do not need to be populated by real values.
RUN bundle exec rake RAILS_ENV=production DATABASE_URL=mysql2://user:pass@127.0.0.1/dbname SECRET_TOKEN=dummytoken assets:precompile

CMD puma -C config/puma.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let's run thru the deployment process once again, in full:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add the captain-definition file.&lt;/li&gt;
  &lt;li&gt;Add the Dockerfile&lt;/li&gt;
  &lt;li&gt;Do a git add .&lt;/li&gt;
  &lt;li&gt;Do a git commit -m &quot;updated captain stuff&quot;&lt;/li&gt;
  &lt;li&gt;Everything has to be added and committed (but not pushed) since CapRover reads from the local git repo.  If its not added and committed, CapRover won't see it (and they warn you about this but I don't feel the warning is strenuous enough).&lt;/li&gt;
  &lt;li&gt;If this is a new app for you then goto your equivalent url to http://captain.caprover.com and define a new app.&lt;/li&gt;
  &lt;li&gt;On the first time Do a caprover deploy and use the up and down arrows to select the machine and the app.&lt;/li&gt;
  &lt;li&gt;Watch the Docker stuff build.&lt;/li&gt;
  &lt;li&gt;Try to goto the final url and it is likely going to fail with a 502 gateway error.  In this case it is because your Rails app is running in development mode and thus puma is defaulting to 3000.  You can adjust this with the Container HTTP Port setting on your equivalent url to:  https://captain.cartazzi.com/#/apps/details/cts-home-page2&lt;/li&gt;
  &lt;li&gt;Try going again to the domain and it should come up.&lt;/li&gt;
  &lt;li&gt;The next time you deploy you should be use: &lt;strong&gt;caprover deploy –default&lt;/strong&gt; and have it simply remember all the deployment settings.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Here are some good links for CapRover:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/get-started.html&quot;&gt;Getting Started Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover/blob/master/captain-sample-apps/&quot;&gt;CapRover Example Apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/troubleshooting.html&quot;&gt;CapRover Troubleshooting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/app-scaling-and-cluster.html#more-than-one-registry&quot;&gt;Scaling with CapRover&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@kindlysendme/i-found-this-tool-that-helps-you-migrate-your-apps-from-heroku-to-digitalocean-in-10min-and-save-ca097a6e0d72&quot;&gt;Medium Overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/captain-definition-file.html&quot;&gt;Captain Definition File&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover-cli/issues/8&quot;&gt;Github Issue About Rails App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover/issues/324&quot;&gt;Another Github Issue About Rails App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://app.slack.com/client/TC283H40M/CC241KRK4&quot;&gt;Slack Forum about CapRover&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/caprover/2019/11/10/using-caprover-on-aws.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/caprover/2019/11/10/using-caprover-on-aws.html</guid>
        
        <category>caprover</category>
        
        <category>aws</category>
        
        
        <category>caprover</category>
        
      </item>
    
      <item>
        <title>Equity Allocation in Startups</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:33:36.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Once upon a time, I was speaking with a company founder and they mentioned that they had a VP of Engineering to whom they have given a 1/3 stake in the company.  I &lt;strong&gt;immediately&lt;/strong&gt; commented that was too much and then said &quot;I'll write this down in a blog post&quot; – and then I never did.  Last night, oddly, I woke up from a deep sleep with the desire to write this down.  And that brings us to this post.&lt;/p&gt;

&lt;p&gt;Here's what I can remember from that conversation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Company Stage&lt;/strong&gt;: Pre Funding&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Company Type&lt;/strong&gt;: Medical&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Equity Split with the VP of Engineering&lt;/strong&gt;: 1/3&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Founder Title&lt;/strong&gt;: Yes&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Did VP of Engineering Put in Cash&lt;/strong&gt;: No&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;you-need-to-understand-this&quot;&gt;You Need to Understand This&lt;/h2&gt;

&lt;p&gt;One of the basic rules of the startup world is that on Day 1, you, the founder, own &lt;strong&gt;100%&lt;/strong&gt; of something that is worth absolutely &lt;strong&gt;nothing&lt;/strong&gt;.  The goal, by the end, is that you own a much smaller percentage of something actually worth something.  As an example, owning 10% of something worth $10 million is actually much, much better.&lt;/p&gt;

&lt;h2 id=&quot;the-basic-rules-of-thumb-for-equity-allocations&quot;&gt;The Basic Rules of Thumb for Equity Allocations&lt;/h2&gt;

&lt;p&gt;Here are my rules of thumb to use for equity allocation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The more risk you take, the more you get&lt;/li&gt;
  &lt;li&gt;The earlier you join, the more you get&lt;/li&gt;
  &lt;li&gt;Putting time in is one type of risk&lt;/li&gt;
  &lt;li&gt;Putting cash in is a greater type of risk&lt;/li&gt;
  &lt;li&gt;If you, the founder, give too much equity to someone else then you can be pushed out by simply having that other person align with the investor or investors&lt;/li&gt;
  &lt;li&gt;You only have 80% of the equity to play with - 20% generally goes to an ESOP (employee stock option plan)&lt;/li&gt;
  &lt;li&gt;Make damn sure that you give out options not stock and a long vesting schedule (incremental over say 4 years)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line is that equity, in whatever form, is a reward for taking risk.  And the earlier you are involved in a startup, the more risk there is.&lt;/p&gt;

&lt;h2 id=&quot;my-personal-experience-from-feedster&quot;&gt;My Personal Experience from Feedster&lt;/h2&gt;

&lt;p&gt;A long, long time ago, I founded a blog search engine named Feedster.  I merged with another RSS search engine shortly after coming to market to address some technical limitations in my architecture.  We did the typical nerd founder thing and simply split the equity down the middle and both took the Founder title.&lt;/p&gt;

&lt;p&gt;In retrospect that wasn't a fair allocation because I committed significantly more time to Feedster but it avoided a difficult conversation that I was simply not brave enough to have – and that was a mistake.&lt;/p&gt;

&lt;p&gt;Once we realized that blog search was actually a viable business, my first hire was a CEO to handle the operations and capital raise.  This CEO:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Came in after the technology was built&lt;/li&gt;
  &lt;li&gt;Came in after the site had traffic&lt;/li&gt;
  &lt;li&gt;Came in after growth was proven&lt;/li&gt;
  &lt;li&gt;Did not have to put in any personal money&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The equity allocation for that CEO, bear in mind that this was 16 years ago so my memory may be fuzzy was between 9% and 10%.  That CEO's advice to me is that if we filled other VP level slots, we'd be talking about between a 3% to 5% stake.&lt;/p&gt;

&lt;p&gt;If you contrast these numbers with the 1/3 equity split mentioned above, it is considerably less and the reason was that an awful lot of the risk had already been addressed (functional technology, working product, site with traffic, no capital investment, etc).&lt;/p&gt;

&lt;h2 id=&quot;disclaimers&quot;&gt;Disclaimers&lt;/h2&gt;

&lt;p&gt;There are two important disclaimers to understand here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I am not a lawyer (IANAL) and my focus is always on making great technology NOT on the best personal economic return.  This means that there are aspects of capital raising and equity allocation that I don't now and likely never will fully understand.&lt;/li&gt;
  &lt;li&gt;I should also note that equity allocation is a particularly sensitive topic for me because, even though I was the founder, I was forced out by the people I hired and then voted off the board.  And while I am over it (somewhat), had the equity allocations been handled differently, that might not have happened.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-should-this-founder-do&quot;&gt;What Should This Founder Do?&lt;/h2&gt;

&lt;p&gt;My advice to this founder is to get &lt;a href=&quot;https://www.amazon.com/That-Will-Never-Work-Netflix/dp/0316530204/&quot;&gt;Marc Randolph's book, That Will Never Work&lt;/a&gt;, about the founding of Netflix and read pages 180 to 189.   Marc Randolph was the founder of Netflix and the original CEO.  In these pages, Reed Hastings not only told Marc that he needed to step down as CEO and be replaced by Reed but that he needed to give a substantial portion of his equity to Reed in order for that privilege.&lt;/p&gt;

&lt;p&gt;After reading these pages, I think that the founder needs to talk with the VP of Engineering and negotiate the equity split down, the 1/3 is just too high.  Once upon a time, I would have said that once you make an agreement, you have to keep it at all costs.  What this book has illustrated to me is that if circumstances change, you actually can renegotiate even on a sensitive topic like equity allocation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Marc Randolph stayed with Netflix for years even after being replaced as CEO and losing equity in the process.  So even difficult discussions don't necessarily end relationships.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Lest you think that I'm pulling this information out of thin air, I did try and confirm my thoughts a bit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://avc.com/2011/04/how-to-allocate-founder-and-employee-equity/&quot;&gt;AVC on Equity Allocation&lt;/a&gt;; Honestly just read everything that Fred Wilson writes.&lt;/li&gt;
  &lt;li&gt;The Joel Spolsky answer that Fred Wilson is referencing above is offline but I managed to find it in the &lt;a href=&quot;https://web.archive.org/web/20110415170946/http://answers.onstartups.com/questions/6949/forming-a-new-software-startup-how-do-i-allocate-ownership-fairly/23326&quot;&gt;Internet Archive&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/lebret/equity-split-in-startups&quot;&gt;Google's Equity Allocation&lt;/a&gt;: Eric Schmidt, the former CEO of Sun, only got 5.4%; &lt;a href=&quot;https://en.wikipedia.org/wiki/Omid_Kordestani&quot;&gt;Omid Kordestani&lt;/a&gt;, VP of Sales I believe, only got 1.8%.  Both these individuals joined later so they weren't really founders but this illustrates the basic concept that the later you join, the less risk so the less equity.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cooleygo.com/how-to-allocate-stock-to-founders-early-team-members/&quot;&gt;CooleyGo on Equity Splits&lt;/a&gt;; this has a VP of Marketing getting 17% at a founder stage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;None of the numbers are exactly the same as the Feedster situation but that's normal.  Every startup is different.  As the founder of this company, they need to examine the risk that this VP of Engineering candidate is taking and assess whether or not a 1/3 stake is actually warranted (example - is the VP of Engineering writing the prototype that is used to raise capital).&lt;/p&gt;

&lt;p&gt;And you can always run a &lt;a href=&quot;https://www.google.com/search?q=startup+equity+allocation&amp;amp;oq=startup+equity+allocation&amp;amp;aqs=chrome..69i57j69i60.6023j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;google search for Startup Equity Allocation&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/10/equity-allocation-in-startups.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/10/equity-allocation-in-startups.html</guid>
        
        <category>startup</category>
        
        <category>equity</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Adding a Show / Hide Feature to Your Bootstrap 4 Divs</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/IMAGE 2022-07-29 13:34:39.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I know this is simple but I am JavaScript / CSS challenged so I'm writing it down because I've had continuous problems with it in the past and I know that this solution works for Bootstrap 4.&lt;/p&gt;

&lt;p&gt;Let's say that you have a div that you want hidden and only displayed by a button when you click it.  Here's the solution:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#feeds&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-toggle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Toggle Feeds&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;feeds&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    This div (feeds) is hidden by default.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here's how this works:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add a div named &lt;em&gt;feeds&lt;/em&gt; around the content you want hidden.  This needs to have a class named &lt;em&gt;collapse&lt;/em&gt; added to it because its default display state is collapsed.&lt;/li&gt;
  &lt;li&gt;Add an A tag with an href of &quot;#feeds&quot;  above the content and a data-toggle named &lt;em&gt;collapse&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;When the user clicks the A tag then the a tag's data-toggle will be applied to the matching div.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thank you to this &lt;a href=&quot;https://stackoverflow.com/questions/23873005/hide-div-by-default-and-show-it-on-click-with-bootstrap&quot;&gt;Stack Overflow post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/11/10/adding-a-show-hide-feature-to-your-bootstrap-divs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/11/10/adding-a-show-hide-feature-to-your-bootstrap-divs.html</guid>
        
        <category>bootstrap</category>
        
        <category>html</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Ruby Madness - Right Hand If Statements and Syntax Error, Unexpected end-of-input, Expecting End</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC03662.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7793.jpeg&quot; alt=&quot;IMG_7793.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;The Eagle's Nest AirBnB Cabin on the Ohio River; One of my favorite places…&lt;/p&gt;

&lt;p&gt;Last night I was on a coding tear, that moment when the solution is just &lt;strong&gt;crystal&lt;/strong&gt; clear.  That situation where something you've struggled with for days / weeks / months and then it all comest together.&lt;/p&gt;

&lt;p&gt;The result of this was a whole bunch of code stuck in a single model and then this morning when I was ready to run it across the entire dataset, I got this crap:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -c app/models/habit.rb
app/models/habit.rb:592: syntax error, unexpected end-of-input, expecting end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I &lt;strong&gt;censored&lt;/strong&gt; hate this error.  Line 592 is the end of the class and that means that the ruby parser just blithely skipped to the end and really has no useful positional information for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're not familiar with ruby -c, it is a syntax checker that makes sure your file is parseable.  Think of it as a poor man's lint.&lt;/p&gt;

&lt;p&gt;My usual approach to finding this error is to cut our half the code in the file and then re-run the ruby -c process.  And then repeat that until you get this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -c app/models/habit.rb
Syntax OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that's how I ended up finding the error but the error was ridiculously subtle.&lt;/p&gt;

&lt;p&gt;Here's the error:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_feeds&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_feed?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here's the corrected version of the method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_feeds&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_feed?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, this is subtle, so I'm going to just call it out.  The issue was this line:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habits_with_feeds &amp;lt;&amp;lt; habit if habit.has_feed?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;versus&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habits_with_feeds &amp;lt;&amp;lt; if habit.has_feed?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Clearly, to the ruby parser, the lack of something being added to the array qualifies as a missing end.  Yeah I get that but damn.   I'm personally a huge fan of right hand if statements due to the reduction of 3 lines down to 1 but this is a case where they bit me &lt;strong&gt;hard&lt;/strong&gt;.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/11/07/ruby-madness-right-hand-if-statements-and-syntax-error-unexpected-end-of-input-expecting-end.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/11/07/ruby-madness-right-hand-if-statements-and-syntax-error-unexpected-end-of-input-expecting-end.html</guid>
        
        <category>ruby</category>
        
        <category>debugging</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Running Effective Agile Standup Meetings</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1407.jpeg&quot; alt=&quot;IMG_1407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So my new gig has moved to doing daily agile standup meetings and while I've done these before, I don't think I've ever seen them done quite so consistently well.  And the credit for this goes to my boss, Dave Sifry, who is our lead facilitator.  We are a team of 8 people and, so far, we have brought them in at under the scheduled 15 minutes per meeting every time.&lt;/p&gt;

&lt;p&gt;Here are the techniques that we are using:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Start on time&lt;/strong&gt;.  If everyone isn't there, well, the meeting happens anyway.  Ideally, if the team lead isn't on time, the meeting happens anyway.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scheduled for 5 minutes after the hour&lt;/strong&gt;.  This allows people in other meetings to make it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A consistent Url&lt;/strong&gt;.  This is the one down side to Zoom - the meeting can't start if the leader isn't present.  If we used Google Meet then that wouldn't be an issue.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A simple format&lt;/strong&gt;.  A ridiculously simple, fast format:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Here's what I'm up to today&lt;/li&gt;
  &lt;li&gt;Here's what I'm stuck on.&lt;/li&gt;
  &lt;li&gt;How can I help anyone else?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I'm generally not a fan of meetings, agile stand ups, done this way, tend to bring developers into line.  Even if a developer isn't good with email - or good with text messages - normally they can handle &quot;show up at time X for 15 minutes every day&quot;.&lt;/p&gt;

&lt;p&gt;In closing, while I'm not a huge proponent of &lt;a href=&quot;https://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-agile-model.html&quot;&gt;heavy weight agile processes (think scrum / agile velocity)&lt;/a&gt;, I am really enjoying daily stand ups again.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/11/06/running-effective-agile-standup-meetings.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/11/06/running-effective-agile-standup-meetings.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Stupid Simple ActiveRecord Optimizations or Why Rails Console is Essential for Development</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9823.jpeg&quot; alt=&quot;IMG_9823.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ever since 2008 when my pairing partner at the time, Jared, pushed me to basically live in the Rails console, I've been heavily, heavily dependent on the console as an essential developer tool.  I just watched something that pointed out to me just why it is so damn important.&lt;/p&gt;

&lt;p&gt;Here's what I observed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.6.3 :057 &amp;gt; m.change_pct_today_over_goal?
  Goal Load (65.2ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
  Habit Load (0.4ms)  SELECT `habits`.* FROM `habits` WHERE `habits`.`id` = 39 LIMIT 1
  Goal Load (0.5ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
  Goal Load (30.2ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I simply can't think that the fact that we're loading the goal from the database 3 times is an optimal use of computing resources.  So I dug into the code and here's what I saw:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# original&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_pct_today_over_goal?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first 3 lines in the method above walk database associations back to the goal.  The simple optimization is to store the goal in a local variable so it is only read once:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# rewritten&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_pct_today_over_goal?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now it is possible that with the right caching strategy server side, this change wouldn't be necessary but caching is always problem.  It is simply better to solve this without caching because not only will that speed things in production but it will also speed things in development.&lt;/p&gt;

&lt;p&gt;And, yes, this would have been obvious if I had been tailing log files but the beauty of Rails console is that all this information is present if you simply pay a small bit of attention.&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/05/stupid-simple-activerecord-optimizations-or-why-rails-console-is-essential-for-development.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/05/stupid-simple-activerecord-optimizations-or-why-rails-console-is-essential-for-development.html</guid>
        
        <category>rails</category>
        
        <category>active_record</category>
        
        <category>optimization</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Reading Files to Strings using Python and then Loading them to JSON</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01378.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I know this is dirt simple but I'm writing it down because it is one of those simple things that I just forget constantly.&lt;/p&gt;

&lt;p&gt;In each of these cases, the output is to the str variable.&lt;/p&gt;

&lt;h2 id=&quot;using-a-with-block-to-auto-close-the-file&quot;&gt;Using a With Block to Auto Close the File&lt;/h2&gt;

&lt;p&gt;As a rubyist, I keep reading this as str is local to the with &quot;block&quot;. Of course python doesn't have blocks …&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;python-35-path-statement-one-liner&quot;&gt;Python 3.5 Path Statement One Liner&lt;/h2&gt;

&lt;p&gt;I really like this approach but pathlib always has to be imported.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;non-auto-closing-not-recommended&quot;&gt;Non Auto Closing Not Recommended&lt;/h2&gt;

&lt;p&gt;This is simple but leaves an open file hanging around.  Sigh.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;auto-closing-single-line&quot;&gt;Auto Closing Single Line&lt;/h2&gt;

&lt;p&gt;This is elegant but it buries the assignment variable in the middle of the line which feels wrong.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;loading-it-to-json&quot;&gt;Loading it to JSON&lt;/h2&gt;

&lt;p&gt;The json.loads statement takes a string in and converts it to a Python dict / hash so all you need to do is inline the string reading call from above and get an easy one liner (if you disregard the import lines).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8369219/how-to-read-a-text-file-into-a-string-variable-and-strip-newlines&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://realpython.com/python-json/&quot;&gt;Real Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/11/04/reading-files-to-strings-using-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/11/04/reading-files-to-strings-using-python.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Using Git Commits to Learn to Program Ruby on Rails</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC01753.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I've been actively working on a side project for the past several months and one of the people who has been helping out a bit around the edges wants to learn how to program Ruby on Rails.  Since this, like everything I always do, is a distributed, remote effort, an in person teaching effort just doesn't work.&lt;/p&gt;

&lt;p&gt;When they pushed back on the feature set I was making and said that it wouldn't work for them, I said &quot;Well that's fine, tell me what &lt;strong&gt;you&lt;/strong&gt; want&quot;.  And they responded with a detailed set of Agile User Stories.  I took a look at these and I realized that if I mapped them into Github issues (aka tickets) and then Github Pull Requests that this might be exactly the right tool to get this person past the learning hump.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Just to be clear, it doesn't matter what the side project is.  Yes it is live on the Internet but it is buggy as hell.  And this is a major new feature.  The whole point of this blog post is to talk about a new learning technique not &quot;Scott's (current) Crazy Side Project&quot;.&lt;/p&gt;

&lt;h2 id=&quot;learning-from-code-commits&quot;&gt;Learning from Code Commits&lt;/h2&gt;

&lt;p&gt;The hard part with learning any new development framework is making the leap from &quot;here's what I want&quot; (the story) to &quot;here's what to do to make that&quot; (the code and tooling steps).  Now if you use Github &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;how we do, with a simple branch based development model&lt;/a&gt;, where 1 issue maps to 1 branch, this means that you can actually look at a user story and then see all the changes.&lt;/p&gt;

&lt;p&gt;This is a weird enough learning concept that I'm going to illustrate this step by step.&lt;/p&gt;

&lt;h2 id=&quot;beginning-with-the-story&quot;&gt;Beginning With the Story&lt;/h2&gt;

&lt;p&gt;Let's start with the agile user story:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a user, I want a currency system (ChangeCoins - CC) that is awarded to me for doing stuff.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From a Rails perspective, what this means, is that we need a data model, persistently stored to the database that tracks something else.&lt;/p&gt;

&lt;h2 id=&quot;continuing-to-the-issue&quot;&gt;Continuing to the Issue&lt;/h2&gt;

&lt;p&gt;Let's look at the issue in question:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_01_issue.png&quot; alt=&quot;learning_rails_from_commits_01_issue.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few notes on the issue here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&quot;Needs to tie back to user_id, metric_id, habit_id&quot; - this indicates foreign key relationships back to other data models in the project&lt;/li&gt;
  &lt;li&gt;&quot;bundle exec **rails g model **ChangeCoin&quot; - this is a Rails generator command which scaffolds up a new data model and all associated files&lt;/li&gt;
  &lt;li&gt;&quot;mate db/migrate/20191101144038_create_change_coins.rb&quot; - this is just opening the migration (a migration is a set of DDL commands to create a table or change something in the database)&lt;/li&gt;
  &lt;li&gt;&quot;bundle exec r&lt;strong&gt;ake db:migrate&lt;/strong&gt;&quot; - this executes the migration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A big reason for the notes on the issue is that if I don't put notes into the issue, how would you know that there are commands like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rail g model&lt;/li&gt;
  &lt;li&gt;rake db:migrate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These commands don't exist in the pull request so they have to be manually documented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're going to use this approach then I strongly, strongly advise you to add a label to your issues so that all issues can be logically grouped together.  Even though you think &quot;Oh I'll just work on this one thing&quot;, something else will come up (I got 2 issues into Change Coins and then found 4 other bugs, each of which was its own issue).&lt;/p&gt;

&lt;h2 id=&quot;the-branch&quot;&gt;The Branch&lt;/h2&gt;

&lt;p&gt;Now we need to turn to the Github branch and the pull request.  A pull request is a set of changes that, for this project, represent what happened in the branch.&lt;/p&gt;

&lt;p&gt;Let's start with the changed files in this branch:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_02_overview.png&quot; alt=&quot;learning_rails_from_commits_02_overview.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This shows that 4 files changed.  Now of these four files, one was automatically generated by the system (schema.rb) and isn't ever touched by the user and the other (reward_spec.rb) is just a skeleton file at this point so neither of these files will be shown.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_03_model.png&quot; alt=&quot;learning_rails_from_commits_03_model.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a Rails model file.  The source code comments beginning with pound symbols organize the model and illustrate where required things should be placed.  This isn't a Rails convention, this is a &quot;Scott&quot; convention as I find it helps me avoid making mistakes.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_04_migration.png&quot; alt=&quot;learning_rails_from_commits_04_migration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a Rails migration file.  It lays out the data model for the entire table that stores the rewards for the user.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This isn't a perfect approach to learning, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Issues need to map 1:1 to agile user stories&lt;/li&gt;
  &lt;li&gt;Commands aren't captured by the git commit so you have to manually update the issue to capture them&lt;/li&gt;
  &lt;li&gt;It is mildly challenging to go back into a closed issue and find the changes related to the pull request because the request doesn't automatically track to the issue number but instead to the git commit hash; this might be a problem with me and how I name the pull requests; tbd.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even with these problems, I think there might be something interesting here.  I'll keep you posted if any real learning occurs from this.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/03/using-git-commits-to-learn-to-program-ruby-on-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/03/using-git-commits-to-learn-to-program-ruby-on-rails.html</guid>
        
        <category>rails</category>
        
        <category>git</category>
        
        <category>learning</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Running a Team Retrospective Meeting</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9822.jpeg&quot; alt=&quot;IMG_9822.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am a member of an 8 person team that is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;part of a non profit&lt;/li&gt;
  &lt;li&gt;distributed all over the country&lt;/li&gt;
  &lt;li&gt;trying to get started on a new initiative and find our footing; we are about 1 year old (I've only been here for 2 months)&lt;/li&gt;
  &lt;li&gt;just had our first offsite&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the offsite I witnessed a fascinating exercises in doing a retrospective on the past year's work that my boss, Dave Sifry, orchestrated.  This is now my third time consulting for Dave Sifry and he and I have done this before but I never documented it so I wanted to write down how to was done.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-retrospective-meeting&quot;&gt;What is a Retrospective Meeting?&lt;/h2&gt;

&lt;p&gt;A retrospective is when a team looks back and tries to determine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What went well&lt;/li&gt;
  &lt;li&gt;What to improve&lt;/li&gt;
  &lt;li&gt;Possible questions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of this type of retrospective is that you're doing it in a lightweight, agile fashion where you aren't spending days or even a day on it.  You can literally review a year's worth of work in under an hour (I know this because we just did it).&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;Here's what you need to do this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shared Google Spreadsheet that breaks things down into columns you can vote on.  Here's the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1f7xKqs_1jUKae1aaKhnTG_uO_xddifL3OXnf4nX3sSQ/edit?usp=sharing&quot;&gt;template&lt;/a&gt; to use.&lt;/li&gt;
  &lt;li&gt;A timer; we used &quot;Visual Timer 2&quot; on an iPad which was awesome since it had great sounds but any count down timer would work.  The key here is that you want it to be highly visible to everyone on the team hence using it on an iPad not a phone.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1---what-went-well&quot;&gt;Step 1 - What Went Well&lt;/h2&gt;

&lt;p&gt;Here are the specific steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take the spreadsheet template and save it to a new name, something like &quot;Project Name - Time Period - Retrospective&quot;.  Our name was &lt;strong&gt;CTS 2019 Retrospective&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Post the link to the spreadsheet in your team's Slack channel or email or something that everyone gets.&lt;/li&gt;
  &lt;li&gt;Start the timer and announce something like &quot;Ok.  Starting now.  We have 15 minutes to document what went well; GO !&quot;&lt;/li&gt;
  &lt;li&gt;Have everyone open the spreadsheet and start typing in things that went well.  If someone is working in cell A2 then move to cell A3 (or A10 or whatever).  No one should overwrite anyone's work.&lt;/li&gt;
  &lt;li&gt;Announce &quot;When you are done, return your cursor to A1&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If your experience is anything like ours, what you are going to find is that an awful lot of interesting things are going to emerge.  For our group, one of the most interesting was that we operated without a leader for 8 months.  Since I have just joined, I had no idea of this.&lt;/p&gt;

&lt;h2 id=&quot;step-2---everyone-votes-on-what-went-well&quot;&gt;Step 2 - Everyone Votes on What Went Well&lt;/h2&gt;

&lt;p&gt;At this point we have a list of all the things that everyone thinks went well.  But it is just a list and this list can be long (we had maybe 25 items).  The trick now is to prioritize it and you can do this by letting people vote on the items.  Everyone can vote on any item (including the ones they contributed).&lt;/p&gt;

&lt;p&gt;Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set the timer to a lesser amount of time.  Maybe 10 minutes if you spent 15 minutes to write all the tasks.&lt;/li&gt;
  &lt;li&gt;Tell people &quot;Ok.  Now vote on things.  Right now there is nothing in each cell and that's fine.  If you want to vote on something then put a 1 where it here is nothing.  If there is a 1 then make it a 2 and so on&quot;.&lt;/li&gt;
  &lt;li&gt;Tell people to begin.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The next step is to sort this which requires using some of the better features in Google Sheets.  Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mark a block in the spreadsheet from A2 (the first &quot;what went well&quot;) down to the last column in the voting block for &quot;what went well&quot;.&lt;/li&gt;
  &lt;li&gt;From the Data menu, select the Sort Range command.&lt;/li&gt;
  &lt;li&gt;Change the sort column over to B as you want to sort these by the vote and then by Z to A.  This lets you sort by the descending value of the votes, from most popular to least popular.&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/retrospective_sort.png&quot; alt=&quot;retrospective_sort.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3---what-to-improve&quot;&gt;Step 3 - What to Improve&lt;/h2&gt;

&lt;p&gt;The next step is repeat steps 1 and 2 but on the &quot;What to Improve&quot; section.  Use the same timed model of listing and then voting.  Be very careful when you story that you select C2 down to Dwhatever otherwise you'll mess up the data you carefully arranged in step 2.&lt;/p&gt;

&lt;h2 id=&quot;step-4---discuss&quot;&gt;Step 4 - Discuss!&lt;/h2&gt;

&lt;p&gt;The final step in all this is to a group discussion.  This too should be time bounded, say 20 minutes and you should take notes in the Comments / Possible Questions columns.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I've now done this twice with Dave Sifry and both times it turned the normal process of a retrospective from something painful, lengthy and annoying into a less than hour meeting with a detailed, useful takeaway – the spreadsheet.  While in previous career incarnations, I have been dubbed &quot;The Antiprocess&quot;, any process that makes meetings better, imho, is beyond awesome.   Thank you Dave!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/11/01/running-a-team-retrospective-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/11/01/running-a-team-retrospective-meeting.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Running a Daily Agile Standup Meeting</title>
        <description>&lt;p&gt;&lt;img style=&quot;display: block; margin-left: auto; margin-right: auto; width: 75%; height: 75%&quot; src=&quot;http://pizzaforukraine.com:443/assets/random/DSC08748.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Pizza courtesy of Pizza for Ukraine!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.pizzaforukraine.com/&quot;&gt;Donate Now to Pizza for Ukraine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Here's how to run a simple agile standup – just say these three things.  Kudos to Dave Sifry who taught me this.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Here's what I'm up to today&lt;/li&gt;
  &lt;li&gt;Here's what I'm stuck on&lt;/li&gt;
  &lt;li&gt;How can I help anyone else&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/agile/2019/11/01/running-a-daily-agile-standup-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/agile/2019/11/01/running-a-daily-agile-standup-meeting.html</guid>
        
        <category>agile</category>
        
        
        <category>agile</category>
        
      </item>
    
      <item>
        <title>Running a P1, P2, P3 Team Prioritization Meeting</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9749.jpeg&quot; alt=&quot;IMG_9749.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Really is anything more scary than prioritization???; Picture taken at Pete's Dueling Piano Bar, Austin, TX; Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am a member of an 8 person team that is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;part of a non profit&lt;/li&gt;
  &lt;li&gt;distributed all over the country&lt;/li&gt;
  &lt;li&gt;trying to get started on a new initiative and find our footing; we are about 1 year old (I've only been here for 2 months)&lt;/li&gt;
  &lt;li&gt;just had our first offsite&lt;/li&gt;
  &lt;li&gt;juggling way too much work hence the need to prioritize&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the offsite I witnessed a fascinating exercises in setting priorities that my boss, Dave Sifry, orchestrated.  I haven't seen prioritization done quite this way in the past so I wanted to write down how this was done.  I also made one important contribution during the process&lt;/p&gt;

&lt;h2 id=&quot;step-1---terms&quot;&gt;Step 1 - Terms&lt;/h2&gt;

&lt;p&gt;There are three types of priorities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;P1 - something that you have to do the instant it comes up; drop everything and worry about it&lt;/li&gt;
  &lt;li&gt;P2 - something that you can do on the second day&lt;/li&gt;
  &lt;li&gt;P3 - something that can wait 3 days&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-2---list-what-you-do&quot;&gt;Step 2 - List What You Do&lt;/h2&gt;

&lt;p&gt;This was a simple process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Put all people in the same room with a shared note space (white board or easel size post it )&lt;/li&gt;
  &lt;li&gt;Designate a person to write all the things that you do&lt;/li&gt;
  &lt;li&gt;Time bound the exercise to say 20 minutes and try and make sure that each person's tasks are listed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 1&lt;/strong&gt;: Make sure that the person listing the priorities on the white board / easel size post it has decent hand writing.  Our initial writer was close to illegible so we had to rewrite them all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 2&lt;/strong&gt;: Use a different color pen for each person's tasks&lt;/p&gt;

&lt;h2 id=&quot;step-3---apply-the-priorities&quot;&gt;Step 3 - Apply the Priorities&lt;/h2&gt;

&lt;p&gt;You then go through the tasks and write down P1, P2, P3 next to each task.  Inherently you are going to err on the side of P1 which brings us to My Contribution.&lt;/p&gt;

&lt;h2 id=&quot;my-contribution&quot;&gt;My Contribution&lt;/h2&gt;

&lt;p&gt;My contribution to this process was actually pretty simple.  I asked this question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How many top level, P1, priorities can a team our size support?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My boss had a brilliant answer - &quot;maybe one per person, possibly less&quot;.&lt;/p&gt;

&lt;p&gt;I really wasn't trying to be a jerk; just trying to apply my normal engineering perspective to things.&lt;/p&gt;

&lt;p&gt;This limited us to &lt;strong&gt;6&lt;/strong&gt; or &lt;strong&gt;7&lt;/strong&gt; P1 priorities and that forced the work in Step 3 to be restructured and a bunch of items to move from P1 to P2 or P3.&lt;/p&gt;

&lt;p&gt;The really interesting outcome of this exercise was that my own work, Engineering, ended up being a &lt;strong&gt;P3&lt;/strong&gt; priority!  And the reason was simple – we are in early, early stages of the product life cycle and while what we are doing is interesting, it isn't yet anything exposed to the public so other things have to be the top priority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We are a non profit that does advocacy and public policy work so we have an obligation to be responsive to the public / deal with crisis events that come up somewhat regularly.&lt;/p&gt;

&lt;h2 id=&quot;step-4---document-it&quot;&gt;Step 4 - Document It&lt;/h2&gt;

&lt;p&gt;The final step is to take an incredibly messy working document and then distribute it across the team.  This could be done with Google Docs, Slack or some other mechanism.&lt;/p&gt;

</description>
        <pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/10/31/how-to-set-priorities-in-a-team-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/10/31/how-to-set-priorities-in-a-team-meeting.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>How to Make Progress on a Side Project - Invert</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9755.jpeg&quot; alt=&quot;IMG_9755.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Because side projects are as ridiculous as someone doing push ups on top of a set of dueling pianos; Picture taken at Pete's Dueling Piano Bar, Austin, TX; Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Great Googly Moogly!  My current side project is almost 10K lines of code in total or at least 5k lines (and yes there are tests, rspec, I don't know why it says 0 lines of tests):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1161 |    767 |      23 |      95 |   4 |     6 |
| Helpers              |    267 |    207 |       0 |      36 |   0 |     3 |
| Jobs                 |      2 |      2 |       1 |       0 |   0 |     0 |
| Models               |   2151 |   1316 |      23 |     137 |   5 |     7 |
| Mailers              |      4 |      4 |       1 |       0 |   0 |     0 |
| Channels             |      8 |      8 |       2 |       0 |   0 |     0 |
| JavaScripts          |   4351 |   3599 |       0 |     183 |   0 |    17 |
| Libraries            |   1304 |    811 |       0 |       7 |   0 |   113 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |   9248 |   6714 |      50 |     458 |   9 |    12 |
+----------------------+--------+--------+---------+---------+-----+-------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That's big for a side project and it is particularly big for something that hasn't actually launched yet.  When I was building this, I made a deliberate decision about how I approached this side project which dramatically &lt;strong&gt;increased&lt;/strong&gt; my productivity.&lt;/p&gt;

&lt;p&gt;My decision, right from day 1, was to &lt;strong&gt;Invert&lt;/strong&gt;.  Normally we think of a side project as something you do &lt;strong&gt;after&lt;/strong&gt; work so what I did was to do my side project as my &lt;strong&gt;first thing&lt;/strong&gt; every day I worked on it.&lt;/p&gt;

&lt;p&gt;Here's my thinking on this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A side project is something that a developer does for his or her or their self (pronoun, pronoun, pick a pronoun).&lt;/li&gt;
  &lt;li&gt;Self comes before work. For serious developers, those that build side projects, a side project is literally self care.&lt;/li&gt;
  &lt;li&gt;Thus do it first thing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What I have found is that if you wait until after the day is done, you are just plain tired.  Often you have all the best intentions of working on something but you simply don't get to it because, well, &lt;strong&gt;life&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now when you do it first thing, I don't mean that I'm putting in 8 hours on my side project and then a day of work.  Sometimes I might put in 15 minutes.  Sometimes an hour.  Rarely has it been more than that.&lt;/p&gt;

&lt;p&gt;Let's look at the metrics real quick:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;50 work weeks in a year&lt;/li&gt;
  &lt;li&gt;Let's say you are 60% successful in working on your side project 3 days out of the week&lt;/li&gt;
  &lt;li&gt;Let's say that you manage to put in 0.5 hours per day on it&lt;/li&gt;
  &lt;li&gt;That's 1.5 hours per week or 75 hours per year&lt;/li&gt;
  &lt;li&gt;In a modern development context, using a framework, 75 hours actually &lt;strong&gt;can&lt;/strong&gt; build something. Add in some weekend time and you might really have something.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/side_project/2019/10/31/how-to-make-progress-on-a-side-project-invert.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/side_project/2019/10/31/how-to-make-progress-on-a-side-project-invert.html</guid>
        
        <category>side_project</category>
        
        
        <category>side_project</category>
        
      </item>
    
      <item>
        <title>Essential Technology for a Team Offsite</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9771.jpeg&quot; alt=&quot;IMG_9771.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of wrapping up a team offsite even though I was ostensibly the lead technologist present, I was not actually prepared in terms of bringing the right technology with me to facilitate the team's needs.  The single worst omission was the lack of an HDMI cable without which, I saw three tech folk (me, other engineer #1, team coordinator) fail to be able to connect a Mac, an iPad and a Windows box to a Chrome Cast equipped TV.&lt;/p&gt;

&lt;p&gt;Here is my list of the technical stuff I will never again be without for a team meeting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A couple of USB sticks.  Even today in the age of Google Drive and DropBox, USB sticks can still be more convenient&lt;/li&gt;
  &lt;li&gt;An &lt;a href=&quot;https://www.amazon.com/Anker-PowerCore-13000-Portable-Charger/dp/B00Z9QVE4Q/ref=sr_1_5?keywords=anker+USB+battery&amp;amp;qid=1572475840&amp;amp;sr=8-5&quot;&gt;Anker USB battery&lt;/a&gt; just in case&lt;/li&gt;
  &lt;li&gt;2 lightning cables, at least one of which is 6 foot like this &lt;a href=&quot;https://www.amazon.com/gp/product/B0753R2TWC/&quot;&gt;Amazon cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 6' &lt;a href=&quot;https://www.amazon.com/gp/product/B076FPGWNZ/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;amp;psc=1&quot;&gt;USB type C cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 USB 2 cable&lt;/li&gt;
  &lt;li&gt;1 power strip with USB ports&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/Desktop-Outlet-Braided-Extension-Office/dp/B07HCVFH82/&quot;&gt;extension cord with USB ports&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 Verizon Mifi Hotspot able to share connectivity if WiFi fails&lt;/li&gt;
  &lt;li&gt;1 ChromeCast&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/AmazonBasics-High-Speed-HDMI-Cable-1-Pack/dp/B014I8SSD0/&quot;&gt;6' HDMI Cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 USB Speaker like a Beats Pill&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is roughly enough technology to support a team offsite of 6 to 8 people (imho).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I use a MacBook 2015 classic so I still have real ports.  If you are using newer MacBooks then you likely need dongles as well.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/offsite/2019/10/30/essential-technology-for-a-team-offsite.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/offsite/2019/10/30/essential-technology-for-a-team-offsite.html</guid>
        
        <category>offsite</category>
        
        <category>management</category>
        
        <category>startup</category>
        
        
        <category>offsite</category>
        
      </item>
    
      <item>
        <title>What Does Snark to our Alexas Teach Our Kids</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9621.jpeg&quot; alt=&quot;IMG_9621.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;You would think by now that I'd be wise enough to capture the speaker as well as the slide when I take a photo; alas not; &lt;em&gt;sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Last week I saw &lt;a href=&quot;https://en.wikipedia.org/wiki/Daniel_H._Wilson&quot;&gt;Daniel Wilson&lt;/a&gt; speak over at Butler University.  Daniel is the author of &lt;a href=&quot;https://en.wikipedia.org/wiki/Robopocalypse&quot;&gt;Robopocalypse&lt;/a&gt;, Robogenesis, &lt;a href=&quot;https://en.wikipedia.org/wiki/How_to_Survive_a_Robot_Uprising&quot;&gt;How to Survive a Robot Uprising&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Where%27s_My_Jetpack%3F&quot;&gt;Where's My Jetpack&lt;/a&gt; and many other good bits of science fiction.  There were two surprising things in his presentation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;He was funny.  As someone who has written some pretty dark stuff, I was astonished at just how funny he was.  &quot;I asked my fellow Carnegie Mellon robotics folks what they'd to if the robots rose up and they all said the same thing - 1) Go to a staircase and go up one step and 2) wait for it to run out of batteries&quot;.  And then, with input like that, he made a damn book out of it!  &lt;strong&gt;Respect&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;He was surprisingly gender aware which is what I really want to talk about here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This second point is the focus of this blog post.  He is raising small children and he and his wife are teaching them to be respectful to their Alexa and / or Google Home by saying &quot;please&quot; and &quot;thank you&quot; to it.  This is &lt;strong&gt;interesting&lt;/strong&gt;.  His basic point boils down to this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Digital assistants tend to have female voices (there's a reason for this but its irrelevant for now)&lt;/li&gt;
  &lt;li&gt;What does it teach his son (or daughter) if they regularly hear Dad saying &quot;Alexa Shut the F up!&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cursing at Alexa, for me, is a bit of a dirty pleasure.  And this is particularly true when it is is an early morning alarm and I don't want got get up.  But I am now painfully aware that maybe I shouldn't do this – what am I teaching my youngest about how to interact with female voices?  &lt;em&gt;Deep, Deep Sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And Thank You to Daniel Wilson for such an interesting, funny talk.  His writings are definitely &lt;strong&gt;recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sbi_logo.jpg&quot; alt=&quot;sbi_logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don't want to get get into the gender issues around why we use assistive voices that are female and imperative voices that are male.  That is a different issue entirely.  And thanks to Lisa Meece of &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Starbase Indy&lt;/a&gt; fame for pointing this out to me and illustrating it with examples, specifically of the New York City Subway system.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/gender/2019/10/28/what-does-snark-to-our-alexas-teach-our-kids.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/gender/2019/10/28/what-does-snark-to-our-alexas-teach-our-kids.html</guid>
        
        <category>gender</category>
        
        <category>alexa</category>
        
        <category>manners</category>
        
        
        <category>gender</category>
        
      </item>
    
      <item>
        <title>Calling Python Methods - Subtleties with and without Parens</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_bar.jpg&quot; alt=&quot;sifry_london_bar.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;p&gt;In the continuing saga of &quot;Once upon a time I did ruby exclusively, now I do python and ruby side by side and I keep being stupid&quot;, I have discovered something subtle and interesting about how python works internally.&lt;/p&gt;

&lt;p&gt;Let's start with a function definition in python:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;expert_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Anti Semitic Speech Expert&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expert_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_opinion_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;slurs&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;raw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;score&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;opinion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expert_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expert_name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expert_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expert_version&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first two lines are globals and all the next line does is construct a hash (ok dict if I have to talk python).  I then embedded this method in my service and ran it using Firefly so I could call into it across the network and I got this curious error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  File &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/firefly/app.py&quot;, line 170, in __call__
    result = self.function(**kwargs)
  File &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py&quot;, line 107, in opinion
    new_opinion[&quot;raw&quot;] = json_results
TypeError: 'function' object does not support item assignment
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but new_opinion isn't a function – it is a dict – so what the heck is going on???&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're an experienced Python wrangler, you already got it – I know, I know – I'm slow as hell at times particularly when it comes to syntax changes.&lt;/p&gt;

&lt;p&gt;In ruby you can call methods with or without parens and the issue here is I had this syntax:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;opinion_template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_opinion_template&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;opinion_template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_opinion_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I simply forgot to add the parens when I called make_opinion_template.  Sigh.  The way I ultimately found this was to use a pdb.set_trace() call and evaluate opinion_template in the debugger.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; /Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py(109)opinion()
-&amp;gt; new_opinion[&quot;raw&quot;] = json_results
(Pdb) new_opinion
&amp;lt;function make_opinion_template at 0x13e328ef0&amp;gt;
(Pdb) quit()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and then, after the fix:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; /Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py(109)opinion()
-&amp;gt; new_opinion[&quot;raw&quot;] = json_results
(Pdb) new_opinion
{'name': 'slurs', 'raw': None, 'score': None, 'opinion': None, 'expert_name': 'Anti Semitic Speech Expert', 'expert_version': 0.01}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Personally I would have thought this would have been syntactically invalid but when a compile check didn't find an error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m py_compile expert_antisemitic_speech_service.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am forced to admit that this must be lexically correct for some reason that I'm too unskilled at python to understand.&lt;/p&gt;

&lt;p&gt;So, a short note to myself: &lt;strong&gt;Don't forget the parens when you call methods&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/28/calling-python-methods-subtleties-with-and-without-parens.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/28/calling-python-methods-subtleties-with-and-without-parens.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Improving Your Terminal Prompt with a Starship</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_sunrise.jpg&quot; alt=&quot;sifry_london_sunrise.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;p&gt;I have a lot of computer skills.  I can program in multiple languages, I can remember how to use Norton Utilities for DOS, I can remember how to use Sun OS, I can tell you about not HTML, not XML, not SGML but GML (which begat SGML which in turn begat HTML which in turn begat XML), etc.  One of those computer skills that I don't have is *nix shell scripting – I suck at Bash; I suck at Zshell, etc.  And *nix shell scripting is how you customize your Terminal prompt.&lt;/p&gt;

&lt;p&gt;Now I know this sounds like Nerd minutiae (and it is) but your Terminal prompt is this rich land of information (or it can be; normally mine isn't).  About 6 months ago, Sean Kennedy, my pairing partner in crime, got me to change over to Zshell from Bash and, in doing so, update my prompt.&lt;/p&gt;

&lt;p&gt;My prompt now looks like this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_zsh.png&quot; alt=&quot;prompt_zsh.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that's damn good.  I mean it tells me the git repo and everything.  That's awesome.&lt;/p&gt;

&lt;p&gt;But, and this is a big but – if you have to customize it with bash, we can do better.  The easy way to do better is to use &lt;a href=&quot;The cross-shell prompt for astronauts&quot;&gt;Starship&lt;/a&gt; aka &quot;The cross-shell prompt for astronauts&quot;.  This is a Rust powered prompt that is designed for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ease of use&lt;/li&gt;
  &lt;li&gt;cross platform compatibilty&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://starship.rs/config/&quot;&gt;customization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how to get going with it on OSX:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install it with HomeBrew:  &lt;strong&gt;brew install starship&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Add the following to the END  of ~/.zshrc: &lt;strong&gt;eval &quot;$(starship init zsh)&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Source it with: source ~/.zshrc&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the reasons the prompt is so damn important isn't your local box but when you're logged into remote boxes such as AWS EC2 instances.  I cannot say just how much I wish this had existed when I was maintaining a large cluster of EC2 instances that I used to log into daily.  Sigh.&lt;/p&gt;

&lt;p&gt;Here's how my prompt looks out of the box:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship.png&quot; alt=&quot;prompt_starship.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I haven't delved too deeply into customization but the fact that I can use emojis to display my terminal state including shrug for untracked fills me a deep and unending joy:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_configuration.png&quot; alt=&quot;prompt_starship_configuration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now if you're not a hard core developer nerd, and even then one that spends a lot of time in a terminal, the picture above likely looks like line noise.  Here's just some of what you learn from it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;current directory&lt;/li&gt;
  &lt;li&gt;git branch name&lt;/li&gt;
  &lt;li&gt;that the git branch isn't pushed yet&lt;/li&gt;
  &lt;li&gt;git status&lt;/li&gt;
  &lt;li&gt;ruby version&lt;/li&gt;
  &lt;li&gt;aws region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I tried the customization quickly and it worked flawlessly.  My git prompt now shrugs at me with indifference when I add new files to a project.  w00t!!!  I love me some snarky software…&lt;/p&gt;

&lt;p&gt;Here are two more pictures showing my prompt when I move to a different terminal window to work in Python (it shows the difference between Python 2 and 3 which is incredibly helpful):&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_python_2.png&quot; alt=&quot;prompt_starship_python_2.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_python_3.png&quot; alt=&quot;prompt_starship_python_3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Starship.  Wow.  Just plain wow.  This one thing has done more to convince me to look into Rust than all the damn tutorials / blog posts I've ever seen.  Fricking outstanding.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sbi_logo.jpg&quot; alt=&quot;sbi_logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And since we're talking about Starships, if you are in the Midwest / Indiana area, I'd like to point out that &lt;strong&gt;Starbase Indy is coming up soon&lt;/strong&gt;.  I'm actually Head of Engineering for this fan run convention and I hope to see any local readers there.  Head over to &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;StarbaseIndy.org&lt;/a&gt; to buy your ticket today.  Starbase Indy happens over Thanksgiving weekend and it is the best way in Indiana to run away from difficult relatives!&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/terminal/2019/10/26/improving-your-terminal-prompt-with-a-starship.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/terminal/2019/10/26/improving-your-terminal-prompt-with-a-starship.html</guid>
        
        <category>zsh</category>
        
        <category>terminal</category>
        
        <category>prompt</category>
        
        <category>rust</category>
        
        <category>starship</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>Heroku Is Amazing or Fixing INSERT command denied to user (MySQL)</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_market.jpg&quot; alt=&quot;sifry_london_market.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;h2 id=&quot;part-1-heroku-rocks&quot;&gt;Part 1: Heroku Rocks&lt;/h2&gt;

&lt;p&gt;I've been using Heroku quite a lot recently:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is currently running my side project&lt;/li&gt;
  &lt;li&gt;I built a trial project purely to confirm that I knew how to deploy onto Heroku and then deployed it in just an hour or two&lt;/li&gt;
  &lt;li&gt;I deployed a proof of concept app for my day gig onto it that's pretty substantial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall I've never had such a seamless deploy experience using Rails as I've had with Heroku.  And I when I say seamless, I mean &quot;you can build a Rails app and deploy it in just a few hours&quot;.  Twelve plus years of Rails and I've never had such an easy time deploying things.&lt;/p&gt;

&lt;p&gt;I was very, very skeptical of the Heroku git push style deployment for a long, long time and I have to admit:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was wrong!  Amazingly wrong!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have always come at deployment from a traditional, heavy weight model.  And to have deployment not really be an issue is just shocking.&lt;/p&gt;

&lt;p&gt;This isn't to say that Heroku is perfect, it isn't – but it is damn &lt;strong&gt;amazing&lt;/strong&gt;.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;part-2-this-is-how-cloud-computing-was-supposed-to-work&quot;&gt;Part 2: This is How Cloud Computing Was Supposed to Work&lt;/h2&gt;

&lt;p&gt;Now, with the laudatory statements aside, I did hit an interesting bug / issue in Heroku today.  I use Heroku with MySQL because, well, I've put terabytes of data into MySQL over the years and it has never let me down.  Today tho I got this weirdness:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mysql -ua_user_name -pa_passowrd a_database --host=a.rds.host.amazon.com &amp;lt; lib/tasks/data/db_dumps/police_crawl_development_2019-10-25.sql
 
ERROR 1142 (42000) at line 40: INSERT command denied to user 'cbneustt0on66p30'@'208-70-45-211.bb.hrtc.net' for table 'ar_internal_metadata'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My first thought was that the database instance wasn't fully logically isolated from others and I used –ignore-table to not export ar_internal_metadata.  And, clearly, that was a stupid idea because it just failed on the next table.  I did some digging and ended up on an obscure Stack Overflow page which said something to the effect that &quot;Heroku limits your space, perhaps you just have had your insert permissions disabled because you are out of space&quot;.  So I logged into MySQL remotely and got:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [q0seyczrkn0dptvs]&amp;gt; show grants;
+--------------------------------------------------------------------------------------------------+
| Grants for a_user@%                                                                              |
+--------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'cbneustt0on66p30'@'%'                                                     |
| GRANT SELECT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES,   |
| TRIGGER ON `something`.* TO 'a_user'@'%'                                                         |
  +------------------------------------------------------------------------------------------------+
2 rows in set (0.04 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jinkies!  My insert permission is gone!  So I logged into the Heroku dashboard and upgraded the MySQL addin from the baseline - which only gives you 5 mb of data - to the $10 / month option which gives you a full gigabyte and then I re-ran my show grants query and got:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [q0seyczrkn0dptvs]&amp;gt; show grants;
+------------------------------------------------------------------------+
| Grants for cbneustt0on66p30@%                                          |
+------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'cbneustt0on66p30'@'%'                           |
| GRANT ALL PRIVILEGES ON `q0seyczrkn0dptvs`.* TO 'cbneustt0on66p30'@'%' |
+------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we talk about cloud computing, this is how it was supposed to work – you can get started easily and then buy facilities on the fly as you need them.  And I get that this is similar to AWS but AWS is selling a more raw level of service.  Heroku is tightly coupled into the tooling ecosystem so it just takes your application and makes it work.  With AWS I can still buy capacity dynamically but I have to work to make use of it.&lt;/p&gt;

&lt;p&gt;In closing, I can take some issue with the crappy nature of the error message and the fact that I had to google around to figure this out but their underlying way of handling it (just take away the INSERT permission when you don't have any more space) was just plain &lt;strong&gt;elegant&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Heroku&lt;/strong&gt;.  Absolutely, positively recommended.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/heroku/2019/10/25/heroku-is-amazing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/heroku/2019/10/25/heroku-is-amazing.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        <category>mysql</category>
        
        
        <category>heroku</category>
        
      </item>
    
  </channel>
</rss>
