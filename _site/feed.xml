<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff.  Ruby / Rails / Elixir.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 24 Sep 2016 16:02:01 -0400</pubDate>
    <lastBuildDate>Sat, 24 Sep 2016 16:02:01 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Why Old Engineers Are Cranky Engineers</title>
        <description>&lt;p&gt;I recently had an interaction with a younger software engineer and I’m pretty sure that his impression of me after that boiled down to &lt;em&gt;cranky old bastard&lt;/em&gt; and that would be the nice version.  The less nice version could easily have incorporated the words difficult, jerk and a few other bits of invective.&lt;/p&gt;

&lt;p&gt;The topic at hand was getting a commercial, for pay CI server up and running on a single Rails code base of moderate size (about 40 K lines; about 110 tables).  This is a well known, leading product and I was very, very difficult about my expectations:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I expected it to just plain work out of the box&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;He was stuck getting the configuration to work and I made it clear to him that I didn’t want him spending much more time on it.  He saw no problem with investing the time in it – and that was the conflict.  My logic goes as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We do not have a hard environment - Rails 4.2.x app, basic table structure&lt;/li&gt;
  &lt;li&gt;RSpec works pretty much right out of the box when I set up a new developer work station&lt;/li&gt;
  &lt;li&gt;They charge us money for this – doesn’t that mean that configuration is their damn job?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally I had to say to him something akin to this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You cost us roughly $3,000 per week so 1 day of your effort is $3,000 / 5&lt;/li&gt;
  &lt;li&gt;You have until the end of the day at that point we’re done with this vendor&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;crankiness-explained&quot;&gt;Crankiness Explained&lt;/h1&gt;

&lt;p&gt;The crankiness on my part comes from a combination of this particular vendor, partly from the unique snowflake attitude common to CI vendors, and partly from being older.  Here’s the details:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;This Vendor&lt;/em&gt;. The last time this vendor decided to change its architecture, it did so at the expense of its customers. They moved from static instances where your CI server was always the same box so configuration could be done at the box level to dynamically creating instances forcing configuration into your config file.  They kept their pricing the same but this move effectively made them more profitable since their AWS costs would now go down.  At one of my consulting gigs, I saw one of our engineers blow 2 man days on getting this back to a working state.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Snowflake&lt;/em&gt;. For some reason CI software never seems to work out of the box.  I’ve seen this for years in the Rails world dating back to CI Joe.  All the vendors have this attitude that they are some unique snowflake and lots of setup work is needed.  That might have been true once upon a time when TDD was new but it is 2016 now and TDD is not new.  CI is not a new concept.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;I’m older&lt;/em&gt;.  One of the things that happens as you become an older engineer is you realize just how many things that you – and your staff – miss out on thru obsessive attention to technology issues.  It isn’t that I’m incapable of configuring this piece of crap but that if I’m doing that I’m not doing the 10 other things that absolutely, positively have to get done today.  Ultimate the CI software needs to support my job and I don’t need to support it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;happy-conclusion&quot;&gt;Happy Conclusion&lt;/h1&gt;

&lt;p&gt;My asshole style demand – get it done by the end of the day – actually worked.  I absolutely hate to manage that way but forced time bounding can be a great technique at times.  We now have a CI server that is setup and that is excellent.  He really did do a good job.  We’re not 100% there yet because it is only checking pull requests and not master but hopefully that is a matter of only minor additional configuration.&lt;/p&gt;

&lt;h1 id=&quot;recommendation-to-vendors-and-an-example-of-doing-it-right&quot;&gt;Recommendation to Vendors And an Example of Doing it Right&lt;/h1&gt;

&lt;p&gt;Rightly or wrongly I don’t think I’m all that different from what a lot of people when it comes to evaluating software.  Getting a great out of the box experience is essential if you want someone to pay you.  If this was an open source CI server that I had to run myself I’d expect configuration but RSpec and Rails 4.x is a known thing.  This should have just worked.&lt;/p&gt;

&lt;p&gt;As an example of getting setup right, I’d like to point people to &lt;a href=&quot;http://www.codetree.com/&quot;&gt;CodeTree&lt;/a&gt;.  You can point CodeTree at your git account and boom!  It makes github issues better.  Can you configure it?  I think so but the point is that I haven’t needed to.  &lt;em&gt;Recommended.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Disclaimer: CodeTree is run by a former boss of mine and I do view him as a friend.&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/09/24/why-old-engineers-are-cranky-engineers.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/09/24/why-old-engineers-are-cranky-engineers.html</guid>
        
        <category>ci</category>
        
        <category>software_engineering</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>AWS Tutorial 09 - Deploying Rails Apps With Capistrano Take 1</title>
        <description>&lt;p&gt;In this tutorial we’re going to use the latest version of Capistrano to deploy your Rails app onto one or more EC2 instances.  I’m dividing this tutorial into two parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take 1 where a static set of boxes is encoded into your deploy/production.rb file&lt;/li&gt;
  &lt;li&gt;Take 2 where we call AWS apis to figure out what boxes to deploy to&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason for separating them is that take 2 will bring us much deeper into AWS API programming and concepts like tagging / IAM roles I wanted that to be highly separate from the guts of Capistrano.&lt;/p&gt;

&lt;h1 id=&quot;tools&quot;&gt;Tools&lt;/h1&gt;

&lt;p&gt;In this tutorial I’m going to be specific to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Capistrano&lt;/li&gt;
  &lt;li&gt;Passenger&lt;/li&gt;
  &lt;li&gt;Bundler&lt;/li&gt;
  &lt;li&gt;RVM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s my standard Rails stack and while other configurations will work, NGINX is a favorite of people, that’s the only stack I personally understand end to end.&lt;/p&gt;

&lt;h1 id=&quot;getting-started---add-capistrano-to-your-gemfile&quot;&gt;Getting Started - Add Capistrano to Your Gemfile&lt;/h1&gt;

&lt;p&gt;You’re going to want to use Capistrano 3.6 or later.  Earlier versions of Capistrano should work but, in my experience, Capistrano 3.6 is a much better release - it took me away from Vlad finally and for that I was glad.&lt;/p&gt;

&lt;p&gt;If your Gemfile you want something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :development do
  # Use Capistrano for deployment
  gem 'capistrano', &quot;3.6.1&quot;
  gem 'capistrano3-puma'
  gem 'capistrano-rails', require: false
  gem 'capistrano-bundler', require: false
  gem 'capistrano-rvm'
  gem 'capistrano-passenger'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that you want to run bundle install:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As long as this runs correctly you should be fine to move onto the next step.&lt;/p&gt;

&lt;h1 id=&quot;run-the-cap-install-command&quot;&gt;Run the Cap install Command&lt;/h1&gt;

&lt;p&gt;Capistrano requires a one time setup step.  Do this now:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cap install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This generates a file in the root of your Rails app called Capfile.  Open that file and uncomment these lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require 'capistrano/rvm'
require 'capistrano/bundler'
require 'capistrano/rails/assets'    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;modify-configdeployrb&quot;&gt;Modify config/deploy.rb&lt;/h1&gt;

&lt;p&gt;The file config/deploy.rb covers the application level configuration for deployment. In this file you need to add lines like the ones below but specific to your code base / toolset:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set :application, 'banks'
set :repo_url, 'git@github.com:appdatallc/banks.git'

set :ssh_options, {
  forward_agent: true,
  auth_methods: [&quot;publickey&quot;],
  keys: [&quot;#{Dir.home}/.ssh/fi_nav_sitecrawl.pem&quot;]
}

set :deploy_to, '/var/www/apps/banks'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;modifying-configdeployproductionrb&quot;&gt;Modifying config/deploy/production.rb&lt;/h1&gt;

&lt;p&gt;The file config/deploy/production.rb covers the servers you are deploying to in the production environment. If you’re setting up a staging server then there is a similar file in config/deploy/staging.rb.&lt;/p&gt;

&lt;p&gt;Before you start does this section I strongly, strong, strongly advice you to read my &lt;a href=&quot;https://fuzzygroup.github.io/blog/aws/2016/09/20/aws-tutorial-08-using-ssh-s-config-file-with-your-aws-boxes.html&quot;&gt;AWS Tutorial on the SSH Config file&lt;/a&gt;.  You can use the approach in that file to identify your boxes.  If you do then this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server 'ec2-52-41-237-52.us-west-2.compute.amazonaws.com', user: 'ubuntu', roles: %w{web app}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;would be replaced by this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server 'ficrawler1', roles: %w{web app}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Not only is this simpler to understand but it centralizes all your EC2 machine addresses in one place.  That’s a huge win.&lt;/p&gt;

&lt;p&gt;Regardless of the approach you decide to take, you need one line in this file for each EC2 instance along with the roles the instance provides.&lt;/p&gt;

&lt;h1 id=&quot;doing-a-deploy&quot;&gt;Doing a Deploy&lt;/h1&gt;

&lt;p&gt;Once all of this configured then you should be able to do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cap production deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to get your current code base onto all your boxes.  Please keep in mind that Capistrano executes everything via SSH and it generates a long stream of commands.  If you see errors then there are two things to understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Not every error may be significant and need to be addressed&lt;/li&gt;
  &lt;li&gt;If you are trying to track down an error then I would strongly recommend reducing the boxes you deploy to to just one and then redeploying.  This is much easier to troubleshoot exactly what is happening&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;p&gt;Here are some of the research sources I used in writing this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sitepoint.com/deploy-your-rails-app-to-aws/&quot;&gt;https://www.sitepoint.com/deploy-your-rails-app-to-aws/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-deploy-a-rails-app-with-puma-and-nginx-on-ubuntu-14-04&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-deploy-a-rails-app-with-puma-and-nginx-on-ubuntu-14-04&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/capistrano/bundler&quot;&gt;https://github.com/capistrano/bundler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/deploying-a-rails-app-on-ubuntu-14-04-with-capistrano-nginx-and-puma&quot;&gt;https://www.digitalocean.com/community/tutorials/deploying-a-rails-app-on-ubuntu-14-04-with-capistrano-nginx-and-puma&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/21259826/ruby-on-rails-capistrano-3-deployment-error&quot;&gt;http://stackoverflow.com/questions/21259826/ruby-on-rails-capistrano-3-deployment-error&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jyaasa.com/blog/deploying-rails-web-application-using-capistrano-bundler-and-rvm&quot;&gt;http://jyaasa.com/blog/deploying-rails-web-application-using-capistrano-bundler-and-rvm&lt;/a&gt; &amp;lt;== This is the best source&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://railsapps.github.io/installing-rails.html&quot;&gt;http://railsapps.github.io/installing-rails.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12967918/deploy-with-capistrano-using-a-pem-file&quot;&gt;http://stackoverflow.com/questions/12967918/deploy-with-capistrano-using-a-pem-file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9217868/deploying-ruby-on-rails-app-using-capistrano-cap-deploysetup-failing&quot;&gt;http://stackoverflow.com/questions/9217868/deploying-ruby-on-rails-app-using-capistrano-cap-deploysetup-failing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9277731/cap-generates-cannot-load-such-file-bundler-capistrano-loaderror&quot;&gt;http://stackoverflow.com/questions/9277731/cap-generates-cannot-load-such-file-bundler-capistrano-loaderror&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/15282532/capistrano-deploy-using-passenger-not-changing-release&quot;&gt;http://stackoverflow.com/questions/15282532/capistrano-deploy-using-passenger-not-changing-release&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/29241053/incomplete-response-received-from-application-from-nginx-passenger&quot;&gt;http://stackoverflow.com/questions/29241053/incomplete-response-received-from-application-from-nginx-passenger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://semaphoreci.com/community/tutorials/how-to-deploy-node-js-applications-with-capistrano&quot;&gt;https://semaphoreci.com/community/tutorials/how-to-deploy-node-js-applications-with-capistrano&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/aws/2016/09/23/aws-tutorial-09-deploying-rails-apps-to-aws-with-capistrano-take-1.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/aws/2016/09/23/aws-tutorial-09-deploying-rails-apps-to-aws-with-capistrano-take-1.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>aws</category>
        
        <category>capistrano</category>
        
        <category>deploy</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Software Engineering - Training a New Engineer the Outside In Way</title>
        <description>&lt;p&gt;This post is about training a new hire to do things the way you want them done.  Your way may not be the right way or even the current way but it is your way and that’s ok.  You know your code base better than the new hire and you know your environment.  Now that’s not to say that you should ignore their inputs by any means – they’re coming in with fresh eyes and that’s incredibly valuable.  Every engineer generally:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;is conservative by nature&lt;/li&gt;
  &lt;li&gt;falls into technical ruts&lt;/li&gt;
  &lt;li&gt;the more senior you are then the older you are and the more likely you are to fall victim to 1 and 2&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So please don’t dismiss what new hires bring to the table.&lt;/p&gt;

&lt;p&gt;Before we go further with how to train a new hire, we need to take a brief lesson in the economics of hiring a software engineer.  Let’s start with some assumptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;base salary: $100,000 U.S. per year&lt;/li&gt;
  &lt;li&gt;startup benefits: vacation, medical, etc.  For a startup this usually means 50% of the salary is spent additionally as benefits which means that this one engineer costs you 1.5 * 100,000 or $150,000 / year.&lt;/li&gt;
  &lt;li&gt;two weeks vacation per year; even if your policy is only 1 week when you factor in christmas, labor day, memorial day, etc, you’ll be lucky to get 50 weeks of “work” from them.&lt;/li&gt;
  &lt;li&gt;this new hire – who can’t do anything yet with your code base costs you – 150,000 / 50 or $3,000 per week.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let me put this differently to you:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Every week this new hire isn’t productive, you just threw out &lt;em&gt;2.3&lt;/em&gt; brand new macbooks (at the time of this writing a Macbook is $1299)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I don’t know an engineer in the world who would take 2.3 brand new laptops and throw them in the trash.  So then the question becomes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How can you make a new hire productive from day 1?&lt;/strong&gt;
&lt;strong&gt;How can you waste as few macbooks as possible?&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-outside-in-way&quot;&gt;The Outside In Way&lt;/h1&gt;

&lt;p&gt;Years and years ago I watched the onboarding (this was before I think I had even heard the term onboarding) process for a new engineer, let’s call him Dan, since that was his name, at a Cambridge, MA software company.  We were building a large (3.5 million lines of C code was our core code base) Windows NT application.  Dan was hired at a salary considerably higher than $100 K per year and I remember watching the process of getting the code base to build which kind of looked like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get the code checked out&lt;/li&gt;
  &lt;li&gt;Something he needed to change was exclusively locked by a remote guy in a different time zone so wait until tomorrow; the only person would could break the lock was Ed and&lt;/li&gt;
  &lt;li&gt;Go find Ed; Ed’s in a meeting; wait some more&lt;/li&gt;
  &lt;li&gt;Make some incremental progress; now we need Brian and he’s in transit to the Cambridge office from Ohio; wait again&lt;/li&gt;
  &lt;li&gt;Infrastructure issues; now we need Boris&lt;/li&gt;
  &lt;li&gt;Stuff isn’t documented well; only Jim would know and Jim’s, well Jim – you get time with him when he’s ready&lt;/li&gt;
  &lt;li&gt;Lather; Rinse; Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If my memory is correct it took about 4 weeks before Dan could actually compile the code base.  And he did do a lot of learning in the process but there was a lot of crap in that time period – a lot of long lunches and beer o’clock arrived early for Dan more than a few days.&lt;/p&gt;

&lt;p&gt;This was when I started to figure out what I call “Outside In”.  The core idea behind outside in is this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a new hire brings no knowledge on your code base&lt;/li&gt;
  &lt;li&gt;but they bring generally valuable industry level knowledge&lt;/li&gt;
  &lt;li&gt;apply their general knowledge to tasks related to your codebase but not IN your code base&lt;/li&gt;
  &lt;li&gt;ease them into the code base only after they’ve had some actual successes; I remember Dan, by the time he could finally build the code base, was just plain demoralized; you want to avoid that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Its very hard to learn a new code base and the time to do so is highly individual.  Trying to get a new hire to successfully make changes to your code base is almost impossible to get a metric on.  And since you, as a manager, don’t know their skills yet if they take a week to do something, is that fast or slow?  I’d argue that it is very, very hard to know.  But if you give them a task that you need done which doesn’t require any specific codebase learnings then you have something that you can get a metric on.&lt;/p&gt;

&lt;p&gt;This is the way I’ve now been training new hires for years.  There is always some task that every project needs which does not require any knowledge of your code base.  They are the things that you back burner consistently because while they are important, they aren’t that important and you can make do.&lt;/p&gt;

&lt;h1 id=&quot;examples-of-outside-in&quot;&gt;Examples of Outside In&lt;/h1&gt;

&lt;p&gt;Here some some examples of outside in tasks that I used recently:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get up an ec2 instance running graylog so we can have a shared log server – this teaches a new hire every box in your system and how logging works which is always useful&lt;/li&gt;
  &lt;li&gt;Make a rails based micro service which can accept an error call and send it onto honey badger- shows that a new hire can work independently enough to build something which stands on its own&lt;/li&gt;
  &lt;li&gt;Get &lt;a href=&quot;http://blog.krishnachaitanya.ch/2016/03/monitor-ec2-memory-usage-using-aws.html&quot;&gt;EC2 memory monitoring&lt;/a&gt; in place using the god awful perl code they supply&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yes some of this might be called “devops” or sys admin but in today’s world the gap between a software developer and dev ops has shrunk so considerably that I don’t think it matters any more.&lt;/p&gt;

&lt;h1 id=&quot;getting-them-into-the-actual-code&quot;&gt;Getting them Into the Actual Code&lt;/h1&gt;

&lt;p&gt;I usually put new hires through one to two weeks of outside in style tasks before I have them touch the actual code base.  And when they first do touch the code base it is always, always, always the same – &lt;strong&gt;test coverage&lt;/strong&gt;.  I’m sorry.  I know its ugly, crufty work but it is essential so its either fix the current set of failures or make stuff better by writing new tests.  The time period at this stage ranges from 1 to 3 weeks depending on the current state of the test suite.  After that it is pair programming on maintenance issues and then it goes like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UI stuff (views)&lt;/li&gt;
  &lt;li&gt;Controllers&lt;/li&gt;
  &lt;li&gt;Models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason for that order is that it tackles things in complexity from least abstract to most abstract.  UI stuff has widgets on screen that you can see.  Controllers are such a well understood pattern that they aren’t that different.  And models, well, that’s generally harder.&lt;/p&gt;

&lt;p&gt;The whole point here comes right back to where we started – &lt;strong&gt;economics&lt;/strong&gt;.  Every single week that new hire isn’t productive you just wasted some fraction of 2.3 macbooks.  I’ve spent virtually my whole career in startups and always on the poorly funded side of startups so to me that’s a lot of money.  Using this approach to onboarding new engineers, I’ve rarely if ever wasted a macbook.&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/09/22/software-engineering-training-a-new-engineer-the-outside-in-way.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/09/22/software-engineering-training-a-new-engineer-the-outside-in-way.html</guid>
        
        <category>software_engineering</category>
        
        <category>economics</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Elixir Tutorial 04 Actually Writing Some Code For Our Page Fetcher</title>
        <description>&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I’m very much figuring this out on the fly and you’re going to see stuff in here where you go “He’s wrong!  He’s flat out wrong!” and you might be right.  Heck you likely are right but keep reading because you’ll see corrections coming later in the piece.  I started to rewrite it but I thought that actually seeing the process might be useful since so many of us are at the “want to use elixir but don’t know how to get there” stage.&lt;/p&gt;

&lt;p&gt;So we’re now at the point of actually writing some crude, primitive code for our page fetcher.  Here’s what this needs to do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;connect to redis&lt;/li&gt;
  &lt;li&gt;run in an infinite loop&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;pop entries off a redis queue - entries will be a&lt;/td&gt;
          &lt;td&gt;separated chunk of data consisting of an id, a type and url&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;fetch the data from the internet&lt;/li&gt;
  &lt;li&gt;write it to a table based on the type (possibly; still thinking this thru as I write this out)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;an-infinite-loop-construct-in-elixir&quot;&gt;An Infinite Loop Construct in Elixir&lt;/h1&gt;

&lt;p&gt;Connecting to redis should be pretty simple so this brings us to the next step - running in an infinite loop.  Classically I’d do that as a while(true) type control structure but this is Elixir and its functional.  A bit of digging brings me to this &lt;a href=&quot;http://stackoverflow.com/questions/35364511/proper-elixir-otp-way-to-structure-an-infinite-loop-task&quot;&gt;Stack Overflow post&lt;/a&gt; where it makes a pretty good argument for this type of thing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def fetch_pages() do
  # get redis 
  # pop off redis
  # tokenize the bits from redis into variables
  # fetch the page
  # save the page
  fetch_pages()
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that would work nicely.  Since we’re dealing with tail recursion we don’t have to worry about blowing up the stack.&lt;/p&gt;

&lt;p&gt;As I look at this again I see clearly that connecting to redis should be taking out of the loop and the redis connection passed in since otherwise we’re connecting repeatedly and that would be wasteful or just plain dumb.  But before we get there let’s start with a simple question – where does our code actually go?  Right now we have a very simple structure and we want to work within lib/page_fetcher.ex.&lt;/p&gt;

&lt;p&gt;If you open this file you’ll find a basic module structure and a def start.  Let’s add a def fetch_pages do / end block above the start routine and let’s just add this one line within it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IO.puts &quot;Calling fetch_pages&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that’s not really good enough since it would be good to know that something is changing so why don’t we display the current date and time?  Another quick trip out to the Internet gives us this &lt;a href=&quot;http://stackoverflow.com/questions/28594646/getting-the-current-date-and-or-time-in-elixir&quot;&gt;page&lt;/a&gt; and teaches us we can get the current date and time in Unix milliseconds with :os.system_time(:milli_seconds).  Now that’s an Erlang primitive but Elixir runs on top of Erlang so it can call any and all of it easily.  So our new routine becomes this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def fetch_pages() do
  IO.puts(&quot;The fetch_pages/0 routine has just been called at #{:os.system_time(:milli_seconds)}&quot;)
  fetch_pages()
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll notice that string interpolation is actually the same as Ruby - #{} within a string.  That should make adapting to Elixir a bit easier.&lt;/p&gt;

&lt;p&gt;Now we want to see this actually run and the next step for that is to load the console and run it interactively.  So do the normal dance:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iex -S mix
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then enter:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PageFetcher.fetch_pages
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you’ll see a swath of lines like these:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The fetch_pages/0 routine has just been called at 1474506164424
The fetch_pages/0 routine has just been called at 1474506164424
The fetch_pages/0 routine has just been called at 1474506164425
The fetch_pages/0 routine has just been called at 1474506164425
The fetch_pages/0 routine has just been called at 1474506164425
The fetch_pages/0 routine has just been called at 1474506164425
The fetch_pages/0 routine has just been called at 1474506164425
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;getting-our-redis-crap-together&quot;&gt;Getting Our Redis Crap Together&lt;/h1&gt;

&lt;p&gt;Now that I’m at this stage I realize that I’m so used to using Redis using the Ruby primitives I’ve relied on for years that I’m a bit at a loss.  And this means what it always does a trip to the &lt;a href=&quot;https://github.com/artemeff/exredis&quot;&gt;documentation&lt;/a&gt;!  Here’s our canonical test case for redis:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;connect&lt;/li&gt;
  &lt;li&gt;push data in&lt;/li&gt;
  &lt;li&gt;fetch it back&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we can do that then its really all we need.  Here’s the code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:ok,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Exredis.start_link&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;push_result&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Exredis.Api.rpush(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;queue&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1|table|http://&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;pop_result&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Exredis.Api.rpop(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;queue&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What we’re seeing here, to analogize it back to Ruby again, is that Exredis is the main “object” and then Api is a set of methods chained on top of it.  Yes I know that’s not what is going on under the hood but this was an analogy.&lt;/p&gt;

&lt;p&gt;Technically since we’re only popping from a queue we didn’t have to know how to push stuff in but its the best way to test a queue based system and it is what I’ve been doing since the days of memcached to test any type of queue / key value store.&lt;/p&gt;

&lt;p&gt;If we want to write a function to connect to Redis then this is going to bring up the issue of &lt;a href=&quot;http://stackoverflow.com/questions/37445838/returning-values-in-elixir&quot;&gt;returning something&lt;/a&gt;, our redis client, from a method.  Since there is no explicit return statement, we simply need the client to be the last thing in our method so this should do it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def redis() do
  {:ok, client} = Exredis.start_link
  client
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ideally there should be code to make sure we actually got back a valid client, failure handling, etc but we’re just not there yet.&lt;/p&gt;

&lt;h1 id=&quot;a-quick-foray-into-string-parsing&quot;&gt;A Quick Foray into String Parsing&lt;/h1&gt;

&lt;p&gt;We can finally get away from StackOverflow with a dive into the Elixir Lang docs to look up how to split out a string using &lt;a href=&quot;http://elixir-lang.org/docs/stable/elixir/String.html#split/3&quot;&gt;Split/3&lt;/a&gt;.  This gives us:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pop_result = client |&amp;gt; Exredis.Api.rpop(&quot;queue&quot;)
&quot;1|table|http://&quot;
iex(9)&amp;gt; parts = String.split(pop_result, &quot;|&quot;)
[&quot;1&quot;, &quot;table&quot;, &quot;http://&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;So we can just use a String.split call with a&lt;/td&gt;
      &lt;td&gt;as the delimiter and that gives us back the result.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;This is the point where I need to get back to my day job but we’ve actually made some progress:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We know where to put our code&lt;/li&gt;
  &lt;li&gt;We know how to test our code in the console&lt;/li&gt;
  &lt;li&gt;We know how to talk to Redis&lt;/li&gt;
  &lt;li&gt;We know how to call Erlang functions from Elixir&lt;/li&gt;
  &lt;li&gt;We know how to parse our fetched chunk of data into a data structure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s the plan:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Next time we’ll try and put this all together and actually fetch the page&lt;/li&gt;
  &lt;li&gt;Next time + 1 we’ll try and store the page to the database; that’ll take us into Ecto&lt;/li&gt;
  &lt;li&gt;Next time + 2 we’ll try and get this running under OTP properly&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 22 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/elixir/2016/09/22/elixir-tutorial-04-actually-writing-some-code.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/elixir/2016/09/22/elixir-tutorial-04-actually-writing-some-code.html</guid>
        
        <category>elixir</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Notes from Elixir Remote Meetup</title>
        <description>&lt;p&gt;A few notes that came out of the Elixir Remote Meetup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chrome has audio issues; I was pointed to &lt;a href=&quot;https://vivaldi.com/?lang=en_US&quot;&gt;Vivaldi&lt;/a&gt; by a very helpful soul and that Chromium based browser fixed it.  Thanks!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://elixir-lang.slack.com/files/seancribbs/F2DTLM9PC/supervisors_links_monitors_-_sean_cribbs.pdf&quot;&gt;Great talk on Supervisors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/saaji/ex_par_execute&quot;&gt;Great talk on Parallel Execution&lt;/a&gt; &lt;a href=&quot;https://elixir-lang.slack.com/files/seancribbs/F2DTLM9PC/supervisors_links_monitors_-_sean_cribbs.pdf&quot;&gt;PDF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;There’s a slack room on &lt;a href=&quot;http://elixir-lang.slack.com&quot;&gt;elixir-lang.slack.com&lt;/a&gt; if you want to join&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bigmarker.com/remote-meetup/Elixir-Remote-Meetup-3&quot;&gt;There’s a recording you can watch!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to Josh Adams of Elixir Sips and the Daily Drip for hosting this.&lt;/p&gt;

&lt;p&gt;Suggestion to Josh Adams - Get a tshirt with your branding on it.  Wear it every time (the hat clearly bothered you but branding needs to be consistent to be effective).&lt;/p&gt;

</description>
        <pubDate>Wed, 21 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/elixir/2016/09/21/notes-from-elixir-remote-meetup.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/elixir/2016/09/21/notes-from-elixir-remote-meetup.html</guid>
        
        <category>elixir</category>
        
        <category>meetup</category>
        
        <category>remote</category>
        
        <category>josh_adams</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Gem Review Fuzzyurl Or How Do You Know if a Gem is Ready for Production Use?</title>
        <description>&lt;p&gt;&lt;strong&gt;Disclaimer 1&lt;/strong&gt;: Recently at ElixirConf I met Pete Gamache, the CTO of an Internet company and he showed me his Fuzzyurl Gem which is implemented in Ruby, JavaScript and Elixir.  Given my propensity for implementing crawlers / scrapers / content processors, I was immediately intrigued and it is a &lt;strong&gt;quality&lt;/strong&gt; bit of software.  Unfortunately in assessing it for our production use, I found a bug.  I have reported it as an issue and I’m sure it will get addressed, and there is an easy work around, but finding this bug raises the question of “How do you know if a gem is ready for production use?”  So I wanted to write this NOT to slam Pete’s work – which, again, is excellent – but to teach the point that you don’t blindly assume that code on the Internet always works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer 2&lt;/strong&gt;: Before I even could finish this post, Pete responded to the &lt;a href=&quot;https://github.com/gamache/fuzzyurl.rb/issues/2&quot;&gt;Github Issue&lt;/a&gt; I raised and it looks like he’s going to fix it.  Thanks man!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer 3&lt;/strong&gt;: Having added a new engineer recently this post is written for him so he understands that before you grab a new gem and rely on it willy, nilly, you put some consideration into it.  I actually think he knows this already but the engineer we hire after him?  Well that’s unknown so …&lt;/p&gt;

&lt;p&gt;So I recently found the ruby Gem &lt;a href=&quot;https://github.com/gamache/fuzzyurl.rb/&quot;&gt;Fuzzyurl&lt;/a&gt; by Pete Gamache and I am intrigued.  As part of my current work I am the mildly unhappy maintainer of massive class - roughly 5K lines dealing with nothing but url parsing and handling.  What you find, the moment you say “I’ll write a crawler”, is that most of the Internet is non RFC compliant and you’re dealing with a witches brew of nastiness.  Standard tools like URI.parse, &lt;em&gt;snort&lt;/em&gt;, well I might have some choice words for the author.  So when I found Pete’s work, the fact that it was implemented in Ruby, JavaScript and Elixir was intriguing to say the least.  Perhaps I might not have to port my url code to Elixir – that would be a huge win.  And since I’m pretty sure that Pete actually &lt;em&gt;designed&lt;/em&gt; this as opposed to the organic “here a problem; there a routine” approach I used to write my library, I’m pretty close to certain that it has to be better than mine.  Mine might handle a ton of weird edge cases but it was never designed – just implemented in a “&lt;a href=&quot;https://en.wikipedia.org/wiki/Root_hog,_or_die&quot;&gt;root, hog or die&lt;/a&gt;” fashion.&lt;/p&gt;

&lt;p&gt;So let’s return to the title of this blog post – How Do You Know if a Gem is Ready for Production Use?  There are a bunch of ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;read the code&lt;/li&gt;
  &lt;li&gt;read the tests&lt;/li&gt;
  &lt;li&gt;try and use it&lt;/li&gt;
  &lt;li&gt;try and use it exhaustively&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first thing to understand here is that this is a case where you absolutely need to &lt;em&gt;time bound&lt;/em&gt; things.  Time bounding is the practice where you decide, before you start, how much time you should allocate to something.  We all know that tasks involving computers tend to expand to fill the time available.  In my case I decided that this task, assessing if we could use Fuzzyurl in production, was worth an hour.  And I do know that’s light but it was what felt right.&lt;/p&gt;

&lt;p&gt;In an hour I can’t possibly read and understand parsing code.  I’ve written too much of it and I know how detailed it can get.  Reading the tests is another option and a better one.  Generally speaking if a gem is well tested, that bodes well for it being quality.  But I know how bad my input set of urls is.  I can guarantee that the random ass crap I have to encounter isn’t covered by tests.  So I’m left with either try and use it or try and use it exhaustively.&lt;/p&gt;

&lt;h2 id=&quot;try-and-use-it&quot;&gt;Try and Use It&lt;/h2&gt;

&lt;p&gt;A quick addition to the end of Gemfile and then the bundle install dance lets me restart console and try it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fu = Fuzzyurl.from_string(&quot;http://www.foo.com/&quot;)
{
    :protocol =&amp;gt; &quot;http&quot;,
    :username =&amp;gt; nil,
    :password =&amp;gt; nil,
    :hostname =&amp;gt; &quot;www.foo.com&quot;,
        :port =&amp;gt; nil,
        :path =&amp;gt; &quot;/&quot;,
       :query =&amp;gt; nil,
    :fragment =&amp;gt; nil
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that’s perfect.  Here’s a 1:1 comparison with URI.parse:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.3.1 :009 &amp;gt; fu = URI.parse(&quot;http://www.foo.com/&quot;)
#&amp;lt;URI::HTTP http://www.foo.com/&amp;gt;
2.3.1 :010 &amp;gt; fu.protocol
NoMethodError: undefined method `protocol' for #&amp;lt;URI::HTTP http://www.foo.com/&amp;gt;
	from (irb):10
	from /Users/sjohnson/.rvm/gems/ruby-2.3.1@banks/gems/railties-4.2.7/lib/rails/commands/console.rb:110:in `start'
	from /Users/sjohnson/.rvm/gems/ruby-2.3.1@banks/gems/railties-4.2.7/lib/rails/commands/console.rb:9:in `start'
	from /Users/sjohnson/.rvm/gems/ruby-2.3.1@banks/gems/railties-4.2.7/lib/rails/commands/commands_tasks.rb:68:in `console'
	from /Users/sjohnson/.rvm/gems/ruby-2.3.1@banks/gems/railties-4.2.7/lib/rails/commands/commands_tasks.rb:39:in `run_command!'
	from /Users/sjohnson/.rvm/gems/ruby-2.3.1@banks/gems/railties-4.2.7/lib/rails/commands.rb:17:in `&amp;lt;top (required)&amp;gt;'
	from bin/rails:4:in `require'
	from bin/rails:4:in `&amp;lt;main&amp;gt;'
2.3.1 :011 &amp;gt; fu.host
&quot;www.foo.com&quot;
2.3.1 :012 &amp;gt; fu.port
80
2.3.1 :013 &amp;gt; fu.scheme
&quot;http&quot;
2.3.1 :014 &amp;gt; fu.path
&quot;/&quot;
2.3.1 :017 &amp;gt; fu.query
nil
2.3.1 :018 &amp;gt; fu.fragment
nil
2.3.1 :019 &amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The only change that I would make here is that I would add an alias method on &lt;em&gt;protocol&lt;/em&gt; to &lt;em&gt;scheme&lt;/em&gt; which is what URI.parse calls protocol (personally I think Pete is actually right here – protocol is a better word – but if you added scheme as an alias – then you’re closer to being a drop in replacement for URI.parse).  Maybe I’ll submit a pull request perhaps.&lt;/p&gt;

&lt;p&gt;So now I know that Fuzzyurl works but anyone can type out a url - what about a real test case.&lt;/p&gt;

&lt;h2 id=&quot;try-and-use-it-exhaustively&quot;&gt;Try and Use it Exhaustively&lt;/h2&gt;

&lt;p&gt;One of the best and worst things about my job is that I’m never lacking for data.  We’re currently crawling about 1/4 terabyte of data monthly so at any given point I have access to N million urls.  So why not just try to feed say 250,000 urls thru Fuzzyurl and see what happens.  This gives this simple rake task:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;task :verify_fuzzy_url =&amp;gt; :environment do
  pages = Page.order(&quot;id asc&quot;).select(&quot;id, url, long_url_id&quot;).limit(250000)
  pages.each_with_index do |page, ctr|
    puts &quot;#{ctr} :: #{page.id} :: #{page.url}&quot;
    fu = Fuzzyurl.from_string(page.url.strip)
    puts &quot;    #{fu.hostname}&quot;
    raise &quot;error: #{fu}&quot; if fu.hostname.nil?
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Since all of these urls are supposed to be absolute urls we should always have a hostname and we’ll stop if we don’t.  Now we’ll need to examine the stop and make sure that the input wasn’t bad.  When we run this thru we hit a failure like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fu = Fuzzyurl.from_string(p.url)
ArgumentError: Couldn't parse url string: http://www.theintelligencer.net
from /var/www/apps/banks/shared/bundle/ruby/2.3.0/gems/fuzzyurl-0.9.0/lib/fuzzyurl/strings.rb:32:in from_string' from /var/www/apps/banks/shared/bundle/ruby/2.3.0/gems/fuzzyurl-0.9.0/lib/fuzzyurl.rb:169:infrom_string'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;p in this case was a page which a url which looked like “http://www.theintelligencer.net “.  That trailing space there is the reason for the failure.  I submitted a github issue and the author has agreed to address it when he has the time.  That’s a great response - even tho this isn’t technically a bug - since space characters are allowed as part of urls but since it does cause a failure, I appreciated him being willing to fix it.&lt;/p&gt;

&lt;p&gt;Now that I’ve used this a fair bit, a few of the errors I’ve seen with url processing comes back to my memory.  Here are a few common things you see in the wild that break URI.parse cold:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;trailing spaces&lt;/li&gt;
  &lt;li&gt;embedded spaces&lt;/li&gt;
  &lt;li&gt;missing ? before the &amp;amp; fragment&lt;/li&gt;
  &lt;li&gt;Using a &amp;amp; instead of a ?  (#s 3 and 4 may actually be one and then same)&lt;/li&gt;
  &lt;li&gt;Bad encoding&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s try a few of these:&lt;/p&gt;

&lt;h3 id=&quot;embedded-space&quot;&gt;Embedded Space&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url = &quot;http://fuzzygroup.github.io/blog/scott was here&quot;
&quot;http://fuzzygroup.github.io/blog/scott was here&quot;
2.3.1 :021 &amp;gt; fu = Fuzzyurl.from_string(url)
{
    :protocol =&amp;gt; &quot;http&quot;,
    :username =&amp;gt; nil,
    :password =&amp;gt; nil,
    :hostname =&amp;gt; &quot;fuzzygroup.github.io&quot;,
        :port =&amp;gt; nil,
        :path =&amp;gt; &quot;/blog/scott was here&quot;,
       :query =&amp;gt; nil,
    :fragment =&amp;gt; nil
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;instead-of--before-the-fragment&quot;&gt;&amp;amp; Instead of ? Before the Fragment&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url = &quot;http://fuzzygroup.github.io/blog/scott was here&amp;amp;foo=bar&quot;
&quot;http://fuzzygroup.github.io/blog/scott was here&amp;amp;foo=bar&quot;
2.3.1 :023 &amp;gt; fu = Fuzzyurl.from_string(url)
{
    :protocol =&amp;gt; &quot;http&quot;,
    :username =&amp;gt; nil,
    :password =&amp;gt; nil,
    :hostname =&amp;gt; &quot;fuzzygroup.github.io&quot;,
        :port =&amp;gt; nil,
        :path =&amp;gt; &quot;/blog/scott was here&amp;amp;foo=bar&quot;,
       :query =&amp;gt; nil,
    :fragment =&amp;gt; nil
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Overall Fuzzyurl is just plain a fantastic bit of code.  It handles most of the common cases that break URI.parse.  Here are a few suggestions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add an alias method called parse for from_string  That lets Fuzzyurl be used as a drop in replacement for URI.parse&lt;/li&gt;
  &lt;li&gt;Add support for a call back function so you could register your own pre-processor to clean up a url before it gets parsed.  When implementing this type of library I understand the desire to follow the standards and only modify them slightly for common edge cases.  But there are so many ways to craft a crappy url in this Internet of ours that if you simply allow for a pre-processor routine then you can always say “there’s an api for extending this, use it.”&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 20 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/09/20/how-do-you-know-if-a-gem-is-ready-for-production-use.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/09/20/how-do-you-know-if-a-gem-is-ready-for-production-use.html</guid>
        
        <category>ruby</category>
        
        <category>gem</category>
        
        <category>software_engineering</category>
        
        <category>gem_review</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>AWS Tutorial 08 - Using SSH's Config File with Your AWS Boxes</title>
        <description>&lt;p&gt;Disclaimer: If you’re a hard core Unix head then this can easily be skipped. However if your knowledge of SSH extends to “config file – what?” then it likely is worth a read.&lt;/p&gt;

&lt;p&gt;SSH is one of those core bits of the modern computing world that we all rely on and don’t even think about.  And, like all such technologies, there is a lot to SSH under the hood.  The aspect I’m going to focus on here is the SSH config file and how it can make your AWS development life easier.&lt;/p&gt;

&lt;p&gt;Let’s start with how I first logged into one of my production AWS boxes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -i ~/.ssh/my_pem_file.pem ubuntu@ec2-52-39-100-178.us-west-2.compute.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That certainly works but it is &lt;strong&gt;long&lt;/strong&gt;.  And where you have length then you may the chance for error.  And then when you need to transfer a file from server to client (or vice versa) then you need to rewrite it like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -i ~/.ssh/my_pem_file.pem ubuntu@ec2-52-39-100-178.us-west-2.compute.amazonaws.com:/tmp/foo.txt ~/Downloads
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;the-ssh-config-file&quot;&gt;The SSH Config file&lt;/h1&gt;

&lt;p&gt;In your ~/.ssh directory there is a file named, simply enough, &lt;strong&gt;config&lt;/strong&gt;.  The config file stores a series of entries related to the the host you want to log into.  Here’s an example of what logging in using a config file is like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh mariadb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here is an example of scp’ing a file down to your local box:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp mariadb:/tmp/foo.txt ~/Downloads
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So that is a clear advantage but how do we get there?&lt;/p&gt;

&lt;p&gt;You need to edit the file ~/.ssh/config.  Do that now with nano or another editor:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nano -w ~/.ssh/config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You need to create an entry that looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host THE_NAME_YOU_IDENTIFY_THIS_ENTRY_BY
  Hostname YOUR_REALLY_LONG_EC2_HOST_NAME
  user SOME_USERNAME
  IdentityFile PATH_TO_A_PEM_FILE
  Port 22 (this is almost always 22)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s an actual example for one of my EC2 boxes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host mariadb
  Hostname ec2-52-39-100-178.us-west-2.compute.amazonaws.com
  user ubuntu
  IdentityFile /Users/sjohnson/.ssh/fi_nav_sitecrawl.pem
  Port 22
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this is telling ssh is pretty simple:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;identify everything by mariadb&lt;/li&gt;
  &lt;li&gt;when called log into the hostname ec2-52-39-100-178.us-west-2.compute.amazonaws.com&lt;/li&gt;
  &lt;li&gt;when called use the username ubuntu&lt;/li&gt;
  &lt;li&gt;when called use the /Users/sjohnson/.ssh/fi_nav_sitecrawl.pem to establish the user’s identity&lt;/li&gt;
  &lt;li&gt;when called use port 22&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, as illustrated above, this will work whether for SSH or SCP.&lt;/p&gt;

&lt;p&gt;SSH is one of those rich deep tools where there is always something more to learn.  Here are some resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/&quot;&gt;http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-configure-custom-connection-options-for-your-ssh-client&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-configure-custom-connection-options-for-your-ssh-client&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://michaelheap.com/ssh-config-files/&quot;&gt;http://michaelheap.com/ssh-config-files/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 20 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/aws/2016/09/20/aws-tutorial-08-using-ssh-s-config-file-with-your-aws-boxes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/aws/2016/09/20/aws-tutorial-08-using-ssh-s-config-file-with-your-aws-boxes.html</guid>
        
        <category>aws</category>
        
        <category>ssh</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>A Father's Guide to Surviving Disney World</title>
        <description>&lt;p&gt;I’m writing this from Orlando, Florida where we’re on our fourth trip to &lt;a href=&quot;http://www.disneyworld.com/&quot;&gt;DisneyWorld&lt;/a&gt;.  Now I realize that to the true &lt;em&gt;Disney faithful&lt;/em&gt;, four trips ins’t a lot, it feels like enough for me to write this with some degree of authority.  My wife is one of the true Disney faithful and all of this really comes from her one way or another.So here you go – &lt;strong&gt;how to survive DisneyWorld&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Note: All my Disney experiences have been at DisneyWorld in Orlando Florida.  Almost all of this would be applicable to any Disney theme park but I only know DisneyWorld so its written from that perspective.&lt;/p&gt;

&lt;h1 id=&quot;abandon-all-cost-concerns-ye-who-enter-disney&quot;&gt;Abandon All Cost Concerns Ye Who Enter Disney&lt;/h1&gt;

&lt;p&gt;I originally titled this section, &lt;em&gt;It’s going to cost more than you imagined&lt;/em&gt; and both titles are accurate.  DisneyWorld which was originally envisioned by Walt Disney as a cost effective family vacation has become a &lt;strong&gt;premier vacation destination&lt;/strong&gt; and the pricing reflects that.  The bottom line here is that you are going to spend more than you want and the overall experience will be worth it. I’ve been there and I’ve never regretted a dime that we spent at DisneyWorld but, man alive, it &lt;em&gt;costs&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;get-an-early-morning-start&quot;&gt;Get an Early Morning Start&lt;/h1&gt;

&lt;p&gt;So there are two things you need to understand about Orlando:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Its hot; the closer it gets to noon, the hotter it gets&lt;/li&gt;
  &lt;li&gt;The lines are the shortest first thing in the morning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My wife is a huge fan of &lt;em&gt;rope drop&lt;/em&gt; or getting into the park literally the moment the rope drops.  That way you can race to the rides you care about and generally get on them without lines, fast passes or any waiting at all.&lt;/p&gt;

&lt;p&gt;Overall an early morning start just makes your Disney experience better.  If you only take one thing away from this article, take that.&lt;/p&gt;

&lt;h1 id=&quot;no-small-children&quot;&gt;No Small Children&lt;/h1&gt;

&lt;p&gt;One of the biggest mistakes I see other parents make is bringing small children to Disney World.  Now when I say small, I mean under about 7 years old.  I know the parents think “Disney.  Kids.  Great Pictures.  Cuteness Galore!!!”  And that is true.  But what’s also true are diapers, strollers and putting small children into a 90 plus degree temperature environment for hours on end.  And what you see are frustrated parents and kids screaming or crying or both.  We held off going for years until our youngest was over 7 years old and that was a fantastic decision.&lt;/p&gt;

&lt;h1 id=&quot;trip-planning-is-key&quot;&gt;Trip Planning is Key&lt;/h1&gt;

&lt;p&gt;If you have ever thought “I know we’ll goto DisneyWorld and it will be easy!” then I have to disagree with you.  I’ve watched my wife plan multiple trips and it is anything but easy.  There are hundreds if not thousands of options and even things like “&lt;a href=&quot;https://www.google.com/search?q=disneyworld+should+I+get+the+dining+plan&amp;amp;oq=disneyworld+should+I+get+the+dining+plan&amp;amp;aqs=chrome..69i57j0l2.10451j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;Do we get the meal plan are widely debated&lt;/a&gt; (6.6 million hits on that Google search)”.&lt;/p&gt;

&lt;p&gt;Here are a few things to consider:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The amount of information about planning a Disney vacation is staggering.  There are literally dozens of hard core disney fanatic web sites which are an awesome resource.&lt;/li&gt;
  &lt;li&gt;The time of year is key.  Crowds at DisneyWorld are huge and picking the right time of year can make a big difference.  Happily there are resources like &lt;a href=&quot;http://wdwprepschool.com/disney-world-crowd-calendar-for-the-2016-2017-school-year/&quot;&gt;this&lt;/a&gt;.  And there are &lt;a href=&quot;https://www.undercovertourist.com/orlando/crowd-calendar/&quot;&gt;others&lt;/a&gt; of course.&lt;/li&gt;
  &lt;li&gt;If you can find a Disney fan, someone who really, really cares about Disney, then they can help you have an amazing trip&lt;/li&gt;
  &lt;li&gt;DisneyWorld is now an ecosystem of sorts - massive amounts of information, apps that analyze things, etc.  And there’s a whole language of things that make no sense outside of Disney - FastPass anyone?&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;app-up&quot;&gt;App Up!&lt;/h1&gt;

&lt;p&gt;One of the things that has really surprised me is the quantity and quality of apps that can really make your trip better.  Here are the apps that my wife and I use every single time.  All apps below are listed for iOS but most have equivalents for Google Play&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/my-disney-experience-walt/id547436543?mt=8&quot;&gt;My Disney Experience&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/disney-world-lines-from-touringplans.com/id411091283?mt=8&quot;&gt;WDW Lines&lt;/a&gt; (pricey; read below)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/wait-times-for-disney-world/id321601474?mt=8&quot;&gt;Wait Times&lt;/a&gt; (not always accurate&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/magic-guide-for-disney-world/id365817457?mt=8&quot;&gt;Magic Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The WDW Lines app offers in app purchase for its line info on all rides (some are included in the free app) and the price seems a bit steep - $12.99 for a year’s worth of data.  And, yes, I balked at this the first few times and then I thought about it – &lt;em&gt;I’m spending $thousands$ on this vacation - another $12.99 isn’t going to hurt me&lt;/em&gt;.  And I paid.&lt;/p&gt;

&lt;h1 id=&quot;gear-up&quot;&gt;Gear Up!&lt;/h1&gt;

&lt;p&gt;One of the things that has made my trips more successful is putting together a small &lt;strong&gt;nerd bag of doom&lt;/strong&gt; or all the gear that techno dad needs to be successful.  Here’s what’s in mine:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-17 17.16.32.jpg&quot; alt=&quot;2016-09-17 17.16.32.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Explanation:&lt;/p&gt;

&lt;p&gt;All of this fits into a teeny, tiny bag and goes a long way towards travelling well.  Here’s the inventory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A - Tiny travel sack.  More elegant than a zip lock but that would work just fine.&lt;/li&gt;
  &lt;li&gt;B - Nail clippers.  Useful for cutting the zip ties in k.  There is always a use for zip ties. This trip they closed a bag with a broken zipper.&lt;/li&gt;
  &lt;li&gt;C - Batteries.  Yes you can buy them there but you might find yourself scouring the resort late at night to find them.  Easier to bring a small handful.&lt;/li&gt;
  &lt;li&gt;D - Penlight.  Yes your phone has a flashlight but its crappy compared to something purpose built.&lt;/li&gt;
  &lt;li&gt;E - Multi function screw driver.  I got this one at Menards for like $2 and it does flat, phillips and two flavors of torx.&lt;/li&gt;
  &lt;li&gt;F - USB Charging cable.  Useful for kindles, Beats pill, etc.&lt;/li&gt;
  &lt;li&gt;G - This is a Belkin multiple outlet with dual usb port mini power strip.  It is awesome.&lt;/li&gt;
  &lt;li&gt;H - Extra headphones so that a small child’s cartoons don’t drive you absolutely insane.&lt;/li&gt;
  &lt;li&gt;I - Business cards because you never know who you will meet.&lt;/li&gt;
  &lt;li&gt;J - Lighting cable for iPhone charging (technically what is shown is a micro usb but it should be at least one lightning cable here; all of them were, at the time of the picture, charging various i devices).&lt;/li&gt;
  &lt;li&gt;K - Zip ties because, well, zip ties.&lt;/li&gt;
  &lt;li&gt;L - Mini stand for propping up a tablet for watching videos.&lt;/li&gt;
  &lt;li&gt;M - Pocket multi tool with attached flashlight.  &lt;a href=&quot;http://reddit.com/r/edc&quot;&gt;Reddit’s /r/edc&lt;/a&gt; is the goto source if you like miniture tools; edc = every day carry - things small enough you can carry them every day.&lt;/li&gt;
  &lt;li&gt;N - Three to two prong adapter. This will let you plug in something like the powerstrip into a recessed airport outlet like one in the floor.&lt;/li&gt;
  &lt;li&gt;O - Pocket knife for, well, anything.&lt;/li&gt;
  &lt;li&gt;P - HooToo Tripmate.  This is an absolutely, outstanding, tremendously wonderful product that I have fallen in love with. What you see here is a teeny, tiny wifi hub that shares usb sticks with movies on them for viewing on an iPad.   &lt;a href=&quot;https://blog.codinghorror.com/your-own-personal-wifi-storage/&quot;&gt;Jeff&lt;/a&gt; said it better but &lt;a href=&quot;http://fuzzygroup.github.io/blog/wifi/2016/09/17/tripmate-titan-instructions.html&quot;&gt;I said it shorter&lt;/a&gt;.  Follow these links and then just &lt;a href=&quot;http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20&quot;&gt;buy one from Amazon&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;always-look-up&quot;&gt;Always Look Up&lt;/h1&gt;

&lt;p&gt;One of my wife’s favorite phrases at DisneyWorld is “always look up”.  Here are some examples:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-13 11.00.06.jpg&quot; alt=&quot;2016-09-13 11.00.06.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-13 11.03.09.jpg&quot; alt=&quot;2016-09-13 11.03.09.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-16 11.23.50.jpg&quot; alt=&quot;2016-09-16 11.23.50.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-16 11.26.10.jpg&quot; alt=&quot;2016-09-16 11.26.10.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-17 09.57.21.jpg&quot; alt=&quot;2016-09-17 09.57.21.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-17 10.44.55.jpg&quot; alt=&quot;2016-09-17 10.44.55.jpg&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;managing-i-want-i-want-i-want&quot;&gt;Managing I Want, I Want, I Want&lt;/h1&gt;

&lt;p&gt;Taking kids to DisneyWorld is a bit like taking an addict into a drug den.  All you’re going to hear is “I want”, “I want”, “I want” and, as a parent, its frustrating as heck.  Here’s how my wife and I handle it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Say no to everything for the first two days&lt;/li&gt;
  &lt;li&gt;Give each kid a gift card with an amount on it on the third day&lt;/li&gt;
  &lt;li&gt;Tell them “once its out then you’re done and I’m not buying you anything”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason for not giving it to them on the first few days is that you want them to understand that you don’t buy the first thing you see.  Please note that this lesson is received best if Mom and Dad follow this rule also.  The amount you set will depend on you and your kids.  Personally I wouldn’t do less than $30 / kid but it also depends on how many kids you have. If you have 6 kids then, well, ouch!  If you’re going to take this approach then you need to be hands off and let your kids make bad purchases.  Then you have a great teachable moment when they regret spending money on something foolish.&lt;/p&gt;

&lt;h1 id=&quot;line-management-or-motion-is-happiness&quot;&gt;Line Management or Motion is Happiness&lt;/h1&gt;

&lt;p&gt;In today’s DisneyWorld, 2016, it isn’t uncommon to see a 65 plus minute wait for a top tier ride like Seven Dwarves Mine Train. And here’s what I’ve found about dealing with lines in DisneyWorld:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Motion is Happiness&lt;/p&gt;

&lt;p&gt;No one, not the most devoted Disney fan, is actually happy when waiting on line. No matter how magical Disney is, a 65 minute wait is just simply just a sucky experience.  What you’ll find is that wait times vary dramatically and go up and down.  So if you have an app which tracks wait times, you can notice “oh wow People Mover is now only 10 minutes” and just rush over to it.&lt;/p&gt;

&lt;p&gt;You’ll find that your kids will often fixate on particular rides and want to ride things at a given time.  &lt;strong&gt;No&lt;/strong&gt;.  I repeat &lt;strong&gt;no&lt;/strong&gt;.  Motion really is happiness at DisneyWorld so take rides when they are available.  Don’t pass up a ride when the line is small.  We did this yesterday when we actually did want to ride People Mover and 15 minutes later it was a 25 minute wait.&lt;/p&gt;

&lt;h1 id=&quot;the-right-shoes&quot;&gt;The Right Shoes&lt;/h1&gt;

&lt;p&gt;Walking around DisneyWorld basically amounts to traversing a concrete jungle – honestly there is a just a ton of walking.  My wife’s fitbit normally hits 20,000 steps by late afternoon.  And, having brought more comfortable shoes to my wife, yesterday, when I met her at the park, I’m more convinced than ever about the need for excellent shoes.  And since that is highly variable from person to person all I can really say here is picture whatever shoe your feet can be in for hours upon hours and then wear that shoe.  I’d recommend something with arch support personally but that’s just me.&lt;/p&gt;

&lt;h1 id=&quot;do-evening-events-with-care-if-at-all&quot;&gt;Do Evening Events with Care if At All&lt;/h1&gt;

&lt;p&gt;There are a ton of amazing things to do at DisneyWorld during the evenings.  The problem is that if you have kids, by the time the night time events roll around all the kids want to do is lie around and watch TV or play video games and you, the parent, is like &lt;em&gt;But we paid for this cool thing; get off your butt and come along!!!&lt;/em&gt;  We’ve now tried to do evening events on almost every trip and they always end up with one parent at the event and the other parent at the hotel with whatever kid is exhausted and that’s no fun for Mom and Dad.  So here are two thoughts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ease into evening events with only 1 per trip.&lt;/li&gt;
  &lt;li&gt;If you are going to try to do evening events, you should do them at the beginning of your trip when you’re not just plain exhausted as you will be by the end of the trip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I wrote the section above prior to Saturday night when we attended the Club Villain event which was just outstanding and while what I wrote is true, Club Villain was amazingly good and it has made me rethink my previous position.&lt;/p&gt;

&lt;h1 id=&quot;carrying-less-is-happiness&quot;&gt;Carrying Less is Happiness&lt;/h1&gt;

&lt;p&gt;I always see people carrying big bags, backpacks, etc and I wonder just what they have in them.  Personally I never carry anything more than an almost empty backpack and even that is sometimes too much.  Right now to get into DisneyWorld you have to go thru:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ticket check&lt;/li&gt;
  &lt;li&gt;bag check&lt;/li&gt;
  &lt;li&gt;metal check; this is a &lt;em&gt;random&lt;/em&gt; pick that I somehow got selected for every time I entered one of the parks except for one time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can eliminate one of those by not having a bag at all then its one less step to worry about.  And, as covered below, Orlando is hot.  The less you carry the happier you will be.&lt;/p&gt;

&lt;h1 id=&quot;getting-your-kids-to-carry-the-stuff&quot;&gt;Getting Your Kids to Carry The Stuff&lt;/h1&gt;

&lt;p&gt;I’m a firm believer that requiring more of your kids is ultimately good for them.  So I think that if you have a bag or a misting fan or whatever, you should divide responsibility among your kids.  Usually this will cause no end of whining or kid1 shoving it over to kid2 and so on.  Here’s what I did this trip to get my kids to deal better with this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set iPhone timer to 15 minutes with a distinctive ring tone&lt;/li&gt;
  &lt;li&gt;Give it to Kid1&lt;/li&gt;
  &lt;li&gt;When timer goes off give it to Kid 2&lt;/li&gt;
  &lt;li&gt;Take a turn after Kid2&lt;/li&gt;
  &lt;li&gt;Repeat until back in hotel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your mileage may vary but it worked for me.&lt;/p&gt;

&lt;h1 id=&quot;dining-if-you-have-a-favorite-meal-or-kids&quot;&gt;Dining If You Have a Favorite Meal or Kids&lt;/h1&gt;

&lt;p&gt;The Disney dining experience is generally excellent.  One unfortunate thing that we have noticed, however, is that the menus change regularly.  My wife suffers from celiac disease which generally means that there is only 1 or 2 things on most menus that she can eat.  And if those options change it can actually be pretty disappointing.  If you want to avoid this, the menus for every single restaurant, food kiosk and more are online in the My Disney Experience.  And given that kids can often be pretty picky eaters, its not a bad idea to preview the menu before you go.&lt;/p&gt;

&lt;h1 id=&quot;take-taxis-or-uber-when-youre-beat&quot;&gt;Take Taxis or Uber When You’re Beat&lt;/h1&gt;

&lt;p&gt;There are generally three main modes of transportation at DisneyWorld:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Monorail&lt;/li&gt;
  &lt;li&gt;Boat&lt;/li&gt;
  &lt;li&gt;Bus&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The dominant mode of transport is the &lt;strong&gt;bus&lt;/strong&gt; and while they can be excellent, they also can be late and they can be slow.  Given that all the buses are free, a frugal father might want to use them exclusively.  This, alas, is a false economy.  Given the amount of money that you will have invested in your Disney vacation, waiting an hour to deal with a slow bus ride can actually be a large chunk of time.  The taxis are actually quite good and Uber is another option.  I never had a ride from park to hotel run more than $20.  When the entire family is exhausted and you just discovered the Monorail is mysteriously closed then spending $15 on a taxi is a great use of funds.&lt;/p&gt;

&lt;h1 id=&quot;eat-lightly-or-mastering-the-disney-5&quot;&gt;Eat Lightly or Mastering the Disney 5&lt;/h1&gt;

&lt;p&gt;My wife and I jokingly refer to the &lt;em&gt;Disney 5&lt;/em&gt; or the five pounds that it seems you put on after a week at Disney.  We generally, for convenience, use the dining plan and there is a ton of food provided.  However, lately we’ve taken to treating the dining plan much like tapas - a few bites or this, a few bites of that; we just don’t finish our plates anymore.  It isn’t an economic way to do things but you don’t end up so full and feeling so fat afterwards.  If you’re looking for good information about the economics of the dining plan then the ever superb EasyWDW always has &lt;a href=&quot;http://www.easywdw.com/easy/blog/figuring-out-if-one-of-the-disney-dining-plans-make-sense-for-your-group/&quot;&gt;something good to read&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;dealing-with-the-heat&quot;&gt;Dealing with the Heat&lt;/h1&gt;

&lt;p&gt;The Orlando heat and humidity can be relentless.  Normally we go in the fall when you would think that it wouldn’t be so bad but that’s just not true.  And while my wife thrives in the heat, I, like many basement dwelling, light phobic technology nerds, can find it a bit much.  Listed below are some of the tips that I have figured out to manage the heat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some friends of our family recently went to DisneyWorld this past summer and they came back to tell us that it hit 114 degrees one day.&lt;/p&gt;

&lt;h2 id=&quot;always-walk-in-the-shade&quot;&gt;Always Walk in the Shade&lt;/h2&gt;

&lt;p&gt;The single best thing you can do is simple – walk in the shade.  Depending on the time of day you will find that there is always shade.  Now you might have to walk contrary to the flow of traffic but people do do it and its ok.  Shade is really, really important at DisneyWorld.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/surviving-disney-world/2016-09-11 11.05.50.jpg&quot; alt=&quot;2016-09-11 11.05.50.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;wear-white-not-black&quot;&gt;Wear White not Black&lt;/h2&gt;

&lt;p&gt;I know my audience for this is another dad and I suspect a technically minded individual.  And I know that you understand that black is the absolute worst color to wear in the heat.  But even if you do understand this, your children may not.  Both my kids, this last trip, managed to pack almost all black wardrobes.  Oy.  Wear white people!  It reflects the sun not absorbs it!&lt;/p&gt;

&lt;h2 id=&quot;hat-and-sunglasses&quot;&gt;Hat and Sunglasses&lt;/h2&gt;

&lt;p&gt;I know this is obvious but your kids may not think to pack a ball cap or sunglasses.  Make sure you have them prior to the trip otherwise your talking a $30 pair of glasses plus a $30 ball cap – for a 9 year old.  And for best luck fighting the head the ball cap should be white not black.&lt;/p&gt;

&lt;h2 id=&quot;bandana-around-the-head&quot;&gt;Bandana Around the Head&lt;/h2&gt;

&lt;p&gt;My classic technique for beating the heat when I labor outdoors is the Bandana around the temple soaked in cold water.  I know, I know – I look like a refugee from a 1980s rock video but it does work.  I haven’t had to do it yet at DisneyWorld but I can sense it coming.&lt;/p&gt;

&lt;h2 id=&quot;take-the-mid-afternoon-break&quot;&gt;Take the Mid Afternoon Break&lt;/h2&gt;

&lt;p&gt;Your approach to theme parks may vary but, at least for my family, we find a mid afternoon break to be essential.  When the clock hits one or two, its time to go back to the hotel for air conditioning, the pool or just plain down time.  We go back out around three or four and everyone is refreshed, happy and far less cranky.  Please note that this reduced crankiness includes the author.&lt;/p&gt;

&lt;h2 id=&quot;leverage-small-world-for-a-break&quot;&gt;Leverage Small World for a Break&lt;/h2&gt;

&lt;p&gt;If you’re at the Magic Kingdom then one of the best rides, when you’re hot and tired, is Small World.  While Small World isn’t an exciting ride by any means, it is a wonderfully pleasant experience and it has some wonderful attributes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Great air conditioning&lt;/li&gt;
  &lt;li&gt;About 11 minutes in length&lt;/li&gt;
  &lt;li&gt;Moderately comfortable seating&lt;/li&gt;
  &lt;li&gt;Gives a great way to talk to kids about racism and why Walt Disney made the ride in the first place&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every trip we’ve made to DisneyWorld, except for this one, has featured multiple rides on Small World.  Why not this one?  Alas its closed for renovations.&lt;/p&gt;

&lt;p&gt;Please bear in mind that every Disney park has some ride that’s the equivalent of Small World in this regard.  Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Magic Kingdom - Small World, Hall of Presidents, Carousel of Progress&lt;/li&gt;
  &lt;li&gt;Epcot - Spaceship Earth, Three Caballeros&lt;/li&gt;
  &lt;li&gt;Hollywood Studios - Muppet*Vision 3D&lt;/li&gt;
  &lt;li&gt;Animal Kingdom - Primeval Whirl&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hydrate-hydrate-hydrate&quot;&gt;Hydrate, Hydrate, Hydrate&lt;/h2&gt;

&lt;p&gt;Once again we return to the theme of Orlando is &lt;strong&gt;hot&lt;/strong&gt;.  So drink up!  Depending on the hotel you may get free bottles of water in the morning and you can always bring them to the park to save some money.&lt;/p&gt;

&lt;h2 id=&quot;a-misting-fan-is-your-ally&quot;&gt;A Misting Fan is Your Ally&lt;/h2&gt;

&lt;p&gt;You’ll find these blue plastic fan / water bottles sold through out the parks for about $19.  And you’d think “too much money” but they really do work well.  Cheap bastard that I am, I kept it from my very first trip and we’re still using it.  If you really want to level up your usage of this then put in the fridge overnight or load it with ice cubes (or both).&lt;/p&gt;

&lt;h2 id=&quot;sometimes-a-line-is-ok&quot;&gt;Sometimes a Line is Ok&lt;/h2&gt;

&lt;p&gt;Despite what I’ve written about avoiding lines, when a line lets you avoid the heat, it is a viable tactic.  The lines are almost always in shade and they are invariably air conditioned.&lt;/p&gt;

&lt;h1 id=&quot;bring-a-jacket&quot;&gt;Bring a Jacket&lt;/h1&gt;

&lt;p&gt;Given how much I’ve written about the pervasive heat and humidity in Orlando you might be surprised to find me closing this essay with “Bring a Jacket” but it is unfortunately true.  The air conditioning indoors in Orlando is as pervasive as the heat is outdoors and I find my normal indoor state is either chilly, cold or too cold.  You might be different but I’ve never traveled here without a fleece and I’ve never regretted it.&lt;/p&gt;

&lt;h1 id=&quot;postscript-1-the-disney-doctor&quot;&gt;Postscript 1: The Disney Doctor&lt;/h1&gt;

&lt;p&gt;Heaven forbid you get sick at DisneyWorld but it has happened twice to my youngest – strep throat once and food poisoing a the second time.  Luckily one of the maids turned us onto Resort Physicians – an old fashioned, honest to goodness, house call.  A fantastic doctor came to our room, took care of us and managed to save what was left of the vacation.  And, ever since, I’ve kept his business card close since I knew we’d be going back again. Here are the details if you need a great doctor at DisneyWorld in Orlando:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Resort Physicians
Thomas Blehl
407-465-0000 (office)
407-399-9190 (mobile)
tblehl@resortphysicians.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;postscript-2-packing-list&quot;&gt;Postscript 2: Packing List&lt;/h1&gt;

&lt;p&gt;Here’s my packing list for a disney trip.  This section likely needs a bit more work so keep that in mind.&lt;/p&gt;

&lt;p&gt;Things You Bring:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;jacket / fleece&lt;/li&gt;
  &lt;li&gt;bathing suits; the pools generally are excellent&lt;/li&gt;
  &lt;li&gt;a 4 pack of Ramen noodles; our youngest has gotten seriously sick at the parks twice and ramen is his “I’m sick” food&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Things You Bring to the Park:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;misting fan&lt;/li&gt;
  &lt;li&gt;good shoes with arch suports&lt;/li&gt;
  &lt;li&gt;advil / tylenol / both&lt;/li&gt;
  &lt;li&gt;bandaids and neosporin&lt;/li&gt;
  &lt;li&gt;hat / sunglasses per person&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 19 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/09/19/a-father-s-guide-to-surviving-disney-world.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/09/19/a-father-s-guide-to-surviving-disney-world.html</guid>
        
        
      </item>
    
      <item>
        <title>Quick Tip - How to Get the Best Hotel Wifi at Disney</title>
        <description>&lt;p&gt;It seems to be an axiomatic rule of the universe that no one is is ever happy with connectivity when traveling.  One tip that works fantastically well for improving your connectivity when traveling, however, is this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get Up Early&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m writing this from DisneyWorld and I’ve had ok luck with connectivity so far during the day but the mornings have been just plain outstanding.  I’m normally up by between 3 and 4 and what I have found is that connectivity is always best prior to 7 am.  That’s when people seem to get up and everything grinds to a halt.  I’ve been up working now for about an hour and the wifi is just plain screaming along.  I’ve watched 60 plus photos sync to DropBox while I started this post – its why I realized it.&lt;/p&gt;

</description>
        <pubDate>Sun, 18 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/wifi/2016/09/18/quick-tip-how-to-get-the-best-hotel-wifi-at-disney.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/wifi/2016/09/18/quick-tip-how-to-get-the-best-hotel-wifi-at-disney.html</guid>
        
        <category>wifi</category>
        
        <category>disney</category>
        
        
        <category>wifi</category>
        
      </item>
    
      <item>
        <title>Tripmate Titan Instructions</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://blog.codinghorror.com/your-own-personal-wifi-storage/&quot;&gt;Jeff, over at CodingHorror&lt;/a&gt;, recently turned me onto the TripMate Titan which is a tiny wifi hub which lets you plugin a USB stick that can be shared to your iPad.  This, coupled with the File Explorer app, lets your kid watch all of their programs without:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;having to sync them onto an iPad or Kindle&lt;/li&gt;
  &lt;li&gt;having to have an iPad with lots of pricey storage&lt;/li&gt;
  &lt;li&gt;having to have them all in the precise mp4 format that Apple has blessed - MKV?  AVI?  MOV?  No problem!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is a $40 product you can get from &lt;a href=&quot;http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20&quot;&gt;Amazon&lt;/a&gt; and it is &lt;strong&gt;brilliant&lt;/strong&gt;.  Best little hardware gadget I’ve bought in 2016 by far.&lt;/p&gt;

&lt;p&gt;So I’ve bought one, compiled a USB stick of the kid’s favorite shows and taken it away from home on vacation.  The only real issue that I’ve had is that using it takes a few discrete steps that last night, when I was exhausted, I bungled thus delaying watching by my boys.  Now Jeff’s post, linked above, covers all of this in exhaustive detail.  What’s listed below is the cliff notes version:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Turn TripMate on by pressing center button and holding for 3 seconds.&lt;/li&gt;
  &lt;li&gt;In wifi settings &lt;strong&gt;connect&lt;/strong&gt; to the device; it will be labeled TripMateSith-xxx.  The password is &lt;strong&gt;11111111&lt;/strong&gt; (8 ones).&lt;/li&gt;
  &lt;li&gt;In File Explorer add a &lt;strong&gt;windows share&lt;/strong&gt; if you don’t have one already.  This needs to be an ip address of &lt;strong&gt;10.10.10.254&lt;/strong&gt; with a username of &lt;strong&gt;admin&lt;/strong&gt; and &lt;strong&gt;NO PASSWORD&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Open the right folder and enjoy some form of media goodness.&lt;/li&gt;
  &lt;li&gt;Turn it off by pressing and holding down for 3 seconds.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: You can use the built in admin tool to customize these settings and Jeff recommends it.  Me?  Eh.  I figured just write them down.&lt;/p&gt;

&lt;p&gt;I can see all kinds of uses for this including putting movies from a family trip onto a USB stick to view via an iPad.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/wifi/2016/09/17/tripmate-titan-instructions.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/wifi/2016/09/17/tripmate-titan-instructions.html</guid>
        
        <category>wifi</category>
        
        <category>tripmate</category>
        
        
        <category>wifi</category>
        
      </item>
    
  </channel>
</rss>
