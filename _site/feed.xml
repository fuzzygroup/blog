<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff.  Ruby / Rails / Elixir.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 07 Sep 2016 05:48:54 -0400</pubDate>
    <lastBuildDate>Wed, 07 Sep 2016 05:48:54 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Dear Apple Please Make iTunes Sync Suck Less</title>
        <description>&lt;p&gt;Dear Apple,&lt;/p&gt;

&lt;p&gt;I love you dearly – you know that.  I’ve been running a Mac since the Mac Plus days and while my attentions have strayed from time to time, in my house there are more boxes running some kind of Apple OS than any other.  And while I’d love to see a better phone, longer battery life, etc, there’s just one thing I really want:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Make iPhone Syncing Less of an Absolute Suck Fest!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is 5:30 am as I write this and I’ve been sitting at my wife’s computer for the past hour trying to get her iPhone to sync properly so that if she can buy a new phone there will be no data loss.  This is exactly how I spent the day of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;iPhone 4 launch&lt;/li&gt;
  &lt;li&gt;iPhone 5 launch&lt;/li&gt;
  &lt;li&gt;iPhone 6 launch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, while I’m used to this, it doesn’t make it suck any less.  It is also how I spent yesterday morning when all my attempts to sync her phone came to naught.  And while you know these, &lt;em&gt;why, oh dear lord, why&lt;/em&gt; does synching an iPhone in 2016 suck so much more than synching my PalmPilot III in 1998?&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/200px-Palm_III_24.jpg&quot; alt=&quot;Synch Used to Work Well!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s how things use to work back in the day:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;put palm pilot in cradle&lt;/li&gt;
  &lt;li&gt;press button&lt;/li&gt;
  &lt;li&gt;done!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And while I remember an occasional conflict, mostly due to editing contact info on desktop and palm pilot concurrently, it wasn’t the unending suck fest that iPhone synch has become.&lt;/p&gt;

&lt;p&gt;Here, for example, was yesterday:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;issues with some photo / video that wouldn’t move over so I had to synch the pictures by batches until the offending bit of data was skipped over&lt;/li&gt;
  &lt;li&gt;some apps weren’t synched because of computer authorization&lt;/li&gt;
  &lt;li&gt;2 songs were lost because she had exceeded her 5 computer authorization limit&lt;/li&gt;
  &lt;li&gt;the synch never finished because the machine ran out of space partway through&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last one, running out of space, is particularly egregious – you know how big the damn device is, its size.  If there isn’t a multiple of that size in free disc space then simply don’t start the synch!  Don’t let it fail part of the way through!&lt;/p&gt;

&lt;p&gt;Mobile devices are no longer a new concept.  Synch should be painless.  It should be plug in a cable, leave the device alone and its done.  Instead synching an iPhone is always &lt;strong&gt;connect and pray&lt;/strong&gt;.  And while I have nothing against prayer, it shouldn’t be a requirement to use a mobile device.  Honestly, after yesterday and today, I sort of feel that this should be my new iPhone synch process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kneel&lt;/li&gt;
  &lt;li&gt;Pray&lt;/li&gt;
  &lt;li&gt;Go in backyard&lt;/li&gt;
  &lt;li&gt;Sacrifice goat in dead of night while changing&lt;/li&gt;
  &lt;li&gt;Connect lightning cable&lt;/li&gt;
  &lt;li&gt;Chant&lt;/li&gt;
  &lt;li&gt;Hope for the best&lt;/li&gt;
  &lt;li&gt;Repeat until synched&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So while I’d love to see a waterproof iPhone or wireless charging or something else, I’d settle for the product that I paid good money for just working a little better.&lt;/p&gt;

&lt;p&gt;– Scott&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/iphone/2016/09/07/dear-apple-please-make-itunes-sync-suck-less.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/iphone/2016/09/07/dear-apple-please-make-itunes-sync-suck-less.html</guid>
        
        <category>iphone</category>
        
        <category>osx</category>
        
        
        <category>iphone</category>
        
      </item>
    
      <item>
        <title>AWS - An Example of Development Speed with AWS</title>
        <description>&lt;p&gt;Just as an example of how fast things can happen in the AWS world, I skyped over to a colleague “I think we need another crawling box” at 3:48 am this morning.  Then I took care of it and got that box up and running.  My response back to him was at 4:09 am.  So 12 + 9 or 21 minutes total to go from a 5 node installation to a 6 node installation.  Coming from the world of traditional hosting where the flow is more like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;email hosting company&lt;/li&gt;
  &lt;li&gt;explain what is needed&lt;/li&gt;
  &lt;li&gt;go back and forth a few times&lt;/li&gt;
  &lt;li&gt;wait a day or two&lt;/li&gt;
  &lt;li&gt;run chef on the box to configure everything and have it half broken at the end because, well, chef&lt;/li&gt;
  &lt;li&gt;fix it manually&lt;/li&gt;
  &lt;li&gt;get code deployed&lt;/li&gt;
  &lt;li&gt;deal with randomness&lt;/li&gt;
  &lt;li&gt;get it running&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My usual turn around time on getting a new box is close to a week when all is said and done so 21 minutes feels like, well, &lt;strong&gt;magic&lt;/strong&gt;.  And, honestly, I could have done it faster.  I muddled about a bit, checked mail, read a tweet or two, etc.  Now if I had properly scripted everything, this could have been probably less than 5 minutes end to end.  I’m not yet at that point in my AWS journey (still using the AWS web tools step by step).&lt;/p&gt;

</description>
        <pubDate>Wed, 07 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/aws/2016/09/07/aws-an-example-of-development-speed.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/aws/2016/09/07/aws-an-example-of-development-speed.html</guid>
        
        <category>aws</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - rake spec</title>
        <description>&lt;p&gt;The command &lt;strong&gt;rake spec&lt;/strong&gt; runs your rspec test suite.  The equivalent in the Elixir world is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rake-spec.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rake-spec.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - rake db:migrate</title>
        <description>&lt;p&gt;In the Rails world, rake db:migrate stands for “migrate the database and execute the latest migrations”.  In the Elixir world the &lt;strong&gt;mix&lt;/strong&gt; command fills the role that the rake and rails executables used to.  The equivalent in the Elixir world is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix ecto.migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rake-db-migrate.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rake-db-migrate.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - rails new</title>
        <description>&lt;p&gt;Rails new is the command which generates a new Rails project.  The equivalent would be the phoenix new command.  Here is the equivalent:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phoenix.new project_name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Other things to know:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix phoenix.new --help

mix phoenix.new project_name --database mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.phoenixframework.org/docs/up-and-running&quot;&gt;Reference&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rails-new.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rails-new.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - rails g migration something_to_change</title>
        <description>&lt;p&gt;In the Rails world, rails g migration something_to_change means  db:migrate stands for “migrate the database and execute the latest migrations”.  In the Elixir world the &lt;strong&gt;mix&lt;/strong&gt; command fills the role that the rake and rails executables used to.  The equivalent in the Elixir world is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix ecto.gen.migration something_to_change
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rails-g-migration-something-to-change.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rails-g-migration-something-to-change.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - rails c</title>
        <description>&lt;p&gt;rails c, the Rails Console, is one of those canonical things in the rails world - it launches the rails console with all your objects loaded.&lt;/p&gt;

&lt;p&gt;The elixir equivalent to this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iex -S mix
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This compiles your project and is a great way to quickly test your code.  If the console comes up then you don’t have any syntactic errors&lt;/p&gt;

&lt;p&gt;Just as, in the Rails world, you can run irb, you can also just run iex:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iex
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This won’t compile anything and its a fast way to test basic elixir snippets.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rails-c.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-rails-c.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - bundle install</title>
        <description>&lt;p&gt;The command bundle install tells your ruby / rails application to read the Gemfile and install or update the components in Gemfile.  The elixir equivalent to Gemfile is mix.exs and the command to update it is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix deps.get
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A sample mix.exs file looks quite different from Gemfile.  Here’s an example of just the &lt;strong&gt;defp deps&lt;/strong&gt; method where the equivalent to gems are listed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defp deps do
  [{:mariaex, &quot;&amp;gt;= 0.0.0&quot;},
   {:ecto, &quot;~&amp;gt; 2.0&quot;},
   {:aws, &quot;~&amp;gt; 0.2.0&quot;}]
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-bundle-install.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/06/rails2elixir-bundle-install.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Practical Things Learned at ElixirConf</title>
        <description>&lt;p&gt;Its been a few days since ElixirConf and I was reflecting on the practical stuff I learned.  Yes I saw the grand vision driving things but I’m always more concerned about the little stuff because everything you build is entirely dependent on the little stuff.  Attribution given by name only since I don’t want to call anyone out.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;It’s real&lt;/strong&gt;.  People are really using this in production which means that I can too.  Just knowing that is huge.  Thanks Ben!&lt;/li&gt;
  &lt;li&gt;Deploy is still kind of a mess.  At least one company I met is handling deploy via building it into containers and then deploying the containers.  Again thanks to Ben!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hex.pm/packages/timex&quot;&gt;Timex&lt;/a&gt; is the rough equivalent to the Rails ActiveSupport Time.now style stuff.  That’s huge since I rely on that constantly.&lt;/li&gt;
  &lt;li&gt;Despite the above comment on Timex, I was advised that datetime stuff is kind of a mess and “just get the unix epoch from the server and do with it what you will”.  I don’t know how to reconcile this yet but I’m sure I will.  Thanks Pete!&lt;/li&gt;
  &lt;li&gt;As with Rails development local development using containers “just doesn’t feel right”.  Not terribly surprising given how many times I’ve tried to get a full rails stack running for local development using Docker and how many times I’ve failed.&lt;/li&gt;
  &lt;li&gt;Ecto is surprisingly robust and I’m looking forward to using&lt;/li&gt;
  &lt;li&gt;There are starting to be lots of good development tools including an &lt;a href=&quot;https://github.com/KronicDeth/intellij-elixir&quot;&gt;IntelliJ plugin for Elixir&lt;/a&gt;.  This is the first time I’ve ever even considered a JetBrains product so that’s surprising.  Hat tip to &lt;a href=&quot;https://github.com/KronicDeth&quot;&gt;KronicDeath&lt;/a&gt; who I’m pretty sure I had dinner with; its all a bit blurry now in retrospect.&lt;/li&gt;
  &lt;li&gt;I purely can’t wait to start using &lt;a href=&quot;https://github.com/gamache/fuzzyurl.ex&quot;&gt;FuzzyUrl&lt;/a&gt;  I’ve written a lot of this kind of code over the years.  Curious to see how it compares (hint - this will be better)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/elixir/2016/09/06/practical-things-learned-at-elixircon.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/elixir/2016/09/06/practical-things-learned-at-elixircon.html</guid>
        
        <category>elixir</category>
        
        <category>elixirconf</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Notes from My ElixirConf Trip Report at Indianapolis Meetup</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Background: 10 years doing ruby / 9 years doing rails; I tired of crap performance and unreliability; mostly a consultant&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Six months of mucking with elixir so I sent myself to elixirconf to force myself to get started&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Overview: Its real&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;People are actually using it&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I expected Rails 1 and got Rails 3 (level of finish)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deploy is still hard (expected)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Great training class - sonny scrogson highly recommended&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Big changes coming to phoenix&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Personality - “Get Off My Beam” erlang folks versus “Beam for Millenials”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Talented, smart, helpful, nice community&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Big emphasis on documentation – replaces the rails focus on TDD&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Hex.pm is immature
    &lt;ul&gt;
      &lt;li&gt;Use erlang libraries versus 0.1x elixir&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DRY is no longer the motto&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Surprising thing for me was boyd multerer
    &lt;ul&gt;
      &lt;li&gt;nerves - 16 K for a full fault tolerant embedded stack&lt;/li&gt;
      &lt;li&gt;former architect of xbox live&lt;/li&gt;
      &lt;li&gt;could have chosen anything he wanted&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/elixir/2016/09/06/notes-from-my-elixirconf-trip-report-at-indianapolis-meetup.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/elixir/2016/09/06/notes-from-my-elixirconf-trip-report-at-indianapolis-meetup.html</guid>
        
        <category>meetup</category>
        
        <category>elixir</category>
        
        
        <category>elixir</category>
        
      </item>
    
  </channel>
</rss>
