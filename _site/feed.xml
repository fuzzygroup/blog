<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>https://fuzzyblog.io/blog/</link>
    <atom:link href="http://fuzzyblog.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 05 May 2020 05:03:56 -0400</pubDate>
    <lastBuildDate>Tue, 05 May 2020 05:03:56 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Six Tips on Inventing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2998.jpg&quot; alt=&quot;IMG_2998.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From Alan Adler, inventor of the Aeropress and the Aerobie flying ring courtesy of &lt;a href=&quot;https://priceonomics.com/the-invention-of-the-aeropress/&quot;&gt;Priceonomics&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Learn all you can about the science behind your invention.&lt;/li&gt;
  &lt;li&gt;Scrupulously study the existing state of your idea by looking at current products and patents.&lt;/li&gt;
  &lt;li&gt;Be willing to try things even if you aren't too confident they’ll work. Sometimes you’ll get lucky.&lt;/li&gt;
  &lt;li&gt;Try to be objective about the value of your invention. People get carried away with the thrill of inventing and waste good money pursuing something that doesn’t work any better than what’s already out there.&lt;/li&gt;
  &lt;li&gt;You don’t need a patent in order to sell an invention. A patent is not a business license; it’s a permission to be the sole maker of product (even this is limited to 20 years).&lt;/li&gt;
  &lt;li&gt;Tenacity is vital.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 05 May 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/inventing/2020/05/05/six-tips-on-inventing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/inventing/2020/05/05/six-tips-on-inventing.html</guid>
        
        <category>inventing</category>
        
        
        <category>inventing</category>
        
      </item>
    
      <item>
        <title>Adventures in Below Ground Plumbing - The Lift Pump</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3178.jpeg&quot; alt=&quot;IMG_3178.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've now owned a few different homes over the years but my current home is the first one with a bathroom that is below ground level (in a finished basement).  When you have a bathroom below ground level then your plumbing subsystem has to have a &quot;lift pump&quot;.  A lift pump system consists of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A sump in the floor where sewage (water / the other stuff) collects&lt;/li&gt;
  &lt;li&gt;A pump that lifts the sewage up to the ground level where it can flow into the street level outflow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A lift pump has a duty cycle of 8 to 10 years.  A lift pump has a replacement price of approximately $1,500 so these things are expensive.&lt;/p&gt;

&lt;h2 id=&quot;things-you-cant-flush-with-a-lift-pump&quot;&gt;Things You Can't Flush with a Lift Pump&lt;/h2&gt;

&lt;p&gt;You can't flush:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kitty Litter&lt;/li&gt;
  &lt;li&gt;Flushable Wipes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-know-when-you-have-a-problem-with-your-lift-pump&quot;&gt;How to Know When You Have a Problem with your Lift Pump&lt;/h2&gt;

&lt;p&gt;Here are three symptoms of failure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Smell&lt;/strong&gt;.  A bad lift pump reveals itself with a fairly rank odor in the lower region of the house centered around the machinery room where the lift pump is located.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leakage&lt;/strong&gt;.  Leakage from the sealed sump where the lift pump is located.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Noise&lt;/strong&gt;.  Many lift pump systems will have an alarm on them that beeps when there is an issue.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;two-ways-to-fix-a-difficult-lift-pump&quot;&gt;Two Ways to Fix a Difficult Lift Pump&lt;/h2&gt;

&lt;p&gt;There are at least two failure symptoms with a lift pump:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pump doesn't work at all (no noise when you power cycle it)&lt;/li&gt;
  &lt;li&gt;Pump works but you can't flush a toilet / have water backup / sump leakage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are two approaches to fixing the second:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Turn it off and let it sit for a number of days.  Just as a clogged toilet will magically &quot;fix&quot; itself when left alone, so too will a lift pump that is clogged.  The blockage often dissolves.&lt;/li&gt;
  &lt;li&gt;Lift the Vertical Pipe up and down and &quot;shake&quot; it.  The lift pump itself is directly coupled to the vertical pipe and if you lift it up and down / shaking it, you can often dislodge the blockage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank You&lt;/h2&gt;

&lt;p&gt;I learned all of this from David, a technician at Benjamin Franklin Plumbing who serviced my house today.  The $49 for the service call for him to tell me this much was much, much preferable to the $1500 fee for a new lift pump.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/home_ownership/2020/04/28/adventures-in-below-ground-plumbing-the-lift-pump.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/home_ownership/2020/04/28/adventures-in-below-ground-plumbing-the-lift-pump.html</guid>
        
        <category>home_ownership</category>
        
        <category>plumbing</category>
        
        
        <category>home_ownership</category>
        
      </item>
    
      <item>
        <title>How to Find the Latest Version of a File on OSX Using mdfind</title>
        <description>&lt;p class=&quot;center&quot;&gt;«««&amp;lt; HEAD&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/IMG_3178.jpeg&quot; alt=&quot;IMG_3178.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;=======
»»»&amp;gt; 4cbbc577cf49ce99e5aaf8b73f0396e50651d3a9
I recently wanted to find the latest version of a library I wrote and I started by using mdfind:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind -name select_page_parser.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then added xargs per this article:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind -name select_page_parser.rb -0 | xargs -0 ls -t
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 26 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/04/26/how-to-find-the-latest-version-of-a-file-on-osx-using-mdfind.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/04/26/how-to-find-the-latest-version-of-a-file-on-osx-using-mdfind.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Covid and Your Personal Bus Factor</title>
        <description>&lt;p&gt;In the world of software engineering, the term &lt;strong&gt;Bus Factor&lt;/strong&gt; refers to the number of people on your team that have to get hit by a bus for your project to collapse:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bus factor is a measurement of the risk resulting from information and capabilities not being shared among team members, derived from the phrase &quot;in case they get hit by a bus.&quot; It is also known as the bread truck scenario, lottery factor, truck factor, bus/truck number, or lorry factor.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am currently a part of a number of projects with a bus factor of 1.  This means that if I get hit by a bus things simply &lt;strong&gt;fall&lt;/strong&gt; apart.  Normally I don't worry about things like this because I'm in excellent health and I'm a careful person (and that is not to say that I'm invulnerable but at least professionally my clients accept that we have a bus factor of 1 because they must understand this issue).  But the world has changed around me and like everyone else I am struggling to catch up hence this bit of writing.&lt;/p&gt;

&lt;p&gt;Someone close to me, last night, had both a fever and an upset stomach (both of these are diagnostic factors of COVID-19) and I woke up in a panic thinking about bus factors in three contexts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Personal&lt;/li&gt;
  &lt;li&gt;Professional&lt;/li&gt;
  &lt;li&gt;Side Projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're not a tech nerd then you can only read the personal section; if you are a tech nerd then I advise that you read all sections.&lt;/p&gt;

&lt;h2 id=&quot;your-personal-bus-factors&quot;&gt;Your Personal Bus Factors&lt;/h2&gt;

&lt;p&gt;Your personal bus factors tend to be centered around matters of identity:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passwords&lt;/li&gt;
  &lt;li&gt;Pin Codes&lt;/li&gt;
  &lt;li&gt;Process&lt;/li&gt;
  &lt;li&gt;Medication Documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example - I don't know the password / pin code to my wife's phone or laptop.  If she gets sick then I have to still pay bills and deal with accounts.  And without access to that information, well, &lt;strong&gt;I'm fscked&lt;/strong&gt; (and thus so is the family hence my view of this as a bus factor).&lt;/p&gt;

&lt;p&gt;Now, given the sensitivity of the information on our phones and devices, having access to someone's phone password can be terrifying so I don't normally have an issue with not having access – but these aren't normal times.  Years ago when my wife brought this up to me about my work computers, I gave her all my passwords in written form in a sealed envelope and I suspect I now need to ask her for the same.  I only need this information if she gets sick so hopefully the envelope never needs to be opened.&lt;/p&gt;

&lt;p&gt;Along with passwords and pin codes in terms of a personal bus factor goes the &lt;strong&gt;process&lt;/strong&gt; by which things are done.  Due to personal choices regarding separation of responsibilities, I have literally no knowledge of how to pay our bills.  My wife is a wonderfully responsible human being who, years ago, got us entirely out of debt and so she took on the bill paying responsibilities.&lt;/p&gt;

&lt;p&gt;A final, unique aspect of the bus factor in today's world is documentation related to any medications that either you or people in your family take.  What's happening right now is people are getting sick and going into the hospital without anyone accompanying them – which is unprecedented.  And here's where the bus factor aspect comes into play – I have no understanding of what medications my wife takes (nor she of mine).  So the advice that you need is to, &lt;strong&gt;right now&lt;/strong&gt;, to write down, on paper, all the medical information and medications that you take.  Anything that you would want to tell a medical professional before they performed medicine on you.  Now this may sound silly but it actually isn't – my wife is deathly allergic to Penicillin – it almost killed her as a child.  If she fell ill then how does that get communicated to a doctor if I can't accompany her?  And, yes, that is something that I know but what are the odds that if this wasn't written down, today, that I remember that amidst the stress of a possible COVID-19 case.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If you have elderly parents, you likely need this information for them as well.  Ideally a power of attorney and / or knowing their desires should things go poorly would be good as well.  I hate, truly hate the last sentence I just wrote but the approximately 15% mortality rate among the elderly means that you need to deal with these difficult issues in advance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you haven't walked thought the &lt;a href=&quot;https://covidnearme.org/risk/welcome&quot;&gt;Covid Near Me's Risk Wizard&lt;/a&gt; then I'd recommend that you give that a shot as it is truly frightening and cites the appropriate medical sources.&lt;/p&gt;

&lt;h2 id=&quot;your-professional-life&quot;&gt;Your Professional Life&lt;/h2&gt;

&lt;p&gt;I am currently, as I have almost always been in my career, a technical lead on a poorly staffed project.  There are several aspects to bus factor on software projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Knowledge&lt;/li&gt;
  &lt;li&gt;DNS entries&lt;/li&gt;
  &lt;li&gt;AWS PEM files&lt;/li&gt;
  &lt;li&gt;SSH Public Keys&lt;/li&gt;
  &lt;li&gt;Shared Secrets / Passwords like account information, API keys&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: There are lots of aspects to bus factors in terms of a project; I've deliberately simplified this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: My first foray into professional computing was a sales funded company and, thus, &lt;strong&gt;poorly&lt;/strong&gt; staffed.  I got good, early on at doing much with very little and I've ended up following a path that always hewed towards interesting work albeit with resource constraints.&lt;/p&gt;

&lt;h3 id=&quot;knowledge&quot;&gt;Knowledge&lt;/h3&gt;

&lt;p&gt;If you are an organization and you have a single engineer on a project, well, I simply don't have much sympathy because you made an inherent organizational level decision that you are immune to bus factors.  Sigh.  But things to consider:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Build Processes&lt;/li&gt;
  &lt;li&gt;Deployment&lt;/li&gt;
  &lt;li&gt;How to Tackle Daily Tasks&lt;/li&gt;
  &lt;li&gt;What Happens at Year End (often times there are dependencies / manual tasks that need to happen tied to calendar year events)&lt;/li&gt;
  &lt;li&gt;System Architecture&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dns-entries&quot;&gt;DNS Entries&lt;/h3&gt;

&lt;p&gt;Ideally DNS entries are regarded as corporate assets and someone other than a lead engineer owns them.&lt;/p&gt;

&lt;h3 id=&quot;aws-pem-files&quot;&gt;AWS PEM Files&lt;/h3&gt;

&lt;p&gt;Note: Depending on how you structure security on AWS the following may or may not be true.  My current project is at the small scale, proof of concept stage so crucial steps like real IAM setup has not been done; doing that for real would obviate this section.&lt;/p&gt;

&lt;p&gt;When you create an instance on AWS, AWS issues you a &quot;.pem&quot; file which is a one time download that allows you to SSH into an instance.  The easiest way to avoid a bus factor issue here is to, &lt;strong&gt;securely&lt;/strong&gt;, provide it to at least one other team member.&lt;/p&gt;

&lt;p&gt;Note: Email is not secure.  If you deliver it via email then zip it and put a password on it.&lt;/p&gt;

&lt;h3 id=&quot;ssh-public-keys&quot;&gt;SSH Public Keys&lt;/h3&gt;

&lt;p&gt;AWS .pem files provide SSH access into an AWS instance.  But the world is larger than just AWS and classical systems administration techniques always work so another approach is to simply add another person's SSH public key into the authorized_keys file on each server.&lt;/p&gt;

&lt;h3 id=&quot;shared-secrets--passwords--resources&quot;&gt;Shared Secrets / Passwords / Resources&lt;/h3&gt;

&lt;p&gt;Given the prevalence of using third party services for almost any aspect of software development these days, you need to be really careful how accounts / api keys / resources are managed.  Here's an example on my current project:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We use the magnificent tool that is Uptime Robot for uptime monitoring (i.e. &quot;is the site currently running&quot;).&lt;/li&gt;
  &lt;li&gt;All those notifications, however, exist on my personal uptime robot account and all notifications go only to my phone.&lt;/li&gt;
  &lt;li&gt;If I leave the project all that disappears.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The answer as to why I used Uptime Robot and my personal account is simple – it was easy.  I don't have a credit card for organizational use so use of a paid tool wasn't simple (yes I could have begged for card credentials on someone else's card but that complicates everything and we don't really need uptime monitoring yet).  It was just easier to add this to my personal account.  And, yes, I do know better; ease of use tends to trump just about everything when people are busy.&lt;/p&gt;

&lt;h2 id=&quot;your-side-projects&quot;&gt;Your Side Projects&lt;/h2&gt;

&lt;p&gt;Side projects fall into a weird spectrum between personal and professional.  I can assure you that all of the above aspects of professional projects are currently being addressed for my side projects.&lt;/p&gt;

&lt;h2 id=&quot;im-available-for-consulting&quot;&gt;I'm Available for Consulting&lt;/h2&gt;

&lt;p&gt;As a senior IT professional with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Proven expertise in COVID-19 (see note below)&lt;/li&gt;
  &lt;li&gt;A strong understanding of bus factors&lt;/li&gt;
  &lt;li&gt;Experience implementing code around the &lt;a href=&quot;http://12factor.net/&quot;&gt;Twelve-Factor&lt;/a&gt; app methodology&lt;/li&gt;
  &lt;li&gt;Proven expertise around organizational IT risk&lt;/li&gt;
  &lt;li&gt;And the ability to &lt;strong&gt;talk&lt;/strong&gt; with your technical folks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am available for project level audits in this area.  Email me for information - fuzzygroup at gmail.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm the creator of &lt;a href=&quot;https://www.covidnearme.org/&quot;&gt;Covid Near Me&lt;/a&gt; and I've been thinking about how COVID affects everything since before March 10 when the site went live.  To date, Covid Near Me has racked up millions of page views.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/04/22/covid-and-your-personal-bus-factor.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/04/22/covid-and-your-personal-bus-factor.html</guid>
        
        <category>covid</category>
        
        <category>startup</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Taking Control of One's Workaholic Tendencies - The IT Anonymous Edition</title>
        <description>&lt;p&gt;Please start by picturing a support group similar to Alcoholics Anonymous; Let's call it &lt;strong&gt;IT Anonymous&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A dingy room in a church somewhere&lt;/li&gt;
  &lt;li&gt;A coffee pot&lt;/li&gt;
  &lt;li&gt;Cookies or donuts&lt;/li&gt;
  &lt;li&gt;Chairs in a semi circle&lt;/li&gt;
  &lt;li&gt;A place for people to stand and address the group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We all know the drill - we've seen this scene a thousand times in movies or TV.  And then you see me stand and address the group:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi.  I'm Scott.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and the group responds with a chorus of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Scott!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then begins the confession:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;I … have a problem.  I need help!&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Tell us more&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I respond with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;I work in technology and I'm a workaholic.  Last week I, the throes of getting an MVP out the door, with a boss that has been asking me daily &lt;em&gt;Is It Done Yet?&lt;/em&gt; / &lt;em&gt;Got Anything for me to See?&lt;/em&gt;, I got it done by all the Gods and Goddesses but I slept less than 8 hours out of the final 72 – I delivered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And yes I was late but by 2 days.  But, at the end of our Weekly Agile Retrospective, I got to demo working code to our team.  This occurred at 2:55 pm on Friday at which point I was close to falling over tired.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And the reward for all this was to be scheduled into a 7 person Zoom meeting at 4:00 pm on a Friday to discuss AWS Services we use and AWS Key Handoff.  This was NOT an important thing that had to be done after successfully completing my goals.  And then, in a show of personal stupidity on my part, I noticed my boss was online Saturday night at midnight my time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;And, in an effort to be a dutiful corporate solider, I, yes I'm a &lt;strong&gt;moron&lt;/strong&gt;, asked him &lt;em&gt;What epic should I start on on Monday morning?&lt;/em&gt;. My boss is three hours time offset from myself so this actually made some sense.  And I had, per his direction created epics for all the outstanding tasks that I was aware of.  I put them into Jira as I struggled mightily to get this MVP done.  And, rather than being told to complete one of my existing Epics, a new Epic was named on the spot and a series of requirements were delivered to me via &lt;strong&gt;slack messages&lt;/strong&gt;.  And then there was the fateful question: &lt;strong&gt;Can we get that done this week?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The group:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;shudders&lt;/em&gt; &lt;em&gt;amusement&lt;/em&gt; And what did you do Scott?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;my response:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I left my house in the wee hours when it was still dark, strapped a flashlight to my chest and walked through local nature preserve and I engaged in several hours of rage cleaning the forest.  I actually broke the day / night barrier, I was so enraged!  Here are some pics that I'm going to toss up on the projector:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3181.jpeg&quot; alt=&quot;IMG_3181.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3132.jpeg&quot; alt=&quot;IMG_3132.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3232.jpeg&quot; alt=&quot;IMG_3232.jpeg&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I need help from the group.  Suggestions:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the back, a tall bearded man speaks up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Those sound like requirements from the Ambien Walrus. If they're not in Jira, they don't exist. Sleep well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's a wonderful perspective but I live in the world of Small Tech (another essay to come soon) where that isn't an option.&lt;/p&gt;

&lt;p&gt;A beautiful redhead speaks up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;I think you should get yourself a Peavey to make lumberjacking easier&quot;.  And then, with a twinkle in her eye, she says &quot;Oh and you should call yourself LumberSnack; you're kind of cute.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A group discussion occurs and then, the magic of community solves this as another lovely red head speaks up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;You have a phone, do you not?  You must it is 2020.  Legally you are obligated to provide exactly 40 hours per week.  I get that life is crazy pants right now due to pandemic madness and lots of distractions on the home front but why not use the phone's count down timer to track your hours and then JUST FSCKING STOP when you hit 8 hours in the day?&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And with that I speak up:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I resolve to &quot;I shall work no amount of time, per week, greater than 40 hours for this project. My wife, family, health and my sanity demand it.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 20 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/04/20/taking-control-of-one-s-workaholic-tendencie.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/04/20/taking-control-of-one-s-workaholic-tendencie.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Using Explain in Postgres</title>
        <description>&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;I've been a MySQL user professionally since 1999 when I abandoned the land of Windows NT server side development due to quality abomination that was Microsoft Site Server – &quot;sh&lt;/td&gt;
      &lt;td&gt;t, fsck, censored, censored, censored — if Microsoft's quality is this bad, I may as well not pay for software.&quot;  I can remember that moment with the crystal clear clarity of:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;a fog of comic book cursing that surrounded me as I worked in my attic garret like office&lt;/li&gt;
  &lt;li&gt;a sense of my life will never be the same again (Open Source to me has had the same type of impact on my life as meeting women that I have loved and having children and discovering Ruby)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ah yes but I digress with the lack of clarity of someone who has slept 8 hours in the past 72 but …&lt;/p&gt;

&lt;p&gt;Anyway - MySQL - I've been using &lt;strong&gt;explain&lt;/strong&gt; to analyze queries in MySQL for decades i.e.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;explain SELECT foo FROM bars WHERE expression a = b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, as of late, I've been using Postgres for many, many projects including &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;CovidNearMe&lt;/a&gt; and my professional day job at the ADL and I've been thinking that explain doesn't work because my database client has, for the first time in my life been graphical, Postico, not a raw terminal and I was never able to make explain work in Postico.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I just stinking tried this again and Postico has made a liar out of me.  Sigh.  Honest – explain didn't work like yesterday when I created this blog post.  Sigh.  Sleep deprivation impacts on cognition; perhaps I should not be driving a motor vehicle today …&lt;/p&gt;

&lt;p&gt;So the other day when I need to analyze a query and Google told met hat EXPLAIN was actually a thing, I got out the console and did this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql -U sjohnson -d covid_morbidity1_development
psql (11.5)
Type &quot;help&quot; for help.
covid_morbidity1_development=# EXPLAIN select max(date_created_at) from locations;
                          QUERY PLAN
----------------------------------------------------------------------
 Aggregate  (cost=3736.90..3736.91 rows=1 width=4)
   -&amp;gt;  Seq Scan on locations  (cost=0.00..3525.32 rows=84632 width=4)
(2 rows)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now I don't use Postgres enough to really understand this but it isn't showing me that an index is &lt;strong&gt;NOT&lt;/strong&gt; being used for the query and that's &lt;strong&gt;always&lt;/strong&gt;, &lt;strong&gt;always&lt;/strong&gt; bad.  So I added a simple index as per this example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    table.index [&quot;date_created_at&quot;], name: &quot;index_locations_on_date_created_at&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now we get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ psql -U sjohnson -d covid_morbidity1_development
psql (11.5)
Type &quot;help&quot; for help.

covid_morbidity1_development=# EXPLAIN select max(date_created_at) from locations;
                                                              QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------------
 Result  (cost=0.36..0.37 rows=1 width=4)
   InitPlan 1 (returns $0)
     -&amp;gt;  Limit  (cost=0.29..0.36 rows=1 width=4)
           -&amp;gt;  Index Only Scan Backward using index_locations_on_date_created_at on locations  (cost=0.29..5992.46 rows=84633 width=4)
                 Index Cond: (date_created_at IS NOT NULL)
(5 rows)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What I can tell from this is that we're not dealing with a full table scan of 3736 row but instead a scan of 36 rows.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/04/17/using-explain-in-postgres.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/04/17/using-explain-in-postgres.html</guid>
        
        <category>postgres</category>
        
        <category>sql</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Python Kafka Basics</title>
        <description>&lt;p&gt;This is a starting point blog post where different things I learn about using Python Kafka will be documented.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-value-out-of-a-consumer-record&quot;&gt;Getting the Value out of a Consumer Record&lt;/h2&gt;

&lt;p&gt;The output of a Python Kafka call is a Consumer Record which is a &quot;set of named tuples (blah blah blah)&quot; where what you actually want is the value tuple.  This can be gotten with the .value attribute:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KafkaConsumer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KafkaConsumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;'dimon_tcpdump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'zhg_group'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value_deserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bootstrap_servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'192.168.100.9:9092'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# this is what you actually want; &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# process msg here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38240515/how-to-fetch-a-field-in-consumerrecord&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/04/16/python-kafka-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/04/16/python-kafka-basics.html</guid>
        
        <category>kafka</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Rails Asset Pipeline Failures and Capistrano</title>
        <description>&lt;p&gt;One of the single worst parts of being a one man show on an engineering effort is that when you hit a serious snag, well, you're &lt;em&gt;fscked&lt;/em&gt;.  I'm at the death march phase of a project, that wonderful stage, where you're so far into it that you can see the end but it seemingly never arrives – like the speed of light, it feels like you can never quite get there.&lt;/p&gt;

&lt;p&gt;Pro Tip: At this stage being asked by your manager, on a continuous basis, &quot;anything that you can show me&quot; is not helpful.  It is actually an antipattern which simply slows the project by making the engineer feel even worse (yes I'm late and I can argue for scope creep, etc but I'll own it and I'm still late).&lt;/p&gt;

&lt;p&gt;Anyway I recently went through this with respect to getting a complex Rails code base deployed onto AWS.  I started with my usual deploy tool of HatchBox but nothing worked and it was in the wee hours, and over a weekend, when I had no right to expect timely technical support so I figured &quot;Ok I'll do a raw deploy with Capistrano&quot; – and then the cluster fsck began in earnest.&lt;/p&gt;

&lt;p&gt;One of the general rules of technology is that everything is a two edged sword and where you get something, you give something.  For example C gives outstanding performance and flexibility but it also can be a source of security issues, pointer bugs, buffer overflows, etc.  Similarly Rails, even today, gives you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;an unprecedentedly easy way to build web apps (provided you do it the Rails way)&lt;/li&gt;
  &lt;li&gt;but deployment of modern Rails apps can be one of the most cursing laden experiences I've ever had&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only easy way I've ever found to deploy Rails apps is HatchBox and HatchBox wasn't actually a good fit for this application due to particularly complex, multi language CI / CD requirements (4 different git repos spanning, today, two languages).  The real deployment approach is going to be a combination of Jenkins + Ansible that drive Capistrano plus some other deployment tools.&lt;/p&gt;

&lt;p&gt;But I digress and have now devolved into a large number of words, more words than I should.  And so …&lt;/p&gt;

&lt;h2 id=&quot;error-conditions-from-a-capistrano-deploy-that-claimed-to-go-correctly-but-didnt&quot;&gt;Error Conditions from a Capistrano Deploy that Claimed to Go Correctly but Didn't&lt;/h2&gt;

&lt;p&gt;Here's what I noticed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Everything in the application appeared GIANT on screen (this is a characteristic in modern web apps of a CSS failure)&lt;/li&gt;
  &lt;li&gt;Normally I'd assume an asset pipeline failure but I watched the asset pipeline build perfectly time after time&lt;/li&gt;
  &lt;li&gt;Capistrano ran correctly&lt;/li&gt;
  &lt;li&gt;When I followed a link to the CSS, I got a 500 error trying to access it.  Here is what the error said: &quot;500 Internal Server Error If you are the administrator of this website, then please read this web application's log file and/or the web server's log file to find out what went wrong.&quot;&lt;/li&gt;
  &lt;li&gt;Nothing in the production.log file – I mean nothing!  Over a decade plus in Rails and I've never seen the log files silent.&lt;/li&gt;
  &lt;li&gt;Nothing in the underlying NGINX error log / server log&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I described this to a personal colleague their reaction was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Holy hell, production-specific bug and no logs? That sounds like some inner circle of hell&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now my manager has been asking me on our daily stand ups for the last several days &quot;Any blockers?&quot; and my answer has been &quot;No&quot; and, honestly, that's true:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is not one person on the team with the requisite technical knowledge to assist in this&lt;/li&gt;
  &lt;li&gt;The effort of explaining this was not to my liking&lt;/li&gt;
  &lt;li&gt;I have over a decade of Rails experience and my failure to get a simple Capistrano deploy functioning was beyond humiliating.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so I did what I normally do with this type of problem; I put it aside and worked on other parts of the project as there was plenty of other work to accomplish.  Periodically I would come back to it and nibble away at different aspects of it.  So from one perspective I was entirely blocked on this and from another, it was just one more partially completed task.  And then today, working from a parking lot for a change of pace (yay COVID-19), I finally hit upon the solution:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The last stage in a deploy via Capistrano has to be to restart the underlying NGINX (I'm using Passenger) web server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Normally the Capistrano gem does this if you have the Capistrano/Passenger extension loaded.  My guess is that this is weirdness related to Rails 6 although maybe I have a configuration issues (Capistrano is complex enough that I will freely admit that I may have made an error).&lt;/p&gt;

&lt;h2 id=&quot;restarting-passenger-via-capistrano&quot;&gt;Restarting Passenger via Capistrano&lt;/h2&gt;

&lt;p&gt;Passenger, the web server level Ruby extension that drives a Rails site, looks for the file restart.txt in the tmp directory underneath your web root.  I could have tried to figure out whether or not Capistrano was perhaps putting it in the wrong place but the easier approach was to simply extend Capistrano itself using a post deploy hook.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# put this line in config/deploy/production.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deploy:publishing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deploy:restart_passenger'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# put this file in lib/capistrano/tasks/restart_passenger.rake&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deploy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:restart_passenger&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;in: :sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;wait: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# VERSION 1 -- The way you want to write this:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#upload! File.join(Rails.root, '/bin/restart.text'), &quot;/home/ubuntu/ohi/current/tmp/restart.txt&quot;&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;# VERSION 2 -- The way that you have to write this:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;upload!&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/Users/sjohnson/Sync/fuzzygroup/adl/ohi_kafka/ohi/bin/restart.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/home/ubuntu/ohi/current/tmp/restart.txt&quot;&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;# VERSION 3 -- The way you debug this when figuring this out&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# `scp -i ~/Downloads/adl_fuzzygroup2.pem /Users/sjohnson/Sync/fuzzygroup/adl/ohi_kafka/ohi/bin/restart.txt ubuntu@3.134.253.53:/home/ubuntu/ohi/current/tmp/restart.txt`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that there are &lt;strong&gt;three&lt;/strong&gt; different versions of this.  One of the issues with Capistrano extensions is that they run OUTSIDE of Rails itself so the normal magic that is Rails.root &lt;strong&gt;does not&lt;/strong&gt; exist.  And, yes, there are ways to construct the correct path but I simply didn't have the time so I ticketed the issue in Jira and moved on.  On a historical note, I remember encountering this back in August of 2018 so there's that …&lt;/p&gt;

&lt;h2 id=&quot;the-moral-of-the-story&quot;&gt;The Moral of the Story&lt;/h2&gt;

&lt;p&gt;Here's the moral of the story:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your asset pipeline can build perfectly but NOT actually be usable&lt;/li&gt;
  &lt;li&gt;Make absolutely certain that your web server restarts AFTER the asset pipeline builds&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/capistrano/&quot;&gt;Capistrano&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/capistrano/passenger&quot;&gt;Capistrano Passenger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11269935/rails-500-error-application-css-isnt-precompiled&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 14 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/04/14/rails-asset-pipeline-failures-and-capistrano.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/04/14/rails-asset-pipeline-failures-and-capistrano.html</guid>
        
        <category>rails</category>
        
        <category>deploy</category>
        
        <category>capistrano</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>YES YES YES - Importing Constants from Python to Ruby at Execution Time</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_3001.jpeg&quot; alt=&quot;IMG_3001.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is going to fall into the category of &quot;Dancing Bear&quot; coding in that it isn't how well it works or how elegant it is, it is that it, like the bear, dances at all.  Here's the problem.&lt;/p&gt;

&lt;p&gt;Three code bases that live in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ohi_kafka/experts-all (python)&lt;/li&gt;
  &lt;li&gt;ohi_kafka/loader_reddit_to_kafka (ruby)&lt;/li&gt;
  &lt;li&gt;ohi_kafka/loader_twitter_to_kafka (ruby)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a series of code modules that define array of regular expressions in a constant always named REGEXES that live in files named like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;common_invective_anti_semitism.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_black.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_lgbtq.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_islam.py&lt;/li&gt;
  &lt;li&gt;common_invective_anti_woman.py&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A discussion of why the naming conventions here are this way and why lgbtq is lumped here as one thing is beyond the scope of this blog post (I personally disagree with that but I lost that argument months ago; sorry).&lt;/p&gt;

&lt;p&gt;These regexes need to be run both in the context of the python code base and the ruby code base.  These regexes are defined as arrays of strings such as:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;REGEXES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;'Bar'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The magic in making this work is really, really, really understanding your deployment context, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;all code will be deployed on the same machine (it will execute across multiple machines) but since I control deploy, I can ensure that the full code stack is present&lt;/li&gt;
  &lt;li&gt;no Docker for the ruby portion - just pretty vanilla Ruby code executing on a server as a SystemD service&lt;/li&gt;
  &lt;li&gt;Being tricksy, very, very tricksy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My first attempt to make this work was to try and use an extension with both require and require_relative:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/common_invective_anti_semitism.py&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;libexec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`block in &amp;lt;top (required)&amp;gt;'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:24:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `start'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`dispatch'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor.rb:399:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`run'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:476:in `&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `run'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`kernel_load'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&amp;lt;top (required)&amp;gt;'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`load'
        3: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/irb-1.2.1/exe/irb:11:in `&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        2: from (irb):1
        1: from (irb):1:in `require'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that was clearly a miserable and abject horror show way to start my morning.  The next up was to eliminate the extension and see, while tearing up with laughter, if it would work:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/common_invective_anti_semitism&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`start'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:30:in `dispatch'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;399&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`dispatch'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoke_command&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;476&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`exec'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `kernel_load'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`load'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `load'&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rvm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rubies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&amp;lt;top (required)&amp;gt;'
        3: from (irb):2
        2: from (irb):3:in `&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;irb_binding&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'
        1: from (irb):3:in `require_relative'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Apparently require() specifically looks for .rb and .so and .dll extensions.  Sigh / insert a censored verbal expression that I should not say out loud while my wife is sleeping as I write this up.&lt;/p&gt;

&lt;p&gt;And this was the step back moment where I thought about other mechanisms like loading the file as a string and then evaluating it with eval.  And, yes, that would have worked but runtime evals are almost always bad practices. And then I thought &quot;what about trying load() instead of require()&quot;.  The difference between load() and require() is that a require happens only once per code execution but a load() can happen multiple times.  And since I know a lot about how coders work, my thinking was that perhaps the implementer of load() didn't check for an extension.  Here's my test code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/common_invective_anti_black.py&quot;&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fuzzygroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ohi_kafka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common_invective_anti_black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;warning: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REGEXES&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/Users/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;johnson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fuzzygroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ohi_kafka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common_invective_anti_semitism&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;warning: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;definition&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REGEXES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;here&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REGEXES&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These regexes are to detect invective for hate speech so I've omitted them here because they are beyond offensive (and proprietary to my day job).&lt;/p&gt;

&lt;p&gt;And that's my solution -&lt;/p&gt;

&lt;h2 id=&quot;changes-to-the-python-side-of-the-house&quot;&gt;Changes to the Python Side of the House&lt;/h2&gt;

&lt;p&gt;Happily there were only three changes that had to be made to the python side of the house:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Restructure the constants from an array of strings at the top of the python script that used them to the new common_invective_whatever.py file.&lt;/li&gt;
  &lt;li&gt;Change their name from REGEXES to REGEXES_WHATEVER since at the Ruby layer I will have all of them operating at the same time and you shouldn't redeclare the same constant multiple times; they are CONSTANTS!&lt;/li&gt;
  &lt;li&gt;Add an import mechanism that brings in the constant from a file i.e. &quot;from common_invective_anti_WHATEVER import *&quot;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;commentary&quot;&gt;Commentary&lt;/h2&gt;

&lt;p&gt;I ran an early draft of this by an old friend, &lt;a href=&quot;https://www.markbernstein.org&quot;&gt;Mark Bernstein&lt;/a&gt;, the author of &lt;a href=&quot;https://www.eastgate.com/Tinderbox/&quot;&gt;Tinderbox&lt;/a&gt; and an extraordinarily experienced software engineer.  He started with a blindingly obvious question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why didn't you move the regular expressions from code to data i.e. lists of strings that could be included dynamically in the code base?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The reason for this was that I had just moved these regexes from data to code to eliminate the need for file i/o at runtime for better performance.&lt;/p&gt;

&lt;p&gt;Mark continued with a question about why we are using regexes instead of neural networks and the answer is that we are actually using neural networks (specifically &lt;a href=&quot;https://en.wikipedia.org/wiki/BERT_(language_model)&quot;&gt;bert&lt;/a&gt;).  We simply are also using regexes as an additional tool.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-what-if-load-didnt-work-for-me&quot;&gt;Sidebar: What if load() didn't work for me?&lt;/h2&gt;

&lt;p&gt;As you read through this you are likely thinking &quot;wow – if load checked the file extension then Scott was &lt;strong&gt;screwed&lt;/strong&gt;&quot;.  And, well, &lt;em&gt;no&lt;/em&gt;.  My backup plan was actually pretty simple and involved writing a method that did this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# rough psuedo code since I didn't actually have to do this&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load_regexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;base_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;sb&quot;&gt;`cp ../experts-all/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt; ../experts-all/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;.rb`&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../experts-all/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.rb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep - I would have gotten around this by just stripping the extension and then copying it to a .rb file and then requiring that.&lt;/p&gt;

&lt;h2 id=&quot;conclusion---its-all-about-perspective&quot;&gt;Conclusion - Its All About Perspective&lt;/h2&gt;

&lt;p&gt;When you read a blog post like this you could marvel at the Rube Goldberg machinations and argue whether this was good or bad.  And I myself often do wonder a bit.  But I started from three things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Dry or &quot;Do Not Repeat Yourself&quot;.  &lt;a href=&quot;https://twitter.com/dhh&quot;&gt;DHH&lt;/a&gt; while he wasn't the first to utter this has been a stalwart proponent of this and it has proved, generally, to be a solid engineering principle.  Every single time you have the same code in multiple places, well, we all know that's a shite show waiting to happen.  And duplicating constants, even across languages, is just plain awful.&lt;/li&gt;
  &lt;li&gt;Ruby and Python happily share the same core array syntax.  This meant, to me, that it was &lt;em&gt;reasonable&lt;/em&gt; to find a way to make them co-exist.&lt;/li&gt;
  &lt;li&gt;This wasn't a hard concept and it should, if you took the time to understand the problem, be achievable in a reasonable amount of time.  I actually solved this in far less time than it took to write this blog post. But, and this is important, systems have long life spans.  Someone who maintains this system will come after me and need to understand why I took this route and this blog post will make that possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Point #3 above, to me, reflects the difference between having literally decades of software engineering experience and perspective (I've been writing code now since '81 when I got my first computer) and being a more junior person.  As a junior engineer, I'd have simply waved my hands in the air and duplicated the data.  Now I can see that while there are only 5 files of regular expressions now, moving forward there will be N files and their contents will constantly change.  This approach means the only &lt;strong&gt;real&lt;/strong&gt; coupling between Ruby and Python needs to be updating the lists of files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Because Python and Ruby both use # to indicate comments, I'll be adding comments to the top of the constant files to indicate the need for this coupling.&lt;/p&gt;

&lt;p&gt;And, in closing, do you now see why I described this blog post as a dancing bear?  The dancing wasn't pretty but I made it dance.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rubylearning.com/satishtalim/including_other_files_in_ruby.html&quot;&gt;Ruby Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thoughtco.com/requre-method-2908199&quot;&gt;ThoughtCo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/rubycademy/requiring-a-file-or-library-in-ruby-29f99e5e2c6a&quot;&gt;RubyCademy on Require&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/rubycademy/loading-a-file-in-ruby-51463a1c6c7e&quot;&gt;RubyCademy on Load&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6343330/importing-a-long-list-of-constants-to-a-python-file&quot;&gt;Stack Overflow in Python Imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 09 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/04/09/yes-yes-yes-importing-constants-from-python-to-ruby-at-execution-time.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/04/09/yes-yes-yes-importing-constants-from-python-to-ruby-at-execution-time.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        <category>adl</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>The Two AWS RDS Postgres Errors I Always Make</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2997.jpg&quot; alt=&quot;IMG_2997.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You know that awful feeling of &lt;strong&gt;personal stupidity&lt;/strong&gt; when you consistently make the same mistake time after time?  Well my approach to addressing that is to document said mistakes, here, each time I make them. Sometimes I take the approach of admitting to them and sometimes I take the approach of just writing them as a blog post.&lt;/p&gt;

&lt;p&gt;There are two errors, nay three, I make almost every single time I create an RDS postgres instance and I thought &quot;maybe it is time to write them down and (hopefully) curse less&quot; the next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I wrote this as a text post with pictures below so that the quick answers appear first before a whole bunch of screenshots.&lt;/p&gt;

&lt;h2 id=&quot;error-1-not-creating-the-database-when-you-create-the-database-server&quot;&gt;Error 1: Not Creating the Database When you Create the Database Server&lt;/h2&gt;

&lt;p&gt;When you create a &quot;database&quot; on RDS you are actually creating a database server on which you &lt;strong&gt;then&lt;/strong&gt; create the database itself.  Now the core issue here is that AWS makes it very hard, at least when you are making a Postgres database to create that database later.  I'm sure there is a way but, yesterday, in a few hours of messing with this, I never found it.  What I had to do was drop my database server and walk through the creation process again, finally finding it nested away in an expandable section of the user interface.&lt;/p&gt;

&lt;p&gt;When you are walking through the &quot;Create Database&quot; form, there is a final section called &quot;Additional Configuration&quot;.   If you expand this then the very first option is &quot;Initial Database Name&quot; along with the &lt;em&gt;helpful&lt;/em&gt; message:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you do not specify a database name, Amazon RDS does not create a database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Groan.  Keep in mind that this whole feature starts on a web page titled &quot;Create Database&quot; (but the default is to NOT create a database).&lt;/p&gt;

&lt;h2 id=&quot;error-2-not-putting-the-database-server-in-the-same-vpc&quot;&gt;Error 2: Not Putting the Database Server in the Same VPC&lt;/h2&gt;

&lt;p&gt;Generally speaking most of us tend to use a single VPC (virtual private cloud) for our AWS boxes.  Despite this it is not guaranteed that your database server ends up in the same VPC as your other boxes unless you explicitly specify this.&lt;/p&gt;

&lt;h2 id=&quot;error-3-not-putting-the-database-in-the-same-security-group&quot;&gt;Error 3: Not Putting the Database in the Same Security Group&lt;/h2&gt;

&lt;p&gt;This one is just as significant as Error #1 – unless you have your database in the same security group as your other boxes, it can't be easily accessed (if accessed at all).  Make sure that you delete the default security group and then put the security group that you use for your other boxes (the ones that need to access the database) here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I use a highly simplistic approach to AWS security groups.  If you find the paragraph above laughable, well, yes.&lt;/p&gt;

&lt;h2 id=&quot;screenshots-from-the-aws-rds-creation-process&quot;&gt;Screenshots from the AWS RDS Creation Process&lt;/h2&gt;

&lt;p&gt;Shown below are a handful of screenshots from this process.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_01.png&quot; alt=&quot;aws_rds_01.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_02_vpc.png&quot; alt=&quot;aws_rds_02_vpc.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_03_security_group.png&quot; alt=&quot;aws_rds_03_security_group.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_04_additional_configuration_01.png&quot; alt=&quot;aws_rds_04_additional_configuration_01.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_rds_05_additional_configuration_02_database_name.png&quot; alt=&quot;aws_rds_05_additional_configuration_02_database_name.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/04/08/the-two-aws-rds-postgres-errors-i-always-make.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/04/08/the-two-aws-rds-postgres-errors-i-always-make.html</guid>
        
        <category>aws</category>
        
        <category>rds</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>PG ConnectionBad (could not connect to server No such file or directory)</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2993.jpeg&quot; alt=&quot;IMG_2993.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've recently had the situation where my personal development box (OSX Mojave, Rails, Postgres) has become unstable with, at times, multiple crashes per day.  I logged in this morning and found myself getting errors like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PG::ConnectionBad (could not connect to server: No such file or directory)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I did some digging and even though Postgres appeared to be running to brew, it was a false positive due to a leftover postmaster.pd file.  Here was the fix:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;First make sure that postgres isn't running use ps i.e. **ps auwwx&lt;/td&gt;
          &lt;td&gt;grep post**.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Delete the file: /usr/local/var/postgres/postmaster.pid i.e. &lt;strong&gt;rm /usr/local/var/postgres/postmaster.pid&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;At this point brew will, foolishly and oddly, still think Postgres is running so do do a &lt;strong&gt;brew restart postgres&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a handy &lt;a href=&quot;https://stackoverflow.com/questions/13573204/psql-could-not-connect-to-server-no-such-file-or-directory-mac-os-x&quot;&gt;Stack Overflow reference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make absolutely sure that postgres is NOT running before you delete postmaster.pid or you risk serious database corruption / data loss.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/04/08/pg-connectionbad-could-not-connect-to-server-no-such-file-or-directory.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/04/08/pg-connectionbad-could-not-connect-to-server-no-such-file-or-directory.html</guid>
        
        <category>postgres</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Covid-19 - Good News, Bad News or the Weekend?</title>
        <description>&lt;p&gt;I noticed an interesting thing yesterday – the number of COVID-19 cases fell in New York and I was curious (the number on the right is the number of new cases).  Here's what I saw:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/covid_monday.png&quot; alt=&quot;covid_monday.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What I was curious about was whether this was a reporting issue due to, perhaps, less testing on Sundays or an actual improvement in things.  What I realized was that the lack of a day indicator i.e. &quot;Monday&quot; versus 2020/04/06 made this hard.  A quick tweak to my DateCommon library and we get this display:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/covid_monday_large.png&quot; alt=&quot;covid_monday_large.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While there isn't a ton of data to draw a conclusion from, I can see that we have now seen, for two weeks running, fewer cases on Monday and then an increase on Tuesday.  So, unfortunately, I &lt;strong&gt;don't think&lt;/strong&gt; we're seeing an improvement.  And this is backed up by &lt;a href=&quot;https://link.medium.com/Is1vWsvAu5&quot;&gt;Roy Britt's article on Medium&lt;/a&gt; (published just 3 days ago).&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/04/07/covid-19-good-news-bad-news-or-the-weekend.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/04/07/covid-19-good-news-bad-news-or-the-weekend.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>Upgrading Python and Pip and VirtualEnv on Ubuntu</title>
        <description>&lt;p&gt;I found myself this morning trying to get a Python stack running on an Ubuntu instance only to hit this crap:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing collected packages: numpy, pytz, six, python-dateutil, pandas, nltk, pyparsing, cycler, kiwisolver, matplotlib, kafka-python, pyyaml, murmurhash, zipp, importlib-metadata, catalogue, plac, tqdm, setuptools, srsly, cymem, preshed, blis, wasabi, thinc, idna, urllib3, certifi, chardet, requests, spacy, pluggy, attrs, py, more-itertools, wcwidth, packaging, pytest, langdetect, spacy-langdetect, editorconfig, jsbeautifier, docutils, jmespath, botocore, s3transfer, boto3, torch, dataclasses, tokenizers, click, joblib, regex, sacremoses, filelock, sentencepiece, transformers, scipy, scikit-learn, gunicorn, WebOb, firefly-python, pycparser, cffi, zstandard, lefthook, termcolor, fire, redis, sseclient, absl-py, protobuf, markdown, pyasn1, pyasn1-modules, cachetools, rsa, google-auth, tensorboard-plugin-wit, werkzeug, grpcio, wheel, oauthlib, requests-oauthlib, google-auth-oauthlib, tensorboard, future, pytorch-lightning
Segmentation fault (core dumped)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So I guess it is time to do the Python upgrade dance.  Here you go:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip3 install --upgrade pip
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
sudo apt-get install python3.7
sudo pip3 install --upgrade virtualenv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;stack-overflow-references&quot;&gt;Stack Overflow References&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38613316/how-to-upgrade-pip3&quot;&gt;Pip upgrade&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/1086649/how-to-update-python-to-the-latest-version-on-ubuntu-18-04&quot;&gt;Python Upgrade&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 03 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/04/03/upgrading-python-and-pip-on-ubuntu.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/04/03/upgrading-python-and-pip-on-ubuntu.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Adding Chartkick to a Rails 6 App - Things I Always Forget</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2666.jpeg&quot; alt=&quot;IMG_2666.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chartkick.com/&quot;&gt;Chartkick&lt;/a&gt; is the charting engine that I've used for a bunch of years.  When you use Chartkick on a Rails 6 app, here are some gotchas:&lt;/p&gt;

&lt;h2 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'chartkick'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;command-line&quot;&gt;Command Line&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
yarn add chartkick chart.js
yarn install --check-files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;add-to-applicationjs&quot;&gt;Add to application.js&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require(&quot;chartkick&quot;)
require(&quot;chart.js&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 02 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/04/02/adding-chartkick-to-a-rails-6-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/04/02/adding-chartkick-to-a-rails-6-app.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>send.firefox.com rocks</title>
        <description>&lt;p&gt;If you have to send a large file to an individual, use:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;_posts/2020-03-28-send-firefox-com-rocks.md&quot;&gt;https://send.firefox.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is brilliantly simple, easy to use and powerful.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/firefox/2020/03/28/send-firefox-com-rocks.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/firefox/2020/03/28/send-firefox-com-rocks.html</guid>
        
        <category>firefox</category>
        
        <category>large_files</category>
        
        
        <category>firefox</category>
        
      </item>
    
      <item>
        <title>Having Hatchbox Redirect All http Sites it Manages to https</title>
        <description>&lt;p&gt;When you are using hatchbox and SSL in cluster mode you end up with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a load balanced cluster&lt;/li&gt;
  &lt;li&gt;that uses nginx as the load balancer&lt;/li&gt;
  &lt;li&gt;and nginx on each web node&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes it hard to understand where the http to https redirect goes.  The answer is that you need to but this on the load balancer and here's a code snippet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server_name _;
return 301 https://$host$request_uri;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gets set as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into Hatchbox.io&lt;/li&gt;
  &lt;li&gt;Go into your app.&lt;/li&gt;
  &lt;li&gt;Go to Advanced.&lt;/li&gt;
  &lt;li&gt;Select Nginx Configuration from the drop down menu&lt;/li&gt;
  &lt;li&gt;Select the Load Balancer tab.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add these changes below the &lt;strong&gt;listen [::]:80;&lt;/strong&gt; directive and then do a deploy.&lt;/p&gt;

&lt;p&gt;For reference, you can see &lt;a href=&quot;https://linuxize.com/post/redirect-http-to-https-in-nginx/&quot;&gt;linuxize&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/hatchbox/2020/03/28/having-hatchbox-redirect-all-http-sites-it-manages-to-https.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/hatchbox/2020/03/28/having-hatchbox-redirect-all-http-sites-it-manages-to-https.html</guid>
        
        <category>hatchbox</category>
        
        <category>https</category>
        
        
        <category>hatchbox</category>
        
      </item>
    
      <item>
        <title>ruby invalid option dash colon Or When Ruby Goes Insane in the Brain</title>
        <description>&lt;p&gt;This is a short one but a weird one.  My main box rebooted today and when I went to create a blog post, I got this madness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ jekyll post &quot;A Social Media Marketing Strategy that Mom Would Approve&quot;
ruby: invalid option -:  (-h will show valid options) (RuntimeError)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In all my years of ruby, I've &lt;em&gt;never&lt;/em&gt; seen &lt;strong&gt;-:&lt;/strong&gt;.   All the normal jiggery pokery of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;which ruby&lt;/li&gt;
  &lt;li&gt;rvm list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;etc failed to give me any insights.  I finally found the answer on an obscure &lt;a href=&quot;https://github.com/asdf-vm/asdf-ruby/issues/154&quot;&gt;Github issue&lt;/a&gt; that said &quot;unset RUBYOPT&quot; so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ unset RUBYOPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that gave me back:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;blog on  gh-pages [🤷‍] via 💎 v2.3.1 on ☁️  us-west-2 
❯ ruby --version
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin16]

blog on  gh-pages [🤷‍] via 💎 v2.3.1 on ☁️  us-west-2 
❯ jekyll post &quot;A Social Marketing Strategy that Mom Would Approve&quot;
New post created at _posts/2020-03-24-a-social-marketing-strategy-that-mom-would-approve.md.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now, once again, I can (joyfully) write!&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/03/24/ruby-invalid-option-or-when-ruby-goes-insane-in-the-brain.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/03/24/ruby-invalid-option-or-when-ruby-goes-insane-in-the-brain.html</guid>
        
        <category>ruby</category>
        
        <category>jekyll</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>A Social Marketing Strategy that Mom Would Approve</title>
        <description>&lt;p&gt;There are a lot of times in life when I don't know what to do and so I ask myself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;WWMD?  This is also known as &lt;em&gt;What Would Mom Do&lt;/em&gt;?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, when confronted with the question of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How should social media marketing be handled for a new website focused on COVID-19?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I thought &quot;What would Mom do?&quot; and I came up with the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mom would tell people when there is something new on the web site in the same way that Mom always told people when something new was going on with her kids.&lt;/li&gt;
  &lt;li&gt;Mom would say Thank You when appropriate.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;telling-people-about-something-new&quot;&gt;Telling People About Something New&lt;/h2&gt;

&lt;p&gt;The first aspect of telling people about something new is that when something changes, you let them know.  Yesterday, for example, we redesigned the entire &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;covidnearme.org&lt;/a&gt; site and added a bunch of new features so I would argue for making social media posts to different sites like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twitter - screen shot and a short message &quot;Major changes - blah, blah&quot;&lt;/li&gt;
  &lt;li&gt;Facebook - much the same&lt;/li&gt;
  &lt;li&gt;Instagram - a series of screenshots&lt;/li&gt;
  &lt;li&gt;Youtube - a short video talking about the home page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After doing that on Day 1 then I would follow that up with a set of posts about each individual feature such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Risk wizard&lt;/li&gt;
  &lt;li&gt;Symptom tracker&lt;/li&gt;
  &lt;li&gt;Hospital Experience&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;saying-thank-you&quot;&gt;Saying Thank You&lt;/h2&gt;

&lt;p&gt;The next thing that I would do is I would use good manners and say thank you to the different technology providers that we use to make the site.  Here's an example tweet that I made a few weeks ago:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I could not have built this as quickly without the awesome that is Jumpstart. Full tech stack and thank yous in &lt;a href=&quot;https://twitter.com/fuzzygroup/status/1239961412224589827&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you see the &lt;a href=&quot;https://covidnearme.org/powered_by&quot;&gt;Powered By page&lt;/a&gt; on CovidNearMe, you could take each of the text blocks and make a tweet or other social media post from that text and that image.  The important thing here is to cc / @ mention / # hash tag someone associated with the product.  For example if you were making a post thanking the HoneyBadger product, it would be good to include @honeybadgerapp with the tweet.  The idea of referencing the creator of the product is that it gives them an incentive to retweet / share this with their audience.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/marketing/2020/03/24/a-social-marketing-strategy-that-mom-would-approve.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/marketing/2020/03/24/a-social-marketing-strategy-that-mom-would-approve.html</guid>
        
        <category>marketing</category>
        
        <category>covidnearme</category>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Deploying a Rails App Using HatchBox onto Google Cloud Platform</title>
        <description>&lt;p&gt;This blog post is a quickie where I document how I deployed CovidNearMe onto Google Cloud Platform or GCP using &lt;a href=&quot;https://www.hatchbox.io&quot;&gt;HatchBox.io&lt;/a&gt;.  I need to start by giving a huge shout out to &lt;strong&gt;Tony Carnevale&lt;/strong&gt; from Google who went above and beyond in providing outstanding support.&lt;/p&gt;

&lt;p&gt;Here are the stages.&lt;/p&gt;

&lt;h2 id=&quot;stage-1-create-a-cluster&quot;&gt;Stage 1: Create a Cluster&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Even a single machine is considered a cluster.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://www.hatchbox.io&quot;&gt;HatchBox.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Login with your account.&lt;/li&gt;
  &lt;li&gt;Click on Clusters and define a &lt;a href=&quot;https://www.hatchbox.io/clusters/new&quot;&gt;New Cluster&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Name the cluster &lt;strong&gt;GCP Covid Near Me&lt;/strong&gt; (or that's what I did).&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Somewhere Else&lt;/strong&gt; as the hosting provider.&lt;/li&gt;
  &lt;li&gt;Select the &lt;strong&gt;Everything on a Single Server&lt;/strong&gt; option.&lt;/li&gt;
  &lt;li&gt;If you are using the GCP Cloud SQL (postgresql) and GCP Redis then remove these options from the Roles list.&lt;/li&gt;
  &lt;li&gt;Enter the IP address under public ip.&lt;/li&gt;
  &lt;li&gt;Set the private IP to 127.0.0.&lt;/li&gt;
  &lt;li&gt;There appears to be a bug where you can't provision the server unless a local redis installation is selected so add it back.&lt;/li&gt;
  &lt;li&gt;Click provision the server and you will be given an SSH command to run as root on the box.  You SSH in, do a sudo su, execute the command and exit out&lt;/li&gt;
  &lt;li&gt;You click Test / Provision (I forget which) and your server will be flawlessly setup.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;stage-2-create-an-app-on-the-cluster&quot;&gt;Stage 2: Create an App on the Cluster&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Click on &lt;a href=&quot;https://www.hatchbox.io/apps&quot;&gt;Apps&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Click on &lt;a href=&quot;https://www.hatchbox.io/apps/new&quot;&gt;Create a New App&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Choose the cluster from the drop down list.&lt;/li&gt;
  &lt;li&gt;Click on your git repo host.&lt;/li&gt;
  &lt;li&gt;Set the name of your application (I like to include the name of the cluster with the app name since this app is already deployed to digital ocean).&lt;/li&gt;
  &lt;li&gt;Enter the name of the repo (easily find this from .git/config in your Rails root directory).&lt;/li&gt;
  &lt;li&gt;Set external host for the database if you are using Google's Cloud SQL.  This means that you need to  define a postgres configuration url.  The format for this url is this: &lt;strong&gt;postgresql://user:password@databasehost.com/database&lt;/strong&gt;.  You simply need to replace user with your username, password with your password, databasehost.com with your database server and database with the name of the database.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Define your Rails Master Key right away so you don't screw this up and have to ask &lt;a href=&quot;https://gorails.com&quot;&gt;Chris Oliver&lt;/a&gt; for support (and thus sound like an idiot).  Your rails Master Key can be found in and copied with: cat config/master.key&lt;/td&gt;
          &lt;td&gt;pbcopy (if you are on OSX)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Do an initial deploy.  This will give you an HTTP only application.  You can't have HTTPS until you have a domain assigned to the server so you have to start with HTTP.&lt;/li&gt;
  &lt;li&gt;You can then define SSL.  I'd like to illustrate those steps but I didn't write them down well enough so that will have to be a future blog post.&lt;/li&gt;
  &lt;li&gt;Make sure that you have SSH on the GCP cluster open to the IP address for the Hatchbox deployment engine.  This ip address, today, March 24, 2020, is &lt;strong&gt;94.53.199.250&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 22 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/22/deploying-a-rails-app-using-hatchbox-onto-google-cloud-platform.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/22/deploying-a-rails-app-using-hatchbox-onto-google-cloud-platform.html</guid>
        
        <category>rails</category>
        
        <category>hatchbox</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You're Going to Have Visitors to Your Home in the Age of Covid - Here's What to Do</title>
        <description>&lt;p&gt;I had a really, really interesting talk with a friend yesterday about the current times and they commented to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;My mom has come to live with me and she is immuno-compromised (COPD) so we're taking this really, really seriously.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even though perhaps we should all just hunker down, adopt a bunker mentality and never let anyone into our homes, that's just &lt;strong&gt;not realistic&lt;/strong&gt; or &lt;strong&gt;even viable&lt;/strong&gt;.  What we need to do is be &lt;em&gt;smart&lt;/em&gt; about this.  They spoke to me a bit about their precautions and I've merged them with the things we are doing and here you go!&lt;/p&gt;

&lt;h2 id=&quot;you-are-going-to-have-visitors-so-be-safe&quot;&gt;You Are Going to Have Visitors So Be Safe!&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Put a hand washing reminder sign on your door.&lt;/li&gt;
  &lt;li&gt;Put wipes by the door so that no one has to touch your door handle.  If you can't get wipes then maybe a sack of old grocery bags.&lt;/li&gt;
  &lt;li&gt;Put a trash can by the inside of the door so you can throw away the wipe or grocery bag.&lt;/li&gt;
  &lt;li&gt;Shoes come off inside the door and are left on a mat&lt;/li&gt;
  &lt;li&gt;Remove the hand towels from all your bathrooms and substitute paper towels (bad hand washing can leave the virus on a cloth towel for the next person).&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 19 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/19/so-you-re-going-to-have-visitors-to-your-home-in-the-age-of-covid-here-s-what-to-do.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/19/so-you-re-going-to-have-visitors-to-your-home-in-the-age-of-covid-here-s-what-to-do.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>A Drop Dead Stupid Rails Testing Trick</title>
        <description>&lt;p&gt;This is an old school trick that you use when you don't have a robust test suite and / or a CI environment.  When you run Rails in development mode it is VERY, VERY forgiving of little details like syntax errors – the type of thing that grind your web server to a hard stop.&lt;/p&gt;

&lt;p&gt;The trick is to use &lt;strong&gt;RAILS_ENV=production&lt;/strong&gt; in development mode and that causes syntax errors to get caught:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=production bundle exec rails s -p3169
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's an example stack trace:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	20: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/tsort.rb:228:in `block in tsort_each'
	19: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/initializable.rb:61:in `block in run_initializers'
	18: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/initializable.rb:32:in `run'
	17: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/initializable.rb:32:in `instance_exec'
	16: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/application/finisher.rb:122:in `block in &amp;lt;module:Finisher&amp;gt;'
	15: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:449:in `eager_load_all'
	14: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:449:in `each'
	13: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:338:in `eager_load'
	12: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:338:in `synchronize'
	11: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:346:in `block in eager_load'
	10: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:682:in `ls'
	 9: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:682:in `foreach'
	 8: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:685:in `block in ls'
	 7: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:351:in `block (2 levels) in eager_load'
	 6: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/loader.rb:351:in `const_get'
	 5: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/zeitwerk-2.2.2/lib/zeitwerk/kernel.rb:16:in `require'
	 4: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:31:in `require'
	 3: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require_with_bootsnap_lfi'
	 2: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
	 1: from /Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:23:in `block in require_with_bootsnap_lfi'
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/bootsnap-1.4.6/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:23:in `require': /Users/sjohnson/Sync/coding/rails/covid_morbidity/app/controllers/symptoms_controller.rb:53: syntax error, unexpected local variable or method, expecting '}' (SyntaxError)
      ip_address: request.remote_ip,
      ^~~~~~~~~~
/Users/sjohnson/Sync/coding/rails/covid_morbidity/app/controllers/symptoms_controller.rb:54: syntax error, unexpected tLABEL, expecting '='
      user_agent: request.user_agent
      ^~~~~~~~~~~
/Users/sjohnson/Sync/coding/rails/covid_morbidity/app/controllers/symptoms_controller.rb:55: syntax error, unexpected '}', expecting `end'
    }
    ^
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ideally you would never have to do this but it really can be a useful trick when you don't have a full CI environment setup.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/19/a-drop-dead-stupid-rails-testing-trick.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/19/a-drop-dead-stupid-rails-testing-trick.html</guid>
        
        <category>rails</category>
        
        <category>testing</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Loading Zip Codes with SmarterCSV Gem</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2664.jpeg&quot; alt=&quot;IMG_2664.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Zip code data is always problematic due to the leading zeros.  The &lt;a href=&quot;https://github.com/tilo/smarter_csv&quot;&gt;smarter_csv&lt;/a&gt; gem in Rails defaults to automatically handling numbers as numerics, not strings, which means that you lose 00408 to just 408.  Here's an example of a work around using a rake task to load data:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# bundle exec rake data:import_geography --trace&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:import_geography&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lib/tasks/data/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Geocodes_USA_with_Counties.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;geographies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SmarterCSV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;hash_transformations: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:convert_values_to_numeric_unless_leading_zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;convert_values_to_numeric: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;except: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;geographies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;g_obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Geography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This wasn't the &lt;a href=&quot;https://github.com/tilo/smarter_csv/issues/151&quot;&gt;accepted work around&lt;/a&gt; but a hack; sigh.  The :convert_values_to_numeric_unless_leading_zeros transformation doesn't seem work.  Issue filed; I hope to fix this myself down the road.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/18/loading-zip-codes-with-smartercsv-gem.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/18/loading-zip-codes-with-smartercsv-gem.html</guid>
        
        <category>rails</category>
        
        <category>csv</category>
        
        <category>covidnearme.org</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>How to Help a Quarantined Person</title>
        <description>&lt;p&gt;Note: If you're concerned about COVID-19, I'd encourage you to check out &lt;a href=&quot;https://www.covidnearme.org&quot;&gt;CovidNearMe.org&lt;/a&gt;.  Disclaimer - I'm one of the authors of it.&lt;/p&gt;

&lt;p&gt;I've now personally seen the impact of COVID-19 – a good friend – who was in my house less than 10 days ago has been diagnosed with the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;May have COVID-19 but a test wasn't available&lt;/li&gt;
  &lt;li&gt;Need to self quarantine for 2 weeks following the onset of symptoms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This raises the question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How do you help a person in quarantine?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some thoughts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You don't want to be in that person's physical presence.  It is QUARANTINE.&lt;/li&gt;
  &lt;li&gt;But all of us are a community.  You can't NOT help people; that isn't an option.&lt;/li&gt;
  &lt;li&gt;You can online order things for them.&lt;/li&gt;
  &lt;li&gt;You deliver to their front porch or front door the things that they need.  &lt;strong&gt;And then you leave – be in your car before they come out&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Given that theft may be a concern, it is likely good to leave things somewhat protected like between outer and inner doors.&lt;/li&gt;
  &lt;li&gt;If you don't have hand sanitizer to use after touching their door then bring a plastic grocery sack to touch the door handle and such  And then throw it away.&lt;/li&gt;
  &lt;li&gt;You call them to tell them that what they need is waiting for them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-do-you-keep-people-company&quot;&gt;How Do You Keep People Company?&lt;/h2&gt;

&lt;p&gt;For a lot of people, particularly extroverted social folk, being in quarantine is almost physically painful.  Keep in mind that people need company but that phone calls may be hard due to sore throats.  So think a lot about:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;text messaging&lt;/li&gt;
  &lt;li&gt;instant messaging&lt;/li&gt;
  &lt;li&gt;perhaps even doing a shared activity like &quot;virtual presence&quot; like watching something together on Netflix or Youtube&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-does-a-quarantined-person-need&quot;&gt;What Does a Quarantined Person Need?&lt;/h2&gt;

&lt;p&gt;Here's what I would recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Liquids that they like to drink; for this person it was tea and honey&lt;/li&gt;
  &lt;li&gt;Gatorade or another sports drink for dehydration&lt;/li&gt;
  &lt;li&gt;Easy to prepare food&lt;/li&gt;
  &lt;li&gt;Cold / Cough medicine&lt;/li&gt;
  &lt;li&gt;Help getting their prescriptions picked up&lt;/li&gt;
  &lt;li&gt;Painkillers but not &lt;a href=&quot;https://www.sciencealert.com/who-recommends-to-avoid-taking-ibuprofen-for-covid-19-symptoms&quot;&gt;Ibuoprofen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Humidifier&lt;/li&gt;
  &lt;li&gt;Thermometer&lt;/li&gt;
  &lt;li&gt;Soap&lt;/li&gt;
  &lt;li&gt;Crackers or something to help with nausea&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-thoughts&quot;&gt;Other Thoughts&lt;/h2&gt;

&lt;p&gt;I'd like to tell you that all of this can be done online (and, yes, CVS will do online ordering and delivery) but I don't think that's necessarily correct given the size of this crisis.  I think we are going to need to do a lot of physical visits to help our friends and neighbors.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/18/how-to-help-a-quarantined-person.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/18/how-to-help-a-quarantined-person.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>Gluten Free Baking 101</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2629.jpeg&quot; alt=&quot;IMG_2629.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Given the number of people who are avoid gluten these days, I thought I'd write up a few basic tips and pointers to some of my favorite gluten free recipes.&lt;/p&gt;

&lt;h2 id=&quot;general-gluten-free-banking-tips-from-years-of-experience&quot;&gt;General Gluten Free Banking Tips From Years of Experience&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Use a 1:1 flour replacement.  My current favorite is &lt;a href=&quot;https://www.amazon.com/Krusteaz-Gluten-Purpose-Flour-32-Ounce/dp/B013KRV2LU/&quot;&gt;Krusteaz&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;If you are baking gluten free, don't taste the batter!  A lot of gluten free flours are based on bean flours and bean flour, before it is baked, takes like crap.&lt;/li&gt;
  &lt;li&gt;Anything you bake with a gluten free flour is structurally weaker than with gluten because gluten is a strong, elastic protein.&lt;/li&gt;
  &lt;li&gt;If you want to make bread then just buy the book &lt;a href=&quot;https://www.amazon.com/Gluten-Free-Artisan-Bread-Five-Minutes/dp/1250018315/&quot;&gt;Gluten Free Artisan Bread in Five Minutes a Day&lt;/a&gt;.  Boules you bake from the basic recipe, page 63, are fantastic.  They are smaller than normal boules (lack of strength) but they taste and feel like real bread.  As a former daily bread baker, these book was like a revelation from on high.&lt;/li&gt;
  &lt;li&gt;A 1:1 flour can generally be substituted in place of wheat flour without other changes except for issues of strength / size (make things smaller).&lt;/li&gt;
  &lt;li&gt;Krusteaz has a great &lt;a href=&quot;https://www.amazon.com/Krusteaz-Gluten-Buttermilk-Pancake-16-Ounce/dp/B00K73KL9U/r&quot;&gt;gluten free pancake mix&lt;/a&gt;.  It is just easier than making it yourself.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;some-of-my-favorite-gluten-free-recipes&quot;&gt;Some of My Favorite Gluten Free Recipes&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/baked_goods/2019/12/11/gluten-free-chocolate-chip-pecan-scones.html&quot;&gt;Almond Flour Chocolate Chip Pecan Scones&lt;/a&gt; - I've probably made 50+ batches of these.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/breakfast/2019/10/17/gluten-free-lemon-ricotta-pancakes-with-thanks-to-kenny-shopsin.html&quot;&gt;Lemon Ricotta Pancakes&lt;/a&gt; - from one of the most entertaining cookbooks I ever read.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/bread/2019/08/04/gluten-free-peach-jalapeno-cornbread.html&quot;&gt;Peach Jalapeno Cornbread&lt;/a&gt; - this was amaze balls.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/pancakes/2019/10/20/gluten-free-pumpkin-pecan-pancakes.html&quot;&gt;Pumpkin Pecan Pancakes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/dessert/2020/03/01/gluten-free-chocolate-chili-bites.html&quot;&gt;Chocolate Chili Bites&lt;/a&gt; - like mini brownies with attitude.  Strongly recommended.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/potato/2020/02/10/gluten-free-potato-scones.html&quot;&gt;Potato Scones&lt;/a&gt; - my favorite thing in the world to do with mashed potatoes after the first consumption&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/bread/2020/03/05/gluten-free-almond-flour-biscuits.html&quot;&gt;Almond Flour Biscuits&lt;/a&gt; - nut flours don't make tall biscuits but they do make biscuits&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/breakfast/2016/12/26/gluten-free-swedish-pancakes-with-lingonberry-jam.html&quot;&gt;Swedish Pancakes&lt;/a&gt; - Can you tell that I like pancakes?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/snack/2013/07/15/gluten-free-energy-bites.html&quot;&gt;Energy Bites&lt;/a&gt; - Simple, sweet and actually heathy and you probably don't need to buy anything special.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/baked_goods/2019/02/03/gluten-free-brownies-for-game-night.html&quot;&gt;Brownies for Game Night&lt;/a&gt; - Because brownies!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/baking/2019/09/01/gluten-free-corn-muffin-mix.html&quot;&gt;Corn Muffins&lt;/a&gt; - Because muffins!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;more-recipes&quot;&gt;More Recipes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/recipes/&quot;&gt;All my recipes can be found here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/food/2020/03/16/gluten-free-baking-101.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/food/2020/03/16/gluten-free-baking-101.html</guid>
        
        <category>food</category>
        
        <category>gluten_free</category>
        
        
        <category>food</category>
        
      </item>
    
      <item>
        <title>Assembly Line Workers and COVID-19 - What Does An Employer Do About Touching Your Face?</title>
        <description>&lt;p&gt;I have a number of friends who work on assembly lines and all of them are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Terrified of getting sick&lt;/li&gt;
  &lt;li&gt;Have no option of working from home&lt;/li&gt;
  &lt;li&gt;Want to work&lt;/li&gt;
  &lt;li&gt;Need to work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once upon a time my father used to own a manufacturing operation and this is the advice that I'd give him - buy these for all your line workers:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2748.jpeg&quot; alt=&quot;IMG_2748.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the picture above, I am wearing my face shield that I use when I cut wood on my table saw.  It:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Isn't a mask (and that's ok because there is a shortage of masks and masks aren't as effective as you would think)&lt;/li&gt;
  &lt;li&gt;Costs only $15 at Menards or Home Depot&lt;/li&gt;
  &lt;li&gt;Should be readily available as it isn't a medical device&lt;/li&gt;
  &lt;li&gt;Qualifies as valid safety equipment since that is its purpose&lt;/li&gt;
  &lt;li&gt;WILL REMIND PEOPLE TO NOT TOUCH THEIR FACE!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As an employer, whether or not you offer health care, you simply &lt;strong&gt;don't want your employees getting sick&lt;/strong&gt;.  And I'm firmly of the belief that people are smart but often get distracted so giving them a visual reminder &quot;don't touch your face&quot; is probably helpful.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/16/assembly-line-workers-and-covid-19-what-does-an-employer-do-about-touching-your-face.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/16/assembly-line-workers-and-covid-19-what-does-an-employer-do-about-touching-your-face.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>Making Urls Paste with Metadata Preview In Facebook, Facebook Messenger, Twitter, Apple Messages</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2668.jpeg&quot; alt=&quot;IMG_2668.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am an old tech guy.  I was at the conference where TBL announced the web and I wrote my first HTML snippet just a few years later.  But I pretty quickly moved from front end HTML onto back end web development and there are techniques that, while common today, I have never learned.&lt;/p&gt;

&lt;p&gt;An example of this is making urls appear, with metadata, when they are pasted into a messaging tool like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Facebook Messenger&lt;/li&gt;
  &lt;li&gt;Apple Messages&lt;/li&gt;
  &lt;li&gt;Facebook itself&lt;/li&gt;
  &lt;li&gt;Twitter itself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We've all seen this.  Sometimes you paste a url into Facebook Messenger and all that comes out is the url itself.  And sometimes you get a picture, a title, etc.  The secret to this is three fold:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A set of HTML meta tags for Facebook&lt;/li&gt;
  &lt;li&gt;A set of HTML meta tags for Twitter&lt;/li&gt;
  &lt;li&gt;Testing it in a debugging tool like the &lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot;&gt;Facebook Sharing Debugger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1-the-html-meta-tags-for-facebook&quot;&gt;Step 1: The HTML Meta Tags for Facebook&lt;/h2&gt;

&lt;p&gt;Here is an example of the HTML meta tags for Facebook:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:card&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;summary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:site&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@fuzzygroup&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:creator&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@fuzzygroup&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org -- a web site for tracking COVID-19 near you&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org - an easy to use web site for watching the spread of COVID-19 in your country and / or state&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://covidnearme.org/assets/covid-5c8b7d67715397bef73ccaf0ee4402a1952d97123328aeb2db839ca071583c98.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-2-the-html-meta-tags-for-twitter&quot;&gt;Step 2: The HTML Meta Tags for Twitter&lt;/h2&gt;

&lt;p&gt;Here is an example of the HTML meta tags for Twitter:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:url&quot;&lt;/span&gt;                &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.covidnearme.org/&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:type&quot;&lt;/span&gt;               &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;website&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:locale&quot;&lt;/span&gt;             &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en_US&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:title&quot;&lt;/span&gt;              &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org -- a web site for tracking COVID-19 near you&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:description&quot;&lt;/span&gt;        &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;www.covidnearme.org - an easy to use web site for watching the spread of COVID-19 in your country and / or state&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;og:image&quot;&lt;/span&gt;              &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://covidnearme.org/assets/covid-5c8b7d67715397bef73ccaf0ee4402a1952d97123328aeb2db839ca071583c98.png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-3-testing-in-the-sharing-debugger&quot;&gt;Step 3: Testing in The Sharing Debugger&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot;&gt;https://developers.facebook.com/tools/debug/&lt;/a&gt; and paste in your url.  You may need to click the Scrape Again button a few times while you work this out.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/webdev/2020/03/14/making-urls-paste-with-metadata-preview-in-facebook-messenger-twitter-apple-messages.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/webdev/2020/03/14/making-urls-paste-with-metadata-preview-in-facebook-messenger-twitter-apple-messages.html</guid>
        
        <category>facebook</category>
        
        <category>twitter</category>
        
        <category>messages</category>
        
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>The Five Second Rule No Longer Applies in the Age of Covid</title>
        <description>&lt;p&gt;So I just dropped a pill on the ground as I took my daily vitamins and I picked it it up and said &quot;5 second rule&quot; before popping it in my mouth.  And then it struck me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the age of covid, the 5 second rule no longer applies.  Covid can live on surfaces for up to 3 days.  &lt;a href=&quot;https://www.technologyreview.com/s/615348/heres-how-long-the-coronavirus-can-stay-in-the-air-and-on-packages/&quot;&gt;MIT Technology Review&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/03/13/the-five-second-rule-no-longer-applies-in-the-age-of-covid.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/03/13/the-five-second-rule-no-longer-applies-in-the-age-of-covid.html</guid>
        
        <category>covid</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Restart ID sequences in Postgres on Truncation</title>
        <description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is from a real world thing that I'm about to release.&lt;/p&gt;

&lt;p&gt;Like a lot of database apps in the world, mine generally tend to use auto incrementing ids for object identifiers.  An object identifier is a value in a system which uniquely identifies something.  Let's say you have a url like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3169/locations?country_id=91    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What that is saying, under the hood, is &quot;Get the data from the locations store and give me the object with id value 91&quot;.  The thing that I'm currently building is populated with a bunch of data which is coming from CSV files that I'm loading from the Internet and I need to wipe the data in the system every time it rebuilds.  Now when I say location store, I mean, in this case, a locations table in a Postgres database.  When you wipe the contents of a table in Postgres you end up with the next object in the table getting the last ID value plus 1.&lt;/p&gt;

&lt;p&gt;The secret is to add this snippet to your truncation routine:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RESTART IDENTITY
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or in full:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TRUNCATE states RESTART IDENTITY    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And in Rails I have this implemented on all my core classes as:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;truncate&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TRUNCATE states RESTART IDENTITY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Since this is a def self., think of it as a C style static thing.  By defining it this way, I can simply call it as State.truncate to eliminate all data in my states store (ok its is a table but it could be more complex) and restart my ID sequences.  And in cases it wasn't clear exactly why you want this, since I'm processing the same data files in Production as in Development, my bookmarks become consistent allowing easier debugging.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/sql/2020/03/13/restart-id-sequences-in-postgres-on-truncation.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sql/2020/03/13/restart-id-sequences-in-postgres-on-truncation.html</guid>
        
        <category>sql</category>
        
        <category>postgres</category>
        
        <category>rails</category>
        
        
        <category>sql</category>
        
      </item>
    
      <item>
        <title>What is covidnearme.org ?</title>
        <description>&lt;p&gt;I'd like to say that I'm happy to announce:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.covidnearme.org/&quot;&gt;https://www.covidnearme.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;but I'm not.  Like a lot of us, nay, most of us, I find the current COVID-19 / Corona virus bothersome if not scary.  But the world is what it is and we are better off knowing more about COVID-19 rather than less so I made a tool.&lt;/p&gt;

&lt;h2 id=&quot;what-is-covidnearmeorg&quot;&gt;What is covidnearme.org?&lt;/h2&gt;

&lt;p&gt;Covnearme.org is a web site which lets you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Easily drill down to where you live.&lt;/li&gt;
  &lt;li&gt;Bookmark a location or location that you care about&lt;/li&gt;
  &lt;li&gt;See a leaderboard of cases&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-namehopkinswheresmylocaldataabut-what-happened-in-the-us-on-310&quot;&gt;&lt;a name=&quot;hopkinswheresmylocaldata&quot;&gt;&lt;/a&gt;BUT WHAT HAPPENED IN THE US ON 3/10?&lt;/h2&gt;

&lt;p&gt;That is apparently the date when Johns Hopkins stopped reporting US level county data and only data at the state level.  Yes that means that the US is officially &lt;strong&gt;LESS OPEN&lt;/strong&gt; than China.  Let's compare a screenshot between Seattle and Hubei:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/china.png&quot; alt=&quot;IMG_2192.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/seattle.png&quot; alt=&quot;IMG_2192.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you think this is the same bull crap that we do then please use this hashtag when you tweet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#hopkinswheresmylocaldata #Covid_19 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;wheres-the-damn-map&quot;&gt;Where's the Damn Map?&lt;/h2&gt;

&lt;p&gt;We didn't put one in (yet).  I've been using the &lt;a href=&quot;https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6&quot;&gt;Hopkins tracker&lt;/a&gt; for several weeks now and it gives me a great feel for the global scene but I don't just want global - I want local.  And I'm too damn fat fingered to make their map work for me easily.&lt;/p&gt;

&lt;h2 id=&quot;why-did-you-build-this&quot;&gt;Why Did You Build This?&lt;/h2&gt;

&lt;p&gt;We wanted:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The ability to know what's happening &lt;strong&gt;near&lt;/strong&gt; the people we love.&lt;/li&gt;
  &lt;li&gt;The ability to bookmark a location - our homes, our parent's homes, our friends workplaces&lt;/li&gt;
  &lt;li&gt;The ability to know metrics which people aren't posting yet like the death metrics (why the hell is Italy so much higher?) and the recovery metrics (Seattle has a lot of cases but the recovery percentages are pretty good)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-do-i-give-you-bugs&quot;&gt;How Do I Give You Bugs?&lt;/h2&gt;

&lt;p&gt;We have setup a public github repo for this to capture bugs as github issues.  Just file an issue and please, please, please give us the url to where you have issues. Goto:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/fuzzygroup/covdidnearme_bugs/issues&quot;&gt;https://github.com/fuzzygroup/covdidnearme_bugs/issues&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If anyone out there in the bug tracking world wants to give us tooling for bugs, contact fuzzygroup at gmail.com&lt;/p&gt;

&lt;h2 id=&quot;who-the-hell-are-you&quot;&gt;Who the Hell Are You?&lt;/h2&gt;

&lt;p&gt;You keep saying we. Who is we?  There are two of us who built this:&lt;/p&gt;

&lt;h3 id=&quot;scott-johnson&quot;&gt;Scott Johnson&lt;/h3&gt;

&lt;p&gt;Scott Johnson / fuzzygroup / &lt;a href=&quot;https://www.fuzzyblog.io/blog/&quot;&gt;fuzzyblog&lt;/a&gt;.  I'm a long time tech / startup guy who has been building things forever.  You might know me from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The blogging world where I once built Feedster years and years ago.&lt;/li&gt;
  &lt;li&gt;I also built &lt;a href=&quot;https://www.jobhound.io&quot;&gt;JobHound.io&lt;/a&gt;; yes I know it is kinda broken right now; sorry; I've been busy on this.&lt;/li&gt;
  &lt;li&gt;I spent over a decade building the late AppData which was the red headed step child in the App Analytics world (we competed, unsuccessfully with AppAnnie) but that time taught me a ton about data and data science.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm also a husband, father, writer and a member of science fiction fandom.  I'm currently leading development for a Machine Learning project for the &lt;a href=&quot;https://www.adl.org/&quot;&gt;ADL&lt;/a&gt;.  And I build side projects; oh lord do I build side projects.  This is another one.&lt;/p&gt;

&lt;h3 id=&quot;elaine-e-thompson&quot;&gt;Elaine E Thompson&lt;/h3&gt;

&lt;p&gt;My cofounder on this is Elaine E. Thompson, PhD.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dr. Thompson is a bioinformatician who manages a major digital pathology AI project for the Department of Defense.&lt;/li&gt;
  &lt;li&gt;Before that she worked at the FDA, leading research in the CBER HIVE bioinformatics group.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More on both of us can be found &lt;a href=&quot;http://covidnearme.org/about&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wheres-the-data-coming-from&quot;&gt;Where's the Data Coming From?&lt;/h2&gt;

&lt;p&gt;We are using the &lt;a href=&quot;https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data&quot;&gt;Hopkins data&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;but-theres-an-error-&quot;&gt;But There's an Error !&lt;/h2&gt;

&lt;p&gt;Yep.  We've seen it to.  There are two types of errors that you'll find here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;XYZ Broke&lt;/strong&gt; aka We were stooopid.  Software engineers make bugs and we are no exceptions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data is Wrong&lt;/strong&gt;.  We are only as good as the Hopkins data and the Hopkins data does have some issues (there are typos like &quot;Wetchester&quot;) but they have done a great job and we appreciate the hell out of what they have done.  Go Hopkins!!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-frequently-is-this-updated&quot;&gt;How Frequently is this Updated?&lt;/h2&gt;

&lt;p&gt;We are rebuilding this daily as frequently as Hopkins updates their github source.  Unfortunately that's only once per day and usually we are 24 hours behind their tracker.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;is-this-free&quot;&gt;Is This Free?&lt;/h2&gt;

&lt;p&gt;Yep.  We wanted it and you get it too.&lt;/p&gt;

&lt;h2 id=&quot;am-i-tracked&quot;&gt;Am I Tracked?&lt;/h2&gt;

&lt;p&gt;Nope.&lt;/p&gt;

&lt;h2 id=&quot;whats-the-commercial-play-here&quot;&gt;What's the Commercial Play Here?&lt;/h2&gt;

&lt;p&gt;Yep. I wanted this for myself but we aren't 100% charitable here.  We have a side project going around Machine Learning labeling, &lt;a href=&quot;https://www.netlabler.com&quot;&gt;NetLabeler&lt;/a&gt; and we took time away from that to build this.&lt;br /&gt;
If you have any interest in Machine Learning labeling (and you likely don't and that's ok) then please signup for our mailing list here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://covidnearme.org/&quot;&gt;https://covidnearme.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;how-did-you-build-this-and-the-thank-yous&quot;&gt;How Did You Build This and the Thank Yous&lt;/h2&gt;

&lt;p&gt;We built this with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;.  I've never met a language that I love as much; Ruby changed my life for the better.  Thank you Matz and crew.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt;.  Yep.  I'm a Rails guy.  Even though Rails takes a lot of grief these days, it remains the &lt;strong&gt;fastest way to go from nothing to something real in just days&lt;/strong&gt; (this started just a few days ago).  Thank you DHH and Rails community.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;Postgres&lt;/a&gt;.  I'm historically a MySQL guy but I do a lot of Postgres these days and I'm coming to like the zen of Postgres.  Thanks!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;JumpStart Pro&lt;/a&gt;.  I'm basically a backend guy and JumpStart Pro is a Rails application template which makes your Rails app basically look great and handles lots and lots of things for you like SAAS and such.  Thank you Chris Oliver and GoRails (they make JumpStart Pro).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hatchbox.io/&quot;&gt;HatchBox&lt;/a&gt;.  Rails deployment is the ugly, dark, evil, crap ass side of the Rails world.  Rails deployment is generally like that alcoholic uncle who is an asshole at family gatherings.  We all tolerate Rails deployment because we love Rails but good lord Rails core team - the platform is how many damn years old now?  Someone please make this easy.  But, in the interim, there's Hatchbox which makes Rails deployment the best experience I've ever had. Thank you Chris Oliver and GoRails (they make HatchBox too).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.honeybadger.io/&quot;&gt;HoneyBadger&lt;/a&gt;.  HoneyBadger is the best way I've found to capture runtime errors in your software.  A request to the HoneyBadger team - I'm a legacy paid user on a micro account.  Any chance of getting my fuzzygroup account upgraded so my other developer on this could have access?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;Jira&lt;/a&gt;.  We are using a free Jira account to manage our development on this.  And while I've historically loathed Jira, I'm slowly being converted to the awesomeness of Jira.  A request to the Jira team - could we get our account upgraded perhaps?  Pretty please?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.do.co/c/7942f29e0585&quot;&gt;Digital Ocean&lt;/a&gt;.  Digital Ocean or DO is the best cheap hosting I've used in years.  I've run JobHound.io on Digital Ocean for years and they've been flawless (yes it is broke now but that's me not them).  This DO link includes my referral and gets me some free credits to pay for the hosting on this so feel free to signup to support covidnearme.org.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://github.com/monterail/zip-codes&quot;&gt;zip-codes gem by monterail&lt;/a&gt; on github. The very first feature request we got on this project was for Zipcode to state translation (the search bar on the left) and this gem was brilliant.  Thank you!&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covidnearme.org/2020/03/13/announcing-covidnearme-org.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covidnearme.org/2020/03/13/announcing-covidnearme-org.html</guid>
        
        <category>covidnearme.org</category>
        
        <category>covid</category>
        
        
        <category>covidnearme.org</category>
        
      </item>
    
      <item>
        <title>The Bullcrappery That is Offering Only Magic Link Authentication</title>
        <description>&lt;p&gt;So I just signed up a new service, &lt;a href=&quot;https://simpleanalytics.com/&quot;&gt;SimpleAnalytics&lt;/a&gt; because, well, if I never look again at Google Analytics then I'll be happy as hell.  I can't say enough bad things about Google Analytics – and I've been using it since it was &lt;a href=&quot;https://en.wikipedia.org/wiki/Urchin_(software)&quot;&gt;Urchin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Simple Analytics appears to be an impressive tool and I want to launching something, well, &lt;strong&gt;TODAY&lt;/strong&gt; so when they offered a simple signup and easy to use workflow, I bit.  I even gave them a credit card.  And then I went to add my co-founder on this project to it and, well, &lt;em&gt;crap&lt;/em&gt;.  They &lt;strong&gt;only&lt;/strong&gt; offer Magic Link authentication.  Sigh.  &lt;strong&gt;censored&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Magic Link Authentication is that beautiful concept that Slack pioneered where they just:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Email you a link to authenticate with.&lt;/li&gt;
  &lt;li&gt;You click the link and WHAM!&lt;/li&gt;
  &lt;li&gt;You're in.&lt;/li&gt;
  &lt;li&gt;No account stuff.&lt;/li&gt;
  &lt;li&gt;No password.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it feels like &lt;strong&gt;magic&lt;/strong&gt;.  I was blown away by this the first time I used it in Slack and I, well, I actually did a small bow towards Silicon Valley and the &lt;strong&gt;awesomeness&lt;/strong&gt; that is Stuart Butterfield (he is the guy behind Slack, the guy behind Flickr and the guy behind Game Never Ending).  Stuart is awesome (imho but so is Caterina also of course).&lt;/p&gt;

&lt;p&gt;But Magic Link Authentication isn't supposed to be your only approach to authentication.  Tomorrow I leave my home office for a long weekend.  The Magic Link Authentication email that I just forwarded to my partner on this project has a duration of only 3 hours.  My partner doesn't have access to my email (and nor should they; it is my damn email).  So let's say that they somehow need to re-authenticate (browser crash; cookie expire; whatever), their only option is to send me a text message that begs:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please kind partner of mine - will you request a Magic Link again and then wait for the email to arrive to you and then please forward it on to me?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's absolute crap imho.  Usernames and passwords are not that damn hard.  As a company SimpleAnalytics is on a &lt;a href=&quot;https://blog.simpleanalytics.com/how-we-hit-our-30k-annual-recurring-revenue-milestone&quot;&gt;$360,000 run rate&lt;/a&gt; – figure out a way to add a second person onto the damn account.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;For all my bitching:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I like the Simple Analytics product.&lt;/li&gt;
  &lt;li&gt;I wouldn't have paid for it otherwise.&lt;/li&gt;
  &lt;li&gt;I despise Google Analytics which needs to die, painfully, by fire&lt;/li&gt;
  &lt;li&gt;I want them to succeed.&lt;/li&gt;
  &lt;li&gt;I am likely to keep paying them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but I know a lot about authentication (yes Virginia I even built &lt;a href=&quot;https://en.wikipedia.org/wiki/Security_Assertion_Markup_Language&quot;&gt;SAML&lt;/a&gt; tools once upon a time and &lt;a href=&quot;https://en.wikipedia.org/wiki/Kerberos_(protocol)&quot;&gt;Kerberos&lt;/a&gt; before that) and authentication isn't as simple as Magic Links.  Even I want it to be as simple as Magic Links but it just plain isn't.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/login/2020/03/12/the-bullcrappery-that-is-offering-only-magic-link-authentication.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/login/2020/03/12/the-bullcrappery-that-is-offering-only-magic-link-authentication.html</guid>
        
        <category>authentication</category>
        
        <category>login</category>
        
        
        <category>login</category>
        
      </item>
    
      <item>
        <title>Six Tips for Interviewing Software Engineers When You Aren't Technical</title>
        <description>&lt;p&gt;Interviewing engineers when you aren't one is a regular human resources task that tends to give non technical folk fits and for good reasons.&lt;/p&gt;

&lt;h2 id=&quot;focus-on-what-you-can-interview-them-about&quot;&gt;1. Focus on What You Can Interview them About&lt;/h2&gt;

&lt;p&gt;To the non engineer, our job is all about coding but that's actually only a part of what an engineer does.  Engineers exist in the same ecosystem as any employee and there are all kinds of questions about work practices that need to be asked.  For example if remote work is a part of your work environment then dig down into how that person might function in a remote context.&lt;/p&gt;

&lt;h2 id=&quot;communications-ability-is-always-key&quot;&gt;2. Communications Ability Is Always Key&lt;/h2&gt;

&lt;p&gt;Engineers do not work in a vacuum and the ability to communicate is a key ability that improves the quality of their work.  Ask questions and see how the engineer communicates.&lt;/p&gt;

&lt;h2 id=&quot;look-for-attitude&quot;&gt;3. Look for Attitude&lt;/h2&gt;

&lt;p&gt;A lot of engineers love to drown non technical people in what amounts to techno babel – it is a way for us (yes I am an engineer myself) to feel superior.  Look for hints of that attitude during the interview and if you find it &lt;strong&gt;before&lt;/strong&gt; they are an employee then you should expect it to be even worse once they are an employee.&lt;/p&gt;

&lt;h2 id=&quot;look-for-values-alignment--culture-fit&quot;&gt;4. Look for Values Alignment / Culture Fit&lt;/h2&gt;

&lt;p&gt;When I'm an interviewer, I care most about whether or not the candidate can do the technical work because, honestly, I can work with anyone – in the end all I care about (mostly) is whether or not the code works.  Now if you are non technical then you don't care about that but you likely care a lot about value alignment and culture fit so dig in there.&lt;/p&gt;

&lt;h2 id=&quot;look-at-work-practices&quot;&gt;5. Look at Work Practices&lt;/h2&gt;

&lt;p&gt;Even if you aren't technical, you likely have some idea around work practices in development from either past experience or media.  It is ok to ask a general question like &quot;I have a bug in what you are working on - how do you handle it?&quot;.  And then what you are looking for is some kind of logical approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My first two answers on this one are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They either log the bug formally in the bug tracker / ticket system&lt;/li&gt;
  &lt;li&gt;They try and reproduce it&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;salary--benefits--company-details&quot;&gt;6. Salary / Benefits / Company Details&lt;/h2&gt;

&lt;p&gt;If you are a non technical interviewer then there is a good chance that you get the (oh joy) role of tackling salary / benefits / company stuff.  This is something that has to be dealt with.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-coding-tests&quot;&gt;Sidebar: Coding Tests&lt;/h2&gt;

&lt;p&gt;I'm a firm believer in NOT doing coding tests particularly for senior engineering roles.  There are all kinds of reasons for this that should likely be the topic of another blog post.  I tend to take people's word that if they tell me they can do X competently then that's true.  And the reason for this is that if they misrepresent themselves, well, that's a fireable thing.  And I lost my fear of firing people before I turned 20 years old.&lt;/p&gt;

&lt;p&gt;If you feel like you have to prove coding quality upfront then I recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;White boarding exercises&lt;/li&gt;
  &lt;li&gt;Rigorous reference checks&lt;/li&gt;
  &lt;li&gt;Code samples&lt;/li&gt;
  &lt;li&gt;Published Github code&lt;/li&gt;
  &lt;li&gt;Contributions to open source projects&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/03/10/six-tips-for-interviewing-software-engineers-when-you-aren-t-technical.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/03/10/six-tips-for-interviewing-software-engineers-when-you-aren-t-technical.html</guid>
        
        <category>startup</category>
        
        <category>hr</category>
        
        <category>hr</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>COVID-19 / Coronavirus Prep</title>
        <description>&lt;p&gt;&lt;strong&gt;Written: 3/10/2020 @ 4:25 PM EST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When changes are made then I will put an update time on this.&lt;/p&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;Here are the quick bullet points:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This isn't the apocalypse; but it is going to be a bad time. The mortality rates vary by age but average many times worse than flu.&lt;/li&gt;
  &lt;li&gt;Minimizing non essential travel and trips out is smart.&lt;/li&gt;
  &lt;li&gt;Keep three feet separation between people as a general guideline.&lt;/li&gt;
  &lt;li&gt;Having extra food on hand is worthwhile; having lots of water isn't because you can't practically have enough on hand.&lt;/li&gt;
  &lt;li&gt;In terms of food - treat it as you are pre-buying groceries for a bad winter storm; just get things that last for a long time and the best case scenario is you donate stuff to food banks / homeless shelters.&lt;/li&gt;
  &lt;li&gt;This is a respiratory thing so if you have asthma then you want to have an extra inhaler on hand before they run out.&lt;/li&gt;
  &lt;li&gt;Key things to buy in addition to food: Cough and Cold Medicine, Ibuprofen, Tylenol, Paper Towels, Toilet paper&lt;/li&gt;
  &lt;li&gt;It is unclear to me that hand sanitizer works on virus but hand washing does work so do the soap and water drill.&lt;/li&gt;
  &lt;li&gt;Cracked hands and small cuts on the hands are places for infection to get in so put moisturizer, bandaids and Neosporin where you need them (I put them in my cars).&lt;/li&gt;
  &lt;li&gt;There are likely to be supply chain issues on things from China.&lt;/li&gt;
  &lt;li&gt;Masks generally speaking aren't worthwhile and are best saved for emergency workers.&lt;/li&gt;
  &lt;li&gt;Hand washing is a must when you return home - make sure to NOT use a shared towel for drying (buy extra paper towels) and to turn off the water with your elbow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tracking-tools&quot;&gt;Tracking Tools&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6&quot;&gt;Johns Hopkins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.worldometers.info/coronavirus/#news&quot;&gt;Worldometers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coronavirus.arik.io/#/?checkedCountries=US&amp;amp;showCases=true&amp;amp;showDeaths=true&amp;amp;showRecoveries=true&amp;amp;axes=joint&amp;amp;scale=linear&amp;amp;derivative=false&amp;amp;includeCruiseShipDescendants=false&amp;amp;regression=none&amp;amp;modelOffset=0&amp;amp;extrapolationSize=5&amp;amp;mapDataSource=deaths&amp;amp;mapDataReference=relative%3Arecoveries&quot;&gt;Coronavirus.arik.io - US Graph&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.isitcancelledyet.com/&quot;&gt;Calendar of Cancellations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.isitcanceledyet.com/&quot;&gt;Funny Cancellations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;good-things-to-read&quot;&gt;Good Things to Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://threadreaderapp.com/thread/1237142891077697538.html&quot;&gt;Italy Triage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.popsci.com/story/diy/diy-hand-sanitizer/&quot;&gt;How to make your own Hand Sanitizer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.independent.co.uk/news/world/americas/coronavirus-new-york-national-guard-cuomo-containment-zone-new-rochelle-a9391296.html&quot;&gt;National Guard Deployed to New York&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.miamiherald.com/news/local/immigration/article241046076.html&quot;&gt;Immigration Posters Removed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/tami.lieberman?__tn__=%2CdCH-R-R&amp;amp;eid=ARA0HiwGZ1RiywqDE-heKPLIj1wAs6ynbhkKpoQXW5smCes-zpptXu71ZdVy3wTozgVIlPIEpaBL71eO&amp;amp;hc_ref=ARSrzQFW6krauYQLwZTMmef4B0EwG2mUDZgUZOmqwLq0AxlvyQVl0Q2qYU0350DtPmc&amp;amp;fref=nf&quot;&gt;Slowing the Spread&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/dpmott/status/1237363511786905601&quot;&gt;Slowing the Spread - 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://threadreaderapp.com/thread/1236095180459003909.html&quot;&gt;Systemic Health Care Failure and Math&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;worth-a-listen&quot;&gt;Worth a Listen&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://radioopensource.org/plagues-pathogens-and-panic/&quot;&gt;Open Source Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/covid/2020/03/10/covid-19-coronavirus-prep.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/covid/2020/03/10/covid-19-coronavirus-prep.html</guid>
        
        <category>covid</category>
        
        
        <category>covid</category>
        
      </item>
    
      <item>
        <title>Machine Learning Datasets for NLP</title>
        <description>&lt;p&gt;Today is a short one, just pointers to some datasets for Machine Learning data sets that I keep losing.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/datasets&quot;&gt;Kaggle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lionbridge.ai/datasets/the-best-25-datasets-for-natural-language-processing/&quot;&gt;LionBridge.ai&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://millionsongdataset.com/&quot;&gt;Million Song Dataset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/syncedreview/2019-in-review-10-open-sourced-ai-datasets-c42b73e21c82&quot;&gt;Synced Review&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.twitter.com/en/docs/labs/sampled-stream/api-reference/get-tweets-stream-sample-v1&quot;&gt;Twitter Sample Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 09 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/netlabeler/2020/03/09/machine-learning-datasets-for-nlp.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/netlabeler/2020/03/09/machine-learning-datasets-for-nlp.html</guid>
        
        <category>netlabeler</category>
        
        <category>machine_learning</category>
        
        
        <category>netlabeler</category>
        
      </item>
    
      <item>
        <title>Casting in Python and Redis</title>
        <description>&lt;p&gt;I recently had this situation in &lt;a href=&quot;https://redislabs.com/lp/python-redis/&quot;&gt;Python and Redis&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis.lpush(kafka_topic_name, current_filename)
redis.exceptions.ResponseError: WRONGTYPE Operation against a key holding the wrong kind of value
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So I did my normal deal of debugging by adding:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import pdb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdb.set_trace()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;before the lpush call and I tried it manually by typing out &lt;em&gt;redis.lpush(kafka_topic_name, current_filename) ENTER&lt;/em&gt; and it, naturally, worked fine.  &lt;em&gt;Grumble&lt;/em&gt;. What I finally ended up doing is wrapping a str() call as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis.lpush(str(kafka_topic_name), (current_filename))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that let things work correctly.  In talking with another Python programmer, we came to the conclusion that Python's auto casting of things between &lt;a href=&quot;https://stackoverflow.com/questions/6269765/what-does-the-b-character-do-in-front-of-a-string-literal&quot;&gt;byte literals and strings&lt;/a&gt; was the culprit.  Wrapping a str() call around both the list name and the list value solved things nicely.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I figured this out by moving from a &lt;strong&gt;lpush&lt;/strong&gt; operation on Redis to a &lt;strong&gt;sadd&lt;/strong&gt; operation and then retrieving back a single entry which showed me the Python b prefix:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b'/Users/sjohnson/Sync/fuzzygroup/adl/ohi_kafka/experts-all/data/twitter/25400bcd1142564b4476c178935bd736.json'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;also---dont-forget-about-unicode&quot;&gt;Also - Don't Forget About Unicode&lt;/h2&gt;

&lt;p&gt;I dug into this further and a least part of this issue for string conversion from Python byte ranges into actual strings is that you need to use a&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;current_filename.decode(&quot;utf-8&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;call because the Python byte range has no idea what the encoding was.  Now I will admit that I'm surprised that Python didn't realize &quot;Ok we're reading data from the filesystem's dir() operation&quot; and it is OS-X so the encoding must be XYZ (utf-8 I would think).  Here's an example of this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import sys
&amp;gt;&amp;gt;&amp;gt; sys.stdout.encoding
'UTF-8'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And since my coworker on this project uses Linux, I guess I need to embed that into my application (note - it isn't 100% clear to me that sys.stdout.encoding is the same as the encoding of the filesystem's directory output; there is also the  sys.setdefaultencoding('utf-8') call).&lt;/p&gt;

&lt;p&gt;See Also:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27848037/python-unicodedecodeerror-while-listing-directory&quot;&gt;Stack Overflow 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/606191/convert-bytes-to-a-string&quot;&gt;Stack Overflow 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugs.python.org/issue17860&quot;&gt;Related Python Bug Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sidebar-deleting-a-redis-list&quot;&gt;Sidebar: Deleting a Redis List&lt;/h2&gt;

&lt;p&gt;As you might imagine, this type of error led me to creating a number of redis lists with bad data. There isn't an explicit delete command in Redis which gives two work arounds:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Iterate over the list and simply pop everything off; at the end the list goes away&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.redisgreen.net/blog/deleting-large-lists/&quot;&gt;Rename the list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/03/08/casting-in-python-and-redis.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/03/08/casting-in-python-and-redis.html</guid>
        
        <category>python</category>
        
        <category>redis</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Reloading the REPL in Python</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/607483cd3c96fc17beee37cd0248294a.jpg&quot; alt=&quot;607483cd3c96fc17beee37cd0248294a.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you know something well you always look to learn by analogy.  Today's short topic is reloading the REPL (read-evaluate-print-loop) interactive console in Python and then contrast between Python and Rails.  And, yes, I get that Python is a language and Rails is a framework but where you tend to work directly in the Python console, you also tend to work directly in the Rails console (as opposed to the IRB Ruby console on which the Rails console is based but the Rails console improves it a lot).&lt;/p&gt;

&lt;p&gt;The reason this is important is that if you use a REPL a lot, well, you are constantly switching between editor and REPL and until this damn blog post, I had to quit my Python console every damn time.  Just imagine me cursing up a blue streak and you will get a small fraction of my frustration when you see the difference below between Python and Rails.&lt;/p&gt;

&lt;h2 id=&quot;python---launching-the-console&quot;&gt;Python - Launching the Console&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;rails---launching-the-console&quot;&gt;Rails - Launching the Console&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails c    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You may have to type this as bundle exec rails c (also knowing as the &quot;bundle exec&quot; tax).&lt;/p&gt;

&lt;h2 id=&quot;python---reloading-the-console-when-you-change-your-code&quot;&gt;Python - Reloading the Console When You Change Your Code&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import importlib
importlib.reload(your_module_name_here)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import expert_classification
# try some code; find bug; fix bug
import importlib
importlib.reload(expert_classification)
# try code again
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;rails---reloading-the-console-when-you-change-your-code&quot;&gt;Rails - Reloading the Console When You Change Your Code&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reload!    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you change your Rails gem stack then you have to exit the console entirely.  I'll give you that.&lt;/p&gt;

&lt;h2 id=&quot;why-this-matters-why-rails-is-better-here-and-a-rant&quot;&gt;Why This Matters, Why Rails is Better Here And a Rant&lt;/h2&gt;

&lt;p&gt;It is hard to know when you're changing stuff with more than a single module exactly what you changed.  The Rails method of typing &lt;strong&gt;reload!&lt;/strong&gt; and having your whole environment reloaded solved this entirely.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reload method on importlib is new in Python 3.4.  &lt;strong&gt;Insert emoji of Munsch scream here&lt;/strong&gt; How the hell is this possible that reloading came only on March 17, 2014 when Python started shipping in December 1989?  I can't remember ever not having reload! in Rails.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-making-this-automatic-with-an-ipython-configuration&quot;&gt;Sidebar: Making this Automatic with an iPython Configuration&lt;/h2&gt;

&lt;p&gt;Create your profile first:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipython profile create
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Edit it (your editor and path will be different but it will be something like this):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mate /Users/sjohnson/.ipython/profile_default/ipython_config.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Put these lines in place:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c = get_config()
c.InteractiveShellApp.exec_lines = ['load_ext autoreload', 'autoreload 2']
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save, exit and restart iPython and your changes will be handled automagically.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-originalthe-magic-answer-with-some-bitterness-and-anger---welcome-to-ipython&quot;&gt;Sidebar Original:The Magic Answer with Some Bitterness and Anger - Welcome to Ipython&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I wrote this sidebar originally and then I found the answer but I like the bitterness and rage here and I know one of my readers will be tickled pink by this (as will her husband should she pass it on).&lt;/p&gt;

&lt;p&gt;I did more digging and apparently iPython fixes this with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;load_ext autoreload
autoreload 2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm still going to argue that this being 2 commands instead of 1 (although the 2 parameter to autoreload above does make subsequent code changes automatic) and yes you can supposedly make this automatic with an iPython profile configuration but even:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipython profile create
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then modifying the profile to have:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c = get_config()
c.InteractiveShellApp.code_to_run = 'load_ext autoreload'
c.InteractiveShellApp.code_to_run = 'autoreload 2'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;isn't right because the 3rd line tosses a syntax error and when I eliminate the third line, the second line causes iPython to exit on startup – but they do work interactively.  And, yes, yes with sufficient googling I could fix this but I've got code to write and this is an &lt;strong&gt;endless rabbit hole of suckitude&lt;/strong&gt; so route this entire blog post to /dev/null and just exit the REPL and re-enter or remember this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use ipython not python3&lt;/li&gt;
  &lt;li&gt;At the start of your session always type &lt;strong&gt;load_ext autoreload&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;And then type: &lt;strong&gt;autoreload 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2534480/proper-way-to-reload-a-python-module-from-the-console&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipython.org/ipython-doc/3/config/extensions/autoreload.html&quot;&gt;iPython Older&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html&quot;&gt;iPython Current&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/reloading-modules-python/&quot;&gt;Geeks for Geeks on Reload&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/importlib.html#importlib.reload&quot;&gt;The Reload Method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 07 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/03/07/reloading-the-repl-in-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/03/07/reloading-the-repl-in-python.html</guid>
        
        <category>python</category>
        
        <category>rails</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Emulating Ruby's Benchmark.real_time in Python Using a Context Manager</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2291.jpeg&quot; alt=&quot;IMG_2291.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the most confusing aspects of multi language programming is when you know how to do it in your preferred language and when you are trying to figure it out in your new language.  And, as any reader of this blog knows, Ruby is always, always, always my preferred language.  But, as my perspective on languages widens, I suspect you could say that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby is my wife but&lt;/li&gt;
  &lt;li&gt;I have a serious relationship with Python&lt;/li&gt;
  &lt;li&gt;And I'm now flirting with Rust and seeing if I want to bring her to the dance …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But enough of that foolishness, today's topic is code benchmarking.  Here's what I would do in Ruby:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;elapsed_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;realtime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some_long_running_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'some_long_running_method'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsed_time&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By defining the results variable outside the &lt;strong&gt;block&lt;/strong&gt; of code (the bits between do and end), it basically gets a transitive scope that allows what is computed inside the block to exist outside the block.  And then I set the associative array (also known as a hash) to have a key for the method, some_long_running_method, and also the elapsed time.  This way I can build up a hash of all my methods and how long they take.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A block is a &quot;lexical scope&quot; during which (the code between the do and end), variables are local only to that scope (unless you &quot;shadow&quot; it with a variable of the same name).&lt;/p&gt;

&lt;p&gt;My pairing partner on this project, Grant, has told me &quot;You could use a context manager for this&quot;.  And this led me to these Python docs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/contextlib.html&quot;&gt;ContextLib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/context-manager-in-python/&quot;&gt;Geeks for Geeks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I found both of these very pythonic – which, for me, means I &lt;em&gt;didn't understand them at all&lt;/em&gt;.  Happily I was able to cobble together a basic example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;contextlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contextmanager&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_long_running_method1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_long_running_method2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@contextmanager&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;benchmark_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t_0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;run_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmark_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run_time&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test_sleep'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;some_long_running_method1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test_foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;some_long_running_method1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The @contextmanager is apparently a &quot;python decorator&quot;.  I don't really understand decorators any more than I understand interior decorators so, well, there's that.&lt;/p&gt;

&lt;p&gt;The end result of this is a Python dictionary like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'some_long_running_method1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.696846008300781e-05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'some_long_running_method2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.696846008300781e-05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's how this looks like in a production code refactor:&lt;/p&gt;

&lt;h2 id=&quot;before&quot;&gt;Before&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;time_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_kafka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop_from_topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kafka_conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka_topic_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_debugging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'common_kafka.pop_from_topic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;after&quot;&gt;After&lt;/h2&gt;

&lt;p&gt;You should note that my timer routine now is located in a common file named common_debugger.py.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;common_debugger&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_debugging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'common_kafka.pop_from_topic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;common_kafka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop_from_topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kafka_conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka_topic_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is pretty clearly an improvement in terms of reducing complexity and code cruft.  Context managers are an interesting improvement to Python even if I personally found the documentation confusing.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/03/06/emulating-ruby-s-benchmark-realtime-in-python-using-a-context-manager.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/03/06/emulating-ruby-s-benchmark-realtime-in-python-using-a-context-manager.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>PDF Text Extraction Is Hard Even for AWS Textract</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2329.jpeg&quot; alt=&quot;IMG_2329.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have always found that serendipity plays a large role in my technical life.  For example I recently ran into a great article and discussion thread on PDF Text Extraction:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.filingdb.com/pdf-text-extraction&quot;&gt;Article&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22473263&quot;&gt;Discussion Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The thrust of this article amounts to &quot;PDF Processing Is Hard and Here's Why&quot; (tldr - PDF isn't a document format as much as a layout format and how things are laid out generally bears little relationship to their structure as &quot;document elements&quot;).&lt;/p&gt;

&lt;p&gt;Now lately I've been involved in some resume processing lately and this made me say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hm… Can I extract just the email addresses programmatically from this stack of resumes?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I found that following the techniques in this &lt;a href=&quot;https://medium.com/@rqaiserr/how-to-convert-pdfs-into-searchable-key-words-with-python-85aab86c544f&quot;&gt;Medium article&lt;/a&gt;, I was able to extract roughly 70% of the email addresses from a small sample.  And while 70% isn't bad, I suspected that better should be possible.  And that led me to the &lt;a href=&quot;https://aws.amazon.com/textract/&quot;&gt;AWS Textract&lt;/a&gt; service.&lt;/p&gt;

&lt;p&gt;Unfortunately what I found was that even the &quot;machine learning&quot; powered Textract service:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Amazon Textract overcomes these challenges by using machine learning to instantly “read” virtually any type of document to accurately extract text and data without the need for any manual effort or custom code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;failed to get email addresses reliably out of simple PDF resumes (note - my overall review on Textract is still generally positive; see Conclusion below).  The failure rate was better – roughly 10% instead of 30% but it still failed.  What I did find fascinating, however, is how AWS Textract works under the hood.  There appear to be  three results from the Textract API call:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;apiResponse.json&lt;/li&gt;
  &lt;li&gt;keyValues.csv&lt;/li&gt;
  &lt;li&gt;rawText.txt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These three results have different functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a set of bounding boxes with text elements right down to geometry&lt;/li&gt;
  &lt;li&gt;a set of semantic fields that they found in the document (I generally found this pretty useless; for a resume I would have expected things like contact info to be key values; instead it was a graduation date)&lt;/li&gt;
  &lt;li&gt;the full text of the document&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of the apiResponse.json which was the most interesting of these (note that I modified the contact info before to be nonsense values in the interest of candidate privacy):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;DocumentMetadata&quot;: {
    &quot;Pages&quot;: 1
  },
  &quot;JobStatus&quot;: &quot;SUCCEEDED&quot;,
  &quot;Blocks&quot;: [
    {
      &quot;BlockType&quot;: &quot;PAGE&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 1,
          &quot;Height&quot;: 1,
          &quot;Left&quot;: 0,
          &quot;Top&quot;: 0
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0,
            &quot;Y&quot;: 0
          },
          {
            &quot;X&quot;: 1,
            &quot;Y&quot;: 0
          },
          {
            &quot;X&quot;: 1,
            &quot;Y&quot;: 1
          },
          {
            &quot;X&quot;: 0,
            &quot;Y&quot;: 1
          }
        ]
      },
      &quot;Id&quot;: &quot;87aab91c-10c3-4191-86ef-1a0f250967be&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;84fa231e-2427-4ca5-9b17-4259f503c86b&quot;,
            &quot;05b76c03-093d-4910-92d3-fb44105a7ba8&quot;,
            &quot;d15f7eec-b028-44cd-ae33-533056aa4781&quot;,
            &quot;58e06118-f8e4-480f-b959-3f446bbab5d9&quot;,
            &quot;0d917c44-f204-429f-8cbb-8ec9cb5c7e00&quot;,
            &quot;463bcf6d-c759-49be-b29f-29037e183064&quot;,
            &quot;afe3b98b-7fdb-47ff-8102-593bd827eb8a&quot;,
            &quot;ae57ff27-7202-49fa-b655-6bc8b6ffd789&quot;,
            &quot;71580491-1cd2-423e-806f-5e0feef655b3&quot;,
            &quot;a64ce3df-d8fb-4d83-85df-591d18f4bcb3&quot;,
            &quot;8fe6464f-56bd-4c34-97a9-bb006d45b344&quot;,
            &quot;35c2359a-116a-40d6-8273-e3f4d4c5e2b4&quot;,
            &quot;e1bde700-0c89-42d0-853d-0bc4993399f9&quot;,
            &quot;b3109ceb-d8f8-421e-9244-a07a2a9b5239&quot;,
            &quot;f5152abc-6df8-48c0-ae3b-77027809101f&quot;,
            &quot;a046da52-4cea-4e29-a89a-45f21beea3cb&quot;,
            &quot;3cd7399f-6a98-4b4b-897f-78f9b137df21&quot;,
            &quot;bef5b4a7-a1c7-450d-8986-491152dd6d2f&quot;,
            &quot;f351ecec-c23f-4a3a-b9f5-424e596c9415&quot;,
            &quot;75e884d1-50f9-4065-8f69-2d4b58e30d4a&quot;,
            &quot;9a296dac-b804-4613-996b-edfceccfe256&quot;,
            &quot;ae7d1032-90a2-4274-987e-e8eafc61d7e7&quot;,
            &quot;2dc6fe79-2a69-48cb-a4ba-bf8a405acbcd&quot;,
            &quot;d4652eb5-9071-4451-8fcf-46bd61f1c036&quot;,
            &quot;b0fa99d4-fa78-41c7-adf4-0e856e5fbf7b&quot;,
            &quot;d7ac3623-e47c-4200-b55c-11f534058333&quot;,
            &quot;8e157557-b7ab-432b-b0a7-91aaa90672fc&quot;,
            &quot;f602d231-16ef-4eb4-bf25-b03103a9ea06&quot;,
            &quot;836e2ef9-1400-4091-82ba-c89483dea265&quot;,
            &quot;52c86df4-7855-4c6d-b6ed-7bce72e0e27b&quot;,
            &quot;f549a067-879d-4536-93df-47b2be6522ea&quot;,
            &quot;e3340758-ab33-4029-894b-a95b2291e8d9&quot;,
            &quot;5e72a4a3-cb40-4760-b4d9-2168e35d20a7&quot;,
            &quot;a9ee3dfb-67da-4f70-b72e-296302fe73bd&quot;,
            &quot;740d09a0-cbe1-4094-af3f-240a492f7742&quot;,
            &quot;99ed5bc2-8bc5-48c8-8fb1-d25984702d49&quot;,
            &quot;bfd03b33-7bdc-4115-bfc5-3c2aa2cc2c07&quot;,
            &quot;e4fb79b6-6015-46a2-8474-d0aa12f3ab8c&quot;,
            &quot;62c38550-9fb4-4f8f-ae31-d7137294439e&quot;,
            &quot;0d8fa105-9bcb-4a6d-b3f9-f3332202edfe&quot;,
            &quot;8a221c4f-0fc4-4db8-b550-5b4592d9d7cd&quot;,
            &quot;290058c0-1c75-43b8-b158-bdd409ae8a83&quot;,
            &quot;98ae6f91-842a-4aa9-b78b-7bed745ad9cd&quot;,
            &quot;f4e7228c-6117-462f-a2de-12fe9fdbd318&quot;,
            &quot;8dbc468c-5323-4df0-895c-8ec141d270ff&quot;,
            &quot;1bd5d158-a9f5-4942-aecb-1ad4acbe0242&quot;,
            &quot;3c2c9a98-32cd-44bd-a41d-2d167fd0c660&quot;,
            &quot;ffe50c97-3ef7-485d-9662-0e51bc0532e9&quot;,
            &quot;44eab195-e89f-4468-a6ac-7e783eea7e70&quot;,
            &quot;905344ed-5bb6-4a48-90c1-91ec5df2731e&quot;,
            &quot;9a9d401a-646f-4c63-848e-c63ced45613c&quot;,
            &quot;c169fa15-17a9-4d66-a2a5-d04604717f41&quot;,
            &quot;5fdaccd1-0548-40d6-91f5-e715ea6cc7cc&quot;,
            &quot;4931b0c8-d22a-49b5-b693-7c8e2cd57b2b&quot;,
            &quot;91568b1f-4724-40d0-8018-29385ff48b41&quot;,
            &quot;38ed7115-a109-40f9-bc58-efd346b0189d&quot;,
            &quot;ba5b8e71-c982-49a4-a32e-2505eb07634a&quot;,
            &quot;2f25027e-774c-4284-a52a-615fef4b8a9e&quot;,
            &quot;bb2239fe-e9e0-4498-8632-94a7edcb144e&quot;,
            &quot;1d651db9-1518-4432-85d2-9d7cf9362847&quot;,
            &quot;e419bc6c-690a-4bef-b830-1b991b88949c&quot;,
            &quot;1e5306d2-e0ea-4b47-953e-8140b8c7cbcb&quot;,
            &quot;71fb110f-a8a6-4285-bc25-63941faf0778&quot;,
            &quot;62832387-9ea9-4564-a4c3-871c5f15d729&quot;,
            &quot;59b7a3e4-acea-4625-b6f8-05886d558e52&quot;,
            &quot;14336d40-fd0c-47b7-aff6-5213c6d7a0f7&quot;,
            &quot;e58e4ba0-567f-494d-91d8-fb2c4aa6eec0&quot;,
            &quot;29cea082-c4df-41cf-9a68-1c9a388be9b3&quot;,
            &quot;24abce03-8a73-4c2e-9bca-e25ee82d7ce5&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
    {
      &quot;BlockType&quot;: &quot;LINE&quot;,
      &quot;Confidence&quot;: 99.34569549560547,
      &quot;Text&quot;: &quot;Austin Johnson&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 0.17683932185173035,
          &quot;Height&quot;: 0.01665823720395565,
          &quot;Left&quot;: 0.4110524356365204,
          &quot;Top&quot;: 0.046603888273239136
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0.4110524356365204,
            &quot;Y&quot;: 0.046603888273239136
          },
          {
            &quot;X&quot;: 0.5878917574882507,
            &quot;Y&quot;: 0.046603888273239136
          },
          {
            &quot;X&quot;: 0.5878917574882507,
            &quot;Y&quot;: 0.06326212733983994
          },
          {
            &quot;X&quot;: 0.4110524356365204,
            &quot;Y&quot;: 0.06326212733983994
          }
        ]
      },
      &quot;Id&quot;: &quot;84fa231e-2427-4ca5-9b17-4259f503c86b&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;b90a16d9-f9a8-40b9-8407-1f41d7434c0f&quot;,
            &quot;af247f18-04bb-45ce-b48b-884440f3f669&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
    {
      &quot;BlockType&quot;: &quot;LINE&quot;,
      &quot;Confidence&quot;: 91.6850357055664,
      &quot;Text&quot;: &quot;+1 (267) 999-8879&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 0.14686554670333862,
          &quot;Height&quot;: 0.014410415664315224,
          &quot;Left&quot;: 0.08256683498620987,
          &quot;Top&quot;: 0.06718409806489944
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0.08256683498620987,
            &quot;Y&quot;: 0.06718409806489944
          },
          {
            &quot;X&quot;: 0.2294323742389679,
            &quot;Y&quot;: 0.06718409806489944
          },
          {
            &quot;X&quot;: 0.2294323742389679,
            &quot;Y&quot;: 0.08159451931715012
          },
          {
            &quot;X&quot;: 0.08256683498620987,
            &quot;Y&quot;: 0.08159451931715012
          }
        ]
      },
      &quot;Id&quot;: &quot;05b76c03-093d-4910-92d3-fb44105a7ba8&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;9b1f5522-2874-4348-9deb-c91b8f46ffe0&quot;,
            &quot;4331a1bf-ecc0-4d5a-b4fe-d19b1a3629d5&quot;,
            &quot;8c09ea37-ace2-4dd3-83e2-83137fc27f10&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
    {
      &quot;BlockType&quot;: &quot;LINE&quot;,
      &quot;Confidence&quot;: 98.89478302001953,
      &quot;Text&quot;: &quot;austinjohnson@gmail.com&quot;,
      &quot;Geometry&quot;: {
        &quot;BoundingBox&quot;: {
          &quot;Width&quot;: 0.21318471431732178,
          &quot;Height&quot;: 0.015170887112617493,
          &quot;Left&quot;: 0.7046566009521484,
          &quot;Top&quot;: 0.06679927557706833
        },
        &quot;Polygon&quot;: [
          {
            &quot;X&quot;: 0.7046566009521484,
            &quot;Y&quot;: 0.06679927557706833
          },
          {
            &quot;X&quot;: 0.9178413152694702,
            &quot;Y&quot;: 0.06679927557706833
          },
          {
            &quot;X&quot;: 0.9178413152694702,
            &quot;Y&quot;: 0.08197016268968582
          },
          {
            &quot;X&quot;: 0.7046566009521484,
            &quot;Y&quot;: 0.08197016268968582
          }
        ]
      },
      &quot;Id&quot;: &quot;d15f7eec-b028-44cd-ae33-533056aa4781&quot;,
      &quot;Relationships&quot;: [
        {
          &quot;Type&quot;: &quot;CHILD&quot;,
          &quot;Ids&quot;: [
            &quot;4e82dc44-c82f-4b30-b830-d13d201f61ad&quot;
          ]
        }
      ],
      &quot;Page&quot;: 1
    },
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It would actually be pretty simply to take this JSON and walk across it with a map operation on a series of regular expressions and extract an email address -or- a header block (on the assumption that resumes have contact info in the first say 10 lines of the resume).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Even though I wasn't as impressed by the Textract as I wanted to be, it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;performed quite well&lt;/li&gt;
  &lt;li&gt;was easier to get running that using Python and NLTK&lt;/li&gt;
  &lt;li&gt;didn't return the amount of garble text (i.e. PDF display instructions) that I saw using Python&lt;/li&gt;
  &lt;li&gt;structured the API results well enough that I could easily manipulate it to get the information I wanted out of the result&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bravo AWS!  Nicely done.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/03/05/pdf-text-extraction-is-hard-even-for-aws-textract.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/03/05/pdf-text-extraction-is-hard-even-for-aws-textract.html</guid>
        
        <category>aws</category>
        
        <category>python</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>When to Use a Helper Method in Rails</title>
        <description>&lt;p&gt;One of the more interesting facilities in Rails &lt;em&gt;helpers&lt;/em&gt; which reside in app/helpers/*.rb and are used, well, as helpers.  Helpers are basically display level execution of Ruby code.  I recently wrote what I thought was a great example of a helper so I thought I'd document it.  What I had was a object, stored in the database which had a bunch of data that I needed to display:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;the object, called a label
  A serialized hash called labeled_data
     label0 
     label1
     label2
     label3
     label4
     label5
     label6
     label7
     label8
     label9
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What I wanted to do was transform this, at display time, to an HTML structure like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;label0: &amp;lt;b&amp;gt;The Data for Label 0&amp;lt;/b&amp;gt;
&amp;lt;p&amp;gt;label1: &amp;lt;b&amp;gt;The Data for Label 0&amp;lt;/b&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and, correctly, not show label2, etc if they were blank.  And, naturally, do the right thing when there was no data in the labeled_data hash, etc.  And while I could have done this with a view and code wrapped in evaluation / output tags:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;% and %&amp;gt; or &amp;lt;%= or %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;it is dramatically cleaner to write this type of thing as a helper and then call it as a function like display_labeled_data(label).  Not only does this make the code much cleaner than evaluation / output tags, it also has the advantage of being testable.  Now all that said, here is the code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;display_labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;labeled_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;p&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;:&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;extracted_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;br/&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html_safe&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The key idea here is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create an output object, in this case an array or []&lt;/li&gt;
  &lt;li&gt;loop a data structure – label.labeled_data.keys&lt;/li&gt;
  &lt;li&gt;as you loop the data structure, put things into the output object like a paragraph tag, the name of the key i.e. &quot;label0&quot;, a ':'&lt;/li&gt;
  &lt;li&gt;clean up the data by converting new lines to html line breaks&lt;/li&gt;
  &lt;li&gt;add the data into the output element&lt;/li&gt;
  &lt;li&gt;add a closing p tag&lt;/li&gt;
  &lt;li&gt;add a line break onto every element of the output object (using join which acts like a map command) and then tell the Rails environment to NOT escape the output because it is known to be &quot;html_safe&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This routine is then called in my display template like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= display_labeled_data(@label) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;on the show page for the labels controller.  See – Rails helpers, easy peasy!&lt;/p&gt;

&lt;h2 id=&quot;pro-tip---helpers-like-rake-tasks-have-a-global-namespace&quot;&gt;Pro Tip - Helpers, like Rake Tasks, have a Global Namespace&lt;/h2&gt;

&lt;p&gt;And, in closing here's the pro tip:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Helpers, like Rake tasks, are stored in different files&lt;/li&gt;
  &lt;li&gt;This makes you think that a display_labeled_data method in, say, labels_helper.rb which is different from a method called display_labeled_data in say projects_helper.rb.&lt;/li&gt;
  &lt;li&gt;Nope!  It is a global namespace&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that is why I simply put all my helpers into the project level application_helper.rb instead of into the controller level, automatically generated helpers – it helps me always remember that helpers share a global namespace.  And keep in mind that methods defined in rake tasks also share a global namespace.&lt;/p&gt;

&lt;p&gt;Oh and did I mention that when you have multiple versions of the same method, which one gets called is often random because it depends on compilation order which is tied to filesystem return order on lists of all files with a .rb extension …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The global namespace thing on Rake tasks can be particularly tricky when you a Ruby gem which injects Rake tasks into your project behind the scenes.  This one time, I had a one day contractor who checked in a Rake task with a method named &lt;strong&gt;run&lt;/strong&gt;.  And that was just fine until 9 months later when we switched our deployment method from Capistrano to Vlad and Vlad, at least at that time, had a method internal to its Rake task called &lt;strong&gt;run&lt;/strong&gt;.  Chasing that one down literally gave me some gray hairs.  Ah, happy, happy joy joy!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/04/when-to-use-a-helper-method-in-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/04/when-to-use-a-helper-method-in-rails.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>netlabeler</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Your Global .gitconfig</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2192.jpeg&quot; alt=&quot;IMG_2192.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had a question recently about my use of &lt;strong&gt;git trash&lt;/strong&gt; which isn't a standard git command.  I accomplished this, about a decade ago, by modifying ~/.gitconfig and, well, I haven't thought about it ever since.  Here's my ~/.gitconfig as an example.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[color]
diff = auto
status = auto
branch = auto
[color &quot;branch&quot;]
current = yellow reverse
local = yellow
remote = green
[color &quot;diff&quot;]
meta = yellow bold
frag = magenta bold
old = red bold
new = green bold
[color &quot;status&quot;]
added = yellow
changed = green
untracked = cyan
[user]
name = Scott Johnson
email = blahblahblah@gmail.com
[alias]
co = checkout
st = status
br = branch
trash = checkout -f
lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset' --abbrev-commit
[apply]
whitespace = nowarn
[core]
excludesfile = /Users/sjohnson/.gitignore_global
[difftool &quot;sourcetree&quot;]
cmd = opendiff \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;
path = 
[mergetool &quot;sourcetree&quot;]
cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot; -ancestor \&quot;$BASE\&quot; -merge \&quot;$MERGED\&quot;
trustExitCode = true
[filter &quot;lfs&quot;]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
required = true
process = git-lfs filter-process
[push]
default = simple
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The key thing, to support git trash, is the [alias] section.  This is where you can define your own custom commands based on the fundamental git primitives.  My git lg command is also pretty nice (and courtesy from Sean Kennedy).&lt;/p&gt;

&lt;p&gt;Another really, really useful thing is the excludesfile setting which lets you tell git to never, ever worry about a file like the cursed &lt;strong&gt;.DS_Store&lt;/strong&gt; files which OSX persists in generating.&lt;/p&gt;

&lt;p&gt;This is generally stored in something like /Users/username/.gitignore_global.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2020/03/03/your-global-gitconfig.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2020/03/03/your-global-gitconfig.html</guid>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>No React Native Didn't Just Get Killed</title>
        <description>&lt;p&gt;Once upon a time I blogged about the controversial things but now, well, I mostly don't care.  Still every so often you come along someone getting things so, so, so wrong that you feel compelled to respond.  I'm speaking to this tweet by DHH, someone I deeply, deeply respect:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Did Facebook just kill off React Native? Either way, it's funny that I actually agree. &lt;a href=&quot;https://twitter.com/dhh/status/1234644555258978304&quot;&gt;More&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nope.  We didn't just see React Native get killed.  Just because Facebook may not be using it for Messenger, it doesn't mean that React Native has been killed.  What it likely means is that React Native simply &lt;strong&gt;isn't the right technology&lt;/strong&gt; for Messenger at this time.&lt;/p&gt;

&lt;p&gt;Here is what React Native lets you do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use a single code base across multiple platforms.&lt;/li&gt;
  &lt;li&gt;Have less employees on the same project because it is a single code base.&lt;/li&gt;
  &lt;li&gt;Work in JavaScript instead of native languages (Objective C / Swift or Java / Kotlin).&lt;/li&gt;
  &lt;li&gt;Have an app that works more universally instead of more &quot;platform like&quot; (i.e. the user interface abstractions that a cross platform tool like React Native use have a cost in terms of look and feel) .&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I mean does anyone actually think that Facebook can't afford multiple teams to work on Messenger?  I certainly don't.  And I also don't think that Facebook needs to have developers working in JavaScript instead of native languages.  My suspicion is that Facebook simply made an &lt;strong&gt;economic decision&lt;/strong&gt; around resourcing of teams and / or a decision that native languages would result in a better user experience.  But this is an economic decision that is tied to the large economic resources that Facebook has.  We saw a similar decision a year or two ago when AirBnB left React Native and, again, that did not kill React Native.&lt;/p&gt;

&lt;p&gt;Cross platform development technologies like React Native and Flutter still have a place in the world as most companies / organizations simply don't have the massive economic resources of a Facebook (or AirBnB).&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/react/2020/03/03/no-react-native-didn-t-just-get-killed.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/react/2020/03/03/no-react-native-didn-t-just-get-killed.html</guid>
        
        <category>react</category>
        
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>Using Rust Playground for Hello World and Variable Interpolation</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1313.jpg&quot; alt=&quot;IMG_1313.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.facebook.com/autumnmottart&quot;&gt;Artwork by my friend Autumn Mott; Hopefully I can find a better link to put here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a Monday and what better way to start your 6 am Monday morning then learning some of the elements of a new language – Rust.&lt;/p&gt;

&lt;p&gt;I started by adding a link in my Browser toolbar to the Rust Playground which amounts to a web based REPL (Read Evaluate Print Loop) for Rust where you can type in Rust code and run it.  Yes I know it really isn't a REPL because Rust is a compiled language not an interpreted one but it functions well enough as a REPL that I can wrap my Ruby tinged mind around it.&lt;/p&gt;

&lt;p&gt;Here's the Hello World program that automatically appears in the Rust playground&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output of this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello, world!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's pretty easy to understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A main function defined with fn&lt;/li&gt;
  &lt;li&gt;A print line function defined with a ! (my previous Rust reading tells me that's a macro indicator)&lt;/li&gt;
  &lt;li&gt;{ and } to denote structure&lt;/li&gt;
  &lt;li&gt;A ; to denote the end of lines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I wanted to make a simple change to experiment with the use of variables so I added a main2() function and called it from main():&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;main2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The value of x is: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The value of y is: {}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output of this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello, world!
The value of x is: 5
The value of y is: 6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can see that the &lt;strong&gt;let&lt;/strong&gt; keyword assigns a variable and that {} binds a variable into a string (which is generally called interpolation).&lt;/p&gt;

&lt;p&gt;Note: Variables quickly bring you in to the heart of Rust – &lt;a href=&quot;https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html&quot;&gt;immutability&lt;/a&gt; – and here there by dragons that hopefully come up tomorrow after some reading.&lt;/p&gt;

&lt;h2 id=&quot;link&quot;&gt;Link&lt;/h2&gt;

&lt;p&gt;Here's a &lt;a href=&quot;https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2018&amp;amp;gist=496e2617d024958faf48d84553bd8cf1&quot;&gt;permanent link&lt;/a&gt; to this if you want to try it out.&lt;/p&gt;

&lt;h2 id=&quot;what-about-replit&quot;&gt;What about Repl.it?&lt;/h2&gt;

&lt;p&gt;Another way to have a web based REPL for Rust is &lt;a href=&quot;https;//www.repl.it&quot;&gt;Repl.it&lt;/a&gt;.  And while I like the concept of repl.it, they have eliminated any privacy without a paid account: Upgrade your account for private repls.  This appears on the bottom of every new REPL you create and at $74 / 12 months that feels &lt;a href=&quot;https://repl.it/site/pricing&quot;&gt;expensive&lt;/a&gt; simply for the basics of privacy.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/03/02/using-rust-playground-for-hello-world-and-variable-interpolation.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/03/02/using-rust-playground-for-hello-world-and-variable-interpolation.html</guid>
        
        <category>rust</category>
        
        <category>variables</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Rails Form Technique - Using collection_select with Open Structs</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0741.jpeg&quot; alt=&quot;IMG_0741.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've written about Open Structs before:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2017/01/16/ruby-how-to-sort-an-open-struct.html&quot;&gt;Sorting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2020/02/09/when-you-need-a-ruby-data-structure-that-responds-to-method-calls-use-openstruct.html&quot;&gt;Responding to Method Calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To review, an Open Struct is a hash like data structure that responds to dot methods (i.e. .id or .name).  I use these in a lot of different places and I just finished using them for a form &lt;a href=&quot;https://apidock.com/rails/ActionView/Helpers/FormOptionsHelper/collection_select&quot;&gt;collection_select&lt;/a&gt; operation.&lt;/p&gt;

&lt;p&gt;The Rails collection_select form helper is really designed to work with database objects that you need to make pick lists from.  The canonical usage is like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form.label :project_id %&amp;gt;
&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collection_select&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The expression current_user.projects.all is a list of all projects as an iterable ActiveRecord collection and what collection_select does under the hood is loop over the collection and call the .id and .name methods (.id is the value in the collection and .name is what's displayed).  And this works &lt;strong&gt;great&lt;/strong&gt; – until what you have to select isn't a database collection.  And that, dear reader, is where open structs come out to play!&lt;/p&gt;

&lt;p&gt;Here's what I just did:&lt;/p&gt;

&lt;h2 id=&quot;controller-side&quot;&gt;Controller Side&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;web_browser_on_computer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Web Browser (Desktop Computer)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mobile_app&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mobile App&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This defines an array of open struct objects.  And an array is an iterable collection just like the database collection so this implementation, despite being an entirely different underlying data structure, works just like the ActiveRecord collection based version.&lt;/p&gt;

&lt;h2 id=&quot;view-side&quot;&gt;View Side&lt;/h2&gt;

&lt;p&gt;And here's the view side:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form.label :context %&amp;gt;
&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collection_select&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@contexts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;appearance&quot;&gt;Appearance&lt;/h2&gt;

&lt;p&gt;Here's how this looks by default and then when dropped down:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/collection_select_open_struct01.png&quot; alt=&quot;collection_select_open_struct01.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/collection_select_open_struct02.png&quot; alt=&quot;collection_select_open_struct02.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/03/01/rails-form-technique-using-collection-select-with-open-structs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/03/01/rails-form-technique-using-collection-select-with-open-structs.html</guid>
        
        <category>rails</category>
        
        <category>open_struct</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Access to Rust Docs When You are Offline</title>
        <description>&lt;p&gt;This one is short but simple since I didn't have it on my last flight and I fly again tomorrow.  To access your Rust documentation when you aren't online:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rustup docs --book
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That brings up a browser with a full implementation of the rust docs.  Not only is there a full table of contents but it is also searchable.&lt;/p&gt;

&lt;p&gt;There is also the magic of &lt;a href=&quot;https://devdocs.io/r&quot;&gt;devdocs.io&lt;/a&gt; but that requires that you were wise enough to have pre-clicked the install for offline option.  And, alas, I was not.&lt;/p&gt;

</description>
        <pubDate>Sat, 29 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/02/29/getting-access-to-rust-docs-when-you-are-offline.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/02/29/getting-access-to-rust-docs-when-you-are-offline.html</guid>
        
        <category>rust</category>
        
        <category>docs</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Stupid Simple Duplicate Prevention Using Redis</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_2004.jpg&quot; alt=&quot;IMG_2004.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I just saw this log message popup on a SystemD service I wrote yesterday:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Feb 24 10:27:11 ip-172-31-24-213 reddit_to_kafka[18391]: Already exists in redis so also in kafka so skipping
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sometimes you need to solve a problem without a lot of effort.  Yesterday I needed to populate a Kafka queue with data and I didn't want to worry about duplicates flowing into it.  Here's what I knew:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My source wasn't a stream but a set of social media posts that I was monitoring&lt;/li&gt;
  &lt;li&gt;I didn't have a database&lt;/li&gt;
  &lt;li&gt;I didn't want the overhead of checking a database before I inserted&lt;/li&gt;
  &lt;li&gt;Every post had an id that I knew would be unique (if I pre-pended it with the name of the source)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever I have a problem like this, I reach for &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; almost instinctively.  My stupid, simple solution was as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create a key i.e. key = &quot;reddit_#{message.id}&quot;&lt;/li&gt;
  &lt;li&gt;create a Redis object i.e. redis = Redis.new&lt;/li&gt;
  &lt;li&gt;check if the key already exists using redis.exists(key)&lt;/li&gt;
  &lt;li&gt;if that check returns true then do nothing&lt;/li&gt;
  &lt;li&gt;if that check returns false then add the data and set the key (you want to do this AFTER adding the data in case the add fails; atomicity, even pseudo atomicity is a thing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The beauty of Redis is that it installs using nothing more than:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install redis
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that installs a local installation of Redis – and starts it – that any process can easily connect to (and there are always language bindings for Redis seemingly).  This easy usability for Redis makes it invaluable for this type of task.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: Given the size of my input source and its frequency, I'm not even going to worry about the number of keys and the fact that this approach is pretty brain dead.  When we get a larger volume data feed, I'll circle back and fix it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: It took longer to write this up than it did to actually implement and test this.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2020/02/24/stupid-simple-duplicate-prevention-using-redis.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2020/02/24/stupid-simple-duplicate-prevention-using-redis.html</guid>
        
        <category>redis</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>Generating Your First Rust App with Cargo</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0833.jpeg&quot; alt=&quot;IMG_0833.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Rust tool cargo is the Rust equivalent of rake and bundler and rails combined (these are Ruby tools).  Cargo is what you use to generate a new Rust app.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cargo new loader_datastreamer_to_kafka_rust
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This generates a new, correctly laid out project directory.  And here's what it looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ tree
.
├── Cargo.toml
└── src
    └── main.rs

1 directory, 2 files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The Cargo.toml file is a package manifest which has a default contents of this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ cat Cargo.toml
[package]
name = &quot;loader_datastreamer_to_kafka_rust1&quot;
version = &quot;0.1.0&quot;
authors = [&quot;Scott Johnson &amp;lt;blahblah@gmail.com&amp;gt;&quot;]
edition = &quot;2018&quot;

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any Rust packages, which are named &lt;strong&gt;crates&lt;/strong&gt;, you use in your application would be listed under the dependencies section.  Here's an example of that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[dependencies]
notify = &quot;4.0.15&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's an example of using the &lt;a href=&quot;https://crates.io/crates/notify&quot;&gt;notify crate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Your default main.rs file is always stored in src and looks like this initially:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ cat src/main.rs
fn main() {
    println!(&quot;Hello, world!&quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep – you get a Hello World for free when you create any Rust application.&lt;/p&gt;

&lt;p&gt;Cargo actually does quite a bit more than just creating your Rust application but that's a topic for another day.&lt;/p&gt;

</description>
        <pubDate>Sun, 23 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/02/23/generating-your-first-rust-app-with-cargo.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/02/23/generating-your-first-rust-app-with-cargo.html</guid>
        
        <category>rust</category>
        
        <category>docs</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>Advice on Importing Wunderlist to Todoist</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1577_hands_only.jpeg&quot; alt=&quot;IMG_1577_hands_only.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wunderlist is now on the real verge of being shutdown by Microsoft and Todoist claims to be &lt;a href=&quot;https://todoist.com/import/wunderlist&quot;&gt;import compatible&lt;/a&gt;.  One thing to know is that Todoist Free has a limit of 50 lists.  If you've used Wunderlist for any number of years then you may find your import failing.  Two options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Merge lists in Wunderlist before importing (I think the limit is the number of discrete lists not the total number of list items)&lt;/li&gt;
  &lt;li&gt;Buy Todoist paid edition (I did only the first paid edition) before you import&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you import and you get a Failed Import message then that's the sign that you need to do either 1 or 2.  The first time I imported, import failed without any feedback.  Props to Todoist for fixing this pretty quickly and that's the reason I paid.&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/wunderlist/2020/02/22/advice-on-importing-wunderlist-to-todoist.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/wunderlist/2020/02/22/advice-on-importing-wunderlist-to-todoist.html</guid>
        
        <category>wunderlist</category>
        
        
        <category>wunderlist</category>
        
      </item>
    
      <item>
        <title>Great Rust Libraries / Tools</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1986.jpeg&quot; alt=&quot;IMG_1986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't often do the dance with new languages.  I suspect you could view my approach to languages as monogamy – I've been in a long term, monogamous relationship with Ruby now since 2007.  But 12 years is a long time and deciding to dance with Python this past fall was perhaps my break through event away from &quot;language monogamy&quot;.  I'm now happily dating other languages and the latest one to turn my head is &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I've been very impressed with the quality of the core tooling around Rust and here are some of those tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/IntrepidPig/orca&quot;&gt;https://github.com/IntrepidPig/orca&lt;/a&gt; – Reddit client library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/aho-corasick&quot;&gt;https://github.com/BurntSushi/aho-corasick&lt;/a&gt; – String / Substring matcher&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/aho-corasick&quot;&gt;https://crates.io/crates/kafka&lt;/a&gt; – Kafka client&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/notify-rs/notify&quot;&gt;https://github.com/notify-rs/notify&lt;/a&gt; – Filesystem watcher; this is what drew me to using Rust; I have a high performance application where I'm virtually certain Ruby is going to fall over and die.  Rust gives me an alternative.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/francesca64/hotwatch&quot;&gt;https://github.com/francesca64/hotwatch&lt;/a&gt; - make notify easier to use&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://eradman.com/entrproject/&quot;&gt;http://eradman.com/entrproject/&lt;/a&gt;  – A filesystem watcher built on top of Rust; possible alternative.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://eradman.com/entrproject/&quot;&gt;https://github.com/watchexec/watchexec&lt;/a&gt; – Another filesystem watcher built on top of Rust; possible alternative.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/spacejam/sled&quot;&gt;https://github.com/spacejam/sled&lt;/a&gt; – An embedded database built in Rust&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bastion-rs/bastion&quot;&gt;https://github.com/bastion-rs/bastion&lt;/a&gt; – Seemingly an Erlang like distributed runtime; fascinating AF if it is true&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the reasons you use Rust is performance and the metrics on Sled are pretty impressive:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;over a billion operations in under a minute at 95% read 5% writes on 16 cores on a small dataset&lt;/li&gt;
  &lt;li&gt;a crash-safe monotonic ID generator capable of generating 75-125 million unique ID's per second&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sources--things-to-read&quot;&gt;Sources / Things to Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.rust-lang.org/learn/get-started&quot;&gt;Getting Started with Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.codeship.com/coming-rust-ruby/&quot;&gt;Rust and Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/getting-started-with-rust-and-kafka/&quot;&gt;Rust and Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rust/comments/57ybqa/watchexec_rustbased_file_watcher_for_os_x_linux/&quot;&gt;Rust File Watcher&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/carols10cents/rust.tmbundle&quot;&gt;Textmate 2 and Rust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://crates.io/&quot;&gt;Rust Package Index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 21 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rust/2020/02/21/great-rust-libraries-tools.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rust/2020/02/21/great-rust-libraries-tools.html</guid>
        
        <category>rust</category>
        
        
        <category>rust</category>
        
      </item>
    
      <item>
        <title>ADL Bias and Diversity Training</title>
        <description>&lt;p&gt;As a contractor for the ADL, I recently went through our official bias and diversity training.  I put together my notes on that for a new hire who recently joined us.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0798.jpeg&quot; alt=&quot;IMG_0798.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0799.jpeg&quot; alt=&quot;IMG_0799.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0800.jpeg&quot; alt=&quot;IMG_0800.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0801.jpeg&quot; alt=&quot;IMG_0801.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0802.jpeg&quot; alt=&quot;IMG_0802.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0803.jpeg&quot; alt=&quot;IMG_0803.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0804.jpeg&quot; alt=&quot;IMG_0804.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0805.jpeg&quot; alt=&quot;IMG_0805.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0806.jpeg&quot; alt=&quot;IMG_0806.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0807.jpeg&quot; alt=&quot;IMG_0807.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0808.jpeg&quot; alt=&quot;IMG_0808.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0809.jpeg&quot; alt=&quot;IMG_0809.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0810.jpeg&quot; alt=&quot;IMG_0810.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0812.jpeg&quot; alt=&quot;IMG_0812.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0813.jpeg&quot; alt=&quot;IMG_0813.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0814.jpeg&quot; alt=&quot;IMG_0814.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0815.jpeg&quot; alt=&quot;IMG_0815.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here are some of the discussion questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is it ok for people of a group to use slurs about their own identity?&lt;/li&gt;
  &lt;li&gt;Should airlines be required to provide multiple seats to obese people ?&lt;/li&gt;
  &lt;li&gt;Does your work place treat everyone fairly?&lt;/li&gt;
  &lt;li&gt;Can anyone be successful in the USA?&lt;/li&gt;
  &lt;li&gt;Does the USA live up to its ideals of racial diversity?&lt;/li&gt;
  &lt;li&gt;Do women have the same opportunities as men?&lt;/li&gt;
  &lt;li&gt;Do people of color have the same opportunities as white people?&lt;/li&gt;
  &lt;li&gt;Peanut butter racism&lt;/li&gt;
  &lt;li&gt;Blind spot bias you may have bias that you see in others but can't see in yourself&lt;/li&gt;
  &lt;li&gt;White fragility by d Angelo&lt;/li&gt;
  &lt;li&gt;MTV micro aggressions&lt;/li&gt;
  &lt;li&gt;(my personal favorite (this is a Scott thing)- &lt;a href=&quot;https://www.youtube.com/watch?v=oQbei5JGiT8&quot;&gt;Tea and Consent&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 20 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bias/2020/02/20/adl-bias-and-diversity-training.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bias/2020/02/20/adl-bias-and-diversity-training.html</guid>
        
        <category>bias</category>
        
        <category>diversity</category>
        
        
        <category>bias</category>
        
      </item>
    
      <item>
        <title>Rails Console and Test Mode</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1831.jpeg&quot; alt=&quot;IMG_1831.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a short one but a good one.  One really useful trick is to launch Rails console in test mode:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ RAILS_ENV=test rails c
Running via Spring preloader in process 41705
Loading test environment (Rails 6.0.2.1)
irb: warn: can't alias context from irb_context.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can check the Rails environment this way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.7.0 :001 &amp;gt; Rails.env
&quot;test&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The benefit to this is that you can work directly with FactoryBot and experiment with factories:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.7.0 :002 &amp;gt; project = FactoryBot.create(:project, name: &quot;Scott's Project&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;FactoryBot is installed via Gemfile and locked into test environment only (which is why you need to launch Rails console in test mode):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :test do
  # Adds support for Capybara system testing and selenium driver
  gem &quot;capybara&quot;, &quot;&amp;gt;= 2.15&quot;
  gem &quot;selenium-webdriver&quot;
  # Easy installation and use of web drivers to run system tests with browsers
  gem &quot;webdrivers&quot;
  gem 'factory_bot_rails'
  #gem 'database_cleaner'
  # gem 'shoulda'
  # gem 'shoulda-matchers'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 19 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/02/19/rails-console-and-test-mode.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/02/19/rails-console-and-test-mode.html</guid>
        
        <category>rails</category>
        
        <category>test</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Great Con Signage</title>
        <description>&lt;p&gt;I spent a lot of time in the world of Science Fiction and Fantasy conventions and it has fascinated me how far that world is beyond the normal (aka muggle or mundane) world when it comes to concepts like consent.  I was recently at the &lt;a href=&quot;http://confusionsf.org/&quot;&gt;Confusion&lt;/a&gt; convention in Detroit and I captured the signage that talked about these things because they did such a good job with it (and with integrating it into the con's How To Train Your Confusion theme).&lt;/p&gt;

&lt;h2 id=&quot;consent-related-signage&quot;&gt;Consent Related Signage&lt;/h2&gt;

&lt;p&gt;Here is the consent related signage:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1478_2.jpeg&quot; alt=&quot;IMG_1478_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1483_2.jpeg&quot; alt=&quot;IMG_1483_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1485_2.jpeg&quot; alt=&quot;IMG_1485_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1484_2.jpeg&quot; alt=&quot;IMG_1484_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1482_2.jpeg&quot; alt=&quot;IMG_1482_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1480_2.jpeg&quot; alt=&quot;IMG_1480_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gluten-free-signage&quot;&gt;Gluten Free Signage&lt;/h2&gt;

&lt;p&gt;Since I'm a food person, I also captured how they approached the gluten free signage:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1472_2.jpeg&quot; alt=&quot;IMG_1472_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1473_2.jpeg&quot; alt=&quot;IMG_1473_2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;about-confusion&quot;&gt;About Confusion&lt;/h2&gt;

&lt;p&gt;Confusion is a fan run, Detroit based science fiction convention with a surprisingly good &quot;feel&quot; to it. Among the cool features is a dance party DJ'd by non other than &lt;a href=&quot;https://whatever.scalzi.com/&quot;&gt;John Scalzi&lt;/a&gt;.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/cons/2020/02/18/great-con-signage.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cons/2020/02/18/great-con-signage.html</guid>
        
        <category>cons</category>
        
        <category>gender</category>
        
        <category>consent</category>
        
        
        <category>cons</category>
        
      </item>
    
      <item>
        <title>So You Just Graduated with a Computer Degree</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/photo_2020-02-18 06.42.12.jpeg&quot; alt=&quot;photo_2020-02-18 06.42.12.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have a good friend who is about to graduate with a Computer Science degree and, as a seasoned professional in the field (aka old fart), I know he's going to be asking me for advice.  And if I'm going to give cogent advice, I always feel that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It might be useful to someone else so putting it online is helpful&lt;/li&gt;
  &lt;li&gt;Advice is improved by clear thinking and clear thinking comes from written expression (at least for me)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My view of the time between graduation and joining the workforce is that you want to build the habits that will make you succcessful in your &lt;strong&gt;career&lt;/strong&gt;.  Note that I said &lt;strong&gt;career&lt;/strong&gt; and not your first job.&lt;/p&gt;

&lt;h2 id=&quot;your-job-will-be-40-hours-per-week&quot;&gt;Your Job Will Be 40 Hours Per Week&lt;/h2&gt;

&lt;p&gt;My first bit of real advice to a new graduate is that your job, unless it pays overtime, is 40 hours per week.  Your employer will always subtly or not so subtly encourage you to work more and, if you like computer stuff, it is &lt;em&gt;easy&lt;/em&gt; to fall into a model where you work more than 40 hours.  I did this for years and years and, imho, it didn't pay off.  We all have the belief that if we work hard and put in the time that we will get ahead.  Given the myriad disconnects between employer and employee, I no longer think that's the case.  And, yes, there are times where some extra work is called for but making it a systemic practice that defines your life, well, that's just dumb and it is &lt;strong&gt;poor career management&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;build-something&quot;&gt;Build Something&lt;/h2&gt;

&lt;p&gt;My basic recommendation to you is that you build something that you personally want.  This is also known as a side project.  I'm a fan of side projects as a way of improving yourself / teaching yourself new things.  And, sometimes, side projects become real and make you money (my RSS search that I made back in 2003 over a snowy weekend ended up becoming a venture funded thing).  Now that is a best case, you could also end up with a directory of side projects that never go anywhere (I have that too).  You should understand that what is going to happen to you once you graduate and leave formal academia is your skills begin to atrophy; this is real and it happens.  A side project, even a crappy one that you think no employer might appreciate, keeps your engineering skills alive.  And even though you'd like to think you are going to roll from school right into engineering work but when you see articles like &lt;a href=&quot;https://daves.blog/blog/why-cant-good-engineers-get-hired&quot;&gt;this&lt;/a&gt; regularly appearing, it means that the hiring path is sometimes not so clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Employers, and, yes, I'm one, are generally impressed by side projects.  Most people don't have them so they do distinguish you from other candidates.&lt;/p&gt;

&lt;h2 id=&quot;network&quot;&gt;Network&lt;/h2&gt;

&lt;p&gt;Networking, generally a hard thing for engineers, is an invaluable skill and the best way to understand it if you are an engineer is this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Networking is &quot;Lunch with Friends You Might Not Have Made Yet&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my friends case, he and I are having lunch today and we will talk shop a bit.  Now this is easier because he actually knows me and can talk to me.  But that's the essence of networking - it is learning to talk to people and that is an invaluable skill.&lt;/p&gt;

&lt;h2 id=&quot;goto-meetups&quot;&gt;Goto Meetups&lt;/h2&gt;

&lt;p&gt;If you don't have people you can network with then you need to find them and the best way is generally your local meetup.  Even here in Indianapolis, not a huge city and certainly not a tech hub, I could literally go to a meetup every day for lunch and dinner and advance my career in terms of learning and meeting people.  And I've never seen a meetup where they don't go around the room and ask:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Who's hiring?&lt;/li&gt;
  &lt;li&gt;Who's looking for work?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, wham!, right there you have a ready made job opportunity.&lt;/p&gt;

&lt;p&gt;So figure out what you're interested in and join a meetup and get involved.&lt;/p&gt;

&lt;h2 id=&quot;volunteer&quot;&gt;Volunteer&lt;/h2&gt;

&lt;p&gt;I didn't used to be a fan of this but a good friend turned me onto community involvement and volunteering over the past 15 months or so and it has been a very good thing for me.  I actually did a stint as Head of Engineering for StarBase Indy, a local, fan run science fiction convention.  There is always something that needs computer assistance whether it is a local convention, a charity, a cause or some such.  This is another way you can build your skills.&lt;/p&gt;

&lt;h2 id=&quot;build-your-online-profile&quot;&gt;Build Your Online Profile&lt;/h2&gt;

&lt;p&gt;I'm a fan of building a robust online profile.  Now, for me, that mostly amounts to my blog (which you are reading) since I like to write but there are lots of ways to make an online profile:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Answer Stack Overflow Questions&lt;/li&gt;
  &lt;li&gt;Improve Documentation (I can cite one person that I hired into a 6 figure job who got that job mostly because he had contributed to Rails core documentation)&lt;/li&gt;
  &lt;li&gt;Help out with projects on github&lt;/li&gt;
  &lt;li&gt;.. (There are so many online things in the area of software development)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My general recommendation here is use the same profile picture and username across activities since there are candidate evaluation tools that take that into account.&lt;/p&gt;

&lt;h2 id=&quot;it-is-all-about-continuous-self-improvement&quot;&gt;It Is All About Continuous Self Improvement&lt;/h2&gt;

&lt;p&gt;If you look at the points above, it really is all about continuous self improvement.  This is the core habit that you really want to build.&lt;/p&gt;

&lt;h2 id=&quot;buy-josh-doodys-book-now&quot;&gt;Buy Josh Doody's Book Now&lt;/h2&gt;

&lt;p&gt;I'm going to close this out by pimping out a favorite book of mine, &lt;a href=&quot;https://fearlesssalarynegotiation.com/&quot;&gt;Fearless Salary Negotiation&lt;/a&gt; by Josh Doody.  Josh's book is the single best book I've ever read about the practical side of getting a job and the hardest bit for engineers – negotiating our compensation.  I am a 52 year old engineer who has been doing this type of work (ahem crap) for over 30 years and I got a dramatic boost in current gig from what I learned from this book.  If you read this book early in your career, I suspect you can do this most of your career.  This book is short, to the point and utterly hands on.  I can't recommend it enough.&lt;/p&gt;

&lt;p&gt;Note: There is no referral agreement, no tracking code, etc between Josh and I.  I'm simply a fan of his work since it has literally changed my career.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/student/2020/02/17/so-you-just-graduated-with-a-computer-degree.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/student/2020/02/17/so-you-just-graduated-with-a-computer-degree.html</guid>
        
        <category>student</category>
        
        
        <category>student</category>
        
      </item>
    
      <item>
        <title>Writing Ruby Programs Like a Python Programmer</title>
        <description>&lt;p&gt;As of late, I have found myself writing a number of what amount to &quot;Non Rails&quot; tools.  These are tools that tend to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run continuously in the background&lt;/li&gt;
  &lt;li&gt;Are deployed as SystemD services on Unix boxes&lt;/li&gt;
  &lt;li&gt;Have the normal issues of coding complexities between development (OSX) and production (Ubuntu)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though I normally just generate a Rails application for even my command line tools, this project felt like minimalism was called for and, well, I wanted that particular challenge.&lt;/p&gt;

&lt;p&gt;In the remainder of this blog post, I'm going to talk about what this looks like and what I've learned from spending a few months in the Python world and how I'm applying it here.&lt;/p&gt;

&lt;h2 id=&quot;file-structure&quot;&gt;File Structure&lt;/h2&gt;

&lt;p&gt;Here's a directory listing from one of these tools.  The thing to understand is that &quot;ohi&quot; is the abbreviation for the project (which explains why you see it multiple times).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ ls -l
total 64
-rw-r--r--@ 1 sjohnson  staff   189 Feb 24 09:58 Gemfile
-rw-r--r--  1 sjohnson  staff  2083 Feb 24 09:58 Gemfile.lock
-rw-r--r--@ 1 sjohnson  staff   307 Feb 24 10:21 README.md
-rwxr-xr-x@ 1 sjohnson  staff   111 Feb 24 14:35 deploy.sh
-rw-r--r--@ 1 sjohnson  staff  3542 Feb 24 14:07 loader.rb
-rw-r--r--@ 1 sjohnson  staff  1477 Feb 24 14:12 loader_kafka_to_ohi.rb
-rw-r--r--@ 1 sjohnson  staff   436 Feb 24 10:29 loader_kafka_to_ohi.service
-rw-r--r--@ 1 sjohnson  staff   125 Feb 24 10:22 loader_kafka_to_ohi.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is the role of each of these pieces:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gemfile / Gemfile.lock – the standard Ruby packages that the tool relies on&lt;/li&gt;
  &lt;li&gt;README.md – the Readme&lt;/li&gt;
  &lt;li&gt;deploy.sh – a shell script that SCP's everything up to a deployment server.  Yeah, yeah. I need CI/CD.  And it will come but for now this makes deployment easy.&lt;/li&gt;
  &lt;li&gt;loader.rb – the &quot;God&quot; class for this tool (explained below)&lt;/li&gt;
  &lt;li&gt;loader_kafka_to_ohi.rb – the actual main loop for the tool&lt;/li&gt;
  &lt;li&gt;loader_kafka_to_ohi.service – the SystemD service file for this&lt;/li&gt;
  &lt;li&gt;loader_kafka_to_ohi.sh – the shell script called by the SystemD service file&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;it-really-is-about-separating-def-main-from-supporting-functions&quot;&gt;It really is About Separating def main From Supporting Functions&lt;/h2&gt;

&lt;p&gt;While all these tools tend to come down to the 8 files above (or variants on them), the bulk of it is in two files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;loader_kafka_to_ohi.rb&lt;/li&gt;
  &lt;li&gt;loader.rb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first file, loader_kafka_to_ohi.rb, basically amounts to  a few sections:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A comment at the very top showing how to execute it including any command line arguments&lt;/li&gt;
  &lt;li&gt;A set of require statements to load the gems (remember - this isn't Rails so you need to manually require your gems)&lt;/li&gt;
  &lt;li&gt;Constant declaration&lt;/li&gt;
  &lt;li&gt;A def main function&lt;/li&gt;
  &lt;li&gt;A call to execute main()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the skeleton:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Execution Example&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# RAILS_ENV=development TOPIC=reddit ruby loader_reddit_to_kafka.rb&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'kafka'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mechanize'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ostruct'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redd'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'loader'&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TOPIC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# code here&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note 0&lt;/strong&gt;: You'll notice that I still use the convention of RAILS_ENV for the environment; I'm too damn trained at this point in my career to even consider naming that something else&lt;/p&gt;

&lt;p&gt;Having written a number of these tools lately, I can definitively state that there is a &lt;strong&gt;huge&lt;/strong&gt; clarity of code benefit to separating out the main loop from the supporting code.  It is a forest for the trees sort of thing.&lt;/p&gt;

&lt;p&gt;The second file, loader.rb, is a &quot;God Class&quot; which wraps every function used by main (or any of the functions that main calls) into a single class.  Given that the underlying function of this tool is to load data, well, I call the class: Loader i..e&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Loader&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Even though a God class is generally a bad thing (poor use of name spaces, too big, etc.), I found it to be a decent compromise in terms of abstractions simply because it makes debugging &lt;em&gt;trivial&lt;/em&gt;.  I find myself constantly switching between local development and remote development (where all my tooling like Kafka, my API server, etc) exist.  With a god class like loader, I can easily ssh into my production box and then just use irb in my deployment directory to:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'loader'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then continue figuring out whatever problem has come up with easy access to functions in my god class (everything is just a def self.whatever method in loader.rb so all methods can be called trivially).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: My main loop including require statements, constants and declarations is less than 60 lines and my god class is less than 160 lines.  As I said this is a compromise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Normally the term God object is used instead of &quot;God class&quot; but since I'm not actually ever instantiating an object, it felt like God class was more accurate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: But shouldn't you always have your development environment mirror your production environment?  Sure in an ideal world but Kafka servers are a &lt;em&gt;damn censored&lt;/em&gt; pain in the arse to setup where as the AWS managed kafka service is almost brainless in its simplicity.  This is a very lightly staffed project and I chose to spend my time on coding rather than DevOps (and, yes, getting something complex installed locally is still DevOps).&lt;/p&gt;

&lt;h2 id=&quot;use-requirerelative-to-import-a-god-class&quot;&gt;Use require_relative to Import A God Class&lt;/h2&gt;

&lt;p&gt;The key technique to making this style of development work was my realizing that while &lt;a href=&quot;https://www.thoughtco.com/requre-method-2908199&quot;&gt;require&lt;/a&gt; worked for gems, it worked poorly, if at all, for my own function libraries.  The reason for this is apparently Ruby madness with respect to the current working directory or cwd.  Happily &lt;a href=&quot;https://stackoverflow.com/questions/9750610/ruby-require-error-cannot-load-such-file&quot;&gt;require_relative solves this issue with flying colors&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wheres-the-python-connection&quot;&gt;Where's the Python Connection?&lt;/h2&gt;

&lt;p&gt;I find this technique, a god class with require_relative, to be very similar to coding in Python using import statements.  Oddly Python feels a bit more object oriented because anything you import automatically gets treated as a namespace that makes coding look like a class.  Python folk use this technique very readily and I find that flexibility quite pleasant in Ruby (even if I have to define a class to make it work).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 4&lt;/strong&gt;: Yes I should be able to do this also with &lt;a href=&quot;https://ruby-doc.com/docs/ProgrammingRuby/html/tut_modules.html&quot;&gt;modules&lt;/a&gt; but I've found modules to be problematic in past experience so … (and I freely admit that it might be me).&lt;/p&gt;

&lt;h2 id=&quot;what-about-test-coverage&quot;&gt;What About Test Coverage&lt;/h2&gt;

&lt;p&gt;While I shudder to admit it, I actually haven't written test coverage for these things yet.  When I do I'll figure out how to graft test coverage onto a non Rails application.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/15/writing-ruby-programs-like-a-python-programmer.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/15/writing-ruby-programs-like-a-python-programmer.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Installing Ruby using rbenv on Ubuntu 18</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1813.jpeg&quot; alt=&quot;IMG_1813.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;Rbenv&lt;/a&gt; provides a powerful tool for installing ruby on whether on your local box or on your server environment.  While I have traditionally used &lt;a href=&quot;https://rvm.io/&quot;&gt;RVM&lt;/a&gt; for local ruby development, I have found RVM problematic for use in a server context.  As long as you are using bash -lc along with things like &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2020/02/13/making-ruby-scripts-work-under-system-d-using-rbenv.html&quot;&gt;CRON jobs or System D&lt;/a&gt;, rbenv seems to be a great server side tool.&lt;/p&gt;

&lt;p&gt;My inspiration for this came from the &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-ubuntu-16-04&quot;&gt;Digital Ocean&lt;/a&gt; docs.  As always, Digital Ocean does a great job on documentation.&lt;/p&gt;

&lt;p&gt;Here are the steps to get rbenv installed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install rbenv
rbenv
sudo apt-get install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
git clone https://github.com/rbenv/rbenv.git ~/.rbenv
echo 'export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
rbenv install -l | grep 2.7.0
rbenv install 2.7.0
rbenv global 2.7.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here are the lines from my history file showing my flailing as I attempted to get rbenv installed.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;307  rbenv
308  rbenv install 2.7.0
309  rbenv install --list | grep 2.7
310  cd ~/.rbenv/plugins/ruby-build
311  which ruby-build
312  /usr/bin/ruby-build --version
313  cd ~/.rbenv/plugins/ruby-build
314  sudo apt-get upgrade ruby-build
315  /usr/bin/ruby-build --version
316  rbenv install --list | grep 2.7
317  sudo apt-get install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
318  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
319  echo 'export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
320  echo 'eval &quot;$(rbenv init -)&quot;' &amp;gt;&amp;gt; ~/.bashrc
321  source ~/.bashrc
322  type rbenv
323  git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
324  rbenv install -l
325  rbenv install -l | grep 2.7.0
326  rbenv install 2.7.0
327  rbenv global 2.7.0
328  pwd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 14 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/14/installing-ruby-using-rbenv-on-ubuntu-18.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/14/installing-ruby-using-rbenv-on-ubuntu-18.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Making Ruby Scripts work Under System D Using rbenv</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1840.jpg&quot; alt=&quot;IMG_1840.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This has bit me I think every single time I make a SystemD launch script using ruby and rbenv (RVM is worse; imho). Perhaps writing it down for once makes the lesson stick.&lt;/p&gt;

&lt;p&gt;Let's start with our SystemD unit file that doesn't work:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Twitter To Kafka

[Service]
SyslogIdentifier=twitter_to_kafka
User=ubuntu
PIDFile=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.pid
WorkingDirectory=/home/ubuntu/twitter_to_kafka

ExecStart=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.sh
ExecReload=/home/twitter_to_kafka/twitter_to_kafka/twitter_to_kafka.sh
ExecStop=/bin/kill -s QUIT $MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This generates errors like these:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ sudo systemctl status twitter_to_kafka.service
● twitter_to_kafka.service - Twitter To Kafka
   Loaded: loaded (/lib/systemd/system/twitter_to_kafka.service; enabled; vendor preset: enabled)
   Active: failed (Result: exit-code) since Thu 2020-02-13 12:57:48 UTC; 1min 54s ago
  Process: 7615 ExecStart=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.sh (code=exited, status=203/EXEC)
 Main PID: 7615 (code=exited, status=203/EXEC)

Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Main process exited, code=exited, status=203/EXEC
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Failed with result 'exit-code'.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Service hold-off time over, scheduling restart.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Scheduled restart job, restart counter is at 5.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: Stopped Twitter To Kafka.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Start request repeated too quickly.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: twitter_to_kafka.service: Failed with result 'exit-code'.
Feb 13 12:57:48 ip-172-31-24-213 systemd[1]: Failed to start Twitter To Kafka.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problem is that rbenv is a shell extension so the shell has to be loaded to run this correctly.  Just adding /bin/bash -lc to ExecStart and ExecReload fixes this.  Here's the actual working unit file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Twitter To Kafka

[Service]
SyslogIdentifier=twitter_to_kafka
User=ubuntu
PIDFile=/home/ubuntu/twitter_to_kafka/twitter_to_kafka.pid
WorkingDirectory=/home/ubuntu/twitter_to_kafka

ExecStart=/bin/bash -lc /home/ubuntu/twitter_to_kafka/twitter_to_kafka.sh
ExecReload=/bin/bash -lc /home/twitter_to_kafka/twitter_to_kafka/twitter_to_kafka.sh
ExecStop=/bin/kill -s QUIT $MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sample github file where I found &lt;a href=&quot;https://gist.github.com/unonasoft/48fd1df0f6a8a7a8e554632c9066178b&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/13/making-ruby-scripts-work-under-system-d-using-rbenv.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/13/making-ruby-scripts-work-under-system-d-using-rbenv.html</guid>
        
        <category>ruby</category>
        
        <category>systemd</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Started with Ruby and an AWS Managed Kafka Server</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1839.jpg&quot; alt=&quot;IMG_1839.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am in the position of building a data pipeline that looks like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kafka as the core repository using an &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/msk/home?region=us-east-2#/home&quot;&gt;AWS Managed Kafka Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A data feed from Twitter feeding into Kafka using the &lt;a href=&quot;https://github.com/zendesk/ruby-kafka&quot;&gt;ruby-kafka&lt;/a&gt; gem from Zendesk&lt;/li&gt;
  &lt;li&gt;Python Machine Learning routines processing the data in Kafka and outputting it to SQS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this blog post I will walk through creating the Kafka server and then show you the initial configuration to get Ruby to talk to it.&lt;/p&gt;

&lt;h2 id=&quot;core-assumptions&quot;&gt;Core Assumptions&lt;/h2&gt;

&lt;p&gt;Here are the core assumptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AWS Managed Kafka Instance in the same VPC as an EC2 Instance&lt;/li&gt;
  &lt;li&gt;Ruby 2.7&lt;/li&gt;
  &lt;li&gt;Minimal ruby script; just enough to connect and put one thing into a topic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-kafka-pricing&quot;&gt;AWS Kafka Pricing&lt;/h2&gt;

&lt;p&gt;The baseline pricing for an AWS kafka.m5.large cluster is:  0.21 / hour &lt;strong&gt;without factoring in storage&lt;/strong&gt;.  0.21 / hour means nothing to me so here's the calculation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0.21 * 24 = $5.04 / day&lt;/li&gt;
  &lt;li&gt;0.21 * 24 * 7 = $35.28 / week&lt;/li&gt;
  &lt;li&gt;0.21 * 24 * 30 = $151.20 / month&lt;/li&gt;
  &lt;li&gt;0.21 * 24 * 365 = $1839.60 / year&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whether or not this is a good deal depends on your budget and application but what I can tell you is that the AWS Managed Kafka is phenomenally easy to setup and get started with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Read thru the creation process below because I suspect it has pricing implications.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-kafka-instance&quot;&gt;Creating the Kafka Instance&lt;/h2&gt;

&lt;p&gt;The new Managed Kafka service from AWS makes creating a Kafka instance absolutely trivial.  You do need to know the VPC id of your instance to make things easier.  You want to start &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/msk/home?#/cluster/create&quot;&gt;here&lt;/a&gt; to create a Kafka cluster.  Here are screenshots of the entire creation flow along with notes on anything I thought relevant.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aws_kafka_01_name_version_config.png&quot; alt=&quot;aws_kafka_01_name_version_config.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Naming your Kafka cluster is pretty simple and unless you are an expert I'd go with the standard configuration.  AWS sometimes lags behind on their versions of open source stuff so keep that in mind.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.aws.amazon.com/msk/latest/developerguide/msk-default-configuration.html&quot;&gt;standard configuration options&lt;/a&gt; are generally pretty good.  I might argue that auto.create.topics.enable should be enabled by default but that's a debatable point and really one tied to application needs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_02_networking.png&quot; alt=&quot;aws_kafka_02_networking.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The networking options are where you likely will get into trouble.  You want to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Choose the same VPC as your instances&lt;/li&gt;
  &lt;li&gt;Match the availability zones per your needs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_03_availabilty_zone.png&quot; alt=&quot;aws_kafka_03_availabilty_zone.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_04_brokers_and_tags.png&quot; alt=&quot;aws_kafka_04_brokers_and_tags.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unless you are experienced at Kafka and can estimate your needs, I'd recommend setting the broker size to the minimum.   You automatically end up with a broker in each availability zone:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Your cluster will have 2 total brokers, distributed evenly across your 2 Availability Zones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Given that the broker is described as &quot;kafka.m5.large&quot; which is also the item in the pricing page, it occurs to me that perhaps my pricing above needs to be doubled (if 2 availability zones) or tripled (if 3 availability zones).  This is unclear to me and I'm not sure if I'll know until I see a bill.&lt;/p&gt;

&lt;p&gt;I added a Name tag matching the name of the project and a Type tag of 'kafka' to better help understand the bill.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_05_storage.png&quot; alt=&quot;aws_kafka_05_storage.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The default storage is 1000 gb (so 1 terabyte).  I have no idea if this is enough storage or too little but you can't decrease it so I left it at the default.&lt;/p&gt;

&lt;p&gt;Also:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EBS storage volume per broker.  You can't decrease the storage after the cluster is created.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My guess is that whatever the storage bill is, it is either doubled or tripled based on the number of availability zones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_06_encryption.png&quot; alt=&quot;aws_kafka_06_encryption.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For this application which isn't particularly secure (it is based on public data from the Internet), I turned off most of the encryption options.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_07_auth_and_monitoring.png&quot; alt=&quot;aws_kafka_07_auth_and_monitoring.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I turned on most of the monitoring options down to the Topic level.  I also setup the Grafana option so that I can monitor down to the CPU / Disk level.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_07a_advanced.png&quot; alt=&quot;aws_kafka_07a_advanced.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: The Advanced settings option is the one I missed the first time around.  I set this to be the same security group as I use for my instances.  You don't have to use the same security group but if you aren't an AWS networking guru (and I'm not), this is very, very helpful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/aws_kafka_08_create.png&quot; alt=&quot;aws_kafka_08_create.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just click the Create Cluster button and wait for a bit for your cluster to be created.&lt;/p&gt;

&lt;h2 id=&quot;once-your-cluster-is-created&quot;&gt;Once Your Cluster Is Created&lt;/h2&gt;

&lt;p&gt;Once creation is complete the you want to click the View Client Information button at the top of the Details tab and you'll get something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b-2.ohi.88aa.c4.kafka.us-east-2.amazonaws.com:9092,b-1.ohi.qwq88.c4.kafka.us-east-2.amazonaws.com:9092
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These aren't my actual kafka details but, even if they were, it wouldn't matter because unless you are part of my AWS security group (or I open it to the world) then you can't get access.&lt;/p&gt;

&lt;h2 id=&quot;getting-your-security-groups-right&quot;&gt;Getting Your Security Groups Right&lt;/h2&gt;

&lt;p&gt;I made things a lot easier by using the same security groups for my instance that is going to write to kafka and my kafka cluster.  But, what I found, is that I would get connection errors like these:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Kafka::ConnectionError (Could not connect to any of the seed brokers:)
- kafka://b-2.ohi.aaaddd.c4.kafka.us-east-2.amazonaws.com:9092: Connection timed out
- kafka://b-1.ohi.aaaddd.c4.kafka.us-east-2.amazonaws.com:9092: Connection timed out
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;whenever I tried to do anything with my kafka cluster.  What I found was an answer at the security group layer &lt;a href=&quot;https://docs.aws.amazon.com/msk/latest/developerguide/create-client-machine.html&quot;&gt;here&lt;/a&gt;.  I have not seen this referenced anywhere else and here is my write up on what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Find the VPC that your instance and your security group are using (you will need to confirm this on your &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/ec2/v2/home?#Instances:sort=publicIp&quot;&gt;instance settings&lt;/a&gt; and your &lt;a href=&quot;https://us-east-2.console.aws.amazon.com/msk/home?&quot;&gt;kafka&lt;/a&gt; settings).&lt;/li&gt;
  &lt;li&gt;Open the AWS VPC console &lt;a href=&quot;https://console.aws.amazon.com/vpc/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;In the navigation pane, choose Security Groups. In the VPC ID column of the security groups, find the row that contains the ID you found in Step 1 and the Description column has the value default VPC security group. Choose this row by selecting the check box in the first column.&lt;/li&gt;
  &lt;li&gt;In the Inbound Rules tab, choose Edit rules.&lt;/li&gt;
  &lt;li&gt;Choose Add Rule.&lt;/li&gt;
  &lt;li&gt;In the new rule, choose All traffic in the Type column. In the second field in the Source column, enter the ID of the security group of the client machine. This is the group ID that you saved earlier.&lt;/li&gt;
  &lt;li&gt;Choose Save rules.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that magically made connectivity to my Kafka cluster work.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;ruby-script&quot;&gt;Ruby Script&lt;/h2&gt;

&lt;p&gt;Here are three basic ways you can test connectivity to your kafka cluster with the ruby kafka gem.&lt;/p&gt;

&lt;h3 id=&quot;test-script-1---try-and-get-the-topics&quot;&gt;Test Script 1 - Try and Get the Topics&lt;/h3&gt;

&lt;p&gt;Kafka divides where your content goes into &quot;topics&quot; (think buckets).  Here's how to get those topics back as an array:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-2.ohi.eee.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-1.ohi.fff.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;topics&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;test-script-2---try-and-put-something-in-a-non-existent-topic&quot;&gt;Test Script 2 - Try and Put Something in a Non Existent Topic&lt;/h3&gt;

&lt;p&gt;Even if this fails due to a non existent topic, it should fail correctly (i.e. that the topic doesn't exist not that it can't connect to kafka).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-2.ohi.eee.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-1.ohi.fff.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deliver_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;topic: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;test-script-3---higher-performance-delivery-of-messages&quot;&gt;Test Script 3 - Higher Performance Delivery of Messages&lt;/h3&gt;

&lt;p&gt;This approach, from the ruby-kafka documentation, is supposed to be a higher performance approach.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-2.ohi.eee.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b-1.ohi.fff.c4.kafka.us-east-2.amazonaws.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Instantiate a new producer.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kafka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;producer&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Add a message to the producer buffer.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;produce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;topic: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test-messages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Deliver the messages to Kafka.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deliver_messages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note: I haven't delved deeply enough into the docs yet to understand the real differences between #2 and #3 particularly in a streaming context.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2020/02/12/getting-started-with-ruby-and-an-aws-managed-kafka-server.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2020/02/12/getting-started-with-ruby-and-an-aws-managed-kafka-server.html</guid>
        
        <category>aws</category>
        
        <category>ruby</category>
        
        <category>kafka</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Management Anti Pattern - How to Demoralize Team Members Without Doing Anything</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1624.jpeg&quot; alt=&quot;IMG_1624.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have discovered a wonderful &lt;strong&gt;anti pattern&lt;/strong&gt; for absolutely demoralizing team members in a remote context and it is drop dead simple:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you are someone's manager, simply &lt;strong&gt;don't respond&lt;/strong&gt; to the things that they send you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The magic of this is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It requires that you do absolutely &lt;strong&gt;nothing&lt;/strong&gt;!&lt;/li&gt;
  &lt;li&gt;It works whether you are not responding to Email, Slack or another method&lt;/li&gt;
  &lt;li&gt;It entirely demoralizes even experienced, motivated team members&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Not Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're a manager, it is easy to fall into the trap of saying to yourself &quot;Hm… This is &lt;strong&gt;interesting&lt;/strong&gt;.  I need more time to respond to it&quot; and then lose track of it in the ever growing flood of Slack / Email / Etc.  I'm sorry but that's just a &lt;em&gt;bullshite&lt;/em&gt; excuse.  If something is actually interesting then your &lt;strong&gt;responsibility&lt;/strong&gt; as a manager is to acknowledge it with &quot;Thanks.  I need to think about this; will get back to you&quot;.  And if it isn't interesting to you then simply say that explicitly.  Leaving people hanging and wondering is a horrible approach to management.&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/02/11/management-anti-pattern-how-to-demoralize-team-members-without-doing-anything.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/02/11/management-anti-pattern-how-to-demoralize-team-members-without-doing-anything.html</guid>
        
        <category>startup</category>
        
        <category>management</category>
        
        <category>remote_work</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Ruby vs Rails</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1812.jpeg&quot; alt=&quot;IMG_1812.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I always find it interesting when I hit a Rails-ism when I'm working in a pure Ruby context. I define a Rails-ism as something that is one way in Ruby and another way in Rails. In this case I'm writing a simple background daemon which is going to stream data out of the Twitter sample stream and commit to Kafka for downstream processing.&lt;/p&gt;

&lt;p&gt;Here's the first thing that bit me:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'TOPIC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blank?&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;No topic specified; exiting&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this gave an immediate failure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ TOPIC=twitter RAILS_ENV=development ruby kafka_loader.rb
Traceback (most recent call last):
kafka_loader.rb:19:in `&amp;lt;main&amp;gt;': undefined method `blank?' for &quot;twitter&quot;:String (NoMethodError)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The easiest way to understand something like this is to test it in irb.  The irb tool is the underlying engine in rails console (&quot;rails c&quot;) but without your application specific classes loaded in so it is just pure ruby.&lt;/p&gt;

&lt;p&gt;Here's how you would test something like this in irb:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.7.0 :001 &amp;gt; &quot;&quot;.blank?
Traceback (most recent call last):
       16: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/friendly_errors.rb:123:in `with_friendly_errors'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/bundler-2.1.2/libexec/bundle:46:in `block in &amp;lt;top (required)&amp;gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:24:in `start'
       13: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `start'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:30:in `dispatch'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor.rb:399:in `dispatch'
       10: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:476:in `exec'
        7: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `run'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `kernel_load'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `load'
        4: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&amp;lt;top (required)&amp;gt;'
        3: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `load'
        2: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/irb-1.2.1/exe/irb:11:in `&amp;lt;top (required)&amp;gt;'
        1: from (irb):1
NoMethodError (undefined method `blank?' for &quot;&quot;:String)
2.7.0 :002 &amp;gt; &quot;&quot;.empty?
 =&amp;gt; true
2.7.0 :003 &amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Off the top of my head, I knew that .empty? was the underlying method that .blank? was aliased to.  And I could test either of these on an empty string as a way to figure this out.  When you have this type of thing, a quick google for &quot;rails whatever&quot; often is all you need to understand it.  The top hit for &lt;em&gt;rails blank?&lt;/em&gt; was a nicely written piece by &lt;a href=&quot;https://blog.arkency.com/2017/07/nil-empty-blank-ruby-rails-difference/&quot;&gt;Arkency&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another example of this came up here:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Traceback (most recent call last):
	1: from kafka_loader.rb:188:in `&amp;lt;main&amp;gt;'
kafka_loader.rb:77:in `kafka_connect': undefined method `second' for #&amp;lt;Array:0x00007fe197c3d4c8&amp;gt; (NoMethodError)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this case, again, I knew that .second was a method that Rails sticks into the array class.  The fix here was to move to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[0]  and [1]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to access the first and second elements in the array.&lt;/p&gt;

&lt;p&gt;You can easily see that .first actually works on arrays but I moved to [0] and [1] anyway to keep the semantics of the code the same:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ irb
cannot load such file -- awesome_print
2.7.0 :001 &amp;gt; foo = []
2.7.0 :002 &amp;gt; foo.first
 =&amp;gt; nil
2.7.0 :003 &amp;gt; foo.second
Traceback (most recent call last):
       16: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/friendly_errors.rb:123:in `with_friendly_errors'
       15: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/bundler-2.1.2/libexec/bundle:46:in `block in &amp;lt;top (required)&amp;gt;'
       14: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:24:in `start'
       13: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/base.rb:476:in `start'
       12: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:30:in `dispatch'
       11: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor.rb:399:in `dispatch'
       10: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'
        9: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'
        8: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli.rb:476:in `exec'
        7: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:28:in `run'
        6: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `kernel_load'
        5: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/bundler/cli/exec.rb:63:in `load'
        4: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `&amp;lt;top (required)&amp;gt;'
        3: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/bin/irb:23:in `load'
        2: from /Users/sjohnson/.rvm/rubies/ruby-2.7.0/lib/ruby/gems/2.7.0/gems/irb-1.2.1/exe/irb:11:in `&amp;lt;top (required)&amp;gt;'
        1: from (irb):3
NoMethodError (undefined method `second' for []:Array)
Did you mean?  send
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 10 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/10/ruby-vs-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/10/ruby-vs-rails.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>When You Need a Ruby Data Structure that Responds to Method Calls - Use OpenStruct</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1838.jpg&quot; alt=&quot;IMG_1838.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the position of building a system where there is one source of truth for configuration – an API from the the user interface component of the system (this is the part that will always be online so it made sense for it to serve the api).  The problem is that I have a server side component that needs to go online today as in &lt;strong&gt;now&lt;/strong&gt;.  And that API isn't yet available.  I basically have a section in my code where I get the configuration data.  My normal approach is to create a ruby Mechanize object and do a page fetch against the configuration API.  This returns a response object with a .body method that can be parsed something like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My means of working around this without an API is to use an OpenStruct as follows:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
&quot;kafka_servers&quot;:[&quot;b-2.AAA.ccc.c4.kafka.us-east-2.amazonaws.com:9092&quot;,&quot;b-1.BBB.ccc.c4.kafka.us-east-2.amazonaws.com:9092&quot;]}'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OpenStruct is a hash like data structure that responds to ruby dot messages so my &quot;response&quot; object above in the second code block will respond to &quot;.body&quot;.  Overall OpenStructs are a very, very useful tool for this type of pseudo mocking behavior.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: OpenStruct is built into Rails so you can just a &quot;response = OpenStruct.new&quot; at any point.  If you are building pure Ruby software then you need to first require it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require 'ostruct'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then use it with &quot;response = OpenStruct.new&quot;.  There is no Gem component to use OpenStruct – it is a part of the Ruby standard library but it isn't available until you do a require.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2020/02/09/when-you-need-a-ruby-data-structure-that-responds-to-method-calls-use-openstruct.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2020/02/09/when-you-need-a-ruby-data-structure-that-responds-to-method-calls-use-openstruct.html</guid>
        
        <category>ruby</category>
        
        <category>open_struct</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>A Regular Expression for Validating An Internet Domain</title>
        <description>&lt;p&gt;Despite the power and truth of Jamie Zawinski's law:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Regular Expressions: Now You Have Two Problems &lt;a href=&quot;https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/&quot;&gt;Jeff Atwood's Perspective&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like Jeff, I too really, really &lt;strong&gt;love&lt;/strong&gt; regular expressions or regexes.  I use this one a lot and I finally learned to use \S (Any non-whitespace character) so here's a regex&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^\S+\.\S+$
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;that I wrote yesterday to &quot;validate&quot; the permitted characters in an Internet domain.  I was all proud of this and wrote this blog post only to realize that pride really does goeth before a fall – this will NOT correctly validate an Internet domain.  As I write this post, I realize that the number of allowed characters in an Internet domain are actually NOT any non-whitespace characters and here's the proof that I actually got that wrong yesterday when I put something online using it:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/rubular_and_underscores.png&quot; alt=&quot;rubular_and_underscores.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The fact that Rubular allows through an _ which is NOT a valid character in domains is problematic.&lt;/p&gt;

&lt;p&gt;So the right way to do this, DAMN IT, is something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+$
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this actually works:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/rubular_no_s.png&quot; alt=&quot;rubular_no_s.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The [A-Za-z0-9-]+ is a &quot;character class&quot; which says &quot;Any uppercase or lowercase letter plus 0-9 plus a -&quot; are allowed (any order, any quantity)&quot;.&lt;/p&gt;

&lt;p&gt;Regular Expressions – Now you have two problems.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/regex/2020/02/03/a-regex-for-an-internet-domain.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/regex/2020/02/03/a-regex-for-an-internet-domain.html</guid>
        
        <category>regex</category>
        
        
        <category>regex</category>
        
      </item>
    
      <item>
        <title>When You Can't Run Rails Console Restart Spring</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1621.jpeg&quot; alt=&quot;IMG_1621.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I just hit this little gem of a pissant thing (yep - it is already that type of day):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=development rails c
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/railties-6.0.2.1/lib/rails/application/configuration.rb:241:in `database_configuration': Cannot load database configuration:
Could not load database configuration. No such file - [&quot;config/database.yml&quot;] (RuntimeError)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The issue was that I changed my underlying project directory and then had to re clone at the git level.  The culprit, naturally, was Spring so it took a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/spring stop
bin/spring start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this time, I actually put the answer into &lt;a href=&quot;https://stackoverflow.com/questions/32539062/rails-could-not-load-database-configuration-no-such-file/60024457#60024457&quot;&gt;Stack Overflow&lt;/a&gt;; I wonder if it will get accepted.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/02/02/when-you-can-t-run-rails-console-restart-spring.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/02/02/when-you-can-t-run-rails-console-restart-spring.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>The Power of Using Production In Development</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1647.jpeg&quot; alt=&quot;IMG_1647.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I spent a lot of time today trying to get something to deploy and hitting a near unending set of small issues that still broke the entire deploy (Rails in production mode is WAY less forgiving than Rails in development mode).  And, to be honest, the constant stream of cursing was, perhaps, my less than finest moment (friends of mine, at least two, are now laughing hard).&lt;/p&gt;

&lt;p&gt;An old school trick for helping with this is to run production mode locally and see if rails console comes up.  As a general rule of thumb, if rails console works, then rails itself will work.&lt;/p&gt;

&lt;p&gt;Here's how to do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RAILS_ENV=production bundle exec rails c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this one, simple, stupid trick tends to reveal a lot of issues.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/02/01/the-power-of-production-in-development.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/02/01/the-power-of-production-in-development.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Belt and Suspenders and Possible Overcomplications in Home Control</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1623.jpeg&quot; alt=&quot;IMG_1623.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I mildly shudder to write this post and I strongly hope that it  received with all the &lt;strong&gt;good intentions&lt;/strong&gt; that I have.  I saw that my friend Greg Stein wrote a &lt;a href=&quot;http://prng.blogspot.com/2020/02/howto-environment-sensors-in-home.html&quot;&gt;damn interesting post about home control and water sensors&lt;/a&gt;.  Greg is one of those scarily smart folks that makes me feel a bit like a knuckle dragging monkey, who, at times, is picking things out of his fur and debating &quot;should I eat this or not?&quot;.&lt;/p&gt;

&lt;p&gt;In this post, Greg builds a wonderful home control system that will notify him anywhere that he is in the world if a leak occurs (he had a fish tank leak that led to him say &quot;hm… I can fix this&quot;).  This is utterly classic &quot;Nerd Itch Scratching&quot; and I actually love the solution that he came up with but it made me think a lot about the number of &lt;em&gt;moving parts&lt;/em&gt; in his solution.  I had a similar issue back in 2017 and I &lt;a href=&quot;https://fuzzyblog.io/blog/house/2017/01/07/protecting-your-home-from-water-damage.html&quot;&gt;wrote up my solution at that time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is one of those things where I suspect the actual answer is both things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sophisticated approach that let's you monitor from anywhere and play with a time series database (&lt;a href=&quot;https://www.influxdata.com/&quot;&gt;InfluxDB&lt;/a&gt;; I'm jealous, TSDBs are cool)&lt;/li&gt;
  &lt;li&gt;The brutally simply solution that I came up with because even if what I did isn't remotely monitorable, my solution is so simple (and cheap) that it qualifies as backup to the complex solution&lt;/li&gt;
  &lt;li&gt;You spend more time at home than you do away which means that statistically the leak is more likely to happen when you are home.  And  because systems with lots of moving parts are inherently something that can break, having backup, even if imperfect might not be a bad idea.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/hardware/2020/02/01/belt-suspenders-and-possible-overcomplications-in-home-control.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/hardware/2020/02/01/belt-suspenders-and-possible-overcomplications-in-home-control.html</guid>
        
        <category>hardware</category>
        
        <category>home_control</category>
        
        
        <category>hardware</category>
        
      </item>
    
      <item>
        <title>Notes on Setting Up Stripe for Use with Jumpstart Pro</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1562.jpeg&quot; alt=&quot;IMG_1562.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I just finished, with a &lt;a href=&quot;https://eethomp.github.io&quot;&gt;colleague's assistance&lt;/a&gt;, the SAAS implementation of a multi license product using &lt;a href=&quot;https://www.stripe.com/&quot;&gt;Stripe&lt;/a&gt; as the billing engine and &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Pro&lt;/a&gt; as the Rails application template.  Listed below, in a mildly random order, are the steps we had to take:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a Stripe account.&lt;/li&gt;
  &lt;li&gt;Add your bank account credentials.&lt;/li&gt;
  &lt;li&gt;Define your &lt;a href=&quot;https://dashboard.stripe.com/test/subscriptions/products&quot;&gt;product&lt;/a&gt; within Stripe.&lt;/li&gt;
  &lt;li&gt;Define your subscription plans within the product inside Stripe.  Pricing plans nest within one product which is not intuitive.&lt;/li&gt;
  &lt;li&gt;Add the Stripe credentials to the Rails environment. &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html&quot;&gt;Read This Post!&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;In the /admin/plans urls on your Jumpstart based application, define the plans and prices that you want to offer (remember to enter prices in pennies) and make sure that the plan identifier that Stripe generated is entered into the stripe field inside the plan creation tool.&lt;/li&gt;
  &lt;li&gt;Install the &lt;a href=&quot;https://stripe.com/docs/stripe-cli&quot;&gt;Stripe listen&lt;/a&gt; tool using Homebrew: brew install stripe/stripe-cli/stripe&lt;/li&gt;
  &lt;li&gt;Authenticate your Stripe listen with your stripe API key like this: stripe login –api-key pk_BLAH_FOO_BAR_BAZ_DOH_HOMER&lt;/li&gt;
  &lt;li&gt;Start the Stripe Listen tool (it defaults to port 3000; if you are running Rails on another port then you need to figure that bit out yourself).&lt;/li&gt;
  &lt;li&gt;Confirm in a browser that this is the right api return value (and, yes, this supports &lt;a href=&quot;https://www.choosyosx.com/&quot;&gt;Choosy&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;When you see the webhook signing secret show up then use the &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html&quot;&gt;rails credentials:edit&lt;/a&gt; to add that to your environment.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a test transaction using the &lt;a href=&quot;https://stripe.com/docs/testing#cards&quot;&gt;Stripe test card numbers&lt;/a&gt; and you should see in the logs that the transaction went all the way through with entries something like the ones below.&lt;/p&gt;

    &lt;p&gt;stripe listen
&amp;gt; Ready! Your webhook signing secret is whsec_TRyDDDDDDDDDDDwnW3Y3u6TY7hDc (^C to quit)
2020-01-31 21:07:18   –&amp;gt; setup_intent.succeeded [evt_1G7BOCARA9hqQw13nA4]
2020-01-31 21:07:24   –&amp;gt; customer.created [evt_1G7BODARA9hqQw13uTOc]
2020-01-31 21:07:28   –&amp;gt; payment_method.attached [evt_1G7BOEARA33c6vCsbI]
2020-01-31 21:07:31   –&amp;gt; customer.updated [evt_1G7BOEARA3b1n6m7mC]
2020-01-31 21:09:25   –&amp;gt; setup_intent.created [evt_1G7BQGARA9hucov62]
2020-01-31 21:09:30   –&amp;gt; setup_intent.created [evt_1G7BQJARzeSJPFuu]
2020-01-31 21:09:33   –&amp;gt; setup_intent.succeeded [evt_1G7BQ3uheaVInO]
2020-01-31 21:09:34   –&amp;gt; customer.updated [evt_1G7BQJARA9hqQNa0]
2020-01-31 21:09:35   –&amp;gt; invoice.created [evt_1G7BQJARA9hqQw13Rei]
2020-01-31 21:09:35   –&amp;gt; invoice.finalized [evt_1G7BQJARA9hqQw13LaF]
2020-01-31 21:09:36   –&amp;gt; customer.subscription.created [evt_1G7BQKARA9tQAPyfk]
2020-01-31 21:09:43   –&amp;gt; invoice.payment_succeeded [evt_1G7BQKARA9hqPYpc]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Once you do all the above steps then you still need to use the Copy Product to Live mode option to move the products and plans you built for testing to the production mode.  And then you'll need to move the subscription plan ids over as well since these will be changed.&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/stripe/2020/01/31/notes-on-setting-up-stripe-for-use-with-jumpstart-pro.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/stripe/2020/01/31/notes-on-setting-up-stripe-for-use-with-jumpstart-pro.html</guid>
        
        <category>stripe</category>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>stripe</category>
        
      </item>
    
      <item>
        <title>So My Mac Keeps Crashing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6366.jpeg&quot; alt=&quot;IMG_6366.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the unenviable position of my MacBook Pro (2015 vintage) crashing regularly – once yesterday, twice the day before, once the day before.  I used to have an uptime measured in the tens of days – there have been periods when I had an uptime measured, on this computer and this OS version, of 100 plus days.  And now I have this bit of pathetic:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ uptime
 7:04  up 16:23, 79 users, load averages: 5.52 26.30 57.61
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's 16 hours.  &lt;em&gt;grumble&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So something changed – but what?  The problem here is that whatever changed, there was a clear temporal disconnect between the change and the start of the crashing.  And &lt;strong&gt;wham&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I took a phone call and walked away from my computer&lt;/li&gt;
  &lt;li&gt;I returned and my machine was again crashed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the characteristics of the crash:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the foreground app was TextMate 2 (almost always the foreground app on my computer)&lt;/li&gt;
  &lt;li&gt;caps lock doesn't turn on&lt;/li&gt;
  &lt;li&gt;machine apple logo doesn't turn off when the lid is closed&lt;/li&gt;
  &lt;li&gt;mouse doesn't move&lt;/li&gt;
  &lt;li&gt;no crash log event file is generated that tells me what happened and (uselessly) &quot;report it to apple&quot; when I restart.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's what I've tried so far:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stopping using Chrome (because Chrome is a damn beast using more resources than anything else on my machine)&lt;/li&gt;
  &lt;li&gt;turning off Dropbox&lt;/li&gt;
  &lt;li&gt;turning off bluetooth (because I recently turned it on)&lt;/li&gt;
  &lt;li&gt;stopping my TimeMachine backup&lt;/li&gt;
  &lt;li&gt;dumping my normal trinity of chat apps: FB Messenger, Signal and Telegram&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my theory is that something is happening when my machine isn't actually processing input (whether mouse or keyboard) such as an update process.  And since this seemingly started happening without any formal update process, it is likely an app which self updates.  So, my next task is to close:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DropBox&lt;/li&gt;
  &lt;li&gt;Box Sync&lt;/li&gt;
  &lt;li&gt;CleanMyMac&lt;/li&gt;
  &lt;li&gt;KeyBase&lt;/li&gt;
  &lt;li&gt;Tuple&lt;/li&gt;
  &lt;li&gt;Duet&lt;/li&gt;
  &lt;li&gt;Alfred&lt;/li&gt;
  &lt;li&gt;Slack&lt;/li&gt;
  &lt;li&gt;Sublime&lt;/li&gt;
  &lt;li&gt;Messages&lt;/li&gt;
  &lt;li&gt;Notes&lt;/li&gt;
  &lt;li&gt;Postico&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, when I walked away to go to the grocery store, my machine crashed again.  This time I'm also closing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SyncThing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this doesn't work then my apparent options are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;change my computer usage so if I'm not at the keyboard working, the lid is closed&lt;/li&gt;
  &lt;li&gt;upgrade the os (undesirable because I'm deliberately staying at Mojave)&lt;/li&gt;
  &lt;li&gt;new computer (also undesirable because that means I get forced off Mojave and Apple has yet to ship a 13&quot; Macbook Pro which takes 32 gigs of RAM)&lt;/li&gt;
  &lt;li&gt;temporarily swap over to another machine in the house until Apple ships new hardware&lt;/li&gt;
  &lt;li&gt;take my machine to Apple and see if hardware diagnostics reveal anything; undesirable because its not currently backed up and can't stay running long enough to back anything up&lt;/li&gt;
  &lt;li&gt;create a new user account on the machine and see if working in that new user account changes anything&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also did do a TextMate update today so maybe that fixes something. Sigh.&lt;/p&gt;

&lt;p&gt;One useful tool that I remembered for looking at log files of what's going on on my mac is &lt;a href=&quot;https://blog.macsales.com/45586-how-to-use-the-mac-console-app-to-diagnose-a-crash/&quot;&gt;Console&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;update-after-several-hours&quot;&gt;Update After Several Hours&lt;/h2&gt;

&lt;p&gt;Well my machine has now been usable for several hours.  I'll just need to keep using it and see what happens.  &lt;em&gt;additional grumbles&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2020/01/30/so-my-mac-keeps-crashing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2020/01/30/so-my-mac-keeps-crashing.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Where is my Rails 6 Master Key</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1422.jpeg&quot; alt=&quot;IMG_1422.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Your Rails 6 master key is located in:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/credentials/production.key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and it is likely stored as a hidden file.  I believe that this is generated when the project is generated but I'm not 100% certain.&lt;/p&gt;

&lt;p&gt;See this &lt;a href=&quot;https://www.reddit.com/r/rails/comments/ci45t2/rails_6_masterkey/&quot;&gt;Reddit post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/29/where-is-my-rails-6-master-key.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/29/where-is-my-rails-6-master-key.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Turning Off Ruby Deprecation Warnings When Running Tests</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1384.jpeg&quot; alt=&quot;IMG_1384.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The combination of Rails 6 and Ruby 2.7, or perhaps just Rails 6, introduced some new deprecation warnings and, lately, I've been seeing this cruft constantly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/
Running via Spring preloader in process 34024
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activemodel-6.0.2.1/lib/active_model/type/integer.rb:13: warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activemodel-6.0.2.1/lib/active_model/type/value.rb:8: warning: The called method `initialize' is defined here
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activerecord-6.0.2.1/lib/active_record/connection_adapters/postgresql/oid/specialized_string.rb:12: warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call
/Users/sjohnson/.rvm/gems/ruby-2.7.0/gems/activemodel-6.0.2.1/lib/active_model/type/value.rb:8: warning: The called method `initialize' is defined here
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, in the immortal words of &lt;a href=&quot;https://www.youtube.com/watch?v=4xmckWVPRaI&quot;&gt;Twisted Sister&lt;/a&gt;, we're not going to take it anymore.&lt;/p&gt;

&lt;p&gt;The solution is a bit more byzantine than I have found in the Rails world and a bunch of the options in the &lt;a href=&quot;https://stackoverflow.com/questions/5591509/suppress-ruby-warnings-when-running-specs&quot;&gt;Stack Overflow &quot;top of Google&quot; but no longer accurate post&lt;/a&gt; no longer work or aren't quite what you expect.&lt;/p&gt;

&lt;p&gt;The easy solution is to add:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$VERBOSE=nil
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to the top of config/environments/test.rb so it looks like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vg&quot;&gt;$VERBOSE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Settings specified here will take precedence over those in config/application.rb.&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# The test environment is used exclusively to run your application's&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# test suite. You never need to work with it otherwise. Remember that&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# your test database is &quot;scratch space&quot; for the test suite and is wiped&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# and recreated between test runs. Don't rely on the data there!&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cache_classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Obviously the rest of the file has to be there but that $VERBOSE=nil silences all the cruft.&lt;/p&gt;

&lt;p&gt;One other solution, RUBYOPT=&quot;-W0&quot;, prepended before you run the test doesn't work with the new use of &quot;rails&quot; to run your tests but does work with &quot;rake&quot; to run your tests so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RUBYOPT=W0 rake test test/models/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, that said, $VERBOSE=nil is a better option because it goes in at the project level and affects all developers on the project.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/28/turning-off-ruby-deprecation-warnings-when-running-tests.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/28/turning-off-ruby-deprecation-warnings-when-running-tests.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Test Basics</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1419.jpeg&quot; alt=&quot;IMG_1419.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;More than a decade using RSpec has left me flummoxed in terms of &quot;classical&quot; Rails testing.  I'm on a new project built using the Jumpstart application template and all the tests are standard Rails tests so here's a quick recap that I wrote, well, to force myself to step back in time and go &quot;old school&quot;.  And if you don't like my version then you should really read &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;this&lt;/a&gt;.  And if you are using Devise for authentication then you really must read &lt;a href=&quot;https://medium.com/@yutafujii_59175/a-simple-login-test-with-rails-devise-and-unit-test-68bc4fade4ba&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;making-tests-debuggable&quot;&gt;Making Tests Debuggable&lt;/h2&gt;

&lt;p&gt;The ability to use byebug in a testing context for breakpoints and stepping through code is utterly invaluable.  Here's what you need to do for that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add byebug into a development, test group in Gemfile.&lt;/li&gt;
  &lt;li&gt;Add the line &lt;strong&gt;require 'byebug'&lt;/strong&gt; to the very top of test_helper.rb&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-do-you-skip-a-test&quot;&gt;How Do You Skip a Test?&lt;/h2&gt;

&lt;p&gt;You put the keyword 'skip' at the top of the test that you need to skip.  This is equivalent to xit in RSpec.&lt;/p&gt;

&lt;h2 id=&quot;running-tests&quot;&gt;Running Tests&lt;/h2&gt;

&lt;p&gt;The very basic of testing is nothing more than test execution so to run all model tests:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and to run one file&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/user_test.rb    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and to run everything:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test     
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and to run with verbose mode:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test -v test/models  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and to run verbosely and fail on the first test failure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test -v -f test/helpers/application_helper.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and to run just one specific test:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/controllers/labels_controller_test.rb:9
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note: RSpec is very good at running the next test if the line number shifts a bit (example you put in :8 but you added a line so its actually :9).  With standard rails test, you get this madness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ rails test test/controllers/projects_controller_test.rb:17
Running via Spring preloader in process 95090
Run options: --seed 52687

# Running:

Finished in 0.010622s, 0.0000 runs/s, 0.0000 assertions/s.
0 runs, 0 assertions, 0 failures, 0 errors, 0 skips
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The 0 runs, 0 assertions, 0 failures, 0 errors, 0 skips can best be interpreted as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Yo! Hoser! I don't know what to do here so I'm going to confuse you deliberately. Ha Haw!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;death-to-fixtures-viva-la-factory-bot&quot;&gt;Death to Fixtures; Viva La Factory Bot&lt;/h2&gt;

&lt;p&gt;Within the RSpec world, we long, long ago tossed out the concept of static fixtures and embraced the world of Factories via &lt;a href=&quot;https://github.com/thoughtbot/factory_bot/blob/master/GETTING_STARTED.md&quot;&gt;FactoryBot&lt;/a&gt;. I haven't used classical Rails testing with FactoryBot before but here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add FactoryBot to Gemfile in a test section.&lt;/li&gt;
  &lt;li&gt;Run bundle install.&lt;/li&gt;
  &lt;li&gt;Create a factories directory mkdir test/factories&lt;/li&gt;
  &lt;li&gt;Generate a sample factory&lt;/li&gt;
  &lt;li&gt;Add include FactoryBot::Syntax::Methods to the top of test/test_helper.rb&lt;/li&gt;
  &lt;li&gt;Stop spring with  bin/spring stop&lt;/li&gt;
  &lt;li&gt;Start spring with  bin/spring start&lt;/li&gt;
  &lt;li&gt;Write a simple test using FactoryBot like my &lt;a href=&quot;https://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html&quot;&gt;test foo blog post&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Run the test.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a sample test using my foo example:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test_helper'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LabelTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveSupport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TestCase&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return FOO'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;writing-tests&quot;&gt;Writing Tests&lt;/h2&gt;

&lt;p&gt;As shown above, the canonical test operator is assert_something (or just assert).  Above I am using assert_equal but there are lots of assertion statements including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;assert&lt;/li&gt;
  &lt;li&gt;assert_equal&lt;/li&gt;
  &lt;li&gt;assert_response&lt;/li&gt;
  &lt;li&gt;assert_difference do&lt;/li&gt;
  &lt;li&gt;assert_redirected_to&lt;/li&gt;
  &lt;li&gt;assert_not_nil&lt;/li&gt;
  &lt;li&gt;assert_no_difference do&lt;/li&gt;
  &lt;li&gt;assert_match&lt;/li&gt;
  &lt;li&gt;assert_select&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I am certain that there are more but this is a decent sampling of most of the assertion statements that I can remember using once upon a time.&lt;/p&gt;

&lt;h2 id=&quot;using-assertredirectedto&quot;&gt;Using assert_redirected_to&lt;/h2&gt;

&lt;p&gt;Here's a minimal example of assert_redirected_to:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get index and redirect to / when logged in and no projects&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_user_session_path&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 27 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/27/rails-test-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/27/rails-test-basics.html</guid>
        
        <category>rails</category>
        
        <category>test</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails -- NoMethodError undefined method unpack1 for nil NilClass</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1464.jpeg&quot; alt=&quot;IMG_1464.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently started a new application and tried running the generated tests and got this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails test test/models/user_test.rb
Running via Spring preloader in process 27379
Run options: --seed 14413

# Running:

E

Error:
UserTest#test_can_delete_user_with_teams:
NoMethodError: undefined method `unpack1' for nil:NilClass
    app/models/user/connected_account.rb:37:in `&amp;lt;class:ConnectedAccount&amp;gt;'
    app/models/user/connected_account.rb:31:in `&amp;lt;main&amp;gt;'


rails test test/models/user_test.rb:57

E

Error:
UserTest#test_user_has_a_personal_team:
NoMethodError: undefined method `unpack1' for nil:NilClass
    app/models/user/connected_account.rb:37:in `&amp;lt;class:ConnectedAccount&amp;gt;'
    app/models/user/connected_account.rb:31:in `&amp;lt;main&amp;gt;'


rails test test/models/user_test.rb:52

E

Error:
UserTest#test_user_has_many_teams:
NoMethodError: undefined method `unpack1' for nil:NilClass
    app/models/user/connected_account.rb:37:in `&amp;lt;class:ConnectedAccount&amp;gt;'
    app/models/user/connected_account.rb:31:in `&amp;lt;main&amp;gt;'


rails test test/models/user_test.rb:46



Finished in 0.060465s, 49.6155 runs/s, 0.0000 assertions/s.
3 runs, 0 assertions, 0 failures, 3 errors, 0 skips
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now this is the the first time I've used test (as opposed to RSpec) in more than a decade and I was more than a bit taken aback.  A quick &lt;a href=&quot;https://stackoverflow.com/questions/57197682/in-decode64-undefined-method-unpack1-for-nilnilclass-nomethoderror&quot;&gt;Stack Overflow&lt;/a&gt; led me to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The error happens if you call Base64.decode64(nil). The method however is strictly expecting a String object here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now the line of code in question is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;attr_encrypted&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;key: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;access_token_encryption_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So the implication is that:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;access_token_encryption_key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;is returning &lt;strong&gt;nil&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The solution is actually pretty simple – create the credentials file using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EDITOR=vi rails credentials:edit --environment test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See this &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html&quot;&gt;blog post&lt;/a&gt; for why you have to use EDITOR=vi.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/26/rails-nomethoderror-undefined-method-unpack1-for-nil-nilclass.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/26/rails-nomethoderror-undefined-method-unpack1-for-nil-nilclass.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Started with Pundit</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1424.jpeg&quot; alt=&quot;IMG_1424.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/varvet/pundit&quot;&gt;Pundit&lt;/a&gt;, a Rails gem that my former boss, Taylor Williams, taught me is a tool for &quot;simple, robust and scalable authorization system&quot; and the more I play with authorization, the more true I find that.  This blog post lays out how to get started with Pundit with more details coming down the road.&lt;/p&gt;

&lt;p&gt;I will freely admit that when Taylor taught me Pundit, I grokked about maybe 1/10th of 1/10th of what he taught me (the &lt;a href=&quot;https://www.seaseducation.com/attain-info/&quot;&gt;project I worked on under Taylor&lt;/a&gt; had a staggeringly complex security scheme).  What I found, once I started from scratch with Pundit, is that it is strikingly simple to understand and a huge improvement over former Rails security gems like CanCan.&lt;/p&gt;

&lt;h2 id=&quot;security-basics-authentication-versus-authorization&quot;&gt;Security Basics: Authentication versus Authorization&lt;/h2&gt;

&lt;p&gt;There are two basic security concepts that often get tangled up together so let's start with the basics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication - Should the user be allowed access into the &lt;strong&gt;system&lt;/strong&gt;?&lt;/li&gt;
  &lt;li&gt;Authorization - Should the user be granted permission to do &lt;strong&gt;something&lt;/strong&gt; with a &lt;strong&gt;item&lt;/strong&gt; within the &lt;strong&gt;system&lt;/strong&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It should be noted that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;system&lt;/li&gt;
  &lt;li&gt;something&lt;/li&gt;
  &lt;li&gt;item&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;are all not defined.  That's actually intentional at this point because we need to work in terms of abstractions and all of those are abstract.&lt;/p&gt;

&lt;h2 id=&quot;installing-pundit&quot;&gt;Installing Pundit&lt;/h2&gt;

&lt;p&gt;Here's what you have to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add it into Gemfile i.e. gem &quot;pundit&quot;&lt;/li&gt;
  &lt;li&gt;Add it into application_controller.rb i.e. include Pundit&lt;/li&gt;
  &lt;li&gt;Run the pundit generator: rails g pundit:install&lt;/li&gt;
  &lt;li&gt;Restart your server&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;using-pundit&quot;&gt;Using Pundit&lt;/h2&gt;

&lt;p&gt;The way that Pundit works is that authorization is handled at the Rails controller level via an &lt;strong&gt;authorize&lt;/strong&gt; statement like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# GET /projects&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@projects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id DESC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@projects&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So you make an instance variable of what you want to display in your HTML view template and then you authorize it via Pundit.  The authorization is then defined by a Policy file stored in /app/policies/classname_policy.rb.  Here's an example for the project.rb class:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectPolicy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationPolicy&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Inheriting from the application policy scope generated by the generator&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scope&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Scope&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;resolve&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;admin?&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;active: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# this ilustrates that the user MUST be logged in and &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# that the owner of the data has to be the logged in user&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edit?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;valid_user?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 25 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/25/getting-started-with-pundit.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/25/getting-started-with-pundit.html</guid>
        
        <category>pundit</category>
        
        <category>rails</category>
        
        <category>security</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When rails credentials:edit Won't Save Your Credentials</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1474.jpeg&quot; alt=&quot;IMG_1474.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rails 5.2 and Rails 6 introduced the idea of rails credentials:edit which allowed you to create encrypted credentials that stored things like API keys with commands like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails credentials:edit --environment development
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this does is create a file in config/credentials and edit and then (theoretically) save it, in an encrypted state.&lt;/p&gt;

&lt;p&gt;I was recently using this on a Rails 6 application and I found that no matter what I did my credentials &lt;strong&gt;did not&lt;/strong&gt; save.  A &lt;a href=&quot;https://eethomp.github.io/&quot;&gt;colleague&lt;/a&gt; of mine traced this to an issue with the $EDITOR variable I had set via this &lt;a href=&quot;https://stackoverflow.com/questions/48539408/rails-5-2-encrypted-credentials-not-saving&quot;&gt;Stack Overflow post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I had this problem in rails 5.2.0 using textmate as the editor. It turns out the credentials file must be closed after save in order for the changes to persist.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My $EDITOR variable was set to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $EDITOR
/usr/local/bin/mate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The solution was actually simple – specify the editor before you run the command (and use VI as the editor) so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EDITOR=vi rails credentials:edit --environment development
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And bada bing, bada boom – my credentials were actually saved.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bigbinary.com/2019/07/03/rails-6-adds-support-for-multi-environment-credentials.html&quot;&gt;Big Binary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50435193/cannot-edit-rails-credentials-rails-5-2&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/cedarcode/rails-5-2-credentials-9b3324851336&quot;&gt;CedarCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 24 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/24/when-rails-credentials-edit-won-t-save-your-credentials.html</guid>
        
        <category>rails</category>
        
        <category>credentials</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>We Live in a Science Fiction Universe After All</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1441.jpeg&quot; alt=&quot;IMG_1441.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A number of years ago, the late &lt;a href=&quot;https://en.wikipedia.org/wiki/Charles_Sheffield&quot;&gt;Charles Sheffield&lt;/a&gt; had a book titled, I think &quot;Dark as Day&quot;, which had as a feature a &quot;fax&quot; which was an AI based  psuedo answering machine that you could chat with when the person you wanted wasn't available:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MORD: the idiosyncratic high-level Fax of the late Mordecai Perlman. e-reading.club &lt;a href=&quot;https://www.e-reading.club/chapter.php/151398/0/Sheffield_-_Dark_as_Day.html&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And today I read via Hacker News that I can build this using Google CoLab (&lt;a href=&quot;http://www.svilentodorov.xyz/blog/gpt-15b-chat-finetune/&quot;&gt;article&lt;/a&gt; / &lt;a href=&quot;https://news.ycombinator.com/item?id=22128652&quot;&gt;discussion&lt;/a&gt;) based on my Facebook Chat data.  Wow.&lt;/p&gt;

&lt;p&gt;We really do live in a science fictional universe.  I still want my flying car tho.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don't have a ton to say about this but I find the prospect fascinating and something I want to play with hence the blog post.&lt;/p&gt;

</description>
        <pubDate>Thu, 23 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/23/we-live-in-a-science-fiction-universe-after-all.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/23/we-live-in-a-science-fiction-universe-after-all.html</guid>
        
        <category>machine_learning</category>
        
        <category>nlp</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Understanding the Power of rails g scaffold</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1463.jpeg&quot; alt=&quot;IMG_1463.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wow.  I am a damn idiot who has literally made his life harder than it ever needed to be — for years.  Sigh.  I am referring to the Rails generator and the &lt;strong&gt;scaffold&lt;/strong&gt; command.  When you have complex software tools, sometimes you don't discover features – great damn features – for a long time.  In this case I'm referring to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rails g scaffold pluralized_object_name&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my case, I'm building a project where the ultimate goal is to create a &lt;em&gt;label&lt;/em&gt; on &lt;em&gt;something&lt;/em&gt;.  Never mind what a label is or what the something is.  A friend I've been helping with Rails recently asked me what &lt;strong&gt;rails g scaffold&lt;/strong&gt; does and I muttered something about &quot;makes the model and controller in one go&quot; but I never thought to try it myself until just now.  HOLY CRAP!  Wow.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rails g scaffold labels&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here's what this generated for me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g scaffold Labels
Running via Spring preloader in process 78104
[WARNING] The model name 'Labels' was recognized as a plural, using the singular 'Label' 
instead. Override with --force-plural or setup custom inflection rules for 
this noun before running the generator.
      invoke  active_record
      create    db/migrate/20200122100533_create_labels.rb
      create    app/models/label.rb
      invoke    test_unit
      create      test/models/label_test.rb
      create      test/fixtures/labels.yml
      invoke  resource_route
       route    resources :labels
      invoke  scaffold_controller
      create    app/controllers/labels_controller.rb
      invoke    erb
      create      app/views/labels
      create      app/views/labels/index.html.erb
      create      app/views/labels/edit.html.erb
      create      app/views/labels/show.html.erb
      create      app/views/labels/new.html.erb
      create      app/views/labels/_form.html.erb
      append      app/views/shared/_left_nav.html.erb
      invoke    test_unit
      create      test/controllers/labels_controller_test.rb
      create      test/system/labels_test.rb
      invoke    helper
      create      app/helpers/labels_helper.rb
      invoke      test_unit
      invoke  assets
      invoke    scss
      create      app/assets/stylesheets/labels.scss
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this isn't just creating a raw file structure, the core controller itself and the tests are actually built for you.&lt;/p&gt;

&lt;p&gt;Here's the controller:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LabelsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pagy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels/1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels/new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# GET /labels/1/edit&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;edit&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# POST /labels&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label was successfully created.'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# PATCH/PUT /labels/1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label was successfully updated.'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# DELETE /labels/1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label was successfully destroyed.'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Use callbacks to share common setup or constraints between actions.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_label&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Only allow a trusted parameter &quot;white list&quot; through.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;label_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the controller test:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test_helper'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LabelsControllerTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionDispatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IntegrationTest&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get index&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get new&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_label_url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should create label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_difference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label.count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;params: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should show label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should get edit&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edit_label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_response&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should update label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;params: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;should destroy label&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert_difference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Label.count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assert_redirected_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels_url&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I've always been using generators:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g model label 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g controller Labels
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but then, for years, I've been manually writing my controllers, stubbing out my controller tests, adding stuff to the routes file, etc.  Wow.  I am just dumb founded in terms of how this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;improves the speed of rapid prototyping with Rails&lt;/li&gt;
  &lt;li&gt;improves quality by generating a test scaffold&lt;/li&gt;
  &lt;li&gt;writes a modern controller (I have certain learned coding practices that are likely pretty crappy from a decade plus of Rails experience when practices have changed)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;

&lt;p&gt;Here are some things that I don't like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I'm personally an rspec junkie but the simple fact that this generates a complete test biases me towards it (note - I checked on a project where rspec was the default and it did generate a similar test but with rspec syntax) so this isn't really a caveat but something I wanted to point out&lt;/li&gt;
  &lt;li&gt;No support for generating factories, even on my project with rspec configured, but this is &lt;a href=&quot;https://guides.rubyonrails.org/generators.html&quot;&gt;customizable&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;No support for authorization (and I get that there can't be since that's an app level thing but security holes and security testing is damn important)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;at-least-im-not-the-only-idiot-out-there&quot;&gt;At Least I'm Not the Only Idiot Out There&lt;/h2&gt;

&lt;p&gt;I know there are people within the Rails community that are &quot;generator resistant&quot;.  Hell – one of the Rails folk I loved pairing with most in known space used to (gently) chastise me for using &quot;rails g&quot; for anything other than the core migration.&lt;/p&gt;

&lt;p&gt;I know that if I was running a big Rails project, like the one that I used to be on, I'd not only make sure that my team used this but I'd also invest the time in customizing this pretty heavily so:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a factory file was generated&lt;/li&gt;
  &lt;li&gt;access control was added to the controller (I'd do it by an inheritance via a base_controller but an authorization directive was fine)&lt;/li&gt;
  &lt;li&gt;a policy file was written (useful if you are using Pundit)&lt;/li&gt;
  &lt;li&gt;the controller tests were enhanced with a logged in / logged out set of tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the power of generators – they are customizable and you can reduce the repetitive code that your team manually generates every single time.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/22/understanding-the-power-of-rails-g-scaffold.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/22/understanding-the-power-of-rails-g-scaffold.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Looking Back - Jumpstart Pro - The Best Development Decision I Made in 2019</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1442.jpeg&quot; alt=&quot;IMG_1442.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't generally do the retrospective (save in an agile context) – I prefer to look forward.  And, yes, I'll admit that given some of the crap in my personal life these days, there's a reason for that.  Now, that said, I've been thinking back over my 2019 year and I wanted to comment on my single best development decision of 2019:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Buying &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Pro&lt;/a&gt; was my single best development decision in all of 2019.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like a lot of developers out there, I'm a back end guy.  Yes I can do front end stuff but it tends towards a local maxima that might best be defined as &lt;strong&gt;ugly&lt;/strong&gt; or even, perhaps, &lt;strong&gt;fugly&lt;/strong&gt;.  And, now, I can happily say &lt;em&gt;never again&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Jumpstart Pro is an application template for your next Rails app that gives you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A prebuilt starting point&lt;/li&gt;
  &lt;li&gt;where the things that you are going to do anyway are already done&lt;/li&gt;
  &lt;li&gt;like devise&lt;/li&gt;
  &lt;li&gt;like a CSS grid (Tailwind)&lt;/li&gt;
  &lt;li&gt;like transactional email&lt;/li&gt;
  &lt;li&gt;like html templates that look good&lt;/li&gt;
  &lt;li&gt;like a scaffolding generator that is all setup including tests&lt;/li&gt;
  &lt;li&gt;like …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I bought Jumpstart Pro back in August when I had a side project that I was already pretty deep into and since Jumpstart Pro is best for &lt;em&gt;new&lt;/em&gt; projects, well, I put it aside – and that was &lt;strong&gt;stupid&lt;/strong&gt; of me.  I should have trusted that &lt;a href=&quot;https://www.gorails.com/&quot;&gt;Chris Oliver&lt;/a&gt;, the author of Jumpstart, made Jumpstart awesome – because he did.  When I finally realized how good Jumpstart was, well, I started a different side project because I wanted to experience Rails from his perspective.  And now that I'm about to ship this new side project, the only thing I have to say is &lt;strong&gt;absolutely worth it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Best damn development decision I made in 2019.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/21/looking-back-jumpstart-pro-the-best-development-decision-i-made-in-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/21/looking-back-jumpstart-pro-the-best-development-decision-i-made-in-2019.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Used to Postgres from MySQL - I Choose You, Postico</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1452.jpeg&quot; alt=&quot;IMG_1452.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite my mildly fanatical adherence to MySQL, there really is nothing wrong with Postgres and quite a bit to like.  Given that Postgres is the default database for Heroku, I am spending more and more time using Postgres these days.  What I've found is that my resistance to Postgres, more than anything else, was simply that I was really, really used to the MySQL command line and shell.&lt;/p&gt;

&lt;p&gt;What I've found is that if you pair &lt;a href=&quot;https://eggerapps.at/postico/&quot;&gt;Postico&lt;/a&gt; with Postgres then it makes a very easy transition from MySQL.  Postico is a wonderfully written app (yes I'm a paid user now) that provides a great DB viewing and manipulation tool right down to row level editing.  I found myself today, rather than writing a web form to update the database simply editing the data with Postico.  Given how easily I generate CRUD apps, that's a pretty big step for me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2020/01/20/getting-used-to-postgres-from-mysql-i-choose-you-postico.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2020/01/20/getting-used-to-postgres-from-mysql-i-choose-you-postico.html</guid>
        
        <category>postgres</category>
        
        <category>mysql</category>
        
        <category>postico</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>When Zoom Is Too Heavy for Your Laptop Just Use Your Phone or iPad</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_5717.jpeg&quot; alt=&quot;IMG_5717.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is short but sweet and, honestly, the bulk of it is right in the title.  I'm a pretty hard core software developer and I've found that the Zoom video chat tool, which my team uses every single day, tends to be big, fat and slow – to such a degree that my MacBook crashes from time to time.  You should note that I do run a 2015 MacBook Pro 13&quot; so not the best machine by today's standards but still absolutely serviceable as a daily driver for most development chores.&lt;/p&gt;

&lt;p&gt;It occurred to me recently that both my phone and my iPad are actually faster than my laptop so I fired up Zoom on them for a conference all and wow was it better.  I was able to code through my team call and participate in the team video chat.  While my phone worked perfectly well, it had a tendency to slide a bit leading me to break out my home made phone stand (no pic; since my phone is in it how can I take a pic; ask me personally if you care or want one).  My iPad, however, since it has the keyboard case, works fantastically well for this tho.&lt;/p&gt;

&lt;p&gt;I'm also starting to use my iPad as my &quot;chat workstation&quot; allowing me to more easily partition the myriad chat apps that we all seem to use concurrently and focus on development more while still participating in chats without getting list in them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2020/01/19/when-zoom-is-too-heavy-for-your-laptop-just-use-your-phone.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2020/01/19/when-zoom-is-too-heavy-for-your-laptop-just-use-your-phone.html</guid>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Markdown Editors</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9165.jpeg&quot; alt=&quot;IMG_9165.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yesterday I talked about using gist.github.com and Markdown.  And I assumed that you wanted to work in &quot;raw&quot; markdown but that's like writing raw HTML - fine if you like it but not for everyone.  A lot of people prefer a true Markdown editor where the tags appear visually as they might in Microsoft word.  With a tool like this you can write in Markdown visually and then copy and paste (or export) into a Markdown file that you could put into gist.github.com.&lt;/p&gt;

&lt;p&gt;Here are some decent Markdown tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate 2&lt;/a&gt; (OSX); this is an OSX only coding editor which a markdown mode which works pretty well&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;SublimeText&lt;/a&gt;; similar to TextMate 2 but works on Windows also&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.typora.io/&quot;&gt;Typora&lt;/a&gt;; top google hit; haven't looked at greatly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://markdownpad.com/&quot;&gt;MarkdownPad&lt;/a&gt;; free; looks like a dual pane NotePad i.e. markdown view on the left; writing window on the right.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://marp.app/&quot;&gt;Marp Next&lt;/a&gt; - a tool for using Markdown for presentations; not for writing but just interesting that it even exists!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personally I use TextMate 2 but I've been in that editor so long that I know it cold.  As with any writing on a computer, use what works for you. There are lots and lots of tools for Markdown.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/markdown/2020/01/18/markdown-editor-options.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/markdown/2020/01/18/markdown-editor-options.html</guid>
        
        <category>markdown</category>
        
        <category>internet</category>
        
        
        <category>markdown</category>
        
      </item>
    
      <item>
        <title>Welcome to gist.github.com/username</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7726.jpeg&quot; alt=&quot;IMG_7726.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'd love to tell you that I figured this one out on my own but I didn't – my friend Nick Janetakis taught me this trick.  Here's the problem statement:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you have a text document that you want someone to review, how do you put that document onto the Internet?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One obvious answer is Google Docs.  Another is some kind of shared file tool like Dropbox.  But these tools are &lt;em&gt;heavy&lt;/em&gt;.  The idea of a &lt;em&gt;heavy&lt;/em&gt; tool is a developer thing and it means that the tool does so much more than you need to solve the problem that using it feels awkward.  So let's restate the problem:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you have a text document that you want someone to review, what's a &lt;strong&gt;lightweight&lt;/strong&gt; tool that you can use to put that document on the Internet?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you start to work with people online, they often show you some cool tool that you never knew existed.  And this is just that type of thing.  Nick showed me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://gist.github.com/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you goto &lt;a href=&quot;https://gist.github.com/&quot;&gt;https://gist.github.com/&lt;/a&gt; when you are logged into Github then you get a place where you can create a &lt;strong&gt;gist&lt;/strong&gt;.  The idea of a gist is that it is a snippet of text that you share online.  Now this was originally written for Programmer Foo to share a code routine with Programmer Bar who, in turn, might them change it and share with Programmer Baz.&lt;/p&gt;

&lt;p&gt;Now you might be thinking that how does a web based code sharing tool make it possible for you to share a document ?  The answer is simple: &lt;strong&gt;markdown&lt;/strong&gt;.  Markdown is an Internet standard for online writing which uses simple ASCII encoding to generate html.  For example a single # character means &quot;Make a Heading of Level 1&quot;, two ## characters means &quot;Make a heading of Level 2&quot;.  Here is a &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown Cheatsheet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What you can do to share a document is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a github account if you don't have one and login.&lt;/li&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://gist.github.com/&quot;&gt;gist.github.com&lt;/a&gt; and click the + sign in the black header.&lt;/li&gt;
  &lt;li&gt;This creates a new gist which gives you a web form where you can enter it.&lt;/li&gt;
  &lt;li&gt;Enter a filename like timeline.md (the .md extension is for markdown).  The filename extension tells Github how to display it / how it works with it when you are creating / editing it.&lt;/li&gt;
  &lt;li&gt;Format your text document with Markdown tags and then click either Create Secret Gist or Create Public Gist.&lt;/li&gt;
  &lt;li&gt;Gists are posted online not by the filename but by a hash like e02bd259a36fe28ea28560fe92c01bab.  This hash is a non guessable thing and it is uniquely constructed so even if you know my github username is fuzzygroup, you can't guess what my gist url for something might be.&lt;/li&gt;
  &lt;li&gt;The difference between Create Secret Gist and Create Public Gist is that the public option lists gists on the gist.github.com url where people can publicly rank them, share them, etc.  I always, always, always click Create Secret Gist.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's how you edit a gist that someone gives you:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a github account if you don't have one and login.&lt;/li&gt;
  &lt;li&gt;Goto the gist url you were given.&lt;/li&gt;
  &lt;li&gt;Click the Fork button at the top.  Forking is a version control concept from the programming world which basically says &quot;I want to make a new version of this that is &lt;strong&gt;MINE&lt;/strong&gt; i.e. a fork of the original&quot;.&lt;/li&gt;
  &lt;li&gt;Github will copy this data over to your account and change the url accordingly.&lt;/li&gt;
  &lt;li&gt;Now click the Edit button and the Markdown editing window will appear and you can make changes as you desire.&lt;/li&gt;
  &lt;li&gt;Your url is now tied to your username and the public / secret status is the same i.e. you end up with whatever security status you had originally.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 17 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2020/01/17/welcome-to-gist-github-com-username.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2020/01/17/welcome-to-gist-github-com-username.html</guid>
        
        <category>git</category>
        
        <category>gist</category>
        
        <category>markdown</category>
        
        <category>internet</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Two New Tools for Git</title>
        <description>&lt;p&gt;Despite my friend Sean Kennedy's best efforts, I'm still a damn command line git user but he has tried.  Old dogs / new tricks.  Two new tools for git (or new to me at least) are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimemerge.com/&quot;&gt;Sublime Merge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-fork.com/&quot;&gt;Git Fork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know both of these are good but I just can't bring myself to use them.  Of the two I suspect I'd prefer Sublime Merge as Sublime Text is increasingly my backup editor when TextMate vomits its own brain and goes into a spasm of bullshite; sigh.&lt;/p&gt;

</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2020/01/16/two-new-tools-for-git.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2020/01/16/two-new-tools-for-git.html</guid>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Fixing TextMate 2 When It Goes Insane</title>
        <description>&lt;p&gt;If you find that TextMate won't start up or if it does that you can't type and it won't respond to commands then this is a sign that TextMate's startup data has gotten hosed.  What you need to do is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Locate where TextMate &lt;a href=&quot;https://fuzzyblog.io/blog/text/2017/10/08/forensic-computing-1-finding-textmate-untitled-documents.html&quot;&gt;stores its unsaved documents&lt;/a&gt;.  For me this is ls -l /Users/sjohnson/Library/Application\ Support/TextMate/Session/&lt;/li&gt;
  &lt;li&gt;Change to this directory using cd.&lt;/li&gt;
  &lt;li&gt;Create a new directory in this location such as temp1.&lt;/li&gt;
  &lt;li&gt;Do a mv of everything into the new directory.&lt;/li&gt;
  &lt;li&gt;Kill off the TextMate process.&lt;/li&gt;
  &lt;li&gt;Relaunch it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's what the end result of this should be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls -l /Users/sjohnson/Library/Application\ Support/TextMate/Session/ 
total 536
-rw-r--r--   1 sjohnson  staff  90428 Jan 16 04:19 Info.plist
drwxr-xr-x  74 sjohnson  staff   2368 Dec 10 09:40 temp1
-rw-r--r--@  1 sjohnson  staff      4 Dec 26 10:51 untitled 10.txt
-rw-r--r--@  1 sjohnson  staff   6921 Dec 26 11:31 untitled 11.txt
-rw-r--r--@  1 sjohnson  staff     79 Dec 26 14:19 untitled 12.txt
-rw-r--r--@  1 sjohnson  staff    647 Dec 27 08:07 untitled 13.txt
-rw-r--r--@  1 sjohnson  staff    741 Dec 30 12:21 untitled 14.txt
-rw-r--r--@  1 sjohnson  staff    226 Dec 30 14:09 untitled 15.txt
-rw-r--r--@  1 sjohnson  staff     85 Dec 30 14:08 untitled 16.txt
-rw-r--r--@  1 sjohnson  staff    635 Dec 30 21:03 untitled 17.txt
-rw-r--r--@  1 sjohnson  staff    776 Jan  7 05:22 untitled 18.txt
-rw-r--r--@  1 sjohnson  staff   5125 Jan  7 05:28 untitled 19.txt
-rw-r--r--@  1 sjohnson  staff    803 Dec 12 23:30 untitled 2.txt
-rw-r--r--@  1 sjohnson  staff   1949 Jan  7 13:05 untitled 20.txt
-rw-r--r--@  1 sjohnson  staff   5367 Jan  7 13:20 untitled 21.txt
-rw-r--r--@  1 sjohnson  staff    326 Jan  7 15:24 untitled 22.txt
-rw-r--r--@  1 sjohnson  staff     16 Jan  8 01:43 untitled 23.txt
-rw-r--r--@  1 sjohnson  staff     44 Jan  9 14:22 untitled 24.txt
-rw-r--r--@  1 sjohnson  staff   3635 Jan 10 00:28 untitled 25.txt
-rw-r--r--@  1 sjohnson  staff      8 Jan 10 15:10 untitled 26.txt
-rw-r--r--@  1 sjohnson  staff   7245 Jan 10 17:26 untitled 27.txt
-rw-r--r--@  1 sjohnson  staff    277 Jan 11 05:22 untitled 28.txt
-rw-r--r--@  1 sjohnson  staff    497 Jan 12 06:03 untitled 29.txt
-rw-r--r--@  1 sjohnson  staff    244 Dec 18 18:25 untitled 3.txt
-rw-r--r--@  1 sjohnson  staff    672 Jan 13 20:25 untitled 30.txt
-rw-r--r--@  1 sjohnson  staff  10420 Jan 14 07:12 untitled 31.txt
-rw-r--r--@  1 sjohnson  staff     30 Jan 14 20:10 untitled 32.txt
-rw-r--r--@  1 sjohnson  staff     36 Jan 14 22:19 untitled 33.txt
-rw-r--r--@  1 sjohnson  staff    645 Jan 14 22:43 untitled 34.txt
-rw-r--r--@  1 sjohnson  staff   1377 Jan 15 04:12 untitled 35.txt
-rw-r--r--@  1 sjohnson  staff    732 Jan 15 04:08 untitled 36.txt
-rw-r--r--@  1 sjohnson  staff    443 Jan 15 07:04 untitled 37.txt
-rw-r--r--@  1 sjohnson  staff   2273 Jan 15 08:21 untitled 38.txt
-rw-r--r--@  1 sjohnson  staff    187 Dec 17 06:48 untitled 4.txt
-rw-r--r--@  1 sjohnson  staff   1045 Dec 20 06:50 untitled 5.txt
-rw-r--r--@  1 sjohnson  staff     19 Dec 20 15:21 untitled 6.txt
-rw-r--r--@  1 sjohnson  staff    842 Dec 21 03:32 untitled 7.txt
-rw-r--r--@  1 sjohnson  staff     79 Dec 23 11:11 untitled 8.txt
-rw-r--r--@  1 sjohnson  staff     31 Dec 23 16:50 untitled 9.txt
-rw-r--r--@  1 sjohnson  staff    375 Dec 10 17:22 untitled.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The file Info.plist is an xml registrry&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/textmate/2020/01/15/fixing-textmate-2-when-it-goes-insane.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/textmate/2020/01/15/fixing-textmate-2-when-it-goes-insane.html</guid>
        
        <category>textmate</category>
        
        
        <category>textmate</category>
        
      </item>
    
      <item>
        <title>What is Machine Learning?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_5718.jpeg&quot; alt=&quot;IMG_5718.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have written a number of posts about different aspects of Machine Learning but, it occurs to me, not a single one that actually says &quot;Machine Learning is xyz and here are the definitions&quot; so here goes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Machine Learning is a technology that allows a computer (&quot;the Machine&quot;)  to take a &quot;corpus&quot; of &quot;labeled&quot; &quot;training data&quot; and then &quot;learn&quot; how to do something that the training data teaches the computer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the above is my definition but let's look at Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Machine learning (ML) is the scientific study of algorithms and statistical models that computer systems use to perform a specific task without using explicit instructions, relying on patterns and inference instead. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model based on sample data, known as &quot;training data&quot;, in order to make predictions or decisions without being explicitly programmed to perform the task.[1][2]:2 Machine learning algorithms are used in a wide variety of applications, such as email filtering and computer vision, where it is difficult or infeasible to develop a conventional algorithm for effectively performing the task.&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_learning&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, while it is a simplification, the underlying thing idea driving machine learning is that of &lt;em&gt;data driven pattern recognition&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Basically the Machine Learning process amounts to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take a bunch of data and construct a set of examples that illustrate what you want the machine to learn.  This is called &lt;em&gt;Training Data&lt;/em&gt; and the overall collection amounts to a &lt;em&gt;Corpus&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Add metadata to these examples in a way that represent what you want the machine to learn.  Examples could be blocks of text, images, video files or whatever.  I personally work mostly in text but I have machine learning buddies who do things learning on images of cancerous masses.  This is called &lt;em&gt;Labeling&lt;/em&gt;.  Labeling might consist of different things like adding Yes / No / Abstain values to a tweet or even extracting information from a recipe like the ingredients.&lt;/li&gt;
  &lt;li&gt;Running a computer program, the &lt;em&gt;training program&lt;/em&gt;, against the data to generate a &quot;neural network&quot;, a computational engine that works much like the associative memory in our brains.  And, just as we don't understand how our brains work, we often don't understand how a neural network works.  This is known as the explainability problem in Machine Learning and I talk about it &lt;a href=&quot;https://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, you have to be careful, because this is a simplification of a very complex technology but the above is the essence of Machine Learning.&lt;/p&gt;

&lt;p&gt;Each of the key terms above, as well as a few others relevant to Machine Learning is described below.&lt;/p&gt;

&lt;h2 id=&quot;gpu&quot;&gt;GPU&lt;/h2&gt;

&lt;p&gt;A GPU or &quot;Graphics Processing Unit&quot; is a very, very powerful computer chip that is needed to run the training program that trains the neural network.  Without a GPU, creating the neural network can literally take weeks.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;neural-network&quot;&gt;Neural Network&lt;/h2&gt;

&lt;p&gt;A neural network is an approach to computation that makes a computer work more similarly to a human brain.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Neural_network&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;corpus&quot;&gt;Corpus&lt;/h2&gt;

&lt;p&gt;This is a fancy damn word that means &quot;related collection of stuff&quot;.  Generally Machine Learning refers to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Text_corpus&quot;&gt;textual corpus&lt;/a&gt; but it could be a collection of images.&lt;/p&gt;

&lt;h2 id=&quot;labels&quot;&gt;Labels&lt;/h2&gt;

&lt;p&gt;Labels are the values applied to training data that represent what you want the machine to learn.&lt;/p&gt;

&lt;h2 id=&quot;labeling&quot;&gt;Labeling&lt;/h2&gt;

&lt;p&gt;Labeling is the process of adding labels to the training data.&lt;/p&gt;

&lt;h2 id=&quot;labeler&quot;&gt;Labeler&lt;/h2&gt;

&lt;p&gt;The labeler is the software that makes applying labels to the training data easier.  A labeler might be a special computer program or even Microsoft Excel or something like AirTable.&lt;/p&gt;

&lt;h2 id=&quot;training-set&quot;&gt;Training Set&lt;/h2&gt;

&lt;p&gt;The training set is the collection of data that you use to generate your models.  The amount of data in a training set varies but it can often be as much as tens of thousands of labeled examples.&lt;/p&gt;

&lt;h2 id=&quot;test-set&quot;&gt;Test Set&lt;/h2&gt;

&lt;p&gt;The test set is the collection of labeled data that you use to make sure that your trained model learns the way you think it does.  After you train your model using the training set then you benchmark your model against the test set.  Depending on how you build your models there can actually be many different sets.&lt;/p&gt;

&lt;h2 id=&quot;precision--recall--f1--auc-and-other-weird-words&quot;&gt;Precision / Recall / F1 / AUC and Other Weird Words&lt;/h2&gt;

&lt;p&gt;These are terms that are used to measure how your model performs and are different mathematical approaches for model performance.&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;This blog post was reviewed by Elaine Thompson and Grant Vousden-Dishington.  My thanks are extended to both of them.&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/14/what-is-machine-learning.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/14/what-is-machine-learning.html</guid>
        
        <category>machine_learning</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>How To Detox Someone From Alcohol</title>
        <description>&lt;p&gt;Immer
&lt;strong&gt;Note 1&lt;/strong&gt;: I write this from real world, personal experience a number of years ago (1998) and it is, to this day, one of the most painful personal memories I have.  If you are taking the time to read this then a) my heart goes out to you because you are almost certainly reading this from a position of need not idle curiosity and b) if you need someone to talk to, my contact info is public and you can reach out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I am not a doctor.  I am not a biologist.  You do this &lt;strong&gt;at your own risk&lt;/strong&gt; and there are dedicated alcohol treatment facilities that do this professionally.  Detoxing a serious drinker is risky to their health but it can be done at home and for a fraction of the cost of the alcohol treatment facilities.  But you pay the cost in emotional energy, loss of sleep, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: When I described what I was did, years later, to a professional, they told me: &quot;Alcohol and benzo withdrawal is more deadly than heroin. They need medical supervision.&quot;  I don't disagree - to this day - but you can't force someone into treatment.  And sometimes you play the hand that life deals you.&lt;/p&gt;

&lt;p&gt;I would argue that alcohol abuse is roughly as old as alcohol itself and, thus, roughly as old as civilization itself since we know that fermented beverages date back at least to Egyptian times.  The process of removing the physical effects of alcohol from an individual who is drinking to much is referred to as detox (you are literally removing the toxic compound from their body).  The term for this is generally &quot;tapering&quot; and consists of nothing more complex than drinking less and less per day until you are at a desired level.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;You should really read every one of these – IN DETAIL – before you even think of attempting this.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hams.cc/taper/&quot;&gt;How to Taper Off Alcohol&lt;/a&gt; BEST DAMN THING TO READ; I wish this had been online back in 1998&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.drugrehab.com/addiction/alcohol/detox-at-home/&quot;&gt;Alcohol Detox at Home&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.alcohol.org.nz/alcohol-its-effects/health-effects/alcohol-poisoning&quot;&gt;Alcohol Poisoning&lt;/a&gt; SECOND BEST DAMN THING TO READ.  Alcoholics have a lot of health issues and this taught me how many health issues I dealt with once upon a time were actually nothing more than drinking too much.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.psychologytoday.com/us/blog/view-the-mist/201610/when-someone-refuses-treatment&quot;&gt;When Someone Refuses Treatment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;who-the-people-are&quot;&gt;Who The People Are&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The person who needs to be detoxed – the &lt;strong&gt;detoxee&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The person or persons who is doing the detoxing – the &lt;strong&gt;detoxer&lt;/strong&gt; or &lt;strong&gt;detoxers&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-basic-concept&quot;&gt;The Basic Concept&lt;/h2&gt;

&lt;p&gt;Detoxing someone from alcohol basically is conceptually simple and the core idea is that of tapering the person's daily consumption down from their maximum dose down to some kind of viable daily amount.  And the way you do this is you use an alcoholic beverage which has a lower amount of alcohol per serving than the detoxee is used to. The typical model is that you use beers / ciders / gluten free sparkling water alcoholic beverages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I personally don't believe in sobriety; I believe in moderation.  If someone has an alcohol problem, my personal belief is the goal is to get them to a reasonable consumption amount NOT to get them to stop.  Your belief may vary but the actual recidivism rates for AA are strikingly higher than the numbers they publicly report.&lt;/p&gt;

&lt;h2 id=&quot;how-do-you-measure-their-maximum-dose&quot;&gt;How Do You Measure Their Maximum Dose&lt;/h2&gt;

&lt;p&gt;This is what I did.  I was sneaky:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Any alcoholic tends to consume whatever is right in front of them, generally their favorite type of spirit&lt;/li&gt;
  &lt;li&gt;Get rid of any partial bottles of said spirit type&lt;/li&gt;
  &lt;li&gt;Buy a single new bottle&lt;/li&gt;
  &lt;li&gt;After a 24 hour period you measure the amount that was consumed&lt;/li&gt;
  &lt;li&gt;You then assess if during that 24 hour period she was basically about the same or if it was an outlier&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-do-you-convince-someone-they-have-a-problem&quot;&gt;How Do You Convince Someone They Have A Problem?&lt;/h2&gt;

&lt;p&gt;In the grand tradition of a 4th Grade Arts and Crafts project, I picked up a tray table from Good Will and mounted a set of shot glasses on it that correspond to the amount of alcohol consumed during that 24 hour period.  I then presented it to the detoxee. And, lo and behold, math is kinda hard to refute:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1418a.jpeg&quot; alt=&quot;IMG_1418a.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: Shot glasses generally are 1.5 ounces.  So take the maximum amount consumed in ounces and then divide by 1.5.  That's the number of shot glasses you need to mount.  Construction adhesive works particularly well for thais.&lt;/p&gt;

&lt;h2 id=&quot;heres-what-you-need-to-pull-this-off&quot;&gt;Here's What You Need to Pull This Off&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You need to know the maximum amount the person you are trying to detox drinks.  This is measured in &quot;standard drinks&quot; (see the links below to understand that)&lt;/li&gt;
  &lt;li&gt;You need to know the time period you are trying to do this in.  You might be trying to detox someone in 7 days.  Or you might be trying to do this in 14 days.  Or whatever.&lt;/li&gt;
  &lt;li&gt;You need to accept that all addicts are liars.&lt;/li&gt;
  &lt;li&gt;Gatorade; lots of it.  Dehydration is a very real risk.&lt;/li&gt;
  &lt;li&gt;Blood pressure monitor.  You need to watch the detoxee's blood pressure regularly and log it.&lt;/li&gt;
  &lt;li&gt;You need a type of alcohol that detoxee likes to drink and that their dietary restrictions can handle and that has a lower amount of alcohol per serving than they are used to&lt;/li&gt;
  &lt;li&gt;You need a printed out Google Spreadsheet that matches the number of standard drinks you are detoxing from with the time period you are detoxing over mapped to the detoxee's waking hours.  Here's the old Excel Spreadsheet I used back in 1998 that I converted to &lt;a href=&quot;https://docs.google.com/spreadsheets/d/14XrmbDDeeG9KmipxHEvHpzBYVTeYRFgzlQkN1b4-g9c/edit?usp=sharing&quot;&gt;Google Spreadsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A block of time that is as uninterrupted as possible&lt;/li&gt;
  &lt;li&gt;Daily doses of Vitamin B1 (thiamin); this helps with the diminished cognition that all alcoholics suffer from.  It is dirt cheap and just Amazon it.&lt;/li&gt;
  &lt;li&gt;Media / music that the detoxee can binge consume to distract themselves; this was a lot harder back in 1998 but is trivial nowadays with Netflix and Prime&lt;/li&gt;
  &lt;li&gt;All alcohol in the house that isn't for detox purposes needs to be under lock and key.  You need to check every stash place where the detoxee has booze.  This includes home offices, briefcases, purses, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;day-1&quot;&gt;Day 1&lt;/h2&gt;

&lt;p&gt;You start the process by giving the detoxee a schedule of drinks and a cooler of the beverages they need to drink hourly.  Each hour they consume something they check it off the schedule.&lt;/p&gt;

&lt;h2 id=&quot;day-n&quot;&gt;Day n&lt;/h2&gt;

&lt;p&gt;You just continue day 1, following the schedule, and, hopefully, the detoxee is drinking less each day.  Each day you should see less of the physical symptoms of the alcohol abuse (less vomiting; less sweats; reduced rage; less paranoia, etc).&lt;/p&gt;

&lt;h2 id=&quot;surviving-this-process-as-the-detoxer&quot;&gt;Surviving this Process as the Detoxer&lt;/h2&gt;

&lt;p&gt;My friend, you are in a shitty ride.  I remember this process with searing intensity and my the lightest of the swear phrases I used to describe some of the days was &quot;rat fucking bullshit&quot;.  Given the amount of shame that the detoxee generally has about this, you are likely to be alone through the process as the detoxee doesn't want anyone else to see them at their literal worst (paranoid, vomiting, sweating rage monsters that accuse you of all kinds of ill intent).  Here's what I recommend for you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take the detox period off from work&lt;/li&gt;
  &lt;li&gt;Send kids, if you have them, away to stay with relatives&lt;/li&gt;
  &lt;li&gt;Buy your favorite food(s) in bulk and stockpile them so there are treats for you&lt;/li&gt;
  &lt;li&gt;Nap whenever you can.  You are effectively an unpaid nurse who has to clean up vomit buckets, prepare food, be an emotional punching bag, etc.  Sleep helps.&lt;/li&gt;
  &lt;li&gt;Realize that the detoxee isn't actually mad at you; they are mad at themselves and you are just a convenient target.  The emotional abuse that will be leveled at you is beyond toxic and this is the single hardest part.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you can survive this.  I did and so have many, many others since the dawn of time.&lt;/p&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank Yous&lt;/h2&gt;

&lt;p&gt;Over the years I have spoken to a number of people about this particularly surreal and shitty life experience.  If you are still in my life and you are reading this then thank you.  Each and every one of you made a difference.&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/alcohol/2020/01/14/how-to-detox-someone-from-alcohol.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/alcohol/2020/01/14/how-to-detox-someone-from-alcohol.html</guid>
        
        <category>alcohol</category>
        
        <category>life</category>
        
        
        <category>alcohol</category>
        
      </item>
    
      <item>
        <title>Protecting Your Kid From the Internet</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0935.jpeg&quot; alt=&quot;IMG_0935.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't care how permissive / how liberal a parent you are, I suspect that you would have problems with your relatively young kid (let's say &lt;strong&gt;under&lt;/strong&gt; 18) going into a place like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/porn_shop.jpg&quot; alt=&quot;sex_shop_image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I look at putting the Internet into your home without some kind of Internet filtering as analogous to letting your kids walk into a place like this and not stopping them.  In the rest of this post I'll talk about Internet filtering and the first ever product, Disney Circle, that I've found is worth using&lt;/p&gt;

&lt;h2 id=&quot;my-credentials-to-even-write-this&quot;&gt;My Credentials to Even Write This&lt;/h2&gt;

&lt;p&gt;On a personal level I am a husband and father (two sons, 18 and 13).  I'm also a software engineer who has been active on the Internet since the pre-web days and I've spent a large amount of my professional life dealing with spam and bad actors on the Internet.  Finally I'm a firm believer in free speech and as my wife might comment, I'm the furthest thing from a prude in any way, shape or form.  Those last two points, free speech and not being a prude make this a hard post for me to write as I am generally &lt;strong&gt;philosophically opposed&lt;/strong&gt; to Internet filtering.  Now, that said, I would never let my kid walk into a place like that pictured above and I don't think you should either – what happens there is an adult activity and there is a reason why its actually illegal to be in there if you're under 18.&lt;/p&gt;

&lt;h3 id=&quot;internet-filtering-overview&quot;&gt;Internet Filtering Overview&lt;/h3&gt;

&lt;p&gt;Internet filtering is just that – the idea of selectively blocking portions of the Internet i.e. filtering.  From the bits, bytes and megabytes perspective, internet filtering is a hard technical problem for a whole bunch of reasons.  And, alas, those actually don't matter all that much so I'm going to skip nerding out here as much as I might like to do a deep dive into Internet architecture.&lt;/p&gt;

&lt;h3 id=&quot;disney-circle&quot;&gt;Disney Circle&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Circle-Parental-Controls-Internet-Devices/dp/B07QQHRB8P/ref=sr_1_1_sspa?keywords=disney+circle&amp;amp;qid=1578914466&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExSjZMWjVISU85RDhNJmVuY3J5cHRlZElkPUEwODA5MTA2Q0ROWFFTSktTWkpKJmVuY3J5cHRlZEFkSWQ9QTAzNTE0MDgzMEZMUkpBSkdZNEM5JndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ==&quot;&gt;Disney Circle&lt;/a&gt; is a hardware box that plugs into your wifi network and acts to intercept network traffic and block things that fall into the category of malicious stuff including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Porn&lt;/li&gt;
  &lt;li&gt;Gambling&lt;/li&gt;
  &lt;li&gt;Drug related content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a variety of well thought out parental controls which give you category level granularity down to things like &quot;Allow Facebook but not Twitter&quot;.&lt;/p&gt;

&lt;p&gt;I honestly didn't expect to like Disney Circle and I find myself in the rare position of not being able to say enough good things about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you use a mesh networking product like Eero, you may find that Disney Circle doesn't work with it so you might specifically find out before you buy one.&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2020/01/13/protecting-your-kid-from-the-internet.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2020/01/13/protecting-your-kid-from-the-internet.html</guid>
        
        
      </item>
    
      <item>
        <title>Startup Coach 02 - How to Learn Technology Stuff Quickly Part 1</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6390.jpeg&quot; alt=&quot;IMG_6390.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are typically two types of folks that want to have their own startup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Engineers / Technical folk who have the ability to create their own products / services / mobile apps / SAAS apps&lt;/li&gt;
  &lt;li&gt;Business Folk who have a concept but don't have the ability to create their own technology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are exceptions to the rule – sometimes you will see someone who straddles these lines (I do; I'm both more than business savvy and I write code like demon every damn day) – but, generally, this is the split that you see.&lt;/p&gt;

&lt;p&gt;This post is written for the business person who finds themselves with the need to learn technical things quickly.  I'm going to tell you how, decades ago, I learned &lt;em&gt;how to learn&lt;/em&gt; technology stuff and then, in part two, I'm going to give recommendations for how I'd approach this in 2020.&lt;/p&gt;

&lt;h2 id=&quot;how-i-learned-technology-stuff----in-april-1982&quot;&gt;How I Learned Technology Stuff – in April, 1982&lt;/h2&gt;

&lt;p&gt;I date my technology education back to April 1982 (it was likely earlier since this was a cover date on a periodical and magazines come out before the date on the cover so they have news stand time but we'll go with April).   Going on that date, this puts me at:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1967&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magazine_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1982&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;040&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magazine_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;372602739726027&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;so let's call it 14 years old.  At this point I was likely a sophomore in high school with no formal computer training save for I owned an early personal computer which I mostly used for playing games.&lt;/p&gt;

&lt;p&gt;And then I walked into the local Walden Books and discovered Byte Magazine:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;https://ia802603.us.archive.org/BookReader/BookReaderImages.php?zip=/26/items/byte-magazine-1982-04/1982_04_BYTE_07-04_Human_Factors_Engineering_jp2.zip&amp;amp;file=1982_04_BYTE_07-04_Human_Factors_Engineering_jp2/1982_04_BYTE_07-04_Human_Factors_Engineering_0000.jp2&amp;amp;scale=16&amp;amp;rotate=0&quot; alt=&quot;https://ia802603.us.archive.org/BookReader/BookReaderImages.php?zip=/26/items/byte-magazine-1982-04/1982_04_BYTE_07-04_Human_Factors_Engineering_jp2.zip&amp;amp;file=1982_04_BYTE_07-04_Human_Factors_Engineering_jp2/1982_04_BYTE_07-04_Human_Factors_Engineering_0000.jp2&amp;amp;scale=16&amp;amp;rotate=0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can read this issue online &lt;a href=&quot;https://archive.org/details/byte-magazine-1982-04&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;and I was just plain fascinated.  What I discovered was that not only did I &lt;strong&gt;not understand&lt;/strong&gt; this magazine, I maybe understood only every 15th word (generally pronouns).  But what I did was this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I simply read it even though I didn't understand it&lt;/li&gt;
  &lt;li&gt;I bought the next issue&lt;/li&gt;
  &lt;li&gt;And I read that and I understood a bit more&lt;/li&gt;
  &lt;li&gt;Lather; rinse; repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then, five years later, I started my first software company based on what I learned from reading Byte magazine.  And, honestly, at that point I really qualified purely as the business folk (albeit one with a strong product focus; not engineering; product definition / product management).  And I want to be clear about something – I didn't spend 5 years learning technology stuff.  During that time, I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Became an Eagle Scout&lt;/li&gt;
  &lt;li&gt;Learned a bit of Basic programming&lt;/li&gt;
  &lt;li&gt;Learned to drive and work on cars&lt;/li&gt;
  &lt;li&gt;Finished High School&lt;/li&gt;
  &lt;li&gt;Discovered girls and, my, my – what a deep and wonderful journey that began for me&lt;/li&gt;
  &lt;li&gt;Started my first business (we fixed old school tube televisions mostly in the inner city)&lt;/li&gt;
  &lt;li&gt;Worked in the family business a lot (full time during the summers)&lt;/li&gt;
  &lt;li&gt;Went to college for 2 years before dropping out and starting my software company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What that single issue of Byte Magazine taught me was the power of &lt;strong&gt;immersion&lt;/strong&gt;.  If you need to learn something then what you do is a deep dive into it and, if you &lt;strong&gt;really&lt;/strong&gt; want it, I am a firm believer that you can master whatever you want.  And, I will admit, that there are certain things you want to learn of which there are intellectual capabilities that you may not have (for example, I'm never going to learn certain types of higher math; I'm just not wired for that).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: When I entered high school I was in remedial math; I left high school with calculus under my belt having taken 5 years of math in 4 years.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I'm don't dispute that I'm a sort of smart guy but what I really am is &lt;strong&gt;somebody who learned how to learn&lt;/strong&gt; very, very early.  I'm also a damn hard worker.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/12/startup-coach-02-how-to-learn-technology-stuff.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/12/startup-coach-02-how-to-learn-technology-stuff.html</guid>
        
        <category>startup</category>
        
        <category>startup_coach</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Tools for Tailwind CSS</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6308.jpeg&quot; alt=&quot;IMG_6308.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tailwind is a CSS grid library that is an alternative to Bootstrap and, well, something I'm increasingly using.  Here are some handy, dandy Tailwind tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@mattburgess/getting-started-with-tailwindcss-3190def35361&quot;&gt;Tailwind Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hanneslund.github.io/elm-tailwind-button-maker/&quot;&gt;Tailwind Button Generator&lt;/a&gt; (written in &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;!!!!)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwindgrids.com/#/&quot;&gt;Tailwind Grid Generator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tailwindtoolbox.com/&quot;&gt;Tailwind Toolbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwind.build/&quot;&gt;Tailwind Builder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 11 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/css/2020/01/11/tools-for-tailwind-css.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/css/2020/01/11/tools-for-tailwind-css.html</guid>
        
        <category>css</category>
        
        <category>tailwind</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Adding Explainability to Machine Learning Routines via Runtime Execution of Labeling Functions</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0928.jpeg&quot; alt=&quot;IMG_0928.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am spending much of my time these days in the world of machine learning and I'm finding that it is &lt;strong&gt;profoundly interesting&lt;/strong&gt;.  One of the most interesting aspects of machine learning, for me, is the &lt;em&gt;black box&lt;/em&gt; nature of machine learning's output.  What we typically get from a machine learning model what the model thinks but not how it arrived at that result.  And this lack of explainability is true for machine learning whether the underlying technology is Tensor Flow for image segmentation or Bert / Roberta / Albert for text processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:  Bert / Roberta / Albert are machine learning tools that generate linguistically savvy models that understand English language content.&lt;/p&gt;

&lt;p&gt;As a side note, given how hard it is for most people to understand why they think what they think, is the black box nature of machine learning actually all that surprising?&lt;/p&gt;

&lt;h2 id=&quot;machine-learning-basics-for-the-newbie&quot;&gt;Machine Learning Basics for the Newbie&lt;/h2&gt;

&lt;p&gt;The world of machine learning, which appears intimidating as hell to the newbie, actually isn't that hard but the terms can be terrifying.  Someone recently asked me what I was doing and this was my answer:&lt;/p&gt;

&lt;p&gt;&quot;I am working on a weekly supervised learning model for an anti Semitic classifier that will be used in a Kafka data pipeline. &quot;&lt;/p&gt;

&lt;p&gt;Here are the very basics of machine learning:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Machine Learning is just that - a way for a machine to learn from data.&lt;/li&gt;
  &lt;li&gt;The underlying idea of machine learning is pretty much just &lt;em&gt;pattern recognition&lt;/em&gt; based on data fed through a neural network.&lt;/li&gt;
  &lt;li&gt;To make machine learning work you &quot;label&quot; a data set which means you tell the machine that for Example X, the answer you want is Foo and for Example Y, the answer is Bar.  And you do this over and over and over (sometimes you have to label 50,000 examples; that's what my current project uses).&lt;/li&gt;
  &lt;li&gt;You give a program, generally called a training program, this labeled data and then it thinks on this for a while and creates what is called a &lt;strong&gt;model&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;model&lt;/strong&gt; is a trained neural network which understands how to process data like what you trained it with and give back results of the types that you taught it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot of terms that I could throw around - Python, Bert / Alberta / Roberta, TensorFlow, Convolutional Neural Network, Adversarial Neural Network and so on but the essence of machine learning are the bullet points above.&lt;/p&gt;

&lt;h2 id=&quot;labeling-and-machine-learning&quot;&gt;Labeling and Machine Learning&lt;/h2&gt;

&lt;p&gt;There are two general approaches to labeling data for machine learning, one classical and one new:&lt;/p&gt;

&lt;h3 id=&quot;classical&quot;&gt;Classical&lt;/h3&gt;

&lt;p&gt;With a classical approach, you generate a set of &quot;labeled&quot; data by humans manually labeling a large set of data with yes / no (or something else) options.  This is generally measured in the tens of thousands of chunks of labeled data.  This is generally expensive and time consuming.&lt;/p&gt;

&lt;h3 id=&quot;new&quot;&gt;New&lt;/h3&gt;

&lt;p&gt;A newer approach falls into the category of &lt;em&gt;Weak Supervision&lt;/em&gt; where you leverage a series of what are called labeling functions (lfs for short) along with a new technology called Snorkel.  This is termed &quot;weak supervision&quot; because the supervision of the process is just that – weak (less human training).&lt;/p&gt;

&lt;p&gt;A labeling function is often nothing more than a regular expression that returns true / false / abstain.  The idea of a labeling function is to leverage human expertise that can be easily codified into a rule set.  You then run these labeling functions against your dataset and build a matrix of the results.  That matrix, along with the data itself allows you to generate a machine learning model which has similar performance characteristics as the classical approach but with a fraction of the amount of training data – think 500 to 1000 labeled chunks of data instead of tens of thousands of chunks.&lt;/p&gt;

&lt;h2 id=&quot;leveraging-the-labeling-functions&quot;&gt;Leveraging the Labeling Functions&lt;/h2&gt;

&lt;p&gt;It is important to understand that the labeling functions aren't a part of the machine learning model – they simply generate the training data that create the machine learning model.  To draw in a metaphor, labeling functions are like the loom which &lt;em&gt;creates&lt;/em&gt; the blanket but is &lt;em&gt;not itself&lt;/em&gt; part of the blanket.  Because the labeling functions aren't actually part of the model, they don't actually run on the data that model processes.  So when you process a chunk of data through the machine learning model, it can tell you the result but it can't tell you why.&lt;/p&gt;

&lt;p&gt;But, and here's the &lt;em&gt;new thing&lt;/em&gt;, you could take the chunk of data you processed through the machine learning model and run it through the labeling functions at &lt;strong&gt;runtime&lt;/strong&gt; to get back a set of matches from the labeling functions.  These matches can make the output of the model explainable.  Labeling functions, even though they are thought solely to a part of the training process, can still be used at runtime.&lt;/p&gt;

&lt;h3 id=&quot;practical-implementation&quot;&gt;Practical Implementation&lt;/h3&gt;

&lt;p&gt;Here's how this might be implemented in a web based online system which processes data though a model that has users:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write a set of labeling functions.&lt;/li&gt;
  &lt;li&gt;Process the data set through the labeling functions and generate a model.&lt;/li&gt;
  &lt;li&gt;Deploy the model into a production environment.&lt;/li&gt;
  &lt;li&gt;Deploy the labeling functions into a production environment wrapped into an API that accepts the same data fed into the model.  This might be an http api or a thrift api or whatever; this depends on the system.&lt;/li&gt;
  &lt;li&gt;Process data through the model.&lt;/li&gt;
  &lt;li&gt;When the user requests &quot;Explain&quot; on the results of the model, pass the data through the labeling functions API and display the results of the labeling functions in a way that the user can understand them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;the-counter-speech-issue&quot;&gt;The Counter Speech Issue&lt;/h3&gt;

&lt;p&gt;My machine learning work is specifically in the arena of identifying / measuring hate speech on public social platforms.  When you work in the hate speech arena, a key consideration is &lt;em&gt;counter speech&lt;/em&gt;.  Counter speech is speech that attempts to address hate speech / fight hate speech.  Now the typical mechanism for counter speech is that it often quotes the hateful speech and then attempts to defuse it.  Counter speech when processed through a well defined machine learning model tends to &lt;strong&gt;not&lt;/strong&gt; be identified as hateful because the underlying model technology (Bert / Roberta / Albert) understands the linguistic nature of the speech and discount the specific nouns inside it.&lt;/p&gt;

&lt;p&gt;Now, given that counter speech tends to use the same words as hate speech, labeling functions that attempt to explain counter speech tend to explain it as hateful (where as the machine learning model tends to identify counter speech as non hateful).  The issue here is that regular expressions don't understand the linguistic subtleties that a machine learning model based on bert / roberta / albert does understand.  A possible way to address this is to enable the explain function to only operate for things are hateful not things that aren't hateful.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/a-look-into-snorkel-drybell-8e9e781dc250&quot;&gt;A Look Into Snorkel Drybell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1812.00417&quot;&gt;Arxiv Paper on Snorkel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zdnet.com/article/is-googles-snorkel-drybell-the-future-of-enterprise-data-management/&quot;&gt;ZdNet on Snorkel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.snorkel.org/&quot;&gt;Snorkel.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ai.googleblog.com/2019/03/harnessing-organizational-knowledge-for.html&quot;&gt;Google AI Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/sculpt/a-technique-for-building-nlp-classifiers-efficiently-with-transfer-learning-and-weak-supervision-a8e2f21ca9c8&quot;&gt;Sculpt on Building AI Classifiers Using NLP (Abraham)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://explosion.ai/demos/displacy&quot;&gt;Displacy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spacy.io/models&quot;&gt;Spacy Models&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html</guid>
        
        <category>machine_learning</category>
        
        <category>python</category>
        
        <category>snorkel</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Creating an All New Rails App</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/2017-02-20_08.11.21.jpg&quot; alt=&quot;2017-02-20_08.11.21.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have been mentoring a person new to Rails for the past several weeks and it is always instructive to see where someone new to the platform has issues.  This blog post walks through the commands we used today and explains them.  If you're an old hat at this, just move on but if you're starting out, I suspect this may be quite helpful.&lt;/p&gt;

&lt;h2 id=&quot;navigate-to-the-right-starting-directory&quot;&gt;Navigate to the Right Starting Directory&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/rails/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;make-sure-rails-is-ok&quot;&gt;Make Sure Rails is Ok&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;set-the-ruby-version&quot;&gt;Set the Ruby Version&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rvm use 2.7.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;find-a-rails-new-command-from-my-history&quot;&gt;Find a Rails New Command from my History&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;history | grep 'rails new'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;create-a-new-rails-app&quot;&gt;Create a New Rails App&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new dev_home_page --database=mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;change-into-the-directory&quot;&gt;Change Into The Directory&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd dev_home_page
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-bundle-install&quot;&gt;Run Bundle Install&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-a-web-server&quot;&gt;Start a Web Server&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3096
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Open the web server in your browser with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3096/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;close-web-server-with-ctrlc-and-edit-configdatabaseyml&quot;&gt;Close Web Server with Ctrl+C and Edit config/database.yml&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mate config/database.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You need to set the user and password on your database server in the first configuration block within the database.yml file.&lt;/p&gt;

&lt;h2 id=&quot;create-the-database-itself&quot;&gt;Create the Database Itself&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:create
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-rake-dbmigrate&quot;&gt;Run rake db:migrate&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-two-more-terminal-panes&quot;&gt;Start Two More Terminal Panes&lt;/h2&gt;

&lt;p&gt;I run iTerm and I'm a firm believer in the &quot;The Trininty of Terminal Windows for Rails Development&quot; so I right click in my terminal window and select Split Pane Horizontally twice giving me 3 terminal windows in one.  I then go back to my first terminal window and get the current directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: The trinity of terminal windows is Web Server, Rails Console and a Command Line for git commits / whatever else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: The same result can be done with 3 tabs in standard OSX Terminal.  I just &lt;strong&gt;adore&lt;/strong&gt; iTerm; it has made my life better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: Start your Rails Console in the middle pane with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;get-the-current-directory-and-set-all-terminal-panes-to-this-directory&quot;&gt;Get the Current Directory and Set all Terminal Panes to this Directory&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pwd 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then in each other terminal pane, do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/rails/dev_home_page
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is the directory that pwd displayed or you.&lt;/p&gt;

&lt;h2 id=&quot;install-yarn&quot;&gt;Install Yarn&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -o- -L https://yarnpkg.com/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Update your current terminal window's path with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add yarn to your application:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn install --check-files    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;re-run-the-web-server-from-the-top-terminal-pane&quot;&gt;Re-Run the Web Server from the Top Terminal Pane&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3096
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point the errors seen initially should be gone entirely.  Open the web server in your browser with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3096/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;create-a-model-and-edit-the-migration&quot;&gt;Create a Model and Edit the Migration&lt;/h2&gt;

&lt;p&gt;The next real test of being able to make a Rails app is to generate a model.  If this works then your entire Rails app should be setup correctly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g model Project
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 09 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/09/creating-an-all-new-rails-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/09/creating-an-all-new-rails-app.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Finding Your Rhythm as a Remote Worker</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7013.JPG&quot; alt=&quot;IMG_7013.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Denver Skyline from a Remote Worker's Office; Photo Credit - Kim Corbett; Thank You)&lt;/p&gt;

&lt;p&gt;I have been, with one 9 month exception, a fully remote worker since 1999 and a manager of remote workers since 1996.  Heading into 2020 that puts me at over 20 years of solid, day in and day out remote work so, I'll admit, that I &lt;strong&gt;know&lt;/strong&gt; a thing or two about remote work.  I've both been a remote worker, managed remote workers and I think all possible permutations.  This post attempts to summarize what works for &lt;strong&gt;me&lt;/strong&gt;.  What works for &lt;strong&gt;you&lt;/strong&gt; will almost certainly be different but I suspect the same meta principles will apply.&lt;/p&gt;

&lt;h1 id=&quot;routine-routine-routine&quot;&gt;Routine, Routine, Routine&lt;/h1&gt;

&lt;p&gt;Day in and day out my days look remarkably similar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;roll out of bed sometime between 3 am and 6 am&lt;/li&gt;
  &lt;li&gt;shower, shave, dress, etc.  Even tho the only people that ever see me are my wife, kids and cats (yes they are peole to me) I still dress like I was going into an office every day.&lt;/li&gt;
  &lt;li&gt;hit &lt;a href=&quot;http://www.meh.com/&quot;&gt;meh&lt;/a&gt; while it hasn't sold out and see if there is something cheap I can treat myself to&lt;/li&gt;
  &lt;li&gt;hit the hardest code immediately and get my momentum going&lt;/li&gt;
  &lt;li&gt;take advantage of the &lt;a href=&quot;https://fuzzyblog.io/blog/startup/2016/10/29/startup-learnings-i-do-all-my-coding-before-anyone-gets-to-work-or-what-ed-fisher-taught-me.html&quot;&gt;early morning, blessed quiet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;continue until the end of the day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know that some remote workers are constantly changing location and fully embrace the digital nomad lifestyle (&lt;a href=&quot;http://wanderling.co/how-i-work-from-anywhere-in-the-world&quot;&gt;example&lt;/a&gt;).  And that is brilliant that they are able to do so but for myself I really appreciate consistency.  And I adore having a solid, fast connection like fiber – you don't get that when you move regularly.&lt;/p&gt;

&lt;h1 id=&quot;it-is-still-work&quot;&gt;It Is Still Work&lt;/h1&gt;

&lt;p&gt;The single biggest mistake that everyone, and that has included me in the past, makes with remote work is not treating it as work.  Because you are the one at home it is all too easy for your spouse (or yourself) to assume &quot;oh they can also do a load of laundry&quot; or some other house hold task.  &lt;strong&gt;No&lt;/strong&gt;.  &lt;strong&gt;You&lt;/strong&gt;.  &lt;strong&gt;Can't&lt;/strong&gt;.  Work is work and home is home.  I find that my greatest productivity comes when my door is shut and I can concentrate.  Now your results might vary&lt;/p&gt;

&lt;h1 id=&quot;you-dont-have-colleagues-so-figure-out-how-to-do-everything-alone&quot;&gt;You Don't Have Colleagues So Figure Out How to Do Everything Alone&lt;/h1&gt;

&lt;p&gt;When you are a remote worker you do have colleagues but, often, when you are the odd man out in the remote wilderness you may find that, ahem, they aren't always helpful.  Being able and willing to figure things out on your own is a key skill.&lt;/p&gt;

&lt;h1 id=&quot;gear---you-never-know&quot;&gt;Gear - You Never Know&lt;/h1&gt;

&lt;p&gt;I almost never throw any computer gear out.  As a remote engineer there is no one to turn to in the next cubicle and say something like &quot;I need a USB to firewire adapter to get some data off this old drive that might help me with my current code&quot;.  Can I go to the computer store for that?  Sure.  I even have a Fry's 20 minutes away but that 20 minute drive easily turns into:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20 minutes there&lt;/li&gt;
  &lt;li&gt;20 minutes back&lt;/li&gt;
  &lt;li&gt;20 minutes shopping&lt;/li&gt;
  &lt;li&gt;an hour plus getting my head back where it was before I left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I stay in my cozy home environment, even if I'm rooting thru a cable bin for something I can keep my current context solid in my head.  But if I have to get into a car and engage the outside world then it is a given that I have lost it and it will usually take a solid hour to get my brain back to where it needs to be (if the problem is complex).&lt;/p&gt;

&lt;p&gt;If you don't keep a gear box where you toss old hard drives, cables, an odd network hub, etc then I strongly encourage you to do so.  Odds are that this pack rat tendency will drive your spouse mad but the productivity benefits are real.&lt;/p&gt;

&lt;h1 id=&quot;engineer-invest-in-thyself&quot;&gt;Engineer Invest In Thyself&lt;/h1&gt;

&lt;p&gt;I don't think I'm wrong in saying that engineers are notoriously cheap.  We all look at technology and think to ourselves &quot;I could build that&quot; – even when it is normally untrue.  One of the very best decisions you can make is to invest in yourself.  There are three great purchases that I've made over the years that really, truly improved my productivity:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/startup/2016/10/21/startup-learnings-what-francois-schiettecatte-taught-me.html&quot;&gt;an Aeron chair&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bose Quiet Comfort Headphones&lt;/li&gt;
  &lt;li&gt;Building My Own Computer Desk&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll sit in the same chair for sometimes 14 to 16 hours per day.  I don't ever have back pain and I never even notice my chair – an Aeron is just that good.  Similarly there are times when I've pair programmed for 10 hours straight and my ears don't hurt.  I can wear Quiet Comfort headphones all damn day.  When I got them they were $350 which I thought at the time was absurd but all other pairs of headphones just didn't cut it.  And if you buy two or three pairs of $60 headphones then you're almost half way there anyway.&lt;/p&gt;

&lt;p&gt;I haven't spoken about my adventures earlier this year in building exactly the computer desk I've always wanted but I will someday.  A bad day in the office about a month ago sent me racing to the lumber yard and two days later I had ripped out the absolutely shite working surface I had and replaced it with this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/desk1.jpg&quot; alt=&quot;desk1&quot; /&gt; 
(simple, flat, 8 foot span)
&lt;img src=&quot;/blog/assets/desk2.jpg&quot; alt=&quot;desk2&quot; /&gt;
(most of the computers in place; there are more now)
&lt;img src=&quot;/blog/assets/desk3.jpg&quot; alt=&quot;desk3&quot; /&gt; 
(Nice cut outs for cable transfer)
&lt;img src=&quot;/blog/assets/desk4.jpg&quot; alt=&quot;desk4&quot; /&gt; 
(why you make your own desk - the desire to NOT have a visual rats nest of all the cabling that modern computing &lt;strong&gt;requires&lt;/strong&gt;; there are 6 power strips under my desk and all are full; I'm about to add a seventh)&lt;/p&gt;

&lt;p&gt;All total I spent less than 8 hours in rough carpentry from start to finish on this and I highly recommend it if you are a hands on person.  I've wanted to do this for more than a decade now and I'm tremendously happy that I did.&lt;/p&gt;

&lt;p&gt;The only sad thing about making my own desk is that my wife recently got me &lt;a href=&quot;https://www.amazon.com/Good-Clean-Fun-Misadventures-Offerman/dp/1101984651/ref=sr_1_1?ie=UTF8&amp;amp;qid=1480930872&amp;amp;sr=8-1&amp;amp;keywords=nick+offerman&quot;&gt;Nick Offerman's Good Clean Fun&lt;/a&gt; book and now I really want to make another one this time as a trestle table.  Sigh.  If you are a woodworker and you haven't read Offerman yet then I highly recommend it.  You would never believe that an actor could teach you wood working but he does a credible job and spins a wonderful tale in the doing.&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2020/01/08/finding-your-rhythm-as-a-remote-worker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2020/01/08/finding-your-rhythm-as-a-remote-worker.html</guid>
        
        <category>remote</category>
        
        <category>work_from_home</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>An Open Letter to Bob Frankston</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1312.jpg&quot; alt=&quot;IMG_1312.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;Hi &lt;a href=&quot;https://en.wikipedia.org/wiki/Bob_Frankston&quot;&gt;Bob&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I strongly doubt you remember but I met you years ago as part of the Boston Blogging group that &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt; used to organize.  About the same time I also met &lt;a href=&quot;https://en.wikipedia.org/wiki/Dan_Bricklin&quot;&gt;Dan Bricklin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to make a suggestion to you.  I've been subscribed to you in my aggregator for a long time but due to the design of aggregators, it isn't clear if a post in the aggregator is full content or summary.  Here's all I saw of your current (wonderful) &lt;a href=&quot;http://rmf.vc/IEEECE202001&quot;&gt;CES post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CES is a time to see new products and services. Alas, my expectations might be too high.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here is how this appears in an aggregator:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/frankston_aggregator.png&quot; alt=&quot;frankston_aggregator.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I thought this was just a lament but I happened to click through and lo and below, a &lt;strong&gt;wonderful&lt;/strong&gt; bit of writing.&lt;/p&gt;

&lt;p&gt;So my suggestion to you is to change your blogging tool to output the &lt;em&gt;full content&lt;/em&gt; of each post you write.  I'm pretty certain you wrote your own blogging tool and, thus, I know this is possible; you obviously have the skills (and if that isn't the greatest understatement I've made blogging, I don't know what is).&lt;/p&gt;

&lt;p&gt;My suspicion is that for &lt;strong&gt;yourself&lt;/strong&gt; it is more important that you get your ideas out into the universe than that you drive people to &lt;strong&gt;your&lt;/strong&gt; site.  This is the single best reason for a full content feed.  Every time you have to rely on someone clicking thru from their aggregator to your site, there is a solid chance (1 in 2; 1 in 3; 1 in 5; 1 in 10 ???) that they just won't).  Often times they don't ever know that there is more content out there; I certainly didn't and I've been in the RSS world now for almost 20 years and I have pretty solid credentials in the RSS world – I was the creator of the Feedster RSS and Blog search engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My own &lt;a href=&quot;https://fuzzyblog.io/blog/&quot;&gt;blog&lt;/a&gt; and my &lt;a href=&quot;https://fuzzyblog.io/recipes/&quot;&gt;recipes&lt;/a&gt; are all done with full content feeds so I'm not askign you to do anything that I'm not doing.  Also full content feeds aren't really any harder than a summary feed - just put out the full content.  Feel free to use &lt;a href=&quot;https://fuzzyblog.io/blog/feed.xml&quot;&gt;my feed&lt;/a&gt; as an example.  Even better – use &lt;a href=&quot;http://scripting.com/rss.xml&quot;&gt;Dave's&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Btw I loved this point: &quot;I mount the devices as soft infrastructure using 3M Command Strips which means I can take it off the wall and use it as a flashlight.&quot;.  Damn brilliant and I've started doing this with devices.  Thank you.&lt;/p&gt;

&lt;p&gt;And thank you for all the wonderful work you've done over the years. I started with VisiCalc way, way back in the 80s.&lt;/p&gt;

&lt;p&gt;Scott&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rss/2020/01/07/an-open-letter-to-bob-frankston.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rss/2020/01/07/an-open-letter-to-bob-frankston.html</guid>
        
        <category>rss</category>
        
        <category>blogging</category>
        
        
        <category>rss</category>
        
      </item>
    
      <item>
        <title>Python Tips - Playing with Pandas</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6444.jpeg&quot; alt=&quot;IMG_6444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I write this it is 3:45 am and I am playing with Python.  I have a small script that looks like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DATA_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;data/&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;file.json&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATA_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;dataset_head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The pandas library give you a bunch of facilities for looking at data and organizing it into what are called data frames.  If you think of pandas as a spreadsheet that you can use programmatically, well, that's not far off.  Pandas is widely used for Python data processing and can read data from CSV and JSON formats (among others).&lt;/p&gt;

&lt;p&gt;If I want to investigate the length of a variable, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) len(dataset)
45648
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if I want to know the type of a variable, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type(dataset)
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if I want to know the columns that Pandas as loaded from the json, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; dataset.columns
Index(['tweet_id', 'timestamp_us_eastern', 'author_handle',
       'author_screenname', 'authority', 'predicted_gender',
       'predicted_language', 'predicted_country',
       'predicted_state_or_province', 'predicted_city', 'given_location',
       'followers', 'following', 'predicted_sentiment', 'context_notes',
       'antisemitic_classification', 'author_bio', 'text', 'is_truncated',
       'is_retweet', 'lang', 'Majority Model', 'label'],
      dtype='object')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this tells me is that I have a dataset variable with a text column that I can access by dataset.text.  And then if I want the first 'row' of data in this column, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) dataset.text[0]
&quot;Jerry Seinfeld spent a lot of time in Israel's apartheid State supporting the Zionists and giving the bastards credibility. Think its fair to shun his crappy unfunny TV Shows. Let him know what people think of him brown nosing the terrorists of Israel.\n&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So [0] gives the first bit of data.  And, correspondingly, [1] gives the next bit:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) dataset.text[1]
'RT @papicek: @BrncicIvo @fouadhaidar @MehDonaldTrump @AlyseRadenovicA @Sean_x_Larkin @Wandaspangler2 @z123Alpha @Mark_E_Noonan @pouria_63 @KirstyMartin19 @rico_hands @pickle_shmickle @_antizionism @MrBacteriaThief @AltRightJoseph @muld_ulme @kenmckelvey224 @kratze1935 @ExpertZionist @WorldneedsL0VE @amerikagulag @Loo_Siffa @Aristilus @gazaboatconvoy Zionists came up with jut about every form of terrorism you can think of: https://t.co/qvmuMpVWHQ https://t.co/EUg4EviJAe\n'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now that we know this, if we wanted to loop over all the bits of data in dataset.text, a simple Python for loop would do this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's say that you have a variable wordfreq and you want to look at the string version of a variable, you can do this with the &lt;strong&gt;str&lt;/strong&gt; function:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; str(wordfreq)
'[12, 1, 1, 1, 1, 10, 1, 1, 1, 10, 1, 3, 1, 2, 1, 1, 3, 1, 12, 1]'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 06 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/01/06/python-tips-playing-with-pandas.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/01/06/python-tips-playing-with-pandas.html</guid>
        
        <category>python</category>
        
        <category>pandas</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Pundit and Group By Operations - DOH</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6430.jpeg&quot; alt=&quot;IMG_6430.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of working out security for a new side project (yes, yes, yes - I know; I have too many of these but they are such a good teaching tool for one's self) and I wanted to use &lt;a href=&quot;https://github.com/varvet/pundit&quot;&gt;pundit&lt;/a&gt;.  Pundit, for those who haven't played with it, is a Ruby gem which makes authorization at the controller level easier.&lt;/p&gt;

&lt;h2 id=&quot;authorization-authentication-oh-my&quot;&gt;Authorization, Authentication, Oh My&lt;/h2&gt;

&lt;p&gt;Just to review the very basics of computer security, there are two key concepts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication is who you are to a system&lt;/li&gt;
  &lt;li&gt;Authorization is what you can do to an object within that system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the Rails world of MVC (model, view, controller) architecture, security happens at the controller because that is where the request from the user comes in.&lt;/p&gt;

&lt;p&gt;The way that pundit works is you add a top level directory under app called policies and then there is a generic application_policy.rb as well as a classname_policy.rb file for each ActiveRecord class (change classname to the name of an actual class) in your application.  And, inside each classname_policy.rb file you define permission rules for each controller action.  In short Pundit is a well thought out, fairly seamless way to integrate security in your Rails application.  I like Pundit for more than I ever liked &lt;a href=&quot;https://github.com/ryanb/cancan&quot;&gt;CanCan&lt;/a&gt;, another tool for this same type of problem.&lt;/p&gt;

&lt;h2 id=&quot;my-application&quot;&gt;My Application&lt;/h2&gt;

&lt;p&gt;Here is the rough security rules that I wanted to follow (comments from the Pundit policy model):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-created-it&quot;&gt;yes you can view the object if YOU created it&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-belong-to-the-organizationgroup&quot;&gt;yes you can view the object if you belong to the organization_group&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-belong-to-the-organization-and-you-are-a-boss&quot;&gt;yes you can view the object if you belong to the organization and you are a boss&lt;/h1&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So when I started down this path, I immediately started getting a Pundit error that I've never seen before and that I didn't understand:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pundit::NotDefinedError: unable to find policy `HashPolicy` for `{}`    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this error sent me through the normal spiral of google results only to find relatively few results.  This &lt;a href=&quot;https://github.com/ankane/groupdate/issues/94&quot;&gt;one&lt;/a&gt;, which I didn't read well, however, was prescient.  And I continued down the path of debugging this at a lower and lower level until I found myself dropping byebug into Pundit itself in this method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;policy&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;safe_constantize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And what I found was that the &quot;object&quot; that Pundit had was just {} which made no sense to me.  And then I looked at my controller and saw what I was doing:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'quarter_id ASC, name ASC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quarter_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What I discovered, as I continued to debug this is that I had a failure in my test setup and that, with the .group_by method which converts an ActiveRecord collection into a hash which points to an ActiveRecord collection meant that all Pundit was getting was nothing more than {} which, naturally, led to the failure above.&lt;/p&gt;

&lt;p&gt;The solution was to initially fix my test setup (damn RSpec let statements; how they hell do they actually work; sigh) and then change my controller action to be this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'quarter_id ASC, name ASC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quarter_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that, naturally, is almost identical to what Ankane had (the prescient github post I cited earlier; big damn sigh).&lt;/p&gt;

&lt;p&gt;Note to Self: Pay more attention to Ankane; something I already know.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/05/pundit-and-group-by-operations-doh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/05/pundit-and-group-by-operations-doh.html</guid>
        
        <category>rails</category>
        
        <category>pundit</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Startup Coach 01 The Opportunity Profile</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6593.jpeg&quot; alt=&quot;IMG_6593.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is the first blog post in what I hope becomes a series that I'm calling &quot;Startup Coach&quot;.  I have a friend who wants their own business and I offered to write a blog post a week along the veins of how to do a startup.  Each week I plan to take a single topic and discuss it .  If you'd like to suggest a topic then my email address is fuzzygroup at gmail and I'd be happy to slot something into the queue.&lt;/p&gt;

&lt;p&gt;Today's topic is what I refer to as the Opportunity Profile.  This is a single document that I write at the very beginning of anything that even smells of being entrepreneurial.  The idea behind the opportunity profile is to document the opportunity – in as much detail as you can at the moment of the initial idea.  Everyone's opportunity project is always going to be a little bit different depending on how you conceptualize an opportunity.  My personal opportunity profiles tend to be heavy on product focus and less focused on business side issues simply because that's how I roll.  If you, for example, were strong on the business side then your opportunity profile might sketch out the entire business model and then have a place holder called &quot;Product Goes Here&quot;.&lt;/p&gt;

&lt;p&gt;Here are the topics that I usually put in an opportunity profile:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Overview&lt;/li&gt;
  &lt;li&gt;Tag Lines&lt;/li&gt;
  &lt;li&gt;Business Model&lt;/li&gt;
  &lt;li&gt;Product Overview&lt;/li&gt;
  &lt;li&gt;Competition&lt;/li&gt;
  &lt;li&gt;Development Approach (how I would tackle development)&lt;/li&gt;
  &lt;li&gt;Marketing&lt;/li&gt;
  &lt;li&gt;Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This document might be nothing more than a set of bullet points.  It might be fleshed out.  The important thing is to capture that initial &lt;strong&gt;ideation moment&lt;/strong&gt; when the problem you're trying to solve is crystal clear and you have that rush of &lt;em&gt;intellectual adrenaline&lt;/em&gt;.  And I would note the last sentence doesn't resonate for you, perhaps, you're not cut out for founding a startup.  And, yes, that's harsh and I apologize but I'm a pretty big believer that you are either a startup person or you aren't.&lt;/p&gt;

&lt;p&gt;The way that I recommend writing these, in 2019, is as a Google Doc.  The reason for this is that one of the very best actions you can take with an opportunity profile is to share the link to it to your friends and family and get other people's opinion.  And that brings us to the next topic.&lt;/p&gt;

&lt;h2 id=&quot;but-my-idea-is-unique&quot;&gt;But My Idea is Unique&lt;/h2&gt;

&lt;p&gt;I know that sharing ideas is often hard for entrepreneurs but here's the brutal truth about startup ideas at this stage: &lt;strong&gt;They Really Aren't Worth Anything at All&lt;/strong&gt;.  Now, I get it, that's hard for people to hear – everyone wants to think their idea is brilliant and special but, honestly, it likely isn't.  Most ideas are already out there in one form or another and what actually matters is &lt;strong&gt;idea execution&lt;/strong&gt;.  We all want to believe that the first person in a market succeeds but that's actually rarely, if ever, the case.  And let me back that up with two examples of late market entrants that executed better and succeeded:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Yahoo was not the first web search engine; Web Crawler was and yet Yahoo executed better and succeeded for a lot of years until&lt;/li&gt;
  &lt;li&gt;Google came in an executed better (by recognizing that search was important and making a better mouse trap)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;but-there-are-great-ideas-&quot;&gt;But There Are Great Ideas …&lt;/h2&gt;

&lt;p&gt;I will admit that, on very, very rare occasions, there are great ideas that are simply stunning in their brilliance and the &lt;strong&gt;one&lt;/strong&gt; example that I can point to is HotMail (the generic idea of web based email).  HotMail was uniquely brilliant and a fantastic idea.  If I had had that idea, yeah, I likely would have been pretty careful about it.  But, and this is important, web based email &lt;strong&gt;NOW&lt;/strong&gt; makes a metric ton of sense – would it back in 1995 when the definition of a web browser was so much more limited?  I think that this is an important point to consider.&lt;/p&gt;

&lt;h2 id=&quot;so-you-wrote-a-google-doc---what-now&quot;&gt;So You Wrote a Google Doc - What Now?&lt;/h2&gt;

&lt;p&gt;My best advice to you is turn on Sharing in your google doc and then email it out to whatever your close circle of friends and family and say to them &quot;I had this idea; can you poke holes in it for me?&quot;.  I did this recently with an idea I had (the Cat example below) and I got feedback in like 24 hours that deflated the concept entirely (and it was a bad idea for me to pursue; I lacked the right attributes for the opportunity but that's the topic of next week's post).&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Here are two opportunity profiles that were near the top of my Google Drive:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PhwX4M6G6qFgwC8BLJGjoJy9AT52m9qVlwkI6PFQJOs/edit?usp=sharing&quot;&gt;Cat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/12LP2X2WiviMmz7kqB5qgJpRtuqD5NnrurmhOMJ3AHzc/edit?usp=sharing&quot;&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html</guid>
        
        <category>startup</category>
        
        <category>startup_coach</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>When Jupyter Notebooks Won't Import Libraries</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9429.jpeg&quot; alt=&quot;IMG_9429.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't claim to be an expert when it comes to Python.  At best I'm an apprentice striving to be a journey man.  One of the interesting tools in the Python / Data Science ecosystem is the Jupyter Notebook which gives a cell based representation of code, visualizations, documentation and execution flow and allows you to package things up for distribution i.e. hand your work, in a complete fashion, from say Data Scientist 1 (&quot;Rebekah&quot;) to Data Scientist 2 (&quot;Dawn&quot;).  This is a laudable goal and one that I theoretically agree with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Jupyter Notebooks do NOT include data so that's still external to the notebook, something that can easily bite you (as it is currently biting me).&lt;/p&gt;

&lt;p&gt;I know a lot of pythonistas simply install libraries to their local machine and just have a collection of tools that the throw at problems.  This, however, is a terrible practice due to code deprecation, version conflicts, etc.  I say this with authority because I've been through this in the Ruby world before we all regularly started using Ruby virtual environments / Ruby version managers like RBENV / RVM which manage dependencies on a per project basis.  Knowing this, my first practice with Python, is to always create a virtual environment, generally using Virtual ENV (VENV).&lt;/p&gt;

&lt;p&gt;So, when I set out today to use a Jupyter Notebook, my first approach was to make this work with a Jupyter Notebook.  And, alas, I haven't been so lucky as to make this work cleanly with a Python virtual environment like VENV.  Here are some of the things I tried:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Installing jupyter into the virtual env and running from bin/jupyter notebook&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://anbasile.github.io/programming/2017/06/25/jupyter-venv/&quot;&gt;Following Angelo Basille's Directions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://janakiev.com/blog/jupyter-virtual-envs/&quot;&gt;Following Janakiev's Directions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44586234/how-to-change-kernel-when-jupyter-notebook-shows-only-one-python?rq=1&quot;&gt;Changing the Kernel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're curious about how to use Python Virtual Environments, I wrote a &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html&quot;&gt;solid tutorial back in September&lt;/a&gt; that I used to get a full installation of Tensor Flow up and running.  I've referred back to this over and over, each time I needed a Python Virtual Environment, so I know it works.&lt;/p&gt;

&lt;p&gt;I'm sure there is a way to mess about with virtual environments and Jupyter Notebooks to make them work but, honestly, I'm skeptical on notebooks and how they obfuscate code and data together anyway so I thought &quot;How do I just make this a Python script&quot;.  I took this approach because I was absolutely certain that I could make a virtual environment work with just Python.  And, thanks to my pairing partner, Grant, there is, indeed, a way.&lt;/p&gt;

&lt;h2 id=&quot;making-a-jupyter-notebook-into-a-python-script-with-a-virtual-env&quot;&gt;Making a Jupyter Notebook into a Python Script with a Virtual Env&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Follow the instructions &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html&quot;&gt;here&lt;/a&gt; to setup VENV for a new project in a new directory.&lt;/li&gt;
  &lt;li&gt;Use File menu, Export as Python to write a single Python script representing the notebook.&lt;/li&gt;
  &lt;li&gt;Create a requirements.txt file as per the instructions &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go through the Python code that was exported and convert the import / from instructions to the right &lt;a href=&quot;http://packages.pypy.org/&quot;&gt;PyPy package index&lt;/a&gt; name entry in the requirements.txt file.  Be aware that there isn't a straight correspondence between the import statements and the package names.  For example you import from &quot;metal&quot; in the notebook I'm porting but the package name is actually &quot;snorkel-metal&quot; and you import from sklearn but the package name is actually scikit-learn.  Python's there's only one way to do this mantra, in the area of package management, is just plain crap.  Sigh.&lt;/li&gt;
  &lt;li&gt;Run pip3 install -r requirements.txt&lt;/li&gt;
  &lt;li&gt;Run your python script and then adjust the requirements.txt file accordingly.  You will almost certainly need to change some things but, by and large, I'm finding that this process does work.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/01/03/when-jupyter-notebooks-won-t-import-libraries.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/01/03/when-jupyter-notebooks-won-t-import-libraries.html</guid>
        
        <category>python</category>
        
        <category>jupyter</category>
        
        <category>data_science</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Ruby Testing Technique - The Power and Stupidity of def foo</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0736.jpeg&quot; alt=&quot;IMG_0736.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had an abysmal day yesterday coding on my side project.  Ok – coding on one of my side projects.  I had one of those days where you try to do something simple and NOTHING, NOT ONE DAMN THING, WORKS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Every software engineer knows this type of day.  They aren't days that you talk about with anyone in your life because you spend hours failing at something that you know is so damn simple that, if you can't make it work, you should honestly give up software engineering and go cut grass for a living.  I refer to these days, when I have them, as spirit crushers / brain emasculators. And when they occur, I find that a nap (or a snickers bar) is the best medicine.&lt;/p&gt;

&lt;p&gt;All I was trying to do was make a simple factory work.  For those who aren't deeply immersed in the world of software testing in ruby, a factory is a software method which creates a sample object that represents the actual object so it can be tested.  Factories are used in place of actual objects, generally, because they run faster.&lt;/p&gt;

&lt;p&gt;Here was the definition of the factory:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objective&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Faker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organization&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objective_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;okr_team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quarter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All this means is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an object named objective&lt;/li&gt;
  &lt;li&gt;Give it a name attribute that is pulled from a library called Faker using the first_name method&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the user object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the organization object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the objective_type object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the okr_team object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the quarter object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although this might seem complex, it is actually drop dead simple and something that I've probably done hundreds if not thousands of times.  And yet, yesterday, all I could get was some variant on this &lt;em&gt;censored&lt;/em&gt; backtrace:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ActiveRecord::RecordInvalid:
  Validation failed: Organization must exist, User can't be blank, Organization can't be blank
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:91:in `persist'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:25:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:82:in `block in fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `instance_eval'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabricate.rb:33:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication.rb:65:in `Fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:120:in `block in generate_value'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:41:in `instance_exec'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:41:in `execute'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:29:in `processed_value'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:97:in `block in process_attributes'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:96:in `each'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:96:in `process_attributes'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:6:in `build'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:20:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:82:in `block in fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `instance_eval'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabricate.rb:33:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication.rb:65:in `Fabricate'
# ./spec/controllers/objectives_controller_spec.rb:20:in `block (4 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I blew I don't know how much time on this in the early morning hours.  This is one of the problems with solo side projects – you don't have anyone you can ask when you hit a blocker like this.  Finally, around 6 am, I threw my hands up, muttered a few choice words and then went back to bed.&lt;/p&gt;

&lt;p&gt;And now, 24 hours later, I find myself having solved this and it is through, what I will always remember as &quot;The Power of Foo&quot;.  Here is what I did:&lt;/p&gt;

&lt;h2 id=&quot;step-1-implement-class-and-instance-methods-called-foo-on-user&quot;&gt;Step 1: Implement class and instance methods called foo on User&lt;/h2&gt;

&lt;p&gt;Like a lot of classes in a Rails project that exist to simply support the database, I didn't actually have any methods in my User class.  Now, I would assume that this means that my class was was fine – but what if it wasn't?  So I thought to myself – what if the problem is something that I'm just not seeing?  And so I started to add a &lt;strong&gt;stupid&lt;/strong&gt; method called foo to my user class both at the class level and the instance level:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gave me something that I could test:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return FOO'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You will notice that my output between the two methods is different - 'bar' versus 'BAR' which I did deliberately to ensure that I'm not inadvertently calling a class method versus an instance method or vice versa.  And, happily, this worked perfectly.  Now, let's bring back our Factory definition for user:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objective&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Faker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organization&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objective_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;okr_team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quarter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My next step was to implement this same approach on organization.  And then on objective_type.  And then on okr_team – and that's where I hit a problem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rspec spec/models/okr_team_spec.rb

Randomized with seed 33038

OkrTeam
  .foo
    should return FOO
  #foo
    should return foo (FAILED - 1)

Failures:

  1) OkrTeam#foo should return foo
     Failure/Error: subject = FactoryBot.create(:okr_team)

     NoMethodError:
       undefined method `user=' for #&amp;lt;OkrTeam:0x00007ff431cfca88&amp;gt;
       Did you mean?  user_id=
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:16:in `public_send'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:16:in `block (2 levels) in object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:15:in `each'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:15:in `block in object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:14:in `tap'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:14:in `object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/evaluation.rb:13:in `object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/strategy/create.rb:9:in `result'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory.rb:43:in `run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory_runner.rb:29:in `block in run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory_runner.rb:28:in `run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/strategy_syntax_method_registrar.rb:20:in `block in define_singular_strategy_method'
     # ./spec/models/okr_team_spec.rb:25:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

Top 2 slowest examples (0.4025 seconds, 98.4% of total time):
  OkrTeam#foo should return foo
    0.3979 seconds ./spec/models/okr_team_spec.rb:24
  OkrTeam.foo should return FOO
    0.0046 seconds ./spec/models/okr_team_spec.rb:31

Finished in 0.40894 seconds (files took 3.55 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/models/okr_team_spec.rb:24 # OkrTeam#foo should return foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In my okr_team model, I discovered that I was missing a &lt;strong&gt;belongs_to&lt;/strong&gt; relationship, specifically a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;belongs_to :user
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that, dear reader, was sufficient to bring my whole house of software cards crashing to a pile.  I was actually fairly surprised by this; it was a dependency failure that I hadn't seen before.  My missing relationship was a consequence of my very productive &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html&quot;&gt;Example Data&lt;/a&gt; approach to building this side project.&lt;/p&gt;

&lt;h2 id=&quot;the-moral-of-the-story&quot;&gt;The Moral of the Story&lt;/h2&gt;

&lt;p&gt;I think that from now on I'm always going to implement a useless method called def foo and def self.foo to prove that a class works – even if it has &quot;no code&quot; – as even &lt;strong&gt;no code&lt;/strong&gt; can, curiously, have bugs.  So the real moral of the story is &lt;strong&gt;TEST EVERYTHING&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>testing</category>
        
        <category>rspec</category>
        
        
        <category>rspec</category>
        
      </item>
    
      <item>
        <title>In Celebration of Event Organizers - Happy Birthday Kevin Werbach</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9458.jpeg&quot; alt=&quot;IMG_9458.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Taken November 20, 2019 which is significant only because that is my birthday&lt;/p&gt;

&lt;p&gt;I'm writing this blog post because my Facebook feed just flashed by at me &quot;Today is &lt;strong&gt;Kevin Werbach's&lt;/strong&gt; Birthday&quot; and that made me &lt;em&gt;remember&lt;/em&gt;.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Kevin_Werbach&quot;&gt;Kevin Werbach&lt;/a&gt; is a technology analyst and professor at the Wharton School and someone who is far more important to my life than I ever was to him.  This blog post is a tribute to him because he, through a random act of kindness, had a pretty big impact on my life (and I bet he has never realized this; nor should he).&lt;/p&gt;

&lt;p&gt;Back in 2003, I had created the RSS search engine Feedster and had just merged it with RSS-Search which was created by Francois Schiettecatte and he and I, as two nerds do, were trying to figure out &quot;what the hell do we do with this; we have a product and traffic but no business strategy and an ever increasing hosting bill on Scott's credit card that we keep rolling forward each month&quot;.  I saw that Kevin had setup the SuperNova conference and I reached out to him and said &quot;I'd love to come but I just can't afford it; help&quot; and Kevin, with absolute graciousness, gave me a free ticket.&lt;/p&gt;

&lt;p&gt;I made it down to the DC area for the conference, networked unsuccessfully for a day or two and ended up getting a cab to the airport with Scott Rafer, henceforth referred to as Rafer since I am also a Scott.  A chance thunderstorm stranded Rafer and I at the airport for like 7 hours and during that time I got to know him well enough to ask him to be on our advisory board.  And, shortly there after, I hired Rafer as Feedster's first CEO.  And that hiring led to a whole chain of events detailed below.&lt;/p&gt;

&lt;p&gt;So here's the chain of events that Kevin started which, interestingly, lead right up to today:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Kevin gave me a ticket to SuperNova when I couldn't afford one.&lt;/li&gt;
  &lt;li&gt;A random meeting led to a colleague and then a CEO.&lt;/li&gt;
  &lt;li&gt;Rafer led Feedster's legal formation, office space, hiring and funding efforts.  He made a pile of code into a business.&lt;/li&gt;
  &lt;li&gt;We ended up employing a (small) bunch of people and being in business for 3 years.&lt;/li&gt;
  &lt;li&gt;Because of Rafer, I ended up having a much larger presence in Silicon Valley than I should have given that I lived in Boston.&lt;/li&gt;
  &lt;li&gt;Thanks to my Silicon Valley connections, I got to know a large number of interesting people including Dave Sifry (who at that time was the founder of my biggest competitor, Technorati).&lt;/li&gt;
  &lt;li&gt;My work at Feedster led to my getting hired at eduFire which took me into the world of Ruby and Rails and cloud computing.&lt;/li&gt;
  &lt;li&gt;I'm still working off a lot of connections I made back in 2003 to 2006.  This includes my current role leading measurement of hate speech for the ADL where I was hired by Dave Sifry (this is now the third time I've taken a role reporting to Dave Sifry).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'd like to pretend that Feedster would have been successful if I hadn't met Rafer but we very much needed capital and meeting Rafer was a strategic inflection point for me.  And that wouldn't have happened without Kevin so &lt;strong&gt;Happy Birthday Kevin&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;And so, in closing, if you are an event organizer, taking a chance on the proverbial little guy sometimes has profound implications for them.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/03/in-celebration-of-event-organizers-happy-birthday-kevin-werbach.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/03/in-celebration-of-event-organizers-happy-birthday-kevin-werbach.html</guid>
        
        <category>startup</category>
        
        <category>events</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Jumpstart Rails Tutorial 01 - Bringing an Existing Codebase In</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0902.jpeg&quot; alt=&quot;IMG_0902.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updated&lt;/strong&gt;: 5/5/2020&lt;/p&gt;

&lt;p&gt;It is the second day of the New Year – welcome to 2020 – and I have still failed to launch my side project that I started midway through 2019.  Sigh.  I find myself fundamentally regretting this but, well, life:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Job&lt;/li&gt;
  &lt;li&gt;Wife in Hospital&lt;/li&gt;
  &lt;li&gt;Son and Schooling Issues&lt;/li&gt;
  &lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my New Year's Resolution(s) is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch by end of Q1, 2020&lt;/li&gt;
  &lt;li&gt;Not have deployment eat my brain&lt;/li&gt;
  &lt;li&gt;Launch with Something that I'm Visually Proud Of&lt;/li&gt;
  &lt;li&gt;Launch with SAAS billing features from day 1 and Get paying Customers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That last item, SAAS billing features, is a sticky point.  I've actually implemented this myself before – I wrote all the back end code for the AppData SAAS engine which successfully processed over 3.1 million dollars in revenue over a 5 year period (BrainTree api).  And I really, really, really don't want to rewrite that.  Nor do I want to use a third party service and lose another percentage chunk over baseline Stripe fees.&lt;/p&gt;

&lt;p&gt;And all of this means that I need to use the &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Rails&lt;/a&gt; application framework.  I already have a license for it anyway and the issue is that I need to port an existing, almost complete Rails app into it.  All of the blog posts starting with Jumpstart Rails Tutorial nn will cover this process.  While there is &lt;a href=&quot;https://jumpstartrails.com/docs/&quot;&gt;good documentation for Jumpstart Rails&lt;/a&gt;, it is reference material rather than how to material.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If anything I write during this series comes off as critical of Chris Oliver, the man behind Jumpstart Rails, it isn't.  I am an unabashed fan of the &lt;strong&gt;damn fine&lt;/strong&gt; work that Chris Oliver does.&lt;/p&gt;

&lt;h2 id=&quot;step-1---getting-started-with-jumpstart-rails---clone-the-repo&quot;&gt;Step 1 - Getting Started with Jumpstart Rails - Clone the Repo&lt;/h2&gt;

&lt;p&gt;The first step is to purchase an actual license for Jumpstart Rails. This will get you added onto the Jumpstart Rails git repo:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://gitlab.com/gorails/jumpstart-pro
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What you need to do is begin by cloning this repo down to your local system:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@gitlab.com:gorails/jumpstart-pro.git web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You notice that I changed the name of this to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I changed it since my previous repo name was web_change_me_now and this is going to be the second version of it.&lt;/p&gt;

&lt;h2 id=&quot;step-2---run-yarn-install&quot;&gt;Step 2 - Run Yarn Install&lt;/h2&gt;

&lt;p&gt;Change into the directory that you just cloned the repo into and:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd web_change_me_now2
yarn install --check-files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-3---update-databaseyml&quot;&gt;Step 3 - Update database.yml&lt;/h2&gt;

&lt;p&gt;The file config/database.yml needs to be updated to reflect the name of your new application's database.  This means changing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;jumpstart_development&lt;/li&gt;
  &lt;li&gt;jumpstart_test&lt;/li&gt;
  &lt;li&gt;jumpstart_production&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-4---add-your-local-version-to-github&quot;&gt;Step 4 - Add Your Local Version to Github&lt;/h2&gt;

&lt;p&gt;I then went to github (I'm a staunch github user instead of gitlib) and created a new repo named:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then needed to add this as an origin:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add web_change_me_now2 git@github.com:fuzzygroup/web_change_me_now2.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My next step is to push.  Now I need to be careful here since I can't push back to the gitlab remote since I don't have permissions for that (and any changes I make are to &lt;strong&gt;my application&lt;/strong&gt; not the template).  Here's the push syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* make some silly ass change; I messed about with README.md */
git add .
git commit -m &quot;readme change&quot;
git push web_change_me_now2 master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I don't use remotes all that much – and I suspect outside of Heroku, you don't either – so here's the syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push ORIGIN_NAME BRANCH_NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So if I want to push my changes, I need to do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push web_change_me_now2 master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You may want to reverse the order of Steps 5 and 4 (i.e. create a local develop branch first and then push to that) .  After that you can change into master, merge develop and then push to master.  Overall that seems to work better but I'm still confirming this which is why I haven't fully rewritten this blog post.&lt;/p&gt;

&lt;h2 id=&quot;step-5---getting-a-develop-branch-in-place&quot;&gt;Step 5 - Getting a develop Branch in Place&lt;/h2&gt;

&lt;p&gt;I'm a firm believer in a simple, branch based approach to git.  I've talked about this before and, specifically:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Always work in a branch tied to an issue number.&lt;/li&gt;
  &lt;li&gt;Issue branches are merged into develop.&lt;/li&gt;
  &lt;li&gt;Develop is merged into master.&lt;/li&gt;
  &lt;li&gt;Master is then deployed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is simple, straight forward and clean.  I've now worked on teams up to 10 people in size and in Rails code bases of several hundred thousand lines using this with nary a hitch so it is an excellent model for small startups.&lt;/p&gt;

&lt;p&gt;This needs to be done in your terminal and then in Github itself:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In your terminal, create a branch named develop with: &lt;strong&gt;git branch develop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;In your terminal, change into that branch with: &lt;strong&gt;git co develop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Again update the README.md so you have something to push.&lt;/li&gt;
  &lt;li&gt;Add with: &lt;strong&gt;git add .&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Commit with: &lt;strong&gt;git commit -m &quot;readme change&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Push with: git push web_change_me_now2 develop&lt;/li&gt;
  &lt;li&gt;Go into github and pull up your repository.&lt;/li&gt;
  &lt;li&gt;Go into the settings link.  Mine is here: https://github.com/gochangeme/web_change_me_now2/settings&lt;/li&gt;
  &lt;li&gt;Go into the Branches link.  Mine is here: https://github.com/gochangeme/web_change_me_now3/settings/branches&lt;/li&gt;
  &lt;li&gt;You will see the default branch is set to master.  Use the drop down to pick develop and then click the update button.&lt;/li&gt;
  &lt;li&gt;Click the I understand … button.&lt;/li&gt;
  &lt;li&gt;Submit the pull request (you may need to change things a bit with the drop down due to changing the default).&lt;/li&gt;
  &lt;li&gt;Click the merge button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point you are now set for development using the model above.  The next blog post along these lines will focus on taking an initial model and controller and start to develop a porting process.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/02/jumpstart-rails-tutorial-01-bringing-an-existing-codebase-in.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/02/jumpstart-rails-tutorial-01-bringing-an-existing-codebase-in.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Making the Trix Editor Resizable</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0935.jpeg&quot; alt=&quot;IMG_0935.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is interesting that my first post of 2020 is actually a CSS trick.  That's quite an evolution in my web development practices from 2019.  Here is a CSS addition that limits the max height of your trix editor window and makes it resizable:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.trix-content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;800px&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;#set&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;want&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow-y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;trix-editor-resources&quot;&gt;Trix Editor Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://trix-editor.org/&quot;&gt;https://trix-editor.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gorails.com/episodes/trix-editor&quot;&gt;Go Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://headway.io/blog/how-to-use-trix-and-shrine-for-wysiwyg-editing-with-drag-and-drop-image-uploading/&quot;&gt;Headway on Trix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/basecamp/trix&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 01 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/trix/2020/01/01/making-the-trix-editor-resizable.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/trix/2020/01/01/making-the-trix-editor-resizable.html</guid>
        
        <category>css</category>
        
        <category>trix</category>
        
        
        <category>trix</category>
        
      </item>
    
      <item>
        <title>Updating to the Latest Version of JumpStart Pro</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0939.jpeg&quot; alt=&quot;IMG_0939.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I've been using JumpStart Pro to  build a new side project and in a discussion with Chris Oliver, the creator of JumpStart Pro, I reported a bug which he said &quot;Oh - you should update to the latest&quot;.  He viewed the update process as something seamless and I, honestly, didn't get it.  And, in researching this, I discovered that I made a fatal mistake.  The rest of this blog post covers that mistake and explains how you update JumpStart Pro.  Here's the tldr (too long; did not read):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ALWAYS, ALWAYS, ALWAYS create a new app based on JumpStart Pro by cloning it from the GitLab source i.e. you start with: &quot;git clone git@gitlab.com:gorails/jumpstart-pro.git YOUR_PROJECT_NAME&quot;&lt;/li&gt;
  &lt;li&gt;Go to github and create a repo for YOUR_PROJECT_NAME&lt;/li&gt;
  &lt;li&gt;Copy the github clone info and add it as a separate remote: git remote add YOUR_PROJECT_NAME git@github.com:YOUR_GITHUB_USERNAME/YOUR_PROJECT_NAME.git&lt;/li&gt;
  &lt;li&gt;Make a change like updating the README.md and do the add / commit dance and push to your repo as  git push YOUR_PROJECT_NAME master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though I've worked with Git for more than a decade now, I've previously only worked with Heroku as a git remote so I missed the implications of this when I originally cloned my first JumpStart Pro app.  Sigh.&lt;/p&gt;

&lt;p&gt;The critical mistake I made was that I had started my second JumpStart Pro project by copying from the first JumpStart Pro project I had made and the NOT moving over the .git folder.  This meant that my new project was now disconnected from the original remote so I couldn't just do a git pull to update it.&lt;/p&gt;

&lt;h2 id=&quot;fixing-my-own-stupidity&quot;&gt;Fixing My Own Stupidity&lt;/h2&gt;

&lt;p&gt;Here's what I did to fix this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I started by creating a new application cloning into a new location: git clone git@gitlab.com:gorails/jumpstart-pro.git okrsnow&lt;/li&gt;
  &lt;li&gt;I created a new git repo for my app&lt;/li&gt;
  &lt;li&gt;I added the new repo with: git remote add okrsnow git@github.com:fuzzygroup/okrsnow.git&lt;/li&gt;
  &lt;li&gt;I made a change and pushed to git push okrsnow master&lt;/li&gt;
  &lt;li&gt;I manually copied over all the code from my original JumpStart pro repo.  Given that Rails apps have such a clearly defined directory structure, this was tedious but not insurmountable.&lt;/li&gt;
  &lt;li&gt;I had to adapt my normal development practices so that I remember to always use the remote when workign with branches.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;oh-and-about-that-bug&quot;&gt;Oh and About that Bug&lt;/h2&gt;

&lt;p&gt;I noticed that Chris fixed it within a few hours of my reporting it.  Thanks Chris!&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/12/29/updating-to-the-lastest-version-of-jumpstart-pro.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/12/29/updating-to-the-lastest-version-of-jumpstart-pro.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Heroku and Route 53 - Using Amazon for Domain Registration with Heroku for Hosting</title>
        <description>&lt;p&gt;https://devcenter.heroku.com/articles/route-53&lt;/p&gt;

&lt;p&gt;https://devcenter.heroku.com/articles/route-53&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2 took 5m33s
❯ heroku domains:add okrsnow.com
Adding okrsnow.com to ⬢ okrsnow… done
Configure your app's DNS provider to point to the DNS Target thawing-coral-9zbepdxpaa0ondgs6ubrpre7.herokudns.com.
For help, see https://devcenter.heroku.com/articles/custom-domains&lt;/p&gt;

&lt;p&gt;The domain okrsnow.com has been enqueued for addition
Run heroku domains:wait 'okrsnow.com' to wait for completion&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2 took 2s
❯ heroku domains:add www.okrsnow.com
Adding www.okrsnow.com to ⬢ okrsnow… done
Configure your app's DNS provider to point to the DNS Target quiet-cephalopod-d3uo5fkp1t6x7dnqtpyc1jue.herokudns.com.
For help, see https://devcenter.heroku.com/articles/custom-domains&lt;/p&gt;

&lt;p&gt;The domain www.okrsnow.com has been enqueued for addition
Run heroku domains:wait 'www.okrsnow.com' to wait for completion&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2
❯&lt;/p&gt;

</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2019/12/29/heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/12/29/heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.html</guid>
        
        
      </item>
    
      <item>
        <title>Getting Past the unpack1 error on Heroku</title>
        <description>&lt;p&gt;11373* heroku domains:add okrsnow.com
11374* heroku domains:add www.okrsnow.com
11376* mate _posts/2019-12-29-heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.md
11377* heroku logs
11378* heroku logs –tail
11379* heroku config:set RAILS_MASTER_KEY=123456789abcefg
11380* git push heroku master
11384* git push heroku master
11385* heroku logs –tail
11390* git push heroku master
11391* heroku config:set RAILS_MASTER_KEY=config/credentials/production.yml.enc
11395* git push heroku master
11396* heroku config:set RAILS_MASTER_KEY=f9d510292a72197cb71c44617a6f71690ebe5fde9aaf7c0b19dc0427aeef62e2143e271260e169fd04ab3681f1df173d6079c740f8aeafff491787974809b9aa
11397* git push heroku master
11399* heroku config:set RAILS_MASTER_KEY=65371bc52c911ea14494c5905c07c1cf
11400* git push heroku master
11402  heroku logs tail -f
11404  heroku logs –tail
11409  heroku logs –tail
11411  history | grep heroku
11412  heroku config
11413  bundle exec heroku rake db:migrate
11414  bundle exec heroku rake seed:init&lt;/p&gt;

&lt;p&gt;https://jumpstartrails.com/discussions/88&lt;/p&gt;

&lt;p&gt;remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/rake-13.0.1/exe/rake:27:in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;top (required)&amp;gt;'
remote:
remote:        Caused by:
remote:        ArgumentError: key must be 16 bytes
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:193:in &lt;/code&gt;key='
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:193:in &lt;code class=&quot;highlighter-rouge&quot;&gt;_decrypt'
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:157:in &lt;/code&gt;decrypt_and_verify'
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/messages/rotator.rb:21:in `decrypt_and_verify'
remote&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2019/12/29/getting-past-the-unpack1-error-on-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/12/29/getting-past-the-unpack1-error-on-heroku.html</guid>
        
        
      </item>
    
      <item>
        <title>How Do You Know What ActiveRecord Table Has a user_id Attribute?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0903.jpeg&quot; alt=&quot;IMG_0903.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Even though I'm a firm, firm believer in agile, I've recently been experimenting with a throwback to waterfall style development and it very quickly left me with a fully featured data structure of tables and relationships modeled as &lt;strong&gt;example data&lt;/strong&gt;.  What I did is very rapidly write a series of migrations and then populate them to represent a sample &quot;installation&quot;.  My goal with this approach was to play to my strengths – data modeling – and avoid getting tied down in user interface stuff (my weakness).&lt;/p&gt;

&lt;p&gt;This was a very, very interesting approach and what I found was that I got much further along the lines of the &quot;guts&quot; of an application simply because I never got discouraged by:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh Shite – I know this should look good but I'm too much of a hoser to make it look good; I guess I'll put it aside and go watch TV&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The downside to this is that I never bothered setting up the normal associations that you do when you write a migration; I simply thought about this application in terms of the example data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the users who would be using the system&lt;/li&gt;
  &lt;li&gt;the data objects that they would create&lt;/li&gt;
  &lt;li&gt;how the data objects would interact with each other&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the things that I noticed when I started filling in the basics like &quot;belongs_to :user&quot; was that I kept constantly jumping between the class I was working on and the schema file.  Finally it hit me – what I needed was a method that I could execute in the console that would tell me what classes had a user_id attribute.  And so I wrote a class called DataObject (for an ActiveRecord class which stores data) and a method .has_user_id.  What I was looking for was output that looked like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; DataObject.has_user_id
Initiative
Yes - has a user_id field
KeyResultOwner
Yes - has a user_id field
KeyResult
Yes - has a user_id field
ObjectiveOwner
Yes - has a user_id field
ObjectiveType
Objective
Yes - has a user_id field
OkrTeamMember
Yes - has a user_id field
OkrTeam
Yes - has a user_id field
OrganizationGroup
Organization
Quarter
ResponsibilityRole
State
Yes - has a user_id field
User
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the entirety of the DataObject class:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataObject&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Initiative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KeyResultOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KeyResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjectiveOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjectiveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Objective&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OkrTeamMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OkrTeam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OrganizationGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Quarter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ResponsibilityRole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# DataObject.has_user_id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_user_id&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DataObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;inst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yes - has a user_id field&quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice the self.all class method returns a list of classes specific to my application.  These are the classes that actually make up the business logic.  I needed to NOT pull all classes in the application because I built this on top of a new framework, JumpStart Pro (see next section). JumpStart Pro has a bunch of its own classes for things like Credit Cards, Charges, etc.  I only wanted to focus on the classes that I implemented; hence the .all method.&lt;/p&gt;

&lt;p&gt;In order to use this, all I need to do is go into a console, which I &lt;strong&gt;always, always&lt;/strong&gt; have open anyway (Thanks Jared) and then type DataObject.has_user_id and I'll get a print out similar to the above list.  Using this I was able to much more easily move from class to class and add in my &lt;em&gt;belongs_to user&lt;/em&gt; relationships.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It took about 3 to 4 times longer to write this blog post than it did to write this class.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-gorails-jumpstart&quot;&gt;Sidebar: GoRails JumpStart&lt;/h2&gt;

&lt;p&gt;Given that my weakest skill is user interface, I chose, right from the start, to build this on top of &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;GoRails' JumpStart Pro&lt;/a&gt; product which is a framework for building Rails app and giving you a solid set of underpinnings for a SAAS app.  I've been ridiculously happy so far with JumpStart Pro.  Here's an example of the high quality user interface I've seen from it:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/okrsnow01_edited.png&quot; alt=&quot;okrsnow01_edited.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/okrsnow02_calendar.png&quot; alt=&quot;okrsnow02_calendar.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This last image, the drop down calendar, I did zero work to get that to appear.  All I did was change the field type from a text field to a date field:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%= form.label :date_end_at %&amp;gt;
    &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%= form.date_field :date_end_at, placeholder: &quot;When Do You Need to Complete This?&quot;, autofocus: true, class: &quot;form-control&quot; %&amp;gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I will fully admit that I don't actually know if this drop down comes from JumpStart Pro or from Rails 6 and the new form with style forms but, &lt;strong&gt;damn&lt;/strong&gt; is it sexy as hell to get a drop down calendar without ever doing a damn thing.  Here's what I said to my wife as I discovered this in the car on the way home from seeing Trans Siberian Orchestra:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Man that's sexy.  I think I'm more than a bit hard …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JumpStart Pro – Absolutely recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html</guid>
        
        <category>rails</category>
        
        <category>active_record</category>
        
        <category>metaprogramming</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When Your Brand New Windows PC Goes into a The Computer Restarted Unexpectedly Loop</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1083.jpeg&quot; alt=&quot;IMG_1083.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This blog post is for Max, my youngest son, so he can learn what I did to fix this problem.&lt;/p&gt;

&lt;p&gt;So my youngest son got a new Windows gaming PC for this Christmas from his Grandmother (thank you Nanny) and when he started it up, all he saw was this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1097.jpeg&quot; alt=&quot;IMG_1097.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The normal diagnostic steps of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pull the graphics card and use motherboard graphics&lt;/li&gt;
  &lt;li&gt;Check that the RAM is seated&lt;/li&gt;
  &lt;li&gt;Double check all cables are connected&lt;/li&gt;
  &lt;li&gt;Change the boot order options and make sure that the right boot device (SSD) is used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We ordered this from Best Buy and my suspicion is that someone had previously bought this computer and partially run thru Windows setup and failed.  Since the device is brand new, all we need to do is trick Windows into running through the setup process from scratch.&lt;/p&gt;

&lt;p&gt;Here's how I solved this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Press shift+F10 to get a command prompt.  Clap loudly for seeing a DOS prompt for the first time in ages.&lt;/li&gt;
  &lt;li&gt;Type regedit and press enter.&lt;/li&gt;
  &lt;li&gt;Navigate to this key: &lt;strong&gt;HKLM/SYSTEM/SETUP/STATUS/ChildCompletion&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click on setup.exe and change the value from 1 to 3.&lt;/li&gt;
  &lt;li&gt;Press ALT+F and select Exit from the File menu to exit RegEdit.&lt;/li&gt;
  &lt;li&gt;Exit out of the command prompt by typing exit and pressing ENTER.&lt;/li&gt;
  &lt;li&gt;Reboot the computer by clicking ok at the &quot;The Computer Restarted Unexpectedly…&quot; dialog box.&lt;/li&gt;
  &lt;li&gt;Run through the Windows setup process from scratch and all should be good.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thewindowsclub.com/computer-restarted-unexpectedly-encountered-unexpected-error&quot;&gt;TheWindowsClub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/windows/2019/12/25/when-your-brand-new-windows-pc-goes-into-a-the-computer-restarted-unexpectedly-loop.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/windows/2019/12/25/when-your-brand-new-windows-pc-goes-into-a-the-computer-restarted-unexpectedly-loop.html</guid>
        
        <category>windows</category>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Don't Beat Yourself Up - That's the World's Job</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1048.jpg&quot; alt=&quot;IMG_1048.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;Today is December 23rd and I am writing in the wee hours, that wonderfully still time when all is quiet in the world.  Between the early hour and the time of year, I've found that this always makes me thoughtful.&lt;/p&gt;

&lt;p&gt;Many of the people I know and care for are terribly hard on themselves.  They seem to feel that if they aren't perfect, they need to beat themselves up for that lack of perfection.  And I get being self critical – trust me, I really, really do but it simply isn't necessary, that's what the &lt;strong&gt;world&lt;/strong&gt; does for you.  There is no need to rake yourself over the coals; the world and your detractors (and we all have detractors) will do that for you.  Now, while I find Ernest Hemingway often problematic, this is something that he really understood.  I read his novel, a &lt;em&gt;Farewell to Arms&lt;/em&gt; over 30 years ago, and this quote has been floating about in my brain ever since:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“If people bring so much courage to this world the world has to kill them to break them, so of course it kills them. The world breaks every one and afterward many are strong at the broken places. But those that will not break it kills. It kills the very good and the very gentle and the very brave impartially. If you are none of these you can be sure it will kill you too but there will be no special hurry.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;― &lt;a href=&quot;https://en.wikipedia.org/wiki/Ernest_Hemingway&quot;&gt;Ernest Hemingway&lt;/a&gt;, &lt;a href=&quot;https://www.goodreads.com/work/quotes/4652599-a-farewell-to-arms&quot;&gt;A Farewell to Arms&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/philosophy/2019/12/23/don-t-beat-yourself-up-that-s-the-world-s-job.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/philosophy/2019/12/23/don-t-beat-yourself-up-that-s-the-world-s-job.html</guid>
        
        <category>philosophy</category>
        
        
        <category>philosophy</category>
        
      </item>
    
      <item>
        <title>Understanding OKRs</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1050.jpg&quot; alt=&quot;IMG_1050.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;During last week's offsite, my boss let us know that he wanted to go down the &lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;OKR&lt;/a&gt; rabbit hole in 2020.  OKR stands for Objectives and  Key Results and is a management philosophy promoted by &lt;a href=&quot;https://en.wikipedia.org/wiki/John_Doerr&quot;&gt;John Doerr&lt;/a&gt; of &lt;a href=&quot;https://en.wikipedia.org/wiki/Kleiner_Perkins&quot;&gt;Kleiner Perkins&lt;/a&gt; who most famously got it internalized by Google with great success.  According to &lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Objectives and key results is a framework for defining and tracking objectives and their outcomes.  OKRs comprise an objective—a clearly defined goal—and one or more key results—specific measures used to track the achievement of that goal.  The goal of OKR is to define how to achieve objectives through concrete, specific and measurable actions.  Key results can be measured on a 0-100% scale or any numerical unit (e.g. dollar amount, %, items, etc.). Objectives should also be supported by initiatives, which are the plans and activities that help to achieve the objective and move forward the key results.&lt;/p&gt;

&lt;p&gt;Although the core idea of OKRs is that you have both Objectives and Key Results and that seems obvious, I've always found that examples give things clarity.  So here are some examples:&lt;/p&gt;

&lt;h2 id=&quot;objective&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Research and improve customer satisfaction&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Exceed Net Promoter Score (NPS) of over 8.0&lt;/li&gt;
  &lt;li&gt;Get 1000 survey responses to annual satisfaction survey&lt;/li&gt;
  &lt;li&gt;Conduct 50 phone interviews with top customers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-1&quot;&gt;Objective:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Improve internal employee engagement&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-1&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Conduct 3 monthly “Fun Friday” all-hands meetings with motivational speakers&lt;/li&gt;
  &lt;li&gt;Implement tracking system in 3 different teams&lt;/li&gt;
  &lt;li&gt;Reach weekly employee satisfaction score of at least 4.7 points&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-2&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Finish raising new capital for our growth needs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-2&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;E-mail and phone outreach to 100 VCs and seed funds&lt;/li&gt;
  &lt;li&gt;Get at least 30 second contact meetings or conference calls&lt;/li&gt;
  &lt;li&gt;Solicit at least 3 term sheets of our minimum required terms&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-3&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Simplify &amp;amp; clarify our product, messaging, presentation of things we do&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-3&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;25 on-site user-testing sessions to understand key product misunderstandings&lt;/li&gt;
  &lt;li&gt;10 tests of our recent infographics and slide decks for customer understanding&lt;/li&gt;
  &lt;li&gt;Get 1000 answers to an online user survey sent to all last quarter’s signups&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-4&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Grow Our Corporate Global Business&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-4&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Hit company global sales target of $100 Million in Sales&lt;/li&gt;
  &lt;li&gt;Achieve 100% year-to-year sales growth in the EMEA geography&lt;/li&gt;
  &lt;li&gt;Increase the company average deal size by 30% with upsells&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My thanks to the &lt;a href=&quot;https://blog.newsteer.com/okr-goals-practical-examples-for-companies-and-startups-a1d2fbb037c5&quot;&gt;Steer blog&lt;/a&gt; which published these examples.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/okr/2019/12/22/understanding-okrs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/okr/2019/12/22/understanding-okrs.html</guid>
        
        <category>okr</category>
        
        <category>startup</category>
        
        
        <category>okr</category>
        
      </item>
    
      <item>
        <title>How Do You Know the Charge Status of Your Apple Pencil</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0737.jpeg&quot; alt=&quot;IMG_0737.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm a new user to my Apple Pencil, the one with the magnet that charges on the top of the iPad.  I mean I've had it since I got an iPad Pro but I dropped it in my laptop bag and, well, never even remembered it existed.  A friend told me &quot;Use Your iPad with the Apple Pencil and Google Jamboard and its &lt;strong&gt;fantastic&lt;/strong&gt;&quot; (future blog post coming).  And I think that's a great idea but the first problem I found was that my Apple Pencil was dead, dead, dead.&lt;/p&gt;

&lt;p&gt;So the obvious question is how do you know that your Apple Pencil is charged?  I started with 9 to 5 Mac and &lt;a href=&quot;https://ww.9to5mac.com/2019/03/11/apple-pencil-battery/&quot;&gt;their instructions&lt;/a&gt; simply didn't work for me.&lt;/p&gt;

&lt;p&gt;What I discovered is that when you attach your Apple Pencil to your iPad with the magnet, it very quickly flashes the charge on the screen.  You don't need to do anything special to know this – just detach and re-attach.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ipad/2019/12/16/how-do-you-know-the-charge-status-of-your-apple-pencil.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ipad/2019/12/16/how-do-you-know-the-charge-status-of-your-apple-pencil.html</guid>
        
        <category>ipad</category>
        
        <category>apple_pencil</category>
        
        
        <category>ipad</category>
        
      </item>
    
      <item>
        <title>Ruby, ChartKick and chart.js versus Google Charts and the Y Axis Auto Sizing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9948.jpeg&quot; alt=&quot;IMG_9948.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of people in the Open Source world, I rarely know actual people in the Open Source world – but I do know github usernames.  And one of those names that I truly respect is &lt;a href=&quot;https://github.com/ankane&quot;&gt;ankane&lt;/a&gt;.  I've rarely found a bit of code he wrote that I don't like or use.  And while I'm not a big open source creator, I'd like to think that I give back by writing documentation like this blog post.&lt;/p&gt;

&lt;p&gt;Today I'm talking about the &lt;a href=&quot;https://github.com/ankane/chartkick&quot;&gt;ChartKick&lt;/a&gt; library by ankane.  ChartKick is an easy way to build JavaScript charts with a single line of Ruby.  I've used ChartKick on and off for years but how it works has always been a bit of a mystery.  Hopefully this blog post de-mystifies it a bit.&lt;/p&gt;

&lt;h2 id=&quot;chartkick-can-use-different-graphing-engines&quot;&gt;ChartKick Can Use Different Graphing Engines&lt;/h2&gt;

&lt;p&gt;I have always used ChartKick in the past just with the default Google Charts engine.  Much to my surprise, ChartKick can use chart.js underneath.  This is surprising to me and &lt;strong&gt;utterly awesome&lt;/strong&gt;.  &lt;a href=&quot;https://www.ruby-forum.com/t/trying-to-change-chartkick-to-chart-js/251938&quot;&gt;Here's where I learned this&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-chartkick-with-chartjs&quot;&gt;Using ChartKick with chart.js&lt;/h3&gt;

&lt;p&gt;In application.js, you need both of these:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//= require Chart.bundle
//= require chartkick
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: This assumes that you aren't using yarn / webpacker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you change application.js, you need to restart your development server.&lt;/p&gt;

&lt;p&gt;Here's a picture of a graph using chart.js:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/chartkick_chart_js.png&quot; alt=&quot;chartkick_chart_js.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-chartkick-with-google-charts&quot;&gt;Using ChartKick with Google Charts&lt;/h3&gt;

&lt;p&gt;If you are using ChartKick with Google Charts then you need to remove the line below from application.js:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//= require Chart.bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then you need to add, into your layout or your html template:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= javascript_include_tag &quot;https://www.gstatic.com/charts/loader.js&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's a picture of a graph using Google Charts:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/chartkick_google_charts.png&quot; alt=&quot;chartkick_google_charts.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;y-axis-auto-sizing--setting-axis-minimums-dynamically&quot;&gt;Y Axis Auto Sizing / Setting Axis Minimums Dynamically&lt;/h2&gt;

&lt;p&gt;The Y axis on my graphs, for years, has always been zero.  I had a friend complain about this to me and a &lt;a href=&quot;https://chartkick.com/&quot;&gt;documentation&lt;/a&gt; grovel (ok I read it more closely than I ever had before) revealed this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;min defaults to 0 for charts with non-negative values. Use nil to let the charting library decide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;adding-a-bit-of-color-to-your-graph&quot;&gt;Adding a Bit of Color to Your Graph&lt;/h2&gt;

&lt;p&gt;I haven't used this in quite a while, so here's a reminder on how to use colors:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= line_chart data, colors: [&quot;#b00&quot;, &quot;#666&quot;] %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Thank you ankane!&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/12/13/ruby-chartkick-and-chart-js-versus-google-charts-and-the-y-axis-auto-sizing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/12/13/ruby-chartkick-and-chart-js-versus-google-charts-and-the-y-axis-auto-sizing.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>chartkick</category>
        
        <category>chartjs</category>
        
        <category>google_charts</category>
        
        <category>yaxis</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Using Xargs to Get Past Argument List Too Long</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9162.jpeg&quot; alt=&quot;IMG_9162.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a quick one.  I have about 25,000 files in a directory that I need to grep across.  I tried:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep '&quot;class&quot;:0' *.json | more
zsh: argument list too long: grep
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's a problem because when the argument list is too long, nothing can happen.  The solution here is a combination of find and xargs, specifically:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' | xargs grep '&quot;class&quot;:0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the output from this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./davidson-data-266118b4178f11ea80474c3275928de7.json:{&quot;count&quot;:3,&quot;hate_speech&quot;:3,&quot;offensive_speech&quot;:0,&quot;neither&quot;:0,&quot;class&quot;:0,&quot;tweet&quot;:&quot;\&quot;@JPantsdotcom @Todd__Kincannon @the__realtony I'm partial
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You should be able to use an approach like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find -name '*.json' -exec grep '&quot;class&quot;:0' 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but the embedded grep in find doesn't accept that and fails with this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find: illegal option -- n
usage: find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]
       find [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The closest that I can get to make this work is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' -exec grep 'class' {} +
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and that's not an exact match so, sigh.&lt;/p&gt;

&lt;p&gt;If we return to the original approach and add a -l option flag then we can list only filenames:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' | xargs grep -l '&quot;class&quot;:0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/833128/what-does-xargs-grep-do&quot;&gt;Stack Overflow on Xargs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6637882/how-can-i-use-grep-to-show-just-filenames-on-linux&quot;&gt;Stack Overflow on Grep&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/128559/solving-mv-argument-list-too-long&quot;&gt;Argument List Too Long&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 12 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/12/12/using-xargs-to-get-past-argument-list-too-long.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/12/12/using-xargs-to-get-past-argument-list-too-long.html</guid>
        
        <category>linux</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>The 12 Bugs of Christmas - A Software Developers' Version</title>
        <description>&lt;p&gt;This isn't mine but it was forwarded to me via a group chat and, in it, I found a deep, profound and abiding truth:&lt;/p&gt;

&lt;h3 id=&quot;for-the-first-bug-of-christmas-my-manager-said-to-me&quot;&gt;1.    For the first bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-second-bug-of-christmas-my-manager-said-to-me&quot;&gt;2.    For the second bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-third-bug-of-christmas-my-manager-said-to-me&quot;&gt;3.    For the third bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-fourth-bug-of-christmas-my-manager-said-to-me&quot;&gt;4.    For the fourth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-fifth-bug-of-christmas-my-manager-said-to-me&quot;&gt;5.    For the fifth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-sixth-bug-of-christmas-my-manager-said-to-me&quot;&gt;6.    For the sixth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-seventh-bug-of-christmas-my-manager-said-to-me&quot;&gt;7.    For the seventh bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-eighth-bug-of-christmas-my-manager-said-to-me&quot;&gt;8.    For the eighth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-ninth-bug-of-christmas-my-manager-said-to-me&quot;&gt;9.    For the ninth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-tenth-bug-of-christmas-my-manager-said-to-me&quot;&gt;10.  For the tenth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-eleventh-bug-of-christmas-my-manager-said-to-me&quot;&gt;11.  For the eleventh bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Say it's not supported&lt;/li&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-twelfth-bug-of-christmas-my-manager-said-to-me&quot;&gt;12.  For the twelfth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Tell them it's a feature&lt;/li&gt;
  &lt;li&gt;Say it's not supported&lt;/li&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/humor/2019/12/11/the-12-bugs-of-christmas-a-software-developers-version.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/humor/2019/12/11/the-12-bugs-of-christmas-a-software-developers-version.html</guid>
        
        <category>humor</category>
        
        <category>christmas</category>
        
        
        <category>humor</category>
        
      </item>
    
      <item>
        <title>Ruby to Python Translation Guide</title>
        <description>&lt;h2 id=&quot;last-update-12122019&quot;&gt;Last Update: 12/12/2019&lt;/h2&gt;

&lt;p&gt;I wrote this guide to different Ruby idioms and how to do them in Python.  Organization is alphabetical.  This will have to be a continually updated document as I keep finding holes in my Python knowledge and my prior practice of &quot;Learn it / Blog it&quot; simply doesn't put enough things into the same place.  I need a single, easily searchable place to store all this random &quot;how to do X cruft&quot;.&lt;/p&gt;

&lt;p&gt;This is written as headings which discuss the problem and then how it is done in Ruby and in Python and then, optionally, a Python context.  Hopefully this approach makes it useful to both ruby-ites and python-istas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: My day to day lingua franca is still Ruby and in a Rails style context where everything is autoloaded.  Python to me is a specialized tool for Data Science / Machine Learning.  I find that Python:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lacks the elegant simplicity of Ruby&lt;/li&gt;
  &lt;li&gt;Python syntax makes my eyes want to bleed, can we have an underscore character please, how about a colon or some more parentheses&lt;/li&gt;
  &lt;li&gt;Is developer hostile by default&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: These are opinions!  I am writing them after a craptastic work day so that and lack of sleep may be tilting my opinions more than a bit; I mean I'm right but still …  And please understand that I fundamentally respect that amazing work that Guido did but I find myself in Matz's camp by preference.  Still nothing else has the ecosystem that Python does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: If you disagree with the above, my twitter handle is fuzzygroup and my email is easily discoverable.  Let the fun begin …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 4&lt;/strong&gt;: This was initially written in late 2019 so the Python flavor / version is 3.7 using VirtualEnv on a Mac with pip3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 5&lt;/strong&gt;: If there's things you want to see here then actually do let me know.  This isn't a planned out document, it is more of a &quot;what made me feel stooopid in Python today&quot; type of thing.&lt;/p&gt;

&lt;h2 id=&quot;debugging&quot;&gt;Debugging&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-all-attributes-of-an-object&quot;&gt;Getting All Attributes of an Object&lt;/h2&gt;

&lt;p&gt;Most Ruby objects, at least in a Rails context, are generally ActiveRecord objects and respond to .attributes so:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attributes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;created_at&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;updated_at&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Write Daily&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;options&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;user_id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;category_id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;has_habits&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;habit_count&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;shareable&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;master_plan&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;active&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python equivalent of this is is to reference the object's internal dict.  Below we have an object called message which is coming in from a streaming data solution called sse:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__dict__&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;all_awardings&quot;:[],&quot;approved_at_utc&quot;:null,&quot;ups&quot;:1,&quot;user_reports&quot;:[]}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'33288433929'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'retry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# There are four different top level things that can be called:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# despite the appearance, the attributes of data are NOT json buy just a string so this doesn't work:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'str'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'keys'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-all-methods-for-an-object&quot;&gt;Getting All Methods for an Object&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:[]=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:all?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:any?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:assert_valid_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:assoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chart_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# a crap ton of methods omitted for clarity&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Also and BETTER since it just shows methods on the class; not inherited methods:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                          &lt;span class=&quot;n&quot;&gt;active_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                   &lt;span class=&quot;n&quot;&gt;after_add_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;after_add_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;after_add_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;after_remove_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;after_remove_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;after_remove_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autosave_associated_records_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;before_add_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;before_add_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;before_add_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;before_remove_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;before_remove_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;before_remove_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                                    &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validate_associated_records_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'__class__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__delattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dict__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dir__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__doc__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__format__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init_subclass__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__le__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__lt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__module__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ne__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__new__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce_ex__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__repr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__setattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__sizeof__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__str__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__subclasshook__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__weakref__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'parse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'retry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sse_line_pattern'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sse_line_pattern&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(?P&amp;lt;name&amp;gt;[^:]*):?( ?(?P&amp;lt;value&amp;gt;.*))?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# object.__dict__ gets you an object's data while dir(object) gets you an object's methods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See: &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html&quot;&gt;Me&lt;/a&gt;, &lt;a href=&quot;https://lerner.co.il/2014/10/14/python-attributes/&quot;&gt;Lerner&lt;/a&gt;, &lt;a href=&quot;https://medium.com/swlh/class-and-object-attributes-python-8191dcd1f4cf&quot;&gt;Swlh&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/questions/6886493/get-all-object-attributes-in-python&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;getting-all-keys-in-a-hash&quot;&gt;Getting All Keys in a Hash&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cat&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dict_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;json-parsing&quot;&gt;JSON Parsing&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;id&quot;: 12345, &quot;message&quot;: &quot;hello&quot;, &quot;array&quot;: [1,2,3,4]}'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;array&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ujson&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;JSON&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;id&quot;: 12345, &quot;message&quot;: &quot;hello&quot;, &quot;array&quot;: [1,2,3,4]}'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dict_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I will confess to dipping into a bit of a Ruby idiom here by importing ujson as JSON (all caps).  I find myself constantly making errors in python by calling my json variable json when that's actually an imported class / module.  This one change makes things a lot easier (at least for me).&lt;/p&gt;

&lt;h2 id=&quot;length--size-of-an-object&quot;&gt;Length / Size of an Object&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1826&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;quitting-the-console&quot;&gt;Quitting the console&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;redis&quot;&gt;Redis&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&amp;lt;Redis client v4.1.3 for redis://127.0.0.1:6379/0&amp;gt;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;string-interpolation&quot;&gt;String Interpolation&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Scott is a &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scott is a {skill}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;try-----safe-navigation-and-python-hashes&quot;&gt;Try / &amp;amp; - Safe Navigation and Python Hashes&lt;/h2&gt;

&lt;p&gt;A ruby hash returns nil if the key specified is missing:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RUBY_VERSION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;ruby-2.3.1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A python dict raises an exception:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/venv/bin/../lib/python3.7/os.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;678&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__getitem__&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RUBY_VERSION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'ruby-2.3.1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The ruby way around this would be to use try or the safe navigation operator:&lt;/p&gt;

&lt;p&gt;https://stackoverflow.com/questions/46390057/from-ruby-to-python-is-there-an-equivalent-of-try&lt;/p&gt;

&lt;h2 id=&quot;the-blank-for-writing-the-next-entry&quot;&gt;The Blank for Writing the Next Entry&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/12/11/ruby-to-python-translation-guide.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/12/11/ruby-to-python-translation-guide.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>A Week of Whole 30 Meals From My Recipes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9141.jpeg&quot; alt=&quot;IMG_9141.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My eldest son needs to lose abut 15 pounds before he leaves for boot camp in the Marines.  So here is a week of Whole 30 Meals planned out for him.  Here are &lt;a href=&quot;IMG_9141.jpeg&quot;&gt;more details on Whole 30&lt;/a&gt; (scroll down about 1/2 way).&lt;/p&gt;

&lt;h2 id=&quot;monday&quot;&gt;Monday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: 3 &lt;a href=&quot;https://fuzzyblog.io/recipes/eggs/2017/03/07/squishy-eggs.html&quot;&gt;Squishy Eggs&lt;/a&gt;, Black Coffee&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Grilled Chicken Breast, Baked potato with Olive Oil (no dairy), Salad with homemade dressing&lt;/li&gt;
  &lt;li&gt;Snack: handful of cashews&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tuesday&quot;&gt;Tuesday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: 2 Fried Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Garlicky Pork Chops, &lt;a href=&quot;https://fuzzyblog.io/recipes/side_dish/2017/03/10/gluten-free-havilah-s-roasted-carrots-with-changes-by-scott.html&quot;&gt;Roasted Carrots&lt;/a&gt;, Salad&lt;/li&gt;
  &lt;li&gt;Snack: Mixed Nuts; no Peanuts&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wednesday&quot;&gt;Wednesday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Scrambled Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Burger patty, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Steak, Broccoli, Salad&lt;/li&gt;
  &lt;li&gt;Snack: Terra Chips&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Apple&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thursday&quot;&gt;Thursday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Omelet&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Burger, Hash Browns&lt;/li&gt;
  &lt;li&gt;Snack: Cashews, Mixed Nuts&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;friday&quot;&gt;Friday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Scrambled Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Steak, Left Over Hash Browns, Sautéed Bell Peppers and Onions&lt;/li&gt;
  &lt;li&gt;Snack: Lara Bar&lt;/li&gt;
  &lt;li&gt;Sweet: Berries&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;saturday&quot;&gt;Saturday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Omelet&lt;/li&gt;
  &lt;li&gt;Lunch: Burgers Wrapped in Lettuce&lt;/li&gt;
  &lt;li&gt;Dinner: Left Over Steak, Mashed Potatoes Made with Chicken Broth&lt;/li&gt;
  &lt;li&gt;Snack: Cashews&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sunday&quot;&gt;Sunday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Fried Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard Boiled Eggs, Salad&lt;/li&gt;
  &lt;li&gt;Dinner: Meat Loaf, Mashed Potatoes&lt;/li&gt;
  &lt;li&gt;Snack: Lara Bar&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/change/2019/12/08/a-week-of-whole-30-meals-from-my-recipes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/change/2019/12/08/a-week-of-whole-30-meals-from-my-recipes.html</guid>
        
        <category>change</category>
        
        <category>weight_loss</category>
        
        <category>whole30</category>
        
        
        <category>change</category>
        
      </item>
    
      <item>
        <title>Dear Bootstrap Why Aren't My Tables Full Width</title>
        <description>&lt;p&gt;Perhaps I shouldn't have insomnia and then code into the wee hours because this is an exchange that I can see happening if only I could email Bootstrap in the style of Ann Landers …&lt;/p&gt;

&lt;p&gt;Dear Bootstrap,&lt;/p&gt;

&lt;p&gt;I was hoping that you could explain to me why my tables of data aren't full width.&lt;/p&gt;

&lt;p&gt;Here's an example which isn't full width:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/bootstrap_with_table.png&quot; alt=&quot;bootstrap_with_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here's an example which is:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/bootstrap_without_table.png&quot; alt=&quot;bootstrap_without_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The difference between the two bits of markup is:&lt;/p&gt;

&lt;p&gt;The non full width one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table table-condensed table-hover table-striped&quot; style=&quot;width:100%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The full width one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table-condensed table-hover table-striped&quot; style=&quot;width:100%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's an example of what this looks like in full:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/table_full_width.png&quot; alt=&quot;table_full_width.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thank you.
Confused Web Developer that Struggles Mightily with CSS&lt;/p&gt;

&lt;p&gt;Dear Confused Web Developer that Struggles Mightily with CSS,&lt;/p&gt;

&lt;p&gt;I'd love to explain this to you but I also find the bootstrap table model confusing as heck.  What I can tell you is that, for reasons, I don't understand, adding table seems to have two effects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it improves the lines between the data&lt;/li&gt;
  &lt;li&gt;it sets a margin on the table to inset it from the left and right borders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, no, I can't tell you how to work around this but what I can tell you is this:&lt;/p&gt;

&lt;p&gt;When you want a table to span the full width then omit the table class and just use table-condensed.  And, yes, you're going to lose the nice lines; so sorry; nothing can be done here.&lt;/p&gt;

&lt;p&gt;And I'd direct you to my &lt;a href=&quot;https://getbootstrap.com/docs/4.0/content/tables/&quot;&gt;table documentation&lt;/a&gt; where you can find this discussed in full but there's simply no mention of it anywhere in there so I'd assume that even we don't understand this.&lt;/p&gt;

&lt;p&gt;My sincere apologies …&lt;/p&gt;

&lt;p&gt;Bootstrap 4, Your Friendly Neighborhood CSS Grid&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/12/07/dear-bootstrap-why-aren-t-my-tables-full-width.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/12/07/dear-bootstrap-why-aren-t-my-tables-full-width.html</guid>
        
        <category>bootstrap</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Scott's Approach to Weight Loss</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_4203.jpeg&quot; alt=&quot;IMG_4203.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;About two years ago, I lost 20 pounds.  I compared experiences recently with a friend who had lost a bunch of weight and our experiences were so different that I thought I'd write them down.  I'm also writing this down because my eldest son just enlisted in the Marines and he needs to drop weight before he goes to boot camp.&lt;/p&gt;

&lt;p&gt;Here's what worked for me:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Weigh Yourself Every Day&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Whole 30&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Zero App&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exercise At Least 3 times Per Week&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No Dining Out&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these is discussed below.&lt;/p&gt;

&lt;h2 id=&quot;weigh-yourself-every-day&quot;&gt;Weigh Yourself Every Day&lt;/h2&gt;

&lt;p&gt;I'm an engineer, not a weight loss person, but, to my way of thinking, if you're going to try and lose weight then you need a metric and that metric is &lt;strong&gt;your weight&lt;/strong&gt;.  I've now been weighing myself daily since 2017 and I can tell you that weighing daily really helps prevent you from gaining weight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If you need a way to track your weight on a daily basis, reach out to me.  I have a new product coming out that helps with this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you are going to weigh daily then you need to come up with a standard approach.  For me that is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Wake up.&lt;/li&gt;
  &lt;li&gt;Use the bathroom.&lt;/li&gt;
  &lt;li&gt;Weigh; always using the same scale.&lt;/li&gt;
  &lt;li&gt;Log my weight.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;whole-30&quot;&gt;Whole 30&lt;/h2&gt;

&lt;p&gt;I used the Whole 30 approach to diet.  This basically boils down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Whole Foods - simple proteins and vegetables&lt;/li&gt;
  &lt;li&gt;Nothing artificial; everything made from scratch right down to mayonnaise&lt;/li&gt;
  &lt;li&gt;No sugar at all including sugar, honey, maple syrup, etc.&lt;/li&gt;
  &lt;li&gt;No grains&lt;/li&gt;
  &lt;li&gt;No alcohol&lt;/li&gt;
  &lt;li&gt;No beans / legumes&lt;/li&gt;
  &lt;li&gt;No dairy (including milk, cheese, yogurt, butter)&lt;/li&gt;
  &lt;li&gt;No beverages other than water&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the quick list of what you can eat:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vegetables including potatoes (but not corn as that's a grain)&lt;/li&gt;
  &lt;li&gt;Fruits but in moderation&lt;/li&gt;
  &lt;li&gt;Unprocessed Meats&lt;/li&gt;
  &lt;li&gt;Seafood both fish and shellfish&lt;/li&gt;
  &lt;li&gt;Nuts and Seeds but not peanuts (legumes)&lt;/li&gt;
  &lt;li&gt;Olive Oil&lt;/li&gt;
  &lt;li&gt;Coffee (but black; no sugar, no dairy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a good reference to &lt;a href=&quot;https://www.thekitchn.com/what-you-can-and-cant-eat-on-whole30-239838&quot;&gt;Whole 30&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only sweet that I had on Whole 30 was Lara Bars (which are mostly made of cashews) and fruits / dates.  The only drink I had other than water was LaCroix sparkling waters.&lt;/p&gt;

&lt;h2 id=&quot;zero-app&quot;&gt;Zero App&lt;/h2&gt;

&lt;p&gt;One of the more interesting things I did was use an app called the Zero app:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apps.apple.com/us/app/zero-fasting-tracker/id1168348542&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.zerofasting.zero&amp;amp;hl=en_US&quot;&gt;Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of Zero app is that if you give your body more time to digest the food you consume then you will metabolize it better.  I focused on reducing my eating window to lunch and an early dinner (i.e. 5 or 6).  This reduced the window I ate in down to 17 to 18 hours.  And while this is initially hard, after the first few days, it actually isn't bad.&lt;/p&gt;

&lt;h2 id=&quot;exercise&quot;&gt;Exercise&lt;/h2&gt;

&lt;p&gt;I've never been a big exercise person but I did do 15 to 20 minutes on an elliptical 2 or 3 times per week.&lt;/p&gt;

&lt;h2 id=&quot;dining-out---just-say-no&quot;&gt;Dining Out - Just Say No!&lt;/h2&gt;

&lt;p&gt;I know that the U.S. has moved to a food culture that is largely based around dining outside the home / your personal kitchen.  If you're going to do Whole 30 then you pretty much can't dine out at all.  There is the rare occasion when you can find something simple like a piece of broiled fish or a steak but most restaurant dining is optimized towards flavor and that generally means copious amounts of butter / fat / sugar.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/change/2019/12/06/scott-s-approach-to-weight-loss.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/change/2019/12/06/scott-s-approach-to-weight-loss.html</guid>
        
        <category>change</category>
        
        <category>weight_loss</category>
        
        <category>whole30</category>
        
        
        <category>change</category>
        
      </item>
    
      <item>
        <title>Startup Learnings - What Taylor Williams Taught Me</title>
        <description>&lt;p&gt;&lt;img src=&quot;/blog/assets/IMG_0469.jpeg&quot; alt=&quot;IMG_0469.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Code Cat watches disapprovingly as I work …&lt;/p&gt;

&lt;p&gt;The bulk of my career has been spent at the &lt;strong&gt;small&lt;/strong&gt; scale of the startup universe – companies with 15 people or less; often a lot less; more than a few times, I've been the &lt;em&gt;only&lt;/em&gt; engineer. I have done three stints with companies at or near the three figure number of employees: Dataware, Mascot Network and Seas Education.  One of the characteristics of working at the small scale of startups is that what matters is &lt;em&gt;results&lt;/em&gt;.  How you do it generally doesn't matter – that you do it &lt;em&gt;does matter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And, perhaps unsurprisingly, this can lead to some bad things when it comes to &lt;em&gt;engineering processes&lt;/em&gt;.  To this point, I've actually been dubbed &quot;the anti process&quot; in at least one organization I spent some time at.  So keep that in mind as you read on …&lt;/p&gt;

&lt;p&gt;I'm actively working on an (unlaunched) side project and I noticed this today:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/500_pull_requests.png&quot; alt=&quot;500_pull_requests.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That's from the repo on my side project and it indicates that I've created &lt;em&gt;500&lt;/em&gt; pull requests (this was tied to issue #444 which only got merged this morning; the current issue number is 501.  Issue 444 was a major refactor that has been a long coming.&lt;/p&gt;

&lt;p&gt;I'd like to joke that aggressively using pull requests, even on an unlaunched, personal side project, is &quot;how Mother Johnson taught me to do open source&quot; but that would be an untruth.  This is a &lt;a href=&quot;https://fuzzyblog.io/blog/tag.html#learnings&quot;&gt;Startup Learnings&lt;/a&gt; post and I learned this from &lt;strong&gt;Taylor Williams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Taylor Williams is currently the head of software engineering for &lt;a href=&quot;https://www.seaseducation.com&quot;&gt;Seas Education&lt;/a&gt;, a SAAS product focused on record keeping for special education.  I worked for Seas for about 18 months during which time I focused on AWS infrastructure, deployment, Ansible and back end features.  When I came into Seas, Taylor was still a bit on the junior side but I watched him grow and develop as he took on a larger and larger role, culminating in a promotion where he took on leadership of all software engineering, across all product lines.&lt;/p&gt;

&lt;p&gt;What Taylor taught me was git discipline, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All development is done in feature branches tied to a ticket number&lt;/li&gt;
  &lt;li&gt;Feature branches should be atomic and only include changes specific to that ticket&lt;/li&gt;
  &lt;li&gt;The develop branch accepts changes from a feature branch once the tests pass&lt;/li&gt;
  &lt;li&gt;The master branch is always pristine and can be deployed at any time&lt;/li&gt;
  &lt;li&gt;Pull requests are how you merge your feature branch into develop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I actually believe in this process so thoroughly that I &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;documented it&lt;/a&gt; for anyone who works on my side project.  And I've brought it into my current consulting engagement.&lt;/p&gt;

&lt;p&gt;Now I've been using version control for a long time (I started with &lt;a href=&quot;https://en.wikipedia.org/wiki/PVCS&quot;&gt;PVCS&lt;/a&gt;) but I've &lt;strong&gt;never&lt;/strong&gt; had this kind of discipline before my time at Seas.  Taylor had no problem saying to me what amounted to &quot;Dude - you're doing it wrong; we do it this way.&quot;  And I'll admit that I didn't like hearing that because I'm a pretty senior technical guy and criticism can be hard.  But Taylor did it well and I listened and &lt;strong&gt;he was right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I've now brought over 7,000 lines of brand new code into the world using this approach so I think I've pretty firmly adopted it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rake stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1757 |   1155 |      28 |     136 |   4 |     6 |
| Helpers              |    490 |    382 |       0 |      49 |   0 |     5 |
| Jobs                 |      2 |      2 |       1 |       0 |   0 |     0 |
| Models               |   2980 |   1709 |      27 |     189 |   7 |     7 |
| Mailers              |      4 |      4 |       1 |       0 |   0 |     0 |
| Channels             |      8 |      8 |       2 |       0 |   0 |     0 |
| JavaScripts          |   4351 |   3599 |       0 |     183 |   0 |    17 |
| Libraries            |   1446 |    929 |       0 |       9 |   0 |   101 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |  11038 |   7788 |      59 |     566 |   9 |    11 |
+----------------------+--------+--------+---------+---------+-----+-------+
  Code LOC: 7788     Test LOC: 0     Code to Test Ratio: 1:0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There are tests; rspec tests don't show up here; my test ratio isn't great yet but it is a work in progress:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.rb' | xargs wc -l
     115 ./spec_helper.rb
  ...
    1720 total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So thank you Taylor for breaking my &quot;anti process&quot; tendencies.  I am much, much happier with my code management practices now.&lt;/p&gt;

&lt;p&gt;And, in closing, I would be remiss in not thanking my former pairing partner, &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; for fixing some of the git mishaps that occurred on the way down this learning process.  Thanks Sean!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/12/04/startup-learnings-what-taylor-williams-taught-me.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/12/04/startup-learnings-what-taylor-williams-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>git</category>
        
        <category>taylor_williams</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>What is the President's Role in a Stage Zero Startup?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9167.jpeg&quot; alt=&quot;IMG_9167.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is another one of those &quot;Tales from the Past&quot; blog posts where something kicked off a memory.  In this case, I was at a conference and talking with someone who was President of a startup and they weren't quite sure what to do.  They had found themselves, at a very early stage, sidelined in their own venture and pigeon holed into a tiny portion of the business.  And, keep in mind, that they did have specialized domain knowledge of that portion but still …&lt;/p&gt;

&lt;p&gt;As I listened to them talk, I had a terribly blunt and not politically correct message for them.  They encouraged me to be direct and so, I'm going to be mildly offensive here (bear in mind that I was talking to a woman when I said this a bunch of years ago):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Strap your balls on and be the damn President&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I said that a bunch of years ago and while I find it more offensive today, I believe that it is still good advice.  But before we get to that, let's talk about the &quot;stages&quot; of a startup.&lt;/p&gt;

&lt;h2 id=&quot;the-stages-of-a-startup&quot;&gt;The Stages of a Startup&lt;/h2&gt;

&lt;p&gt;Startups exist at all types of &quot;stages&quot;. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stage Zero&lt;/li&gt;
  &lt;li&gt;Angel Funded&lt;/li&gt;
  &lt;li&gt;Seed Funded&lt;/li&gt;
  &lt;li&gt;Venture Funded&lt;/li&gt;
  &lt;li&gt;Pre IPO&lt;/li&gt;
  &lt;li&gt;Mature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every one of these stages is different but the President's role, in a Stage Zero startup is particularly important:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The President's role in a Stage Zero startup is very, very simple.  The President does whatever is needed to will the startup into existence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's a Scott Johnson quote; I said this.  And I can say it, with a high degree of authority, because I've done it multiple times in my life.  When I started my first software company, I was 19 and I dropped out of college to create hypertext linking software (this was 4 years before Tim Berners Lee created the world wide web).  When I say &quot;will it into existence&quot;, I know what I'm saying because when I did this, I wasn't a programmer or a software engineer; I simply wanted to create this product.  Creating that company, NTERGAID, was literally an act of will.&lt;/p&gt;

&lt;p&gt;And, despite all the pain that goes into a Stage Zero startup, one of my favorite stages in a startup is what I refer to as &lt;strong&gt;Stage Zero&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-stage-zero-for-a-startup&quot;&gt;What is Stage Zero for a Startup?&lt;/h2&gt;

&lt;p&gt;As I look at startups, Stage Zero is what you have – before you have anything.  Stage Zero can mean:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 guys around a placemat in a restaurant idly dreaming&lt;/li&gt;
  &lt;li&gt;A business plan that you haven't shown anyone&lt;/li&gt;
  &lt;li&gt;A team that isn't yet operating&lt;/li&gt;
  &lt;li&gt;A pile of code and a running website that isn't really a business yet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In essence, Stage Zero is what you have &lt;strong&gt;before you start&lt;/strong&gt;.  You don't have investors, you don't have customers, you don't have product-market fit and you generally don't even have a product.&lt;/p&gt;

&lt;h2 id=&quot;what-does-a-president-do-at-stage-zero&quot;&gt;What Does a President Do at Stage Zero?&lt;/h2&gt;

&lt;p&gt;When you come to a startup leadership position from a mature industry, you often have the idea that you have a specific tasks or tasks in front of you.  In a startup that simply isn't true.  Here's what a President does in a Stage Zero startup:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;They do whatever it takes to come to market.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An expression that I personally love is &lt;a href=&quot;https://en.wikipedia.org/wiki/Root_hog,_or_die&quot;&gt;Root, Hog or Die&lt;/a&gt; which, according to Wikipedia, is &quot;an idiomatic expression for self-reliance&quot;.  And that's the nature of being President of a startup, you have to be self reliant because there aren't the other people around to do things that exist in a mature organization.&lt;/p&gt;

&lt;p&gt;On any given morning in a startup, the President's tasks might include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Settling a dispute between engineering (ok; the one engineer you have hired) and &quot;product management&quot; (the one person who owns the product vision)&lt;/li&gt;
  &lt;li&gt;Editing copy on the website&lt;/li&gt;
  &lt;li&gt;Cleaning the bathroom&lt;/li&gt;
  &lt;li&gt;Arranging for food for the people that are staying late tonight&lt;/li&gt;
  &lt;li&gt;Worrying about funding and burn rate&lt;/li&gt;
  &lt;li&gt;Figuring out the go to market strategy&lt;/li&gt;
  &lt;li&gt;Negotiating strategic alliances&lt;/li&gt;
  &lt;li&gt;Having a conversation with a new hire about something uncomfortable like the fact that they smell and other staffers have complained (this actually happened to me)&lt;/li&gt;
  &lt;li&gt;Recruiting the next hire(s)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Getting a startup out of Stage Zero means solving a thousand, thousand problems both small and large.  And classical business training says that management is a specialized skill where you get to worry mostly about the big picture.  That simply isn't the case in a Stage Zero startup.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/12/03/what-is-the-president-s-role-in-a-stage-zero-startup.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/12/03/what-is-the-president-s-role-in-a-stage-zero-startup.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Starbase Indy / SBI Engineering Post Mortem for 2019</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9451.jpeg&quot; alt=&quot;IMG_9451.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This document is a &quot;post mortem&quot;.  I generally write these after any significant project I'm involved in ends.  The idea is to capture the good (What Worked), the bad (What Didn't Work) and the next (Changes for Next Year).  I am writing this as a public document on my personal blog so that it is accessible for next year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the very term SBI means nothing to you, dear reader, then just move on.  SBI is short for Starbase Indy, a local to Indianapolis, science fiction / star trek / STEM convention (con) held annually over Thanksgiving.  I headed up engineering for the con for 2019 when we deployed a new &quot;bridge&quot; (stage backdrop that looks like a starship bridge.  Here are some pictures for reference:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0443.jpeg&quot; alt=&quot;IMG_0443.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0407.jpeg&quot; alt=&quot;IMG_0407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0441-2.jpg&quot; alt=&quot;IMG_0441-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This last pic is courtesy of Samantha Waltz; Thank you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This document was written with assistance from my wife Shelley.  I could not have done this without her support and competent assistance.  Thank you.&lt;/p&gt;

&lt;h2 id=&quot;what-worked&quot;&gt;What Worked&lt;/h2&gt;

&lt;p&gt;Here's what worked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The new bridge looked amazing.&lt;/li&gt;
  &lt;li&gt;Attaching the bridge panels by zip ties was generally a huge success&lt;/li&gt;
  &lt;li&gt;Attaching the screens in front of the panels (as opposed to a cut thru, behind) was a success.  And it preserves our ability to upgrade / replace monitors if something happens to the current ones.&lt;/li&gt;
  &lt;li&gt;Applying gaffers tape to the intersection of the bridge panels was essential (thanks Dave).&lt;/li&gt;
  &lt;li&gt;The new decals for the bridge panels were lovely; thanks go out to Emily Grumble for design and implementation and Lillian Sams for the donation to fund them.&lt;/li&gt;
  &lt;li&gt;Joseph Campbell of &quot;Signs from the Emissary&quot; was a huge assistance in getting the bridge decals in place at the very last minute; thank you Joe!&lt;/li&gt;
  &lt;li&gt;Assembling the initial bridge components goes faster if you put them on their back.&lt;/li&gt;
  &lt;li&gt;Tear down was fast with a speed of 4 hours and 13 minutes from start to return of the U-Haul.&lt;/li&gt;
  &lt;li&gt;The 26 foot U-Haul truck is actually needed to transport everything.  Never rent smaller.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-didnt-work&quot;&gt;What Didn't Work&lt;/h2&gt;

&lt;p&gt;Here is what didn't work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The holes for attaching the bridge panels via zip ties aren't positioned well so getting them in in a few places kinda sucks; I doubt this can be fixed now but its annoying.&lt;/li&gt;
  &lt;li&gt;Knowing the order to attach the bridge panels in is key.  Our first attempt to assemble the panels was a complete fail.  Here is the right order: Keyboard Panels, Bottom Panels, Top Panels, Screen Panels (after the monitors have been affixed).&lt;/li&gt;
  &lt;li&gt;A 26 foot truck cannot be backed into the loading dock of the Indianapolis Wyndam East Ballroom.  Don't even try; just carry stuff down the ramp.&lt;/li&gt;
  &lt;li&gt;More people for the tear down would have been useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;changes-for-next-year&quot;&gt;Changes for Next Year&lt;/h2&gt;

&lt;p&gt;Here's what I'd change for next year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write assembly documentation / shoot assembly videos; only 1 person, for example, knew how to assemble the turbolift doors.&lt;/li&gt;
  &lt;li&gt;The holodeck arch is a disaster to assemble.  Either documentation or improvements are needed.  Having a set of videos that volunteers could watch before hand would be great.&lt;/li&gt;
  &lt;li&gt;The holodeck arch needs a better light diffuser than the piece of white butchers paper I shoved into it at the 11th hour.&lt;/li&gt;
  &lt;li&gt;I'd add black pinstripe tape to the vertical line where the zip ties go so we don't have to paint them furiously at the last minute.&lt;/li&gt;
  &lt;li&gt;We need to tell volunteers to bring work gloves.&lt;/li&gt;
  &lt;li&gt;Make public facebook events for setup and teardown to encourage participation.  Thank you Sooz for this idea.&lt;/li&gt;
  &lt;li&gt;A hand truck or dolly HAS TO GO TO THE STORAGE UNIT for load out / load in. We forgot this for load out and it was painful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank You's&lt;/h2&gt;

&lt;p&gt;In an epic management fail on my part, I do not have everyone's name to thank them but here's a try.  Thank you to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shelley Johnson&lt;/li&gt;
  &lt;li&gt;Timo Von Burkowski &quot;The Superstar At the Last Minute&quot;&lt;/li&gt;
  &lt;li&gt;Dave Mott&lt;/li&gt;
  &lt;li&gt;Johnny&lt;/li&gt;
  &lt;li&gt;Matt &quot;Dr. Picardo&quot;&lt;/li&gt;
  &lt;li&gt;Donna&lt;/li&gt;
  &lt;li&gt;Andy Sams&lt;/li&gt;
  &lt;li&gt;Chris Topher&lt;/li&gt;
  &lt;li&gt;Casey Huber&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My apologies to anyone I left out.  These are mostly the people who struck the set and did load out since my memory of setup is largely gone at this point.  If your name should be here and isn't then please reach out to me and I'll add it.&lt;/p&gt;

</description>
        <pubDate>Mon, 02 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/sbi/2019/12/02/starbase-indy-sbi-engineering-post-mortem-for-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sbi/2019/12/02/starbase-indy-sbi-engineering-post-mortem-for-2019.html</guid>
        
        <category>sbi</category>
        
        <category>con</category>
        
        
        <category>sbi</category>
        
      </item>
    
      <item>
        <title>Using a Cron Job to Run Rake Tasks Inside Your Docker Container</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9341.jpeg&quot; alt=&quot;IMG_9341.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite cron being an age old *nix technology, it alway seems like  scheduling tasks is an annoying thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;https://crontab.guru/&quot;&gt;Cron&lt;/a&gt; is the standard *nix technology for running tasks on a recurring basis like &quot;every monday at 5 am execute this program&quot;.&lt;/p&gt;

&lt;p&gt;We are now doing things like running tasks within containers and that raises the question of where does cron exist:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;within the container?&lt;/li&gt;
  &lt;li&gt;at the OS level?&lt;/li&gt;
  &lt;li&gt;what about multiple instances of the container across different machines?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not going to try and address the bigger picture questions here like multiple instances but I can show you how to use cron at the OS level to drive a rake task within a container.&lt;/p&gt;

&lt;h2 id=&quot;how-do-you-run-something-within-in-a-container&quot;&gt;How Do You Run Something Within in a Container&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that you can easily execute a shell with in a container, from the outside, with this syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it CONTAINER_HASH /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The CONTAINER_HASH is the docker equivalent of a *nix pid (process identifier).&lt;/p&gt;

&lt;h2 id=&quot;how-to-run-a-rake-task&quot;&gt;How to Run a Rake Task&lt;/h2&gt;

&lt;p&gt;And if you can run a shell like /bin/bash within a container from the outside then, &lt;em&gt;drum roll please&lt;/em&gt;, you can easily run anything from outside including a Rake task.  And if you have that then you can easily schedule it.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it 8d76da4ab481  bundle exec rake data_source:update_or_initial_load --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The 8d76da4ab481, shown above, is an example of the CONTAINER_HASH.&lt;/p&gt;

&lt;h2 id=&quot;but-docker-container-hashes-change&quot;&gt;But Docker Container Hashes Change…&lt;/h2&gt;

&lt;p&gt;If you think about this a bit there is one real problem – that damn CONTAINER_HASH isn't consistent.  It changes every time the container is restarted.  The trick to making a cron job that runs your rake task is to use a shell script which pulls the container hash dynamically.  And to figure that you we are going to start with my &lt;a href=&quot;https://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html&quot;&gt;dockerbash blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the shell script from the dockerbash post:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You need to specify the name of the container you want to get into like:&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dockerbash police&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | grep &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; /bin/bash
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's create another shell script calling it, say, docker_datasource_update:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | grep police | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rake data_source:update_or_initial_load --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is for an application which has the word 'police' in its name hence the above grep for the word police.&lt;/p&gt;

&lt;p&gt;Let's say that this is now stored in /usr/local/bin/docker_datasource_update.  You then need to write a cron job to call it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# m h  dom mon dow   command
0 7 * * * /usr/local/bin/docker_datasource_update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Add the crontab above with &lt;strong&gt;crontab -e&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/29/using-a-cron-job-to-run-rake-tasks-inside-your-docker-container.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/29/using-a-cron-job-to-run-rake-tasks-inside-your-docker-container.html</guid>
        
        <category>docker</category>
        
        <category>rails</category>
        
        <category>rake</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>How to Win the Thanksgiving Meal War</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0476.jpeg&quot; alt=&quot;IMG_0476.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I'm a software engineer by profession with a history of large scale project management and a focus on dependency management.  I'm also a food nerd so I take the holiday meal seriously; perhaps too damn seriously.  Apologies ???  But seriously, just one of these tips may make your holiday meal cooking easier.  See the second bulleted list for the tldr (&quot;too long; did not read&quot;).&lt;/p&gt;

&lt;p&gt;There's no question in my mind that cooking the Thanksgiving meal is the &lt;em&gt;World War II&lt;/em&gt; of holiday meals.  When you have other holidays there is a focus besides the food:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Christmas has presents&lt;/li&gt;
  &lt;li&gt;Easter has religious significance&lt;/li&gt;
  &lt;li&gt;Passover has religious significance&lt;/li&gt;
  &lt;li&gt;Fourth of July has patriotism and parades&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But Thanksgiving is a celebration that is about the food as it is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Harvest_festival&quot;&gt;harvest festival&lt;/a&gt;.  And with the propensity that people have for wanting their particular, favorite side dish, that only increases the focus on cooking.  And that's why, every year, I feel as if making the Thanksgiving meal is my &quot;go to war&quot; meal (and I don't mind that; it is my favorite meal to cook all year long).&lt;/p&gt;

&lt;p&gt;As I write this, I'm preparing to make my 16th consecutive Thanksgiving meal for my wife and children.  And, over, these many, many years, I have developed a number of techniques that make cooking the Thanksgiving meal much, much easier.&lt;/p&gt;

&lt;p&gt;Here are my recommendations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Print Out Recipes in Advance&lt;/li&gt;
  &lt;li&gt;Plan Your Heat Sources&lt;/li&gt;
  &lt;li&gt;The Longest Cooking Time is Your Biggest Constraint&lt;/li&gt;
  &lt;li&gt;Plan Your Timings&lt;/li&gt;
  &lt;li&gt;Plan Who Does What&lt;/li&gt;
  &lt;li&gt;Food Allergies and Practicality&lt;/li&gt;
  &lt;li&gt;Buy an Alexa and Use it for Timings&lt;/li&gt;
  &lt;li&gt;Do Prep Work on Tuesday / Wednesday&lt;/li&gt;
  &lt;li&gt;Wash Dishes Continuously&lt;/li&gt;
  &lt;li&gt;Set a Place for Each Thing You Are Cooking&lt;/li&gt;
  &lt;li&gt;Check the Microwave Before You Sit Down&lt;/li&gt;
  &lt;li&gt;Buy Extra Tupperware To Send Leftovers Away&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these is covered further below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I could easily have titled this article &quot;How an Engineer Cooks Thanksgiving&quot; or, even, &quot;How a Very, Very Nerdy Engineer with a Background in Project Management and Dependencies Cooks Thanksgiving&quot;.  Here's a picture of a cute cat to make up for the massive upcoming descent into food nerd-dom:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9444.jpeg&quot; alt=&quot;IMG_9444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;print-out-recipes-in-advance&quot;&gt;Print Out Recipes in Advance&lt;/h2&gt;

&lt;p&gt;If you buy into my assertion that Thanksgiving is the World War II of holiday cooking then recipes are your &lt;strong&gt;tactical maps&lt;/strong&gt;.  Your recipes guide your way through the holiday meal and as with maps, you want a &lt;strong&gt;printed copy&lt;/strong&gt;.  Yes a phone is great.  A laptop or tablet is even better.  But when the power goes out -or- the Internet goes offline, don't you want paper?  And do you really want gravy spilled on your screen?  Make a print out of every recipe you want to cook – &lt;strong&gt;before&lt;/strong&gt; you start cooking.&lt;/p&gt;

&lt;h2 id=&quot;plan-your-heat-sources&quot;&gt;Plan Your Heat Sources&lt;/h2&gt;

&lt;p&gt;Your primary constraint in cooking a big holiday meal is always, &lt;em&gt;always&lt;/em&gt;, &lt;strong&gt;always&lt;/strong&gt; the number of &lt;em&gt;heat sources&lt;/em&gt;.  If you think about it, most kitchens have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 oven&lt;/li&gt;
  &lt;li&gt;4 burners (and not all of them tend to work)&lt;/li&gt;
  &lt;li&gt;1 microwave&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider the problem of the turkey and the pies.  All of these require the oven and the turkey requires exclusive use of the oven for an extended period.  Understanding what heat sources you have and how long each dish using them for is important.  What I do is make a list of all the dishes with a plan for what heat source that each dish uses.  Here's a picture of what this looked like a few years ago:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: An outdoor grill can be used to keep food warm if needed.  And outdoor grills with side burner are an additional burner!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Reviewer Ariane Woods made the cogent observation &quot;I'll also add that smoking my turkey has been a game changer as it frees up an oven&quot;.  As someone who is a recovered member of the &quot;Cult of the Smoked Turkey&quot;, I can attest to the truth of this statement.  Another option in this vein is the (insanely dangerous) deep fried turkey.&lt;/p&gt;

&lt;h2 id=&quot;the-longest-cooking-time-is-your-biggest-constraint&quot;&gt;The Longest Cooking Time is Your Biggest Constraint&lt;/h2&gt;

&lt;p&gt;When I plan a big holiday meal, I always orient it around the &lt;strong&gt;single longest cooking time&lt;/strong&gt;.  And, for Thanksgiving, that's pretty simple – it is the turkey.  So I start with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Turkey - 4 Hours at 350 (or whatever)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I then use that to structure &lt;strong&gt;everything&lt;/strong&gt; so:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For a 2 pm meal, the turkey needs to start at 10 am.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And there are related dependencies:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gravy uses turkey drippings and takes roughly 15 minutes so that 10 am needs to become 9:45.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, finally, pre-heating is a reality so you get:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Start preheating the oven at 9:30&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;plan-your-timings&quot;&gt;Plan Your Timings&lt;/h2&gt;

&lt;p&gt;With the exception of soups, stews and desserts that need to chill, the best food is always food that is finished cooking just when you are ready to eat it.  The problem here, is that given the constraints above on heat sources, you simply can't have all the dishes becoming ready at exactly the right time.  And this is ok – depending on the dish.  Here's an example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mashed potatoes pretty much don't degrade over time so they can be made almost whenever.&lt;/li&gt;
  &lt;li&gt;Gluten free gravy has a tendency to sometimes become close to solid after it sits for a long time so gluten free gravy is always the last thing I prepare&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plan-who-does-what&quot;&gt;Plan Who Does What&lt;/h2&gt;

&lt;p&gt;I don't know any adult who would disagree with the statement that &lt;em&gt;holidays are stressful&lt;/em&gt;.  One of the ways to manage the stress is to plan out who does what in the kitchen.  This way you can avoid the difficult relative who wants to help all over the place when they are actually only skilled at a few things.  I call this the &quot;No, Aunt Martha, I need you on whipped cream; that's what's on my schedule.&quot; school of thinking.&lt;/p&gt;

&lt;h2 id=&quot;the-master-spreadsheet&quot;&gt;The Master Spreadsheet&lt;/h2&gt;

&lt;p&gt;This year's Thanksgiving is now up to 12 people definite, a few people that may show up and over &lt;em&gt;insert large number here&lt;/em&gt; food dishes broken out into these categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appetizers&lt;/li&gt;
  &lt;li&gt;Protein&lt;/li&gt;
  &lt;li&gt;Sides&lt;/li&gt;
  &lt;li&gt;Libations&lt;/li&gt;
  &lt;li&gt;Breads&lt;/li&gt;
  &lt;li&gt;Desserts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd like to say that this doesn't require a spreadsheet to stay organized – but it does.  &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1up7YK4TyjXYO08rpmN1wId3YiuZUPplgw1y-RtCDtjc/edit?usp=sharing&quot;&gt;Enjoy the Madness&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;food-allergies-and-practicality&quot;&gt;Food Allergies and Practicality&lt;/h2&gt;

&lt;p&gt;If you have people in your life with food allergies such as gluten free / celiac, then, at a minimum, you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Understand the rules of what can touch what&lt;/li&gt;
  &lt;li&gt;Always have plenty of clean food handling implements&lt;/li&gt;
  &lt;li&gt;Know when to have clean butter (the most common contamination issue)&lt;/li&gt;
  &lt;li&gt;Use &lt;strong&gt;gravity&lt;/strong&gt; to help you – place bready things such as dinner rolls in the oven &lt;em&gt;below&lt;/em&gt; anything that might get contaminated as crumbs don't generally fall up&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;buy-an-alexa-and-use-it-for-timings&quot;&gt;Buy an Alexa and Use it for Timings&lt;/h2&gt;

&lt;p&gt;The single best thing I've done, in the past 5 years, to make cooking easier was to buy an Alexa.  When you are juggling multiple dishes, the ability to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alexa set a 30 minute timer named &quot;Pecan Pie&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;just makes everything so, so, so much easier.  If you don't have an Alexa in your kitchen before you make a holiday meal, you re really making your life harder.&lt;/p&gt;

&lt;h2 id=&quot;set-a-place-for-each-thing-you-cook&quot;&gt;Set a Place for Each Thing You Cook&lt;/h2&gt;

&lt;p&gt;This tip is stupid simple but it actually makes a difference.  When you are making a lot of different dishes (my Thanksgiving is embarrassingly large at 15 dishes; yes I could each different pie as a different dish), it is very, very helpful to &quot;set a place&quot; for each dish.  What I mean by this is you take a half sheet of paper, label it for the dish and then place all the ingredients for that dish on that half sheet of paper.  Here's a photo of how this looks:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I will admit that this uses a lot of physical space and you may see it as a pain in the neck.  The advantage of this is that you will never forget to cook something because there is a physical reminder that you simply can't ignore.  This means, for example, that Aunt Edna will get her beloved green bean casserole.&lt;/p&gt;

&lt;h2 id=&quot;check-the-microwave-before-you-sit-down&quot;&gt;Check the Microwave Before You Sit Down&lt;/h2&gt;

&lt;p&gt;The very last thing we cook every year is we put a can of corn in the microwave and put it on 1 minute.  We then scurry around like frenetic hobbits chanting &quot;Foods!  The Foods are coming&quot; and sit down at the table.  And we promptly forget about the damn corn.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;buy-extra-tupperware-to-send-leftovers-away&quot;&gt;Buy Extra Tupperware To Send Leftovers Away&lt;/h2&gt;

&lt;p&gt;When you make as much food as I do, one of the better tricks to avoid &quot;Fridge Capacity Crisis&quot; is to buy a bunch of extra Tupperware and then send people home with food i.e. &quot;Enjoyed the Mashed Potatoes, Great!  Here you go!&quot;. If you are really creative, you can make up mini meal plates for each guest and and them home with all of it.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/cooking/2019/11/27/how-to-win-the-thanksgiving-meal-war.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cooking/2019/11/27/how-to-win-the-thanksgiving-meal-war.html</guid>
        
        <category>cooking</category>
        
        <category>thanksgiving</category>
        
        <category>holiday</category>
        
        
        <category>cooking</category>
        
      </item>
    
      <item>
        <title>Using Eternal Terminal with OSX and AWS Including Ansible Support</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9163.jpeg&quot; alt=&quot;IMG_9163.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I know, I know – it is 2019 and we're not supposed to be SSH'ing into boxes – but, really, you're going to do it anyway.  And if you are going to ssh into boxes then, for heaven's sake, let's get rid of that stupidity that is your SSH terminal disconnecting whenever there is a simple blip in connectivity.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://eternalterminal.dev/&quot;&gt;Eternal Terminal&lt;/a&gt;, ET, is a mature Open Source project that purports to solve SSH disconnects.  I say &quot;purports&quot; because I have only just installed it and this blog post is my proof of concept to see how well it works.  I'm essentially SSH'd into some box or another roughly 10 to 12 hours a day, 5 to 7 days a week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can strike purports in the above paragraph.  I've now been using Eternal Terminal though a variety of network conditions including changing my wifi connection with long running processes and it works great. I do not understand the deviltry that drives this pretty damn amazing bit of software but I sure do like it.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Here's what you need to do to use ET on a local OSX to remote AWS context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You need to install ET (client) on your OSX box.&lt;/li&gt;
  &lt;li&gt;You need to install ET (server) on your Linux server.&lt;/li&gt;
  &lt;li&gt;You need to start ET (server) on your Linux server.&lt;/li&gt;
  &lt;li&gt;You need to open port 2022 on your AWS security group.&lt;/li&gt;
  &lt;li&gt;You need to adjust your SSH login statements.&lt;/li&gt;
  &lt;li&gt;You may want to use an Ansible Playbook to install ET on your server.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;installing-et-on-osx&quot;&gt;Installing ET on OSX&lt;/h3&gt;

&lt;p&gt;Here's how to install ET on OSX:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install MisterTea/et/et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;installing-et-on-your-server&quot;&gt;Installing ET on your Server&lt;/h3&gt;

&lt;p&gt;Here's how to install ET on Ubuntu:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install -y software-properties-common
sudo add-apt-repository ppa:jgmath2000/et
sudo apt-get update
sudo apt-get install et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;starting-eternal-terminal-on-your-server&quot;&gt;Starting Eternal Terminal on Your Server&lt;/h3&gt;

&lt;p&gt;After installation, ET should start automatically.  You can check its status with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You should see something like this if ET is running:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;● et.service - Eternal Terminal
   Loaded: loaded (/lib/systemd/system/et.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2019-11-26 21:37:24 UTC; 22min ago
  Process: 6052 ExecStart=/usr/bin/etserver --daemon --cfgfile=/etc/et.cfg (code=exited, status=0/SUCCESS)
 Main PID: 6061 (etserver)
    Tasks: 10 (limit: 4915)
   CGroup: /system.slice/et.service
           └─6061 /usr/bin/etserver --daemon --cfgfile=/etc/et.cfg

Nov 26 21:37:23 ip-172-31-3-194 systemd[1]: Starting Eternal Terminal...
Nov 26 21:37:23 ip-172-31-3-194 systemd[1]: et.service: Can't open PID file /var/run/etserver.pid (yet?) after
Nov 26 21:37:24 ip-172-31-3-194 systemd[1]: Started Eternal Terminal.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;opening-port-2022-on-your-security-group&quot;&gt;Opening Port 2022 on Your Security Group&lt;/h3&gt;

&lt;p&gt;Eternal Terminal on the server relies on port 2022 being open.  This needs to be done at your AWS security group.  Here's how to do this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into console.aws.amazon.com in a browser.&lt;/li&gt;
  &lt;li&gt;Go into EC2 instances.&lt;/li&gt;
  &lt;li&gt;Open Security Groups from the sidebar.&lt;/li&gt;
  &lt;li&gt;Select the Inbound tab.&lt;/li&gt;
  &lt;li&gt;Click the Edit button.&lt;/li&gt;
  &lt;li&gt;Click the Add Rule button.&lt;/li&gt;
  &lt;li&gt;In the Port Range field enter &lt;strong&gt;2022&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In the source field, enter &lt;strong&gt;0.0.0.0/0&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Click the Save button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;changing-your-ssh-login-statement&quot;&gt;Changing Your SSH Login Statement&lt;/h3&gt;

&lt;p&gt;My normal ssh statement looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -i &quot;~/Downloads/adl_fuzzygroup.pem&quot; ubuntu@xx.yy.zz.aa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To use ET, you need to have a &quot;ssh statement&quot; like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;et ubuntu@xx.yy.zz.aa -i &quot;~/Downloads/adl_fuzzygroup.pem&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;an-ansible-playbook-to-automate-server-setup&quot;&gt;An Ansible Playbook to Automate Server Setup&lt;/h3&gt;

&lt;p&gt;If you have more than one server on AWS, you should be using a DevOps tool like Ansible to automate machine setup.  Here's a sample playbook:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---

- name: Configure servers for use with Eternal Terminal
  hosts: all
  become: true
  remote_user: ubuntu
  tasks:
    - name: Install system packages
      apt: pkg= state=latest install_recommends=no
      with_items:
        - software-properties-common

    - name: Add Ansible PPA
      apt_repository: repo=&quot;ppa:jgmath2000/et&quot; update_cache=no

    - name: Update APT cache
      apt: update_cache=yes

    - name: Install system packages
      apt: pkg= state=latest install_recommends=no
      with_items:
        - et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save the above to playbook_install_et.yml and then run it with a statement like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-playbook -i inventories/inventory.txt playbook_install_et.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternalterminal.dev/&quot;&gt;Eternal Terminal Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MisterTea/EternalTerminal&quot;&gt;Github Eternal Terminal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21640200&quot;&gt;Hacker News Discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/11/26/using-eternal-terminal-with-osx-and-aws-including-ansible-support.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/11/26/using-eternal-terminal-with-osx-and-aws-including-ansible-support.html</guid>
        
        <category>aws</category>
        
        <category>eternal_terminal</category>
        
        <category>osx</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>When You Forget Your Branch Name Use Git Reflog</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9456.jpeg&quot; alt=&quot;IMG_9456.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For my current side project, cmn, I'm using a version control model of issue branches as described &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;here&lt;/a&gt; back in June (about when I started this).  Basically the model is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The master branch is always pristine and always deployable.&lt;/li&gt;
  &lt;li&gt;The develop branch takes changes from issue branches and is then merged into master by a CI server.&lt;/li&gt;
  &lt;li&gt;Anything you work on, no matter how small, gets a github issue and goes thru a pull request approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've never been a real big fan of structured engineering approaches and my last boss, Taylor Williams, did a fantastic job of teaching us this and – &lt;strong&gt;he was right&lt;/strong&gt;.  Even on a small side project, there are definite benefits to solid, well defined workflow processes.&lt;/p&gt;

&lt;p&gt;One disadvantage when you work this way is that you end up with a &lt;strong&gt;lot of branches&lt;/strong&gt;.  And since branches tend to be named for the issue, it isn't always apparent the difference between say 444 and 445.  When branches are transitory such as &quot;fix this bug&quot;, that isn't a big deal.  But when a branch is longer lived, because it just can't be completed in a short period of time, you are likely to simply &lt;em&gt;forget&lt;/em&gt; the branch name.&lt;/p&gt;

&lt;p&gt;As an example, last Thursday night, I started work on a pretty complex enhancement and then a new bug came up Friday morning.  My response was to do an add / commit and then change back to develop and create a new issue and fix that bug.  And, somehow, between Friday morning and tonight, Monday night, the issue number has jumped by 30 issues (if you work this way then you make a lot of issues).  So I went to find the branch and I simply couldn't.  I was at 480 and I looked back at the Github Issues page and I thought it might have been 460 but that turned out not to be it.&lt;/p&gt;

&lt;p&gt;As I thought about it, I realized that I knew when I last worked on it, the preceding Thursday, and there had to be a way to to look at branches by date created.  A bit of &lt;a href=&quot;https://stackoverflow.com/questions/2255416/how-to-determine-when-a-git-branch-was-created&quot;&gt;Internet research&lt;/a&gt; led me to the &lt;strong&gt;git reflog&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git reflog --date=local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is an example of reflog's output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;e95bf81 HEAD@{Fri Nov 22 09:14:34 2019}: checkout: moving from 460 to develop
fdf7336 HEAD@{Fri Nov 22 09:13:09 2019}: commit: rollup commit
367d9bd HEAD@{Fri Nov 22 09:13:01 2019}: checkout: moving from 458 to 460
367d9bd HEAD@{Fri Nov 22 08:45:15 2019}: commit: rollup commit on habit buddy changes
e95bf81 HEAD@{Fri Nov 22 08:28:30 2019}: checkout: moving from develop to 458
e95bf81 HEAD@{Thu Nov 21 21:13:39 2019}: checkout: moving from 444 to develop
2a11c54 HEAD@{Thu Nov 21 21:13:17 2019}: commit: Rollup on multiple metrics; resume with derived metric
e95bf81 HEAD@{Thu Nov 21 10:12:54 2019}: checkout: moving from develop to 444
e95bf81 HEAD@{Wed Nov 20 14:42:30 2019}: pull origin develop: Fast-forward
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The work had been in the area of multiple metrics so this showed me that it was branch 444.  So a quick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git co 444
git merge develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;bought my branch up to date so I could resume working on it.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/11/25/when-you-forget-your-branch-name-use-git-reflog.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/11/25/when-you-forget-your-branch-name-use-git-reflog.html</guid>
        
        <category>git</category>
        
        <category>cmn</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Using Github Hub to Create an Issue and Streamline Your Branch Workflow</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9487.jpeg&quot; alt=&quot;IMG_9487.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My git workflow is pretty simple.  Here are the tasks and (where I do them):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an issue that logs what I'm working on  (github website)&lt;/li&gt;
  &lt;li&gt;Use the issue's id number to make a branch (command line)&lt;/li&gt;
  &lt;li&gt;Work on the branch (editor)&lt;/li&gt;
  &lt;li&gt;Add / Commit / Push to the Branch (command line)&lt;/li&gt;
  &lt;li&gt;Create a Pull Request (github website)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Github has a tool called &lt;a href=&quot;https://hub.github.com/&quot;&gt;Github Hub&lt;/a&gt; - &lt;a href=&quot;https://news.ycombinator.com/item?id=20372770&quot;&gt;Hacker News Discussion Thread&lt;/a&gt; -  which allows you to do more operations on the command line than the normal, canonical git actions (add / commit / push).  Henceforth I will be referring to this tool as &lt;strong&gt;hub&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installing-github-hub-on-osx&quot;&gt;Installing Github Hub on OSX&lt;/h2&gt;

&lt;p&gt;To install hub on OSX, you can use brew:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install hub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;if-you-cant-login&quot;&gt;If You Can't Login&lt;/h2&gt;

&lt;p&gt;My first usage of github hub was actually fairly crappy:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hub issue create -m &quot;Update Faq for Why Do Things Appear on the Dashboard&quot;
Error creating issue: Unauthorized (HTTP 401)
Bad credentials
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you hit this error then the first result is a &lt;a href=&quot;https://github.com/github/hub/issues/1067&quot;&gt;very long Github Issues&lt;/a&gt; page.  The long and the short of it is that you need to delete hub's config file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm ~/.config/hub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After this delete, any operation should cause hub to ask you to log in.  And, yes, hub does support Github's two factor authentication so there is that to contend with also.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you still can't use hub after deleting this file then you may have credentials defined in a shell config file like .zshrc or .bashrc.  Read the above linked issue for more.  You also might have better understanding by using the verbose option:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HUB_VERBOSE=1 hub issue create &quot;Update Faq for Why Do Things Appear on the Dashboard&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;and-creating-an-issue&quot;&gt;And Creating an Issue&lt;/h2&gt;

&lt;p&gt;Use the -m flag to create the issue with a title.  This avoids hub opening an editor (which is fine but slows down the process and using hub is to avoid the slowdown):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hub issue create -m &quot;Automate Checking RSS Feeds&quot;
https://github.com/gochangeme/web_change_me_now/issues/465
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And there you have an issue number so now you can can just:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch 465
git co 465
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, yes, I suspect there is a compound command which creates a branch and changes into it in one operation.  I personally prefer to use github via &quot;atomic&quot; commands so if I make a mistake, I can more easily correct recover from it.&lt;/p&gt;

&lt;h2 id=&quot;heres-what-you-can-do-with-hub&quot;&gt;Here's What You Can Do With Hub&lt;/h2&gt;

&lt;p&gt;Here's what you can do with hub (from hub –help):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;api            Low-level GitHub API request interface
browse         Open a GitHub page in the default browser
ci-status      Show the status of GitHub checks for a commit
compare        Open a compare page on GitHub
create         Create this repository on GitHub and add GitHub as origin
delete         Delete a repository on GitHub
fork           Make a fork of a remote repository on GitHub and add as remote
issue          List or create GitHub issues
pr             List or checkout GitHub pull requests
pull-request   Open a pull request on GitHub
release        List or create GitHub releases
sync           Fetch git objects from upstream and update branches
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I can easily see myself using pull-request once I get comfortable with issue as I'm already seeing the workflow benefits to hub.  Thank you Gitub!&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/11/24/using-github-hub-to-create-an-issue-and-streamline-your-branch-workflow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/11/24/using-github-hub-to-create-an-issue-and-streamline-your-branch-workflow.html</guid>
        
        <category>git</category>
        
        <category>software_engineering</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Understanding Docker Multi Stage Builds - Installing Python and Ruby in the Same Dockerfile</title>
        <description>&lt;p&gt;Now that I've come up to speed on Python, I have an application in production that uses both Python and Ruby.  What it does isn't really important but getting it live posed an interesting deployment challenge due to the need to have both Python and Ruby concurrently.&lt;/p&gt;

&lt;p&gt;My initial attempt to make this was work was a native install using Python 3.7 and a fairly large set of Python dependencies on an Ubuntu 18.04 AWS instance.  Unfortunately I kept hitting issues where, well, things just went to hell.  This had me turn to Docker and my thinking was that I should be able to easily build a Dockerfile that supported both Python and Rails.  &lt;em&gt;chuckle&lt;/em&gt;.  Nothing in Docker is actually easy but I got there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reason I needed Python is I was building a &lt;a href=&quot;https://github.com/twintproject/twint&quot;&gt;Twitter&lt;/a&gt; related application and I needed to use the truly excellent Twint library / executable.&lt;/p&gt;

&lt;h2 id=&quot;python-dockerfile-attempt-1&quot;&gt;Python Dockerfile Attempt 1&lt;/h2&gt;

&lt;p&gt;I don't have a full record of this but I tried to pull in a traditional Python install using apt-get.  This worked fairly horribly for reasons that escape me.&lt;/p&gt;

&lt;h2 id=&quot;welcome-to-overlays-and-multiple-from-statements&quot;&gt;Welcome to Overlays and Multiple From Statements&lt;/h2&gt;

&lt;p&gt;My first attempt to make this work failed to work and it failed to really adopt the zen of Docker.  One of the very cool features is that you can build up a Docker container with bits from different containers by using &lt;strong&gt;multiple&lt;/strong&gt; from statements.  This lets you have something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y

FROM ubuntu:latest
FROM ruby:2.6.4-stretch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The term for this is a &lt;a href=&quot;https://dev.to/brpaz/using-docker-multi-stage-builds-during-development-35bc&quot;&gt;Docker Multi Stage Build&lt;/a&gt;.  The trick here is that the output from each FROM statement is logically isolated from each other.  The reason for this is actually pretty simple – standard directory structures.  Given that most *nix environments use similar top level structures like /opt, you simply can't combine things blindly – it needs to be an intentional choice using, &lt;strong&gt;drumroll&lt;/strong&gt;, &lt;strong&gt;copy&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Here's what this multi stage build stuff looked like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda
RUN pip install twint

# The Ruby Stuff Starts Here
FROM ubuntu:latest
FROM ruby:2.6.4-stretch

# This Is The Magic Here 
COPY --from=python /opt/conda/bin/twint /usr/bin
RUN mkdir -p /opt/conda/bin/
COPY --from=python /opt/conda /opt/conda/
COPY --from=python /opt/conda/bin/python /opt/conda/bin/python
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The last block of lines above show the process of copying from python (the FROM line at the top is named with the &quot;AS python&quot;) and there are two copy statements that were really necessary:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The twint executable needed to be copied to something in the path.  I chose /usr/bin.&lt;/li&gt;
  &lt;li&gt;Since the twint &quot;executable&quot; is written in python, the entire python supporting libraries needed to come with it.  Since this was located in /opt/conda originally and nothing in Ruby used that path, I could simply copy all of it from the python container over to the ruby container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I tried a few different ways to do the copy and I never narrowed it down to which copy statement was exactly needed.  Apologies.  I suspect it should be nothing but &quot;COPY –from=python /opt/conda /opt/conda/&quot; but Docker's documentation on COPY was less than helpful.&lt;/p&gt;

&lt;h2 id=&quot;figuring-out-where-twint-existed&quot;&gt;Figuring Out Where twint Existed&lt;/h2&gt;

&lt;p&gt;The section above is interesting but it relies on one specific bit of knowledge – where the heck that the Twint executable comes from.  And while I might know this for my local environment, I had no idea where it would be installed in a conda environment.  Fortunately the answer was actually pretty easy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a cut down version of this Dockerfile&lt;/li&gt;
  &lt;li&gt;Build it&lt;/li&gt;
  &lt;li&gt;Shell into it and then use ls and which to find things&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how I did this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/twint
touch ~/twint/Dockerfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Docker likes to build directories mostly so it was just easier to give it a directory of its own with a single Dockerfile in it.&lt;/p&gt;

&lt;p&gt;The next step was to edit the Dockerfile and add the following lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM ruby:2.6.5-ubuntu
FROM continuumio/miniconda3:latest

RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda

RUN pip install twint
# This trick keeps the container running so you can shell into it
RUN while true; do sleep 1000; done
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once I had this written, I could do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build twint
docker ps | grep twint
docker exec CONTAINER_HASH -it /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then I was able to use a combination of ls and which to find the twint binary and gather the information needed for the copy statements above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This technique of generating a small Dockerfile and using it for diagnostic purposes is pretty powerful.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;a-working-python-and-rails-dockerfile-with-twint-support-via-conda&quot;&gt;A Working Python and Rails Dockerfile with Twint Support via Conda&lt;/h2&gt;

&lt;p&gt;Here is how it all came together:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# All The Python Stuff
FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda
RUN pip install twint

# The Ruby Stuff Starts Here
FROM ubuntu:latest
FROM ruby:2.6.4-stretch

RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y git
RUN apt-get install -y ruby
RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev
RUN apt-get install -y nodejs

# This Is The Magic Here 
COPY --from=python /opt/conda/bin/twint /usr/bin
RUN mkdir -p /opt/conda/bin/
COPY --from=python /opt/conda /opt/conda/
COPY --from=python /opt/conda/bin/python /opt/conda/bin/python

RUN mkdir /app
WORKDIR /app

# Install yarn
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y apt-transport-https
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y yarn

COPY Gemfile Gemfile.lock ./
RUN bundle install --binstubs

ENV secret_key_base SOMEKEY

ENV RAILS_ENV production
ENV DB_NAME SOMETHING
ENV DB_USERNAME SOMEUSER
ENV DB_PASSWORD A_PASSWORD
ENV DB_HOST a_host

COPY . .

RUN bundle exec rake RAILS_ENV=production DATABASE_URL=mysql2://user:pass@127.0.0.1/dbname SECRET_TOKEN=dummytoken assets:precompile

CMD puma -C config/puma.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ubuntu-not-alpine&quot;&gt;Ubuntu Not Alpine&lt;/h2&gt;

&lt;p&gt;Yes, yes, yes, I know that I really should have used Alpine.  I started from Ubuntu because I know it well and the additional overhead of Ubuntu wasn't an issue for this product (a small internal application).&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/22/understanding-docker-overlays-multiple-from-statements.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/22/understanding-docker-overlays-multiple-from-statements.html</guid>
        
        <category>docker</category>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Making Your Jekyll Blog Searchable with HTML, JavaScript and Google</title>
        <description>&lt;p&gt;So yesterday someone said this to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know the problem with your blog – you write so much and its not searchable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Poppycock.  Balderdash.  Fizzle Sticks.  Ok. Maybe.  Yes there's not search box at the top of my blog but anything on the Internet that has a distinct domain name is actually easily searchable just by using Google.  For example, here's how you'd find anything I ever wrote about MySQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;site:fuzzyblog.io mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you copy and paste that into google then you're get a search of my site for anything I ever wrote about mysql.&lt;/p&gt;

&lt;p&gt;If we wanted to make this a &quot;feature&quot; of my blog then we would need to do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an HTML form which has a search box and a search button.&lt;/li&gt;
  &lt;li&gt;We'd need some JavaScript to handle assembling the query and sending it to Google.&lt;/li&gt;
  &lt;li&gt;We'd need to integrate it with Jekyll&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1-a-basic-html-form&quot;&gt;Step 1: A Basic HTML Form&lt;/h2&gt;

&lt;p&gt;Here's a basic html form:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.com/search&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;do_search();&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-2-javascript&quot;&gt;Step 2: JavaScript&lt;/h2&gt;

&lt;p&gt;Here's the JavaScript:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;do_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;site:fuzzyblog.io &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.google.com/search?q=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this does is take the query in the search field and assign it to a variable.  It then merges it with the &quot;site:fuzzyblog.io&quot; bit of Google syntax.  And, yes, there might be an issue with multi word queries needing to be joined with the + character (that's how HTML rolls but Google is generally pretty flexible).  I'd test this now and rewrite the query but I'm in an aluminum tube at 35,000 feet without any access to Google (or most developer documentation). The final step is to set document.location to the google url for the search.  That forces the query to execute and positions the user on the Google results page.&lt;/p&gt;

&lt;h2 id=&quot;step-3-jekyll-integration&quot;&gt;Step 3: Jekyll Integration&lt;/h2&gt;

&lt;p&gt;In order to integrate this with Jekyll, we need to modify two files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;_includes/head.html&lt;/li&gt;
  &lt;li&gt;_layouts/default.html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The _includes directory holds html templates for the html HEAD element, the header of every page and the footer of every page.  The file head.html needed to be modified to include the JavaScript.&lt;/p&gt;

&lt;p&gt;The _layouts directory holds the html layout files used for content display so that's where the search form needs to be displayed.&lt;/p&gt;

&lt;h2 id=&quot;step-4-success&quot;&gt;Step 4: Success!&lt;/h2&gt;

&lt;p&gt;Here's how it looks without much work at all on usability:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/search.png&quot; alt=&quot;search.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is about as simple an approach to search as you can get:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Free&lt;/li&gt;
  &lt;li&gt;Google might put ads on the results&lt;/li&gt;
  &lt;li&gt;No control over search results presentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it is free, easy to understand and should work for almost anybody.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/11/22/making-your-jekyll-blog-searchable-with-html-javascript-and-google.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/11/22/making-your-jekyll-blog-searchable-with-html-javascript-and-google.html</guid>
        
        <category>search</category>
        
        <category>jekyll</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>If You Pair Program Buy Tuple Now</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9350.jpeg&quot; alt=&quot;IMG_9350.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I've written in the past, I am an unabashed fan of pair programming.  Pair programming is one of the few techniques that I can credibly point to that really, really, really improves software quality.  And since I'm a remote developer, I really, really need good pairing tools.  The unfortunate reality of pair programming is that there really aren't good tools for pairing – until Tuple.&lt;/p&gt;

&lt;p&gt;The current suite of tools for pairing include things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google Hangouts / Google Meet - slow, craptastic user interface&lt;/li&gt;
  &lt;li&gt;Skype - don't get me started; Microsoft gutted Skype and left it for dead in a alley&lt;/li&gt;
  &lt;li&gt;Slack - only available on paid slack; slow, uses a lot of CPU&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While there have been good tools for pairing in the past, notably ScreenHero and Apple Remote Desktop, none of these tools are available today.  ScreenHero got bought by Slack and &quot;integrated&quot; while Apple Remote Desktop, well, I seem to have been the only user who remembers it.&lt;/p&gt;

&lt;p&gt;The current tool I'm using is &lt;a href=&quot;https://tuple.app/&quot;&gt;Tuple&lt;/a&gt; and it is simply &lt;strong&gt;outstanding&lt;/strong&gt;.  Here are some of the reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It just works.  For pairing to be something that you just do on an ad hoc basis, the tool needs to be utterly unobtrusive.  Tuple is brilliantly in its minimalism.&lt;/li&gt;
  &lt;li&gt;It doesn't slow everything on the machine to a crawl.&lt;/li&gt;
  &lt;li&gt;The audio quality is fantastic.&lt;/li&gt;
  &lt;li&gt;It is fast.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the disadvantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is expensive; the model is a monthly fee.&lt;/li&gt;
  &lt;li&gt;It is OSX only.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/pair_programming/2019/11/22/if-you-pair-program-buy-tuple-now.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/pair_programming/2019/11/22/if-you-pair-program-buy-tuple-now.html</guid>
        
        <category>pair_programming</category>
        
        <category>software_engineering</category>
        
        
        <category>pair_programming</category>
        
      </item>
    
      <item>
        <title>Installing mysql2 Gem on OSX when Headers Can't Be Found</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9140.jpeg&quot; alt=&quot;IMG_9140.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're not a Rails user, on OSX, then just nope the heck out of reading this post.  This is some serious nerdery here.&lt;/p&gt;

&lt;p&gt;One of the single most frustrating things about the Rails ecosystem is when you can't get a bundle install operation to finish.  The bundle install, of course, is the process of getting the software tools, &quot;gems&quot;, identified in Gemfile to install.  When you can't get bundle install to finish, you are effectively entirely blocked from continuing with a project.  A friend hit a serious problem recently with bundle install and the mysql2 gem.  I gave some online help via chat and while they solved it without me, I volunteered to write it down so there's a decent explanation / write up.&lt;/p&gt;

&lt;p&gt;Here's the error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ld: library not found for -lssl
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My first suggestion was to try a &quot;brew install mariadb&quot; (mariadb is a fully compatible, &lt;strong&gt;better&lt;/strong&gt; version of MySQL, written by the creator of MySQL).  It turned out that mariadb was already installed.&lt;/p&gt;

&lt;p&gt;So this led me to this &lt;em&gt;blink&lt;/em&gt; and then I asked for &quot;paste me the whole disgustingly long error message on bundle install&quot;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing mysql2 0.5.2 with native extensions
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
/Users/foo/.rbenv/versions/2.6.3/bin/ruby -I
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/2.6.0 -r
./siteconf20191120-7300-1a2t7xt.rb extconf.rb
checking for rb_absint_size()... yes
checking for rb_absint_singlebit_p()... yes
checking for rb_wait_for_single_fd()... yes
-----
Using mysql_config at /usr/local/bin/mysql_config
-----
checking for mysql.h... yes
checking for errmsg.h... yes
checking for SSL_MODE_DISABLED in mysql.h... no
checking for MYSQL_OPT_SSL_ENFORCE in mysql.h... yes
checking for MYSQL.net.vio in mysql.h... no
checking for MYSQL.net.pvio in mysql.h... yes
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes
checking for my_bool in mysql.h... yes
-----
Don't know how to set rpath on your system, if MySQL libraries are not in path
mysql2 may not load
-----
-----
Setting libpath to /usr/local/Cellar/mariadb/10.4.10_1/lib
-----
creating Makefile

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
make &quot;DESTDIR=&quot; clean

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
make &quot;DESTDIR=&quot;
compiling client.c
client.c:140:1: warning: control may reach end of non-void function
[-Wreturn-type]
}
^
1 warning generated.
compiling infile.c
compiling mysql2_ext.c
compiling result.c
compiling statement.c
linking shared-object mysql2/mysql2.bundle
ld: library not found for -lssl
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1

make failed, exit code 2

Gem files will remain installed in
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2 for
inspection.
Results logged to
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/extensions/x86_64-darwin-18/2.6.0/mysql2-0.5.2/gem_make.out

An error occurred while installing mysql2 (0.5.2), and Bundler cannot
continue.
Make sure that gem install mysql2 -v '0.5.2' --source 'https://rubygems.org/'
succeeds before bundling.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My comment was pretty that it simply can't find the libraries, almost certainly the header files for openssl.  This is actually a common install problem for gems.  Happily my friend found the &lt;a href=&quot;https://github.com/brianmario/mysql2/issues/795&quot;&gt;answer&lt;/a&gt; (and without me which is awesome).  Here is what turned out to be needed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This the kind of thing that differs across people's systems / environments so I get why it is an issue despite the mysql2 gem being what – a decade plus old?  But I wish that the build ecosystem for Rails better allowed for things like this because, well, when you can't bundle install, you effectively can't rails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: And I get the open source ethos that if I want this, I should fix it myself.  I'm also aware of how deep a rabbit hole that would be and I don't have the mental energy to even contemplate solving this. So, yeah, I'm going to whine but I'm also massively thankful for the mysql2 gem so thank you brianmario.  Appreciated.  At least I hopefully gave back a bit by explaining this well.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/21/installing-mysql2-gem-on-osx-when-headers-can-t-be-found.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/21/installing-mysql2-gem-on-osx-when-headers-can-t-be-found.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>mysql</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>dockerbash - Making docker exec -it Suck Less</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9169.jpeg&quot; alt=&quot;IMG_9169.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Docker is a container technology that allows you to package up a series of different technologies under (generally) a *nix style operating system.  As things deployed with Docker are generally deployed under a *nix style operating system, it isn't uncommon to want to open a shell into your Docker environment for debugging purposes.&lt;/p&gt;

&lt;p&gt;You can easily do this with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it CONTAINER_HASH /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The CONTAINER_HASH is a value like 311ab7fe0ea1.  This value is fetched from a docker ps command like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep police
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The term 'police' is just some bit of text that identifies the docker process that is running.&lt;/p&gt;

&lt;p&gt;Here's an example of this output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ docker ps | grep police
311ab7fe0ea1        img-captain-police-crawl:51         &quot;/bin/sh -c 'puma -C…&quot;   4 hours ago         Up 4 hours
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What I'd really like is a command like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dockerbash police
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and have that do the underlying work to generate the docker exec statement.  A little bit of bash scripting gave me this script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You need to specify the name of the container you want to get into like:&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dockerbash police&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | grep &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; /bin/bash
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save the lines above as dockerbash and make it executable.  After that you can much more easily get a shell prompt inside your docker containers.&lt;/p&gt;

&lt;h2 id=&quot;bash-references&quot;&gt;Bash References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.andreafortuna.org/2018/07/02/bash-scripting-my-own-cheatsheet/&quot;&gt;Bash Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4651437/how-do-i-set-a-variable-to-the-output-of-a-command-in-bash&quot;&gt;How to Set a Variable in Bash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxhint.com/20_awk_examples/#a16&quot;&gt;How to Use Awk to Get the First Variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-does-dockerbash-live&quot;&gt;Where Does dockerbash Live?&lt;/h2&gt;

&lt;p&gt;You cannot store dockerbash in the project that you are deploying via Docker because it needs to exist &lt;strong&gt;on the&lt;/strong&gt; machine that runs your Docker containers, not within your Docker container.  My recommendation is that you have your DevOps tooling such as Ansible install this script.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html</guid>
        
        <category>docker</category>
        
        <category>bash</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>So You Have A Chance to Go Freelance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9359.jpeg&quot; alt=&quot;IMG_9359.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This blog post takes addresses a common problem for technical workers - you have been offered a full time freelance gig and you don't know whether or not to take it based on its value versus your current compensation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Traditionally I have done a crap ass job at making these kind of assessments.  I'm writing this post to hopefully do a better / more &quot;adult&quot; take at this.&lt;/p&gt;

&lt;h1 id=&quot;what-is-your-current-job-worth&quot;&gt;What is Your Current Job Worth?&lt;/h1&gt;

&lt;p&gt;Your current job's worth can be reduced to an equation as follows:&lt;/p&gt;

&lt;p&gt;Salary + Bonus + Vacation + Health Insurance = Total Package&lt;/p&gt;

&lt;p&gt;The real problem here is that valuing health care is effectively a shite show. Health care packages are never directly comparable and when you leave an employer, to some extent, you get what you get.&lt;/p&gt;

&lt;p&gt;This means that the equation become:&lt;/p&gt;

&lt;p&gt;Salary + Bonus + Vacation = Total Package&lt;/p&gt;

&lt;p&gt;Let's assume that you have this type of package:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Salary: $103,000.00&lt;/li&gt;
  &lt;li&gt;Bonus: $25.00 (yep; just laugh with me; some employers don't get it)&lt;/li&gt;
  &lt;li&gt;Total Compensation: $103,025.00&lt;/li&gt;
  &lt;li&gt;Vacation: 2 Weeks&lt;/li&gt;
  &lt;li&gt;Weeks Worked per Year: 50&lt;/li&gt;
  &lt;li&gt;Gross Salary Per Week: $2,060.50 (select 103025.00 / 50; 'coz sql is my favorite calculator)&lt;/li&gt;
  &lt;li&gt;Monthly Salary: &lt;strong&gt;$8,242.00&lt;/strong&gt; (select 2060.50 * 4; )&lt;/li&gt;
  &lt;li&gt;Hourly Salary: $51.5125 (select 8242.00 / 160;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let's say that you were offered a compensation package of $10,000 per month -or- $120,000 on an annualized basis.  The question then becomes is the difference between $10,000 per month and $8,242.00 per month sufficient to cover health care?  And of course there are lots and lots of other things but let's talk about health care to start.&lt;/p&gt;

&lt;h1 id=&quot;fully-loaded-cost---an-alternate-way-to-calculate-your-jobs-worth&quot;&gt;Fully Loaded Cost - An Alternate Way to Calculate Your Job's Worth&lt;/h1&gt;

&lt;p&gt;The example above really only deals with salary plus vacation but a full time job has a lot of other &quot;compensation&quot; things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;computer hardware&lt;/li&gt;
  &lt;li&gt;office space&lt;/li&gt;
  &lt;li&gt;sick days&lt;/li&gt;
  &lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The aggregate value of these non cash compensation items is what I have always referred to as the &quot;fully loaded cost&quot; of employing an engineer and my back of the envelope rule is that you need to allocate between 1.25 x salary to 1.5 x salary so that makes the original compensation package worth:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.25 * 103,000 = 128,750.00; hourly salary equivalent: $77.25&lt;/li&gt;
  &lt;li&gt;1.5 * 103,000 = 154,500.0; hourly salary equivalent: $64.375&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;hourly-rate---another-way-to-look-at-your-offer&quot;&gt;Hourly Rate - Another Way to Look at Your Offer&lt;/h1&gt;

&lt;p&gt;So the offer that we are looking at is for &quot;full time&quot; work at a rate of $10,000 per month or $120,000 per year.  Let's assume that you are working 50 weeks out of the year and you are working 40 hours per week.  That means that we are talking about 2,000 hours per year.  So the hourly rate then becomes:&lt;/p&gt;

&lt;p&gt;120,000 / 2000 = $60 / hour&lt;/p&gt;

&lt;p&gt;As a consultant, I would argue that rate is low.  My last consulting gig went out the door at $125 / hour.  Now, on the other hand, &lt;em&gt;bird in the hand versus bird in the bush&lt;/em&gt;.  This is for a long term project and guaranteed long term work really, really &lt;strong&gt;counts&lt;/strong&gt;.  I suspect that most consultants never come close to making $120,000 / year.&lt;/p&gt;

&lt;p&gt;The comparable hourly rates are listed above.&lt;/p&gt;

&lt;h1 id=&quot;health-care-overview&quot;&gt;Health Care Overview&lt;/h1&gt;

&lt;p&gt;The bulk of this next bit of this came from a good friend, Lisa Meece, the Chairwoman of the local &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Star Base Indy&lt;/a&gt; science fiction convention.  Lisa has been a freelance worker for over a decade now and actually understands health care in a way I don't.  Oh and if you're in the Indianapolis area, consider going to StarBase Indy this coming Thanksgiving:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I can guarantee it is a more fun time than your family weekend&lt;/li&gt;
  &lt;li&gt;There are Klingons to spare including the ever popular &lt;strong&gt;singing Klingon&lt;/strong&gt; aka &quot;&lt;a href=&quot;https://www.youtube.com/channel/UCkuSNmzNppTGu8Inx6e8ufQ&quot;&gt;The Klingon Pop Warrior&lt;/a&gt;&quot;; you haven't felt emotion until you've heard &lt;a href=&quot;https://www.youtube.com/watch?v=VHS9mgJfqSA&quot;&gt;Pat Benatar&lt;/a&gt; in the original Klingon&lt;/li&gt;
  &lt;li&gt;It is a damn good time&lt;/li&gt;
  &lt;li&gt;With my wife Shelley, I'm running Engineering for the con and I'd love to see you there&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;healthcaregov&quot;&gt;Healthcare.gov&lt;/h2&gt;

&lt;p&gt;So here goes for some stuff on health care that I didn't write:&lt;/p&gt;

&lt;p&gt;For insurance, your best bet is the marketplace at &lt;a href=&quot;http://www.healthcare.gov&quot;&gt;www.healthcare.gov&lt;/a&gt;. (when you leave your current job you'll also have an option for COBRA for the first 18 months - the clock runs out at that point for you as an employee). Your HR department should be able to tell you what that will cost you - but even with the concerted efforts being made to kill ACA it's probably still your most economical option for coverage.&lt;/p&gt;

&lt;p&gt;Leaving your current job (and therefore your current coverage) is what's called a &quot;qualifying event&quot; for new coverage. I believe that means you have 30 days from that time to elect coverage under the marketplace. If you wait longer than that you will need to wait until open enrollment, at which point coverage won't start until January, and you don't want that. (You've got 90 days to enroll in COBRA).&lt;/p&gt;

&lt;p&gt;The sucky thing is that the plans available now are not necessarily the plans that will be available for 2020, so you'll have to elect now and then elect again in October for next year.&lt;/p&gt;

&lt;p&gt;You'll want to pay attention to the covered physicians under each plan. This is something you should be able to tell by going to the insurer's website and looking up any physicians you want to be able to keep. That may be enough to make the decision around which plan (or at least which company) to select. Other factors are the premium / deductible / copays.&lt;/p&gt;

&lt;p&gt;And that was her take on health care.&lt;/p&gt;

&lt;h2 id=&quot;cobra&quot;&gt;Cobra&lt;/h2&gt;

&lt;p&gt;When I asked my current employer for Cobra numbers so I had something to go by, here's what they said:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Family Medical $1147.54&lt;/li&gt;
  &lt;li&gt;Family Dental $116.32&lt;/li&gt;
  &lt;li&gt;Family Vision $25.63&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes the monthly insurance premium: $1,289.49&lt;/p&gt;

&lt;h1 id=&quot;tax-implications&quot;&gt;Tax Implications&lt;/h1&gt;

&lt;p&gt;Clearly some portion of personal expenses could be written off if I was a consultant.  Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Computer&lt;/li&gt;
  &lt;li&gt;Home office&lt;/li&gt;
  &lt;li&gt;Internet (partial)&lt;/li&gt;
  &lt;li&gt;Cell phone (likely all)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks again to &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;Lisa Meece&lt;/a&gt; for contributing also to this bit.&lt;/p&gt;

&lt;h1 id=&quot;money-and-the-big-question---will-you-be-happier&quot;&gt;Money and The Big Question - Will You Be Happier?&lt;/h1&gt;

&lt;p&gt;So with the offer described above the previous monthly gross was: 8242.00 with insurance.  The new offer is $10,000 but you have to subtract $1,289.49 to arrive at: $8,710.51.  So technically there is a $500 bump in salary monthly but that is likely negligible given the loss of benefits.&lt;/p&gt;

&lt;p&gt;So if the numbers are roughly the same then, to me, the big question is would you actually be happier being freelance?  Or to paraphrase Shakespeare, &quot;&lt;em&gt;To freelance or not to freelance; that is the question&lt;/em&gt;&quot;.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/19/so-you-have-a-chance-to-go-freelance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/19/so-you-have-a-chance-to-go-freelance.html</guid>
        
        <category>freelance</category>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Do I Buy My Wife Flowers Tonight or Not</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9420a.jpeg&quot; alt=&quot;IMG_9420a.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of software developers, I can be pretty forgetful at times.  If you're in the industry, you know how it goes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You start working on a project and it is February&lt;/li&gt;
  &lt;li&gt;You look up and … it is May and&lt;/li&gt;
  &lt;li&gt;You don't remember all that much of your life between&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A good friend of mine refers to this as falling down a code hole (Thank you Mister Mott) and it really is a thing.  Some people's code holes are a few days long.  Other people's code holes can, in the case of a death march, last for months.&lt;/p&gt;

&lt;p&gt;A bunch of years ago, I came out of a code hole and realized that I couldn't remember when I had last bought my wife flowers (if your wife doesn't like flowers then substitute chocolates, wine, etc).  Any husband worth his salt knows what I mean – that little treat that says to the person you love that you remember their existence and they matter.  I regard that for my personal relationships, buying a woman flowers unexpectedly as akin to lubrication on a mechanical device; something that makes the underlying machine work better. Call if &quot;relationship lubrication&quot; if you will.&lt;/p&gt;

&lt;p&gt;After realizing this, I thought about how I could solve it – in a &lt;strong&gt;natural&lt;/strong&gt; fashion.  I didn't want to put it on a calendar; I didn't want it to be regular so I realized that I could tie it to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Something I did regularly&lt;/li&gt;
  &lt;li&gt;Make it quasi random&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I've an old school Unix guy (originally SunOS back in '89 on a Sun 3 running Qunitus Prolog), what I did was tie this to my shell startup routine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For non computer folks, a &quot;shell&quot; is a program you use to interface directly with the machine&lt;/li&gt;
  &lt;li&gt;A startup routine is a script which runs when the shell starts up&lt;/li&gt;
  &lt;li&gt;As a heavy terminal user, I open a shell 10 or 20 times a day so, over time, I adjusted the probabilities to reflect that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I did was write a &quot;throw of the dice routine&quot; that randomly tells me whether or not to buy flowers.  This can be as complex as you want it to be. I made the example below a little complex and tied in a &quot;on her birthday&quot; routine just in case.&lt;/p&gt;

&lt;p&gt;Here's what this looks like when the throw of the dice doesn't succeed:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/flowers_no.png&quot; alt=&quot;flowers_no.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's what this looks like when it does succeed:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/flowers_yes.png&quot; alt=&quot;flowers_yes.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's the code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/Users/sjohnson/.rvm/rubies/ruby-2.3.1/bin/ruby&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'date'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flowers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wine'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'chocolates'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# raise this if you want to buy things less often; lower it for more&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;improbability_constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1968&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;improbability_constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sample&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You should buy &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;year&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Doofus - it is her birthday; buy at least: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I call this from ~/.zshrc just by calling the ruby script directly.  The same trick works in ~/.bashrc.&lt;/p&gt;

&lt;p&gt;I should admit that a lot of times when this said &quot;Buy Flowers&quot;, I actually didn't – life can be messy and complex and I never intended it directly drive my behavior. What it did do, however, was make me much more aware of the need for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I haven't needed this now for a lot of years so below is a quick reproduction designed to select between flowers, wine, chocolates and a card.  Once I ran it for enough years, I internalized this type of activity as a habit.  And then I moved laptops one year and realized &quot;Heh.  I changed!&quot;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I told my wife about this a few weeks ago and she laughed.  Oh gosh did she laugh …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: While my personal relationship involves a wife and husband, this tool can work regardless of the gender or configuration of your relationship.&lt;/p&gt;

</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html</guid>
        
        <category>relationships</category>
        
        
        <category>relationships</category>
        
      </item>
    
      <item>
        <title>I'm Copying You Since You're So Effective</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9068.jpeg&quot; alt=&quot;IMG_9068.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A close friend recently said to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I'm Copying You Since You're So Effective&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;with respect to how much I tend to get done and I thought I'd elaborate on this a bit since I suspect that why I'm effective isn't always apparent.  These aren't really in any order other than the order that I chose to finish them.  I suspect they are all pretty important.&lt;/p&gt;

&lt;h2 id=&quot;ten-reasons-why-i-think-im-effective&quot;&gt;Ten Reasons Why I Think I'm Effective&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Get Rid Of Anything That Pisses You Off&lt;/strong&gt;.  To the outside world, I'm a pretty chill person.  I try very, very hard to never lose my cool and there's a reason for that – I have a &lt;strong&gt;bad&lt;/strong&gt; temper.  One of the things I learned early on about myself is that getting upset &lt;strong&gt;ruins&lt;/strong&gt; my productivity.  And so what I do is when I find that something pisses me off, I get rid of it – by fixing it.  See my upcoming post on Url Soup for an example.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Time is The Only Thing You Have So Do the Math on Everything&lt;/strong&gt;.  I'm a father, a husband and a technologist and I started my first company when I was 19 – and I've pretty much been busy since I was 19.  This has always made me very, very aware of just how valuable anyone's time is.  I don't waste my time and I hate, hate, hate anything that wastes my time.  Just as an example, I used to &lt;strong&gt;loathe&lt;/strong&gt; configuring new laptops.  Setting up a new laptop, for a developer, is generally about a week long endeavor until I (or any developer I've ever watched) is really comfortable with it.  If you assume that a laptop lasts a developer 3 years and you have 30 years left in your career, that's &lt;strong&gt;10 weeks&lt;/strong&gt; of your life.  Once I did that math then I realized that my figuring out how to configure a laptop quickly and easily was seriously worthwhile and I did (and then I open sourced an &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;example&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Find People Smarter than You – And Copy Them&lt;/strong&gt;.  I'd love to tell you that it was my idea for how to configure a laptop automatically but it wasn't.  I stole this, shamelessly, from &lt;a href=&quot;https://twitter.com/geerlingguy&quot;&gt;Jeff Geerling&lt;/a&gt;; but I did (and do) &lt;a href=&quot;https://fuzzyblog.io/blog/mac/2017/07/31/configuring-your-mac-with-ansible-take-2.html&quot;&gt;credit him&lt;/a&gt;.  One thing I learned early on is that when you don't know what you are doing, finding people smarter than you in an area and copying / learning from them is wise.  I did this with Jim Kearny when I bought my first cell phone, I did this with Wolfram Arnold when I needed to learn TDD, I did this with Matt Mullenweg when I needed to learn logical isolation and SAAS apps and so on.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Messy Beats Perfect Every Damn Time&lt;/strong&gt;.  I write a lot of code and I'll confess something – my code is messy.  I fail at coding in all kinds of ways; my Cyclomatic complexity is too high, I use double quoted strings when single quoted are more efficient, I have too much conditional logic and so on.  And, in my opinion, that's ok because code is organic and it gets better over time – if it needs to get better.  A lot of code doesn't need to get better because most projects, even mine, simply won't succeed.  And if it isn't going to succeed then why make it perfect?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Be a Boy Scout&lt;/strong&gt;.  I doubt it will surprise people that not only was a I a Boy Scout but I was actually an Eagle Scout (and then I discovered girls and, well …).  One of the best things that scouting taught me was &quot;leave your campsite better than you found it&quot; and I've been doing that metaphorically ever since.  My perspective on coding is often pretty simple – I try to leave things better than I found them.  So, yes, I'm going to write messy code (see above) but I'm also going to make it better when I pass back through it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Minimize Discouragement&lt;/strong&gt;.  When doing anything, but particularly when you are starting something new, always try and minimize your discouragement.  There is nothing worse then putting a ton of effort into something and then, at the very end, realizing that you can't make it work.  As an example, I hooked a friend up recently with my &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;Macbook Ansible&lt;/a&gt; configuration repository that installs software on your machine and their first reaction was &quot;Well I don't need all this so I need to customize it&quot;. My response was &quot;Nope!  Find one thing it installs that you actually need and comment everything else out.  Then run it and see if it works at all&quot;.  It doesn't matter what you do with computers, making one thing work is always easier than N things.  This approach gives you a small win which you can then use to encourage yourself to get another win.  I got into the habit of this when I became a remote worker and I was always alone.  When you are always alone, you need to get in the habit of getting yourself wins and managing your own encouragement because there aren't co workers around to help with this.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do it the Same Way Personally and Professionally&lt;/strong&gt;.  This was a very, very hard one for me to master.  What I've found is that if I do something one way professionally then, well, you do it the same way personally.  A good example of that are software development practices with respect to git.  My last boss was an absolute perfectionist regarding branch driven development (you always develop in a branch; branches get merged to develop and then develop gets merged to master which then gets deployed).  And I've taken that model to heart and now I use it for all my side projects – and I've never been happier.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make Anything You Do Regularly Easier.&lt;/strong&gt;  I am a huge believer that if you do anything regularly (and I define regularly as 3 times or more in a short span of time) then you figure out how to make it easier – and you do that.  When you don't make things easier, you either waste time or you end up getting pissed off (see #1 above for how that affects me).  When you work with computers, most things can be made easier, even something as relationally complex as &quot;&lt;a href=&quot;https://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html&quot;&gt;Do I Buy My Wife Flowers This Week?&lt;/a&gt;&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tools Matter; Learn Them Well&lt;/strong&gt;.  I grew up in a hardware store and my favorite department was the tool aisle.  I grew to know the differences between an Estwing hammer and a True Value hammer and why an SK set of sockets was better than Master Mechanic.  When I moved over to computer work, I took that same love of tools with me.I've now been using the same editor since 2006; the same language since 2006.  I honestly don't think it really matters what tools you use but it does matter that you learn them well.  Steven Jobs used to call computes a &lt;a href=&quot;https://www.brainpickings.org/2011/12/21/steve-jobs-bicycle-for-the-mind-1990/&quot;&gt;bicycle for the mind&lt;/a&gt;.  Well if you're a software person, learning your tools well gives you a motorcycle for the brain.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Write It Down If You'll Ever Need It Again&lt;/strong&gt;.  If you've watched my &lt;a href=&quot;https://fuzzyblog.io/blog/&quot;&gt;voluminous output&lt;/a&gt;, you've started to realize that I'll write about anything.  And the reason for that is that writing things down helps &lt;strong&gt;me&lt;/strong&gt;.  I'm an IT professional that deals with large scale, complex systems.  When I learn something, invariably, I'm going to need to do it again.  If I take the time to write it down then not only have I documented it at least fairly well but I've also taken the time to really learn it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If I have a favorite one of all of these, it is the last one, write it down.  That has likely been the single most profound change in making me effective.  And I learned that from &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt;; Thanks Dave.&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/18/i-m-copying-you-since-you-re-so-effective.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/18/i-m-copying-you-since-you-re-so-effective.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Adding Decimal Types to Rails Migrations</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9619.jpeg&quot; alt=&quot;IMG_9619.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like so many other things this falls into the category of &quot;I'll do it 100 more times before I die and I can never remember it so may as well blog it&quot;.  A migration adds a column to a table in a database managed by Rails.  In this case I had a table which needed to manage multiple types of data all front ended by an amount method that dynamically figures out why field to fetch back the data from.  This gave me a column structure like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;int_val (for integers)&lt;/li&gt;
  &lt;li&gt;float_val (for floats like a measurement)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I needed to add money as a value to this table.  Now, yes, I could simply store money in the float_val field but that's a bad practice to start doing because, well, rounding.  Even if it really doesn't matter in the app, it is a bad practice to train yourself on.&lt;/p&gt;

&lt;p&gt;From having done this in the past, I know I need a decimal of the format (something, 2).  This is referred to as the 'scale' and the 'precision' (the number of digits to the right of the decimal place).  So if we have decimal(8,2), that means you can store:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;123,456.78
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So your maximum value would be 999,999.99 (just under a million dollars; now say that in a &lt;a href=&quot;https://www.youtube.com/watch?v=l91ISfcuzDw&quot;&gt;Dr. Evil intonation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now writing a migration with precision and scale isn't hard but I always want to do this to allow for placing the column in the right place (it makes my tables 'near' and, yes, I'm just that nerdy).  Here's my migration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g migration add_decimal_to_metrics
      invoke  active_record
      create    db/migrate/20191118100314_add_decimal_to_metrics.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddDecimalToMetrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:decimal_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:decimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;precision: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scale: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;after: :float_val&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5452653/datatype-decimal6-2&quot;&gt;Stack Overflow on Scale and Precision&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mitrev.net/rails/2015/04/19/rails-migration-generator-specifying-precision-and-scale/&quot;&gt;Mitrev on Migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/18/adding-decimal-types-to-rails-migrations.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/18/adding-decimal-types-to-rails-migrations.html</guid>
        
        <category>rails</category>
        
        <category>mysql</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Adding an Includes Clause to ActiveRecord and Watching the Joy Flow</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9986.jpeg&quot; alt=&quot;IMG_9986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've written in the past about watching your SQL queries stream by in the Rails console and how seeing, well, stupidity / things that look wrong can help guide you to things you need to find.  Here's an example I witnessed recently:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habit = Habit.find(2)
habit.total_this_month

Metric Load (2.5ms) SELECT metrics.date_created_at, metrics.int_val, metrics.float_val, metrics.metric_type_id FROM metrics WHERE metrics.habit_id = 2 AND (date_created_at &amp;gt;= '2019-11-01') AND (date_created_at &amp;lt;= '2019-11-30')
MetricType Load (3.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (38.1ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (17.0ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (40.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (2.7ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (1.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (3.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (5.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (252.9ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (11.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (7.4ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (1.6ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;According to the bug tracker where I logged, this it was logged 5 days ago (so on November 12).  And if you could the number of metric_type queries above, the total is 12.  This is date ordered stuff so it is pretty obvious that what's happening is that metric_type query is getting executed once per day.&lt;/p&gt;

&lt;p&gt;Here's the definition of the total_this_month method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_this_month&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_date_of_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last_date_of_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
  &lt;span class=&quot;n&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the total_from_date_to_date method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOTAL_FIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;gt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;lt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This type of issue is referred to as an &lt;a href=&quot;https://semaphoreci.com/blog/2017/08/09/faster-rails-eliminating-n-plus-one-queries.html&quot;&gt;N+1 query problem&lt;/a&gt; where each query leads to another query.  The solution here is to use the :includes option on the query to bring in the metric_types table as part of this.&lt;/p&gt;

&lt;p&gt;And here's the fix&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOTAL_FIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;gt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;lt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:metric_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Just adding a simple .includes(:metric_type) clause to the where statement fixes this and makes that data available to the underlying .compact.sum operation.  And, yes, to fix a performance problem this easily really does make the joy flow for a developer.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/18/adding-an-includes-clause-to-activerecord-and-watching-the-joy-flow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/18/adding-an-includes-clause-to-activerecord-and-watching-the-joy-flow.html</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        <category>performance</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>The Ruby Safe Navigation Operator</title>
        <description>&lt;p&gt;So I recently moved to running my Ruby code thru &lt;a href=&quot;https://github.com/rubocop-hq/rubocop&quot;&gt;RuboCop&lt;/a&gt; prior to each submission courtesy of the magic that is &lt;a href=&quot;https://evilmartians.com/chronicles/lefthook-knock-your-teams-code-back-into-shape&quot;&gt;Lefthook&lt;/a&gt;.  I don't always fix everything that RuboCop detects but I tend to read thru the reports.  I'm using the &quot;Boy Scout&quot; approach to campsites, i.e. leave your campsite (code base) better than you found it, to at least make some of the changes each time.&lt;/p&gt;

&lt;p&gt;Note: To avoid the massive amount of errors that Rubocop detects via lefthook, I actually have the rubocop options in lefthook.yml commented out:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#     rubocop:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       tags: backend style&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       glob: &quot;*.rb&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       exclude: &quot;application.rb|routes.rb&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       run: bundle exec rubocop --force-exclusion {all_files}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then I run the files individually using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rubocop -c .rubocop.yaml app/controllers/streaks_controller
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here was an interesting error that it just detected:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/controllers/streaks_controller.rb:43:7: C: Style/SafeNavigation: Use safe navigation (&amp;amp;.) instead of checking if an object exists before calling the method.
      s.activate if s
      ^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So what we have here is an ActiveRecord operation and then an if clause:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Streak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;streak_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The Safe Navigation operator, &amp;amp;, is designed to be a more concise approach to something like the try operator in that it avoids errors when a method is called on nil:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As its name reflects, the safe navigation operator allows us to safely call a method on a object that can be nil, in the same way as try! does in ActiveSupport. In that regard, if the object is not nil, it sends the method to the object, returning nil otherwise. &lt;a href=&quot;https://www.competa.com/blog/ruby-safe-navigation-operator-methods/&quot;&gt;Competa&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using the safe navigation operator, the above code snippet can be written as:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Streak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;streak_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is one of those cases where I like the clarity of my original approach but the safe navigation operator does shorten up a coding paradigm that is almost everywhere in Ruby code.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theguild.nl/5-reasons-not-to-use-safe-navigation-operators/&quot;&gt;Reasons to Not Use Safe Navigation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/&quot;&gt;More on the Safe Navigation Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 16 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/11/16/the-ruby-safe-navigation-operator.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/11/16/the-ruby-safe-navigation-operator.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Local Development Data for Rails from Your Production Site using Heroku</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9986.jpeg&quot; alt=&quot;IMG_9986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the worst aspects of doing Rails development, although this is not limited to Rails in any way, is getting data to use for development work once your site starts getting users.  Yes I know that you should always have full test coverage and that local data shouldn't be necessary – &lt;strong&gt;but it absolutely is&lt;/strong&gt;.  There is always a class of errors that you simply can't diagnose with a set of data with which to work.&lt;/p&gt;

&lt;p&gt;The happy truth though is that you actually can pretty easily move data from production to development at will (at least as long as the database isn't too massive; when your site gets large it is a different matter).&lt;/p&gt;

&lt;h2 id=&quot;the-approach&quot;&gt;The Approach&lt;/h2&gt;

&lt;p&gt;The approach here is actually pretty simple.  My examples all center around using MySQL as a data store but any database that has solid import / export will work.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To start you should backup your local data just in case you need it back afterwards.&lt;/li&gt;
  &lt;li&gt;You then connect to your remote datastore and use mysqldump to export your data to a local data dump.&lt;/li&gt;
  &lt;li&gt;You then import this local data dump.&lt;/li&gt;
  &lt;li&gt;You debug your site using a much richer set of data.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;making-this-easy-with-a-rake-task&quot;&gt;Making this Easy with a Rake Task&lt;/h2&gt;

&lt;p&gt;Here's a rake task that I wrote that gives you a lot of tasks for dealing with your local / remote databases.  Drop this into lib/tasks and you can see the tasks it offers with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake -T | grep database
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:database&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# Generates a mysql load command&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development:mysql_load_data_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_load_data_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#username, password, database &lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' &amp;lt; lib/tasks/data/db_dumps/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Add the load file into the below command &quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  once you copy and paste it back into the terminal&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# generates a mysql command to get into the database&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development_mysql_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# generates a dump data command that puts the data into lib/tasks/data/db_dumps/&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development:mysql_dump_data --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_dump_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt; lib/tasks/data/db_dumps/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.sql&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysqldump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:production&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_dump_data --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_dump_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;About to dump data in 10 seconds (or press CTRL+C) ....&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt; lib/tasks/data/db_dumps/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.sql&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysqldump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
      
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_load_data_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_load_data_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt; '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -h &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# this is how heroku used to work a few months ago, now, not so much...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_heroku_database_params_classic&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capture3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^DB_/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_heroku_database_params&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capture3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^DATABASE_URL:/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# build up a hash of db_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# the database itself is stored as the path in the url but the / needs to be stripped&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_local_database_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;database_configuration&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;database&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/:\s+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;dumping-from-production-and-loading-to-development&quot;&gt;Dumping from Production and Loading to Development&lt;/h2&gt;

&lt;p&gt;Here's how to dump the data:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake database:production:mysql_dump_data --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's how to load this in:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake database:development:mysql_load_data_command --trace
** Invoke database:development:mysql_load_data_command (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute database:development:mysql_load_data_command
Add the load file into the below command
  once you copy and paste it back into the terminal
mysql -uroot -pADFD!@# change_me_now_development  &amp;lt; lib/tasks/data/db_dumps/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(note - I changed the password above).  And then you need to actually run this command with the correct database file that came from the dump:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uroot -pADFD!@# change_me_now_development  &amp;lt; lib/tasks/data/db_dumps/d3rbmdakuvgkjfkv_2019-11-16.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The database name you get from Heroku is very much a randomized string so don't expect it to be the normal Rails like &quot;_production&quot; style database name.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/16/getting-local-development-data-for-rails-from-your-production-site-using-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/16/getting-local-development-data-for-rails-from-your-production-site-using-heroku.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Updating to the Latest Ansible on Ubuntu</title>
        <description>&lt;p&gt;One of the tricky bits about Ansible is that new features in the &quot;language&quot; always require the latest version of Ansible itself.  And, while logical, this can easily bite you.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;s&quot;&gt;TASK [deploy_hate-language-modeling_systemd_start&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;just force systemd to re-execute itself (2.8 and above)] ***&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;fatal&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aws_master2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;FAILED! =&amp;gt; {&quot;changed&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false, &quot;msg&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Unsupported&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(systemd)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;module:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;daemon_reexec&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Supported&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;include:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;daemon_reload,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;enabled,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;masked,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;no_block,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;state,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;user&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;    	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to retry, use&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--limit @/home/ubuntu/ansible/playbook_deploy_hate-language-modeling_master.retry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What that translates to is that Ansible itself doesn't know how to use the parameter &lt;strong&gt;daemon_reexec&lt;/strong&gt;.  And when you've been using an Ansible feature successfully and then it doesn't work on the server, that usually is a rock solid signal &quot;update ansible&quot;.&lt;/p&gt;

&lt;p&gt;Here's how to do this on Ubuntu:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt update
sudo apt install software-properties-common
sudo apt-add-repository --yes --update ppa:ansible/ansible
sudo apt install ansible
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 15 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2019/11/15/updating-to-the-latest-ansible-on-ubuntu.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2019/11/15/updating-to-the-latest-ansible-on-ubuntu.html</guid>
        
        <category>ansible</category>
        
        <category>ubuntu</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>A Redis Hello World in Ruby and Python</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9955.jpeg&quot; alt=&quot;IMG_9955.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A colleague just IM'd me and asked if I have a Hello World for redis and my thought was &quot;No but I can damn well blog one together quick as all get out&quot; so …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the word Redis means nothing to you then may I direct you to the &lt;a href=&quot;https://redis.io/topics/quickstart&quot;&gt;quick start&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;The thing to understand about Redis is that you can use it in two ways:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;As a simple key value store, a nosql database if you like.&lt;/li&gt;
  &lt;li&gt;As a data structure server.  I don't do this much but I am in absolute awe of people who have internalized the Redis data model sufficiently to do this.  The reason for bringing up this point, when I'm not going to cover it is that any developer ought to keep in mind the capabilities of their tools – and Redis is hugely capable.  And if you think that I'm full of crap with what Redis can do with you, may I direct you to &lt;a href=&quot;https://thoughtbot.com/blog/hyperloglogs-in-redis&quot;&gt;HyperLogLog&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hello-world-in-redis-using-ruby&quot;&gt;Hello World in Redis using Ruby&lt;/h2&gt;

&lt;p&gt;The canonical Hello World for redis is using it as a key value store.  Here's an example from Ruby:&lt;/p&gt;

&lt;p&gt;In Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In console:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&amp;lt;Redis client v4.1.3 for redis://127.0.0.1:6379/0&amp;gt;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the explanation:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We bring in the Redis gem / class.&lt;/li&gt;
  &lt;li&gt;We create a Redis object.  By default Redis runs on localhost at port 6379.  Redis has a quite solid network architecture so you can have a distributed set of servers with the data fetched back from them.&lt;/li&gt;
  &lt;li&gt;The &quot;set&quot; command takes a name and a value and sets them into the underlying data store.&lt;/li&gt;
  &lt;li&gt;The &quot;get&quot; command takes just the name and fetches back the value.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hello-world-in-redis-using-python&quot;&gt;Hello World in Redis Using Python&lt;/h2&gt;

&lt;p&gt;And here is exactly the same example in Python:&lt;/p&gt;

&lt;p&gt;In requirements.txt:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In console:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you can see that pretty much the exact same explanation applies.  Redis uses a standard set of &quot;verbs&quot; that tend to be implemented similarly across languages.  Salvatore did a brilliant job on Redis and the simplicity of the verbs speaks to that.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/redis/redis-rb&quot;&gt;redis-rb on github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pypi.org/project/redis/&quot;&gt;pypi on redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 15 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2019/11/15/a-redis-hello-world.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2019/11/15/a-redis-hello-world.html</guid>
        
        <category>redis</category>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>A Warning About Git LFS and Large Machine Learning Models and Automated Deployments</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7930.jpeg&quot; alt=&quot;IMG_7930.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Github has a maximum size of 50 mb per file under management.  And that normally works just fine – until the age of machine learning.  Machine learning models are &lt;strong&gt;big&lt;/strong&gt;, staggeringly &lt;strong&gt;big&lt;/strong&gt;.  I'm currently working on a project where the underlying model is like 830 + mb.&lt;/p&gt;

&lt;p&gt;Now when you have large files, git has a facility called &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;&quot;Git LFS&quot; (large file support)&lt;/a&gt; and they purport that it is the solution but, well, it really, really isn't.  Here's what I just ran across (platform is Ubuntu 18 and Ansible):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I have a playbook that handles git clone / git update.&lt;/li&gt;
  &lt;li&gt;When you initially install, the git clone only brings down the non lfs files.&lt;/li&gt;
  &lt;li&gt;I then remembered the lfs issue and modified the playbook to install lfs and run the per repository installation command (cd into your repo directory and then &lt;strong&gt;git lfs install&lt;/strong&gt;).&lt;/li&gt;
  &lt;li&gt;The next stage in the playbook did a git pull and my expectation was that the pull would bring in the large model.  Unfortunately it did not so I had a real wtf moment.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I then logged into the machine manually and deleted the repo and cloned it manually.  And, voila, I got the full model coming down.&lt;/p&gt;

&lt;h2 id=&quot;before-git-lfs-install&quot;&gt;Before Git LFS Install&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hcs hate-language-modeling/
16K	0hate-language-modeling/
16K	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;after-git-lfs-install-using-manual-git-clone&quot;&gt;After Git LFS Install Using Manual Git Clone&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hcs hate-language-modeling/
836M	hate-language-modeling/
836M	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Given the importance of automated deploys, this really makes me concerned about using git lfs moving forward.  Yes it is wonderful that I can run the per repository installation command and have it work even after the directory is installed but the git pull, after that command was run, should have brought down the entire model.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2019/11/14/a-warning-about-git-lfs-and-large-machine-learning-models.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2019/11/14/a-warning-about-git-lfs-and-large-machine-learning-models.html</guid>
        
        <category>machine_learning</category>
        
        <category>git</category>
        
        <category>git_lfs</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Making a Streamlit Machine Learning App into a SystemD Service for Deployment via Ansible</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html&quot;&gt;documented recently&lt;/a&gt;, I've become quite the fan of &lt;a href=&quot;https://streamlit.io&quot;&gt;Streamlit&lt;/a&gt; for taking Machine Learning applications written in Python and making them easily available on the web.  Streamlit is a very cool toolkit for taking a Python Machine Learning app and adding a simple UI to it and then hosting it via a built in web server.  I haven't seen anything really like in the Ruby world and I'm quite impressed by its elegance and simplicity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Before you start down the path of implementing this the way I did, see the last section titled &quot;Note: &quot; after the Jenkins section.&lt;/p&gt;

&lt;p&gt;So we have a custom internal app using Streamlit and I am, at present, the only person who can deploy it.  That's, well, stupid.  Deployment always needs to be something that anyone on the technical team should be able to do.  This became increasingly obvious to me when I had to pull over, on Monday afternoon, and deploy fixes to it – in the first snow of the season.  And, yes, I've been a consultant for a lot of my career so I'm ok with this but it still is sub optimal.&lt;/p&gt;

&lt;p&gt;Here's what a deploy using Streamlit onto an Ubuntu server looks like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SSH into the box.&lt;/li&gt;
  &lt;li&gt;Change into the right directory.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Do a ps auwwx&lt;/td&gt;
          &lt;td&gt;grep streamlit and grab the pid (process id).&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Do a kill pid.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git pull&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Source the python virtual environment with: &lt;strong&gt;source ./venv/bin/active&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Restart it with the syntax: &lt;strong&gt;nohup streamlit run dashboard.py&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of this should be able to be automated with &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;.  Well, let's make that most of it.  The flaw in the ointment is the last thing.  Apparently the only thing that Ansible can't automate is something with nohup.  Now I'm sure if I dug in enough I could either understand it find a way around it but a seemingly solid &lt;a href=&quot;https://stackoverflow.com/questions/53345184/how-can-i-run-nohup-command-in-ansible-playbook-task&quot;&gt;Stack Overflow post argues that the right approach is to use SystemD and services rather than nohup&lt;/a&gt; and that seems like a good idea actually.  Ansible can easily start and stop SystemD services so we can throw out the entire pid / kill stuff.&lt;/p&gt;

&lt;h2 id=&quot;a-shell-script-and-a-system-d-unit-file&quot;&gt;A Shell Script and a System D Unit File&lt;/h2&gt;

&lt;p&gt;I don't claim to be a SystemD advocate per se but it is now the current reigning standard so it is better to use it than fight against it (SystemD was pretty controversial within the Unix world).  The basics of SystemD are explained here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-unit_files&quot;&gt;RedHat Overview of SystemD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/&quot;&gt;Linode on SystemD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The core idea is that your program is a service which runs in the background and can be controlled thru a simple set of commands.  Our service is going to be called rundashboard, so our commands become:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sudo systemctl start rundashboard&lt;/li&gt;
  &lt;li&gt;sudo systemctl stop rundashboard&lt;/li&gt;
  &lt;li&gt;sudo systemctl status rundashboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of the output of sudo systemctl status rundashboard&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status rundashboard
● rundashboard.service - Example systemd service.
   Loaded: loaded (/etc/systemd/system/rundashboard.service; dis
   Active: active (running) since Wed 2019-11-13 17:55:37 UTC; 5
 Main PID: 10449 (bash)
    Tasks: 6 (limit: 4915)
   CGroup: /system.slice/rundashboard.service
           ├─10449 /bin/bash /usr/bin/rundashboard.sh
           └─10459 /home/ubuntu/hate-language-modeling/venv/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From an implementation perspective we need to things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shell script which starts our service&lt;/li&gt;
  &lt;li&gt;A SystemD unit file which installs our service into the underlying Unix system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm not a SystemD expert so I'm absolutely certain that there are subtleties of SystemD that I'm overlooking.&lt;/p&gt;

&lt;h3 id=&quot;the-shell-script&quot;&gt;The Shell Script&lt;/h3&gt;

&lt;p&gt;Here's the shell script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/ubuntu/hate-language-modeling
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ./venv/bin/activate
nohup streamlit run dashboard.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-unit-file&quot;&gt;The SystemD Unit File&lt;/h3&gt;

&lt;p&gt;Here's the SystemD unit file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Run Streamlit Dashboard.

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;simple
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/bash /usr/bin/rundashboard.sh

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;installing-this&quot;&gt;Installing This&lt;/h3&gt;

&lt;p&gt;The shell script needs to be copied to to /usr/bin:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mv rundashboard.sh /usr/bin/rundashboard.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The unit file needs to be copied to /etc/systemd/system/ and set to 644 permissions:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp rundashboard.service /etc/systemd/system
sudo chmod 644 /etc/systemd/system/rundashboard.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;an-ansible-playbook-for-deploying-streamlit&quot;&gt;An Ansible Playbook for Deploying Streamlit&lt;/h2&gt;

&lt;p&gt;While there are lots of ways to use Ansible, I tend to follow a pretty standard approach:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;inventory file that defines the machines on which things are executing&lt;/li&gt;
  &lt;li&gt;playbook that defines the role to be run&lt;/li&gt;
  &lt;li&gt;role that lists out the tasks to be done&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;inventory-file&quot;&gt;Inventory File&lt;/h3&gt;

&lt;p&gt;Given that my specific machines have different IP addresses than yours, I've obfuscated them below.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;aws_box1 ansible_ssh_host=1.2.3.4  ansible_ssh_private_key=/Users/sjohnson/Downloads/adl_fuzzygroup.pem ansible_python_interpreter=/usr/bin/python3&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;aws_box2 ansible_ssh_host=5.6.7.8 ansible_ssh_private_key=/Users/sjohnson/Downloads/adl_fuzzygroup.pem ansible_python_interpreter=/usr/bin/python3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;playbook&quot;&gt;Playbook&lt;/h3&gt;

&lt;p&gt;Here's the playbook:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_git_clone&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_systemd_setup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_git_pull&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_systemd_start&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that this is split into four different sections.  The reason for this is that to handle the systemd stuff, the ansible role needs to run as root (the become: true) whereas the git pull / git clone needs to run as the ubuntu user.  And, yes, I know there is an ansible git module that is supposed to work.  And, this time, as &lt;strong&gt;every other&lt;/strong&gt; time I have tried to use it, I failed; hence the work around.&lt;/p&gt;

&lt;h3 id=&quot;the-git-clone-role&quot;&gt;The Git Clone Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Do a git clone if not already checked out&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone git@github.com:adl-tech/hate-language-modeling.git&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/bin/bash&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;creates&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/hate-language-modeling&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-role-setup-role&quot;&gt;The Systemd Role Setup Role&lt;/h3&gt;

&lt;p&gt;An Ansible role is basically a YAML representation of the state of the server that you are trying to achieve.  And, in this case, we need to upload some files into certain locations so we need a files directory which stores them.  Here is the structure of the role that you need to create in your filesystem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;roles/deploy_hate-language-modeling
├── files
│   ├── rundashboard.service
│   └── rundashboard.sh
└── tasks
    └── main.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the role itself:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install the service&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files/rundashboard.service&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/systemd/system&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0644'&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install the shell script&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files/rundashboard.sh&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/bin/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0755'&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Stop the service if is already running&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;systemd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rundashboard&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stopped&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-git-pull-role&quot;&gt;The Git Pull Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Do a git pull&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git pull origin dev&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/hate-language-modeling/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-start-role&quot;&gt;The Systemd Start Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;start the service&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;systemd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rundashboard&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;started&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;running-all-this&quot;&gt;Running All This&lt;/h3&gt;

&lt;p&gt;If you've put all the pieces together correctly then you can run this as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ansible-playbook -i inventories/inventory.txt playbook_deploy_hate-language-modeling.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have to run my ansible-playbook with sudo due to messed up python installs on my personal MacBook.  That's a me thing / my mistake not an Ansible thing.&lt;/p&gt;

&lt;p&gt;When it runs you should see output like the following (depending on whether or not you have the delightful cowsay installed locally):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 __________________________________________________________
/ TASK [deploy_hate-language-modeling_git_clone : Do a git \
\ clone if not already checked out]                        /
 ----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _____________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : install \
\ the service]                                                /
 -------------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _____________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : install \
\ the shell script]                                           /
 -------------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 __________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : Stop \
\ the service if is already running]                       /
 ----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________________________________________________
/ TASK [deploy_hate-language-modeling_git_pull : Do a git \
\ pull]                                                   /
 ---------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 ___________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_start : start \
\ the service]                                              /
 -----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [aws_box1]
 ____________
&amp;lt; PLAY RECAP &amp;gt;
 ------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

aws_box1                   : ok=10   changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


adl/antihate/ansible on ☁️  us-west-2 took 25s
❯
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;next-step-jenkins&quot;&gt;Next Step: Jenkins&lt;/h2&gt;

&lt;p&gt;Right now our application can be deployed by any developer who has:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a command line&lt;/li&gt;
  &lt;li&gt;ansible installed locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The real goal here is actually to make it so anyone on our team can deploy this.  And that means that we need a web based user interface that can be wrapped around the Ansible scripting.  In my next bit of writing on this topic, I'll walk thru Jenkins and how to do all that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This ended up being considerably more tricky than is addressed above.  My email is fuzzygroup at gmail.com and you are welcome to reach out to me if you want clarification.  I spent a lot of time writing this up and I can't put more time into it right now but if anyone really needs this, I'll make it a priority.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/11/13/making-a-streamlit-machine-learning-app-into-a-systemd-service.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/11/13/making-a-streamlit-machine-learning-app-into-a-systemd-service.html</guid>
        
        <category>python</category>
        
        <category>streamlit</category>
        
        <category>systemd</category>
        
        <category>linux</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Implementing Safe ActiveRecord Like Queries for Rails</title>
        <description>&lt;p&gt;In any SQL based database, a like query is generally an SQL injection attack waiting to happen because the underlying sql statement looks like this:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%foo%'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A 30 year old thank you goes out to InfoWorld and &lt;a href=&quot;https://www.amazon.com/Joe-Celkos-SQL-Smarties-Programming/dp/0123820227&quot;&gt;Joe Celko&lt;/a&gt; who beat into his reader's brains the concept of capitalizing SQL statements for better legibility.  Thank you Joe.&lt;/p&gt;

&lt;p&gt;A seemingly solid &lt;a href=&quot;https://stackoverflow.com/questions/26094430/safe-activerecord-like-query&quot;&gt;StackOverflow post&lt;/a&gt; gives this recommendation:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Please note that Model needs to be replaced with the name of your table.  Let's say that our table was named Metric and we have a normal simple_form object for Metric coming into our Rails app with a parameter named q and we have a real world Rails app with a limit clause and pagination.&lt;/p&gt;

&lt;p&gt;Here's how this would look:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@metrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@q&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at desc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@q represents the incoming query&lt;/li&gt;
  &lt;li&gt;note represents the field in our Metrics table that we want to search agains&lt;/li&gt;
  &lt;li&gt;@metrics is the collection of data returned by the search and the where clause is &quot;note.matches(&quot;%#{@q}%&quot;)&quot; to find any instances of the term @q within the note field&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 11 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/11/implementing-safe-activerecord-like-queries.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/11/implementing-safe-activerecord-like-queries.html</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Changing Button Text on Simple Form Submit Buttons</title>
        <description>&lt;p&gt;This falls into the category of &quot;I'm old and can't remember this so must, must, must write it down&quot; because I keep losing &lt;a href=&quot;https://github.com/plataformatec/simple_form/issues/117&quot;&gt;this html page&lt;/a&gt;.  If you need to change the text on a submit button for a Rails form implemented with simple_form then use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= f.button :submit, 'Submit This Form', class: 'btn btn-primary' %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 11 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/11/changing-button-text-on-simple-form-submit-buttons.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/11/changing-button-text-on-simple-form-submit-buttons.html</guid>
        
        <category>rails</category>
        
        <category>simple_form</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Using CapRover on AWS</title>
        <description>&lt;p&gt;I am a Ruby on Rails guy and I &lt;strong&gt;censored&lt;/strong&gt; hate deploying Ruby stuff.  I've been deploying Rails stuff now since 2007 and, quite honestly, it sucked in 2007 and it sucks today.  The only way I've ever found Rails deployment to not suck is by using Heroku which is absolutely magical and wonderful – but expensive.  Now I've recently become hooked on Heroku and the ease of its Git push based deployment structure.  The problem is that I need more power / flexibility with respect to what I'm deploying and this has let me to the &lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover&lt;/a&gt; open source project.&lt;/p&gt;

&lt;p&gt;This project aims to give you a version of Heroku but running on your own hardware.  Given that I'm an AWS guy, I wanted to use CapRover on AWS EC2 instances.&lt;/p&gt;

&lt;h2 id=&quot;setup---1&quot;&gt;Setup - 1&lt;/h2&gt;

&lt;p&gt;I started by installing the CapRover software and here was the first problem that I hit:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
docker: Error response from daemon: driver failed programming external connectivity on endpoint quizzical_snyder (f72be52bf809d139cc012debeadb87b813e02e8fd2ada6fbba97d4503d624c43): Error starting userland proxy: listen tcp 0.0.0.0:80: bind: address already in use.
ERRO[0000] error waiting for container: context canceled
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The issue here is that one of these 3 ports is already in use.  And the easiest way to figure this out is to run a succession of netstat commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 3000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That returned nothing.  So onto the next one, 443:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 443
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Again this returned nothing, onto 80:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      21331/nginx: master
tcp6       0      0 :::80                   :::*                    LISTEN      21331/nginx: master
unix  2      [ ACC ]     STREAM     LISTENING     16380    1/init               @ISCSIADM_ABSTRACT_NAMESPACE
unix  3      [ ]         STREAM     CONNECTED     22180    949/dockerd
unix  3      [ ]         STREAM     CONNECTED     38086    4225/python3
unix  2      [ ]         DGRAM                    18052    1010/systemd-logind
unix  3      [ ]         STREAM     CONNECTED     18081    954/dbus-daemon      /var/run/dbus/system_bus_socket
unix  3      [ ]         STREAM     CONNECTED     38087    4225/python3
unix  3      [ ]         STREAM     CONNECTED     18880    954/dbus-daemon
unix  3      [ ]         STREAM     CONNECTED     18080    1010/systemd-logind    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So the issue here is that I already have Nginx on this box listening on port 80.  This is clearly &lt;strong&gt;my issue&lt;/strong&gt; and related to my initial work on using Capistrano to partially deploy a Ruby app.&lt;/p&gt;

&lt;p&gt;I solved this by creating a new instance and working there.&lt;/p&gt;

&lt;h2 id=&quot;setup---2&quot;&gt;Setup - 2&lt;/h2&gt;

&lt;p&gt;I then installed docker using Snap and that led me to this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
docker: Error response from daemon: error while creating mount source path '/captain': mkdir /captain: read-only file system.
ERRO[0000] error waiting for container: context canceled    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I've now used Docker for a bunch of years and this led to the typical, crap ass Docker troubleshooting approach of roaming thru Google, looking for a github issue that explains things.  I found one from a &lt;a href=&quot;https://github.com/moby/moby/issues/34427&quot;&gt;January 19, 2019&lt;/a&gt; issue which said &quot;don't use the snap version of Docker&quot;.&lt;/p&gt;

&lt;h2 id=&quot;setup---3&quot;&gt;Setup - 3&lt;/h2&gt;

&lt;p&gt;I'm personally an apt-get fan and I don't even know what we have Snaps but they are the new hotness so I did try them out.  Apparently this is my bad.&lt;/p&gt;

&lt;p&gt;Ok then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;snap remove docker  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then I reinstalled docker using &lt;a href=&quot;https://phoenixnap.com/kb/how-to-install-docker-on-ubuntu-18-04&quot;&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get remove docker docker-engine docker.io
sudo apt install docker.io
sudo systemctl start docker
sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point you need to log out and log back in and then do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point docker should be cleanly installed.&lt;/p&gt;

&lt;p&gt;You probably want to be able to use docker without having to use sudo, so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo groupadd docker
usermod -a -G docker ubuntu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup---4&quot;&gt;Setup - 4&lt;/h2&gt;

&lt;p&gt;If you are using AWS then your next likely problem will be this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover

&amp;gt; caprover@0.0.0 start /usr/src/app
&amp;gt; node ./bin/www

Captain Starting ...
Installing Captain Service ...

 Installation of CapRover is starting...
For troubleshooting, please see: https://caprover.com/docs/troubleshooting.html

 &amp;gt;&amp;gt;&amp;gt; Checking System Compatibility &amp;lt;&amp;lt;&amp;lt;
   Docker Version passed.
   Ubuntu detected.
   X86 CPU detected.
   Total RAM 8363 MB

Are your trying to run CapRover on a local machine or a machine without public IP?
In that case, you need to add this to your installation command:
    -e MAIN_NODE_IP_ADDRESS='127.0.0.1'

Otherwise, if you are running CapRover on a VPS with public IP:
Your firewall may have been blocking an in-use port: 3000
A simple solution on Ubuntu systems is to run &quot;ufw disable&quot; (security risk)
Or [recommended] just allowing necessary ports:
ufw allow 80,443,3000,996,7946,4789,2377/tcp; ufw allow 7946,4789,2377/udp;

See docs for more details on how to fix firewall issues

Finally, if you are an advanced user, and you want to bypass this check (NOT RECOMMENDED),
you can append the docker command with an addition flag: -e BY_PASS_PROXY_CHECK='TRUE'

Installation failed.
Error: Port timed out: 3000
    at Timeout._onTimeout (/usr/src/app/built/utils/CaptainInstaller.js:136:20)
    at ontimeout (timers.js:436:11)
    at tryOnTimeout (timers.js:300:5)
    at listOnTimeout (timers.js:263:5)
    at Timer.processTimers (timers.js:223:10)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup---5&quot;&gt;Setup - 5&lt;/h2&gt;

&lt;p&gt;And this needs to be solved by adding to your AWS security group, a hole for port 3000.  Do this with the normal AWS user interface for security groups.  You should future proof yourself by allowing for by ipv4 and ipv6 addresses.&lt;/p&gt;

&lt;p&gt;Once this is done then you can run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover        
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And have it actually get CapRover up and running.  And, yes, I actually did a happy dance when this worked.  I might have been holding hands with the cat while I did this.  The cat was not amused.&lt;/p&gt;

&lt;h2 id=&quot;setup---6&quot;&gt;Setup - 6&lt;/h2&gt;

&lt;p&gt;At this point you need to install the local CapRover tooling to setup the server component.  So, on your own machine, do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g caprover    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caprover serversetup
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which walks you thru this process:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;------------
CapRover CLI has recently been refactored. Please report potential bugs here: https://github.com/caprover/caprover-cli/issues
------------

Setup CapRover machine on your server...

? have you already started CapRover container on your server? Yes
? IP address of your server: 18.216.143.180
? CapRover server root domain: cartazzi.com
? new CapRover password (min 8 characters): [hidden]
? enter new CapRover password again: [hidden]
? &quot;valid&quot; email address to get certificate and enable HTTPS: fuzzygroup@gmail.com
? CapRover machine name, with whom the login credentials are stored locally: captain-01

CapRover server setup completed: it is available as captain-01 at https://captain.cartazzi.com

For more details and docs see CapRover.com  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup---7&quot;&gt;Setup - 7&lt;/h2&gt;

&lt;p&gt;You will need an actual domain that you can bind to your ip address.  And you need to make sure that you assign *.domain.com (or whatever) to it.&lt;/p&gt;

&lt;p&gt;Since I'm an AWS guy, I went to the Route 53 domain manager and found an unused domain of mine, cartazzi.com and bound it to the ip address above.  I then added a *.cartazzi.com wildcard dns entry onto it.&lt;/p&gt;

&lt;h2 id=&quot;setup---8&quot;&gt;Setup - 8&lt;/h2&gt;

&lt;p&gt;Once all this is done then you can to: https://captain.cartazzi.com.  This gives you a web based ui where you can create an app that you can then use a heroku style push deploy to take your code live.  And all of this is magically hooked up to Lets Encrypt for proper https.&lt;/p&gt;

&lt;h2 id=&quot;setup---9&quot;&gt;Setup - 9&lt;/h2&gt;

&lt;p&gt;The magic of all this is tied to the Captain Definition file or captain-definition which is essentially a JSON formatted Dockerfile that defines how the application is built.  And this is where my Docker knowledge failed me.  Here's as far as I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat captain-definition
{
  &quot;schemaVersion&quot;: 2,
  &quot;dockerfileLines&quot;: [
	&quot;FROM ubuntu:latest&quot;,
  &quot;FROM ruby:2.6.5-stretch&quot;,
  &quot;RUN rm /etc/localtime&quot;,
	&quot;RUN echo 'Etc/UTC' &amp;gt; /etc/timezone&quot;,
	&quot;RUN ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime&quot;,
	&quot;RUN apt-get update&quot;,
	&quot;RUN apt-get install -y tzdata&quot;,
	&quot;RUN apt-get install -y git&quot;,
	&quot;RUN apt-get install -y ruby&quot;,
	&quot;RUN apt-get install -y postgresql&quot;,
	&quot;RUN apt-get install -y libpq-dev&quot;,
	&quot;RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev&quot;,
	&quot;RUN apt-get install -y nodejs&quot;,
	&quot;RUN mkdir -p /usr/src/app&quot;,
	&quot;WORKDIR /usr/src/app&quot;,
	&quot;RUN gem install bundler&quot;,
	&quot;ADD ./src/Gemfile /usr/src/app/&quot;,
	&quot;ADD ./src/Gemfile.lock /usr/src/app/&quot;,
	&quot;RUN bundle install&quot;,
	&quot;COPY ./src /usr/src/app&quot;,
	&quot;ENV RACK_ENV production&quot;,
	&quot;EXPOSE 80&quot;,
	&quot;CMD [\&quot;rackup\&quot;, \&quot;config.ru\&quot;, \&quot;--host\&quot;, \&quot;0.0.0.0\&quot;, \&quot;--port\&quot;, \&quot;80\&quot;]&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once you have written your captain-definition file, you deploy it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caprover deploy --default
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, alas, this dies with errors:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ caprover deploy --default


------------
CapRover CLI has recently been refactored. Please report potential bugs here: https://github.com/caprover/caprover-cli/issues
------------


Preparing deployment to CapRover...

Ensuring authentication...
Saving tar file to: &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/cts_home_page/temporary-captain-to-deploy.tar&quot;
Using last commit on &quot;caprover&quot;: 2541bb79b9c936a4f624823ddb8a7544a7a0cc42

Deploying cts-home-page to captain-01...

Uploading [====================] 100%  (ETA 0.0s)
Upload done.

This might take several minutes. PLEASE BE PATIENT...

⠸ Building your source code...
------------------------- Mon Nov 11 2019 04:30:15 GMT+0000 (Coordinated Universal Time)
⠇ Building your source code...
[[ TRUNCATED ]]
---&amp;gt; Using cache
---&amp;gt; e876ce01f153
Step 7/23 : RUN apt-get install -y tzdata

---&amp;gt; Using cache
---&amp;gt; b2527a3e63c8
Step 8/23 : RUN apt-get install -y git

---&amp;gt; Using cache
---&amp;gt; cba1d4e5691e
Step 9/23 : RUN apt-get install -y ruby

---&amp;gt; Using cache
---&amp;gt; a5aa1c013480
Step 10/23 : RUN apt-get install -y postgresql

---&amp;gt; Using cache
---&amp;gt; 6667fca6acaa
Step 11/23 : RUN apt-get install -y libpq-dev

---&amp;gt; Using cache
---&amp;gt; b2f1f9d578da
Step 12/23 : RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev

---&amp;gt; Using cache
---&amp;gt; 698c0e61c945
Step 13/23 : RUN apt-get install -y nodejs

---&amp;gt; Using cache
---&amp;gt; a9e2578c2dab
Step 14/23 : RUN mkdir -p /usr/src/app

---&amp;gt; Using cache
---&amp;gt; 30f161f073b3
Step 15/23 : WORKDIR /usr/src/app

---&amp;gt; Using cache
---&amp;gt; 241cfd1f23d4
Step 16/23 : RUN gem install bundler

---&amp;gt; Using cache
---&amp;gt; 1c3707fa9dc1
Step 17/23 : ADD ./src/Gemfile /usr/src/app/

{&quot;message&quot;:&quot;ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory&quot;}
ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory
Build has failed!
----------------------
Deploy failed!
Error: {&quot;message&quot;:&quot;ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory&quot;}
ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory

Something bad happened. Cannot deploy cts-home-page at captain-01.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I am really, really impressed with CapRover and I intend to return to it.  While I didn't get everything working, what did work was &lt;strong&gt;impressive&lt;/strong&gt; and the fact that Rails doesn't deploy is mostly a documentation issue, not a failing, at all, of CapRover.  The issues I had with AWS are also documentation issues.&lt;/p&gt;

&lt;h2 id=&quot;take-2&quot;&gt;Take 2&lt;/h2&gt;

&lt;p&gt;I wrote the above a few hours ago, caught some sleep and then woke up and in the process of closing tabs about CapRover, I found out that you can use a standard Dockerfile by changing your captain-definition to:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;schemaVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dockerfilePath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./Dockerfile&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then here's a valid albeit simple Rails Dockerfile to run on an Ubuntu instance:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM ruby:2.6.5-ubuntu
FROM ubuntu:latest
FROM ruby:2.6.5-stretch

#RUN apk update &amp;amp;&amp;amp; apk add build-base nodejs mariadb-dev tzdata git libxml2-dev

RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y git
RUN apt-get install -y ruby
RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev
RUN apt-get install -y nodejs

RUN mkdir /app
WORKDIR /app

COPY Gemfile Gemfile.lock ./
RUN bundle install --binstubs

COPY . .

# The ENV variables simply need to be set for Rails to correctly pre-compile
# your assets. They do not need to be populated by real values.
RUN bundle exec rake RAILS_ENV=production DATABASE_URL=mysql2://user:pass@127.0.0.1/dbname SECRET_TOKEN=dummytoken assets:precompile

CMD puma -C config/puma.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, let's run thru the deployment process once again, in full:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add the captain-definition file.&lt;/li&gt;
  &lt;li&gt;Add the Dockerfile&lt;/li&gt;
  &lt;li&gt;Do a git add .&lt;/li&gt;
  &lt;li&gt;Do a git commit -m &quot;updated captain stuff&quot;&lt;/li&gt;
  &lt;li&gt;Everything has to be added and committed (but not pushed) since CapRover reads from the local git repo.  If its not added and committed, CapRover won't see it (and they warn you about this but I don't feel the warning is strenuous enough).&lt;/li&gt;
  &lt;li&gt;If this is a new app for you then goto your equivalent url to http://captain.caprover.com and define a new app.&lt;/li&gt;
  &lt;li&gt;On the first time Do a caprover deploy and use the up and down arrows to select the machine and the app.&lt;/li&gt;
  &lt;li&gt;Watch the Docker stuff build.&lt;/li&gt;
  &lt;li&gt;Try to goto the final url and it is likely going to fail with a 502 gateway error.  In this case it is because your Rails app is running in development mode and thus puma is defaulting to 3000.  You can adjust this with the Container HTTP Port setting on your equivalent url to:  https://captain.cartazzi.com/#/apps/details/cts-home-page2&lt;/li&gt;
  &lt;li&gt;Try going again to the domain and it should come up.&lt;/li&gt;
  &lt;li&gt;The next time you deploy you should be use: &lt;strong&gt;caprover deploy –default&lt;/strong&gt; and have it simply remember all the deployment settings.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Here are some good links for CapRover:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/get-started.html&quot;&gt;Getting Started Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover/blob/master/captain-sample-apps/&quot;&gt;CapRover Example Apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/troubleshooting.html&quot;&gt;CapRover Troubleshooting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/app-scaling-and-cluster.html#more-than-one-registry&quot;&gt;Scaling with CapRover&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@kindlysendme/i-found-this-tool-that-helps-you-migrate-your-apps-from-heroku-to-digitalocean-in-10min-and-save-ca097a6e0d72&quot;&gt;Medium Overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/captain-definition-file.html&quot;&gt;Captain Definition File&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover-cli/issues/8&quot;&gt;Github Issue About Rails App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover/issues/324&quot;&gt;Another Github Issue About Rails App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://app.slack.com/client/TC283H40M/CC241KRK4&quot;&gt;Slack Forum about CapRover&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/caprover/2019/11/10/using-caprover-on-aws.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/caprover/2019/11/10/using-caprover-on-aws.html</guid>
        
        <category>caprover</category>
        
        <category>aws</category>
        
        
        <category>caprover</category>
        
      </item>
    
      <item>
        <title>Equity Allocation in Startups</title>
        <description>&lt;p&gt;Once upon a time, I was speaking with a company founder and they mentioned that they had a VP of Engineering to whom they have given a 1/3 stake in the company.  I &lt;strong&gt;immediately&lt;/strong&gt; commented that was too much and then said &quot;I'll write this down in a blog post&quot; – and then I never did.  Last night, oddly, I woke up from a deep sleep with the desire to write this down.  And that brings us to this post.&lt;/p&gt;

&lt;p&gt;Here's what I can remember from that conversation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Company Stage&lt;/strong&gt;: Pre Funding&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Company Type&lt;/strong&gt;: Medical&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Equity Split with the VP of Engineering&lt;/strong&gt;: 1/3&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Founder Title&lt;/strong&gt;: Yes&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Did VP of Engineering Put in Cash&lt;/strong&gt;: No&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;you-need-to-understand-this&quot;&gt;You Need to Understand This&lt;/h2&gt;

&lt;p&gt;One of the basic rules of the startup world is that on Day 1, you, the founder, own &lt;strong&gt;100%&lt;/strong&gt; of something that is worth absolutely &lt;strong&gt;nothing&lt;/strong&gt;.  The goal, by the end, is that you own a much smaller percentage of something actually worth something.  As an example, owning 10% of something worth $10 million is actually much, much better.&lt;/p&gt;

&lt;h2 id=&quot;the-basic-rules-of-thumb-for-equity-allocations&quot;&gt;The Basic Rules of Thumb for Equity Allocations&lt;/h2&gt;

&lt;p&gt;Here are my rules of thumb to use for equity allocation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The more risk you take, the more you get&lt;/li&gt;
  &lt;li&gt;The earlier you join, the more you get&lt;/li&gt;
  &lt;li&gt;Putting time in is one type of risk&lt;/li&gt;
  &lt;li&gt;Putting cash in is a greater type of risk&lt;/li&gt;
  &lt;li&gt;If you, the founder, give too much equity to someone else then you can be pushed out by simply having that other person align with the investor or investors&lt;/li&gt;
  &lt;li&gt;You only have 80% of the equity to play with - 20% generally goes to an ESOP (employee stock option plan)&lt;/li&gt;
  &lt;li&gt;Make damn sure that you give out options not stock and a long vesting schedule (incremental over say 4 years)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line is that equity, in whatever form, is a reward for taking risk.  And the earlier you are involved in a startup, the more risk there is.&lt;/p&gt;

&lt;h2 id=&quot;my-personal-experience-from-feedster&quot;&gt;My Personal Experience from Feedster&lt;/h2&gt;

&lt;p&gt;A long, long time ago, I founded a blog search engine named Feedster.  I merged with another RSS search engine shortly after coming to market to address some technical limitations in my architecture.  We did the typical nerd founder thing and simply split the equity down the middle and both took the Founder title.&lt;/p&gt;

&lt;p&gt;In retrospect that wasn't a fair allocation because I committed significantly more time to Feedster but it avoided a difficult conversation that I was simply not brave enough to have – and that was a mistake.&lt;/p&gt;

&lt;p&gt;Once we realized that blog search was actually a viable business, my first hire was a CEO to handle the operations and capital raise.  This CEO:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Came in after the technology was built&lt;/li&gt;
  &lt;li&gt;Came in after the site had traffic&lt;/li&gt;
  &lt;li&gt;Came in after growth was proven&lt;/li&gt;
  &lt;li&gt;Did not have to put in any personal money&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The equity allocation for that CEO, bear in mind that this was 16 years ago so my memory may be fuzzy was between 9% and 10%.  That CEO's advice to me is that if we filled other VP level slots, we'd be talking about between a 3% to 5% stake.&lt;/p&gt;

&lt;p&gt;If you contrast these numbers with the 1/3 equity split mentioned above, it is considerably less and the reason was that an awful lot of the risk had already been addressed (functional technology, working product, site with traffic, no capital investment, etc).&lt;/p&gt;

&lt;h2 id=&quot;disclaimers&quot;&gt;Disclaimers&lt;/h2&gt;

&lt;p&gt;There are two important disclaimers to understand here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I am not a lawyer (IANAL) and my focus is always on making great technology NOT on the best personal economic return.  This means that there are aspects of capital raising and equity allocation that I don't now and likely never will fully understand.&lt;/li&gt;
  &lt;li&gt;I should also note that equity allocation is a particularly sensitive topic for me because, even though I was the founder, I was forced out by the people I hired and then voted off the board.  And while I am over it (somewhat), had the equity allocations been handled differently, that might not have happened.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-should-this-founder-do&quot;&gt;What Should This Founder Do?&lt;/h2&gt;

&lt;p&gt;My advice to this founder is to get &lt;a href=&quot;https://www.amazon.com/That-Will-Never-Work-Netflix/dp/0316530204/&quot;&gt;Marc Randolph's book, That Will Never Work&lt;/a&gt;, about the founding of Netflix and read pages 180 to 189.   Marc Randolph was the founder of Netflix and the original CEO.  In these pages, Reed Hastings not only told Marc that he needed to step down as CEO and be replaced by Reed but that he needed to give a substantial portion of his equity to Reed in order for that privilege.&lt;/p&gt;

&lt;p&gt;After reading these pages, I think that the founder needs to talk with the VP of Engineering and negotiate the equity split down, the 1/3 is just too high.  Once upon a time, I would have said that once you make an agreement, you have to keep it at all costs.  What this book has illustrated to me is that if circumstances change, you actually can renegotiate even on a sensitive topic like equity allocation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Marc Randolph stayed with Netflix for years even after being replaced as CEO and losing equity in the process.  So even difficult discussions don't necessarily end relationships.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Lest you think that I'm pulling this information out of thin air, I did try and confirm my thoughts a bit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://avc.com/2011/04/how-to-allocate-founder-and-employee-equity/&quot;&gt;AVC on Equity Allocation&lt;/a&gt;; Honestly just read everything that Fred Wilson writes.&lt;/li&gt;
  &lt;li&gt;The Joel Spolsky answer that Fred Wilson is referencing above is offline but I managed to find it in the &lt;a href=&quot;https://web.archive.org/web/20110415170946/http://answers.onstartups.com/questions/6949/forming-a-new-software-startup-how-do-i-allocate-ownership-fairly/23326&quot;&gt;Internet Archive&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/lebret/equity-split-in-startups&quot;&gt;Google's Equity Allocation&lt;/a&gt;: Eric Schmidt, the former CEO of Sun, only got 5.4%; &lt;a href=&quot;https://en.wikipedia.org/wiki/Omid_Kordestani&quot;&gt;Omid Kordestani&lt;/a&gt;, VP of Sales I believe, only got 1.8%.  Both these individuals joined later so they weren't really founders but this illustrates the basic concept that the later you join, the less risk so the less equity.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cooleygo.com/how-to-allocate-stock-to-founders-early-team-members/&quot;&gt;CooleyGo on Equity Splits&lt;/a&gt;; this has a VP of Marketing getting 17% at a founder stage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;None of the numbers are exactly the same as the Feedster situation but that's normal.  Every startup is different.  As the founder of this company, they need to examine the risk that this VP of Engineering candidate is taking and assess whether or not a 1/3 stake is actually warranted (example - is the VP of Engineering writing the prototype that is used to raise capital).&lt;/p&gt;

&lt;p&gt;And you can always run a &lt;a href=&quot;https://www.google.com/search?q=startup+equity+allocation&amp;amp;oq=startup+equity+allocation&amp;amp;aqs=chrome..69i57j69i60.6023j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;google search for Startup Equity Allocation&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/10/equity-allocation-in-startups.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/10/equity-allocation-in-startups.html</guid>
        
        <category>startup</category>
        
        <category>equity</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Adding a Show / Hide Feature to Your Bootstrap 4 Divs</title>
        <description>&lt;p&gt;I know this is simple but I am JavaScript / CSS challenged so I'm writing it down because I've had continuous problems with it in the past and I know that this solution works for Bootstrap 4.&lt;/p&gt;

&lt;p&gt;Let's say that you have a div that you want hidden and only displayed by a button when you click it.  Here's the solution:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#feeds&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-toggle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Toggle Feeds&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;feeds&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    This div (feeds) is hidden by default.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's how this works:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add a div named &lt;em&gt;feeds&lt;/em&gt; around the content you want hidden.  This needs to have a class named &lt;em&gt;collapse&lt;/em&gt; added to it because its default display state is collapsed.&lt;/li&gt;
  &lt;li&gt;Add an A tag with an href of &quot;#feeds&quot;  above the content and a data-toggle named &lt;em&gt;collapse&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;When the user clicks the A tag then the a tag's data-toggle will be applied to the matching div.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thank you to this &lt;a href=&quot;https://stackoverflow.com/questions/23873005/hide-div-by-default-and-show-it-on-click-with-bootstrap&quot;&gt;Stack Overflow post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/11/10/adding-a-show-hide-feature-to-your-bootstrap-divs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/11/10/adding-a-show-hide-feature-to-your-bootstrap-divs.html</guid>
        
        <category>bootstrap</category>
        
        <category>html</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Ruby Madness - Right Hand If Statements and Syntax Error, Unexpected end-of-input, Expecting End</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7793.jpeg&quot; alt=&quot;IMG_7793.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;The Eagle's Nest AirBnB Cabin on the Ohio River; One of my favorite places…&lt;/p&gt;

&lt;p&gt;Last night I was on a coding tear, that moment when the solution is just &lt;strong&gt;crystal&lt;/strong&gt; clear.  That situation where something you've struggled with for days / weeks / months and then it all comest together.&lt;/p&gt;

&lt;p&gt;The result of this was a whole bunch of code stuck in a single model and then this morning when I was ready to run it across the entire dataset, I got this crap:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -c app/models/habit.rb
app/models/habit.rb:592: syntax error, unexpected end-of-input, expecting end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I &lt;strong&gt;censored&lt;/strong&gt; hate this error.  Line 592 is the end of the class and that means that the ruby parser just blithely skipped to the end and really has no useful positional information for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're not familiar with ruby -c, it is a syntax checker that makes sure your file is parseable.  Think of it as a poor man's lint.&lt;/p&gt;

&lt;p&gt;My usual approach to finding this error is to cut our half the code in the file and then re-run the ruby -c process.  And then repeat that until you get this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -c app/models/habit.rb
Syntax OK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's how I ended up finding the error but the error was ridiculously subtle.&lt;/p&gt;

&lt;p&gt;Here's the error:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_feeds&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_feed?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the corrected version of the method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_feeds&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_feed?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, this is subtle, so I'm going to just call it out.  The issue was this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habits_with_feeds &amp;lt;&amp;lt; habit if habit.has_feed?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;versus&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habits_with_feeds &amp;lt;&amp;lt; if habit.has_feed?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Clearly, to the ruby parser, the lack of something being added to the array qualifies as a missing end.  Yeah I get that but damn.   I'm personally a huge fan of right hand if statements due to the reduction of 3 lines down to 1 but this is a case where they bit me &lt;strong&gt;hard&lt;/strong&gt;.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/11/07/ruby-madness-right-hand-if-statements-and-syntax-error-unexpected-end-of-input-expecting-end.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/11/07/ruby-madness-right-hand-if-statements-and-syntax-error-unexpected-end-of-input-expecting-end.html</guid>
        
        <category>ruby</category>
        
        <category>debugging</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Running Effective Agile Standup Meetings</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1407.jpeg&quot; alt=&quot;IMG_1407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So my new gig has moved to doing daily agile standup meetings and while I've done these before, I don't think I've ever seen them done quite so consistently well.  And the credit for this goes to my boss, Dave Sifry, who is our lead facilitator.  We are a team of 8 people and, so far, we have brought them in at under the scheduled 15 minutes per meeting every time.&lt;/p&gt;

&lt;p&gt;Here are the techniques that we are using:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Start on time&lt;/strong&gt;.  If everyone isn't there, well, the meeting happens anyway.  Ideally, if the team lead isn't on time, the meeting happens anyway.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scheduled for 5 minutes after the hour&lt;/strong&gt;.  This allows people in other meetings to make it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A consistent Url&lt;/strong&gt;.  This is the one down side to Zoom - the meeting can't start if the leader isn't present.  If we used Google Meet then that wouldn't be an issue.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A simple format&lt;/strong&gt;.  A ridiculously simple, fast format:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Here's what I'm up to today&lt;/li&gt;
  &lt;li&gt;Here's what I'm stuck on.&lt;/li&gt;
  &lt;li&gt;How can I help anyone else?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I'm generally not a fan of meetings, agile stand ups, done this way, tend to bring developers into line.  Even if a developer isn't good with email - or good with text messages - normally they can handle &quot;show up at time X for 15 minutes every day&quot;.&lt;/p&gt;

&lt;p&gt;In closing, while I'm not a huge proponent of &lt;a href=&quot;https://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-agile-model.html&quot;&gt;heavy weight agile processes (think scrum / agile velocity)&lt;/a&gt;, I am really enjoying daily stand ups again.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/11/06/running-effective-agile-standup-meetings.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/11/06/running-effective-agile-standup-meetings.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Stupid Simple ActiveRecord Optimizations or Why Rails Console is Essential for Development</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9823.jpeg&quot; alt=&quot;IMG_9823.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ever since 2008 when my pairing partner at the time, Jared, pushed me to basically live in the Rails console, I've been heavily, heavily dependent on the console as an essential developer tool.  I just watched something that pointed out to me just why it is so damn important.&lt;/p&gt;

&lt;p&gt;Here's what I observed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.6.3 :057 &amp;gt; m.change_pct_today_over_goal?
  Goal Load (65.2ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
  Habit Load (0.4ms)  SELECT `habits`.* FROM `habits` WHERE `habits`.`id` = 39 LIMIT 1
  Goal Load (0.5ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
  Goal Load (30.2ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I simply can't think that the fact that we're loading the goal from the database 3 times is an optimal use of computing resources.  So I dug into the code and here's what I saw:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# original&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_pct_today_over_goal?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first 3 lines in the method above walk database associations back to the goal.  The simple optimization is to store the goal in a local variable so it is only read once:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# rewritten&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_pct_today_over_goal?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now it is possible that with the right caching strategy server side, this change wouldn't be necessary but caching is always problem.  It is simply better to solve this without caching because not only will that speed things in production but it will also speed things in development.&lt;/p&gt;

&lt;p&gt;And, yes, this would have been obvious if I had been tailing log files but the beauty of Rails console is that all this information is present if you simply pay a small bit of attention.&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/05/stupid-simple-activerecord-optimizations-or-why-rails-console-is-essential-for-development.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/05/stupid-simple-activerecord-optimizations-or-why-rails-console-is-essential-for-development.html</guid>
        
        <category>rails</category>
        
        <category>active_record</category>
        
        <category>optimization</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Reading Files to Strings using Python and then Loading them to JSON</title>
        <description>&lt;p&gt;I know this is dirt simple but I'm writing it down because it is one of those simple things that I just forget constantly.&lt;/p&gt;

&lt;p&gt;In each of these cases, the output is to the str variable.&lt;/p&gt;

&lt;h2 id=&quot;using-a-with-block-to-auto-close-the-file&quot;&gt;Using a With Block to Auto Close the File&lt;/h2&gt;

&lt;p&gt;As a rubyist, I keep reading this as str is local to the with &quot;block&quot;. Of course python doesn't have blocks …&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;python-35-path-statement-one-liner&quot;&gt;Python 3.5 Path Statement One Liner&lt;/h2&gt;

&lt;p&gt;I really like this approach but pathlib always has to be imported.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;non-auto-closing-not-recommended&quot;&gt;Non Auto Closing Not Recommended&lt;/h2&gt;

&lt;p&gt;This is simple but leaves an open file hanging around.  Sigh.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;auto-closing-single-line&quot;&gt;Auto Closing Single Line&lt;/h2&gt;

&lt;p&gt;This is elegant but it buries the assignment variable in the middle of the line which feels wrong.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;loading-it-to-json&quot;&gt;Loading it to JSON&lt;/h2&gt;

&lt;p&gt;The json.loads statement takes a string in and converts it to a Python dict / hash so all you need to do is inline the string reading call from above and get an easy one liner (if you disregard the import lines).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8369219/how-to-read-a-text-file-into-a-string-variable-and-strip-newlines&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://realpython.com/python-json/&quot;&gt;Real Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/11/04/reading-files-to-strings-using-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/11/04/reading-files-to-strings-using-python.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Using Git Commits to Learn to Program Ruby on Rails</title>
        <description>&lt;p&gt;I've been actively working on a side project for the past several months and one of the people who has been helping out a bit around the edges wants to learn how to program Ruby on Rails.  Since this, like everything I always do, is a distributed, remote effort, an in person teaching effort just doesn't work.&lt;/p&gt;

&lt;p&gt;When they pushed back on the feature set I was making and said that it wouldn't work for them, I said &quot;Well that's fine, tell me what &lt;strong&gt;you&lt;/strong&gt; want&quot;.  And they responded with a detailed set of Agile User Stories.  I took a look at these and I realized that if I mapped them into Github issues (aka tickets) and then Github Pull Requests that this might be exactly the right tool to get this person past the learning hump.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Just to be clear, it doesn't matter what the side project is.  Yes it is live on the Internet but it is buggy as hell.  And this is a major new feature.  The whole point of this blog post is to talk about a new learning technique not &quot;Scott's (current) Crazy Side Project&quot;.&lt;/p&gt;

&lt;h2 id=&quot;learning-from-code-commits&quot;&gt;Learning from Code Commits&lt;/h2&gt;

&lt;p&gt;The hard part with learning any new development framework is making the leap from &quot;here's what I want&quot; (the story) to &quot;here's what to do to make that&quot; (the code and tooling steps).  Now if you use Github &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;how we do, with a simple branch based development model&lt;/a&gt;, where 1 issue maps to 1 branch, this means that you can actually look at a user story and then see all the changes.&lt;/p&gt;

&lt;p&gt;This is a weird enough learning concept that I'm going to illustrate this step by step.&lt;/p&gt;

&lt;h2 id=&quot;beginning-with-the-story&quot;&gt;Beginning With the Story&lt;/h2&gt;

&lt;p&gt;Let's start with the agile user story:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a user, I want a currency system (ChangeCoins - CC) that is awarded to me for doing stuff.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From a Rails perspective, what this means, is that we need a data model, persistently stored to the database that tracks something else.&lt;/p&gt;

&lt;h2 id=&quot;continuing-to-the-issue&quot;&gt;Continuing to the Issue&lt;/h2&gt;

&lt;p&gt;Let's look at the issue in question:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_01_issue.png&quot; alt=&quot;learning_rails_from_commits_01_issue.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few notes on the issue here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&quot;Needs to tie back to user_id, metric_id, habit_id&quot; - this indicates foreign key relationships back to other data models in the project&lt;/li&gt;
  &lt;li&gt;&quot;bundle exec **rails g model **ChangeCoin&quot; - this is a Rails generator command which scaffolds up a new data model and all associated files&lt;/li&gt;
  &lt;li&gt;&quot;mate db/migrate/20191101144038_create_change_coins.rb&quot; - this is just opening the migration (a migration is a set of DDL commands to create a table or change something in the database)&lt;/li&gt;
  &lt;li&gt;&quot;bundle exec r&lt;strong&gt;ake db:migrate&lt;/strong&gt;&quot; - this executes the migration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A big reason for the notes on the issue is that if I don't put notes into the issue, how would you know that there are commands like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rail g model&lt;/li&gt;
  &lt;li&gt;rake db:migrate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These commands don't exist in the pull request so they have to be manually documented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're going to use this approach then I strongly, strongly advise you to add a label to your issues so that all issues can be logically grouped together.  Even though you think &quot;Oh I'll just work on this one thing&quot;, something else will come up (I got 2 issues into Change Coins and then found 4 other bugs, each of which was its own issue).&lt;/p&gt;

&lt;h2 id=&quot;the-branch&quot;&gt;The Branch&lt;/h2&gt;

&lt;p&gt;Now we need to turn to the Github branch and the pull request.  A pull request is a set of changes that, for this project, represent what happened in the branch.&lt;/p&gt;

&lt;p&gt;Let's start with the changed files in this branch:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_02_overview.png&quot; alt=&quot;learning_rails_from_commits_02_overview.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This shows that 4 files changed.  Now of these four files, one was automatically generated by the system (schema.rb) and isn't ever touched by the user and the other (reward_spec.rb) is just a skeleton file at this point so neither of these files will be shown.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_03_model.png&quot; alt=&quot;learning_rails_from_commits_03_model.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a Rails model file.  The source code comments beginning with pound symbols organize the model and illustrate where required things should be placed.  This isn't a Rails convention, this is a &quot;Scott&quot; convention as I find it helps me avoid making mistakes.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_04_migration.png&quot; alt=&quot;learning_rails_from_commits_04_migration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a Rails migration file.  It lays out the data model for the entire table that stores the rewards for the user.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This isn't a perfect approach to learning, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Issues need to map 1:1 to agile user stories&lt;/li&gt;
  &lt;li&gt;Commands aren't captured by the git commit so you have to manually update the issue to capture them&lt;/li&gt;
  &lt;li&gt;It is mildly challenging to go back into a closed issue and find the changes related to the pull request because the request doesn't automatically track to the issue number but instead to the git commit hash; this might be a problem with me and how I name the pull requests; tbd.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even with these problems, I think there might be something interesting here.  I'll keep you posted if any real learning occurs from this.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/03/using-git-commits-to-learn-to-program-ruby-on-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/03/using-git-commits-to-learn-to-program-ruby-on-rails.html</guid>
        
        <category>rails</category>
        
        <category>git</category>
        
        <category>learning</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Running a Team Retrospective Meeting</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9822.jpeg&quot; alt=&quot;IMG_9822.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am a member of an 8 person team that is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;part of a non profit&lt;/li&gt;
  &lt;li&gt;distributed all over the country&lt;/li&gt;
  &lt;li&gt;trying to get started on a new initiative and find our footing; we are about 1 year old (I've only been here for 2 months)&lt;/li&gt;
  &lt;li&gt;just had our first offsite&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the offsite I witnessed a fascinating exercises in doing a retrospective on the past year's work that my boss, Dave Sifry, orchestrated.  This is now my third time consulting for Dave Sifry and he and I have done this before but I never documented it so I wanted to write down how to was done.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-retrospective-meeting&quot;&gt;What is a Retrospective Meeting?&lt;/h2&gt;

&lt;p&gt;A retrospective is when a team looks back and tries to determine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What went well&lt;/li&gt;
  &lt;li&gt;What to improve&lt;/li&gt;
  &lt;li&gt;Possible questions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of this type of retrospective is that you're doing it in a lightweight, agile fashion where you aren't spending days or even a day on it.  You can literally review a year's worth of work in under an hour (I know this because we just did it).&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;Here's what you need to do this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shared Google Spreadsheet that breaks things down into columns you can vote on.  Here's the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1f7xKqs_1jUKae1aaKhnTG_uO_xddifL3OXnf4nX3sSQ/edit?usp=sharing&quot;&gt;template&lt;/a&gt; to use.&lt;/li&gt;
  &lt;li&gt;A timer; we used &quot;Visual Timer 2&quot; on an iPad which was awesome since it had great sounds but any count down timer would work.  The key here is that you want it to be highly visible to everyone on the team hence using it on an iPad not a phone.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1---what-went-well&quot;&gt;Step 1 - What Went Well&lt;/h2&gt;

&lt;p&gt;Here are the specific steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take the spreadsheet template and save it to a new name, something like &quot;Project Name - Time Period - Retrospective&quot;.  Our name was &lt;strong&gt;CTS 2019 Retrospective&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Post the link to the spreadsheet in your team's Slack channel or email or something that everyone gets.&lt;/li&gt;
  &lt;li&gt;Start the timer and announce something like &quot;Ok.  Starting now.  We have 15 minutes to document what went well; GO !&quot;&lt;/li&gt;
  &lt;li&gt;Have everyone open the spreadsheet and start typing in things that went well.  If someone is working in cell A2 then move to cell A3 (or A10 or whatever).  No one should overwrite anyone's work.&lt;/li&gt;
  &lt;li&gt;Announce &quot;When you are done, return your cursor to A1&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If your experience is anything like ours, what you are going to find is that an awful lot of interesting things are going to emerge.  For our group, one of the most interesting was that we operated without a leader for 8 months.  Since I have just joined, I had no idea of this.&lt;/p&gt;

&lt;h2 id=&quot;step-2---everyone-votes-on-what-went-well&quot;&gt;Step 2 - Everyone Votes on What Went Well&lt;/h2&gt;

&lt;p&gt;At this point we have a list of all the things that everyone thinks went well.  But it is just a list and this list can be long (we had maybe 25 items).  The trick now is to prioritize it and you can do this by letting people vote on the items.  Everyone can vote on any item (including the ones they contributed).&lt;/p&gt;

&lt;p&gt;Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set the timer to a lesser amount of time.  Maybe 10 minutes if you spent 15 minutes to write all the tasks.&lt;/li&gt;
  &lt;li&gt;Tell people &quot;Ok.  Now vote on things.  Right now there is nothing in each cell and that's fine.  If you want to vote on something then put a 1 where it here is nothing.  If there is a 1 then make it a 2 and so on&quot;.&lt;/li&gt;
  &lt;li&gt;Tell people to begin.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The next step is to sort this which requires using some of the better features in Google Sheets.  Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mark a block in the spreadsheet from A2 (the first &quot;what went well&quot;) down to the last column in the voting block for &quot;what went well&quot;.&lt;/li&gt;
  &lt;li&gt;From the Data menu, select the Sort Range command.&lt;/li&gt;
  &lt;li&gt;Change the sort column over to B as you want to sort these by the vote and then by Z to A.  This lets you sort by the descending value of the votes, from most popular to least popular.&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/retrospective_sort.png&quot; alt=&quot;retrospective_sort.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3---what-to-improve&quot;&gt;Step 3 - What to Improve&lt;/h2&gt;

&lt;p&gt;The next step is repeat steps 1 and 2 but on the &quot;What to Improve&quot; section.  Use the same timed model of listing and then voting.  Be very careful when you story that you select C2 down to Dwhatever otherwise you'll mess up the data you carefully arranged in step 2.&lt;/p&gt;

&lt;h2 id=&quot;step-4---discuss&quot;&gt;Step 4 - Discuss!&lt;/h2&gt;

&lt;p&gt;The final step in all this is to a group discussion.  This too should be time bounded, say 20 minutes and you should take notes in the Comments / Possible Questions columns.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I've now done this twice with Dave Sifry and both times it turned the normal process of a retrospective from something painful, lengthy and annoying into a less than hour meeting with a detailed, useful takeaway – the spreadsheet.  While in previous career incarnations, I have been dubbed &quot;The Antiprocess&quot;, any process that makes meetings better, imho, is beyond awesome.   Thank you Dave!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/11/01/running-a-team-retrospective-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/11/01/running-a-team-retrospective-meeting.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Running a Daily Agile Standup Meeting</title>
        <description>&lt;p&gt;Simple agile stand ups
Here's what I'm up to today
Here's what I'm stuck on
How can I help anyone else&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2019/11/01/running-a-daily-agile-standup-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/11/01/running-a-daily-agile-standup-meeting.html</guid>
        
        
      </item>
    
      <item>
        <title>Running a P1, P2, P3 Team Prioritization Meeting</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9749.jpeg&quot; alt=&quot;IMG_9749.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Really is anything more scary than prioritization???; Picture taken at Pete's Dueling Piano Bar, Austin, TX; Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am a member of an 8 person team that is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;part of a non profit&lt;/li&gt;
  &lt;li&gt;distributed all over the country&lt;/li&gt;
  &lt;li&gt;trying to get started on a new initiative and find our footing; we are about 1 year old (I've only been here for 2 months)&lt;/li&gt;
  &lt;li&gt;just had our first offsite&lt;/li&gt;
  &lt;li&gt;juggling way too much work hence the need to prioritize&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the offsite I witnessed a fascinating exercises in setting priorities that my boss, Dave Sifry, orchestrated.  I haven't seen prioritization done quite this way in the past so I wanted to write down how this was done.  I also made one important contribution during the process&lt;/p&gt;

&lt;h2 id=&quot;step-1---terms&quot;&gt;Step 1 - Terms&lt;/h2&gt;

&lt;p&gt;There are three types of priorities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;P1 - something that you have to do the instant it comes up; drop everything and worry about it&lt;/li&gt;
  &lt;li&gt;P2 - something that you can do on the second day&lt;/li&gt;
  &lt;li&gt;P3 - something that can wait 3 days&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-2---list-what-you-do&quot;&gt;Step 2 - List What You Do&lt;/h2&gt;

&lt;p&gt;This was a simple process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Put all people in the same room with a shared note space (white board or easel size post it )&lt;/li&gt;
  &lt;li&gt;Designate a person to write all the things that you do&lt;/li&gt;
  &lt;li&gt;Time bound the exercise to say 20 minutes and try and make sure that each person's tasks are listed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 1&lt;/strong&gt;: Make sure that the person listing the priorities on the white board / easel size post it has decent hand writing.  Our initial writer was close to illegible so we had to rewrite them all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 2&lt;/strong&gt;: Use a different color pen for each person's tasks&lt;/p&gt;

&lt;h2 id=&quot;step-3---apply-the-priorities&quot;&gt;Step 3 - Apply the Priorities&lt;/h2&gt;

&lt;p&gt;You then go through the tasks and write down P1, P2, P3 next to each task.  Inherently you are going to err on the side of P1 which brings us to My Contribution.&lt;/p&gt;

&lt;h2 id=&quot;my-contribution&quot;&gt;My Contribution&lt;/h2&gt;

&lt;p&gt;My contribution to this process was actually pretty simple.  I asked this question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How many top level, P1, priorities can a team our size support?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My boss had a brilliant answer - &quot;maybe one per person, possibly less&quot;.&lt;/p&gt;

&lt;p&gt;I really wasn't trying to be a jerk; just trying to apply my normal engineering perspective to things.&lt;/p&gt;

&lt;p&gt;This limited us to &lt;strong&gt;6&lt;/strong&gt; or &lt;strong&gt;7&lt;/strong&gt; P1 priorities and that forced the work in Step 3 to be restructured and a bunch of items to move from P1 to P2 or P3.&lt;/p&gt;

&lt;p&gt;The really interesting outcome of this exercise was that my own work, Engineering, ended up being a &lt;strong&gt;P3&lt;/strong&gt; priority!  And the reason was simple – we are in early, early stages of the product life cycle and while what we are doing is interesting, it isn't yet anything exposed to the public so other things have to be the top priority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We are a non profit that does advocacy and public policy work so we have an obligation to be responsive to the public / deal with crisis events that come up somewhat regularly.&lt;/p&gt;

&lt;h2 id=&quot;step-4---document-it&quot;&gt;Step 4 - Document It&lt;/h2&gt;

&lt;p&gt;The final step is to take an incredibly messy working document and then distribute it across the team.  This could be done with Google Docs, Slack or some other mechanism.&lt;/p&gt;

</description>
        <pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/10/31/how-to-set-priorities-in-a-team-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/10/31/how-to-set-priorities-in-a-team-meeting.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>How to Make Progress on a Side Project - Invert</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9755.jpeg&quot; alt=&quot;IMG_9755.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Because side projects are as ridiculous as someone doing push ups on top of a set of dueling pianos; Picture taken at Pete's Dueling Piano Bar, Austin, TX; Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Great Googly Moogly!  My current side project is almost 10K lines of code in total or at least 5k lines (and yes there are tests, rspec, I don't know why it says 0 lines of tests):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1161 |    767 |      23 |      95 |   4 |     6 |
| Helpers              |    267 |    207 |       0 |      36 |   0 |     3 |
| Jobs                 |      2 |      2 |       1 |       0 |   0 |     0 |
| Models               |   2151 |   1316 |      23 |     137 |   5 |     7 |
| Mailers              |      4 |      4 |       1 |       0 |   0 |     0 |
| Channels             |      8 |      8 |       2 |       0 |   0 |     0 |
| JavaScripts          |   4351 |   3599 |       0 |     183 |   0 |    17 |
| Libraries            |   1304 |    811 |       0 |       7 |   0 |   113 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |   9248 |   6714 |      50 |     458 |   9 |    12 |
+----------------------+--------+--------+---------+---------+-----+-------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's big for a side project and it is particularly big for something that hasn't actually launched yet.  When I was building this, I made a deliberate decision about how I approached this side project which dramatically &lt;strong&gt;increased&lt;/strong&gt; my productivity.&lt;/p&gt;

&lt;p&gt;My decision, right from day 1, was to &lt;strong&gt;Invert&lt;/strong&gt;.  Normally we think of a side project as something you do &lt;strong&gt;after&lt;/strong&gt; work so what I did was to do my side project as my &lt;strong&gt;first thing&lt;/strong&gt; every day I worked on it.&lt;/p&gt;

&lt;p&gt;Here's my thinking on this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A side project is something that a developer does for his or her or their self (pronoun, pronoun, pick a pronoun).&lt;/li&gt;
  &lt;li&gt;Self comes before work. For serious developers, those that build side projects, a side project is literally self care.&lt;/li&gt;
  &lt;li&gt;Thus do it first thing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What I have found is that if you wait until after the day is done, you are just plain tired.  Often you have all the best intentions of working on something but you simply don't get to it because, well, &lt;strong&gt;life&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now when you do it first thing, I don't mean that I'm putting in 8 hours on my side project and then a day of work.  Sometimes I might put in 15 minutes.  Sometimes an hour.  Rarely has it been more than that.&lt;/p&gt;

&lt;p&gt;Let's look at the metrics real quick:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;50 work weeks in a year&lt;/li&gt;
  &lt;li&gt;Let's say you are 60% successful in working on your side project 3 days out of the week&lt;/li&gt;
  &lt;li&gt;Let's say that you manage to put in 0.5 hours per day on it&lt;/li&gt;
  &lt;li&gt;That's 1.5 hours per week or 75 hours per year&lt;/li&gt;
  &lt;li&gt;In a modern development context, using a framework, 75 hours actually &lt;strong&gt;can&lt;/strong&gt; build something. Add in some weekend time and you might really have something.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/side_project/2019/10/31/how-to-make-progress-on-a-side-project-invert.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/side_project/2019/10/31/how-to-make-progress-on-a-side-project-invert.html</guid>
        
        <category>side_project</category>
        
        
        <category>side_project</category>
        
      </item>
    
      <item>
        <title>Essential Technology for a Team Offsite</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9771.jpeg&quot; alt=&quot;IMG_9771.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of wrapping up a team offsite even though I was ostensibly the lead technologist present, I was not actually prepared in terms of bringing the right technology with me to facilitate the team's needs.  The single worst omission was the lack of an HDMI cable without which, I saw three tech folk (me, other engineer #1, team coordinator) fail to be able to connect a Mac, an iPad and a Windows box to a Chrome Cast equipped TV.&lt;/p&gt;

&lt;p&gt;Here is my list of the technical stuff I will never again be without for a team meeting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A couple of USB sticks.  Even today in the age of Google Drive and DropBox, USB sticks can still be more convenient&lt;/li&gt;
  &lt;li&gt;An &lt;a href=&quot;https://www.amazon.com/Anker-PowerCore-13000-Portable-Charger/dp/B00Z9QVE4Q/ref=sr_1_5?keywords=anker+USB+battery&amp;amp;qid=1572475840&amp;amp;sr=8-5&quot;&gt;Anker USB battery&lt;/a&gt; just in case&lt;/li&gt;
  &lt;li&gt;2 lightning cables, at least one of which is 6 foot like this &lt;a href=&quot;https://www.amazon.com/gp/product/B0753R2TWC/&quot;&gt;Amazon cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 6' &lt;a href=&quot;https://www.amazon.com/gp/product/B076FPGWNZ/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;amp;psc=1&quot;&gt;USB type C cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 USB 2 cable&lt;/li&gt;
  &lt;li&gt;1 power strip with USB ports&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/Desktop-Outlet-Braided-Extension-Office/dp/B07HCVFH82/&quot;&gt;extension cord with USB ports&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 Verizon Mifi Hotspot able to share connectivity if WiFi fails&lt;/li&gt;
  &lt;li&gt;1 ChromeCast&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/AmazonBasics-High-Speed-HDMI-Cable-1-Pack/dp/B014I8SSD0/&quot;&gt;6' HDMI Cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 USB Speaker like a Beats Pill&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is roughly enough technology to support a team offsite of 6 to 8 people (imho).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I use a MacBook 2015 classic so I still have real ports.  If you are using newer MacBooks then you likely need dongles as well.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/offsite/2019/10/30/essential-technology-for-a-team-offsite.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/offsite/2019/10/30/essential-technology-for-a-team-offsite.html</guid>
        
        <category>offsite</category>
        
        <category>management</category>
        
        <category>startup</category>
        
        
        <category>offsite</category>
        
      </item>
    
      <item>
        <title>What Does Snark to our Alexas Teach Our Kids</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9621.jpeg&quot; alt=&quot;IMG_9621.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;You would think by now that I'd be wise enough to capture the speaker as well as the slide when I take a photo; alas not; &lt;em&gt;sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Last week I saw &lt;a href=&quot;https://en.wikipedia.org/wiki/Daniel_H._Wilson&quot;&gt;Daniel Wilson&lt;/a&gt; speak over at Butler University.  Daniel is the author of &lt;a href=&quot;https://en.wikipedia.org/wiki/Robopocalypse&quot;&gt;Robopocalypse&lt;/a&gt;, Robogenesis, &lt;a href=&quot;https://en.wikipedia.org/wiki/How_to_Survive_a_Robot_Uprising&quot;&gt;How to Survive a Robot Uprising&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Where%27s_My_Jetpack%3F&quot;&gt;Where's My Jetpack&lt;/a&gt; and many other good bits of science fiction.  There were two surprising things in his presentation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;He was funny.  As someone who has written some pretty dark stuff, I was astonished at just how funny he was.  &quot;I asked my fellow Carnegie Mellon robotics folks what they'd to if the robots rose up and they all said the same thing - 1) Go to a staircase and go up one step and 2) wait for it to run out of batteries&quot;.  And then, with input like that, he made a damn book out of it!  &lt;strong&gt;Respect&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;He was surprisingly gender aware which is what I really want to talk about here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This second point is the focus of this blog post.  He is raising small children and he and his wife are teaching them to be respectful to their Alexa and / or Google Home by saying &quot;please&quot; and &quot;thank you&quot; to it.  This is &lt;strong&gt;interesting&lt;/strong&gt;.  His basic point boils down to this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Digital assistants tend to have female voices (there's a reason for this but its irrelevant for now)&lt;/li&gt;
  &lt;li&gt;What does it teach his son (or daughter) if they regularly hear Dad saying &quot;Alexa Shut the F up!&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cursing at Alexa, for me, is a bit of a dirty pleasure.  And this is particularly true when it is is an early morning alarm and I don't want got get up.  But I am now painfully aware that maybe I shouldn't do this – what am I teaching my youngest about how to interact with female voices?  &lt;em&gt;Deep, Deep Sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And Thank You to Daniel Wilson for such an interesting, funny talk.  His writings are definitely &lt;strong&gt;recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sbi_logo.jpg&quot; alt=&quot;sbi_logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don't want to get get into the gender issues around why we use assistive voices that are female and imperative voices that are male.  That is a different issue entirely.  And thanks to Lisa Meece of &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Starbase Indy&lt;/a&gt; fame for pointing this out to me and illustrating it with examples, specifically of the New York City Subway system.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/gender/2019/10/28/what-does-snark-to-our-alexas-teach-our-kids.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/gender/2019/10/28/what-does-snark-to-our-alexas-teach-our-kids.html</guid>
        
        <category>gender</category>
        
        <category>alexa</category>
        
        <category>manners</category>
        
        
        <category>gender</category>
        
      </item>
    
      <item>
        <title>Calling Python Methods - Subtleties with and without Parens</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_bar.jpg&quot; alt=&quot;sifry_london_bar.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;p&gt;In the continuing saga of &quot;Once upon a time I did ruby exclusively, now I do python and ruby side by side and I keep being stupid&quot;, I have discovered something subtle and interesting about how python works internally.&lt;/p&gt;

&lt;p&gt;Let's start with a function definition in python:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;expert_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Anti Semitic Speech Expert&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expert_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_opinion_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;slurs&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;raw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;score&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;opinion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expert_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expert_name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expert_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expert_version&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first two lines are globals and all the next line does is construct a hash (ok dict if I have to talk python).  I then embedded this method in my service and ran it using Firefly so I could call into it across the network and I got this curious error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  File &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/firefly/app.py&quot;, line 170, in __call__
    result = self.function(**kwargs)
  File &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py&quot;, line 107, in opinion
    new_opinion[&quot;raw&quot;] = json_results
TypeError: 'function' object does not support item assignment
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but new_opinion isn't a function – it is a dict – so what the heck is going on???&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're an experienced Python wrangler, you already got it – I know, I know – I'm slow as hell at times particularly when it comes to syntax changes.&lt;/p&gt;

&lt;p&gt;In ruby you can call methods with or without parens and the issue here is I had this syntax:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;opinion_template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_opinion_template&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;instead of:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;opinion_template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_opinion_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I simply forgot to add the parens when I called make_opinion_template.  Sigh.  The way I ultimately found this was to use a pdb.set_trace() call and evaluate opinion_template in the debugger.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; /Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py(109)opinion()
-&amp;gt; new_opinion[&quot;raw&quot;] = json_results
(Pdb) new_opinion
&amp;lt;function make_opinion_template at 0x13e328ef0&amp;gt;
(Pdb) quit()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then, after the fix:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; /Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py(109)opinion()
-&amp;gt; new_opinion[&quot;raw&quot;] = json_results
(Pdb) new_opinion
{'name': 'slurs', 'raw': None, 'score': None, 'opinion': None, 'expert_name': 'Anti Semitic Speech Expert', 'expert_version': 0.01}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Personally I would have thought this would have been syntactically invalid but when a compile check didn't find an error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m py_compile expert_antisemitic_speech_service.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I am forced to admit that this must be lexically correct for some reason that I'm too unskilled at python to understand.&lt;/p&gt;

&lt;p&gt;So, a short note to myself: &lt;strong&gt;Don't forget the parens when you call methods&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/28/calling-python-methods-subtleties-with-and-without-parens.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/28/calling-python-methods-subtleties-with-and-without-parens.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Improving Your Terminal Prompt with a Starship</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_sunrise.jpg&quot; alt=&quot;sifry_london_sunrise.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;p&gt;I have a lot of computer skills.  I can program in multiple languages, I can remember how to use Norton Utilities for DOS, I can remember how to use Sun OS, I can tell you about not HTML, not XML, not SGML but GML (which begat SGML which in turn begat HTML which in turn begat XML), etc.  One of those computer skills that I don't have is *nix shell scripting – I suck at Bash; I suck at Zshell, etc.  And *nix shell scripting is how you customize your Terminal prompt.&lt;/p&gt;

&lt;p&gt;Now I know this sounds like Nerd minutiae (and it is) but your Terminal prompt is this rich land of information (or it can be; normally mine isn't).  About 6 months ago, Sean Kennedy, my pairing partner in crime, got me to change over to Zshell from Bash and, in doing so, update my prompt.&lt;/p&gt;

&lt;p&gt;My prompt now looks like this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_zsh.png&quot; alt=&quot;prompt_zsh.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that's damn good.  I mean it tells me the git repo and everything.  That's awesome.&lt;/p&gt;

&lt;p&gt;But, and this is a big but – if you have to customize it with bash, we can do better.  The easy way to do better is to use &lt;a href=&quot;The cross-shell prompt for astronauts&quot;&gt;Starship&lt;/a&gt; aka &quot;The cross-shell prompt for astronauts&quot;.  This is a Rust powered prompt that is designed for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ease of use&lt;/li&gt;
  &lt;li&gt;cross platform compatibilty&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://starship.rs/config/&quot;&gt;customization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how to get going with it on OSX:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install it with HomeBrew:  &lt;strong&gt;brew install starship&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Add the following to the END  of ~/.zshrc: &lt;strong&gt;eval &quot;$(starship init zsh)&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Source it with: source ~/.zshrc&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the reasons the prompt is so damn important isn't your local box but when you're logged into remote boxes such as AWS EC2 instances.  I cannot say just how much I wish this had existed when I was maintaining a large cluster of EC2 instances that I used to log into daily.  Sigh.&lt;/p&gt;

&lt;p&gt;Here's how my prompt looks out of the box:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship.png&quot; alt=&quot;prompt_starship.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I haven't delved too deeply into customization but the fact that I can use emojis to display my terminal state including shrug for untracked fills me a deep and unending joy:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_configuration.png&quot; alt=&quot;prompt_starship_configuration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now if you're not a hard core developer nerd, and even then one that spends a lot of time in a terminal, the picture above likely looks like line noise.  Here's just some of what you learn from it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;current directory&lt;/li&gt;
  &lt;li&gt;git branch name&lt;/li&gt;
  &lt;li&gt;that the git branch isn't pushed yet&lt;/li&gt;
  &lt;li&gt;git status&lt;/li&gt;
  &lt;li&gt;ruby version&lt;/li&gt;
  &lt;li&gt;aws region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I tried the customization quickly and it worked flawlessly.  My git prompt now shrugs at me with indifference when I add new files to a project.  w00t!!!  I love me some snarky software…&lt;/p&gt;

&lt;p&gt;Here are two more pictures showing my prompt when I move to a different terminal window to work in Python (it shows the difference between Python 2 and 3 which is incredibly helpful):&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_python_2.png&quot; alt=&quot;prompt_starship_python_2.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_python_3.png&quot; alt=&quot;prompt_starship_python_3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Starship.  Wow.  Just plain wow.  This one thing has done more to convince me to look into Rust than all the damn tutorials / blog posts I've ever seen.  Fricking outstanding.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sbi_logo.jpg&quot; alt=&quot;sbi_logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And since we're talking about Starships, if you are in the Midwest / Indiana area, I'd like to point out that &lt;strong&gt;Starbase Indy is coming up soon&lt;/strong&gt;.  I'm actually Head of Engineering for this fan run convention and I hope to see any local readers there.  Head over to &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;StarbaseIndy.org&lt;/a&gt; to buy your ticket today.  Starbase Indy happens over Thanksgiving weekend and it is the best way in Indiana to run away from difficult relatives!&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/terminal/2019/10/26/improving-your-terminal-prompt-with-a-starship.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/terminal/2019/10/26/improving-your-terminal-prompt-with-a-starship.html</guid>
        
        <category>zsh</category>
        
        <category>terminal</category>
        
        <category>prompt</category>
        
        <category>rust</category>
        
        <category>starship</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>Heroku Is Amazing or Fixing INSERT command denied to user (MySQL)</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_market.jpg&quot; alt=&quot;sifry_london_market.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;h2 id=&quot;part-1-heroku-rocks&quot;&gt;Part 1: Heroku Rocks&lt;/h2&gt;

&lt;p&gt;I've been using Heroku quite a lot recently:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is currently running my side project&lt;/li&gt;
  &lt;li&gt;I built a trial project purely to confirm that I knew how to deploy onto Heroku and then deployed it in just an hour or two&lt;/li&gt;
  &lt;li&gt;I deployed a proof of concept app for my day gig onto it that's pretty substantial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall I've never had such a seamless deploy experience using Rails as I've had with Heroku.  And I when I say seamless, I mean &quot;you can build a Rails app and deploy it in just a few hours&quot;.  Twelve plus years of Rails and I've never had such an easy time deploying things.&lt;/p&gt;

&lt;p&gt;I was very, very skeptical of the Heroku git push style deployment for a long, long time and I have to admit:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was wrong!  Amazingly wrong!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have always come at deployment from a traditional, heavy weight model.  And to have deployment not really be an issue is just shocking.&lt;/p&gt;

&lt;p&gt;This isn't to say that Heroku is perfect, it isn't – but it is damn &lt;strong&gt;amazing&lt;/strong&gt;.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;part-2-this-is-how-cloud-computing-was-supposed-to-work&quot;&gt;Part 2: This is How Cloud Computing Was Supposed to Work&lt;/h2&gt;

&lt;p&gt;Now, with the laudatory statements aside, I did hit an interesting bug / issue in Heroku today.  I use Heroku with MySQL because, well, I've put terabytes of data into MySQL over the years and it has never let me down.  Today tho I got this weirdness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mysql -ua_user_name -pa_passowrd a_database --host=a.rds.host.amazon.com &amp;lt; lib/tasks/data/db_dumps/police_crawl_development_2019-10-25.sql
 
ERROR 1142 (42000) at line 40: INSERT command denied to user 'cbneustt0on66p30'@'208-70-45-211.bb.hrtc.net' for table 'ar_internal_metadata'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My first thought was that the database instance wasn't fully logically isolated from others and I used –ignore-table to not export ar_internal_metadata.  And, clearly, that was a stupid idea because it just failed on the next table.  I did some digging and ended up on an obscure Stack Overflow page which said something to the effect that &quot;Heroku limits your space, perhaps you just have had your insert permissions disabled because you are out of space&quot;.  So I logged into MySQL remotely and got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [q0seyczrkn0dptvs]&amp;gt; show grants;
+--------------------------------------------------------------------------------------------------+
| Grants for a_user@%                                                                              |
+--------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'cbneustt0on66p30'@'%'                                                     |
| GRANT SELECT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES,   |
| TRIGGER ON `something`.* TO 'a_user'@'%'                                                         |
  +------------------------------------------------------------------------------------------------+
2 rows in set (0.04 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Jinkies!  My insert permission is gone!  So I logged into the Heroku dashboard and upgraded the MySQL addin from the baseline - which only gives you 5 mb of data - to the $10 / month option which gives you a full gigabyte and then I re-ran my show grants query and got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [q0seyczrkn0dptvs]&amp;gt; show grants;
+------------------------------------------------------------------------+
| Grants for cbneustt0on66p30@%                                          |
+------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'cbneustt0on66p30'@'%'                           |
| GRANT ALL PRIVILEGES ON `q0seyczrkn0dptvs`.* TO 'cbneustt0on66p30'@'%' |
+------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When we talk about cloud computing, this is how it was supposed to work – you can get started easily and then buy facilities on the fly as you need them.  And I get that this is similar to AWS but AWS is selling a more raw level of service.  Heroku is tightly coupled into the tooling ecosystem so it just takes your application and makes it work.  With AWS I can still buy capacity dynamically but I have to work to make use of it.&lt;/p&gt;

&lt;p&gt;In closing, I can take some issue with the crappy nature of the error message and the fact that I had to google around to figure this out but their underlying way of handling it (just take away the INSERT permission when you don't have any more space) was just plain &lt;strong&gt;elegant&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Heroku&lt;/strong&gt;.  Absolutely, positively recommended.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/heroku/2019/10/25/heroku-is-amazing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/heroku/2019/10/25/heroku-is-amazing.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        <category>mysql</category>
        
        
        <category>heroku</category>
        
      </item>
    
      <item>
        <title>Using Python to Get an Object's Methods / Attributes Dynamically</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7530.jpeg&quot; alt=&quot;IMG_7530.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm a Ruby guy who is learning python and one of the ways that I learned Ruby was by working directly with code in a REPL.  Ever since &lt;a href=&quot;https://www.alloycode.com&quot;&gt;Jared&lt;/a&gt; beat this into my head over and over (and over; I'm slow at times), I've been addicted to Ruby techniques like:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_methods&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I was just trying to do this in Python to debug a broken AWS S3 boto example and came up with this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pdb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'_PY_TO_OP_NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__class__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__delattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dict__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dir__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__doc__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__format__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init_subclass__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__le__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__lt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__module__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ne__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__new__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce_ex__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__repr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__setattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__sizeof__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__str__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__subclasshook__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__weakref__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_cache'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_client_config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_convert_to_request_dict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_emit_api_params'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_endpoint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_exceptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_exceptions_factory'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_get_waiter_config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_load_exceptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_make_api_call'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_make_request'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_register_handlers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_request_signer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_response_parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_serializer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_service_model'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'abort_multipart_upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'can_paginate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'complete_multipart_upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'copy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'copy_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'create_bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'create_multipart_upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_analytics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_encryption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_inventory_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_lifecycle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_metrics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_policy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_replication'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_website'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_object_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_objects'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_public_access_block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'download_file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'download_fileobj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'exceptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'generate_presigned_post'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'generate_presigned_url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_accelerate_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_analytics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_encryption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_inventory_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_lifecycle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_lifecycle_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_location'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_logging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_metrics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_notification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_notification_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_policy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_policy_status'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_replication'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_request_payment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_versioning'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_website'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_legal_hold'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_lock_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_retention'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_torrent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_paginator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_public_access_block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_waiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'head_bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'head_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_bucket_analytics_configurations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_bucket_inventory_configurations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_bucket_metrics_configurations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_buckets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_multipart_uploads'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_object_versions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_objects'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_objects_v2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_parts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'meta'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_accelerate_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_analytics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_encryption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_inventory_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_lifecycle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_lifecycle_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_logging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_metrics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_notification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_notification_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_policy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_replication'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_request_payment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_versioning'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_website'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_legal_hold'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_lock_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_retention'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_public_access_block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'restore_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'select_object_content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_fileobj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_part'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_part_copy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'waiter_names'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# or &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;__dir__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__dir__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__doc__&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__eq__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__format__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__format__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__ge__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__getattr__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__getattr__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__getattribute__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__gt__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__hash__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_client_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x107296d50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_convert_to_request_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_convert_to_request_dict&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_emit_api_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_emit_api_params&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_endpoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;east&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amazonaws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_exceptions&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_exceptions_factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorfactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientExceptionsFactory&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1065e9e90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_get_waiter_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_get_waiter_config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_load_exceptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_load_exceptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_loader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Loader&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1066060d0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_make_api_call&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_make_api_call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_make_request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_make_request&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ... &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# A lot omitted; it was long&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So, apparently the dir() method when called on a object, reveals quite a bit about the internal workings of the object.  Nifty!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8595184/how-to-list-all-methods-for-an-object-in-ruby/8595216&quot;&gt;StackOverflow and Getting Method Dynamically in Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6886493/get-all-object-attributes-in-python&quot;&gt;StackOverflow and Getting Method Dynamically in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 24 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Three Ways to Count the Objects in an AWS S3 Bucket</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7776.jpeg&quot; alt=&quot;IMG_7776.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;AWS S3, &quot;simple storage service&quot;, is the classic AWS service.  It was the first to launch, the first one I ever used and, seemingly, lies at the very heart of almost everything AWS does.&lt;/p&gt;

&lt;p&gt;Given that S3 is essentially a filesystem, a logical thing is to be able to count the files in an S3 bucket.  Illustrated below are three ways.&lt;/p&gt;

&lt;h2 id=&quot;method-1-aws-s3-ls&quot;&gt;Method 1: aws s3 ls&lt;/h2&gt;

&lt;p&gt;S3 is fundamentally a filesystem and you can just call ls on it.  Yep – ls in the cloud.  &lt;strong&gt;blink&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 ls s3://adl-ohi/ --recursive --summarize | grep &quot;Total Objects:&quot;
Total Objects: 444803
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;method-2-aws-s3api&quot;&gt;Method 2: aws s3api&lt;/h2&gt;

&lt;p&gt;And since S3 is a modern filesystem, it actually has an API that you can call. Yep – a json api.  &lt;strong&gt;blink&lt;/strong&gt; &lt;strong&gt;blink&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3api list-objects --bucket adl-ohi --output json --query &quot;[length(Contents[])]&quot;
[
    448444
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;method-3-a-python-example&quot;&gt;Method 3: A Python Example&lt;/h2&gt;

&lt;p&gt;Naturally you can just run code to do all this.  I started with an example from the Stack Overflow link below that was written for boto and upgraded it to boto3 (as still a Python novice, I feel pretty good about doing this successfully; I remember when Ruby went thru the same AWS v2 to v3 transition and it sucked there too).  I also learned how to dynamically introspect methods from Python objects as part of this debugging cycle.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/local/bin/python&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s3bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'total size:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f GB&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'total count:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which gives output like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 scratch/count_s3.py adl-ohi
total size:
0.298 GB
total count:
486468
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have a live upload happening on another machine so the numbers do change and that's actually fine.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2862617/how-can-i-tell-how-many-objects-ive-stored-in-an-s3-bucket&quot;&gt;Stack Overflow on This&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/30249069/listing-contents-of-a-bucket-with-boto3&quot;&gt;More Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.list_objects&quot;&gt;S3 Boto Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#client&quot;&gt;More S3 Boto Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 24 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/10/24/three-ways-to-count-the-objects-in-an-aws-s3-bucket.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/10/24/three-ways-to-count-the-objects-in-an-aws-s3-bucket.html</guid>
        
        <category>aws</category>
        
        <category>s3</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Thank You Thoughbot for Your Timezone Article</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8144.jpeg&quot; alt=&quot;IMG_8144.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've been doing Rails now since 2007 and Ruby since 2006.  And, despite having implemented timezone support, literally I don't know how many times, I have never felt good about my knowledge of timezones.&lt;/p&gt;

&lt;p&gt;I just implemented timezones again - for my latest side project - and this time I actually feel pretty good about.  The credit goes to &lt;a href=&quot;https://thoughtbot.com/blog/authors/elle-meredith&quot;&gt;Elle Meredith&lt;/a&gt; of &lt;a href=&quot;https://thoughtbot.com&quot;&gt;ThoughtBot&lt;/a&gt; for her &lt;a href=&quot;https://thoughtbot.com/blog/its-about-time-zones&quot;&gt;outstandingly good, utterly excellent, truly splendid blog post on the topic&lt;/a&gt;.  Not only did she write a fantastic post, she also included this critical information: &quot;July 23, 2015 UPDATED ON March 28, 2019&quot;.  That's awesome because it tells me that it likely applies to my current version of Rails.&lt;/p&gt;

&lt;p&gt;Finally she wrote these Don'ts and Do's:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DON’T USE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time.now&lt;/li&gt;
  &lt;li&gt;Date.today&lt;/li&gt;
  &lt;li&gt;Date.today.to_time&lt;/li&gt;
  &lt;li&gt;Time.parse(&quot;2015-07-04 17:05:37&quot;)&lt;/li&gt;
  &lt;li&gt;Time.strptime(string, &quot;%Y-%m-%dT%H:%M:%S%z&quot;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;DO USE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time.current&lt;/li&gt;
  &lt;li&gt;2.hours.ago&lt;/li&gt;
  &lt;li&gt;Time.zone.today&lt;/li&gt;
  &lt;li&gt;Date.current&lt;/li&gt;
  &lt;li&gt;1.day.from_now&lt;/li&gt;
  &lt;li&gt;Time.zone.parse(&quot;2015-07-04 17:05:37&quot;)&lt;/li&gt;
  &lt;li&gt;Time.strptime(string, &quot;%Y-%m-%dT%H:%M:%S%z&quot;).in_time_zone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As someone who could probably grep his Rails code bases and find many hundreds if not thousands of Date.today calls, yikes!&lt;/p&gt;

&lt;p&gt;One of the reasons that I'm so damn happy about this is 10 minutes ago I had a dashboard board that showed 0 data items for today.  I then moved from Date.today to Date.current and re-deployed and my dashboard now shows me the correct information.  Given that it is 9:05 EST and, thus, roughly 3 am UTC (i.e. the next day), this pretty conclusively provides that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the article was good&lt;/li&gt;
  &lt;li&gt;when the directions in the article are followed, they work&lt;/li&gt;
  &lt;li&gt;that I was an idiot to use Date.today for so many years&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you Elle!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: One of the reasons that I have so frequently used Date.today is that I do an inordinate amount of data processing using Rake tasks where there isn't the context of a currently logged in user.  I'm still not sure what to do in these cases but I now have the knowledge to noodle on it at least.&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/23/thank-you-thoughbot-for-your-timezone-article.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/23/thank-you-thoughbot-for-your-timezone-article.html</guid>
        
        <category>rails</category>
        
        <category>timezone</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Don't Want Controller Level Helpers, Controller Level Javascripts, Controller Level Stylesheets</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9602.jpeg&quot; alt=&quot;IMG_9602.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the better Rails tricks that my buddy Sean Kennedy taught me over the past year was just how configurable Rails is.  Yes Rails is opinionated – but Rails isn't an asshole about it – Rails is configurable as all heck.&lt;/p&gt;

&lt;p&gt;Let's take the issue of controller level helpers.  A helper script file is automatically generated when you create a controller so when you generate a controller named DataSource, you get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  police_crawl git:(master) ✗ rails g controller DataSource
      create  app/controllers/data_source_controller.rb
      invoke  erb
      create    app/views/data_source
      invoke  helper
      create    app/helpers/data_source_helper.rb
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/data_source.coffee
      invoke    scss
      create      app/assets/stylesheets/data_source.scss
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But helpers are actually problematic because helpers have a &lt;strong&gt;global&lt;/strong&gt; namespace.  What a global namespace means is that if you have def display_content in one helper and def display_content in a different helper, and you call the display_app/helpers/data_source_helper.rb, you actually get the display_dollars routine that was loaded &lt;strong&gt;last&lt;/strong&gt;.  And the fact that you have say:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/helpers/data_source_helper.rb
app/helpers/tweet_helper.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;creates the idea in the developers mind that you will get the display_content routine from the context where you call it (either the views for data_source or the views for tweet).  I understand exactly why Rails works this way but it is, well, bullshite.  Getting rid of helpers spread across multiple files absolutely helps make this clear to developers – that there can only, ever be one method named display_content.&lt;/p&gt;

&lt;p&gt;Happily Rails isn't an asshole – even where it has strong opinions – and you can make Rails work the way that you want.  The way you do it, in this case, is you add an initializer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/initializers/generators.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and here's the contents of the initializer:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generators&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;orm&lt;/span&gt;             &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;template_engine&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:erb&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test_framework&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:rspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fixture: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stylesheets&lt;/span&gt;     &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;javascripts&lt;/span&gt;     &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;helper&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now when I do that same generation step, I get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  police_crawl git:(master) ✗ rails g controller DataSources
      create  app/controllers/data_sources_controller.rb
      invoke  erb
      create    app/views/data_sources
      invoke  rspec
      create    spec/controllers/data_sources_controller_spec.rb
      invoke  assets
      invoke    coffee
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I switched it from DataSource controller to DataSources for proper restful style.&lt;/p&gt;

&lt;p&gt;There is one caveat here and that's the one thing to watch out for with initializers.  This first bit me, hard, way, way, way back in 2007 and it still bites me in the arse from time to time.  Initializers are one of the first things loaded in your Rails app and any syntax error, no matter how small, stops your Rails app from starting.  And may the Flying Spaghetti Monster save you if you start a deploy with an initializer that is syntactically invalid.  &lt;strong&gt;shudder&lt;/strong&gt;. You should see my post on git pre-commit hooks to avoid this (&lt;a href=&quot;https://fuzzyblog.io/blog/git/2014/08/29/the-importance-of-git-hooks.html&quot;&gt;2014 Post&lt;/a&gt; and my &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/09/17/tiny-rails-tip-don-t-let-byebug-into-production.html&quot;&gt;2019 Post&lt;/a&gt;).&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/23/so-you-don-t-want-controller-level-helpers-controller-level-javascripts-controller-level-stylesheets.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/23/so-you-don-t-want-controller-level-helpers-controller-level-javascripts-controller-level-stylesheets.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Turn Off Automatic Prompting for OSX Updates Because Catalina is Bad So Far</title>
        <description>&lt;p&gt;Between &lt;a href=&quot;http://morrick.me/archives/8599&quot;&gt;Riccardo Mori's&lt;/a&gt; piece on Catalina and &lt;a href=&quot;https://mjtsai.com/blog/2019/10/15/catalina-system-issues/&quot;&gt;Michael Tsai's excellent writings&lt;/a&gt;, I flat out don't want to update to Catalina.  But I'm also tired of Apple prompting (harassing) me to update.   Here's how to stop it&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Apple menu.&lt;/li&gt;
  &lt;li&gt;System Preferences&lt;/li&gt;
  &lt;li&gt;Software Update&lt;/li&gt;
  &lt;li&gt;Advanced&lt;/li&gt;
  &lt;li&gt;Turn off Check for Updates&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the first time I've ever turned these options off.  Normally I just say no to it until it is time to do an update; this time I don't have any clue when that might be.&lt;/p&gt;

&lt;p&gt;Note: Apple has changed this from 2017.  If you aren't running Mojave then &lt;a href=&quot;https://gadgets.ndtv.com/laptops/features/how-to-enable-or-disable-automatic-updates-on-mac-1681435&quot;&gt;this&lt;/a&gt; may help you.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/22/turn-off-automatic-prompting-for-osx-updates-because-catalina-is-bad-so-far.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/22/turn-off-automatic-prompting-for-osx-updates-because-catalina-is-bad-so-far.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Getting Used to Heroku and Rails</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9604.jpeg&quot; alt=&quot;IMG_9604.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I remember using &lt;a href=&quot;https://www.heroku.com&quot;&gt;Heroku&lt;/a&gt; in its very infancy when it was mostly a web based user interface for authoring Rails apps.  I looked at it, thought &quot;why would you want to author code in a browser; that's dumb af&quot; and promptly moved on.  Now, more than a decade later, I find myself using Heroku daily for my latest side project – and absolutely loving it.  This blog post lays out some tips and tricks that I've learned.&lt;/p&gt;

&lt;p&gt;All of this assumes you have a Rails application and it is configured to use Heroku.  If you don't have the heroku executable then you can use brew on OSX to install it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew tap heroku/brew &amp;amp;&amp;amp; brew install heroku
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-help&quot;&gt;Getting Help&lt;/h2&gt;

&lt;p&gt;Just use the –help flag to the heroku command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;running-the-rails-console&quot;&gt;Running the Rails Console&lt;/h2&gt;

&lt;p&gt;To load up a Rails console for your project, change into the product directory and:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku run rails console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;accessing-your-sql-database&quot;&gt;Accessing Your SQL Database&lt;/h2&gt;

&lt;p&gt;Just use the host parameter of your sql database's client software and connect to it directly.  Here's an example from mine (details changed):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mysql -uUSERNAME -pPASSWORD DB_NAME --host=HOSTNAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Get the details of what to connect to with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku config | grep CLEARDB_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;running-migrations&quot;&gt;Running Migrations&lt;/h2&gt;

&lt;p&gt;Migrations should run automatically on deployment.  Apparently, however, that is not always true and they can be run manually with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku run rake --trace db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Thank you to the very first user of my new side project for finding this.  Hat Tip.&lt;/p&gt;

&lt;h2 id=&quot;tailing-your-logs&quot;&gt;Tailing Your Logs&lt;/h2&gt;

&lt;p&gt;Heroku only gives you access to the last 1500 lines of your logs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku logs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For access to more logging into then I strongly, strongly, strongly recommend &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/10/21/honeybadger-even-more-awesome-than-ever.html&quot;&gt;HoneyBadger&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;listing-all-time-zones-or-running-any-damn-rake-task&quot;&gt;Listing All Time Zones (or Running Any Damn Rake Task)&lt;/h2&gt;

&lt;p&gt;You can see your time zones or run any rake task with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku rake time:zones:all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;to-view-your-configuration&quot;&gt;To View Your Configuration&lt;/h2&gt;

&lt;p&gt;View configuration details with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; heroku config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;importing-your-development-data&quot;&gt;Importing Your Development Data&lt;/h2&gt;

&lt;p&gt;See this &lt;a href=&quot;https://fuzzyblog.io/blog/heroku/2019/10/16/importing-your-local-mysql-database-into-heroku.html&quot;&gt;blog post&lt;/a&gt; if you want to import your development data.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;This is a &lt;a href=&quot;https://devcenter.heroku.com/articles/getting-started-with-rails5&quot;&gt;good article&lt;/a&gt; on Heroku.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/22/getting-used-to-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/22/getting-used-to-heroku.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Configuring a Git Repo for CI / CD Style Pull Requests</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6579.jpeg&quot; alt=&quot;IMG_6579.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of senior software folk, I have a particular set of beliefs about how you should use version control.  I wrote these down back in &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;June&lt;/a&gt; but they amount to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;develop in a branch named for an issue&lt;/li&gt;
  &lt;li&gt;a pull request is made at code push time&lt;/li&gt;
  &lt;li&gt;the pull request is required to be reviewed before it is accepted&lt;/li&gt;
  &lt;li&gt;the issue branch is merged into develop&lt;/li&gt;
  &lt;li&gt;develop is automatically merged into master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only master goes to production and you never touch develop directly.  I've used this particular approach to version control for a number of years now and it really works splendidly.  Kudos to favorite pairing partner, Sean Kennedy, for beating this into my head when I was resistant.  Respect!&lt;/p&gt;

&lt;p&gt;Now while I've used this for a long time, I've never actually set it up on Github; I always deferred to others to do the heavy lifting on this.  This blog post outlines what has to happen to repo in order to support this style of development.&lt;/p&gt;

&lt;h1 id=&quot;step-1---your-gitconfig-file&quot;&gt;Step 1 - Your .git/config File&lt;/h1&gt;

&lt;p&gt;When you start with your repo, look at the .git/config file.  Here's mine:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat .git/config
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true      
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is actually what we want it to look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true
[remote &quot;origin&quot;]
	url = git@github.com:gochangeme/web_change_me_now.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch &quot;master&quot;]
	remote = origin
	merge = refs/heads/master
[branch &quot;develop&quot;]
	remote = origin
	merge = refs/heads/develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So our first step is to add a remote &quot;origin&quot;.  This is done by going to github and creating a repo and then adding it to the existing git repo with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin https://github.com/fuzzygroup/feed_finder.git
git push -u origin master   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;step-2---adding-a-develop-branch&quot;&gt;Step 2 - Adding a develop Branch&lt;/h1&gt;

&lt;p&gt;Our next step is to add a develop branch.  This is first done locally with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch develop
git co develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You next need to make a change and do the add / commit / push dance.  This can be done just by making a one line change to the readme on the repo.  After you push with git push origin develop, you need to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to the settings page for the repo.&lt;/li&gt;
  &lt;li&gt;Click on Branches from the sidebar.&lt;/li&gt;
  &lt;li&gt;Select develop from the drop down list and then click update.&lt;/li&gt;
  &lt;li&gt;Select that you agree with the ramifications of the change from the pop up window.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;step-3---adding-branch-protection&quot;&gt;Step 3 - Adding Branch Protection&lt;/h1&gt;

&lt;p&gt;The next step is to add a Branch Protection Rule to the develop branch:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click &quot;Add Rule&quot; from the &quot;Branch protection rules&quot; section on the Branches tab.&lt;/li&gt;
  &lt;li&gt;In Branch name pattern enter &lt;strong&gt;develop&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select &quot;Require pull request reviews before merging&quot;.  (Note - even if you are a solo developer, you can still merge by using your Admin privileges check box on the pull request review screen; this is a small usability hiccup for your personal development but it keeps your git practice the same for work and home and that's invaluable; and if that isn't enough, it is how I develop every single day on my side projects)&lt;/li&gt;
  &lt;li&gt;Set the &quot;Require approving reviews&quot; drop down to 1.&lt;/li&gt;
  &lt;li&gt;Do NOT check off the &quot;Include administrators&quot; option or you won't be able to override the approval requirement on your personal repos.&lt;/li&gt;
  &lt;li&gt;Click Save Changes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you have completed the changes above, you want to work in a branch and then push to that branch.  I illustrate this below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  feed_finder git:(1-circle-ci) git push origin 1-circle-ci
Counting objects: 14, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (13/13), done.
Writing objects: 100% (14/14), 2.52 KiB | 0 bytes/s, done.
Total 14 (delta 10), reused 0 (delta 0)
remote: Resolving deltas: 100% (10/10), completed with 10 local objects.
remote:
remote: Create a pull request for '1-circle-ci' on GitHub by visiting:
remote:      https://github.com/fuzzygroup/feed_finder/pull/new/1-circle-ci
remote:
To github.com:fuzzygroup/feed_finder.git
 * [new branch]      1-circle-ci -&amp;gt; 1-circle-ci
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that Github now returns a url as part of the push.  This pull request needs to be approved at Github so after your push is done, follow the url onto Github and click the &lt;strong&gt;Create pull request&lt;/strong&gt; button:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/1_open_a_pull_request.png&quot; alt=&quot;1_open_a_pull_request.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the Create Pull Request button and you'll see the Merge Pull Request screen.  Click the &lt;strong&gt;Merge pull request&lt;/strong&gt; button.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/2_merge_pull_request.png&quot; alt=&quot;2_merge_pull_request.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now since you don't have another person on the project, you need to merge it yourself with your Administrator privileges by toggling the check box and then the &lt;strong&gt;Confirm merge&lt;/strong&gt; button:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/3_confirm_merge_pull_request.png&quot; alt=&quot;3_confirm_merge_pull_request.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This becomes your entire workflow for git:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Develop in a branch.&lt;/li&gt;
  &lt;li&gt;Push to the branch.&lt;/li&gt;
  &lt;li&gt;Create the pull request.&lt;/li&gt;
  &lt;li&gt;Merge the pull request.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After that the CI / CD software handles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;merging your branch into develop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if the merge succeeds then merging develop into master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;deploying master (if you continue down this path; deploy won't be covered in this article)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-4---adding-ci--cd-with-circle-ci&quot;&gt;Step 4 - Adding CI / CD with Circle CI&lt;/h1&gt;

&lt;p&gt;The next step is to add CI / CD with Circle CI.  You want to go over to &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; and login with your Github credentials.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;At the project list, under your Github credentials, select the repo you want to build and click the Follow button.&lt;/li&gt;
  &lt;li&gt;On the next page CircleCI directs you to add a .circleci/config.yml file to your project.  This is a yml file that describes how to build your software and run your tests.  Below I have a sample one for my project, feed_finder, a Ruby on Rails app.  Obviously yours would differ.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Ruby CircleCI 2.0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;circleci/ruby:2.5.1-node-browsers&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;circleci/mysql:8.0.4&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;--default-authentication-plugin=mysql_native_password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;testpass&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;feed_finder_test&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;testuser&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;testpass&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_HOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;127.0.0.1&quot;&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;~/repo&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;checkout&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Download and cache dependencies&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;restore_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1-dependencies-&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# fallback to using the latest cache if no exact match is found&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1-dependencies-&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install dependencies&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;bundle install --jobs=4 --retry=3 --path vendor/bundle&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;save_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./vendor/bundle&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1-dependencies-&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# Our primary container isn't MYSQL so run a sleep command until it's ready.&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Waiting for MySQL to be ready&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;for i in `seq 1 30`;&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;do&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;nc -z 127.0.0.1 3306 &amp;amp;&amp;amp; echo Success &amp;amp;&amp;amp; exit 0&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;echo -n .&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;sleep 1&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;done&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;echo Failed waiting for MySQL &amp;amp;&amp;amp; exit 1&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Database setup&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;RAILS_ENV=test bundle exec rake db:create&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;RAILS_ENV=test bundle exec rake db:schema:load&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# run tests&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run tests&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;mkdir /tmp/test-results&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;TEST_FILES=&quot;$(circleci tests glob &quot;spec/**/*_spec.rb&quot; | circleci tests split --split-by=timings)&quot;&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;bundle exec rspec --format progress \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;--format RspecJunitFormatter \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;--out /tmp/test-results/rspec.xml \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;--format progress \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;$TEST_FILES&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# collect reports&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;store_test_results&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/test-results&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;store_artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/test-results&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test-results&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A lot of this is cribbed from &lt;a href=&quot;https://www.freecodecamp.org/news/first-steps-into-continuous-integration-with-circle-ci-emberjs-and-github-1e273ea62f0c/&quot;&gt;this article on Ember&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The next step is to go into the &lt;a href=&quot;https://github.com/marketplace/circleci&quot;&gt;Github Marketplace&lt;/a&gt; and add a Free CircleCI plan to your Github account.&lt;/li&gt;
  &lt;li&gt;Go into CircleCI and &lt;a href=&quot;https://circleci.com/vcs-authorize/&quot;&gt;authenticate with your Github credentials&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go to the Add Project section where you will see a list of all your GitHub repositories.&lt;/li&gt;
  &lt;li&gt;Click Setup Project on your repo.&lt;/li&gt;
  &lt;li&gt;Select Linux as the operating system and Ruby as the language (or whatever).&lt;/li&gt;
  &lt;li&gt;Click Start Building and watch it fly along.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This blog post is currently incomplete; I'm still finishing the CI / CD portion but I had to deploy it immediately to share with a coworker.&lt;/p&gt;

</description>
        <pubDate>Tue, 22 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/10/22/configuring-a-git-repo-for-ci-cd-style-pull-requests.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/10/22/configuring-a-git-repo-for-ci-cd-style-pull-requests.html</guid>
        
        <category>git</category>
        
        <category>software_engineering</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Working with Python and Firefly and Tensor Flow Machine Learning</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/firefly.jpg&quot; alt=&quot;firefly.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am currently working on a project using Python that process data via standard in and then renders an opinion on it to standard out.  This is called an &lt;strong&gt;expert&lt;/strong&gt; and there are many of them that pass their opinion on down a pipeline (the original input is actually json and each expert adds its opinion into the json).&lt;/p&gt;

&lt;p&gt;The problem that I've discovered is that &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;Tensor Flow&lt;/a&gt; is extremely slow to startup.  This means that that my quickly running command line model hit an execution wall just due to the startup time of the Tensor Flow libraries.  The solution was to break my command line program into two parts.  I started with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expert_white_supremacy_speech.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and that needs to become:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expert_white_supremacy_speech.py
expert_white_supremacy_speech_service.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &quot;_service.py&quot; version of this will be run via a Python library called &lt;a href=&quot;https://rorodata.github.io/firefly/&quot;&gt;Firefly&lt;/a&gt; which provides &quot;functions as a service&quot; that are exposed via a restful API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: In computer science speech, a program that runs in the background is called a daemon or a service.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Note&lt;/em&gt; 2*: Because I'm going to have a number of these experts, I already have conventions around naming and since I will likely end up moving the &quot;opinion&quot; portion of all of the experts into this &quot;function as a service&quot; paradigm.  That way my web interface, written in Rails, can also call into it thru a simple curl command.&lt;/p&gt;

&lt;p&gt;Firefly provides a persistently running daemon which should have all the libraries loaded one time.  This daemon is run with the following syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firefly base_script_name.method_name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So in my case I will be running it as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firefly expert_white_supremacy_speech_service.opinion
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The default for Firefly is to run on port 8000.  And this is where it gets interesting.  Because I'm going to have different experts that are all going to need to render opinions that are all coming from different routines, I went into firefly thinking &quot;Ok; run one instance on port 8000 for method x; run another instance on part 8001 for method y and so on&quot;.  The actually approach is to use a config file which maps multiple methods from as many python files as you have.&lt;/p&gt;

&lt;p&gt;Let's illustrate this with two python scripts, fibs.py and squares.py and a config file, config.yml.  Here's the contents of each:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# this is squares.py&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# this is fibs.py&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.001&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;plotti1234&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fib&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;fibs.fib&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/square&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;squares.square&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The syntax on the yaml file for the function line is &quot;base_python_script_name.method&quot;.&lt;/p&gt;

&lt;p&gt;This means that my approach is going to be to run firefly with the config file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firefly -c config.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I can then run call the functions as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(venv) ➜  scratch git:(master) ✗ python3
Python 3.7.4 (v3.7.4:e09359112e, Jul  8 2019, 14:54:52)
[Clang 6.0 (clang-600.0.57)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import firefly
&amp;gt;&amp;gt;&amp;gt; client = firefly.Client(&quot;http://127.0.0.1:8000/&quot;,auth_token=&quot;plotti1234&quot;)
&amp;gt;&amp;gt;&amp;gt; client.square(n=2)
4

&amp;gt;&amp;gt;&amp;gt; client.fib(5)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/firefly/client.py&quot;, line 115, in wrapped
    raise FireflyError('Firefly functions only accept named arguments')
firefly.client.FireflyError: Firefly functions only accept named arguments

&amp;gt;&amp;gt;&amp;gt; client.fib(n=5)
8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I left the error (client.find(5)) in place because it illustrates that firefly only works with named arguments which wasn't obvious (at least to me).&lt;/p&gt;

&lt;p&gt;If you watch the logs on the firefly execution, you see something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(venv) ➜  scratch git:(master) ✗ firefly -c config.yml
2019-10-21 13:23:18 firefly [INFO] Starting Firefly...
http://127.0.0.1:8000/
2019-10-21 13:23:28 firefly [INFO] calling function square
127.0.0.1 - - [21/Oct/2019 13:23:28] &quot;POST /square HTTP/1.1&quot; 200 2
2019-10-21 13:23:32 firefly [INFO] calling function fib
127.0.0.1 - - [21/Oct/2019 13:23:32] &quot;POST /fib HTTP/1.1&quot; 200 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;performance&quot;&gt;Performance&lt;/h1&gt;

&lt;p&gt;In my initial implementation on my white_supremacy_speech expert, I'm getting a performance characteristic compatible with Tensor Flow execution assuming the libraries were already resident.  This means that my assumptions on how Firefly works were correct and this performance bottleneck has been addressed.  And that means that my plan on moving the guts of the other opinion tools into Firefly is solid.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Additional firefly features include the ability to run with gunicorn in place of the internal web server for better scalability via a higher number of workers.  Overall Firefly is a &lt;strong&gt;pretty damn impressive&lt;/strong&gt; piece of software.  While I still love my Ruby and my Rails, I am finding that the overall Python ecosystem has a lot of good tools.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.liip.ch/en/blog/machine-learning-as-a-service-with-firefly&quot;&gt;Thomas Eberman - gunicorn reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://firefly-python.readthedocs.io/en/latest/&quot;&gt;Read the Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rorodata/firefly&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/creating-and-deploying-a-python-machine-learning-service-a06c341f020f&quot;&gt;Medium Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/21/working-with-python-and-firefly-and-tensor-flow-machine-learning.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/21/working-with-python-and-firefly-and-tensor-flow-machine-learning.html</guid>
        
        <category>python</category>
        
        <category>firefly</category>
        
        <category>machine_learning</category>
        
        <category>tensor_flow</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>HoneyBadger - Even More Awesome than Ever</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9584.jpeg&quot; alt=&quot;IMG_9584.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My new side project is hosted on Heroku and while Heroku is delightfully easy to deploy projects to, it has a limit on log files of 1500 lines.  That's basically close to zero for even a tiny side project so I moved to using &lt;a href=&quot;https://www.honeybadger.io&quot;&gt;HoneyBadger&lt;/a&gt; for error handling.&lt;/p&gt;

&lt;p&gt;HoneyBadger is one of those tools that I've watched ever since it started and I've seen it become consistently better over the years.  I haven't used in a bit and I cannot state just how awesome the overall experience and how &lt;strong&gt;thoughtfully designed&lt;/strong&gt; every aspect of it was.&lt;/p&gt;

&lt;p&gt;Here are some of the features that were new to me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jira Integration (convert an exception to a Jira issue)&lt;/li&gt;
  &lt;li&gt;Delegated credit card support (allows a developer's boss to add the credit card without giving it to the developer)&lt;/li&gt;
  &lt;li&gt;25+ different integrations&lt;/li&gt;
  &lt;li&gt;Github Issue integration&lt;/li&gt;
  &lt;li&gt;Uptime monitoring&lt;/li&gt;
  &lt;li&gt;Support for a metric crap ton of languages including: Ruby, Javascript, Elixir, Go, NodeJS, Java, Python, PHP, Clojure, C#, Crystal, Haskell, Google Apps Scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Absolutely Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Oh and in contrast, I also looked at &lt;a href=&quot;https://www.timber.io&quot;&gt;Timber.io&lt;/a&gt; (logfile capture versus exception monitoring; two approaches to the same thing and Timber.io doesn't even work with Rails 6 so, well, NOPE!)&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/21/honeybadger-even-more-awesome-than-ever.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/21/honeybadger-even-more-awesome-than-ever.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Accessing Your Mac via SSH / Rsync and Making Mac Networking Work for SMB</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8668.jpeg&quot; alt=&quot;IMG_8668.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had to back up one Mac to another Mac using rsync (which runs on top of SSH) and I discovered that you can't simply rsync / ssh from one Mac to another. And, yes, I know that this change happened years and years ago but I don't often go Mac to Mac (using I go Mac to Linux Server).&lt;/p&gt;

&lt;p&gt;Here's the trick:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure your Macs are both on the same wifi access point or ethernet network&lt;/li&gt;
  &lt;li&gt;Go into System Preferences&lt;/li&gt;
  &lt;li&gt;Go into Sharing&lt;/li&gt;
  &lt;li&gt;Turn on Remote Login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd also recommend that you Turn on File Sharing also but think about that a bit before you do so.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.booleanworld.com/access-mac-ssh-remote-login/&quot;&gt;Boolean World&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.macsales.com/45185-mac-101-learn-the-power-of-rsync-for-backup-remote-archive-systems/&quot;&gt;Mac Sales&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 20 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/20/accessing-your-mac-via-ssh-rsync-and-making-mac-networking-work-for-smb.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/20/accessing-your-mac-via-ssh-rsync-and-making-mac-networking-work-for-smb.html</guid>
        
        <category>OSX</category>
        
        <category>ssh</category>
        
        <category>rsync</category>
        
        
        <category>OSX</category>
        
      </item>
    
      <item>
        <title>Rails 6 and Markdown Rendering - An Abject Personal Failure</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9517.jpeg&quot; alt=&quot;IMG_9517.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I am not bitching here about the quality of Rails, High Voltage or any of the Markdown gems.  This is all open source software and I am delighted to have the abundance of free tools available to me.  And, trust me, I know that when people bitch, they should put on their big boy pants and contribute a pull request back to fix things.  And, if I had been capable of fixing this, I would have.  Alas I failed at fixing this.&lt;/p&gt;

&lt;p&gt;Since I am a software engineer, I am experienced at failure.  One of the absolutely soul diminishing aspects of being a software engineer that none of us talk about is that we &lt;strong&gt;fail&lt;/strong&gt;.  We fail &lt;strong&gt;a lot&lt;/strong&gt;.  Last night, for example, I spent about four hours in engaged in a soul crushing battle to get the High Voltage gem to work with Rails 6.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/thoughtbot/high_voltage&quot;&gt;High Voltage gem&lt;/a&gt; is a gem that lets you put a series of pages like about, support, faq, etc in a directory and it injects into your application a &quot;pseudo controller&quot; that handles the display.  And then, if you aren't running Rails 6, you can add a markdown gem like &lt;a href=&quot;https://github.com/chrisroberts/kramdown-rails&quot;&gt;kramdown-rails&lt;/a&gt; and then have a directory of files like about.md, faq.md and have these be part of your application.  High voltage, along with a markdown gem, makes static pages an absolute delight.&lt;/p&gt;

&lt;p&gt;And then came Rails 6.  I put an alpha release of a side project live last night and my buddy &lt;a href=&quot;https://nickjanetakis.com/blog/&quot;&gt;Nick Janetakis&lt;/a&gt; helpfully clicked on the Faq link only to get a 500 error.  &quot;Oh yeah I commented, I've got an &lt;a href=&quot;https://github.com/thoughtbot/high_voltage/issues/289&quot;&gt;issue&lt;/a&gt; open on this&quot;.  I checked the issue and even tho I reported it 24 days ago, it was lying fallow.&lt;/p&gt;

&lt;p&gt;I figured, well, it is 2:30 in the morning and I had a craptacular night, why not dig into a complicated technical issue?  I mean how hard can this be – it is just a pseudo controller, right?  Well that was the beginning of a multiple hour session of low level gem debugging complete with a full round of Tourette's style cursing that I'm not real proud of but at least no one else was around.&lt;/p&gt;

&lt;p&gt;Here are the branch names I created during this fiasco:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;markdown_bullshit_fucking_waste_of_time&lt;/li&gt;
  &lt;li&gt;294-anti-markdown&lt;/li&gt;
  &lt;li&gt;295-fuck-markdown-again&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here are some of the github issues I made:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;295-fuck-markdown-again&lt;/li&gt;
  &lt;li&gt;throw out fucking markdown insanity and rewrite pages into html erb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I'd like to point out that no matter how pissed I got, I still followed good engineering practices:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;all code was always in a branch so I could always revert&lt;/li&gt;
  &lt;li&gt;issues were created&lt;/li&gt;
  &lt;li&gt;pull requests were used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good engineering practices, when truly ingrained, when they are &lt;strong&gt;habits&lt;/strong&gt;, carry you through bad experiences.  Thank you Sean Kennedy for beating this into my head.  Appreciated.&lt;/p&gt;

&lt;h1 id=&quot;things-i-learned-debugging-and-otherwise&quot;&gt;Things I Learned, Debugging and Otherwise&lt;/h1&gt;

&lt;p&gt;Here are some of the things I learned:&lt;/p&gt;

&lt;p&gt;When you are doing gem debugging on osx and using TextMate, it is really, really helpful to open the gem in question with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle show high_voltage
mate /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/high_voltage-3.1.2 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This one, admittedly, I knew already but I always forget it when debugging gems.  This opens the gem in a TextMate window with the full file tree of the gem available so you can add byebug calls freely.&lt;/p&gt;

&lt;p&gt;After you add a byebug call to a gem, you &lt;strong&gt;have&lt;/strong&gt; to start and stop the development server.&lt;/p&gt;

&lt;p&gt;Not a one of the different markdown gems or techniques worked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrisroberts/kramdown-rails&quot;&gt;https://github.com/chrisroberts/kramdown-rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vmg/redcarpet&quot;&gt;https://github.com/vmg/redcarpet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ytbryan/emd&quot;&gt;https://github.com/ytbryan/emd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bloggie.io/@kinopyo/rails-render-markdown-views-and-partials&quot;&gt;https://bloggie.io/@kinopyo/rails-render-markdown-views-and-partials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4163560/how-can-i-automatically-render-partials-using-markdown-in-rails-3/10131299#10131299&quot;&gt;https://stackoverflow.com/questions/4163560/how-can-i-automatically-render-partials-using-markdown-in-rails-3/10131299#10131299&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/56715152/using-erb-in-markdown-with-redcarpet&quot;&gt;https://stackoverflow.com/questions/56715152/using-erb-in-markdown-with-redcarpet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rails 6 changed the render template call from 1 parameter to two parameter and I suspect that's at the heart of this.&lt;/p&gt;

&lt;p&gt;And there were a few other things I tried.  I got fairly close at the end but I kept getting Markdown issues and, ultimately, I felt it was wiser to just, well, &lt;strong&gt;stop&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;my-final-solution&quot;&gt;My Final Solution&lt;/h1&gt;

&lt;p&gt;I ended up using the techniques that &lt;a href=&quot;https://blog.teamtreehouse.com/static-pages-ruby-rails&quot;&gt;teamtreehouse&lt;/a&gt; advocated which amounted to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A simple pages controller&lt;/li&gt;
  &lt;li&gt;A cool routing trick&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And to make it easier for me, I added a dynamic index template which handles giving me a list of all static pages so I can easily review them. This was a dead simple (and mildy crappy) view but at this point I was about dead on my feet and I just wanted it done.  Here's the view syntax:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&amp;gt;
&amp;lt;ul&amp;gt;
  &amp;lt;% Dir.entries(File.join(Rails.root, &quot;app/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)).sort.each do |file| %&amp;gt;
    &amp;lt;% next if file =~ /^_/%&amp;gt;
    &amp;lt;% next if file == 'index.html.erb'%&amp;gt;
    &amp;lt;% next if file == '.'%&amp;gt;
    &amp;lt;% next if file == '..'%&amp;gt;
    &amp;lt;% filename = File.basename(file, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;%=link_to(filename, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#{filename}&quot;)%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This could obviously be quite a bit better but this is one of those features that you write solely for yourself.  It isn't linked to from anywhere on the site and the only one using it should be me or people on the project.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;If you do this stuff long enough, you are bound to fail at things.  I mean a software engineer's entire day basically amounts to &quot;try stuff over and over and stop when it starts working&quot;. And, if you are lucky, then you get to take the time to make it better and maybe improve it.  An embarrassingly large amount of the time that first working bit gets shipped.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/19/rails-6-and-markdown-rendering-an-abject-failure.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/19/rails-6-and-markdown-rendering-an-abject-failure.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>An Observation on TensorFlow and PyTorch Startup Time</title>
        <description>&lt;p&gt;I'm in the process of designing a STANDARD IN processing system implemented in Python using some fairly simple data processing and now some PyTorch machine learning.  The shocking thing to me was just how slowly all the required PyTorch libraries load in Python.&lt;/p&gt;

&lt;p&gt;We have:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;transformers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BertTokenizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BertForSequenceClassification&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;as dependencies.  And when you evaluate that in in the console I can count up to 6 one thousand (MacBook Pro 2015) as it evaluates.  I suspect the big deal here comes from BertTokenizer, BertForSequenceClassification because that must wrap in TensorFlow.&lt;/p&gt;

&lt;p&gt;Yes, yes, yes I know that's not exactly scientific but this is a process that we were treating as a data processing pipeline with each new input launching the process.  That type of lag means that I need to abstract my PyTorch / TensorFlow stuff into a persistently running service to which my pipeline talks.  Sigh.&lt;/p&gt;

&lt;p&gt;Looks like I need to wrap it in &lt;a href=&quot;https://github.com/rorodata/firefly&quot;&gt;FireFly&lt;/a&gt;.  At least I like the name …&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/18/an-observation-on-pytorch-startup-time.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/18/an-observation-on-pytorch-startup-time.html</guid>
        
        <category>pytorch</category>
        
        <category>python</category>
        
        <category>tensorflow</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>You Don't Need Catalina to Give Your Laptop a Second Monitor</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9499.jpeg&quot; alt=&quot;IMG_9499.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The single best feature of Catalina that I was looking forward to was Sidecar, the ability to use an iPad as a second monitor.  So I was fairly crushed to discover that Apple has limited Sidecar to their new series of MacBooks.  This, imho, sucks green monkey chunks because a lot of hardcore developers have stuck with the older MacBooks due to the lack of ports, the significantly worse keyboard, the annoyingly large trackpad, etc.&lt;/p&gt;

&lt;p&gt;While I'm not one of developers who can't function without their second monitor, I do find a second monitor useful.  Happily there is &lt;a href=&quot;https://www.duetdisplay.com/&quot;&gt;Duet Display&lt;/a&gt; which is a $10 AppStore purchase that gives you a second monitor via your iPad.  Strongly, strongly recommended.&lt;/p&gt;

&lt;p&gt;Shown below I happily have a status memo on the left hand iPad with &lt;a href=&quot;https://ranchero.com/netnewswire/&quot;&gt;NetNewsWire&lt;/a&gt; peeking out above it  while I write this post in TextMate.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9510.jpeg&quot; alt=&quot;IMG_9510.jpeg&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/17/you-don-t-need-catalina-to-give-your-laptop-a-second-monitor.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/17/you-don-t-need-catalina-to-give-your-laptop-a-second-monitor.html</guid>
        
        <category>osx</category>
        
        <category>ipad</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Git Large File Support Silently Skips Over Checkouts When Git LFS Isn't Installed</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9503.jpeg&quot; alt=&quot;IMG_9503.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This error bit me and a coworker &lt;strong&gt;hard&lt;/strong&gt; yesterday and I haven't seen it well documented anywhere so I wanted to make this very, very clear.  When you have large files checked into git and you are using git-lfs (git large file support), if you don't have the git large file support extensions installed on the machine where you do the checkout, you get what appears to be a correct checkout but the large files end up being, well, not missing but simply placeholders.&lt;/p&gt;

&lt;p&gt;In our case we had a machine learning model using Bert and PyTorch and the model file, in models/bertASmodel.pt appeared to check out correctly but here was what we actually got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l models/
-rw-rw-r-- 1 ubuntu ubuntu 134 Oct 16 19:10 bertASmodel.pt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's a 134 byte machine learning model!  W00t!  &lt;strong&gt;Snark&lt;/strong&gt;. But when we look at it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat models/bertASmodel.pt

version https://git-lfs.github.com/spec/v1
oid sha256:de6988063e95c1775e0b84e256b2c58a5964845325c2263778cda4d33520f50a
size 438039816
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After we installed git lfs support, we get this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l models/
total 427780
-rw-rw-r-- 1 ubuntu ubuntu 438039816 Oct 17 18:19 bertASmodel.pt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's now 400 odd megs.&lt;/p&gt;

&lt;p&gt;If you need to install git lfs then the instructions are &lt;a href=&quot;https://github.com/git-lfs/git-lfs/wiki/Installation&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pytorch-errors-when-the-model-is-present-but-missing&quot;&gt;Pytorch Errors When The Model is Present but Missing&lt;/h2&gt;

&lt;p&gt;Now the really, really interesting thing here was the error that PyTorch came up with when the model file was just this 138 byte file.  Because the model file wasn't actually missing, it seems like PyTorch went a tiny bit insane:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UnpicklingError: invalid load key, 'v'.
File &quot;/home/ubuntu/.local/lib/python3.6/site-packages/streamlit/ScriptRunner.py&quot;, line 310, in _run_script exec(code, module.__dict__)
File &quot;/home/ubuntu/hate-language-modeling/dashboard.py&quot;, line 49, in &amp;lt;module&amp;gt; model = load_model(model_dir / 'bertASmodel.pt')
File &quot;/home/ubuntu/hate-language-modeling/dashboard.py&quot;, line 14, in load_model model = torch.load(filename, map_location=lambda storage, loc: storage)
File &quot;/home/ubuntu/.local/lib/python3.6/site-packages/torch/serialization.py&quot;, line 426, in load return _load(f, map_location, pickle_module, **pickle_load_args)
File &quot;/home/ubuntu/.local/lib/python3.6/site-packages/torch/serialization.py&quot;, line 603, in _load magic_number = pickle_module.load(f, **pickle_load_args)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now this might make sense to someone with better Python skills than I but to me this is fairly maddening.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/10/17/git-large-file-support-silently-fails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/10/17/git-large-file-support-silently-fails.html</guid>
        
        <category>git</category>
        
        <category>python</category>
        
        <category>pytorch</category>
        
        <category>streamlit</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>A Step by Step Guide to Running Streamlit, PyTorch and Bert on a Cheap AWS Instance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9507.jpeg&quot; alt=&quot;IMG_9507.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://streamlit.io/&quot;&gt;Streamlit&lt;/a&gt; is an ideal tool for taking machine learning prototypes and building quick and dirty web front ends to them.  Yesterday in about a half hour, I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Created an aws instance&lt;/li&gt;
  &lt;li&gt;Got python and pip onto the instance&lt;/li&gt;
  &lt;li&gt;Took a codebase managed by git and installed it&lt;/li&gt;
  &lt;li&gt;Got a small machine learning app up and running with &lt;a href=&quot;https://streamlit.io/&quot;&gt;PyTorch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of this blog post goes over the specifics because there were several gotcha's that might catch you (my instance was too small, then my instance had too little disc space and then git lfs reared up and bit me in the proverbial arse).&lt;/p&gt;

&lt;p&gt;This isn't written with the exact step by step process but more &quot;if you are moderately aws experienced then you'll understand the steps&quot;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an AWS Ubuntu 18.04 ec2 instance using the AWS ec2 dashboard.  Because building python and pytorch is actually large and slow, you need to have extra memory and disc space.  I used a t2.large and I doubled the disc space to 16 gigs.&lt;/li&gt;
  &lt;li&gt;When you create the instance make sure that you allow for 8501 as the open port for traffic since that is Streamlit's default.&lt;/li&gt;
  &lt;li&gt;Install git lfs support as documented &lt;a href=&quot;https://github.com/git-lfs/git-lfs/wiki/Installation&quot;&gt;here&lt;/a&gt; or see &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/10/17/git-large-file-support-silently-fails.html&quot;&gt;my blog post on this&lt;/a&gt; if you have models checked into Git.  This is generally two steps: &lt;strong&gt;sudo apt-get install git-lfs&lt;/strong&gt; and then &lt;strong&gt;git lfs install&lt;/strong&gt; in the repo directory (note that this is out of order in these directions since I don't know if you are using lfs).&lt;/li&gt;
  &lt;li&gt;Install your code with a git checkout.  If your codebase isn't public then you should generate ssh keys on the box and add the public key onto your repo (or make the repo public for the two seconds it takes to clone it and then make it private again).&lt;/li&gt;
  &lt;li&gt;Install python with: &lt;strong&gt;sudo apt install python3&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Install pip with: &lt;strong&gt;sudo apt install python3-pip&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Install your python dependencies with: &lt;strong&gt;pip3 install -r requirements.txt&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Run Streamlit in the background with the &amp;amp; operator after your python script or:  &lt;strong&gt;streamlit run dashboard.py &amp;amp;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This allows Streamlit to detach and run even after you log out.  After Streamlit starts up, it will give you the url that you can give out to let people test it.&lt;/p&gt;

&lt;p&gt;If you find the &amp;amp; trick doesn't work then instead start the process with nohup: &lt;strong&gt;nohup streamlit run dashboard.py&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I haven't yet put all of this into an Ansible playbook for installing Streamlit but I'm not far from doing that because this whole process, well, SUCKED!  &lt;em&gt;chuckle&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: More details on &lt;a href=&quot;https://www.tecmint.com/keep-remote-ssh-sessions-running-after-disconnection/&quot;&gt;running background processes&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html</guid>
        
        <category>python</category>
        
        <category>streamlit</category>
        
        <category>pytorch</category>
        
        <category>aws</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Wading Back into RSS Nerdery After So Many Years</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9446.jpeg&quot; alt=&quot;IMG_9446.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is with no small amount of personal trepidation that I am writing this post.  One of the worst parts of creating Feedster was pointing out to skilled technical people, often people who have skills that I &lt;strong&gt;deeply, deeply&lt;/strong&gt; respect, where their feed was technically correct but &lt;strong&gt;less than useful&lt;/strong&gt; (admittedly imho).  Feeds, whether RSS or Atom, seem to breed vitriolic opinions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I very deliberately have not linked to the feed that I'm commenting on here.  I'd like to point out that technically this feed is correct, valid and there is nothing wrong with it.  What I'm giving here is my opinion on how the feed could be more useful in an specific context.&lt;/p&gt;

&lt;p&gt;For the first time in a very, very long time, I find myself once again using an aggregator (thanks Brent for making &lt;a href=&quot;https://ranchero.com/netnewswire/&quot;&gt;NetNewsWire&lt;/a&gt; not just Great but Amazing Again) and the process of organizing a collection of feeds exposed the importance of the &lt;strong&gt;title&lt;/strong&gt; element.&lt;/p&gt;

&lt;p&gt;Here's an example of how I have feeds grouped into a collection:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/feed_nerdery_01.png&quot; alt=&quot;feed_nerdery_01.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is my &quot;personal&quot; folder.  This is a small, small collection of people that either I know personally or that I feel I know personally because I have read them for so damn long.  The problem is that the title &quot;writing&quot; doesn't actually identify the source.  Here is the underlying xml:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/feed_nerdery_02.png&quot; alt=&quot;feed_nerdery_02.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now this isn't an issue if you visit them on the web since you can always see the domain name in the browser.  But if you have them in an aggregator then this becomes an issue.  And yes, NetNewsWire, is awesome enough that you can rename the feed in NetNewsWire so it isn't an issue for you but despite 19 years of using an aggregator, this still wasn't an automatic action for me; I got all the way thru writing this before I thought of even trying that.&lt;/p&gt;

&lt;p&gt;I saw this all the time back in the Feedster day when we were indexing RSS / Atom feeds directly.  You would have a result from a feed and our display of the source blog would just say writing.  When the blogosphere was all just people, this made search results worse.&lt;/p&gt;

&lt;p&gt;The bottom line here is that if you think people will be using your feed then it is worth making sure that your title is descriptive.  In this case, for example, I would argue that the site's name and then &quot;writing&quot; would be a lot better.&lt;/p&gt;

&lt;p&gt;But I also respect this person and this is nothing more than my opinion (and, yes, I so don't want YAFFW; yet another feed flame war).&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rss/2019/10/16/wading-back-into-rss-nerdery-after-so-many-years.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rss/2019/10/16/wading-back-into-rss-nerdery-after-so-many-years.html</guid>
        
        <category>rss</category>
        
        <category>atom</category>
        
        
        <category>rss</category>
        
      </item>
    
      <item>
        <title>Importing Your Local MySQL Database Into Heroku</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9407.jpeg&quot; alt=&quot;IMG_9407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It never fails to amaze me how poorly documented certain basic things are.  The topic today is getting your development data for something using MySQL loaded into Heroku.  This shouldn't be hard but Google certainly doesn't make it clear.  And, to be honest, Heroku certainly doesn't make it clear.  As with many things, the answer was obvious, but with Heroku being such a closed platform and having its own import tools for Postgres, I would have thought there was something other than the standard.&lt;/p&gt;

&lt;h2 id=&quot;step-1---find-your-mysql-credentials-in-heroku&quot;&gt;Step 1 - Find Your MySQL Credentials in Heroku&lt;/h2&gt;

&lt;p&gt;You want to go to your MySQL dashboard in Heroku and find your:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Host&lt;/li&gt;
  &lt;li&gt;Username&lt;/li&gt;
  &lt;li&gt;Password&lt;/li&gt;
  &lt;li&gt;Database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your Heroku Dashboard for MySQL can be found &lt;a href=&quot;https://dashboard.jawsdb.com/mysql/dashboard&quot;&gt;here&lt;/a&gt;.  No, I don't know why it is called &quot;jawsdb&quot;; some kind of shark fetish perhaps …&lt;/p&gt;

&lt;h2 id=&quot;step-2---dump-your-database-locally&quot;&gt;Step 2 - Dump Your Database Locally&lt;/h2&gt;

&lt;p&gt;You need to dump your database locally with something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqldump -uroot -p$UIOUFEIRE change_me_now_development &amp;gt; ~/change_me_now_development.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-3---make-a-command-line-to-import&quot;&gt;Step 3 - Make a Command Line to Import&lt;/h2&gt;

&lt;p&gt;You can use a standard MySQL command line to import the database using the host parameter to comment to the Heroku hosted version over the Internet.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uYOUR_USERNAME -pYOUR_PASSWORD YOUR_DATABASE --host=YOUR_HOST &amp;lt; lib/tasks/data/db_dumps/change_me_now_development_2019-09-26.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Substitute the values you found in step 1 for the &lt;strong&gt;YOUR&lt;/strong&gt; information and, of course, update the file you are importing from.&lt;/p&gt;

&lt;h2 id=&quot;step-4---verify&quot;&gt;Step 4 - Verify&lt;/h2&gt;

&lt;p&gt;After any type of database import from development to production, you really, really, &lt;strong&gt;really&lt;/strong&gt; want to verify that all the data you sent in to the production database actually got in.  There are lots and lots of ways to do this but an easy way is to dump the data back and see if it is roughly the same size.  This can be done with the standard mysqldump tool:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqldump -uYOUR_USERNAME -pYOUR_PASSWORD YOUR_DATABASE --host=YOUR_HOST &amp;gt; lib/tasks/data/db_dumps/change_me_now_production_2019-10-16.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then a simple ls -l tells us the truth of all this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l lib/tasks/data/db_dumps/
total 1808
-rw-r--r--  1 sjohnson  staff  457221 Oct 16 09:37 change_me_now_development_2019-09-26.sql
-rw-r--r--  1 sjohnson  staff  457198 Oct 16 10:23 change_me_now_production_2019-10-16.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is a difference of only 23 bytes between the import and the export and that's good enough for me!&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/heroku/2019/10/16/importing-your-local-mysql-database-into-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/heroku/2019/10/16/importing-your-local-mysql-database-into-heroku.html</guid>
        
        <category>mysql</category>
        
        <category>heroku</category>
        
        
        <category>heroku</category>
        
      </item>
    
      <item>
        <title>AWS Security 101</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9492.jpg&quot; alt=&quot;IMG_9492.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Me Speaking on AWS Security 101 at Indy AWS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A few weeks ago, I happened to find myself at the local &lt;a href=&quot;https://www.meetup.com/indypy/&quot;&gt;IndyPy meetup&lt;/a&gt; (Python) and they asked for a speaker on &quot;AWS Security 101&quot; and I volunteered.  Two weeks later I gave that presentation.  While I know they made a live stream, I'm not sure who has rights to it / where it lives so I recorded a version of this presentation early this morning from my office and put it on YouTube for my few loyal readers.  Enjoy!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OT8V1vLzNdw&quot; title=&quot;AWS Security 101!&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/OT8V1vLzNdw/0.jpg&quot; alt=&quot;AWS Security 101&quot; /&gt;&lt;/a&gt;
&lt;!--
https://youtu.be/OT8V1vLzNdw
--&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2019/10/15/aws-security-101.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/10/15/aws-security-101.html</guid>
        
        
      </item>
    
      <item>
        <title>Time Machine Stuck On Preparing Backup</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9474.jpeg&quot; alt=&quot;IMG_9474.peg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Disapproving cat finds Time Machine annoying&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Embarrassingly for a computer professional, I spent much of the past 12 months with a personal laptop that wasn't backed up.  And I don't mean &quot;I backed it up infrequently&quot;, I mean there was no backup – period.  I use OSX and Time Machine would simply churn on &quot;Preparing Backup&quot; for days on end – one time I even let it run for a full weekend – to no avail.&lt;/p&gt;

&lt;p&gt;I even followed all the &lt;a href=&quot;https://www.lifewire.com/troubleshoot-time-machine-stuck-on-preparing-backup-2259980&quot;&gt;LifeWire tips&lt;/a&gt; and still nothing.&lt;/p&gt;

&lt;p&gt;What solved it was finally almost running out of space and discovering that I had a single directory of files that contained almost 552 gigabytes of crawl data from my failed Udemy misadventure.  Sigh.  Deleting all that data magically made Time Machine work again.&lt;/p&gt;

</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/14/time-machine-stuck-on-preparing-backup.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/14/time-machine-stuck-on-preparing-backup.html</guid>
        
        <category>osx</category>
        
        <category>time_machine</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>More Thoughts on Python vs Ruby</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9476.jpeg&quot; alt=&quot;IMG_9476.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I've been grinding away at Python on a regular basis and I have a few  small observations on the continuing differences.&lt;/p&gt;

&lt;h2 id=&quot;python-methods-require-&quot;&gt;Python Methods Require ()&lt;/h2&gt;

&lt;p&gt;When you code in Ruby you are never quite sure if something is a method or a variable (or in an ActiveRecord context, an attribute).  In Python everything that is a method requires () – even if there are no arguments.  So this means that you type:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and not&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;unless, of course, you are using &lt;a href=&quot;https://ipython.org/&quot;&gt;iPython&lt;/a&gt; (the equivalent of IRB + awesome print) in which case it automagically adds the damn parentheses.&lt;/p&gt;

&lt;p&gt;The bottom line here is that Python makes it simpler than Ruby to know when something is a method instead of a variable.  Is that a good thing?  I'm really, really not sure; I can certainly see complexities in a meta programming context.&lt;/p&gt;

&lt;h2 id=&quot;string-interpolation&quot;&gt;String Interpolation&lt;/h2&gt;

&lt;p&gt;Ruby's #{} string interpolation is damn magical – it just works in every context where you use a string.  Apparently this is a very, very new concept to Python, having only arrived in Python 3.6:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Scott is a &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scott is a {skill}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is called a Python f string and only started working this way in 3.6 at least according to &lt;a href=&quot;https://stackoverflow.com/questions/4450592/is-there-a-python-equivalent-to-rubys-string-interpolation&quot;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pulling exactly from the Stack Overflow article, I learned this.&lt;/p&gt;

&lt;p&gt;&quot;Prior to 3.6, the closest you can get to this is:&quot;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Spongebob Squarepants&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Who lives in a Pineapple under the sea? &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(name)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;locals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&quot;The % operator can be used for string interpolation in Python. The first operand is the string to be interpolated, the second can have different types including a &quot;mapping&quot;, mapping field names to the values to be interpolated. Here I used the dictionary of local variables locals() to map the field name name to its value as a local variable.&quot;&lt;/p&gt;

&lt;h2 id=&quot;toowtdi-or-theres-only-one-way-to-do-it&quot;&gt;TOOWTDI or There's Only One Way to Do It&lt;/h2&gt;

&lt;p&gt;I've always known about &lt;a href=&quot;https://wiki.python.org/moin/TOOWTDI&quot;&gt;TOOWTDI being sort of the python philosophy&lt;/a&gt; and as I dive into Python, I'm finding that really not to be the case anymore (if it ever was).  I find this to be particularly true with respect to packaging and the third party ecosystem related to Python.&lt;/p&gt;

&lt;h2 id=&quot;a-pythonic-aside&quot;&gt;A Pythonic Aside&lt;/h2&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aquaman.jpg&quot; alt=&quot;aquaman.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Python community is very big on the term &lt;a href=&quot;https://stackoverflow.com/questions/25011078/what-does-pythonic-mean&quot;&gt;Pythonic&lt;/a&gt; as a way to indicate that you are doing it the right, the &lt;strong&gt;pythonic&lt;/strong&gt; way.  My 18 year old son has been watching me learn Python (and picking up a few tips along the way) and he made the observation that the Python community saying Pythonic is like Aquaman in Batman the Brave and the Bold saying &lt;a href=&quot;&quot;&gt;Outrageous&lt;/a&gt;! (very end of the linked clip).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tc_C1JRclDY&quot; title=&quot;Outrageous!&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/tc_C1JRclDY/0.jpg&quot; alt=&quot;Outrageous&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/14/more-thoughts-on-python-vs-ruby.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/14/more-thoughts-on-python-vs-ruby.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Python vs Ruby / Subtracting Arrays of Strings</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/100_5217.jpg&quot; alt=&quot;100_5217.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I did a simple but fascinating thing yesterday – I wrote a routine in python and ruby to subtract the different elements between two lists (python) or arrays (ruby) and then return a random element between the two lists (arrays).&lt;/p&gt;

&lt;p&gt;Let's start with the Ruby because it is way, way simpler:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expert_2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expert_3.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expert_4.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;expert_2.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;expert_3.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;expert_4.py&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now here is the python:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_3.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_4.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;remaining_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remaining_experts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expert_3.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_4.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The interesting thing here is what's going on with the python.  My initial understanding of the python failure was that subtraction failed because it was lists of strings.  That's actually not the case.  Here's the result of two lists of integers being subtracted:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsupported&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operand&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What's going on here with the python is that we are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;casting the lists to sets and then&lt;/li&gt;
  &lt;li&gt;subtracting the sets&lt;/li&gt;
  &lt;li&gt;and then casting it back to a list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The interesting thing here is that sets have unique memberships so:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From a rubyist's perspective here, the surprising things are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;that array subtraction isn't a built-in python thing; I mean what the f ..&lt;/li&gt;
  &lt;li&gt;the amount of casting that is going on&lt;/li&gt;
  &lt;li&gt;the fact that set() is what converted an array to a set instead of calling .to_set on the array (admittedly after you did a require 'set')&lt;/li&gt;
  &lt;li&gt;needing to print the result in Python instead of Ruby's default return&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruby-doc.org/stdlib-2.6.5/libdoc/set/rdoc/Set.html&quot;&gt;Ruby Sets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3462143/get-difference-between-two-lists&quot;&gt;Stack Overflow on Python List Subtraction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/534855/subtracting-2-lists-in-python&quot;&gt;Stack Overflow Again on List Subtraction&lt;/a&gt; (less helpful; more confusing)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/13/python-vs-ruby-subtracting-arrays-of-strings.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/13/python-vs-ruby-subtracting-arrays-of-strings.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Wow - Google Custom Search Is Badly Broken</title>
        <description>&lt;p&gt;So I just happened to be over on ruby-doc.org and I did a search on for strfitme.  This was the astonishingly bad results:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/ruby-doc-strftime.png&quot; alt=&quot;ruby-doc-strftime.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;WHAT. THE. HELL??? The first result on ruby-doc.org for strftime is how to use strftime for python!!!  Now if you look closely here, what you will see is that the python entry is coming up as an &lt;strong&gt;ad&lt;/strong&gt;.  Let's look at this again - here is what you see when you are on a 13&quot; MacBook Pro with a Retina display:&lt;/p&gt;

&lt;p class=&quot;center center&quot;&gt;&lt;img src=&quot;/blog/assets/strftime_1.png&quot; alt=&quot;strftime_1.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Default Search Results&lt;/p&gt;

&lt;p class=&quot;center center&quot;&gt;&lt;img src=&quot;/blog/assets/strftime_1.png&quot; alt=&quot;strftime_1.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Search Results After you Scroll Down a Bit&lt;/p&gt;

&lt;p&gt;So here are the errors from a user interface perspective:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ads within the search results ARE NOT clearly labeled.  That's bullshite; I'm sorry but it is bullshite.  If the ads look just like actual search results then, well, it is confusing as hell.  I am a search professional and I got confused.&lt;/li&gt;
  &lt;li&gt;There are enough ads that the first search result is off screen entirely – on a decent size screen – think about how this looks on Mobile …&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The actual first search result is:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html&quot;&gt;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and that's ok but the better result is to the offset link:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html#method-i-strftime&quot;&gt;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html#method-i-strftime&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/10/11/wow-google-custom-search-is-badly-broken.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/10/11/wow-google-custom-search-is-badly-broken.html</guid>
        
        <category>search</category>
        
        <category>ruby</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>I'm Open Sourcing An Active Record Extension for find_or_create_by_attributes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9460.jpeg&quot; alt=&quot;IMG_9460.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;url&quot;&gt;Url&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fuzzygroup/ar_extension&quot;&gt;https://github.com/fuzzygroup/ar_extension&lt;/a&gt;
# Active Record Extension&lt;/p&gt;

&lt;p&gt;This is an active record extension which adds two class methods to any ActiveRecord model:&lt;/p&gt;

&lt;h2 id=&quot;foo&quot;&gt;foo&lt;/h2&gt;

&lt;p&gt;This simply displays the text &quot;Jam Baby Jam&quot; to prove that it is working&lt;/p&gt;

&lt;h2 id=&quot;findorcreatebyattributes&quot;&gt;find_or_create_by_attributes&lt;/h2&gt;

&lt;p&gt;This can be used to create find or create instances of a class based on a hash of params and one or more required attributes.  Let's say that we have a class called Site.  It can be invoked in two ways:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reddit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;protocol: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;domain: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reddit.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;url: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.reddit.com/&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create_by_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create_by_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reddit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;protocol: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create_by_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;## Installation Instructions&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Copy config/initializers/extension.rb to config/initializers in your Rails app, the config directory.&lt;/li&gt;
  &lt;li&gt;Copy lib/active_record_extension.rb to lib in your Rails app.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sidebar&quot;&gt;Sidebar&lt;/h2&gt;

&lt;p&gt;This is really quite simple but I use it on almost every single project so I wanted to open source it so I can freely use it without worry about licensing.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/11/i-m-open-sourcing-an-active-record-extension-for-find-or-create-by-attributes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/11/i-m-open-sourcing-an-active-record-extension-for-find-or-create-by-attributes.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Never Underestimate Your Own Stupidity - A Jekyll CSS Issue</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9444.jpeg&quot; alt=&quot;IMG_9444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For a long, long time, I've wanted the ability to center things, specifically images, in my blog posts.  I use a tool called Jekyll for blogging and the directions in the Github &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/3219&quot;&gt;Jekyll thread on this&lt;/a&gt; are pretty clear:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(https://education.github.com/assets/sdp-backpack&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;872&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4211&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;af&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;bac&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;aef&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;fbb&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a.png&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Github Developer Pack&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then put this in your CSS file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* To center images */
.center {
    text-align: center;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, as with many CSS things, I failed (miserably) at it the first few (dozen) times I tried to make this work.  Then, as generally happens, I got busy and simply forgot (well ignored in an embarrassed fashion) about it.&lt;/p&gt;

&lt;p&gt;Given that I've been busily taking pictures as of late, mostly, to put at the top of blog posts, I thought I'd take another pass at it.&lt;/p&gt;

&lt;p&gt;I started in my coding editor by trying to add the .center directive to my css file.  And I did so but it failed.  I then thought &quot;Hm… what if something else is overriding it&quot; and I looked at all my css files and I found this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/css_stupid.png&quot; alt=&quot;css_stupid.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What that says is take anything with a center attribute and &quot;center it&quot; and then the next directive says take anything with a center attribute and &quot;left align&quot; it.  Oof!.&lt;/p&gt;

&lt;p&gt;Yep.  I'm a bozo.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/css/2019/10/09/never-underestimate-your-own-stupidity-a-jekyll-css-issue.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/css/2019/10/09/never-underestimate-your-own-stupidity-a-jekyll-css-issue.html</guid>
        
        <category>css</category>
        
        <category>jekyll</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Google Calendar Tip - Custom Repeat</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9003.jpeg&quot; alt=&quot;IMG_9003.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the lovely, lovely things about your kids getting older, possibly the only damn thing, is that as they do, you and your spouse / significant other, have more time for each other.  In the case of my wife and I, we are finally trying to set a formal date night – every Tuesday night.&lt;/p&gt;

&lt;p&gt;The way that I wanted to do this was to structure it so that one week I plan it and the next week she plans it.  That way it isn't always my responsibility and isn't always her responsibility.&lt;/p&gt;

&lt;p&gt;Now this seems simple enough until you want to put it on your calendar because this isn't a simple &quot;Every Week Repeat&quot;.  What I want is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;week 1 - Shelley &amp;amp; Scott Date Night; Scott Plan&lt;/li&gt;
  &lt;li&gt;week 2 - Shelley &amp;amp; Scott Date Night; Shelley Plan&lt;/li&gt;
  &lt;li&gt;week 3 - Shelley &amp;amp; Scott Date Night; Scott Plan&lt;/li&gt;
  &lt;li&gt;week 4 - Shelley &amp;amp; Scott Date Night; Shelley Plan&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The trick here is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On the first week you create the event titled &quot;Shelley &amp;amp; Scott Date Night; Scott Plan&quot; with whatever time (I chose 7 pm to 11:30 pm)&lt;/li&gt;
  &lt;li&gt;Then you click More Options&lt;/li&gt;
  &lt;li&gt;Change Does Not Repeat to Custom&lt;/li&gt;
  &lt;li&gt;Set it to Repeat every 2 weeks&lt;/li&gt;
  &lt;li&gt;Add your spouse / significant other's email as a guest&lt;/li&gt;
  &lt;li&gt;Save the event&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that gives you this type of calendar entry!&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/google_calendar/2019/10/09/google-calendar-tip-custom-repeat.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/google_calendar/2019/10/09/google-calendar-tip-custom-repeat.html</guid>
        
        <category>google_calendar</category>
        
        
        <category>google_calendar</category>
        
      </item>
    
      <item>
        <title>And So I Decide to Release Some Ruby Code as Open Source</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9420.jpeg&quot; alt=&quot;IMG_9420.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I find myself today having to make an economic decision of sorts.  I am a consultant again and I find myself wanting to use some of the tools and libraries that I have developed &quot;internally&quot; for my current client.  This is a problem because, technically, I own the intellectual property on these tools.  And, to be clear, these aren't a big deal in terms of code – they are more utility players than they are something of huge merit.  Still, they are &lt;strong&gt;mine&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;One approach would be to try and figure out what they are worth and bill the client for the time to write them.  The problem with that is the license then flows to the client – and I don't want that.  I love my damn tools and I want to be able to use them myself.&lt;/p&gt;

&lt;p&gt;So the easiest approach here is to simply open source them, likely MIT license, and then put them on Github.  That way I can just pull them down and incorporate them into whatever I choose to use them on.  It is likely a crappy decision economically but a good decision overall.&lt;/p&gt;

&lt;p&gt;And, so, &lt;a href=&quot;https://github.com/fuzzygroup/sync-dot-rake&quot;&gt;sync.rake is open sourced&lt;/a&gt; (turns out I did this way, way back in April 2017 but I think I forgot to blog it).  &lt;strong&gt;Chuckle&lt;/strong&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/10/09/and-so-i-decide-to-release-some-ruby-code-as-open-source.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/10/09/and-so-i-decide-to-release-some-ruby-code-as-open-source.html</guid>
        
        <category>ruby</category>
        
        <category>consulting</category>
        
        <category>open_source</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Thoughts on Python and Elixir from a Rubyist's Perspective</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9415.jpeg&quot; alt=&quot;IMG_9415.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm about 4 weeks into the learning python stage and I could be fairly wrong about some of this.  I apologize for any stupidity but learning languages is a subtle process and I have found that writing things like this helps the process.&lt;/p&gt;

&lt;p&gt;Leaving a good job where you like the product, like the team and like your co-workers is a hard thing to navigate.  I recently did this and got this message today from my former boss:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How ru liking python? I’ve been thinking about spending some free time on it or elixir. Got your shirt ordered btw.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My response to him was that I liked Python and I'd send him some thoughts on Python / Elixir (since I did a solid dive into Elixir a few years ago).  And that's how this article came into being.&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;p&gt;In many ways Python and Ruby feel more than a bit like kissing cousins.  Both:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;are scripting languages&lt;/li&gt;
  &lt;li&gt;are object oriented&lt;/li&gt;
  &lt;li&gt;are useful in web contexts and in automation contexts&lt;/li&gt;
  &lt;li&gt;have frameworks although Ruby has the more successful (Rails)&lt;/li&gt;
  &lt;li&gt;use def to define methods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A fundamental difference between Ruby and Python is Python's approach of &quot;invisible semantics&quot;.  I am referring here to the use of indentation as a structural mechanism for formatting code – get your indentation wrong and your code doesn't work.  This is particularly a problem with copy and paste from online code sites / blogs.  I find that this as well as the use of the : to indicate the start of a control structure are the two constant mistakes I make.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;One of the things that I have found most irritating about python is that imported modules referenced in a main script are not available to &quot;sub scripts&quot; (i.e. other imported modules).  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat jsons/4chan_pol_has_slur.json | python3 expert_slurs.py --source=4chan
Template Expert
Traceback (most recent call last):
  File &quot;expert_slurs.py&quot;, line 87, in &amp;lt;module&amp;gt;
    main()
  File &quot;expert_slurs.py&quot;, line 65, in main
    json_str = common_expert.read_std_in_to_string()
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/common_expert.py&quot;, line 3, in read_std_in_to_string
    for line in sys.stdin:
NameError: name 'sys' is not defined
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Even though I have&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from sys import stdin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At the top of my expert_slurs.py file, it isn't available in common_expert.py (which comes &lt;strong&gt;after&lt;/strong&gt; the inclusion) and has to be imported again at the top of common_expert.py.&lt;/p&gt;

&lt;p&gt;Variables in a python method lack the block locality that they have in Ruby.  Coming from a ruby context, this is massively strange.  Apparently you can sort of achieve this by &lt;a href=&quot;https://stackoverflow.com/questions/6167923/block-scope-in-python&quot;&gt;defining functions within functions&lt;/a&gt; but, well, &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;elixir&quot;&gt;Elixir&lt;/h2&gt;

&lt;p&gt;I started looking at Elixir back in 2016 when I went to ElixirConf and I, well, fell in love.  Here was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a functional language&lt;/li&gt;
  &lt;li&gt;built on top of a real VM&lt;/li&gt;
  &lt;li&gt;compiled&lt;/li&gt;
  &lt;li&gt;responded in microseconds not milliseconds&lt;/li&gt;
  &lt;li&gt;had a kick butt performing framework&lt;/li&gt;
  &lt;li&gt;built by one of the former Rails core members&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall I left my exploration with Elixir just plain fundamentally impressed.  Now, that said, I never chose to do much with Elixir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I came in at the 1.3 about to be released version of Phoenix which took longer to finish than that expected and that cost me momentum&lt;/li&gt;
  &lt;li&gt;Pattern matching is at the heart of Elixir and it is hard to master&lt;/li&gt;
  &lt;li&gt;Most of what I build is web apps and when I looked into it there wasn't an equivalent to Devise or AuthLogic and I never wanted to write this so …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I took away from Elixir was a number of changes to my coding style in Ruby including a focus on class methods and an increased use of multiple return values.&lt;/p&gt;

&lt;h2 id=&quot;choosing-a-next-language&quot;&gt;Choosing a Next Language&lt;/h2&gt;

&lt;p&gt;One of the guidelines I use for choosing a next language is that it is always best to learn your next language by picking one with a fundamentally &lt;strong&gt;different orientation&lt;/strong&gt; than your last language.  So going from Ruby to Elixir is a big change because it means going from object-oriented to functional.  I find that going from Ruby to Python isn't a big change because the languages are just so similar.  In fact I have actually found that Python's many similarities to Ruby make it harder to grok the learning process.  Elixir is so clearly different from Ruby that the differences are easier to learn.&lt;/p&gt;

&lt;p&gt;So even though I would argue strongly that if you are a Rubyist, Elixir is the logical next step, there are two caveats:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you are doing data science work then you want to use Python.  I've been immersing myself in data science stuff and the Python ecosystem for data science is truly splendid.&lt;/li&gt;
  &lt;li&gt;If you are doing machine learning work then you want to use Python.  Again the Python ecosystem for machine learning is truly splendid.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 08 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/10/08/thoughts-on-python-and-elixir-from-a-rubyist-s-perspective.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/10/08/thoughts-on-python-and-elixir-from-a-rubyist-s-perspective.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        <category>elixir</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>OSX Spotlight Does Math</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/spotlightmath.png&quot; alt=&quot;spotlightmath.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've not been a fan of the OSX search feature, Spotlight, mostly because it ignores the concept of location – it shows you the results it finds but doesn't make it clear where it exists.  All too often I want to find something and then do what &lt;strong&gt;I want&lt;/strong&gt; with it (generally Terminal access).&lt;/p&gt;

&lt;p&gt;But this &lt;a href=&quot;https://news.ycombinator.com/item?id=21187253&quot;&gt;tip&lt;/a&gt; mildly redeems spotlight:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;i had been using spotlight for simple calculations for years, but i stumbled onto conversions (like &quot;528 in2 in sq ft&quot; or &quot;32c&quot;) only a couple months ago. if you don't specify to the units you want, it will still give you a most likely conversion unit with less common ones down below. it's super useful and quick!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;528 in2 in sq ft tells you 3.67 sq feet&lt;/li&gt;
  &lt;li&gt;32c tells you 89.6 degrees f&lt;/li&gt;
  &lt;li&gt;1.1m tells you 1.2 yards&lt;/li&gt;
  &lt;li&gt;3+12+3 tells you 18&lt;/li&gt;
  &lt;li&gt;3tbsp tells you 0.19 cups&lt;/li&gt;
  &lt;li&gt;2mi tells you 3.22 kilometers&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 08 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/08/osx-spotlight-does-math.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/08/osx-spotlight-does-math.html</guid>
        
        <category>osx</category>
        
        <category>spotlight</category>
        
        
        <category>OSX</category>
        
      </item>
    
      <item>
        <title>Making DevSecOps Easier - Ticket Squirrely Little Installation Steps NOW</title>
        <description>&lt;p&gt;Note: I'm writing this post for a friend who is doing machine learning for the U.S. DOD.  The DOD calls DevOps &quot;DevSecOps&quot; to emphasize the importance of security at all times.  Hence my use of the term DevSecOps when I don't normally.&lt;/p&gt;

&lt;p&gt;I recently wrote about using &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/04/get-it-right-spacy-get-it-right.html&quot;&gt;Spacy in python&lt;/a&gt; and the need for this squirrely little step to use Spacy's language detection:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I have spent a lot of years now dealing with deployment issues around complex code bases with lots and lots of dependencies and this time I'm going to give you the take away less right up front:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you have a development team dealing with any type of dependency that isn't covered by your language environment's package library (e.g. a Rails / Ruby Gemfile or Python's requirements.txt) then you &lt;strong&gt;NEED TO REQUIRE&lt;/strong&gt; your development team to create tickets (Jira or Github) whenever there is some kind of squirrely installation step.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is really, really, really important.  The reason for this is that when you try and get your code deployed into production, you will have long forgotten about something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And yes, this is one thing.  But as your project grows, one thing becomes two things.  And that becomes 5 things and then you're into 10 plus pretty quickly.  Getting people to write this stuff down as it comes up and ticket it under &quot;deployment&quot; means that you stand a much better chance of getting deployment done much more quickly when the time comes.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/devops/2019/10/04/making-devsecops-easier-ticket-squirrely-little-installation-steps-now.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/devops/2019/10/04/making-devsecops-easier-ticket-squirrely-little-installation-steps-now.html</guid>
        
        <category>devops</category>
        
        <category>devsecops</category>
        
        <category>python</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Get it Right Spacy, Get it Right</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9298.jpeg&quot; alt=&quot;IMG_9298.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm writing this at 4:53 am and I'm tired hence the humor.  No disrespect intended towards any of my pagan friends; I love you all; this is tongue in cheek.&lt;/p&gt;

&lt;p&gt;I fully admit to being a damn python noob but I can follow directions. I was attempting to use the &lt;a href=&quot;https://spacy.io/&quot;&gt;Spacy&lt;/a&gt; library to detect the language of a string of text.  I started from the &lt;a href=&quot;https://spacy.io/universe/project/spacy-langdetect&quot;&gt;example here&lt;/a&gt; as replicated below:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy_langdetect&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language_detector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'This is an english text.'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# sentence level language detection&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now before I even tried this, I updated my requirements.txt file with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spacy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that, not surprisingly, did not work.  Sigh.  I started with this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import spacy
&amp;gt;&amp;gt;&amp;gt; from spacy_langdetect import LanguageDetector
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
ModuleNotFoundError: No module named 'spacy_langdetect'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, not surprisingly, cursing followed.  Sadly my normal approach of:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go outside.&lt;/li&gt;
  &lt;li&gt;Start fire.&lt;/li&gt;
  &lt;li&gt;Take off clothes.&lt;/li&gt;
  &lt;li&gt;Dance naked in the firelight while chanting and praising the patron saint of Python &quot;The Great Guido&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;did not work.  In the absence of this working, I turned, disappointingly, to Google.  I discovered that there appeared to be a spacy-langdetect module so I added that to requirements.txt and did the pip dance:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, wow!  That too failed but this time I got a different error so progress!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; nlp = spacy.load(&quot;en&quot;)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/spacy/__init__.py&quot;, line 27, in load
    return util.load_model(name, **overrides)
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/spacy/util.py&quot;, line 171, in load_model
    raise IOError(Errors.E050.format(name=name))
OSError: [E050] Can't find model 'en'. It doesn't seem to be a shortcut link, a Python package or a valid path to a data directory.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So while I considered returning to the fire and, perhaps, sacrificing a goat, I couldn't find an app that delivered live goats on demand and, thus, more googling ensued.  This gave me the command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which automagically made the original snippet work.  Here it is again:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy_langdetect&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language_detector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'This is an english text.'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9999978582631465&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sentence level language detection&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;english&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9999968011919729&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's great but given that I did a &lt;strong&gt;nlp = spacy.load('en')&lt;/strong&gt; call initially, do I need to load a library for other languages?  Sigh.  Well the other night I was wandering around an Ikea and I found a book on &lt;a href=&quot;https://www.amazon.com/Kampen-Jonas-Froberg-Hardcover-Swedish/dp/9153435850/ref=sr_1_1?keywords=saab+froberg&amp;amp;qid=1570178612&amp;amp;sr=8-1&quot;&gt;Saab&lt;/a&gt; that I wanted to buy but when I looked on Amazon to find an english language version, all I found was the Swedish – but the Amazon description was in Swedish – so that was my source of a language other than English.  So I copied this text from the Amazon web page:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Initierat om Saabs dramatiska ödesår // Det var omöjligt. Dödsdömt. Men det gick. Det här är hela historien om Saabs årslånga kamp för överlevnad, en tempofylld reportagebok som bjuder på unika inblickar bakom kulisserna.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and I reran the last few lines of the code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Initierat om Saabs dramatiska ödesår // Det var omöjligt. Dödsdömt. Men det gick. Det här är hela historien om Saabs årslånga kamp för överlevnad, en tempofylld reportagebok som bjuder på unika inblickar bakom kulisserna.'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9999981443798187&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So it is pretty clear that Spacy really does work and that nlp = spacy.load('en') does more than just english.  It is unclear to me though if this perhaps is limited to only western language character sets so let's feed some Japanese into it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'日本語のキーボード'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy_langdetect&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language_detector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ja'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.999999998793732&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sentence level language detection&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ja'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.999999998793732&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In closing I have to say that Spacy works impressively well.  I remember writing these types of routines back in the mid 1990s and while we had the same capabilities, we did it all in C and it took a fair bit of work for Dataware's Advanced Search team of John Munson and Trey Jones to do this.  Now it is an open source routine.  Damn!&lt;/p&gt;

&lt;p&gt;My one real objection here is this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To my way of thinking this is should be encapsulated into the requirements.txt file.  Without that you need a whole different step in your deployment architecture to make sure that this special little bit of python gets executed AFTER your python environment is setup.  And Ansible will do that but it is definitely something that will bite you in the ass at least a few times before you get that right.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/04/get-it-right-spacy-get-it-right.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/04/get-it-right-spacy-get-it-right.html</guid>
        
        <category>python</category>
        
        <category>nlp</category>
        
        <category>spacy</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>OSX argument list too long; Sigh</title>
        <description>&lt;p&gt;The longer you do computing, the more you find that the same out issues come up.  I'm currently working on a machine with 16 gigs of RAM and a terabyte of SSD storage but when I list files in a directory, I still get &quot;argument list too long&quot;.  The problem here is that I have a series of directories that collectively have 552 gigs of data in them (a crawler I wrote either worked successfully or ran amok; your opinion may vary).&lt;/p&gt;

&lt;p&gt;I woke up this morning and realized that I couldn't move over to my machine the zst archive I needed since it was 15 gigs in size and I had only 24 gigs total (too close to my threshold for my taste).&lt;/p&gt;

&lt;p&gt;I ended up coming up with this command line snippet to address this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -maxdepth 1 -name &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -delete
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I had to change into each directory where these files existed and run it one by one.&lt;/p&gt;

&lt;p&gt;If I wanted to make this recursive then I could have started in the parent directory tree with this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -exec rm -f &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but that felt riskier…  Here's a relevant &lt;a href=&quot;https://stackoverflow.com/questions/11289551/argument-list-too-long-error-for-rm-cp-mv-commands&quot;&gt;Stack Overflow&lt;/a&gt; on this.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bash/2019/10/02/osx-argument-list-too-long-sigh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bash/2019/10/02/osx-argument-list-too-long-sigh.html</guid>
        
        <category>osx</category>
        
        <category>bash</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Understanding AWS S3 Limitations and Performance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6579.jpeg&quot; alt=&quot;IMG_6579.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of planning out a large scale system and one of the things I find myself worrying is obvious but still complex – &lt;strong&gt;storage&lt;/strong&gt;.  This is a data processing system where literally tens of millions of &quot;objects&quot; will be flowing thru the system and one of the design criteria is the need to take any &quot;object&quot; and re-process it from start to finish.  And, as this data is transitory in nature, this means that we need to be able to store the original inputs in the system on an ongoing basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: By &quot;object&quot; I mean something as simple as a comment or as complex as a social media post or a web page.&lt;/p&gt;

&lt;p&gt;Given that we have a massive quantity of objects, the question comes up as to how you store tens of millions of variable length objects.  The solution we have come to is to use the AWS S3 storage architecture but is S3 a valid choice?&lt;/p&gt;

&lt;p&gt;Here's the result of digging deeply into S3 as a storage solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;S3 divides storage into &quot;buckets&quot; (think directories although a bucket isn't quite a directory)&lt;/li&gt;
  &lt;li&gt;S3 supports an unlimited number of objects per bucket&lt;/li&gt;
  &lt;li&gt;S3 allows for a biggest object of 5 TB (not an issue for us; we're talking a few K per object)&lt;/li&gt;
  &lt;li&gt;S3 supports 3500 puts, posts or deletes per second per bucket&lt;/li&gt;
  &lt;li&gt;S3 supports 5000 get requests per second per bucket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At 3,500 posts (i.e. new object creations) per second, a single S3 bucket can support 3,500 * 3,600 new objects per hour or 12,600,000 (12.6 million).  Now that's a maximum and there are always reasons why maximums don't get achieved.&lt;/p&gt;

&lt;p&gt;The implication here is that if you have different types of content then you could always use multiple buckets, one per content type in order to achieve better overall throughput.&lt;/p&gt;

&lt;p&gt;Also for best performance on S3 operations although Amazon has reduced the need for name randomization (think use hashes for names) for best performance, this likely still makes a difference.&lt;/p&gt;

&lt;h2 id=&quot;more&quot;&gt;More&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://www.stitcher.com/podcast/amazon-web-services/aws-podcast/e/55957353?autoplay=true&quot;&gt;AWS Podcast #260&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html&quot;&gt;S3 and Metadata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2018/07/amazon-s3-announces-increased-request-rate-performance/?nc1=h_ls&amp;amp;source=post_page-----aff8e10ab51a----------------------&quot;&gt;AWS Performance and Name Randomization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Reference: &lt;a href=&quot;https://medium.com/faun/aws-s3-buckets-whats-in-a-name-aff8e10ab51a&quot;&gt;Naming S3 Objects&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: These performance numbers may have improved since my source is about a year old but I think they are still worthy numbers to benchmark with.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pro Tip&lt;/strong&gt;: There are also lots of other excellent S3 tidbits here including that S3 bucket names are really DNS names and while you can use dots (period) characters in S3 bucket names, you really shouldn't as you will hit issues with https (I don't fully understand that).&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 30 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/09/30/understanding-aws-s3-limitations-and-performance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/09/30/understanding-aws-s3-limitations-and-performance.html</guid>
        
        <category>aws</category>
        
        <category>s3</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>iPython and Virtual Environments</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8780.jpeg&quot; alt=&quot;IMG_8780.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I've written before, I personally find virtual environments to be the &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html&quot;&gt;devil /  Satan's Step Child for programming&lt;/a&gt; but there's no other option so, well, &lt;a href=&quot;https://en.wikipedia.org/wiki/Fsck&quot;&gt;fsck&lt;/a&gt; ME.  Anyway this is now something I am wrestling with in terms of Python.&lt;/p&gt;

&lt;p&gt;My problem was this persnickety little prick of an error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/IPython/core/interactiveshell.py:931: 
UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install 
IPython inside the virtualenv.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This starts with at least one problem – what the hell is iPython.  Apparently iPython is &quot;interactive Python&quot;.  Now I don't really understand how Python or Python3 isn't interactive when both of them can load up a functional repl but, whatever.  Apparently iPython improves debugging or at least has some bit of color coding (so maybe think of it as ruby + &lt;a href=&quot;https://rubygems.org/gems/awesome_print/versions/1.8.0&quot;&gt;awesome_print&lt;/a&gt;).  So this error message means:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I'm in the virtual environment from VENV.&lt;/li&gt;
  &lt;li&gt;iPython is likely coming in from the system layer so I'm probably getting a Python 2.x instead of a Python 3.x.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A bunch of googles left me scratching my head until I found this &lt;a href=&quot;https://stackoverflow.com/questions/20327621/calling-ipython-from-a-virtualenv&quot;&gt;Stack Overflow page&lt;/a&gt; with about a half dozen approaches.  Hmmmph - this calls &lt;a href=&quot;https://wiki.python.org/moin/TOOWTDI&quot;&gt;TOOWTDI&lt;/a&gt; very much into question, imho.  And then that seemed to work and I wrote the first draft of this blog post.  And then it near immediately stopped working.  &lt;em&gt;grumble&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A spate of more googling occurred and I found this &lt;a href=&quot;https://coderwall.com/p/xdox9a/running-ipython-cleanly-inside-a-virtualenv&quot;&gt;alias approach&lt;/a&gt; – which seemed to work nicely.&lt;/p&gt;

&lt;p&gt;Here turned out to be the approach for fixing it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# edit your .bashrc or .zshrc (I use zsh)
vi ~/.zshrc

# add this alias statement
alias ipy=&quot;python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'&quot;

# make the alias active by sourcing it
source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You now need to use the ipy alias whenever you want iPython:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat jsons/reddit.json| ipy template_expert.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;While, I'm still not entirely sure why I need iPython but the cool kids seem to use it and the color coding and back traces are much better:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/without_ipython.png&quot; alt=&quot;without_ipython.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This is without iPython.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/with_ipython.png&quot; alt=&quot;with_ipython.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This is with iPython.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm intrigued by the idea of &lt;a href=&quot;https://github.com/asdf-vm/asdf&quot;&gt;ASDF&lt;/a&gt; possibly fixing shell extension madness by at least making this uniform across languages.  Anyone tried this yet?  I need a single solution for at least Python and Ruby (and preferably Elixir / Rust).&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/27/ipython-and-virtual-environments.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/27/ipython-and-virtual-environments.html</guid>
        
        <category>python</category>
        
        <category>ipython</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>It Sucks When You Are the Answer</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9069.jpeg&quot; alt=&quot;IMG_9069.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was struggling with Font Awesome recently and my buddy suggested I google for a &quot;good blog post that explains it&quot;.  I did and I got this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/font_awesome_scott.png&quot; alt=&quot;font_awesome_scott.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Son Of A Bitch!  I am &lt;strong&gt;so not&lt;/strong&gt; the expert here.  But I kept digging and here's what I found:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into your &lt;a href=&quot;https://fontawesome.com/account&quot;&gt;font-awesome account&lt;/a&gt; and download stuff locally.&lt;/li&gt;
  &lt;li&gt;Read this &lt;a href=&quot;https://nicholasshirley.com/using-font-awesome-5-and-the-rails-asset-pipeline/&quot;&gt;blog post&lt;/a&gt; and then copy into your app/assets/javascripts folder fontawesome.js and light.js&lt;/li&gt;
  &lt;li&gt;Things magically start working!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There's an extra step if you are using Turbo Links.  Read the linked blog post.&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/26/it-sucks-when-you-are-the-answer.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/26/it-sucks-when-you-are-the-answer.html</guid>
        
        <category>rails</category>
        
        <category>font-awesome</category>
        
        <category>google</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Dear Drop Box You Suck</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_5541.jpeg&quot; alt=&quot;IMG_5541.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Manual synchronization is about this fun …&lt;/p&gt;

&lt;p&gt;Synchronization is one of those things that is fundamentally important and yet hard as hell to get right.  I've been in the computer industry for a long, long time now and I've only ever seen it done well a few times:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lotus Notes - say what you want about Notes, it got sync right=&lt;/li&gt;
  &lt;li&gt;Palm III - Hawkins nailed it&lt;/li&gt;
  &lt;li&gt;The Late, Lamented Dropbox of Yesteryear&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I say the &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt; of yesteryear because the Dropbox I use today, well, &lt;strong&gt;sucks slimy green toads&lt;/strong&gt;.  Here's what I found myself doing yesterday as I left the office to work somewhere else:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -p 192.168.1.25:/Users/sjohnson/fuzzygroup/adl/pol-hate-analysis/categorical.parquet .
scp -p 192.168.1.25:/Users/sjohnson/fuzzygroup/adl/pol-hate-analysis/read_categorical2.py .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's right.  I manually scp'd files from my big desktop down to my laptop to work on them when I went remote.  It was a miserable experience and it reminded me of what life used to be like – when Dropbox worked.  It used to be that I would simply work on files in my ~/Dropbox directory and I was assured that sync would magically get files from my desktop to my laptop in damn near real time.&lt;/p&gt;

&lt;p&gt;Here's what happens now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Files never sync reliably - each of my machines is at a different point in the sync process continually&lt;/li&gt;
  &lt;li&gt;Sync tries to sync files that haven't changed in 2 years – and not a few files; I've seen more than 500K files try and sync constantly&lt;/li&gt;
  &lt;li&gt;Dropbox uses &amp;gt; 90% of my CPU&lt;/li&gt;
  &lt;li&gt;I have one Dropbox account and I always have login issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I get that Dropbox feels the need to add new features to compete with Microsoft's OneDrive and GoogleDrive and Box.com and I don't begrudge them the ability to add new features.  What I want, however, is a working version of the features they originally promised me – machine to machine file synchronization.&lt;/p&gt;

&lt;p&gt;I'm sorry Dropbox but you simply suck.  And I'm currently looking at &lt;a href=&quot;https://syncthing.net/&quot;&gt;SyncThing&lt;/a&gt; as a replacement; no it isn't exactly the same but maybe it will at least work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I am a paid customer of Dropbox.  The product they provide even their paying customers simply doesn't work.  Or at least it doesn't work as it used to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: This isn't a complicated use case where I'm talking Mac to PC sync or something like that.  I'm simply saying &quot;Sync files in ~/Dropbox on Machine 1 to ~/Dropbox on Machine 2&quot;.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/sync/2019/09/25/dear-drop-box-you-suck.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sync/2019/09/25/dear-drop-box-you-suck.html</guid>
        
        <category>drop_box</category>
        
        
        <category>sync</category>
        
      </item>
    
      <item>
        <title>The Python Equivalent of byebug is pdb.set_trace()</title>
        <description>&lt;p&gt;In ruby the debugger is invoked by adding the statement&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;wherever you want to debug your code.  This is preceded, of course, by a reference in Gemfile that brings in the byebug gem.&lt;/p&gt;

&lt;p&gt;The python equivalent of this is two fold:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;import the pdb (python debugger) gem&lt;/li&gt;
  &lt;li&gt;add the line pdb.set_trace() call where you want it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the color coded example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pdb&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# lines of python code here&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That will launch the python debugger right before the line where the pdb.set_trace() call is inserted.  Here are some useful commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;s&lt;/strong&gt; key steps thru the code.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;n&lt;/strong&gt; key goes to the next line.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;q&lt;/strong&gt; key quits.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More on &lt;a href=&quot;https://docs.python.org/3/library/pdb.html&quot;&gt;Python Debugging&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/24/the-python-equivalent-of-byebug-is-pdb-set-trace.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/24/the-python-equivalent-of-byebug-is-pdb-set-trace.html</guid>
        
        <category>python</category>
        
        <category>debugging</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>How a Software Engineer Cuts Video Down to Size</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7373.jpeg&quot; alt=&quot;IMG_7373.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Editing videos makes me feel this old …&lt;/p&gt;

&lt;p&gt;I can do a lot of things with a computer – a lot.  But one skill that has been eluding me since the mid 1990s is that of editing video.  I don't know what it is about non linear editing (NLE) but I just can't master it.  I recently had to help the &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;StarbaseIndy folks&lt;/a&gt; with some video editing and they asked me to trip a video clip from seconds 8 to 15 and I said &quot;Sure!&quot; and then began sweating.&lt;/p&gt;

&lt;p&gt;I started with ScreenFlow figuring that of course ScreenFlow can import an MP4 file – NOPE!.  Sigh.  I continued onto QuickTime which has a really easy to use Trim feature but while I was able to trim from the left of the video, trimming from the right seemed, well, sketchy.&lt;/p&gt;

&lt;p&gt;I finally thought to google for &quot;Command Line Video Cutter&quot; and found an excellent &lt;a href=&quot;https://askubuntu.com/questions/59383/extract-part-of-a-video-with-a-one-line-command&quot;&gt;Stack* forum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is what ended up being the command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg -ss 00:00:08 -i VID_20190717_214004.mp4 -t 00:00:07 -vcodec copy -acodec copy starbase_indy_cmd_line.mp4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Basically you tell it the starting point and then the duration.  And you'll get a great clip of someone saying something in Klingon about Starbase Indy!&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/video/2019/09/23/how-a-software-engineer-cuts-video-down-to-size.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/video/2019/09/23/how-a-software-engineer-cuts-video-down-to-size.html</guid>
        
        <category>video</category>
        
        <category>starbase_indy</category>
        
        
        <category>video</category>
        
      </item>
    
      <item>
        <title>An Idiot Rubyist's Guide to Messing About with Pandas Data Frames</title>
        <description>&lt;p&gt;I am an unabashed rubyist – I have spent since 2006 doing close to ruby exclusively (well as exclusively as you can in today's modern polyglot world).  And I now find myself in a machine learning, python world.  Today I had to tackle some ad hoc data analysis using a Parquet file created as part of an analysis of some 4chan data and, well, it was interesting.&lt;/p&gt;

&lt;p&gt;Let's start with the requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read a parquet file which had a categorical breakdown of some data&lt;/li&gt;
  &lt;li&gt;Figure out which of the data categories had more then 5 occurrences of what we were looking for&lt;/li&gt;
  &lt;li&gt;Generate a temporal breakdown by year&lt;/li&gt;
  &lt;li&gt;Do it in a way that even a Python noob can understand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's start with the basics of just reading the Parquet file into a data frame.  For rubyists, think of a dataframe as a spreadsheet that Python can read / write.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's the start of this.  And this is also where I moved from using a Python script to using Python directly in the console.  I did this by typing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that launched me into the interactive Python shell.  Think of this is irb or rails console – an interactive repl where you can write lines of code experimentally.&lt;/p&gt;

&lt;p&gt;The next step was to figure out how to get the temporal ranges.  This was done by leveraging Python datetime objects:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gave me a series of 5 data frames; one for each year.  The next step was to break this down by categories.  The categories we had were aligned to slurs within the data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;antiblack&lt;/li&gt;
  &lt;li&gt;antisemitic&lt;/li&gt;
  &lt;li&gt;homophobic&lt;/li&gt;
  &lt;li&gt;islamophobic&lt;/li&gt;
  &lt;li&gt;misogynistic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take the example of looking into the misogynistic data.  Here's what our script looks like then:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m_results2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gives a series of m_results201x data frames.  What we then want to do is get the data out of the data frame.  This can be done with the .describe() method.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m_results2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m_results2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gave us a series of results that look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;m_results2015.describe()
count    559.000000
mean       8.153846
std        9.398083
min        6.000000
25%        6.000000
50%        7.000000
75%        8.000000
max      210.000000
Name: misogynistic, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this is telling us is that for 2015 there were 559 occurrences with more than 5.&lt;/p&gt;

&lt;p&gt;The interesting things here are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;having to use () on all method calls, even ones that don't take arguments (very unruby-ish)&lt;/li&gt;
  &lt;li&gt;the process of starting with a spreadsheet (data frame) and then generating other data frames as we did the analysis&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/23/an-idiot-rubyist-s-guide-to-messing-about-with-pandas-data-frames.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/23/an-idiot-rubyist-s-guide-to-messing-about-with-pandas-data-frames.html</guid>
        
        <category>python</category>
        
        <category>data_science</category>
        
        <category>pandas</category>
        
        <category>data_frame</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>The Real Reason We Have Rake Tasks - Developers Make Mistakes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8762.jpeg&quot; alt=&quot;IMG_8762.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you are a rails developer, you are likely aware of Rake tasks.  Rake tasks provide a very easy way to write a command line task that ties into your overall system.  And command line tools are really, really useful of course but I often think that Rake tasks were invented mainly as a way for developers to easily clean up errors they make.&lt;/p&gt;

&lt;p&gt;Here's an example:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I'm working on a system where I've heavily built in gamification in the form of earned badges in response to user metrics.&lt;/li&gt;
  &lt;li&gt;I recently added the ability to import your RSS feed as a way of tracking word counts (one of the metrics is the words you write).&lt;/li&gt;
  &lt;li&gt;Yesterday I triggered an RSS import for the first time and I discovered that, in one day, I earned 521 badges.&lt;/li&gt;
  &lt;li&gt;Gulp.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Clearly something has gone awry – majorly awry.  And the way that I tackle issues like this is, well, &lt;strong&gt;a rake task&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: If you're a newbie Rails person, rake tasks live in the directory lib/tasks and they have a syntax like that shown below (they begin with namespace and then there are a series of task lines; if the task references environment then the entire Rails environment is available to the rake task otherwise it is just plain old Ruby and none of the Rails niceties).&lt;/p&gt;

&lt;p&gt;My rake tasks are named two ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;functionally for what they do &quot;spider_app_store&quot;&lt;/li&gt;
  &lt;li&gt;tied to the data object that needs cleanup i.e. &quot;user_badge&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have three tables in question:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;badges&lt;/li&gt;
  &lt;li&gt;user_badges&lt;/li&gt;
  &lt;li&gt;metrics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a callback on metrics that calls add_user_badges and it is an after_create callback.  This routine takes the individual metric and passes it into the badge routine which has a rule which is dynamically evaluated.  And then the output of that rule, if it succeeds, is the creation of a user_badge.&lt;/p&gt;

&lt;p&gt;Let's start by looking at the metric in question:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select id, created_at, date_created_at, name, metric_type_id, user_id, habit_id, habit_type_id, int_val, url from metrics where id=1516\G
*************************** 1. row ***************************
             id: 1516
     created_at: 2009-12-14 00:00:00
date_created_at: 2009-12-14
           name: word_count
 metric_type_id: 1
        user_id: 1
       habit_id: 41
  habit_type_id: 11
        int_val: 107
            url: https://fuzzyblog.io/recipes/main_course/2009/12/14/bacon-salisbury-steak.html                
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Somehow this event, way back in 2009, triggered a badge creation on 9/19:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/user_badge.png&quot; alt=&quot;user_badge.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So now we need to look at the data driving that badge to figure this out:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from user_badges where id=550\G
*************************** 1. row ***************************
             id: 550
     created_at: 2019-09-19 19:49:21.346148
     updated_at: 2019-09-19 19:49:21.346148
date_created_at: NULL
        user_id: 1
       badge_id: 3
       habit_id: 41
        plan_id: 1
      metric_id: 1516
 custom_message: NULL
         active: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this shows us is that we have a disparity between the created_at date on the user_badge object and the metric.  So the fix is actually pretty damn simple.  Here's the creation code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;badge_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;metric_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;habit_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;plan_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plan_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;active: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UserBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and what it needs is this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;badge_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;metric_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;habit_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;plan_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plan_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;date_created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date_created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;active: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UserBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Are there better, cleaner ways to accomplish that?  I'm sure but that isn't the issue at this stage in an MVP.  At this stage we're going for clarity even if it isn't entirely DRY.&lt;/p&gt;

&lt;p&gt;But this blog post was actually about rake tasks and here's where we come back to that.  I have two options facing me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Delete the data and reload&lt;/li&gt;
  &lt;li&gt;Fix the data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I personally really enjoy writing rake tasks and one of the reasons is that I've always found that errors that occur once tend to occur multiple times.  And even i the exact error doesn't occur again, similar errors often do and then your one off rake task becomes something you can quickly and easily compose into an alternate fix routine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is why I tend to name my rake tasks for the data object they operate on; it makes finding them trivial.&lt;/p&gt;

&lt;p&gt;Here's the rake task to fix this bit of personal idiocy:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user_badge&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# bundle exec rake user_badge:fix_idiocy --trace&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fix_idiocy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;username: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fuzzygroup'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_badges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;date_created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date_created_at&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that I have a bundle exec execution line there as a comment.  Well, there's a reason for that.  I've been doing Rails with large scale live systems now since 2007 and I've seen the amazing quantity of data specific errors that can happen when you're in a:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;poorly funded&lt;/li&gt;
  &lt;li&gt;fast paced&lt;/li&gt;
  &lt;li&gt;get the job done&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;type startup.  Errors like these (getting the date wrong) tend to slip into even production systems and when a founder / CEO notices them in the wee hours of the night and you happen to be the on goal idiot, well, it is much easier to copy and paste in a commented out bundle exec execution line than it is to figure it out on the fly.  This is even more true when the rake task takes some number of command line arguments.&lt;/p&gt;

&lt;p&gt;So I ran this and it seemed to work but the real proof is whether or not the result makes sense.  Here's the look and feel before and after (focus on the habit column; you'll see that it goes from a succession of recipes to a more varied set of habits).&lt;/p&gt;

&lt;h2 class=&quot;center&quot; id=&quot;before&quot;&gt;Before&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/user_badges_before.png&quot; alt=&quot;user_badges_before.png&quot; /&gt;&lt;/p&gt;

&lt;h2 class=&quot;center&quot; id=&quot;after&quot;&gt;After&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/user_badges_after.png&quot; alt=&quot;user_badges_after.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;And there you have it – the real reason that rake tasks exist – developers make mistakes and rake tasks make fixing those mistakes really, really easy.&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/20/the-real-reason-we-have-rake-tasks-developers-make-mistakes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/20/the-real-reason-we-have-rake-tasks-developers-make-mistakes.html</guid>
        
        <category>rails</category>
        
        <category>rake</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Have to Make a Meta Schema</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8992.jpeg&quot; alt=&quot;IMG_8992.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I find myself, once again, needing to make a &quot;meta schema&quot;.  This is a database schema by which you map data from N external sources into a single repository.  The challenge here is that you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;define a set of tables into which incoming objects can be decomposed&lt;/li&gt;
  &lt;li&gt;define a set of common elements across all the different types of data&lt;/li&gt;
  &lt;li&gt;normalize all the data as it comes in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've done this a number of times in my career but I normally do it in the dark of the night and I don't talk about it (kidding).  I thought this time around though I might improve the process by actually formalizing it and documenting it.&lt;/p&gt;

&lt;p&gt;If you are going to make a meta schema, here is what you need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;examples of each of the different formats&lt;/li&gt;
  &lt;li&gt;a print out of at least one instance of each of the different formats&lt;/li&gt;
  &lt;li&gt;colored pens or markers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The way that I generally do this is I print out an example of each format type and I put them on a table side by side.  Then I start color coding elements within the format.  As I color code, what I have always found is that commonalities emerge.  For example in the screenshot below purple is about media elements.  And here's what you can see:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;one source has no media elements&lt;/li&gt;
  &lt;li&gt;one source has one media element&lt;/li&gt;
  &lt;li&gt;one source has multiple media elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And what that &lt;strong&gt;instantly&lt;/strong&gt; tells us is that media elements are going to be stored in a separate table in a has_many type relationship.&lt;/p&gt;

&lt;p&gt;The next step in all this is to figure out how each element from each source maps to the corresponding elements in the other sources.  For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;one source calls the content &quot;body&quot;&lt;/li&gt;
  &lt;li&gt;one source calls the content &quot;comment&quot;&lt;/li&gt;
  &lt;li&gt;one source calls the content &quot;message&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What this tells me that this is going to need to be a mapping rule that filters each of these types of content into a table and the right column.  I can't simply load these (or really any) columns directly.&lt;/p&gt;

&lt;p&gt;And that's the essence of building a meta schema – you take lots of samples of data and you look for commonalities.  And this is a process that I have always found flows better when it is done on paper rather than on screen.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/09/19/so-you-have-to-make-a-meta-schema.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/09/19/so-you-have-to-make-a-meta-schema.html</guid>
        
        <category>software_engineering</category>
        
        <category>schema</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Remote Management Tip - The Atta Person Email</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8735.jpeg&quot; alt=&quot;IMG_8735.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the better management techniques that I ever learned was what I now refer to as &quot;The Atta Person Email&quot;.  This is a general management technique but one that I find particularly good for remote / asynchronous work.&lt;/p&gt;

&lt;p&gt;In today's increasingly fast paced world, one of the very real management problems is simple – how do you &lt;strong&gt;remember&lt;/strong&gt; the good things that your staff (or co workers) did by the time that the annual / quarterly / six monthly review rolls around?  Honestly I have a hard time remembering July – and it is only September.  Six months ago was … March.  That's almost inconceivable to me.&lt;/p&gt;

&lt;p&gt;My solution for this is simple - whenever I encounter someone that does something above and beyond, I send an email to their manager.  If I am their manager then I cc myself on it and apply a Gmail label to it.  Then when review time comes around, well, I look in that folder and see what's there.&lt;/p&gt;

&lt;p&gt;The reason that this is a particularly good remote work management technique is that remote workers are regularly forgotten by management as they quietly work in the background just getting things done.  Unless a company has a real remote first culture, this common.  Establishing a practice of &lt;strong&gt;paying attention&lt;/strong&gt; and making sure that people get recognized for the good work that they do is just good management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I used to think of this as a &quot;Atta Boy&quot; email.  Given the paucity of non male software engineers that I've been able to hire in my life, I don't think that I'm wrong in my internal thinking but still – no excuse for that in 2019 so it is now a &quot;Atta Person&quot; email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: To really motivate your coworkers / staff, bcc them on these emails when they go out.  Even if their manager doesn't appreciate their hard work, I suspect that they will be happier knowing that you appreciated it.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/09/18/remote-management-tip-the-atta-person-note.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/09/18/remote-management-tip-the-atta-person-note.html</guid>
        
        <category>remote_work</category>
        
        <category>startup</category>
        
        <category>management</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Making Better Passwords from /dev/urandom</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8962.jpeg&quot; alt=&quot;IMG_8962.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently &lt;a href=&quot;https://fuzzyblog.io/blog/linux/2019/09/02/generating-a-good-password-from-the-command-line.html&quot;&gt;wrote something about passwords&lt;/a&gt; and a comment showed up about how what I wrote wasn't secure enough and the password should really be based on /dev/urandom instead of what amounts to microtime.  While I'm not terribly concerned here, they were right so here's an alternative:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /dev/urandom | base64 | head -c 12
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That will return a 12 character password.  Adjust the 12 to 8 if that's what you need for length.&lt;/p&gt;

&lt;p&gt;I pulled this technique from &lt;a href=&quot;https://serverfault.com/questions/283294/how-to-read-in-n-random-characters-from-dev-urandom&quot;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2019/09/18/making-better-passwords-from-dev-urandom.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/09/18/making-better-passwords-from-dev-urandom.html</guid>
        
        <category>linux</category>
        
        <category>password</category>
        
        <category>security</category>
        
        
      </item>
    
      <item>
        <title>Tiny Rails Tip - Don't Let byebug into Production using Git Hooks and precommit</title>
        <description>&lt;p class=&quot;center center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8940.jpeg&quot; alt=&quot;IMG_8940.jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Daddy - Can I haz a byebug?&lt;/p&gt;

&lt;p&gt;The Ruby gem byebug is the Ruby debugger and this is normally installed into your Gemfile in this way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :development, :test do
  gem 'awesome_print'
  gem 'byebug'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What that says in people speak is &quot;for the environments development and test, install the following gems&quot;.&lt;/p&gt;

&lt;p&gt;To use byebug, you simply put the byebug command into whatever bit of code you need to debug – controller, model, background job, view, etc.  But here's how most of us embed byebug:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  byebug
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, at some point, that is going to wend its way thru development, thru test, dodge past a code review and WHAM! arrive onto production – where things will quickly grind to a halt since the gem isn't available for production.&lt;/p&gt;

&lt;p&gt;There are two easy ways to solve this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;invoke byebug conditionally tied to the environment&lt;/li&gt;
  &lt;li&gt;prevent it from going into your commits via a git hook&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;method-1-invoke-byebug-conditionally&quot;&gt;Method 1: Invoke byebug Conditionally&lt;/h2&gt;

&lt;p&gt;One of the most elegant idioms in the Ruby world is the right hand if.  Here's how to apply it in this case:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;development?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is so damn superior to the alternative:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;development?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I know it is only two additional lines but you spend enough time in code and that additional &quot;visual cruft&quot; really comes to annoy.&lt;/p&gt;

&lt;h2 id=&quot;method-2-a-git-hook&quot;&gt;Method 2: A Git Hook&lt;/h2&gt;

&lt;p&gt;A git hook is a script file that is run automatically by git when an action happens like &lt;strong&gt;pre-commit&lt;/strong&gt;.  My personal favorite git hook is always pre-commit because that action prevents badness from getting into the repository.  A pre-commit script is simply an executable shell file which runs before the commit action and if it returns any output then the commit is halted.&lt;/p&gt;

&lt;p&gt;What is below is a ruby script which I've been using for ages and ages.  My former employee DV Suresh first wrote it for me and then I rewrote it from memory when I moved on from that position.  This script:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Checks for syntax errors&lt;/li&gt;
  &lt;li&gt;Looks for byebug calls without guard clauses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The byebug functionality is new and was written just for this blog post.  It doesn't seem to be dodgy but, well, late night coding and all that.&lt;/p&gt;

&lt;p&gt;Here's an example of the output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  web_change_me_now git:(247-badges) ✗ git add app/models/habit.rb
➜  web_change_me_now git:(247-badges) ✗ git commit -m &quot;revised habit.rb to check byebug&quot;
in .git/hooks/pre-commit
app/models/habit.rb:
  TODO: Add a guard clause to your byebug call
    byebug
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What just happened was I added a single file, a model.  The add will always happen cleanly since this is a pre-commit not a pre-add.  But when the commit happens, the code is checked for a naked byebug and the commit process is then halted and a todo note is generated.&lt;/p&gt;

&lt;p&gt;Here's the whole script:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# A hook script to verify that only syntactically valid ruby code is commited.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Called by git-commit with no arguments. The hook should&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# exit with non-zero status after issuing an appropriate message if&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# it wants to stop the commit.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Put this code into a file called &quot;pre-commit&quot; inside your .git/hooks&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# directory, and make sure it is executable (&quot;chmod +x .git/hooks/pre-commit&quot;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;in .git/hooks/pre-commit&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Set this to true if you want warnings to stop your commit&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stop_on_warnings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stop_on_errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$HOME/.rvm/rubies/ruby-2.6.3/bin/ruby&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;changed_ruby_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`git diff-index --name-only --cached HEAD`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/(.+\.(e?rb|task|rake|thor)|[Rr]akefile|[Tt]horfile)/&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Compilation check; designed to catch syntax errors&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed_ruby_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readable?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\.erb\z/&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Set trim mode to &quot;-&quot;, just as Rails does&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Replacing all &amp;lt;%= tags with &amp;lt;% for the syntax check&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;sed 's/&amp;lt;%=/&amp;lt;%/g' &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | erb -xT - | &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -wc&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -wc &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;popen3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/[0-9]+:\s+warning:/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_on_warnings&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/[0-9]+:\s+syntax error/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_on_errors&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# looking for byebug calls&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed_ruby_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readable?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\.erb\z/&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Set trim mode to &quot;-&quot;, just as Rails does&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Replacing all &amp;lt;%= tags with &amp;lt;% for the syntax check&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;sed 's/&amp;lt;%=/&amp;lt;%/g' &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | erb -xT - | &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -wc&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#&quot;#{compiler_ruby} -wc #{file}&quot;&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;cat &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | grep byebug&quot;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;popen3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# this can't use stop_on_errors or stop_on_warnings because those are tied to &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#  the compiler and this is purely a grep check&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Rails.env.test\?/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Rails.env.development?/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/#byebug/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  TODO: Add a guard clause to your byebug call&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no byebugs left in the code without guard clauses; All is happiness and light&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; 
  &lt;span class=&quot;vg&quot;&gt;$stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no syntax errors&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# All is well&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you want to use this then create a pre-commit file in your .git/hooks directory in your application and make it executable with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; chmod +x .git/hooks/pre-commit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The files in .git/hooks are NOT checked into your repo with a commit.  They need to be manually distributed to each team member (or that's how it was a few years ago at least; that may have changed.)&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/17/tiny-rails-tip-don-t-let-byebug-into-production.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/17/tiny-rails-tip-don-t-let-byebug-into-production.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>git</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Just Got Your First Mac and You Need Software</title>
        <description>&lt;h2 id=&quot;great-software&quot;&gt;Great Software&lt;/h2&gt;

&lt;p&gt;A good friend just go their first work Mac and I thought that it might be kind of me to write down tools that I use, some obvious, some less so.  Here's the way to understand this, this list is ordered by what I use the most at the top and descends from there.  And if I took the time to actually describe it then I really care about it as a tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: See the section below about Don't Install Software Manually before you start following links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate&lt;/a&gt; - I have been using this editor since its first release - and it is now more than a decade later and I still love it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iTerm, iTerm, iTerm&lt;/a&gt; - I live in iTerm.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt; - Run, don't walk and get yourself HomeBrew.  Think of it as apt-get for OSX and, well, that's what it is.  Absolutely recommended.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ranchero.com/netnewswire/&quot;&gt;NetNewsWire&lt;/a&gt; - If you aren't using a news aggregator then you should be.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mailplaneapp.com/&quot;&gt;MailPlane&lt;/a&gt; - this is a custom client app for Gmail and while I don't use it religiously, the ability to have both a custom client you can always command + tab to as well as N browser windows for email is really powerful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://flexibits.com/fantastical&quot;&gt;Fantastical&lt;/a&gt; - natural language parsing that creates calendar events is wonderful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.enpass.io/&quot;&gt;Enpass&lt;/a&gt; - the only password manager / digital wallet that has ever stuck for me.  I have no idea about its encryption / security but I can attest that it is damn usable.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goofyapp.com/&quot;&gt;Goofy&lt;/a&gt; - a quite good Facebook Messenger IM client&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://flyingmeat.com/acorn/&quot;&gt;Acorn&lt;/a&gt; - an excellent image editor from my favorite named &lt;a href=&quot;https://flyingmeat.com/&quot;&gt;Mac Company&lt;/a&gt; of all time&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://panic.com/transmit/&quot;&gt;Transmit&lt;/a&gt; - the best FTP and S3 client that exists&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://eggerapps.at/postico/&quot;&gt;Postico&lt;/a&gt; - I'm not a Postgres guy really but I sometimes play one when MySQL isn't right for a project and when I do, well, I use Postico&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://magnet.crowdcafe.com/&quot;&gt;Magnet&lt;/a&gt; - Cool window manager&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eastgate.com/Tinderbox/&quot;&gt;TinderBox&lt;/a&gt; - If you do serious intellectual work and deal with note taking then TinderBox is your tool.  It is expensive, powerful and awesome.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wunderlist.com/mac/&quot;&gt;Wunderlist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;SublimeText&lt;/a&gt; - If I wasn't so firmly in the TextMate camp then I'd use this.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.literatureandlatte.com/scrivener/overview&quot;&gt;Scrivener&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;PyCharm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimemerge.com/&quot;&gt;Sublime Merge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fork.dev/&quot;&gt;Fork&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;SourceTree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.telestream.net/screenflow/&quot;&gt;ScreenFlow&lt;/a&gt; - I don't screencast all that often but when I do, I use ScreenFlow.&lt;/li&gt;
  &lt;li&gt;Pages / Numbers / Keynote - these are the standard Apple apps and they are generally good.&lt;/li&gt;
  &lt;li&gt;DropBox - kind of required but good lord does it suck as a tool.  WTF DropBox (today DropBox took 96% of my cpu and tried to sync 600K files)&lt;/li&gt;
  &lt;li&gt;VLC&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dont-install-software-manually&quot;&gt;Don't Install Software Manually&lt;/h2&gt;

&lt;p&gt;The other thing that I would strongly recommend is that your Mac can be easily provisioned using Ansible and I made my Ansible provisioning routine open source years ago.  It can be found on my &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;Github&lt;/a&gt;.  I haven't set up a Mac from scratch now in years and automated provisioning on your own machine is wonderful - please note that you may have issues with this since it has been years since I've gotten a new Mac and I only update this when I need it.&lt;/p&gt;

&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;/h2&gt;

&lt;p&gt;Here are &lt;a href=&quot;https://fuzzyblog.io/blog/category.html#osx&quot;&gt;things I've written that are about OSX&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/09/16/so-you-just-got-your-first-mac-and-need-software.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/09/16/so-you-just-got-your-first-mac-and-need-software.html</guid>
        
        <category>osx</category>
        
        <category>mac</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>A Chrome Extension for Fixing Google Image Search</title>
        <description>&lt;p&gt;A bunch of years ago, Google made image search a lot less useful by removing the options for copying urls and downloading images.  I know these activities are problematic legally but this has always felt to me to be the height of stupidity – people are still going to copy urls and still going to download images – we are all just going to have to work harder to do it.  &lt;strong&gt;Grumble&lt;/strong&gt;.  Happily there is a Chrome Extension that makes this possible:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/view-image-download-image/kkdejhcahmppjoakalgdnnjpnmjlahhi?hl=en&quot;&gt;View Image&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/chrome/2019/09/16/a-chrome-extension-for-fixing-google-image-search.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/chrome/2019/09/16/a-chrome-extension-for-fixing-google-image-search.html</guid>
        
        <category>chrome</category>
        
        <category>chrome_extension</category>
        
        
        <category>chrome</category>
        
      </item>
    
      <item>
        <title>Implementing a Search System</title>
        <description>&lt;p&gt;I started selling software with a search engine back in 1988 in our first hypertext product, Black Magic.  Our first release had close to zero search features but NASA contracted with us to add search features to our second release since they were using our software as the online documentation for the NASP project.  And ever since then I have been pretty intimately involved with search:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We grew our initial search engine thru a bunch of release culminating in a CD-ROM grade search and retrieval system.&lt;/li&gt;
  &lt;li&gt;I worked for Dataware Technologies for 3.5 years building corporate Knowledge Management Systems which, sigh, were really collaborative document repositories based on the underlying &lt;a href=&quot;https://en.wikipedia.org/wiki/BRS/Search&quot;&gt;BRS engine&lt;/a&gt;; still available today&lt;/li&gt;
  &lt;li&gt;The metasearch engine I designed back in 1997 is still available today as &lt;a href=&quot;https://www.ixtent.com/en/products/opentext-discovery-suite&quot;&gt;The OpenText Federated Query Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I built the Feedster Blog / RSS Search Engine and took it from a few hundred blogs to over eighteen million (only to be thrown out by my own board but that's another story and, no, I'm not still bitter …)&lt;/li&gt;
  &lt;li&gt;Along the way I've used and analyzed most of the search tools out there from Folio Views to Verity to Guide to BRS to EPMS to InQuery   to Site Server to Lucene to ElasticSearch and more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's just posit that I know a few things about search, k?&lt;/p&gt;

&lt;p&gt;The topic of this post is how you, as an end user, implement a search system and along the way I'm going to make a few observations about search as an industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the key implementation point is at the end; apologizes for the digression into industry analysis, I've simply wanted to write this down for a damn long time.&lt;/p&gt;

&lt;h2 id=&quot;search-is-not-a-well-productized-thing&quot;&gt;Search Is Not a Well Productized &quot;Thing&quot;&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that search is &lt;strong&gt;not a well productized thing&lt;/strong&gt;.  Companies have been trying to build businesses off of search now since the mid 1960s and yet, with the exception of Google, there is &lt;strong&gt;no&lt;/strong&gt; general search vendor in the same way that there is a database vendor (Oracle).  And, to be really honest, I don't regard Google as a search vendor (they are an advertising company) because you can't really use Google for your own data.  Even the mighty Google, with literally billions of dollars, has chosen to &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Search_Appliance&quot;&gt;exit the model of selling search&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My personal belief is that Google has chosen to exit the business of selling search is because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google's core relevancy ranking is tied to hyperlink analysis but that information doesn't exist within the firewall.&lt;/li&gt;
  &lt;li&gt;The business opportunity for selling search simply isn't all that good compared to the business of selling advertising on global web search.  Advertising is an 80 billion dollar a year business for Google; selling search software is a teeny, tiny fraction of that – even across all the search vendors.&lt;/li&gt;
  &lt;li&gt;Selling search means providing technical support and Google is not good at that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I say that search is not a well productized thing, I mean that search is inherently a customized thing, a business opportunity that needs to be specific to each set of documents / corpus that you want to index.  Literally everything from the set of stop words, word length, user interface, indexing frequency, relevancy ranking, document formats and more needs to be customizable for a search tool to work well.  That level of customization makes providing a horizontal search product that is generally useful damn near impossible.&lt;/p&gt;

&lt;h2 id=&quot;practical-tip-1-start-with-one-document&quot;&gt;Practical Tip 1: Start with One Document&lt;/h2&gt;

&lt;p&gt;With an understanding of why search is hard, here is the practical tip.  Implementing search, for anyone who isn't a damn expert, is very, very hard because what you are doing is generally working with headless, non-observable systems.&lt;/p&gt;

&lt;p&gt;A headless system is one that runs in the background, what is referred to as a daemon.  Search systems tend to have a number of headless tools (the indexer and the search engine).  The problem with headless systems is that you rarely know what is going on and that makes understanding what is happening sometimes damn near impossible.&lt;/p&gt;

&lt;p&gt;When you have systems that are damn near impossible to understand, I find that when you approach them with an experimentation basis, you are better off.  The two techniques that I have always found are best to use with search tools are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Start with one document&lt;/li&gt;
  &lt;li&gt;Instrument that Content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I say that you start with a single document, I mean just that.  One of the key things to understand with any search system is how it takes in or &lt;strong&gt;ingests&lt;/strong&gt; content.  For an internal search tool, this might be done with&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a crawler which starts at a web page and follows links&lt;/li&gt;
  &lt;li&gt;a document collection on a SharePoint server&lt;/li&gt;
  &lt;li&gt;a fileserver of documents&lt;/li&gt;
  &lt;li&gt;a manual set of documents&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because you don't really understand how content is ingested, I regard starting with a single document as a key part of the approach.  What you want to understand is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how content comes in&lt;/li&gt;
  &lt;li&gt;how long indexing takes&lt;/li&gt;
  &lt;li&gt;how frequently indexing happens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the best way to do this is reduce the variables in the process down to a single document.  What you do is create a document, give it to the search system and then see how long it takes for something to become searchable.  And then you change the document, by adding something unique to it, to see how long that change takes to become available.&lt;/p&gt;

&lt;h2 id=&quot;practical-tip-2-instrument-the-content-base&quot;&gt;Practical Tip 2: Instrument the Content Base&lt;/h2&gt;

&lt;p&gt;My second practical tip is really simple - you want to instrument the content base.  In computer parlance, instrumenting something means to make it observable / knowable.  When you build search systems and the number of documents expands dramatically, you are faced with the problem of &quot;how do you know that it works&quot;.  Let's say, for example, that you sell security systems and you have a set of documents, Microsoft Word, PowerPoint, Excel that all talk about your products.  And let's posit that, as a global vendor, you have say 10,000 documents.  If your search system was to fail to find something – would you ever know?  And the correct answer here is that, generally speaking, you wouldn't.&lt;/p&gt;

&lt;p&gt;Internal document collections suffer from the problem of being homogenous in nature – the documents are mostly the same.  And that means it is really hard to tell if something that should be returned for a given query actually was ever even indexed.  The easiest way around this is to instrument your content base by putting in some content that should only exist for you, the search administrator. It needs to be something that no one, other than you, will ever search for in the context of your corpus.  Here are some options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A favorite author's name - say Heinlein or Bujold&lt;/li&gt;
  &lt;li&gt;A favorite character's name that is distinctive as hell - Vorkosigan&lt;/li&gt;
  &lt;li&gt;If you have a set of initials that are consonants only, say LDM or BCG or JSJ, these tend to not be english language words (no vowels) so they are utterly unique.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make sure if you use the initials approach that your search engine is indexing 3 letter words.&lt;/p&gt;

&lt;p&gt;And what you do is create a single document, in each of the formats that you want to index, that contains your instrumentation content.  So if we are a search engine for an internal set of documents, we might make documents in the form:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pdf&lt;/li&gt;
  &lt;li&gt;word&lt;/li&gt;
  &lt;li&gt;excel&lt;/li&gt;
  &lt;li&gt;powerpoint&lt;/li&gt;
  &lt;li&gt;html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;that each have our specialized content.  You then let these be indexed - forever - as a &quot;control group&quot; on your search.  So if your specialized word was Vorkosigan, you should, for every search, have 5 results that come back, one per format.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I guess this violates the single document principle.  Sorry.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-what-makes-up-a-search-tool&quot;&gt;Sidebar: What Makes Up a Search Tool&lt;/h2&gt;

&lt;p&gt;Generally speaking with search tools there are a few components:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;indexer&lt;/strong&gt; which takes content in and makes the index against which queries are done&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;query parser&lt;/strong&gt; which takes the query from the user and then pre-processes it before it goes to the search engine&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;search engine&lt;/strong&gt; which accepts a query and returns a list of results&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;relevancy ranker&lt;/strong&gt; which takes the list of results and orders them correctly; this is often internal to the engine but it doesn't have to be&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;user interface&lt;/strong&gt;, these days HTML into which a query is entered and the&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;admin tools&lt;/strong&gt; which generally range from ok to abysmal.  These are completely different&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;practical-tip-3-dont-bother-with-a-fielded-user-interface&quot;&gt;Practical Tip 3: Don't Bother with a Fielded User Interface&lt;/h2&gt;

&lt;p&gt;When you start to deploy search software, everyone always wants to play with the user interface and build a fielded user interface.  Don't; just don't.  Your users simply won't bother.  Google has created a global consciousness that search is a single field that magically gives you what you need.  This is the user interface that you want to implement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Under the hood and behind the scenes, the query that a search engine gets from a single field is often parsed and a fielded query is constructed which the search engine then runs.&lt;/p&gt;

&lt;p&gt;There are rare occasions where an actual fielded user interface is needed but this is an edge case that you only want to approach after users actually ask for it.  And, in my opinion, even if they ask for it, they won't often use it.&lt;/p&gt;

&lt;p&gt;If you really want to provide a fielded user interface, I would encourage you to simply document the query language that your search engine uses.  Almost all search engines have an actual query language right down to field operators.&lt;/p&gt;

&lt;h2 id=&quot;im-available--hire-me&quot;&gt;I'm Available / Hire Me&lt;/h2&gt;

&lt;p&gt;As with everything I write, if I'm writing it, it means that I'm available as an expert.  I am a consultant these days and I trade $$$ for time and expertise.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/09/15/implementing-a-search-system.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/09/15/implementing-a-search-system.html</guid>
        
        <category>search</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>It Is 2 AM and Postgres Won't Start - What Do You Do?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8820.jpeg&quot; alt=&quot;IMG_8820.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I find myself awake, once again, in the wee hours and I went to work on my second side project; yeah, I know, I know.  So I started by writing a Rails migration and then when I went to execute it, I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
rake aborted!
PG::ConnectionBad: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket &quot;/tmp/.s.PGSQL.5432&quot;?
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/pg-1.1.4/lib/pg.rb:56:in `initialize'
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/pg-1.1.4/lib/pg.rb:56:in `new'
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/pg-1.1.4/lib/pg.rb:56:in `connect'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sigh.  This particular side project is built with &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Rails&lt;/a&gt; and Jumpstart Rails uses Postgres.  And while I have no particular object to Postgres, it isn't MySQL which is my &quot;comfort db&quot;.  So I guess I have to roll my metaphorical sleeves up (they are metaphorical sleeves because I'm writing this at 2:47 am in bed and, well, naked) and figure this out.  I could just try and go back to sleep but, nah….&lt;/p&gt;

&lt;p&gt;The first thing I try is to look at Procfile.dev:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat Procfile.dev

web: bundle exec rails server
webpack: bundle exec bin/webpack-dev-server
sidekiq: bundle exec sidekiq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is no reference to Postgres so maybe it just isn't running.  I rebooted two days ago (to the sound of much griping and cursing - but I digress) so I try and start Postgres using brew:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services start postgres
Service `postgresql` already started, use `brew services restart postgresql` to restart.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Fabulous.  So is it actually running or not:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps auwwx | grep postg
sjohnson         44631   0.0  0.0  4295688    856 s029  S+    2:51AM   0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn postg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That seems to argue that it isn't.  Maybe there's a lock file left behind so I should restart it instead:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services restart postgresql
Stopping `postgresql`... (might take a while)
==&amp;gt; Successfully stopped `postgresql` (label: homebrew.mxcl.postgresql)
==&amp;gt; Successfully started `postgresql` (label: homebrew.mxcl.postgresql)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So I check the process list again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps auwwx | grep postg
sjohnson         44859   0.0  0.0  4268040    784 s029  S+    2:52AM   0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn postg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This type of behavior with a &quot;headless&quot; process generally means that it is starting up, hitting an error condition and aborting – and failing to clean up its lock file (making brew think that its still running).  Sigh.&lt;/p&gt;

&lt;p&gt;Postgres is a background service which means that it is running behind the scenes and it is managed by brew.  So a little digging gave me brew services list:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services list
Name          Status  User     Plist
dnsmasq       stopped
elasticsearch started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.elasticsearch.plist
mariadb       started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.mariadb.plist
mpd           stopped
postgresql    started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
rabbitmq      started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.rabbitmq.plist
redis         stopped
unbound       stopped
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A bunch of years ago, Apple decided to replace the venerable cron with its own XML based launcher and the data structure that runs it is called a plist.  So I can just look at that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;
&amp;lt;plist version=&quot;1.0&quot;&amp;gt;
&amp;lt;dict&amp;gt;
  &amp;lt;key&amp;gt;KeepAlive&amp;lt;/key&amp;gt;
  &amp;lt;true/&amp;gt;
  &amp;lt;key&amp;gt;Label&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;homebrew.mxcl.postgresql&amp;lt;/string&amp;gt;
  &amp;lt;key&amp;gt;ProgramArguments&amp;lt;/key&amp;gt;
  &amp;lt;array&amp;gt;
    &amp;lt;string&amp;gt;/usr/local/opt/postgresql/bin/postgres&amp;lt;/string&amp;gt;
    &amp;lt;string&amp;gt;-D&amp;lt;/string&amp;gt;
    &amp;lt;string&amp;gt;/usr/local/var/postgres&amp;lt;/string&amp;gt;
  &amp;lt;/array&amp;gt;
  &amp;lt;key&amp;gt;RunAtLoad&amp;lt;/key&amp;gt;
  &amp;lt;true/&amp;gt;
  &amp;lt;key&amp;gt;WorkingDirectory&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;/usr/local&amp;lt;/string&amp;gt;
  &amp;lt;key&amp;gt;StandardOutPath&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;/usr/local/var/log/postgres.log&amp;lt;/string&amp;gt;
  &amp;lt;key&amp;gt;StandardErrorPath&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;/usr/local/var/log/postgres.log&amp;lt;/string&amp;gt;
&amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That log file at the end likely has the answer – log files always have the answer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f /usr/local/var/log/postgres.log
2019-09-14 02:58:16.850 EDT [45173] FATAL:  database files are incompatible with server
2019-09-14 02:58:16.850 EDT [45173] DETAIL:  The data directory was initialized by PostgreSQL version 9.6, which is not compatible with this version 11.4.
2019-09-14 02:58:26.985 EDT [45174] FATAL:  database files are incompatible with server
2019-09-14 02:58:26.985 EDT [45174] DETAIL:  The data directory was initialized by PostgreSQL version 9.6, which is not compatible with this version 11.4.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that says to me &quot;Google this little f* problem&quot; which takes me to a &lt;a href=&quot;https://olivierlacan.com/posts/migrating-homebrew-postgres-to-a-new-version/&quot;&gt;great postgres blog post&lt;/a&gt; which recommends that I run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew postgresql-upgrade-database
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that doesn't seem to work because I went from 9.6 to 11.something.or.other – too large a version leap.  But it does make a backup of my Postgres database and maybe that will help me – only it doesn't.&lt;/p&gt;

&lt;p&gt;And this is the point where I start to get sleepy and I'm going to cut to the chase with the solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Backup my old databases to another location to be safe&lt;/li&gt;
  &lt;li&gt;Re-initialize the postgres database with initdb (Thank you great postgres blog post)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here was all the jiggery pokery I had to endure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 3029  brew postgresql-upgrade-database
 3030  psql --version
 3031  ls -l /usr/local/var/postgres
 3032  ls -l /usr/local/var/postgres/postgres.old
 3033  brew services restart postgresql
 3034  ps auwwx | grep postg
 3035  tail -f /usr/local/var/log/postgres.log
 3036  cp /usr/local/var/postgres/postgres.old/postgresql.conf /usr/local/var/postgres/
 3037  brew services restart postgresql
 3038  tail -f /usr/local/var/log/postgres.log
 3039  chmod 0700 /usr/local/var/postgres
 3040  brew services restart postgresql
 3041  ps auwwx | grep postg
 3042  tail -f /usr/local/var/log/postgres.log
 3043  mkdir ~/old_postgres
 3044  rmdir ~/old_postgres
 3045  rmdir ~/old_postgres_databases
 3046  mkdir ~/old_postgres_databases
 3047  mv /usr/local/var/postgres/ ~/old_postgres_database
 3048  ls ~/old_postgres_database
 3049  initdb /usr/local/var/postgres/
➜  lauck git:(master) ✗ brew services start postgres
Service `postgresql` already started, use `brew services restart postgresql` to restart.
➜  lauck git:(master) ✗ brew services restart postgres
Stopping `postgresql`... (might take a while)
==&amp;gt; Successfully stopped `postgresql` (label: homebrew.mxcl.postgresql)
==&amp;gt; Successfully started `postgresql` (label: homebrew.mxcl.postgresql)
➜  lauck git:(master) ✗ ps auwwx | grep post
sjohnson         47737   0.0  0.0  4276124    552 s029  R+    3:14AM   0:00.01 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn post
sjohnson         47732   0.0  0.0  4480624   1620   ??  Ss    3:14AM   0:00.00 postgres: logical replication launcher
sjohnson         47731   0.0  0.0  4335492    856   ??  Ss    3:14AM   0:00.00 postgres: stats collector
sjohnson         47730   0.0  0.0  4480624   1844   ??  Ss    3:14AM   0:00.00 postgres: autovacuum launcher
sjohnson         47729   0.0  0.0  4480560    996   ??  Ss    3:14AM   0:00.00 postgres: walwriter
sjohnson         47728   0.0  0.0  4480560   1104   ??  Ss    3:14AM   0:00.00 postgres: background writer
sjohnson         47727   0.0  0.0  4480560    976   ??  Ss    3:14AM   0:00.00 postgres: checkpointer
sjohnson         47717   0.0  0.1  4480840  17796   ??  S     3:14AM   0:00.04 /usr/local/opt/postgresql/bin/postgres -D /usr/local/var/postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 14 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2019/09/14/it-is-2-am-and-postgres-won-t-start-what-do-you-do.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2019/09/14/it-is-2-am-and-postgres-won-t-start-what-do-you-do.html</guid>
        
        <category>postgres</category>
        
        <category>brew</category>
        
        <category>jumpstart</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Writing Command Line Tools in Python - Enter Fire</title>
        <description>&lt;p&gt;One of the better ways to understand code is to figure out how exactly something runs.  And this can be done from the outside to the inside.&lt;/p&gt;

&lt;p&gt;So I'm starting with a command line that looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 pol.py timeline
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I open up the Python script and search for a def timeline and there isn't one.  Sigh.  The module Fire was mentioned to me during conversations with another developer so I do a quick code search for File and, at the very bottom, I find:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Fire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extract_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;timeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hatebase_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hatebase_regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proportions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hate_proportions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_urls&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;SystemExit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So we've got an if statement which is checking &lt;strong&gt;name&lt;/strong&gt; which I guess is some kind of python special thing because double __ are damn ugly so they must be special to make us notice them.  The colon seems to indicate that the next bit of code is attached to the if (I do know that it does; explaining it helps me at least).  And then we get to the Fire statement which is defining a dict, which I assume is a hash, so that the keyword timeline is mapped to 'hatebase_timeline' which is a method inside this.  And if nothing in the dict is matched, I assume that it falls thru to &quot;raise SystemExit&quot; which causes the program to terminate.&lt;/p&gt;

&lt;p&gt;The nice thing about Fire is that it seems to automagically handle things like the user giving the wrong input.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 pol.py foo
ERROR: Cannot find key: foo
Usage: pol.py &amp;lt;command&amp;gt;
  available commands:    extract | timeline | count | proportions | urls

For detailed information on this command, run:
  pol.py --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It also handles generating help quite nicely when you omit an argument:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 pol.py

NAME
    pol.py

SYNOPSIS
    pol.py COMMAND

COMMANDS
    COMMAND is one of the following:

... (I omitted the specific help)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To use fire, all you need to do is have an import statement (and a line in requirements.txt):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requirements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fire&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fire&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Python's Fire library comes from Google and is on &lt;a href=&quot;https://github.com/google/python-fire&quot;&gt;github&lt;/a&gt;.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;so-what-did-i-learn&quot;&gt;So What Did I Learn?&lt;/h2&gt;

&lt;p&gt;What I learned from this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A __ is something special in python&lt;/li&gt;
  &lt;li&gt;A : handles assigning code to a label or structure&lt;/li&gt;
  &lt;li&gt;Fire makes command line interfaces&lt;/li&gt;
  &lt;li&gt;The execution order of a python script is likely top down and, I suspect, that this wouldn't have worked if the if statement was at the top because the methods wouldn't have yet been in memory (I'm unclear on this final point)&lt;/li&gt;
  &lt;li&gt;There is an implicit C like concept of main only it is called &lt;strong&gt;main&lt;/strong&gt; and is simply code not inside a def structure&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/13/writing-command-line-tools-in-python-enter-fire.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/13/writing-command-line-tools-in-python-enter-fire.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Code - Data Versus Algorithms or There Is Always Another Way</title>
        <description>&lt;p&gt;I'm currently writing an active side project.  I describe active as something that I think about every single day and I've been at for several months.  It is still in stealth mode but at more than 4k lines of code, it is pretty damn real.  This is also the first thing I've ever built where gamification plays an important role.  One of the things that I need for the gamification is to know if a date is a holiday.  The date centric holidays are pretty easy – Date.new(this_year, 10, 31) for halloween, just for example.  But the stickler is thanksgiving – that 4th Thursday of the damn month.&lt;/p&gt;

&lt;p&gt;A simple Ruby solution is to construct a date range - Nov 1 and Nov 30 and then walk up, counting the Thursdays when you go.  And I'm certain there are better / more elegant ways but I'm not a whizbang date math kinda engineer.  But this is a method which gets called for every single metric that the system captures (for just a few months of data, there are over 700 metrics for my usage alone).  So I don't want that much iteration.  I looked at the &lt;a href=&quot;https://github.com/holidays/holidays&quot;&gt;Holidays gem&lt;/a&gt; and considered it but I only, for now, need simple holidays.&lt;/p&gt;

&lt;p&gt;And then it struck me – this is a side project, damn it.  The odds on any side project surviving for more than a year are low (although &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Job Hound&lt;/a&gt; has now beaten the odds at about 1.5 years old).  And Data is (generally) faster than code no matter how you cut it – so why not just hard code 5 years of Thanksgivings into the app.  I don't need a generalized solution that works for all time.  I just need a solution that is good enough to find out if there's a market for my side project.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateCommon&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# Todo - this bites me in the ass in 2024&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2021&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2021&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2021&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2022&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2022&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2022&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2023&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2023&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2023&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2023&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;holiday?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;year&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2019&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2020&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2020&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2021&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2021&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2022&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2022&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2023&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2023&lt;/span&gt;    

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this gives me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  DateCommon.holiday?(self.created_at)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: by using created_at, I need to call this as part of an after_create or after_save since otherwise created_at wouldn't be set.&lt;/p&gt;

&lt;p&gt;Oh and as far as finding out when a particular Thanksgiving was, Google proved amply up to the task.  Just google for Thanksgiving 2024 and you'll see what I mean.  Sadly Google stops at 2024 which means my threshold of 5 years is probably about right.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/09/13/code-data-versus-algorithms-or-there-is-always-another-way.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/09/13/code-data-versus-algorithms-or-there-is-always-another-way.html</guid>
        
        <category>software_engineering</category>
        
        <category>ruby</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Data Science - Data Sets versus a Data Repository</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8784.jpeg&quot; alt=&quot;IMG_8784.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have to begin this by stating definitively that I am not a Data Scientist myself (I don't have the math / statistics chops) but:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I've done data science work&lt;/li&gt;
  &lt;li&gt;I've managed data scientists where they were among my direct reports&lt;/li&gt;
  &lt;li&gt;I am a damn good software engineer with a ton of experience in data acquisition, data normalization (which are key data science issues)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I think I'm qualified to talk on these matters.&lt;/p&gt;

&lt;p&gt;I've spent much of the past few days dealing with issues around a large data set (100 million posts; 15 gigs stored in a compressed ZST file).  Even today when you start dealing with individual files that are larger than a few gigs, you actually have problems.  This 15 gig file had to be split into multiple 2 gig chunks to be distributed to me via our cloud storage tool  (&lt;a href=&quot;https://www.box.com/&quot;&gt;box.com&lt;/a&gt;; sidebar - how can you call yourself a storage company and have a limit of 2 gigs per file; I mean … WHAT ????).  And the confusion / issues around getting all 7 parts and then correctly joining them together cost me about a day of work due to download time and then multiple hour long runs getting interrupted because I thought I had a complete data set when I actually didn't.&lt;/p&gt;

&lt;p&gt;A data repository is a different thing from a data set.  A data repository is a database of the records that make up your data set that is accessed either by SQL or by a formal API.  Unlike a data set, a data repository represents a &quot;source of truth&quot;.  So while you might have Code Base XYZ and Bill might have a dataset of records he tests with and Beverly might have a different set of records that she tests with thus leading to different results, if Bill and Beverly tested against a data repository, they should get the same result.&lt;/p&gt;

&lt;p&gt;So thinking about these issues makes me want to state something dramatic like:  &quot;There shall always be a data repository; this bull crap around big archives is stupid and shall not be done&quot; but that's a short sighted approach that ignores how practical data science is often done.  An awful lot of data science is &lt;strong&gt;exploratory&lt;/strong&gt; in nature and involves going through data over and over.  And the simple nature of a local file is that it can always be browsed / explored faster than a network resource such as a data repository.  Also there are a &lt;a href=&quot;https://fuzzyblog.io/blog/data_science/2019/09/03/interesting-data-science-utilities.html&quot;&gt;variety of tools / pipelines&lt;/a&gt; that can be used with standard files that don't work with a repository style approach.&lt;/p&gt;

&lt;p&gt;And this makes me think that data sets exist alongside a data repository.  In fact I think the process is something like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Data is acquired and initially goes into a file based data set (maybe a zst file; maybe a directory of CSV files or something else).&lt;/li&gt;
  &lt;li&gt;At some point when the data is sufficiently valuable / verified / important then it is imported into a data repository so it becomes a central point of truth.&lt;/li&gt;
  &lt;li&gt;Down the road the data repository is used to generate one or more data sets for ongoing work.  One of the benefits of this is that you could dynamically generate different datasets like &quot;stuff in 2018&quot; versus &quot;stuff in 2017&quot; so you could see changes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How you distribute the data set files is something that still needs to be determined.  Obvious candidates include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;S3&lt;/li&gt;
  &lt;li&gt;FTP&lt;/li&gt;
  &lt;li&gt;Bittorrent&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 12 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/data_science/2019/09/12/data-science-data-sets-versus-a-data-repository.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/data_science/2019/09/12/data-science-data-sets-versus-a-data-repository.html</guid>
        
        <category>data_science</category>
        
        <category>python</category>
        
        
        <category>data_science</category>
        
      </item>
    
      <item>
        <title>Rails Tip - When in Doubt Bundle Exec</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/charlie_brown_lucy.jpg&quot; alt=&quot;charlie_brown_lucy.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently brought a newbie up into Rails the other day and their experience was that using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec command
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;automagically fixed everything.  They weren't wrong.  I've been doing this for years and years and my personal dev box is supposed to automagically pre-pend bundle exec where necessary and, even so, it is still sometimes necessary.&lt;/p&gt;

&lt;p&gt;Here's an example of the weirdness that bundle exec can fix:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  lauck git:(master) ✗ rails g model Project
Ignoring bcrypt-3.1.13 because its extensions are not built.  Try: gem pristine bcrypt --version 3.1.13
Ignoring bcrypt-3.1.12 because its extensions are not built.  Try: gem pristine bcrypt --version 3.1.12
Ignoring bindex-0.8.1 because its extensions are not built.  Try: gem pristine bindex --version 0.8.1
Ignoring bindex-0.7.0 because its extensions are not built.  Try: gem pristine bindex --version 0.7.0
Ignoring binding_of_caller-0.8.0 because its extensions are not built.  Try: gem pristine binding_of_caller --version 0.8.0
Ignoring bootsnap-1.4.5 because its extensions are not built.  Try: gem pristine bootsnap --version 1.4.5
Ignoring bootsnap-1.4.4 because its extensions are not built.  Try: gem pristine bootsnap --version 1.4.4
Ignoring byebug-11.0.1 because its extensions are not built.  Try: gem pristine byebug --version 11.0.1
Ignoring childprocess-1.0.1 because its extensions are not built.  Try: gem pristine childprocess --version 1.0.1
Ignoring debug_inspector-0.0.3 because its extensions are not built.  Try: gem pristine debug_inspector --version 0.0.3
Ignoring nokogiri-1.10.3 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.3
Ignoring nokogiri-1.10.4 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.4
Ignoring nokogiri-1.10.3 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.3
Ignoring nokogiri-1.10.4 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.4
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/app_loader.rb:52:in `block in exec_app': undefined method `match?' for /(APP|ENGINE)_PATH/:Regexp (NoMethodError)
Did you mean?  match
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/app_loader.rb:48:in `loop'
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/app_loader.rb:48:in `exec_app'
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/cli.rb:7:in `&amp;lt;top (required)&amp;gt;'
	from /System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:68:in `require'
	from /System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:68:in `require'
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/exe/rails:10:in `&amp;lt;top (required)&amp;gt;'
	from /usr/bin/rails:22:in `load'
	from /usr/bin/rails:22:in `&amp;lt;main&amp;gt;'

➜  lauck git:(master) ✗ which ruby
/Users/sjohnson/.rvm/rubies/ruby-2.6.3/bin/ruby
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then when bundle exec is used, we get the normal frothy Rails goodness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  lauck git:(master) ✗ bundle exec rails g model Project
Running via Spring preloader in process 81386
      invoke  active_record
      create    db/migrate/20190911073916_create_projects.rb
      create    app/models/project.rb
      invoke    test_unit
      create      test/models/project_test.rb
      create      test/fixtures/projects.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are times when being a software developer feels a striking amount like being Charlie Brown when Lucy keeps taking the ball away.  Oy.&lt;/p&gt;

</description>
        <pubDate>Wed, 11 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/11/rails-tip-when-in-doubt-bundle-exec.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/11/rails-tip-when-in-doubt-bundle-exec.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Testing Sites on Mobile - Responsinator Rocks</title>
        <description>&lt;p&gt;Let's say that you are the webmaster of a fan run science fiction convention, say &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Star Base Indy&lt;/a&gt;, and someone tells you &quot;Feature xyz doesn't work on mobile&quot; – what do you do?  You might dig up a phone but you could also try out Responsinator!&lt;/p&gt;

&lt;p&gt;Responsinator is a tool which lets you put in your own url and then view it as if it was a mobile site.  &lt;a href=&quot;https://www.responsinator.com/?url=https%3A%2F%2Fstarbaseindy.org&quot;&gt;Try it here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the description from the authors:&lt;/p&gt;

&lt;p&gt;&quot;Responsinator helps website makers quickly get an indication of how their responsive site will look on the most popular devices. It does not precisely replicate how it will look, for accurate testing always test on the real devices.&quot;&lt;/p&gt;

&lt;p&gt;Responsinator isn't perfect but it seems like a very cool, very easy way to get a feel for whether or not your site works on mobile (at least in terms of rendering / display).  &lt;strong&gt;Strongly Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Postscript&lt;/strong&gt;: There is even a &lt;a href=&quot;https://www.responsinator.com/about/&quot;&gt;bookmarklet&lt;/a&gt; that you can put in your browser toolbar to test whatever site you happen to be working on&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mobile/2019/09/10/testing-sites-on-mobile-responsinator-rocks.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mobile/2019/09/10/testing-sites-on-mobile-responsinator-rocks.html</guid>
        
        <category>webdev</category>
        
        <category>mobile</category>
        
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Questions to Ask During a Job Interview</title>
        <description>&lt;p&gt;I don't normally just blog links to stuff but this is actually pretty good.  It is a well written set of questions to ask during a job interview.  And there's a Hacker News discussion which also surfaces more than a few things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/viraptor/reverse-interview&quot;&gt;Job Interview Questions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20916749&quot;&gt;Hacker News Discussion of Job Interview Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My two favorites are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are you profitable?&lt;/li&gt;
  &lt;li&gt;If not, how long is your runway?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are considering working for a startup and you don't ask about their runway (i.e. how long can they operate before needing to raise the next round), well, you're a damn fool.  And I include myself in that assertion – because I haven't always asked that myself.&lt;/p&gt;

&lt;p&gt;The author also recommends an oldie but a goodie, &lt;a href=&quot;https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/&quot;&gt;The Joel Test&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/09/10/questions-to-ask-during-a-job-interview.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/09/10/questions-to-ask-during-a-job-interview.html</guid>
        
        <category>hiring</category>
        
        <category>jobhound</category>
        
        <category>interview</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Building a Python requirements.txt File</title>
        <description>&lt;p&gt;So one of my first tasks in my new job is getting a code base into readiness from its state as &quot;works on the original developer's laptop&quot;.  And, naturally, this process is hindered by the fact that it is a Python codebase and I'm a Ruby guy.  Still this is software development 101 – release management – and I do know how to do that.&lt;/p&gt;

&lt;p&gt;A python requirements.txt file is the equivalent of a Ruby Gemfile – an ASCII text file that identifies the libraries to load into an application.&lt;/p&gt;

&lt;p&gt;Here's an example of a Gemfile:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 6'
gem 'puma', '~&amp;gt; 3.11'
gem 'mysql2', '&amp;gt;= 0.4.4', '&amp;lt; 0.6.0'
gem 'bootsnap', '&amp;gt;= 1.1.0', require: false    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's a Python requirements.txt file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pygments==1.4
SQLAlchemy==0.7.1
South==0.7.3
amqplib==0.6.1
anyjson==0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The syntax is different but they are clearly the same type of thing – a package name and a version number.  The reason that the version number is important is that this locks a package down to a specific version number.  I'll write later why this is so damn important these days but for now please accept that it is (its a security thing).&lt;/p&gt;

&lt;p&gt;So the questions become:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you know what package names to put there?&lt;/li&gt;
  &lt;li&gt;How do you know what version number to use?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first one is easy – you look for lines at the start of your Python program that begin like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  import iso8601
  import ujson as json
  import zstandard as zstd
  import numpy as np
  
  -or-
  
  from fire import Fire
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Do I understand the difference between it beginning with &quot;from&quot; and &quot;import&quot;?  Nope.  Nor do I need to at this point.&lt;/p&gt;

&lt;p&gt;So my first entry in this requirements.txt file might be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstandard==9999
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My guess was that Python would either give me an error message that helped me or let me know what was going on when I gave a crazy version number.  This is done with a command line like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's what happened:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Collecting zstandard==9999 (from -r requirements.txt (line 17))
  ERROR: Could not find a version that satisfies the requirement zstandard==9999 
  (from -r requirements.txt (line 17)) (from versions: 0.0.1, 0.1, 0.2, 0.2.1, 0.2.2,
     0.3.0, 0.3.1, 0.3.2, 0.3.3, 0.4.0, 0.5.0, 0.5.1, 0.5.2, 0.6.0, 0.7.0, 0.8.0, 
     0.8.1, 0.8.2, 0.9.0, 0.9.1, 0.10.0, 0.10.1, 0.10.2, 0.11.0, 0.11.1)
ERROR: No matching distribution found for zstandard==9999 (from -r requirements.txt 
  (line 17))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that tells us that 0.11.1 is a valid version number so our requirements line becomes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstandard==0.11.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The final trick is to build this up one dependency at a time.  That way you resolve everything as you go instead of N conflicts all at once.&lt;/p&gt;

&lt;p&gt;In closing there are also some standard libraries that follow the same from / import calls but don't actually need to be in requirements.txt.  Here are some seeming examples:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import re 
from sys import stdin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My best advice here is play around with the 9999 trick and see if a version number appears.  If it does then put it in requirements.txt and if not, well, kill it since then it is likely a Python built in.&lt;/p&gt;

&lt;p&gt;And while I suspect there are more subtleties buried deep within Python's requirements.txt facility, this is a pretty good stopping place.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html</guid>
        
        <category>python</category>
        
        <category>requirements</category>
        
        <category>pip</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>A Universal Resume Tool</title>
        <description>&lt;p&gt;Ah insomnia.  I clearly should not be out on the Internet late at night – I should be sleeping but the result is a swath of Internet goodness that I've found and am now writing about.  This find is &quot;Universal Resume&quot; which is an NPM project to produce a good looking resume website for yourself.  &lt;a href=&quot;https://universal-resume.netlify.com/&quot;&gt;Here's an example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are the links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://universal-resume.netlify.com/&quot;&gt;Example&lt;/a&gt; – see what a resume looks like.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/WebPraktikos/universal-resume&quot;&gt;The Code&lt;/a&gt; – try it for yourself&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20923823&quot;&gt;See what others think&lt;/a&gt; – the Hacker News discussion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I'm not an NPM guy (or a JavaScript guy at all), I will admit that this looks better than my &lt;a href=&quot;https://fuzzyblog.io/blog/resume.html&quot;&gt;outdated online resume&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hm… Perhaps I should talk to this person about incorporating this into Job Hound as a resume hosting feature …&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/09/10/a-universal-resume-tool.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/09/10/a-universal-resume-tool.html</guid>
        
        <category>jobhound</category>
        
        <category>hiring</category>
        
        <category>job</category>
        
        <category>resume</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Working with ZSTD Files</title>
        <description>&lt;p&gt;I love open source developers but there are times when I question their damn naming practices.  I'm currently working with a giant data repository started as a &quot;Z Standard&quot; or &quot;zstd&quot; compressed file.  And while I know that means &quot;Z Standard&quot;, I can't help but look at it as &quot;Z std&quot;.  Oy.&lt;/p&gt;

&lt;p&gt;Anyway.  Zstd is a &lt;a href=&quot;https://github.com/facebook/zstd&quot;&gt;Facebook standard for data compression&lt;/a&gt; and it is strikingly effective.  I've got over 100 gigs of JSON encoded data stored in a 13.7 gig file.  Now I am aware that text compresses actually quite well but still 100 gigs in 13.7 gigs of space feels like &lt;strong&gt;wow&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;

&lt;p&gt;If you're on a Mac then brew, as always, is your very best friend:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install zstd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;useful-command-lines&quot;&gt;Useful Command Lines&lt;/h2&gt;

&lt;p&gt;Assume that pol.zst is the name of the archive and it is located in your current directory.&lt;/p&gt;

&lt;p&gt;Examining a handful of records:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | head -n100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;this dumps a stream of records out that are then fed into head which limits the quantity to 100.&lt;/p&gt;

&lt;p&gt;The zstd -c and -d options mean:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-c     : force write to standard output, even if it is the console
-d     : decompression
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Integrating the often useful jq (which just gets a single json element out):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | jq '.timestamp'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And like all good *nix pipelines, this is composable (this example would extract the first 1000 records and then reduce them to only the comment element from the json):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | head -n1000 | jq '.comment'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To count the total records in the zst file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | wc -l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Happily help is also available with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank You's&lt;/h2&gt;

&lt;p&gt;Kudos to Facebook for another great bit of Open Source contributed back to the world.  Also thanks to &lt;a href=&quot;https://grantrvd.github.io/&quot;&gt;Grant Vousden-Dishington&lt;/a&gt;, the contributor of these command lines. He's been doing Zstd for a while; I'm the noob here.&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/09/09/working-with-zst-files.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/09/09/working-with-zst-files.html</guid>
        
        <category>linux</category>
        
        <category>zstd</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Working Up to Bert - Installing TensorFlow for Python</title>
        <description>&lt;p&gt;I'm gearing myself up mentally for a bunch of upcoming machine learning worth using Bert / Roberta and that means getting my head around just working with Python as a tool.  So today's exercise is installing TensorFlow for Python since Bert / Roberta have TensorFlow as a dependency.&lt;/p&gt;

&lt;p&gt;I worked from the &lt;a href=&quot;https://www.tensorflow.org/install/pip&quot;&gt;official TensorFlow instructions using pip&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-1---validating-requirements&quot;&gt;Step 1 - Validating Requirements&lt;/h2&gt;

&lt;p&gt;Whenever you are on the cutting edge (and TensorFlow is cutting edge) then you generally need the latest tools so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 --version
Python 3.7.4

pip3 --version
pip 19.2.3 from /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip (python 3.7)

virtualenv --version
15.1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All of those are actually recent.  To translate these for myself and the one or two other rubyists out there:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;python3 is the Python language executable; think ruby&lt;/li&gt;
  &lt;li&gt;pip3 is the equivalent of bundler (and your Gemfile is named requirements.txt); but pip is also partial equivalent of the gem executable (as opposed to the gem itself)&lt;/li&gt;
  &lt;li&gt;virtualenv is the equivalent of rvm or rbenv&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don't have current versions of those then you might want to check out the &lt;a href=&quot;https://www.anaconda.com/distribution/&quot;&gt;Anaconda distribution of Python&lt;/a&gt; although some of my &lt;a href=&quot;https://eethomp.github.io&quot;&gt;python friends&lt;/a&gt; would curse mightily to hear me say that; I don't savvy the differences enough yet to know.&lt;/p&gt;

&lt;h2 id=&quot;create-a-virtual-environment&quot;&gt;Create a Virtual Environment&lt;/h2&gt;

&lt;p&gt;The next step is to create a virtual environment where you're planning to work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Given the quantity of terminal windows I survive in, the first thing I actually did was to load the nu shell in my terminal so I had a distinct environment to separate Python from my Ruby (&quot;You got python in my Ruby; No you got Ruby in my python&quot;; anyone out there get that old joke).  I also created and changed into a new directory where this will all be installed into since I wasn't sure exactly where / how the python virtual environment was going to work.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/fuzzygroup/adl/tensorflow
cd ~/fuzzygroup/adl/tensorflow
virtualenv --system-site-packages -p python3 ./venv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this shows me is that virtualenv creates a single directory called &quot;venv&quot; in your current directory (presumably holding dependencies):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls
------+-----------+----------+-------+-------------+-------------+-------------
 name | type      | readonly | size  | created     | accessed    | modified
------+-----------+----------+-------+-------------+-------------+-------------
 venv | Directory |          | 224 B | an hour ago | an hour ago | an hour ago
------+-----------+----------+-------+-------------+-------------+-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and here's a look into venv itself:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls venv/
---+-------------------------+-----------+----------+-------+-------------+-------------+-------------
 # | name                    | type      | readonly | size  | created     | accessed    | modified
---+-------------------------+-----------+----------+-------+-------------+-------------+-------------
 0 | venv/.Python            | Symlink   |          | 56 B  | an hour ago | an hour ago | an hour ago
 1 | venv/bin                | Directory |          | 512 B | an hour ago | an hour ago | an hour ago
 2 | venv/include            | Directory |          | 96 B  | an hour ago | an hour ago | an hour ago
 3 | venv/lib                | Directory |          | 96 B  | an hour ago | an hour ago | an hour ago
 4 | venv/pip-selfcheck.json | File      |          | 61 B  | an hour ago | an hour ago | an hour ago
---+-------------------------+-----------+----------+-------+-------------+-------------+-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: And isn't the &lt;a href=&quot;https://www.jonathanturner.org/2019/08/introducing-nushell.html&quot;&gt;nu shell&lt;/a&gt; cool as hell?&lt;/p&gt;

&lt;p&gt;Once you have venv setup then you need to activate it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ./venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Ruby this would be done just by changing into the directory thru .ruby-version and .ruby-gemfile.&lt;/p&gt;

&lt;p&gt;The next step is to make sure that pip is upgraded:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install --upgrade pip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the Ruby world, this is equivalent to upgrading bundler.&lt;/p&gt;

&lt;p&gt;Run a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to see what's installed.&lt;/p&gt;

&lt;p&gt;In the Ruby world this would be 'gem list'.&lt;/p&gt;

&lt;p&gt;Now in the Ruby world where you automagically have your environment setup for you (and taken down) when you change in and out of directories, virtualenv requires you to manually deactivate:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Given my personal problems with &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html&quot;&gt;Shell Extension Madness&lt;/a&gt;, I'm not certain that being explicit about virtualenv activation / deactivation is all that bad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm a consultant and a serious ruby hobbyist so I have WAY more environments than is normal; I'm not saying that rbenv / rvm don't work in general, more specifically, that they don't always work for &lt;strong&gt;me&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;## Actually Installing TensorFlow&lt;/p&gt;

&lt;p&gt;And now, finally, we can actually install TensorFlow:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pip install --upgrade tensorflow
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This would be the equivalent of a gem install command without a Gemfile.&lt;/p&gt;

&lt;p&gt;To verify the installation we can pass a Python script into Python with the -c argument:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 -c &quot;import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Interestingly the TensorFlow docs had the above as just &quot;python -c&quot; despite referencing python3 earlier.  I thought perhaps that virtualenv aliased python3 to python but that seems not to be the case; bad on Google Documents; sigh.&lt;/p&gt;

&lt;p&gt;Here's what I got as a result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 -c &quot;import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))&quot;
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([(&quot;qint8&quot;, np.int8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([(&quot;quint8&quot;, np.uint8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([(&quot;qint16&quot;, np.int16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([(&quot;quint16&quot;, np.uint16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([(&quot;qint32&quot;, np.int32, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([(&quot;resource&quot;, np.ubyte, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([(&quot;qint8&quot;, np.int8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([(&quot;quint8&quot;, np.uint8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([(&quot;qint16&quot;, np.int16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([(&quot;quint16&quot;, np.uint16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([(&quot;qint32&quot;, np.int32, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([(&quot;resource&quot;, np.ubyte, 1)])
Tensor(&quot;Sum:0&quot;, shape=(), dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This seems to be a bunch of deprecation warnings but the final output seems to be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Tensor(&quot;Sum:0&quot;, shape=(), dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I guess that's right… I mean it did some kind of math; I just don't understand it yet.  And they don't actually show what should happen.  Again bad on the Google documenters.&lt;/p&gt;

&lt;p&gt;So the next step here is to move onto the &lt;a href=&quot;https://www.tensorflow.org/tutorials&quot;&gt;tutorials&lt;/a&gt;…&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html</guid>
        
        <category>python</category>
        
        <category>tensorflow</category>
        
        <category>pip</category>
        
        <category>virtualenv</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Becoming a Rails Developer - Bundle Install Completes; What's Next</title>
        <description>&lt;p&gt;I currently bootstrapping a friend into a Rails development cycle and here's their status:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;RbEnv is installed.&lt;/li&gt;
  &lt;li&gt;Ruby is installed.&lt;/li&gt;
  &lt;li&gt;Application is checked out.&lt;/li&gt;
  &lt;li&gt;Bundle Install has completed.&lt;/li&gt;
  &lt;li&gt;The database is created i.e. bundle exec rake db:create has completed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So from their parlance, &quot;the application compiles&quot; – but what now brown cow?&lt;/p&gt;

&lt;p&gt;The first thing you want to do is verify that things work.  I mean they should but how do you know?&lt;/p&gt;

&lt;p&gt;The first step is to run the test suite:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rspec spec
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That should execute and not show any errors.  If that succeeds then the next step in making sure your installation is complete is to run the Rails console and do something simple:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails c (and press enter and wait for it to load)
User.where(username: 'fuzzygroup') (and press enter)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this should do is launch the interactive rails console – a REPL, similar to what you get when you type python.  A REPL (read-evaluate-print-loop) is an interactive way to do development and manipulate the state of the system.  There are two different REPLs in the ruby world – there is &lt;strong&gt;irb&lt;/strong&gt; which is a REPL for the ruby language and then &lt;strong&gt;rails c&lt;/strong&gt; which is the ruby REPL but loaded with all the &quot;objects&quot; (really classes) for your application.&lt;/p&gt;

&lt;p&gt;The command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User.where(username: 'fuzzygroup')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;is a &quot;ActiveRecord&quot; statement which says &quot;Execute the User class and return any database objects with the username of 'fuzzygroup' drom the users table&quot;.  ActiveRecord is an ORM (object-relational mapper) that drives the database layer of Rails.  Unlike most ORMs, ActiveRecord actually works strikingly well.&lt;/p&gt;

&lt;p&gt;What you should get back from User.first at this point is basically [] and a response like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User Exists? (56.5ms)  SELECT 1 AS one FROM `users` WHERE `users`.`username` = 'fuzzygroup' LIMIT 1
[]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The default operation for ActiveRecord's where statement is to query the database and return a collection of objects (think array although its actually richer).  In this case there was no matching object so you just got back an empty array (like class).&lt;/p&gt;

&lt;p&gt;This brings us to an interesting ruby-ism which messes up a lot of people – the concept of the default return.  Here's an example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def multiply(x,y)
  x * y
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you executed this method with multiply(2,3) then you'd get back 6 even though there is no actual return statement.  Ruby operates by returning the last evaluated expression at the end of a statement and we can use that concept right now.  Back in the Rails console type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;result = _
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you'll get this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.6.3 :018 &amp;gt; result = _
  User Exists? (8.3ms)  SELECT 1 AS one FROM `users` WHERE `users`.`username` = 'fddd' LIMIT 1
[]
2.6.3 :019 &amp;gt; result.class
User::ActiveRecord_Relation &amp;lt; ActiveRecord::Relation
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the Rails console, the last result is always available as the special variable &lt;strong&gt;_&lt;/strong&gt;. And you can always look at an object's class with the .class method.&lt;/p&gt;

&lt;p&gt;To exit the Rails console, just type quit and press enter:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;quit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What you have now done is to validate that the Rails system itself works.  If you can bring up a Rails console and connect to the database thru ActiveRecord then pretty much 100% of Rails itself works (the connection to Redis is something else but we're not ready for that yet).&lt;/p&gt;

&lt;p&gt;And this brings up to the nasty truth about any Rails environment – without data to operate on, things, well, really suck.  This process of getting an initial set of development data to work on is referred to as &quot;seeding&quot;.  And there is both a default way to do this – and then the way that I do it.&lt;/p&gt;

&lt;p&gt;The default want to do this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:seed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that should load a series of YAML files which define the state of the objects in the system.  And while that works, I have always found that database seeding needs to be far more controllable and idempotent than a simple YAML loader.&lt;/p&gt;

&lt;p&gt;Note: Idempotence is a fancy computer term that means:&lt;/p&gt;

&lt;p&gt;Idempotence (UK: /ˌɪdɛmˈpoʊtəns/, US: /ˌaɪdəm-/) is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Idempotence&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From a personal perspective, in this context, idempotence means that an object in the database should be created correctly when it doesn't exist &lt;strong&gt;and&lt;/strong&gt; that creation command should be able to be run again – and not have that object altered.  Here's an example - you want a user named fuzzygroup (yep that's me; it is short for me and my cats while also being a mild reference to fuzzy logic) to exist in the system.  And when you extend the database seeding routine to be more powerful, you don't want the work that was done incrementally using the user interface to be wiped out.&lt;/p&gt;

&lt;p&gt;Here's how I manage database seeding:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake seed:init --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Yes you should do this now if you are working on one of my codebases; otherwise this won't do a damn thing.&lt;/p&gt;

&lt;p&gt;The command rake is a way to execute a set of ruby scripts that run from the command line. Rake is a creation of the late Jim Weirich, a wonderful rubyist, and &quot;rake tasks&quot; are a key part of the Rails infrastructure.  This command is saying: &quot;Run the seed namespace and call the init task within it.  Also give me a detailed trace of any errors&quot;.  Rake tasks live in this part of your rails codebase:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lib/tasks/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All Rails codebases have a standard directory structure and lib is a top level directory in the hierarchy.&lt;/p&gt;

&lt;p&gt;At the end of this you should have a database that is now correctly populated with a series of objects related to the problem domain you are solving.&lt;/p&gt;

&lt;p&gt;The next step is to launch the default Rails web server with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This runs Puma which is a ruby web server and you can navigate to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3000/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;in Chrome or your default browser of choice and you should see a home page -or- a sign in page.  At this point you should dig into lib/tasks/user.rake and see if there are credentials to use (there are).&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/08/becoming-a-rails-developer-bundle-install-completes-what-s-next.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/08/becoming-a-rails-developer-bundle-install-completes-what-s-next.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Setting Up a Github Pages Jekyll Blog</title>
        <description>&lt;p&gt;I don't recommend that anyone blog the way I do.  Git and Jekyll are both fairly user hostile but I found myself having to do this the other day so i thought I'd document it at least for myself.&lt;/p&gt;

&lt;p&gt;Note the First: This assumes that you have a working local ruby installation and the Jekyll gem installed.&lt;/p&gt;

&lt;p&gt;Note the Second: These instructions are rough – there's a fair bit of jiggery / pokery going on here and I may have missed a step.  Dust off your Google Fu, sacrifice a goat and pray.  That's usually how I setup a new blog.&lt;/p&gt;

&lt;p&gt;Things in &lt;strong&gt;bold&lt;/strong&gt; or otherwise emphasized are what you type.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Do a &lt;strong&gt;jekyll new blogname&lt;/strong&gt; and create a new blog.  blogname is how this is going to appear online so get that name right.&lt;/li&gt;
  &lt;li&gt;Change into that directory.  I don't know what it is so the only help I can give you is &lt;strong&gt;cd&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In that directory, do a &lt;strong&gt;git init&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;On github create a new repository named blogname (in step 1).&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On your local machine, in that directory, do a:&lt;/p&gt;

    &lt;p&gt;git remote add origin git@github.com:fuzzygroup/blogname.git&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;bundle install&lt;/strong&gt; to setup all the code for your Jekyll blog.&lt;/li&gt;
  &lt;li&gt;Edit _config.yml and setup your metadata.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git add .&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git commit -m &quot;initial commit&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git branch gh-pages&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git co gh-pages&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git push origin gh-pages&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Try and view it on github. I know that's not very specific and I apologize; a bit rushed this morning.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/pages/&quot;&gt;https://help.github.com/pages/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/setting-up-your-github-pages-site-locally-with-jekyll&quot;&gt;https://help.github.com/en/articles/setting-up-your-github-pages-site-locally-with-jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 07 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jekyll/2019/09/07/setting-up-a-github-pages-jekyll-blog.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jekyll/2019/09/07/setting-up-a-github-pages-jekyll-blog.html</guid>
        
        <category>jekyll</category>
        
        <category>blogging</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>12 Practical Tips for Job Seekers</title>
        <description>&lt;p&gt;My last job search took sending out almost 100 job applications and during that process, I managed to collect a handful of practical tips that should be helpful to job seekers:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Regularly Check All Mail Not Just Inbox&lt;/li&gt;
  &lt;li&gt;Stack Overflow has an Inbox Also&lt;/li&gt;
  &lt;li&gt;Cover Letters Really, Really Matter&lt;/li&gt;
  &lt;li&gt;If You Do Homework Make a Screencast Demoing It&lt;/li&gt;
  &lt;li&gt;Interviews Matter Much, Much More to You Than to the Company&lt;/li&gt;
  &lt;li&gt;Find Out What Coding Test They Use&lt;/li&gt;
  &lt;li&gt;Always, Always Review the Call Details Before the Call&lt;/li&gt;
  &lt;li&gt;Never Tell Your Salary&lt;/li&gt;
  &lt;li&gt;You'll Never Know Why You Didn't Get It; Let It Go&lt;/li&gt;
  &lt;li&gt;Don't Ever Stop Sending Out Resumes; Not Over Until the Fat Person Hires You&lt;/li&gt;
  &lt;li&gt;The Older You Are, The Harder This Is&lt;/li&gt;
  &lt;li&gt;The Job Market Has Changed - It Is About Keeping Bad People Out Not Getting Good People In&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;regularly-check-all-mail-not-just-inbox&quot;&gt;1. Regularly Check All Mail Not Just Inbox&lt;/h1&gt;

&lt;p&gt;The simplest thing I learned was obvious but absolutely unapparent.  I've been a regular user of Gmail ever since I could get an account and like most Gmail users, I rely on the default Inbox view.  The thing to understand is that Inbox doesn't always get it right in a job context.  There are lots of places in the job hunt process where a program sends you an automated email and I've found that those automated emails often do NOT show up in Inbox.&lt;/p&gt;

&lt;p&gt;I've been faithfully using GMail since it came out and one of the things that really surprised me is the number of messages related to an ongoing job search that GMail happily filed away under &quot;All Messages&quot; and not in Inbox. Even when I had been actively in discussion with people at a given company, I would still find messages from the company showing up only in All Messages. This is hugely frustrating and it definitely cost me an interview or two until I started religiously checking All Mail every day.&lt;/p&gt;

&lt;h1 id=&quot;stack-overflow-has-an-inbox-too&quot;&gt;2. Stack Overflow Has an Inbox Too&lt;/h1&gt;

&lt;p&gt;This means that at least sometimes a job you reach out to via Stack Overflow will reply to you via your Stack Overflow.  And if you aren't monitoring that Inbox then you're going to miss the opportunity.&lt;/p&gt;

&lt;h1 id=&quot;cover-letters-really-really-matter&quot;&gt;3. Cover Letters Really, Really Matter&lt;/h1&gt;

&lt;p&gt;While cover letters nowadays aren't the old fashioned paper letter, they really do matter.  A cover letter gives you an additional opportunity to highlight your skills.  The cover letters I focus on most are the ones that at lease appear to be going to an actual human, say &quot;lisa@company.com&quot;.  The ones going to &quot;jobs@company.com&quot;, I worry less about.&lt;/p&gt;

&lt;h1 id=&quot;if-you-do-homework-make-a-screencast-demoing-it&quot;&gt;4. If You Do Homework Make a Screencast Demoing It&lt;/h1&gt;

&lt;p&gt;A lot of the companies now a days require you to do homework as a way of &quot;screening&quot; you for a job.  And while I think that's a bullshite tactic - just read the damn resume people - it is a real thing.  One of the best ways you can highlight your work is to make a screencast demonstrating it.  This not only showcases your ability to communicate but also addresses any issues that people might have with installing / testing your code.&lt;/p&gt;

&lt;h1 id=&quot;interviews-matter-much-much-more-to-you-than-to-the-company&quot;&gt;5. Interviews Matter Much, Much More to You Than to the Company&lt;/h1&gt;

&lt;p&gt;One thing to understand is that any one interview matters much, much more to you than to the company.  If you miss your interview then you are generally unlikely to get a second chance.  This means treat each interview carefully, put it on your calendar, etc.&lt;/p&gt;

&lt;h1 id=&quot;find-out-what-coding-test-they-use&quot;&gt;6. Find Out What Coding Test They Use&lt;/h1&gt;

&lt;p&gt;If the company assesses candidates with coding tests, again &lt;strong&gt;bullshite&lt;/strong&gt; then try and find out what coding test they use before you have to take it.  Coding tests are pretty widely documented and you can bone up specifically on say the &lt;a href=&quot;https://www.google.com/search?q=triplebyte+coding+test&quot;&gt;TripleByte coding test&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;always-always-review-the-call-details-before-the-call&quot;&gt;7. Always, Always Review the Call Details Before the Call&lt;/h1&gt;

&lt;p&gt;This one is obvious but important - always review your notes / the calendar appointment prior to the call.  When you are juggling a lot of interviews, it is easy to forget that job x requires a video call that uses client software y.&lt;/p&gt;

&lt;h1 id=&quot;never-tell-your-salary&quot;&gt;8. Never Tell Your Salary&lt;/h1&gt;

&lt;p&gt;One solid rule of thumb that I always follow is simple - &lt;strong&gt;never tell them your salary&lt;/strong&gt;.    I got this tip from Josh Doody of Fearless Salary Negotiation.  Josh makes the argument that hiring is inherently unfair - the company has all the information and you, the candidate has none.  Due to this information asymmetry, giving them your current salary only increases their advantage over you.  Also keep in mind that it is &lt;a href=&quot;https://www.shrm.org/resourcesandtools/legal-and-compliance/state-and-local-updates/pages/california-salary-history-ban-questions.aspx&quot;&gt;illegal for California companies&lt;/a&gt; to ask you your salary history.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Despite this being illegal in California, when a well known, venture funded California company asked me for my salary history and I cited this law, they said &quot;Well you're remote and in Indiana so we can ask you&quot;.  Needless to say I noped out of that possible job opportunity – yes what they said might have been legally valid but their HR department's ready willingness to play fast and loose with the law told me everything I wanted to know about that company.&lt;/p&gt;

&lt;h1 id=&quot;youll-never-know-why-you-didnt-get-it-let-it-go&quot;&gt;9. You'll Never Know Why You Didn't Get It; Let It Go&lt;/h1&gt;

&lt;p&gt;It has now been 2.5 years since I didn't get Job X (a Senior Software engineering slot at a leading Wedding technology company).  After passing the coding test, the coding project and being flown down for the onsite interview and absolutely nailing the whiteboard exercise, I didn't get it – and I was never told why.  You will never know why you don't get a particular job and you simply need to let it go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is a lot harder than it seems.  I still haven't let it go.&lt;/p&gt;

&lt;h1 id=&quot;dont-ever-stop-sending-out-resumes-not-over-until-an-hr-person-hires-you&quot;&gt;10. Don't Ever Stop Sending Out Resumes; Not Over Until an HR Person Hires You&lt;/h1&gt;

&lt;p&gt;Once you send out say 75 resumes and get maybe 5 interviews, you feel very much like &quot;why am I bothering?&quot;.  That's crap – there are jobs out there but sometimes you have to keep at it.  And at it.  And at it.  Etc.&lt;/p&gt;

&lt;h1 id=&quot;the-older-you-are-the-harder-this-is&quot;&gt;11. The Older You Are, The Harder This Is&lt;/h1&gt;

&lt;p&gt;If you work in technology, you will find that the older you are, the harder it gets to get a technical job.  I'm over 50 and I still write code every single day – and I'm good at it.  But I noticed a very different response from companies after I turned 50.  I didn't take the step of editing my resume so my age wasn't apparent but it is something I would likely do my next time out.&lt;/p&gt;

&lt;h1 id=&quot;the-job-market-has-changed---it-is-about-keeping-bad-people-out-not-getting-good-people-in&quot;&gt;12. The Job Market Has Changed - It Is About Keeping Bad People Out Not Getting Good People In&lt;/h1&gt;

&lt;p&gt;My final observation is that the HR goal is now to keep bad people out. This is a dramatic change from tech hiring in years past; it really has shifted to keeping people out not getting them in. And the corollary to this is that good people fall by the wayside – in droves.&lt;/p&gt;

&lt;p&gt;You need to keep this in mind when you are applying for jobs and really think hard about how you differentiate yourself.&lt;/p&gt;

&lt;h1 id=&quot;job-hound&quot;&gt;13. Job Hound&lt;/h1&gt;

&lt;p&gt;My final tip is a plug for one of my current side projects, &lt;a href=&quot;https://jobhound.io/&quot;&gt;JobHound&lt;/a&gt;.  JobHound makes the process of getting a tech job, well, suck less.  Its free and you can sign up today and use it anytime.&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/09/07/12-practical-tips-for-job-seekers.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/09/07/12-practical-tips-for-job-seekers.html</guid>
        
        <category>jobhound</category>
        
        <category>hiring</category>
        
        <category>job</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Moving to Zsh on OSX in 2019</title>
        <description>&lt;p&gt;Note: Before you follow these instructions, see Postscript at the end.&lt;/p&gt;

&lt;p&gt;I have a long and twisted relationship with &lt;em&gt;nix shells.  My computing history started on 8 bit boxes where the was close to no shell (just Basic) and then transitioned to DOS.  I moved to Unix initially in 88 (Sun 3s) and then went to Linux full time in '99 and OSX finally in 2005.  And despite all that, I still struggle with *nix shells; my prompt is never right, my shell scripting blows chunks, etc.  Sigh.  But the one thing I hate, hate, hate, *censored&lt;/em&gt; hate is that with Bash, my history is always screwed up.  I actually like Bash a bit but I am so damn tired of every Bash session on my machine having a different history and each terminal window racing in a Darwinian competition of &quot;let my history win!&quot;.&lt;/p&gt;

&lt;p&gt;Just to clarify, in a terminal your history is the list of commands that you executed.  And since the types of commands I issue can be frighteningly complex, I want access to all my previous commands - &lt;em&gt;period&lt;/em&gt;.  I'm absolutely binary on this issue, access to all your commands is a good thing.  And commands being lost is a bad thing; a &lt;em&gt;censored&lt;/em&gt;ing bad thing.&lt;/p&gt;

&lt;p&gt;My good friend Sean and regular pairing partner, Sean Kennedy, told me that Z-Shell solves this and, when I had an opportunity, I was ready for it.  Here's the short process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Close everything.&lt;/li&gt;
  &lt;li&gt;Install Mojave if you haven't (yes I'm antiquatedly retro in the speed by which I upgrade operating systems; sorry / not sorry).&lt;/li&gt;
  &lt;li&gt;Install Z Shell with Home Brew&lt;/li&gt;
  &lt;li&gt;Install Oh My Zsh which makes ZShell so much better&lt;/li&gt;
  &lt;li&gt;Execute a change shell command&lt;/li&gt;
  &lt;li&gt;Update Your .zshrc File&lt;/li&gt;
  &lt;li&gt;Log out and then in on your Mac.  Yes this shouldn't be necessary but #$(#$*# Apple.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Steps 3 forward are covered below.&lt;/p&gt;

&lt;h1 id=&quot;install-z-shell-with-home-brew&quot;&gt;3 - Install Z Shell with Home Brew&lt;/h1&gt;

&lt;p&gt;Execute this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install zsh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;install-oh-my-zsh&quot;&gt;4- Install Oh My Zsh&lt;/h1&gt;

&lt;p&gt;Execute this command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;change-your-shell&quot;&gt;5 - Change Your Shell&lt;/h1&gt;

&lt;p&gt;You may find that installing Oh My Zsh changes your shell.  If it doesn't then you need to do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh -s $(which zsh)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s &quot;$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme&quot; &quot;$ZSH_CUSTOM/themes/spaceship.zsh-theme&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;update-your-zshrc&quot;&gt;6 - Update Your .zshrc&lt;/h1&gt;

&lt;p&gt;The file .zshrc is your zsh configuration file.  Edit it as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open this file in an editor.&lt;/li&gt;
  &lt;li&gt;Comment out the robbyrussell theme line by prefixing it with a # character.&lt;/li&gt;
  &lt;li&gt;Add the following lines after the robbyrussell theme line (change the username csphere to your own).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are the changes to make:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Oh My Zsh
export SPACESHIP_GIT_SYMBOL=''
export SPACESHIP_PACKAGE_SYMBOL='package '
export SPACESHIP_NODE_SYMBOL='node '
export SPACESHIP_RUBY_SYMBOL='ruby '
export SPACESHIP_ELIXIR_SYMBOL='elixir '
export SPACESHIP_XCODE_SYMBOL='xcode '
export SPACESHIP_SWIFT_SYMBOL='swift '
export SPACESHIP_GOLANG_SYMBOL='go '
export SPACESHIP_PHP_SYMBOL='php '
export SPACESHIP_RUST_SYMBOL='rust '
export SPACESHIP_DOCKER_SYMBOL='docker '
export SPACESHIP_AWS_SYMBOL='aws '
export ZSH=/Users/csphere/.oh-my-zsh
ZSH_THEME=&quot;spaceship&quot;
ZSH_CUSTOM=~/.zsh-custom/
plugins=(
  git
)
source $ZSH/oh-my-zsh.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-slack-conversation-about-this&quot;&gt;A Slack Conversation About This&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scott.johnson [9:26 AM]
So I just tried to search my history and am I doing it right:

history | grep ssh
  69* ssh 172.31.21.29

that’s not showing the ssh line I got from you to get into jenkins which concerns me about the command line history.  Am I doing something wrong?

So I found it by looking in ~/.zsh_history

Sean Kennedy [9:32 AM]
edit your zsh history
err
edit your zshrc

scott.johnson [9:33 AM]
ok…

Sean Kennedy [9:33 AM]
```HISTFILE=~/.zsh_history
SAVEHIST=100000```
then source it
will probably need to source it in every active terminal

scott.johnson [9:33 AM]
thx man

Sean Kennedy [9:33 AM]
np
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;postscript&quot;&gt;Postscript&lt;/h1&gt;

&lt;p&gt;So I just tried to follow this exactly on a new machine and it both worked and didn’t work.  It worked in the terminal window where I started but it failed in any new window.  I think the issue amounted to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On OSX Mojave after a chsh operation you need to log out and log back in.  My guess is that this one thing fixes everything but just in case, follow the next steps.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I needed (perhaps) a bootstrap shell script called ~/sourcezsh.sh which has in it only three lines:&lt;/p&gt;

    &lt;p&gt;#!/bin/bash
  # adjust as needed
  export ZSH=/Users/sjohnson/.oh-my-zsh
  source $ZSH/oh-my-zsh.sh&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the event that this fails for you then here are the links which helped me sort it out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/362372/how-to-change-the-login-shell-on-mac-os-x-from-bash-to-zsh&quot;&gt;Stack Overflow on bash to ZSH&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/laptop/issues/447&quot;&gt;Thoughtbot Issues on Zsh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/issues/6405&quot;&gt;Robby Russell Issues on Zsh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/30840651/what-does-autoload-do-in-zsh&quot;&gt;AutoLoad and Zsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: I’d have solved this more definitively but my machine is rebuilding a 100gig archive of hate speech for data processing and, well, I simply can’t log in and out right now.  Sigh.&lt;/p&gt;

&lt;p&gt;And I wouldn't have posted this except that it mostly worked and I needed it myself to move forward.  Still I hate like hell that it is ambiguous.  Sorry.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rick.cogley.info/post/use-homebrew-zsh-instead-of-the-osx-default/&quot;&gt;Rick Cogley&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 06 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/shell/2019/09/06/moving-to-zsh-on-osx-in-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/shell/2019/09/06/moving-to-zsh-on-osx-in-2019.html</guid>
        
        <category>shell</category>
        
        <category>zsh</category>
        
        <category>osx</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>What to Do When an Engineer Leaves Your Organization</title>
        <description>&lt;p&gt;No one likes it when an employee leaves the company, let alone an engineer, let alone a senior engineer.  However, the reality is that employees leave companies all the time and the role of the company in this situation is really, really simple: &lt;strong&gt;protect itself&lt;/strong&gt;.  Once an employee leaves, the only rational choice of the company is to assume that the interests of the company and the employee are no longer aligned and to treat the departed employee as a security risk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is mildly AWS specific but there should be enough goodness in here for any organization.&lt;/p&gt;

&lt;p&gt;This is particularly acute when the engineer in question is a senior engineer as senior engineers tend to have &quot;the keys to the kingdom&quot;.  At the role I just left, I was responsible for deployment of our application which means I had access to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passwords&lt;/li&gt;
  &lt;li&gt;SSH Keys&lt;/li&gt;
  &lt;li&gt;API Keys&lt;/li&gt;
  &lt;li&gt;Close to every system we had accounts on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the advice I gave my former company about how to handle this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start by eliminating access to all github or bitbucket repos.  This preserves source code integrity and ensures that post leaving commit isn't snuck into a repo with some nefarious means.  This should be done before the engineer leaves the building.&lt;/li&gt;
  &lt;li&gt;Eliminate VPN Access.  This should be done before the engineer leaves the building.&lt;/li&gt;
  &lt;li&gt;Eliminate Gmail / Google Docs access.&lt;/li&gt;
  &lt;li&gt;Eliminate Slack Access (but bear in mind that this is a loss of institutional memory; &lt;a href=&quot;https://fuzzyblog.io/blog/startup/2019/07/20/employee-transitions-don-t-kill-your-organizational-memory.html&quot;&gt;see here&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;If all your AWS boxes are fronted thru a VPN then you can lessen the priority on this one.  Eliminate SSH access to all public boxes.  If you don't have a VPN then lock down SSH access almost immediately.  This requires going into the /home/username/.ssh/authorized_keys file for EVERY account and eliminating all ssh keys.  Do not simply check only the user's ~/.ssh/ directory because if the departing employee had admin access, he might have attached his public ssh key onto another account.  You should note that this is sometimes done by people as a deliberate, good faith, backdoor in the event of problems.  I've done this myself on problematic boxes.&lt;/li&gt;
  &lt;li&gt;Rotate your AWS credentials.  This should be done almost immediately after the engineer leaves.  Once you rotate them, they need to be refreshed on all boxes in the ~/.aws/credentials file.&lt;/li&gt;
  &lt;li&gt;Eliminate access to third party development tools such as &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;Data Dog&lt;/a&gt;, &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt;, &lt;a href=&quot;https://www.timber.io&quot;&gt;Timber.io&lt;/a&gt; or &lt;a href=&quot;https://www.honeybadger.com/&quot;&gt;HoneyBadger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Eliminate FTP Access.&lt;/li&gt;
  &lt;li&gt;Update every application level secret that is configured on your machine(s).  This means email api keys, twitter api keys, facebook keys and, well, * – any api key that your application uses really needs to be updated.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In closing, I will admit that this is an absolute pain in the arse.  In the application I worked on, we very diligently worked hard to make sure that all application level secrets where never stored under version control, conformed to the &lt;a href=&quot;https://12factor.net/&quot;&gt;12 Factor&lt;/a&gt; mandate but there are still 81 plus application secrets that really should be updated – and that is the work of probably 1 to 2 days at least.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/09/05/what-to-do-when-an-engineer-leaves-your-organization.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/09/05/what-to-do-when-an-engineer-leaves-your-organization.html</guid>
        
        <category>management</category>
        
        <category>hr</category>
        
        <category>startup</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Rails on Windows Resources</title>
        <description>&lt;p&gt;I took the time recently to help a friend get up and running with doing development on Rails under windows.  They were using the WSL i.e. Linux under Windows and it all proceeded mostly pretty smoothly.&lt;/p&gt;

&lt;p&gt;Here were the key resources that they used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gorails.com/setup/windows/10&quot;&gt;Chris Oliver's Go Rails on Windows&lt;/a&gt;. Highly Recommended&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nickjanetakis.com/blog/using-wsl-and-mobaxterm-to-create-a-linux-dev-environment-on-windows&quot;&gt;Nick Janetakis on Using WSL on Windows as a Dev Environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hanselman.com/blog/RubyOnRailsOnWindowsIsNotJustPossibleItsFabulousUsingWSL2AndVSCode.aspx&quot;&gt;Hanselman on Rails on Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/52487644/install-mariadb-in-windows-subsystem-linux-wsl&quot;&gt;Stack Overflow on MySQL on Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.findshank.com/2018/09/15/Install-mysql-on-wsl/&quot;&gt;FindShank on MySQL on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/05/rails-on-windows.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/05/rails-on-windows.html</guid>
        
        <category>rails</category>
        
        <category>windows</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>A Stupid Mac Performance Optimization for 2019</title>
        <description>&lt;p&gt;It is 2019 people, 2019.  And this is the stupidest performance optimization thing that I've seen in years.  I take screenshots quite a bit and I've recently noticed that it was taking a considerable amount of time from the point when I pressed the OSX screenshot key (command + shift + 4 and then enter) to the screenshot becoming available on the Desktop – something like 20 to 30 seconds.&lt;/p&gt;

&lt;p&gt;What I did this morning was create a single folder on the desktop called &quot;old&quot; and then I moved almost everything into &quot;old&quot;.  Then I took a screenshot and it appeared in almost real time.&lt;/p&gt;

&lt;p&gt;Now before you say &quot;Oh it is just Scott – he has a ton of things on his desktop&quot; – there were only 654 files on my Desktop.  And, sure, 654 sounds like a lot but this is 2019 and computers are &lt;strong&gt;FAST&lt;/strong&gt; so &lt;em&gt;WHAT THE HELL APPLE?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now I've seen this type of filesystem slowdown before but usually it is at the N thousands of files per folder (remember &quot;Desktop&quot; is just a folder):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/466521/how-many-files-can-i-put-in-a-directory&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://be-n.com/spw/you-can-list-a-million-files-in-a-directory-but-not-with-ls.html&quot;&gt;8 Million Files Per Directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And yes I am running Mojave and this is the new &lt;a href=&quot;https://en.wikipedia.org/wiki/Apple_File_System&quot;&gt;Apple File System&lt;/a&gt; on a 2015 Mac Pro with 16 gigs of ram.  There is no excuse for this kind of slow down.  Sigh.&lt;/p&gt;

&lt;p&gt;Oh yes and the Downloads folder gets faster when you move everything into a folder so this seems to be a generalized Apple File System issue.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mac/2019/09/05/a-stupid-mac-performance-optimization-for-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mac/2019/09/05/a-stupid-mac-performance-optimization-for-2019.html</guid>
        
        <category>mac</category>
        
        <category>osx</category>
        
        
        <category>mac</category>
        
      </item>
    
      <item>
        <title>17 Years of Blogging</title>
        <description>&lt;p&gt;So I was looking up information on using the wc or Word Count command in *nix on &lt;a href=&quot;https://askubuntu.com/questions/351326/how-do-i-list-word-count-in-multiple-files&quot;&gt;Stack Overflow&lt;/a&gt; and it made me wonder how many words I've written in 17 years of on and off blogging.  A quick command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wc -w _posts/*

wc: _posts/_site: read: Is a directory
  543089 total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is one of those numbers which seems staggering but I recently saw that &lt;a href=&quot;https://www.russellbeattie.com/blog/&quot;&gt;Russell Beattie&lt;/a&gt; claimed over a million words over 15 years.  So it seems possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If I look at the number of posts using wc -l _posts/20*.md, I get a number that seems way, way too high so I'm not going to talk about number of posts at all.&lt;/p&gt;

&lt;p&gt;A bit of math:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 543089 / 17;
+-------------+
| 543089 / 17 |
+-------------+
|  31946.4118 |
+-------------+    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So that means 32,000 words per year.  If we assume 250 words per page then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 31946.4118 / 250;
+------------------+
| 31946.4118 / 250 |
+------------------+
|     127.78564720 |
+------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or about &lt;a href=&quot;https://en.wikipedia.org/wiki/Novella&quot;&gt;one novella&lt;/a&gt; a year.&lt;/p&gt;

&lt;p&gt;Now I took a pretty serious hiatus from blogging for about 8 years (2006 to 2014) in my post Feedster seclusion so that makes the years actually 17 - 8 or 9 and this changes the math a bit:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 543089 / 9;
+------------+
| 543089 / 9 |
+------------+
| 60343.2222 |
+------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; select 60343.2222 / 250;
 +------------------+
 | 60343.2222 / 250 |
 +------------------+
 |     241.37288880 |
 +------------------+ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we assume that there are 250 writing days in a year (i.e the weekdays) then we can look at words per day:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 543089 / (9*250); 
+------------------+
| 543089 / (9*250) |
+------------------+
|         241.3729 |
+------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's interesting – just about a page per day.  I am trying hard to build a writing habit these days and tracking my metrics much, much more closely.  Onward!&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/blogging/2019/09/05/17-years-of-blogging.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/blogging/2019/09/05/17-years-of-blogging.html</guid>
        
        <category>blogging</category>
        
        <category>linux</category>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Interesting Data Science Utilities</title>
        <description>&lt;p&gt;Hacker News had an &lt;a href=&quot;https://news.ycombinator.com/item?id=20848581&quot;&gt;excellent article on tools for large scale CSV / TSV / etc utilities&lt;/a&gt;.  If you do this type of work a lot / look at sizable amounts of raw data, I'd be strongly surprised if you didn't find a new tool here.  The things I'm looking at are visidata and octosql and gron.&lt;/p&gt;

&lt;p&gt;Here are some of the interesting takeaways on the tool front:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jmespath.org/&quot;&gt;http://jmespath.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/xsv&quot;&gt;https://github.com/BurntSushi/xsv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dinedal/textql&quot;&gt;https://github.com/dinedal/textql&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/n3mo/data-science&quot;&gt;https://github.com/n3mo/data-science&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.redox-os.org/redox-os/parallel&quot;&gt;https://gitlab.redox-os.org/redox-os/parallel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/willghatch/racket-rash&quot;&gt;https://github.com/willghatch/racket-rash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://visidata.org/&quot;&gt;https://visidata.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tomnomnom/gron&quot;&gt;https://github.com/tomnomnom/gron&lt;/a&gt; - JSON grep&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dflemstr/rq&quot;&gt;https://github.com/dflemstr/rq&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/datamash/]&quot;&gt;https://www.gnu.org/software/datamash/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnkerl/miller&quot;&gt;https://github.com/johnkerl/miller&lt;/a&gt; (written in D)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mechatroner/RBQL&quot;&gt;https://github.com/mechatroner/RBQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/shellbound/jwalk/&quot;&gt;https://github.com/shellbound/jwalk/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.rdocumentation.org/packages/plyr/&quot;&gt;https://www.rdocumentation.org/packages/plyr/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/crush-tools&quot;&gt;https://github.com/google/crush-tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/python-mario/mario&quot;&gt;https://github.com/python-mario/mario&lt;/a&gt; (python for manipulation)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cube2222/octosql&quot;&gt;https://github.com/cube2222/octosql/&lt;/a&gt; (sql for manipulation)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dkogan/vnlog&quot;&gt;https://github.com/dkogan/vnlog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://csvkit.readthedocs.io/&quot;&gt;https://csvkit.readthedocs.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eBay/tsv-utils-dlang]&quot;&gt;https://github.com/eBay/tsv-utils-dlang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.redox-os.org/redox-os/parallel&quot;&gt;http://harelba.github.io/q/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BatchLabs/charlatan&quot;&gt;https://github.com/BatchLabs/charlatan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dinedal/textql&quot;&gt;https://github.com/dinedal/textql&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/xsv&quot;&gt;https://github.com/BurntSushi/xsv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dbohdan/sqawk&quot;&gt;https://github.com/dbohdan/sqawk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/benbernard/RecordStream&quot;&gt;https://github.com/benbernard/RecordStream&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/noyesno/awka]&quot;&gt;https://github.com/noyesno/awka&lt;/a&gt; (awk)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 03 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/data_science/2019/09/03/interesting-data-science-utilities.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/data_science/2019/09/03/interesting-data-science-utilities.html</guid>
        
        <category>data_science</category>
        
        <category>machine_learning</category>
        
        
        <category>data_science</category>
        
      </item>
    
      <item>
        <title>Great Chrome Extensions - Tab Switcher and The Great Suspender</title>
        <description>&lt;p&gt;A buddy just turned me onto &lt;a href=&quot;https://chrome.google.com/webstore/detail/tab-switcher/gcilookdakgpccpbcjgnpaecofklimck?hl=en&quot;&gt;Tab Switcher&lt;/a&gt;, a tool that gives the ability to SEARCH THE TITLES OF YOUR TABS !!!!  How the hell doesn't this exist in Chrome already?&lt;/p&gt;

&lt;p&gt;Just install it and then press:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OSX: Control + Shift + K&lt;/li&gt;
  &lt;li&gt;Windows: Control + Shift + K&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you will get a window like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/tab_switcher.png&quot; alt=&quot;Tab Switcher&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And beyond Tab Switcher, &lt;a href=&quot;https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg&quot;&gt;The Great Suspender&lt;/a&gt; is absolutely fantastic.  The Great Suspender turns off open tabs that are taking up too much memory – it is like putting Chrome on a damn diet and it is wonderful.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/chrome/2019/09/03/great-chrome-extensions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/chrome/2019/09/03/great-chrome-extensions.html</guid>
        
        <category>chrome</category>
        
        <category>chrome_extension</category>
        
        
        <category>chrome</category>
        
      </item>
    
      <item>
        <title>Generating a Good Password from the Command Line</title>
        <description>&lt;p&gt;Note: There is a more secure technique here that is more poorly written up.&lt;/p&gt;

&lt;p&gt;I saw my pairing partner do this about six months ago and the elegance of it just struck me.  Here's the command line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date +%s | sha256sum | base64 | head -c 8 ; echo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's break that down:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date +%s
1567406528
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The date + %s returns what I suspect is a unix epoch i.e. the number of seconds since a date in the 1970s.&lt;/p&gt;

&lt;p&gt;The sha256sum takes that epoch and then returns something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4d00bbff5a359a8619f48ade07860704b63a0287d80097dd041c6e538fa3ddb3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The base64 then takes that output and returns:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ODBmNGIwOGZiNzc2NjU5NThlMTk2ZjY3MGFmOWYxNjQ3NWViZWNkNjBjNDg5ODUyZDgwMDMzZmM2NTkzNjE5ZCAgLQo=
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The head -c 8 then takes 8 characters out of this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;YzMyMGQ4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reason that the final output YzMyMGQ4 doesn't appear in the base64 example is that I keep re-running this command pipeline and date %s keeps changing since it is tied to microseconds.  And, yes, it took me a few moments to realize that.  &lt;em&gt;chuckle&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thank you Sean Kennedy for giving me another tool in the toolbox.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/09/02/generating-a-good-password-from-the-command-line.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/09/02/generating-a-good-password-from-the-command-line.html</guid>
        
        <category>linux</category>
        
        <category>password</category>
        
        <category>security</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Testing A Health Check Endpoint with Curl</title>
        <description>&lt;p&gt;Given the move to auto scaling architectures front ended by load balancers, it is increasingly important to build into your application what is called a &quot;health check&quot;.  This is nothing more than a known url that some external service can monitor to ensure that your application is &quot;up&quot;.  A health check does nothing more than return an HTTP 200 (and sometimes it returns a JSON representation).  Here's a simple Rails controller that I use for health checks:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class HealthController &amp;lt; ApplicationController
  def index
    results = {:status =&amp;gt; &quot;ok&quot;}
    respond_to do |format|
      format.html { render :status =&amp;gt; 200, :html =&amp;gt; &quot;ok&quot; and return }
      format.json { render :status =&amp;gt; 200, :json =&amp;gt; results.to_json and return }
    end
  end
  
  # additional site monitoring functionality normally goes here
  
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's how to test this with curl and get the headers you'd want to see:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -s -I https://foo.bar.something.com/health_check        
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The options have the following meaning:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-I, –head          Show document info only&lt;/li&gt;
  &lt;li&gt;-s, –silent        Silent mode (don't output anything)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The -s is silencing the normal curl output of what it fetched from the url.&lt;/p&gt;

&lt;p&gt;What you should see is something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/2 200
date: Thu, 29 Aug 2019 19:08:18 GMT
content-type: text/html
server: nginx/1.10.3 (Ubuntu)
x-frame-options: SAMEORIGIN
x-xss-protection: 1; mode=block
x-content-type-options: nosniff
set-cookie: _mkra_ctxt=3b46df998ac73a6cb44bbb8dc2a09918--200; path=/; max-age=5; HttpOnly; secure
cache-control: no-cache
x-request-id: 7158be3a-7990-4549-b780-fca5757069d3
x-runtime: 0.208121
strict-transport-security: max-age=15552000; includeSubDomains
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Here are some great curl references:
* &lt;a href=&quot;https://jvns.ca/blog/2019/08/27/curl-exercises/&quot;&gt;JVNS.CA - I can't recommend her work strongly enough&lt;/a&gt;
* &lt;a href=&quot;https://unix.stackexchange.com/questions/84814/health-check-of-web-page-using-curl&quot;&gt;Stack Exchange&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/curl/2019/09/01/testing-a-health-check-endpoint-with-curl.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/curl/2019/09/01/testing-a-health-check-endpoint-with-curl.html</guid>
        
        <category>curl</category>
        
        <category>serverless</category>
        
        
        <category>curl</category>
        
      </item>
    
      <item>
        <title>Software Engineering Management - Rules for Successful Employee Transitions</title>
        <description>&lt;p&gt;No matter how much you don't want them to, the simple fact is that employees leave your organization.  Here are some rules that I have found tend to make employee transitions more successful:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Don't try and get them to stay&lt;/li&gt;
  &lt;li&gt;Get them to be a consultant&lt;/li&gt;
  &lt;li&gt;Get them to write stuff down&lt;/li&gt;
  &lt;li&gt;Get them to make screencasts of their development / debugging process&lt;/li&gt;
  &lt;li&gt;Have them pair program with someone they don't normally do&lt;/li&gt;
  &lt;li&gt;Get their contact info&lt;/li&gt;
  &lt;li&gt;Stay in touch&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;dont-try-and-save-them&quot;&gt;Don't Try and Save Them&lt;/h1&gt;

&lt;p&gt;As a manager, when someone tells you they are about to leave, if they have been a good employee then your natural reaction is to try and save it, to convince them to stay.  Don't, Just &lt;strong&gt;don't&lt;/strong&gt;.  What 30 plus years of hiring technical people has shown me is that the decision to leave an organization is &lt;strong&gt;terribly hard&lt;/strong&gt; for technical professionals.  A big part of the reason for this is that if the technical person is any good, they tend to bond to their code base – even if it is a bad code base.  We don't make this decision lightly and once it is made, well, it tends to be done.  Of all the people I've tried to save, I think I succeeded once – and they left within the next six months anyway.&lt;/p&gt;

&lt;p&gt;Here is a good &lt;a href=&quot;https://hbr.org/2019/01/if-youre-about-to-take-a-new-job-should-you-consider-your-bosss-counteroffer&quot;&gt;Harvard Business Review article on Considering Your Boss's Counteroffer&lt;/a&gt; that talks about whether or not to try and convince people to stay.  Thanks to reader &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;Lisa Meece of Starbase Indy&lt;/a&gt; fame for the contribution.&lt;/p&gt;

&lt;h1 id=&quot;consulting&quot;&gt;Consulting&lt;/h1&gt;

&lt;p&gt;Whenever I have a decent technical person leave my team, I always try to negotiate a consulting arrangement with them, right down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are you willing to consult for us?&lt;/li&gt;
  &lt;li&gt;How much time do you have for consulting?&lt;/li&gt;
  &lt;li&gt;What hourly rate will you charge me?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Employee transitions are a natural consequence of a free market economy and there should never be &lt;strong&gt;bad feelings&lt;/strong&gt; – these things simply happen.  If the person who is leaving is truly talented then why wouldn't you want them to consult for you?  This person is already:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trained&lt;/li&gt;
  &lt;li&gt;Trusted&lt;/li&gt;
  &lt;li&gt;Knowledgeable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The peculiar nature of software engineering is that certain individuals end up being domain experts and it can be hard to get a new person up to speed in their areas of expertise.  Having a consulting arrangement defined before someone leaves is a great way around this.&lt;/p&gt;

&lt;h1 id=&quot;write-stuff-down&quot;&gt;Write Stuff Down&lt;/h1&gt;

&lt;p&gt;We all know that engineers are generally horrible at adding comments / writing documentation.  Despite that, you want to allocate time for any departing engineer to write documentation / comment code.  My personal suggestion would be to run that engineer's code thru a complexity analyzer like Flay (this is a Ruby tool; look for anything that measures cyclomatic complexity for your particular language) and have them document the most complex bits.&lt;/p&gt;

&lt;h1 id=&quot;screencasts&quot;&gt;Screencasts&lt;/h1&gt;

&lt;p&gt;Writing documentation is a lengthy, time consuming process and most people leave on a two week notice period.  An alternative to documentation is to get them to record screen casts.  This can be done by simply starting a screen recorder software tool while they narrate whatever they are doing.  I personally have done this for a multiple day period and while the screencasts weren't great quality, they were adequate for internal use.&lt;/p&gt;

&lt;p&gt;Screencasts of their debugging / development processes, in particular, are very useful.&lt;/p&gt;

&lt;h1 id=&quot;pairing&quot;&gt;Pairing&lt;/h1&gt;

&lt;p&gt;As anyone who reads my stuff knows, I am a huge believer in pair programming.  A very useful training tool for people who are departing is to require them to pair program with someone who isn't their normal pairing partner.  This generally forces learning to occur.&lt;/p&gt;

&lt;h1 id=&quot;contact-info&quot;&gt;Contact Info&lt;/h1&gt;

&lt;p&gt;Even tho you might think that you have someone's current contact info, you always want to verify this.&lt;/p&gt;

&lt;h1 id=&quot;stay-in-touch&quot;&gt;Stay in Touch&lt;/h1&gt;

&lt;p&gt;People in high tech often have long careers.  I've had people that worked for me at one job, left, worked two or three places and then happened to work for me again – when I was actually at a new job.  Staying in touch with talented individuals is a very, very positive thing and highly recommended.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/09/01/software-engineering-management-rules-for-successful-employee-transitions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/09/01/software-engineering-management-rules-for-successful-employee-transitions.html</guid>
        
        <category>software_engineering</category>
        
        <category>startup</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Remote Work 02 - Use Video Conferencing</title>
        <description>&lt;p&gt;This is the second in an N part series of short, succinct articles about Remote Work that I'll be writing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/category.html#remote-work&quot;&gt;All Remote Articles&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;faces-matter-so-use-video-conferencing&quot;&gt;Faces Matter So Use Video Conferencing&lt;/h2&gt;

&lt;p&gt;I know that the idea that your co-worker is a fellow human is &lt;strong&gt;obvious&lt;/strong&gt; but I actually think that it is fairly important.  When you are a remote worker, so much of what you do is relating to people through labels, an email address, an instant message handle or a username.  These text based labels are inherently dehumanizing and that makes it much, much easier to engage in bad types of online behavior – trolling, flaming, etc.&lt;/p&gt;

&lt;p&gt;The simplest way to humanize an online interaction is to simply see a real, live face – not a stylized avatar but an actual face and that's why I strongly recommend video conferencing as a key communications tool for remote work. Not only will video conferencing increase the overall &quot;humanity&quot; of your worker to work interaction but it will also clue you in to people's overall mood – because faces tend to inherently show emotions.  And if you are a manager of remote workers, knowing if they are happy on an overall basis (anyone can have a bad day) is a key management tool because, generally, happy workers are better workers.&lt;/p&gt;

&lt;h2 id=&quot;my-remote-work-background&quot;&gt;My Remote Work Background&lt;/h2&gt;

&lt;p&gt;In 1996 I started my first experience with remote work when I ran an engineering team with these characteristics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;25 people&lt;/li&gt;
  &lt;li&gt;5 locations (Massachusetts, Albany, Ohio, Colorado and Leiscester, UK)&lt;/li&gt;
  &lt;li&gt;3 time zones&lt;/li&gt;
  &lt;li&gt;A lead engineer who was remote&lt;/li&gt;
  &lt;li&gt;2 core engineering team members who came into the office so infrequently that they were officially characterized as Remote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And ever since then, I have either been remote myself or managed remote workers or both.  When I was lead developer of AppData, we took that to over $3.1 million in aggregate revenue with a fully remote development team.&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-02-use-video-conferencing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-02-use-video-conferencing.html</guid>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Remote Work 01 - Write It Down</title>
        <description>&lt;p&gt;This is the first in an N part series of short, succinct articles about Remote Work that I'll be writing.  I'm taking a new remote gig and I'm finding that codifying my thoughts on remote work is useful both for me and for people that I will likely end up managing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/category.html#remote-work&quot;&gt;All Remote Articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What I have found is that successful remote work cultures are ones of &lt;strong&gt;documentation&lt;/strong&gt; or as I would say &quot;Write It Down&quot;.  In a classical work environment, you can always pop your head over the cubicle and ask the person next door.  In a remote work environment, not only is that not an option but you are often working asynchronously from your co-workers so they may not even be awake when you need something.&lt;/p&gt;

&lt;p&gt;I don't personally care whether the writing mechanism is a blog, a wiki, a shared Google doc, or a paid Slack environment where messages are never deleted – it simply needs to be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Always Available&lt;/li&gt;
  &lt;li&gt;Persistent&lt;/li&gt;
  &lt;li&gt;Searchable&lt;/li&gt;
  &lt;li&gt;Linkable&lt;/li&gt;
  &lt;li&gt;Easy to Write In&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll write more about specific writing tools and how they function in a remote work environment over the next N articles.&lt;/p&gt;

&lt;p&gt;If you don't build a culture of documentation for your remote work environment, what you are going to find are subtle impedances to successful work.  People will constantly be scrambling for key information and there will be resulting task slippage.&lt;/p&gt;

&lt;h2 id=&quot;my-remote-work-background&quot;&gt;My Remote Work Background&lt;/h2&gt;

&lt;p&gt;In 1996 I started my first experience with remote work when I ran an engineering team with these characteristics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;25 people&lt;/li&gt;
  &lt;li&gt;5 locations (Massachusetts, Albany, Ohio, Colorado and Leiscester, UK)&lt;/li&gt;
  &lt;li&gt;3 time zones&lt;/li&gt;
  &lt;li&gt;A lead engineer who was remote&lt;/li&gt;
  &lt;li&gt;2 core engineering team members who came into the office so infrequently that they were officially characterized as Remote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And ever since then, I have either been remote myself or managed remote workers or both.  When I was lead developer of AppData, we took that to over $3.1 million in aggregate revenue with a fully remote development team.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-01-write-it-down.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-01-write-it-down.html</guid>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Color Coding Your Gmail with Labels</title>
        <description>&lt;p&gt;Back in 2001 or 2002, I took a stab at making client side software once again with an Outlook Add In called Inbox Buddy. Developed by myself and my co-founder, Inbox Buddy acted to dynamically organize your Outlook Inbox.  The single best feature in Inbox Buddy was that it color coded your email based on observing your messaging patterns as well as a content analysis and a small training step.  It is now almost 20 years later and I am still missing Inbox Buddy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Inbox Buddy failed not because it was a bad product but because Outlook's plugin architecture at the time, well, sucked monkey chunks.  Also I made the foolish decision to target Outlook 2000 instead of subsequent releases which had a better approach to plugins. And then I started a &lt;a href=&quot;https://fuzzyblog.io/blog/category.html#feedster&quot;&gt;blog search engine&lt;/a&gt; and got really, really busy … Ah, well, live and learn.  Sigh.&lt;/p&gt;

&lt;p&gt;Color coding is an incredibly powerful tool for organizing information and one so damn simple that everyone misses it.  Recently I thought to google for &quot;Color Code&quot; Gmail and, surprise, surprise, this can be done &lt;a href=&quot;https://www.zdnet.com/article/gmail-quick-tip-use-color-coded-labels-to-add-organization-to-your-inbox/&quot;&gt;albeit manually&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found the Zdnet technique either confusing or not entirely accurate with the current version of Gmail so I wrote up my own description.&lt;/p&gt;

&lt;p&gt;The way that this works is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You create a label that represents the context of the mail you want to color (I have two, personal and ADL for my new gig at the ADL).&lt;/li&gt;
  &lt;li&gt;You set the color of the label.&lt;/li&gt;
  &lt;li&gt;You create a filter or filters that apply that label.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;step-1-create-a-label&quot;&gt;Step 1: Create a Label&lt;/h1&gt;

&lt;p&gt;Open Gmail and in the sidebar of labels, example the More link at the bottom of the sidebar.  Scroll all the way down and select the Create New Label option.&lt;/p&gt;

&lt;h1 id=&quot;step-2-color-the-label&quot;&gt;Step 2: Color the Label&lt;/h1&gt;

&lt;p&gt;Scroll to the label you just created and select the 3 vertical dots option to get a context menu about the label.  Select the Label Color option and then choose a color for the label.&lt;/p&gt;

&lt;h1 id=&quot;step-3-create-a-filter&quot;&gt;Step 3: Create a Filter&lt;/h1&gt;

&lt;p&gt;At the right hand top of Gmail there is a gear icon.  Select the Settings option from the menu.  From the Gmail Settings window, select Filters and Blocked Addresses option.  Scroll to the bottom and click Create a new filter.  Enter an email address or domain name in the From field (or write the filter however you like) and select Create filter.  On the second screen, select Apply the label and choose the label you just created.  You might also want to select the Never send it to spam option.  Finally you should generally always select the Apply to existing conversations option so the label is applied to all messages in your inbox.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/gmail/2019/09/01/color-coding-your-gmail-with-labels.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/gmail/2019/09/01/color-coding-your-gmail-with-labels.html</guid>
        
        <category>gmail</category>
        
        <category>email</category>
        
        <category>inbox_buddy</category>
        
        
        <category>gmail</category>
        
      </item>
    
      <item>
        <title>A Python and Data Science Tooling Vocabulary for a Rubyist</title>
        <description>&lt;p&gt;A Python and Data Science Tooling Vocabulary for a Rubyist&lt;/p&gt;

&lt;p&gt;I am unabashedly a Ruby guy.  I've now spent 13 years immersed in Ruby on a daily basis.  But a new consulting gig has me delving into Python both as a light implementer and as a likely remote manager of some Python folk in a Data Science / Machine Learning context.&lt;/p&gt;

&lt;p&gt;I wrote this as a regularly updated document so I have a place to stick new vocabulary items I learn.&lt;/p&gt;

&lt;p&gt;A lot of this is the names of libraries and tools because learning any language isn't just the language, it is the constellation of stuff that make it useful for a given task.  The focus here is clearly on scientific computing and machine learning.&lt;/p&gt;

&lt;p&gt;You should also likely see &lt;a href=&quot;https://www.pythonforbeginners.com/cheatsheet/python-glossary&quot;&gt;Python Glossary&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;a&quot;&gt;A&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Anaconda&lt;/strong&gt; - A packaged distribution of Python and R aimed at Data Science.  &lt;a href=&quot;https://www.anaconda.com/distribution/
#download-section&quot;&gt;More…&lt;/a&gt;.  Includes multiple bits of tooling such as Jupyter.
&lt;strong&gt;* Anaconda Cloud&lt;/strong&gt; - A platform for sharing notebooks and packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;b&quot;&gt;B&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Bert - Bert or Bidirectional Encoder Representation from Transformers is a state of the art (2018) language model for natural language processing (NLP).  Bert is based on a Google paper which shows that a language model which is bidirectionally trained can have a deeper sense of language context and flow than single-direction language models. &lt;a href=&quot;https://towardsdatascience.com/bert-explained-state-of-the-art-language-model-for-nlp-f8b21a9b6270&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bokeh&lt;/strong&gt; - Bokeh is an interactive visualization library that targets modern web browsers for presentation.  &lt;a href=&quot;https://bokeh.pydata.org/en/latest/index.html&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;c&quot;&gt;C&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Conda&lt;/strong&gt; - an open source package manager for &quot;any language&quot; but originally for Python.  &lt;a href=&quot;https://conda.io/en/latest/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;d&quot;&gt;D&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dask&lt;/strong&gt; - Dask is a flexible library for parallel computing in Python. Dask is composed of two parts: … “Big Data” collections like parallel arrays, dataframes, and lists that extend common interfaces like NumPy, Pandas, or Python iterators to larger-than-memory or distributed environments.  &lt;a href=&quot;https://dask.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DataShader&lt;/strong&gt; - Datashader is a graphics pipeline system for creating meaningful representations of large datasets quickly and flexibly. Datashader breaks the creation of images into a series of explicit steps that allow computations to be done on intermediate representations.  &lt;a href=&quot;http://datashader.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;e&quot;&gt;E&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Egg&lt;/strong&gt; - a Python component.  Think Ruby gem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;f&quot;&gt;F&lt;/h1&gt;

&lt;h1 id=&quot;g&quot;&gt;G&lt;/h1&gt;

&lt;h1 id=&quot;h&quot;&gt;H&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;**H20.ai **- H2O.ai is the creator of the leading open source machine learning and artificial intelligence platform trusted by hundreds of thousands of data scientists.  &lt;a href=&quot;https://www.h2o.ai/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Holoviews&lt;/strong&gt; - HoloViews is an open-source Python library designed to make data analysis and visualization seamless and simple.  &lt;a href=&quot;http://holoviews.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;i&quot;&gt;I&lt;/h1&gt;

&lt;h1 id=&quot;j&quot;&gt;J&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Jupyter Notebook&lt;/strong&gt; - The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more.  python3 -m pip install jupyter and then run it with: jupyter notebook&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;k&quot;&gt;K&lt;/h1&gt;

&lt;h1 id=&quot;l&quot;&gt;L&lt;/h1&gt;

&lt;h1 id=&quot;m&quot;&gt;M&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;MatPlotLib&lt;/strong&gt; - Matplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms. &lt;a href=&quot;https://matplotlib.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;n&quot;&gt;N&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Numba&lt;/strong&gt; - Numba is an open-source JIT compiler that translates a subset of Python and NumPy into fast machine code using LLVM.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Numba&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;NumPy - A standard numerical library for Python.  NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays.  &lt;a href=&quot;https://en.wikipedia.org/wiki/NumPy&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;o&quot;&gt;O&lt;/h1&gt;

&lt;h1 id=&quot;p&quot;&gt;P&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Pandas&lt;/strong&gt; - pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series.  &lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pip&lt;/strong&gt; - A Python package installer.  Example for python 3: python3 -m pip install –upgrade pip&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PyCharm&lt;/strong&gt; - an ide for Python from the JetBrains folk.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pythonic&lt;/strong&gt; - something that is done in a very Python like way.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PyTorch&lt;/strong&gt; - PyTorch is an open source machine learning library based on the Torch library, used for applications such as computer vision and natural language processing. It is primarily developed by Facebook's artificial intelligence research group. It is free and open-source software released under the Modified BSD license. &lt;a href=&quot;https://en.wikipedia.org/wiki/PyTorch&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;q&quot;&gt;Q&lt;/h1&gt;

&lt;h1 id=&quot;r&quot;&gt;R&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Repl&lt;/strong&gt; - This is short for Read Evaluate Print Loop and it is the result of what you get when you type python at your command prompt.  A repl gives you a place to type Python code you want executed. Type quit() to exit the Python repl – the () are required as quit is a method not a statement.  Think irb or &quot;rails c&quot;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Roberta&lt;/strong&gt; - A robustly optimized method for pretraining natural language processing (NLP) systems that improves on Bidirectional Encoder Representations from Transformers, or BERT, the self-supervised method released by Google in 2018. &lt;a href=&quot;https://ai.facebook.com/blog/roberta-an-optimized-method-for-pretraining-self-supervised-nlp-systems/&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;s&quot;&gt;S&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Scikit-learn&lt;/strong&gt; (formerly scikits.learn) is a free software machine learning library for the Python programming language.   It features various classification, regression and clustering algorithms including support vector machines, random forests, gradient boosting, k-means and DBSCAN, and is designed to interoperate with the Python numerical and scientific libraries NumPy and SciPy.&lt;a href=&quot;https://scikit-learn.org/stable/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SciPy&lt;/strong&gt; - SciPy is a free and open-source Python library used for scientific computing and technical computing. &lt;a href=&quot;https://en.wikipedia.org/wiki/SciPy&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;t&quot;&gt;T&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt; - TensorFlow is a free and open-source software library for dataflow and differentiable programming across a range of tasks. It is a symbolic math library, and is also used for machine learning applications such as neural networks.[5] It is used for both research and production at Google.  &lt;a href=&quot;https://en.wikipedia.org/wiki/TensorFlow&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Torch&lt;/strong&gt; - Torch is an open-source machine learning library, a scientific computing framework, and a script language based on the Lua programming language.[3] It provides a wide range of algorithms for deep learning, and uses the scripting language LuaJIT, and an underlying C implementation. As of 2018, Torch is no longer in active development.[4] However, PyTorch is actively developed as of August 2019. &lt;a href=&quot;https://en.wikipedia.org/wiki/Torch_(machine_learning)&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;u&quot;&gt;U&lt;/h1&gt;

&lt;h1 id=&quot;v&quot;&gt;V&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;VirtualEnv&lt;/strong&gt; - a virtual environment manager allowing you to have more than one Python on a machine.  Think RbEnv or RVM.  &lt;a href=&quot;https://www.geeksforgeeks.org/python-virtual-environment/&quot;&gt;More…&lt;/a&gt; pip install virtualenv&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;w&quot;&gt;W&lt;/h1&gt;

&lt;h1 id=&quot;x&quot;&gt;X&lt;/h1&gt;

&lt;h1 id=&quot;y&quot;&gt;Y&lt;/h1&gt;

&lt;h1 id=&quot;z&quot;&gt;Z&lt;/h1&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/01/a-python-and-data-science-tooling-vocabulary-for-a-rubyist.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/01/a-python-and-data-science-tooling-vocabulary-for-a-rubyist.html</guid>
        
        <category>python</category>
        
        <category>data_science</category>
        
        <category>machine_learning</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Fixing Ruby readline.bundle Image Not Found</title>
        <description>&lt;p&gt;I've seen a lot of ruby weirdness over the years but this one was new to me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) Metric#color reps should be green when the goal is increase_is_better = true and the change is +
   Failure/Error: byebug

   LoadError:
     dlopen(/Users/sjohnson/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/x86_64-darwin16/readline.bundle, 9): Library not loaded: /usr/local/opt/readline/lib/libreadline.7.dylib
       Referenced from: /Users/sjohnson/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/x86_64-darwin16/readline.bundle
       Reason: image not found - /Users/sjohnson/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/x86_64-darwin16/readline.bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The solution turned out to be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s /usr/local/opt/readline/lib/libreadline.8.0.dylib /usr/local/opt/readline/lib/libreadline.7.dylib
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Thank you to &lt;a href=&quot;https://gist.github.com/zulhfreelancer/47efc39584cb9f006da43c41c014e03a&quot;&gt;Zuhlfreelancer&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/08/30/fixing-ruby-readline-bundle-image-not-found.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/08/30/fixing-ruby-readline-bundle-image-not-found.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Your First Tech Job</title>
        <description>&lt;p&gt;This blog post is what I call micro-focused.  A friend of a friend emailed me about his concerns about breaking into the tech field and rather than solve his issues on a 1:1 basis, I'm writing it here because I suspect this is useful to more people than just him (or her).&lt;/p&gt;

&lt;p&gt;Let's start with his email:&lt;/p&gt;

&lt;p&gt;Hope everything is going well. Have gotten real discouraged on the app project I had told you about. The initial meeting has been postponed twice, nothing on the books now either. The person I have been talking to about it just gives me the impression those in charge are real disorganized and this isn't exactly a high priority in their busy lives. So I am thinking just letting them come to me if they want but otherwise taking a passive approach. With that being said, I am taking 9 credit hours, all 400 level CS classes, this semester. The dream is to find some part time work in the IT field, but am trying to be cautious in how much I take on, have definitely over burdened myself in the past and it was horrible. So that's where I am at now. I was hoping you could give my some guidance on the whole process. I have been lucky and able to find work generically and by word of mouth, but am absolutely horrible with the normalized resume and application process. Not sure even where to start asking questions but I image you could provide some great guidance. As always I know you are a busy guy, but appreciate any time and help ya can give. Eager to hear back from ya!&lt;/p&gt;

&lt;p&gt;So let's begin with an understanding of the goal in high tech hiring:&lt;/p&gt;

&lt;p&gt;The goal is to keep bad people out.  This is a dramatic change from tech hiring in years past; it really has shifted to keeping people out not getting them in.  And the corollary to this is that good people fall by the wayside – in droves.&lt;/p&gt;

&lt;p&gt;That's the goal of high tech hiring circa 2019.  I don't care what any HR department tells you, the goal is simply risk avoidance.  No one wants to take a chance on a bad decision because bad people in an engineering context leave a terrifying legacy (sometime ask me in person about def run and I'll tell you a terrifying tale about someone I hired once for 1/2 day and how that broke deploy on our code base for 3 damn days; sigh).&lt;/p&gt;

&lt;p&gt;What you have to keep in mind is that if no one wants to take a chance then you really need to stand out, particularly to get past the f*cking wall that is automated resume scanners, keyword matchers, etc.  Getting a tech job these days is hard for anyone – hell the second to last time I was in the market for a job, I had to write &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Job Hound&lt;/a&gt; just to manage the damn process; sigh.&lt;/p&gt;

&lt;p&gt;Now, all that said, there are definitely things that you can do to stand out and here's what I would recommend to this individual:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Know what you want&lt;/strong&gt;.  There is no such thing as a &quot;IT Job&quot;; you might be a developer, you might be a tester, you might be QA, but figure out what you actually want to do because passion, trite as it sounds, is really, really important.  If what you want to do is Python based Data Science then write your resume for that – trust me there is a market for almost anything.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make Sure Your Resume Works&lt;/strong&gt;.  For my new gig, I trusted enough to let a friend take a swing at radically changing my resume and, what do you know, employment (ok consulting but still).  And &lt;a href=&quot;https://www.lisameece.com/&quot;&gt;my friend&lt;/a&gt; is now offering this as a service.  And to put my money where my mouth is, here's &lt;a href=&quot;https://fuzzyblog.io/blog/assets/jsjohnson_resume_2019.pdf&quot;&gt;my resume that they fixed&lt;/a&gt;; the end result was far more readable and far more scannable – and I got the job!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Network / Meetups&lt;/strong&gt;.  Getting hired via a resume over the transom is a suck ass process.  You will find things work much better if you network and while that sounds intimidating, there is an easy way – Meetup.  There are meetups in virtually every technology and if you go there you can find the people in your area who really care about what you do.  Let's say you are in the Indianapolis area and you care about Python and Data Science.  Well here is the search for &lt;a href=&quot;https://www.meetup.com/find/events/?allMeetups=false&amp;amp;keywords=python&amp;amp;radius=10&amp;amp;userFreeform=Indianapolis%2C+IN&amp;amp;mcId=z46226&amp;amp;mcName=Indianapolis%2C+IN&amp;amp;eventFilter=mysugg&quot;&gt;Python&lt;/a&gt; and here is the search for &lt;a href=&quot;https://www.meetup.com/find/events/?allMeetups=false&amp;amp;keywords=data+science&amp;amp;radius=10&amp;amp;userFreeform=Indianapolis%2C+IN&amp;amp;mcId=z46226&amp;amp;mcName=Indianapolis%2C+IN&amp;amp;eventFilter=mysugg&quot;&gt;Data Science&lt;/a&gt;.  And if you're intimidated going by yourself the first time, well, bring a friend.  Also if you think that &quot;I won't be accepted&quot;, well, keep in mind that Meetups do tend to be pretty inclusive and are often micro focused – there is even a &quot;La Femme Pythonista&quot; meetup here in Indianapolis.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Practice Coding Tests&lt;/strong&gt;.  It is pretty common nowadays for new people in particular to have to take coding tests.   This is a skill that you can practice like anything else.  Personally I'd start with &lt;a href=&quot;https://triplebyte.com/&quot;&gt;TripleByte&lt;/a&gt; but there are lots of them.  As a side note, I HATE coding tests and find them to be a crap ass metric that only tells an HR department that this person can pass (or cheat) a test but no one ever asks me …&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Read / Learn&lt;/strong&gt;.  If you are entering the tech world then a continuous focus on learning is highly recommended.  I follow tech news in two ways, I read &lt;a href=&quot;https://news.ycombinator.com&quot;&gt;Hacker News&lt;/a&gt; religiously for the big picture and then I follow &lt;a href=&quot;https://rubyweekly.com/&quot;&gt;Ruby Weekly&lt;/a&gt; for stuff about my environment of choice.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Side Project&lt;/strong&gt;.  As a noob, it is easy to hear &quot;start a side project&quot; but that is intimidating as hell.  A simpler approach is to approach someone with a side project and say &quot;Hey - can I help?&quot;.  As an example, JobHound is dying for some love and it is definitely a way to learn.  But there are literally tens of thousands of side projects that need some help.  And once you start helping on a side project that goes on your damn resume.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Github Profile&lt;/strong&gt;.  If you don't have a Github profile in 2019, run, don't walk and get one.  And then do something with it – write docs for some open source project, find a tool you can contribute to, etc.  One of the best guys I ever hired, I did so not for the code he wrote on Github but for the docs he contributed to Ruby.  No one writes docs and someone that does is a damn precious resource.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Answer Stack Overflow Questions&lt;/strong&gt;.  &lt;a href=&quot;https://www.stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt; is an absolutely precious resource and one that always needs help.  Find the question stream on your technology of choice and start answering.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Read Josh Doody&lt;/strong&gt;.  Josh Doody is the author of &lt;a href=&quot;https://fearlesssalarynegotiation.com/&quot;&gt;Fearless Salary Negotiation&lt;/a&gt; and Fearless is the single best book I've ever read on salary negotiation.  I recommended it to a friend recently who got a 38% boost in her comp when she changed jobs.  She then pushed me to follow it and I got a 45% boost in my comp.  I cannot recommend this book strongly enough.  Even if you don't negotiate on your first job (which you might not because you lack power, you want to know this for your future).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Research the Process&lt;/strong&gt;.  The &lt;a href=&quot;https://www.askamanager.org/&quot;&gt;Ask a Manager blog&lt;/a&gt; is a pretty great resource in terms of resumes, cover letters and the like, particularly for early career folk.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manage the Process&lt;/strong&gt;.  This last item is a plug for one of my current side projects, &lt;a href=&quot;https://jobhound.io/&quot;&gt;JobHound&lt;/a&gt;.  JobHound makes the process of getting a tech job, well, suck less.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In closing there are a lot of things that you can do to make yourself more marketable and I'm not saying that you have to (or even can) do all of them but there are definitely steps to take.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/08/29/getting-your-first-tech-job.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/08/29/getting-your-first-tech-job.html</guid>
        
        <category>jobhound</category>
        
        <category>hiring</category>
        
        <category>job</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Nushell Rocks - Go Yehuda Go</title>
        <description>&lt;p&gt;NuShell is a damn interesting approach to a shell.  Here's a description:&lt;/p&gt;

&lt;p&gt;&quot;Today, we’re introducing a new shell, written in Rust. It draws inspiration from the classic Unix philosophy of pipelines, the structured data approach of PowerShell, functional programming, systems programming, and more.&quot;&lt;/p&gt;

&lt;p&gt;Nu is written by Jonathan Turner, Yehuda Katz and more.  Given that I'm a rubyist, it is no surprise that I'm a Yehuda Katz fan (hence the reference to Yehuda in the title).  But this is Jonathan Turner's project.&lt;/p&gt;

&lt;p&gt;I had a bunch of issues getting running with Nu so I wrote up this blog post.&lt;br /&gt;
# Installing Nu&lt;/p&gt;

&lt;p&gt;In order to install Nu, you need the whole Rust environment and toolchain.  Additionally you need to make sure that you are using the nightly build of Rust.  I'm on OSX and this is what I did:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
rustup default nightly
cargo install nu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Depending on the state of your OSX Mojave installation, you may need to run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;before your installation will complete (in this event, just re-run from the curl statement).&lt;/p&gt;

&lt;h1 id=&quot;running-nu&quot;&gt;Running Nu&lt;/h1&gt;

&lt;p&gt;Just call the nu executable:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's an example of what Nu looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls Desktop/| sort-by name | first 5

---+--------------------+------+----------+----------+--------------+-------------+-------------
 # | name               | type | readonly | size     | created      | accessed    | modified 
---+--------------------+------+----------+----------+--------------+-------------+-------------
 0 | Desktop/.DS_Store  | File |          | 92.2 KB  | 2 years ago  | 2 weeks ago | a day ago 
 1 | Desktop/.localized | File |          | &amp;lt;empty&amp;gt;  | 12 years ago | 2 years ago | 2 years ago 
 2 | Desktop/1.png      | File |          | 255.2 KB | 2 years ago  | 2 years ago | 2 years ago 
 3 | Desktop/2.png      | File |          | 269.7 KB | 2 years ago  | 2 years ago | 2 years ago 
 4 | Desktop/3.png      | File |          | 276.3 KB | 2 years ago  | 2 years ago | 2 years ago 
---+--------------------+------+----------+----------+--------------+-------------+-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And nu extends into even ps:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps | where cpu &amp;gt; 1 | sort-by cpu | first 5

---+-------+----------+------+--------------------------------------------------------------------------------------------------
 # | pid   | status   | cpu  | name 
---+-------+----------+------+--------------------------------------------------------------------------------------------------
 0 | 89054 | Runnable | 1.34 | /Applications/Firefox.app/Contents/MacOS/firefox 
 1 | 313   | Runnable | 2.45 | /System/Library/CoreServices/Finder.app/Contents/MacOS/Finder 
 2 | 766   | Runnable | 4.80 | /System/Library/PrivateFrameworks/PhotoLibraryPrivate.framework/Versions/A/Support/photolibraryd 
---+-------+----------+------+--------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;exiting-nu&quot;&gt;Exiting Nu&lt;/h1&gt;

&lt;p&gt;Press ctrl+c twice.&lt;/p&gt;

&lt;h1 id=&quot;example-commands&quot;&gt;Example Commands&lt;/h1&gt;

&lt;p&gt;Here are some interesting command examples:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls
ls | where size &amp;gt; 4kb
ls | where size &amp;gt; 1gb
ps | where cpu &amp;gt; 5
open file.json
ls | get name | echo $it
open https://www.jonathanturner.org/feed.xml
ls | sort-by size
ls | pick name size
ls | sort-by size | first 5
ls | sort-by size | first 5 | skip 2
ls | sort-by name
enter docs 
(this is changing into a directory and then you have a second embeded shell 
  which you can navigate between with n and p)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.nushell.sh/&quot;&gt;Website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jonathanturner.org/2019/08/introducing-nushell.html&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20783006&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.nushell.sh/en/&quot;&gt;The Nu Book&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rustup.rs/&quot;&gt;Rustup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nushell/nushell&quot;&gt;Nushell Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rust/comments/cukfnj/announcing_nushell_a_modern_shell_written_in_rust/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/rust-programming-by/9781788390637/e07dc768-de29-482e-804b-0274b4bef418.xhtml&quot;&gt;Rust Nightly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.nushell.sh/en/installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 27 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/nushell/2019/08/27/nushell-rocks-go-yehuda-go.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/nushell/2019/08/27/nushell-rocks-go-yehuda-go.html</guid>
        
        <category>nushell</category>
        
        <category>rust</category>
        
        
        <category>nushell</category>
        
      </item>
    
      <item>
        <title>Forensic Computing 3 - When Docker Breaks SSH</title>
        <description>&lt;p&gt;I've written a few of these now.  I term it &quot;forensic computing&quot; when I've been given a problem to solve that I really have no idea how to approach and it is just a damn mystery.  The problem here was that for my day job:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We are an AWS shop and all of this happens on AWS&lt;/li&gt;
  &lt;li&gt;We moved from OpenVPN as a VPN client to something called TunnelBlick&lt;/li&gt;
  &lt;li&gt;We lost the ability to ssh in - or ping - our Jenkins slave box.  Not any other box.  Even the Jenkins master box was fine.  This only affected the Jenkins slave box.&lt;/li&gt;
  &lt;li&gt;Of all the computers we own, only I had the ability to SSH in / ping the Jenkins slave box&lt;/li&gt;
  &lt;li&gt;Given that I'm a cranky, old engineer, of all the people we had, only I refused to install the new VPN client (in my defense; I saw that a number of people had problems with it and I &lt;em&gt;have&lt;/em&gt; to have VPN access at all time).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I should note that even though I'm the one writing this up, our Director of Cloud Operations (ST) was instrumental to solving this and his assistance was greatly appreciated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Yes the answer is in the title but keep reading, it gets interesting.&lt;/p&gt;

&lt;p&gt;So all I really knew as I started looking into this was that, somehow, the VPN was likely involved because this problem only started after the new VPN came into being.&lt;/p&gt;

&lt;h1 id=&quot;step-1-confirmation&quot;&gt;Step 1: Confirmation&lt;/h1&gt;

&lt;p&gt;The first step was to confirm that this problem still exists.  We did this by both of us pinging the Jenkins slave box. And sure enough:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: worked&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ST&lt;/strong&gt;: failed&lt;/p&gt;

&lt;p&gt;The fact that ping itself failed was very interesting because ping is such a core bit of Internet technology.  SSH can be mildly complicated but ping is &lt;strong&gt;simple&lt;/strong&gt;.  Ping should always work.  Always.&lt;/p&gt;

&lt;h1 id=&quot;step-2-firewall-settings&quot;&gt;Step 2: Firewall Settings&lt;/h1&gt;

&lt;p&gt;The next step was to take the obvious dive into firewall settings at the EC2 instance level and make sure that the Jenkins slave box had the same firewall settings as the Jenkins master box.  Not only were there the same firewall settings but they were in the same order.&lt;/p&gt;

&lt;p&gt;This left us with the conclusion that it was something about the actual box itself – but what???&lt;/p&gt;

&lt;h1 id=&quot;step-3-so-whats-different-about-the-jenkins-slave&quot;&gt;Step 3: So What's Different About the Jenkins Slave???&lt;/h1&gt;

&lt;p&gt;A brief description here of Jenkins is likely necessary as not everyone who reads my stuff is, &quot;Engineer Nerdy AF&quot;, which is the description of the (few) readers I generally have.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; is described as:: &quot;The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project.&quot;&lt;/p&gt;

&lt;p&gt;Jenkins is a big Java program that runs as both the Master node which controls everything and then as Slave nodes which do the actual work.&lt;/p&gt;

&lt;p&gt;So, for us, everyone could access the Jenkins Master box but only I could access the Jenkins Slave box.&lt;/p&gt;

&lt;p&gt;When you look at Linux networking issues, two key tools are UFW (another firewall) and iptables (how to handle packets / networking).  Here's the result of ufw:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw status verbose
Status: inactive
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This ruled out ufw as a source of the problems so it was onto iptables:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy DROP)
target     prot opt source               destination
DOCKER-USER  all  --  anywhere             anywhere
DOCKER-ISOLATION-STAGE-1  all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
DOCKER     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
DOCKER     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination

Chain DOCKER (2 references)
target     prot opt source               destination
ACCEPT     tcp  --  anywhere             ip-172-18-0-2.some-aws-region-8.compute.internal  tcp dpt:6379
ACCEPT     tcp  --  anywhere             ip-172-18-0-3.some-aws-region-8.compute.internal  tcp dpt:postgresql

Chain DOCKER-ISOLATION-STAGE-1 (1 references)
target     prot opt source               destination
DOCKER-ISOLATION-STAGE-2  all  --  anywhere             anywhere
DOCKER-ISOLATION-STAGE-2  all  --  anywhere             anywhere
RETURN     all  --  anywhere             anywhere

Chain DOCKER-ISOLATION-STAGE-2 (2 references)
target     prot opt source               destination
DROP       all  --  anywhere             anywhere
DROP       all  --  anywhere             anywhere
RETURN     all  --  anywhere             anywhere

Chain DOCKER-USER (1 references)
target     prot opt source               destination
RETURN     all  --  anywhere             anywhere
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this is where ST came fully into play – he looked at the iptables and almost immediately seized on the 172-18 address as a key issue.  Apparently this is part of how he has configured our VPN.  And since the 172-18 issue was tied to  &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;, we were on the hunt for how Docker might mess with networking that would break SSH.&lt;/p&gt;

&lt;h1 id=&quot;step-4-so-docker-&quot;&gt;Step 4: So Docker …&lt;/h1&gt;

&lt;p&gt;A good friend of mine is a &lt;a href=&quot;https://nickjanetakis.com/&quot;&gt;Docker instructor&lt;/a&gt; so I'm pretty familiar with Docker.  Here are some things about Docker:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker is always running so it is a candidate for interfering with stuff&lt;/li&gt;
  &lt;li&gt;Docker has pretty extensive networking facilities&lt;/li&gt;
  &lt;li&gt;Docker modifies existing system stuff like the Routes table&lt;/li&gt;
  &lt;li&gt;Docker can be a furball of complexity because Docker gives you a computer within your computer (virtualization) and that means it is actually an operating system at its core.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, technically, Docker could mess with SSH even if it feels absolutely bizarre for this to even be possible.&lt;/p&gt;

&lt;h1 id=&quot;step-5-proving-this&quot;&gt;Step 5: Proving This&lt;/h1&gt;

&lt;p&gt;The first step was for us to prove this and rather than mess with Docker configuration, the much easier approach was just to turn off Docker using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl stop docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And after that, we repeated the earlier ping test:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: worked&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ST&lt;/strong&gt;: worked&lt;/p&gt;

&lt;p&gt;And that told us that, Yes Virginia, Docker really can break SSH, DAMN IT!  At least for &lt;strong&gt;us&lt;/strong&gt; and how we do networking / VPN.&lt;/p&gt;

&lt;h1 id=&quot;step-6-addressing-this&quot;&gt;Step 6: Addressing This&lt;/h1&gt;

&lt;p&gt;So our basic thesis is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Docker starts up.&lt;/li&gt;
  &lt;li&gt;Docker grabs network addresses in the range of 172.18.&lt;/li&gt;
  &lt;li&gt;We use 172.18 ourselves in a VPN context.&lt;/li&gt;
  &lt;li&gt;This prevents the Jenkins slave box from being accessible via SSH or even ping.&lt;/li&gt;
  &lt;li&gt;We need to tell Docker NOT to use these addresses.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And with that thesis, we knew what was next – Google.  The research that we did and things we found are listed below under References.&lt;/p&gt;

&lt;h1 id=&quot;step-7-fixing-this-or-docker-is-a-dirty-lazy-teenager&quot;&gt;Step 7: Fixing This or Docker is a Dirty, Lazy Teenager&lt;/h1&gt;

&lt;p&gt;Our first thought was that the 172-18 network address specification was located in docker-compose.yml.  And, while we knew that existed, we had no idea where it was but a quick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo find / -name &quot;docker-compose.yml&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;revealed its location.  Groveling through it, though, proved to be a wash – no networking commands.  A similar trawl through files on the machine proved fruitless as there were no Dockerfile(s) telling us what was going on.&lt;/p&gt;

&lt;p&gt;Google, as always, delivered the answer.  We learned that the core Docker daemon (the background program governing all of Docker) itself can be customized with a file called daemon.json.  So we did this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /etc/docker/daemon.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and we discovered that by default, it simply isn't there.  Here's what we started with from the Internet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;bip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.1.5/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fixed-cidr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.1.5/25&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fixed-cidr-v6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2001:db8::/64&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;mtu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;default-gateway&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.20.1.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;default-gateway-v6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2001:db8:abcd::89&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.20.1.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.20.1.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's what ended up working:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;default-address-pools&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.10.0.0/16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.11.0.0/16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And we were certain that we were &lt;strong&gt;right&lt;/strong&gt; and all would be good – only it didn't &lt;em&gt;censored&lt;/em&gt; work.  Now I have been using Docker on and off for a bunch of years and this experience made me remember my opinion of Docker's engineering practices.  Docker often seems to run engineering as if they are dirty, lazy teenagers.  Specifically Docker doesn't seem to clean up after itself (example - tickets stay open way too long; things are poorly documented, etc).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I am a parent to teenagers.  I can say this.&lt;/p&gt;

&lt;p&gt;So my suspicion was that Docker had modified something at the machine level and I needed to find out what that change was and delete it.  At this point, I'm going to cut to the chase now because this is way too long.  The short answer was a change was left behind by Docker in the routes table that needed to be deleted.  A quick look at routes gave us:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ip route show

default via 172.31.16.1 dev ens5 proto dhcp src 172.31.23.113 metric 100
10.10.0.0/24 dev docker0 proto kernel scope link src 10.10.0.1 linkdown
172.18.0.0/16 dev br-9942c98d99d1 proto kernel scope link src 172.18.0.1 linkdown
172.31.16.0/20 dev ens5 proto kernel scope link src 172.31.23.113
172.31.16.1 dev ens5 proto dhcp scope link src 172.31.23.113 metric 100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then it was just:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo route del -net 172.18.0.0/16
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With that and then a final Docker stop and start all this madness was done.  The final task was to then launch our test suite via Jenkins and watch it function correctly.&lt;/p&gt;

&lt;h1 id=&quot;but-what-about-verifying-the-fix&quot;&gt;But What About Verifying the Fix&lt;/h1&gt;

&lt;p&gt;I can't explain why the first time we turned Docker off, we were able to verify that it worked but yet there was a permanent route left in at the machine level.  My suspicion is some kind of edge case glitch but who knows.  I mean when you use teenager style engineering practices …&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;A robust thank you to our Director of Cloud Operations, ST, who was stellar at working this with me.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/community/IptablesHowTo&quot;&gt;IP Tables How To&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.poftut.com/delete-route-ubuntu-linux/&quot;&gt;Deleting Routes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vitux.com/how-to-view-the-network-routing-table-in-ubuntu/&quot;&gt;Viewing Routes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/42365336/how-to-stop-docker&quot;&gt;Stopping Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/restart/&quot;&gt;Restarting Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/v17.09/engine/userguide/networking/work-with-networks/&quot;&gt;Work with Network Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/tools-reference/tools/find-files-in-linux-using-the-command-line/&quot;&gt;Finding Files in Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sudo-bmitch.github.io/presentations/dc2019/tips-and-tricks-of-the-captains.html#p21&quot;&gt;Docker Presentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/dockerd/&quot;&gt;Daemon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/v17.09/engine/userguide/networking/default_network/custom-docker0/&quot;&gt;Customizing the Default Bridge Network&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 27 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/08/27/forensic-computing-3-when-docker-breaks-ssh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/08/27/forensic-computing-3-when-docker-breaks-ssh.html</guid>
        
        <category>docker</category>
        
        <category>linux</category>
        
        <category>networking</category>
        
        <category>ssh</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>The Power of Why</title>
        <description>&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I wrote this as a section of an unfinished book about managing software engineers, &quot;Managing the Unmanageables&quot;, when you are &lt;strong&gt;not&lt;/strong&gt; a software engineer.  I keep copying it and pasting it to people so I thought it should just live here.&lt;/p&gt;

&lt;h1 id=&quot;applying-psychology-the-power-of-why&quot;&gt;Applying Psychology: The Power of Why&lt;/h1&gt;

&lt;p&gt;One of the powerful tools in your arsenal of management techniques for dealing with software engineers is three letters long — &lt;strong&gt;why&lt;/strong&gt;.  As a manager, even as a non technical person managing technical people, you always have the ability to ask &lt;strong&gt;why&lt;/strong&gt;.  I would argue that if you don’t ask why, at least some of the time, you’re not doing your job.  Understanding “why” is, after all, at the heart of management.
The power of why taps into four of these psychological vectors: pride in his work, poor social skills, the desire to not explain his or her self and the belief that they are smarter than you.  So let’s posit a dialog between you and a software engineer:&lt;/p&gt;

&lt;p&gt;Manager:  Bob — we need to get that download bug fixed today.  Its a big deal.
Bob: Well that’s actually pretty hard.  I’d need to &lt;em&gt;nerd level gobbledygook gook speak here&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A lot of times that’s where the dialog ends.  The software engineer throws up a wall and relies on you not understanding this.  Now let’s revisit that and add why to the mix:&lt;/p&gt;

&lt;p&gt;Manager:  Bob — we need to get that download bug fixed today.  Its a big deal.
Bob: Well that’s actually pretty hard.  I’d need to &lt;em&gt;nerd level gobbledygook gook speak here&lt;/em&gt;
Manager: That’s interesting and I don’t understand everything you just said but I do know that our product used to be able to download data and now it can’t.  Can you explain why?&lt;/p&gt;

&lt;p&gt;And this is the point where Bob either has to explain himself as a human being or do the work.  And, honestly, he’d rather do the work than talk to you.  Don’t take offense at this.  It is actually both what you and and to you advantage so its a good thing.  Bear in mind that Bob would rather talk to a computer than talk to you.  If he really wanted to talk to people, he’d have your job.  Finally if he really is smarter than you, or at least things he is, shouldn’t he be able to fix it?&lt;/p&gt;

&lt;p&gt;One thing to know about technical people — we hide behind our jargon because it gives a way to make difficult social interactions go away.  If I use words that you don’t understand then it naturally intimidates you because it makes you feel stupid and me feel superior.&lt;/p&gt;

&lt;p&gt;The power of why is a very real thing.  I cannot tell you the number of times that simply asking “why” has resulted in the engineer saying “Fine!  I’ll just fix it”.&lt;/p&gt;

&lt;p&gt;The other thing to understand about the power of why is that software can be intimidating as hell  even to the engineer who is working on it.  By forcing them to explain themselves, in a way that you can understand, you are inherently forcing them to work thru the issue at hand in their own head.  And, very often, you force them to realize where they went wrong.  Let me illustrate this with an anecdote.&lt;/p&gt;

&lt;p&gt;Once upon a time there was a software company that was making CD-ROM indexing software and an indexing operation just would not finish.  Finally I dragged the engineer in question over and made him watch how astonishingly, mind numbingly slow it was.  The very next day a 24 + hour process executed in 8 minutes.  What changed?  To this day I do not know.  All he said was “I was stupid[1]”.&lt;/p&gt;

&lt;p&gt;This second example tapped into the engineer’s belief that his code was “fast”.  By confronting him with the real world where his code was not fast, I forced him to either admit that his code was slow (which conflicted with his pride) or just fix it or, worse, explain himself.  And the normal thing happened — he fixed his code.  And, just so you know, the engineer was not me.  I was the lowly user in this case.&lt;/p&gt;

&lt;p&gt;[1] This actually operated on several emotional vectors — the desire to not have to explain himself coupled with pride in performance (every engineer thinks his or her code is fast).&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mtu/2019/08/26/the-power-of-why.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mtu/2019/08/26/the-power-of-why.html</guid>
        
        <category>software_engineering</category>
        
        <category>chapter_02</category>
        
        
        <category>mtu</category>
        
      </item>
    
      <item>
        <title>Jumpstart and GoRails Has Outstanding Tech Support - Go Chris Oliver Go - Recommended</title>
        <description>&lt;p&gt;Technical support gets a bad rap in the industry but there are time when technical support proves &lt;strong&gt;just how good a product or service can be&lt;/strong&gt; – and this is one of those times.&lt;/p&gt;

&lt;p&gt;I'm very much a Rails guy and I've been debating trying &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Pro&lt;/a&gt; for some time.  I finally have a crappy little SAAS idea and this is likely the perfect time for me to try it – because I have written &lt;strong&gt;zero&lt;/strong&gt; code so far.  Now JumpStart is a paid product that amounts to a pre-build starting Rails app with all the necessary cruft for a SAAS app already built.  So it really only works when you are in a pure greenfield state.  So this is perfect for JumpStart Pro.&lt;/p&gt;

&lt;p&gt;But since it is a paid product, I wanted to try before I buy which made me try the &lt;a href=&quot;https://github.com/excid3/jumpstart&quot;&gt;free version on Git&lt;/a&gt;.  And that, well, that was a disaster.  I ended up with all kinds of issues, mostly related to railties and Rails 6.  If you've been around a while, you've seen this and, well, you know it sucks.  So after an hour of mucking about, I finally threw my hands up and said &quot;I'll just email Chris&quot;.  Now I am a paid subscriber to Chris' Rails Cast service, &lt;a href=&quot;https://gorails.com/&quot;&gt;GoRails&lt;/a&gt;, which, I will admit, does give me an advantage in talking to him.  I'm not an active user of the service but I do pay for it monthly.&lt;/p&gt;

&lt;p&gt;So I sent him an email around 3 in the morning on a Friday night and I had an answer back by 10:50 am on a Saturday:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hey Scott,

The free template has no shared code whatsoever with the Pro template. The Pro 
template is actually a pre-built Rails 6 app you clone because as you can see 
here the Rails generators are an absolute mess to maintain.

We built a bunch of classes with Tailwind to make it much more familiar to any 
Bootstrap users. It's pretty freeing once you get used to it.

It looks like it installed Devise 1.5.4 on your first error log. Devise is currently 
4.6.2 lol. That I'm sure is part of the issue. They updated the git to support 
Rails 6 a couple months ago, but haven't cut a release for it yet.

All stems from a stupid nuance in gem versioning. Devise is set to &amp;lt; 6.0 
and technically 6.0.0.rc2 is less than 6.0 final, so the current gem version 
worked, but not with the final release.

Just updated the template to use Devise from git for now. Works like a charm.

Chris
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Not only did he understand the issue but he perfectly explained it and fixed it.  And in just a few hours on a Saturday.  This is extraordinary support and, to me, it illustrates just how good JumpStart Pro likely is (and how good Go Rails is).  People don't take this much care with products that aren't good.&lt;/p&gt;

&lt;p&gt;So if you are in the startup business and you look at support as a cost center, you are flat out wrong at least some of the time.  In this case support was an absolute win and will get another copy of JumpStart Pro bought (I haven't done it yet because I'm headed out the door shortly; only reason).&lt;/p&gt;

&lt;p&gt;Chris Oliver, Go Rails and Jumpstart Pro – recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/08/17/jumpstart-and-gorails-has-outstanding-tech-support-go-chris-oliver-go-recommended.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/08/17/jumpstart-and-gorails-has-outstanding-tech-support-go-chris-oliver-go-recommended.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Installing Rails 2.6 on OSX and a Creating New Application</title>
        <description>&lt;p&gt;So Rails 2.6 has been released and I just went thru the normal update dance.  Here's how I handled upgrading my system.  Let's start with the basics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rvm&lt;/li&gt;
  &lt;li&gt;OSX Mojave&lt;/li&gt;
  &lt;li&gt;Ruby 2.5.1&lt;/li&gt;
  &lt;li&gt;MySQL (yeah, yeah I know; not apologizing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is what I did (you should know that I hit issues with older versions of Yarn and Node so I've included updating them as part of this):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Started a terminal session.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verified my ruby version:&lt;/p&gt;

    &lt;p&gt;ruby –version&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verified my rails version:&lt;/p&gt;

    &lt;p&gt;rails –version&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upgrade Yarn:&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;curl -o- -L https://yarnpkg.com/install.sh&lt;/td&gt;
          &lt;td&gt;bash&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can either start a new terminal to get your path exports correct (it is set on Terminal start) or simply do this:&lt;/p&gt;

    &lt;p&gt;export PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upgrade node:&lt;/p&gt;

    &lt;p&gt;brew upgrade node&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upgrade Ruby to 2.6.2 (not required but I figured why not):&lt;/p&gt;

    &lt;p&gt;rvm install 2.6.2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change to the new ruby:&lt;/p&gt;

    &lt;p&gt;rvm use ruby-2.6.2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generate a new application:&lt;/p&gt;

    &lt;p&gt;rails new lauck –database=mysql&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;If you got anxious and generated a new application prior to installing a new ruby then, you would need to update the Gemfile to reflect the Ruby version and bundle install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I've named this new test application after one of my favorite librarians.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://weblog.rubyonrails.org/2019/8/15/Rails-6-0-final-release/&quot;&gt;Rails 6 Announcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://edgeguides.rubyonrails.org/6_0_release_notes.html&quot;&gt;Rails 6 Release Notes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20717886&quot;&gt;Rails 6 on Hacker News&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/install/#mac-stable&quot;&gt;Installing Yarn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rvm.io/rvm/basics&quot;&gt;RVM Basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/grv19/installing-ruby-26-2dch&quot;&gt;Installing Ruby 2.6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://selleo.com/blog/how-to-upgrade-to-rails-6&quot;&gt;How to Upgrade to Rails 6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/08/17/installing-rails-2-6-on-osx-and-a-creating-new-application.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/08/17/installing-rails-2-6-on-osx-and-a-creating-new-application.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Scopes are Elegant</title>
        <description>&lt;p&gt;This post is obvious to any advanced Rails user (hell even any middling Rails user) but I know there are some readers who aren't that sophisticated so here goes.&lt;/p&gt;

&lt;p&gt;A scope is a Rails database query that operates much like a class method only it is much, much simpler to define.  Here's a class method that finds the active elements in a table called habits:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def active
  Habit.where(active: true)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that's not bad but a Rails scope looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scope :active, -&amp;gt; { where(active: true) }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But the real benefit here is that scopes are &lt;strong&gt;chainable&lt;/strong&gt; so they can be inserted into an overall &quot;query pipeline&quot; where you can easily extend things.  In my case I had a site listing habits and I realized that habits needed a state of active (if it was true it should be displayed and if it was false then it shouldn't be).  Here was my initial view code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%plan.habits.each do |habit|%&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;%=link_to(habit.name, habit_path(habit))%&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once I had the scope defined then all I had to do was this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%plan.habits.active.each do |habit|%&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;%=link_to(habit.name, habit_path(habit))%&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And &lt;strong&gt;blammo&lt;/strong&gt; I had an active list of habits.&lt;/p&gt;

&lt;p&gt;Now let's carry the example further and let's say that you want a list of habits sorted by name. You can define a scope called ordered_by_name like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scope :order_by_name, -&amp;gt; { order(&quot;name ASC&quot;)}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and the scope into your view like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%plan.habits.active.order_by_name.each do |habit|%&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;%=link_to(habit.name, habit_path(habit))%&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And it will be sorted by name, easy peasy.  Now I've used scopes for &lt;strong&gt;years&lt;/strong&gt; (prior to their current syntax actually) but their elegance has never struck me in quite the same way.  Perhaps it is just Monday …&lt;/p&gt;

&lt;h2 id=&quot;more-on-rails-scopes&quot;&gt;More on Rails Scopes:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://api.rubyonrails.org/classes/ActiveRecord/Scoping/Named/ClassMethods.html&quot;&gt;api.rubyonrails.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.justinweiss.com/articles/should-you-use-scopes-or-class-methods/&quot;&gt;Scopes or Class Methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/le-wagon/what-are-named-scopes-and-how-to-use-them-rails-5-5a0444d8b759&quot;&gt;Named Scopes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 05 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/08/05/rails-scopes-are-elegant.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/08/05/rails-scopes-are-elegant.html</guid>
        
        <category>rails</category>
        
        <category>database</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Migration Tips and Tricks</title>
        <description>&lt;p&gt;A migration is the Rails facility which alters a database's structure.  Migrations are an essential aspect of all database development with Rails and they generally work quite well with the default command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-or-&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That command will cause Rails to execute all pending migrations.  A pending migration is one where the timestamp on the migration is &lt;strong&gt;not&lt;/strong&gt; stored in the table schema_migrations.&lt;/p&gt;

&lt;p&gt;The trick with migrations is understanding how to manipulate them, replay them, etc when they fail.&lt;/p&gt;

&lt;h2 id=&quot;the-hard-way---the-schemamigrations-table&quot;&gt;The Hard Way - The schema_migrations Table&lt;/h2&gt;

&lt;p&gt;Let's start with the hard way - manipulating schema_migrations table directly.  Let's say that you need to re-run the last 2 migrations.  Here's what you need to do:&lt;/p&gt;

&lt;p&gt;Start by getting the timestamps of the last two migrations.  You can do this with an ls -ltr db/migrations and pick them out of what might be a giant list of migrations (my current work project has 858 migrations) – and this can, well, &lt;strong&gt;suck&lt;/strong&gt;.  You can also be smart about it and use tail to get just the last few (default 8 on OSX) migrations.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -ltr db/migrate | tail
-rw-r--r--  1 sjohnson  staff   201 Jul 18 04:44 20190717234458_create_units.rb
-rw-r--r--  1 sjohnson  staff   120 Jul 18 04:44 20190717235922_add_unit_id_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   154 Jul 18 04:44 20190718000145_add_unit_id_to_habit_tasks.rb
-rw-r--r--@ 1 sjohnson  staff   129 Jul 18 04:44 20190718075945_add_unit_preferences_json_to_users.rb
-rw-r--r--@ 1 sjohnson  staff   154 Jul 18 04:44 20190718080511_add_unit_type_to_units.rb
-rw-r--r--@ 1 sjohnson  staff   131 Jul 18 09:28 20190718110444_fix_stupidity_with_float_val.rb
-rw-r--r--  1 sjohnson  staff   164 Jul 18 13:33 20190718133051_add_options_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   151 Jul 25 15:48 20190725100535_add_has_loggable_tasks_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   257 Jul 26 15:21 20190726191446_add_plan_id_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   523 Jul 27 03:29 20190726133807_create_plans.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you can delete from schema_migrations using a database console or by using ActiveRecord in the Rails console so either:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;delete from schema_migrations where version in (20190726133807, 20190726191446);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-or- in a Rails console:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ActiveRecord::Base.connection.execute(&quot;delete from schema_migrations where version in (20190726133807, 20190726191446)&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you would also need to undo any changes your migrations might have partially implemented.  If this was table creation then this is a relatively simple &quot;drop table foo&quot; statement but if it was an index creation or something harder, you need to selectively alter individual tables.  And even a hard core SQL guy like myself generally doesn't want to do that.  So let's look at the easier options.&lt;/p&gt;

&lt;h2 id=&quot;the-easy-way&quot;&gt;The Easy Way&lt;/h2&gt;

&lt;p&gt;Happily Rails provides some additional facilities for this allowing you to rollback the last migration or an individual migration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake db:rollback
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;gets rid of the last migration.  I do NOT, however, ever recommend that you do this.  I'm currently working on an active side project where pull requests are flowing and even when you might think that you know what the last migration &lt;strong&gt;you created&lt;/strong&gt; was, you may not realize that another developer slipped a migration in and &lt;em&gt;whammo&lt;/em&gt;, &quot;Houston we have a problem&quot;.&lt;/p&gt;

&lt;p&gt;My recommendation is to always specify the version with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake db:migrate:down VERSION=20190726133807
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is absolute and will only affect the migration in question.  Given that I'm a big damn fan of always understanding the state of my persistent storage, it isn't surprising that I recommend this.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;All of this can be easily referenced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4352848/how-to-rollback-just-one-step-using-rake-dbmigrate/21119193&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://guides.rubyonrails.org/migrations.html#running-migrations&quot;&gt;Core Rails Docs on Migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 31 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/31/rails-migration-tips-and-tricks.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/31/rails-migration-tips-and-tricks.html</guid>
        
        <category>rails</category>
        
        <category>migration</category>
        
        <category>db</category>
        
        <category>database</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Nerd Humor - When You Blog in Bright Sunlight in a Convertible</title>
        <description>&lt;p&gt;Disclaimer: There is likely only one person on the planet who will find this funny.  Hi!&lt;/p&gt;

&lt;p&gt;So I found myself last night in a convertible with my wife driving and I thought to myself, &quot;I know; I'll write something&quot;.  And I began writing a screed on the use of the underlying Rails Migration commands that manipulate the state of your database.  Rails has a number of these commands that, after MORE THAN A DECADE of daily rails programming, I've never bothered to use.  I have known for a long time I need to master these and I finally have.&lt;/p&gt;

&lt;p&gt;I finish up that post this morning and go to find it and publish it and a git status shows me &lt;strong&gt;nothing&lt;/strong&gt;.  Gulp.  This just doesn't happen to me.  Scramble around looking for it – no love.  Confirm that it actually exists in my editor and I didn't just have a surreal &quot;out of keyboard&quot; experience – yep.  It is there.  And then it hits me – I have multiple blogs, one for nerd writing and one for recipes.  Yep:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  recipes git:(gh-pages) ✗ git commit -m &quot;updates to pickle&quot;
[gh-pages 0e34bce] updates to pickle
 1 file changed, 3 insertions(+), 1 deletion(-)
➜  recipes git:(gh-pages) git push origin gh-pages
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 568 bytes | 0 bytes/s, done.
Total 4 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
remote: 
remote: GitHub found 7 vulnerabilities on fuzzygroup/recipes's default branch (1 critical, 1 high, 4 moderate, 1 low). To find out more, visit:
remote:      https://github.com/fuzzygroup/recipes/network/alerts
remote: 
To github.com:fuzzygroup/recipes
   9fc96ec..0e34bce  gh-pages -&amp;gt; gh-pages
➜  recipes git:(gh-pages) jekyll post &quot;Rails Migration Tips and Tricks&quot;
New post created at _posts/2019-07-30-rails-migration-tips-and-tricks.md.
➜  recipes git:(gh-pages) ✗ mate _posts/2019-07-30-rails-migration-tips-and-tricks.md 
➜  recipes git:(gh-pages) ✗   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Moral of the story?  Don't tech blog where you food blog.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/humor/2019/07/31/nerd-humor-when-you-blog-in-bright-sunlight-in-a-convertible.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/humor/2019/07/31/nerd-humor-when-you-blog-in-bright-sunlight-in-a-convertible.html</guid>
        
        <category>humor</category>
        
        <category>blogging</category>
        
        
        <category>humor</category>
        
      </item>
    
      <item>
        <title>Patterns and Anti-Patterns</title>
        <description>&lt;p&gt;There times when I use terms so common to software engineering that I forget that there is a wide audience out there to whom these aren't native concepts.  That's my bad – using things before you define them is not a good thing.&lt;/p&gt;

&lt;p&gt;Earlier today I referenced &quot;&lt;a href=&quot;https://fuzzyblog.io/blog/anti_patterns/2019/07/26/development-anti-pattern-two-objects-with-almost-the-same-structure.html&quot;&gt;anti-patterns&lt;/a&gt;&quot; but failed to define it.  The idea of an anti-pattern is intimately tied to the idea of a pattern and let's let Wikipedia do the talking:&lt;/p&gt;

&lt;p&gt;&quot;In software engineering, a software design pattern is a general, reusable solution to a commonly occurring problem within a given context in software design. It is not a finished design that can be transformed directly into source or machine code. It is a description or template for how to solve a problem that can be used in many different situations. Design patterns are formalized best practices that the programmer can use to solve common problems when designing an application or system.&quot; &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_design_pattern&quot;&gt;Software Design Pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So if a pattern is a best practice, something that you do then an anti-pattern is the inverse – it is something that you &lt;strong&gt;do not do&lt;/strong&gt;.  I'll blog about another one soon – the going dark anti pattern.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/anti_patterns/2019/07/26/patterns-and-anti-patterns.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/anti_patterns/2019/07/26/patterns-and-anti-patterns.html</guid>
        
        <category>software_development</category>
        
        <category>anti_patterns</category>
        
        
        <category>anti_patterns</category>
        
      </item>
    
      <item>
        <title>Development Anti Pattern - Two Objects with Almost the Same Structure</title>
        <description>&lt;p&gt;One of the beautiful things about greenfield development, that joyous process of starting anew on something, is that it lets you see errors that you make much more cleanly.  And this is a combination of a few things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The Forest for the Trees.  In a big code base, any errors you make aren't that visible because they are drowned out by all the other bits of code.&lt;/li&gt;
  &lt;li&gt;Willingness to Get It Right.  When you start a new code base, it is like starting a new love affair – this time, you are going to get it &lt;strong&gt;right&lt;/strong&gt;.  This time, it will be &lt;strong&gt;different&lt;/strong&gt;.  So you are a bit more able to see errors then a lot more willing to rip apart something that is already working to make it right.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The specific example at hand is the anti pattern of two objects with almost the same structure.  Here's an example from my current side project:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;desc habits;
+-----------------+--------------+------+-----+---------+----------------+
| Field           | Type         | Null | Key | Default | Extra          |
+-----------------+--------------+------+-----+---------+----------------+
| id              | bigint(20)   | NO   | PRI | NULL    | auto_increment |
| created_at      | datetime     | NO   |     | NULL    |                |
| updated_at      | datetime     | NO   |     | NULL    |                |
| name            | varchar(255) | YES  | MUL | NULL    |                |
| hardness        | int(11)      | YES  |     | NULL    |                |
| frequency       | int(11)      | YES  |     | NULL    |                |
| economic_value  | int(11)      | YES  |     | NULL    |                |
| user_id         | int(11)      | YES  | MUL | NULL    |                |
| description     | text         | YES  |     | NULL    |                |
| shareable       | tinyint(1)   | YES  |     | NULL    |                |
| habit_type_id   | int(11)      | YES  | MUL | NULL    |                |
| master_habit_id | int(11)      | YES  | MUL | NULL    |                |
| unit_id         | int(11)      | YES  |     | NULL    |                |
| options         | text         | YES  |     | NULL    |                |
| has_tasks       | tinyint(1)   | YES  |     | 0       |                |
+-----------------+--------------+------+-----+---------+----------------+
15 rows in set (0.00 sec)

desc habit_tasks;
+----------------------------+--------------+------+-----+---------+----------------+
| Field                      | Type         | Null | Key | Default | Extra          |
+----------------------------+--------------+------+-----+---------+----------------+
| id                         | bigint(20)   | NO   | PRI | NULL    | auto_increment |
| created_at                 | datetime     | NO   |     | NULL    |                |
| updated_at                 | datetime     | NO   |     | NULL    |                |
| habit_id                   | int(11)      | YES  | MUL | NULL    |                |
| name                       | varchar(255) | YES  |     | NULL    |                |
| hardness                   | int(11)      | YES  |     | NULL    |                |
| frequency                  | int(11)      | YES  |     | NULL    |                |
| economic_value             | float        | YES  |     | NULL    |                |
| user_id                    | int(11)      | YES  |     | NULL    |                |
| metric_type_id             | int(11)      | YES  |     | NULL    |                |
| unit_id                    | int(11)      | YES  |     | NULL    |                |
| best_general_time_for_this | varchar(255) | YES  |     | NULL    |                |
| options                    | text         | YES  |     | NULL    |                |
+----------------------------+--------------+------+-----+---------+----------------+
13 rows in set (0.06 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These are pretty close to the same and they represent an attempt to give a 1 level hierarchy (the habit_task) onto the parent object (habit).&lt;/p&gt;

&lt;p&gt;And the simple answer here is that what I'm actually looking for are groups not a sub-object i.e. invent a group concept an then simply reduce all the habit_task objects to habits that are grouped together.  That achieves roughly 95% of what habit_tasks did and dramatically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;reduces code duplication (the same routine to calculate economic_value is used multiple places)&lt;/li&gt;
  &lt;li&gt;reduces complexity overall&lt;/li&gt;
  &lt;li&gt;gets rid of a huge wart in the display views where nesting is needed&lt;/li&gt;
  &lt;li&gt;improves performance by not having to constantly check if a habit has tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line here is that whenever you have two objects with almost the same structure, start asking yourself is that really the same damn object somehow.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/anti_patterns/2019/07/26/development-anti-pattern-two-objects-with-almost-the-same-structure.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/anti_patterns/2019/07/26/development-anti-pattern-two-objects-with-almost-the-same-structure.html</guid>
        
        <category>software_development</category>
        
        <category>anti_patterns</category>
        
        
        <category>anti_patterns</category>
        
      </item>
    
      <item>
        <title>A Bootstrap 4 Two Column Example that Just Works</title>
        <description>&lt;p&gt;I remain, alas, CSS Challenged.  I'm from an era where the height of HTML layout was tables and once upon a time I know all the tricks including images in the corners for that rounded corner effect.  But, as is all too often in technology, the tricks that once served you well – don't.&lt;/p&gt;

&lt;p&gt;Now we exist in a whole new world for layout i.e. CSS and for me that means &lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/introduction/&quot;&gt;bootstrap introduction&lt;/a&gt; or &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;bootstrap main page&lt;/a&gt;.  Bootstrap isn't perfect but I fully respect what it tries to do and the simple fact that, imho, Bootstrap made the Internet &lt;strong&gt;better&lt;/strong&gt;.  So when I want to make two columns and I naturally reach for a table tag, I need to come look this example up from &lt;a href=&quot;https://codepen.io/SitePoint/pen/WMYOxb&quot;&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
  &amp;lt;div class=&quot;row header&quot;&amp;gt;
    &amp;lt;div class=&quot;col-xs-12 text-center&quot;&amp;gt;
      &amp;lt;h1&amp;gt;Bootstrap 4 2-Column Layout &amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;div class=&quot;col-sm-6 first-column&quot;&amp;gt;
      &amp;lt;p&amp;gt;This column takes the full height as its sibling column thanks to Flexbox&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-sm-6 second-column&quot;&amp;gt;
      &amp;lt;p&amp;gt;
        Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum 
      &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I'm not pretending that this is hard or not but the shift from tables to a css grid isn't exactly simple (or at least it isn't for me).&lt;/p&gt;

&lt;p&gt;I'm noting this particular example because I've tried several and this one just worked right out of the box.  The others should have – and maybe it was just my ham fisted approach – but this one did.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/07/26/a-bootstrap-4-two-column-example-that-just-works.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/07/26/a-bootstrap-4-two-column-example-that-just-works.html</guid>
        
        <category>boostrap</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Git Rebasing Old Migrations Easily When SourceTree Fails</title>
        <description>&lt;p&gt;So I've written before about schema.rb changes, SourceTree and migrations and the problem with git rebase before:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html&quot;&gt;Schema WTF Take 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/05/10/the-schema-wtf-moment-take-2-an-excursion-into-sourcetree.html&quot;&gt;Schema WTF Take 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I just hit this again and my normal pairing partner is offline and while he has the patience to deal with the crazy ass error messages from SourceTree, I do not.  Personally I think Atlassian (the maker of SourceTree) should simply be killed with fire while my pagan friends dance naked around a drum circle but hey – that's just me.&lt;/p&gt;

&lt;p&gt;Anyway my tooling has let me down.  And, yes I could learn the specific range level commit commands that SourceTree is generating behind the scenes but I think there's an easier way.  Here's what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Abort the git rebase with git rebase –abort&lt;/li&gt;
  &lt;li&gt;Change back into my develop branch which is now current.&lt;/li&gt;
  &lt;li&gt;Copy schema.rb to ~ i.e. cp db/schema.rb ~&lt;/li&gt;
  &lt;li&gt;Look at my pull request to identify the specific migration that I ran.&lt;/li&gt;
  &lt;li&gt;Roll back the specific migration with: rake db:migrate:down VERSION=20190610143443&lt;/li&gt;
  &lt;li&gt;Copy in the schema.rb from ~ i.e. cp ~/schema.rb db&lt;/li&gt;
  &lt;li&gt;Run the migration with bundle exec rake db:migrate&lt;/li&gt;
  &lt;li&gt;Do the git add / commit / push dance&lt;/li&gt;
  &lt;li&gt;Get someone to do the pull request review&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that, dear reader, should have worked swimmingly.  Alas, it did not.  And this was one of those software engineering cases where trying to understand something fully likely would have been a waste of time.  This change amounted to a few lines in a model, a migration to add an index and a small update to a spec file – I simply recreated the branch from the current develop as &quot;-a&quot; (on top of the original branch number) and then re-made the same damn changes.  Yeah that sucks but it worked.&lt;/p&gt;

&lt;p&gt;Today was definitely a day in the trenches.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/24/git-rebasing-old-migrations-easily-when-sourcetree-fails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/24/git-rebasing-old-migrations-easily-when-sourcetree-fails.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>migrations</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Bullshite rsync Subtleties</title>
        <description>&lt;p&gt;So yesterday or the day before &lt;a href=&quot;https://fuzzyblog.io/blog/osx/2019/07/22/backing-mac-to-mac-via-scp-rsync.html&quot;&gt;I blogged about rsync&lt;/a&gt; and how good it was.  And that's true but rsync is notoriously tricky and today I became very, very aware of rsync's trickiness.&lt;/p&gt;

&lt;p&gt;So my scenario was that I had an old MacBook Air which I was trying to get all the data off of since DropBox seemed to have an incomplete sync.  And I figured that if I just got all the files copied up to my big desktop then I could reformat the machine and give it to my wife as a replacement for her laptop on which the keyboard died.&lt;/p&gt;

&lt;p&gt;Note: Some of these things are perhaps known issues / not issues because I'm on OSX.  What I can say is that as a Mac user some of these things make no damn sense.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-first---directory-names-with-spaces&quot;&gt;Problem the First - Directory Names with Spaces&lt;/h1&gt;

&lt;p&gt;So here was the first thing that I observed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Dropbox/&quot;Camera Uploads&quot;/ 192.168.1.25:/Users/sjohnson/backups/macbook_air/Dropbox/&quot;Camera Uploads&quot;
Password:
building file list ... done
created directory /Users/sjohnson/backups/macbook_air/Dropbox/Camera
./
.DS_Store
.dropbox
2017-07-03 05.30.42.jpg
2017-07-03 07.03.03.jpg
2017-07-09 08.54.25.jpg
2017-07-09 08.54.31.jpg
2017-07-09 11.09.16.jpg
2017-07-09 11.09.23.jpg
2017-07-10 18.48.37.jpg
2017-07-10 18.48.43.jpg
2017-07-10 18.48.47.mov
^Crsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52.200.1/rsync/rsync.c(244) [sender=2.6.9]'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So what you're seeing is that even tho the data came from &quot;Camera Uploads&quot;, it got moved to &quot;Camera&quot;.  The issue is obviously directory names with spaces.  And since I had started with an scp approach this meant that rsync was copying up data that it already had in place.  ARRGHH!&lt;/p&gt;

&lt;p&gt;And here's a second pass with a different approach to space encoded filenames:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Dropbox/&quot;Camera Uploads&quot;/ 192.168.1.25:/Users/sjohnson/backups/macbook_air/Dropbox/Camera\ Uploads/
Password:
building file list ... done
./
2017-07-14 18.09.19.jpg
2017-07-14 18.09.37.jpg
2017-07-14 18.09.39.jpg
2017-07-14 18.28.18.jpg
[A bunch of filenames omitted for brevity]
2017-07-30 09.27.13.jpg
2017-07-30 09.27.23.jpg
^Crsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52.200.1/rsync/rsync.c(244) [sender=2.6.9] 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Before the second pass:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls -ltr Camera | wc -l
      15
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After the second pass&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ScottiMac:Dropbox sjohnson$ ls -ltr Camera | wc -l
      36
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So even after changing how I handled the destination filename, it still went to &quot;Camera&quot;.  Double ARGH.&lt;/p&gt;

&lt;p&gt;So what's the obvious workaround when rsync seems to entirely fsck up OSX filenames with spaces?  I'm sure there are other options but my approach was drop dead simple, rename each folder on source and destination from:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Camera Uploads
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Camera_Uploads
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and re-run the sync command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Dropbox/Camera_Uploads/ 192.168.1.25:/Users/sjohnson/backups/macbook_air/Dropbox/Camera_Uploads/
Password:
building file list ... done
.DS_Store

sent 18.87K bytes  received 1.64K bytes  8.21K bytes/sec
total size is 4.57G  speedup is 222553.34
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;problem-the-second---excluded-directories&quot;&gt;Problem the Second - Excluded Directories&lt;/h1&gt;

&lt;p&gt;My next issue was that I wanted to exclude the Library directory from the files being synced.  This would eliminate all the giant Docker files that are stored in Library (and Library mostly isn't needed since it is Application level stuff; not really user data).&lt;/p&gt;

&lt;p&gt;Here was my first attempt:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ rsync -avh --exclude '/Users/sjohnson/Library/' -e ssh ~ 192.168.1.25:/Users/sjohnson/backups/seas
Password:
building file list ... rsync: opendir &quot;/Users/sjohnson/Library/Application Support/CallHistoryTransactions&quot; failed: Operation not permitted (1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So that clearly failed.  Now I've long been aware that Apple has old versions of core open source tools like rsync, so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ rsync --version
rsync  version 2.6.9  protocol version 29
Copyright (C) 1996-2006 by Andrew Tridgell, Wayne Davison, and others.
&amp;lt;http://rsync.samba.org/&amp;gt;
Capabilities: 64-bit files, socketpairs, hard links, symlinks, batchfiles,
              inplace, IPv6, 64-bit system inums, 64-bit internal inums

rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you
are welcome to redistribute it under certain conditions.  See the GNU
General Public Licence for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Clearly the 2006 copyright date is a problem.  This calls for brew!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install rsync
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, naturally, brew does &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html&quot;&gt;shell magic trickery&lt;/a&gt; that messed up for me.  Happily tho rsync is just an executable that I can fully path to (all brew executables always end up in /usr/local/bin):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/rsync --version
rsync  version 3.1.3  protocol version 31
Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.
Web site: http://rsync.samba.org/
Capabilities:
    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,
    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,
    append, ACLs, xattrs, iconv, symtimes, no prealloc, file-flags

rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you
are welcome to redistribute it under certain conditions.  See the GNU
General Public Licence for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and that still failed but here was the magic (and Virginia, yes, the error was &lt;strong&gt;all damn mine&lt;/strong&gt;, not the version of rsync):&lt;/p&gt;

&lt;p&gt;&quot;Excluding a specific directory is same as excluding a file, just pass the relative path to the directory to the –exclude option&quot; from &lt;a href=&quot;https://linuxize.com/post/how-to-exclude-files-and-directories-with-rsync/&quot;&gt;Rsync Exclusion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So that made my rsync command this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh --exclude 'Library/' -e ssh ~ 192.168.1.25:/Users/sjohnson/backups/seas
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that worked like a charm.  Sigh.  Always read the docs well if at all possible.&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/07/24/bullshite-rsync-subtleties.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/07/24/bullshite-rsync-subtleties.html</guid>
        
        <category>osx</category>
        
        <category>rsync</category>
        
        <category>mac</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Getting Around the Makara ActiveRecord Proxy</title>
        <description>&lt;p&gt;One of the key approaches to database scalability is the use of a replica server so that read only queries (i.e. SELECT queries) get shunted away from the master database.  When you use a framework based approach to development such as Rails, this is generally implemented as an ActiveRecord connector that sits between your SQL and the server on which it gets executed.  One such example is &lt;a href=&quot;https://github.com/taskrabbit/makara&quot;&gt;Makara&lt;/a&gt; from TaskRabbit.&lt;/p&gt;

&lt;p&gt;The problem here is that not all SELECT queries are created equally and not all select queries can run correctly on a replica.  I recently had the situation where a given query was complex enough (think 500+ lines of select query) that it could only execute on the replica server maybe 3 times out of 10 with a 45 plus second runtime.  I was assured by the query author that this would execute correctly on the production database.  And while I was absolutely dubious about this, I realized that there was literally no way to prove this without getting around Makara.&lt;/p&gt;

&lt;p&gt;I looked at Makara and like a lot of gems, I didn't find the documentation much to my liking (although I had a hint that if I got funky with it, it might work) but then I saw this little snippet:&lt;/p&gt;

&lt;p&gt;&quot;Calls inside a transaction will always be sent to the master (otherwise changes from within the transaction could not be read back on most transaction isolation levels)&quot;&lt;/p&gt;

&lt;p&gt;And that gave me this example (not the real sql; just something I had open in a db console):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;results = ActiveRecord::Base.transaction do 
  ActiveRecord::Base.connection.select_rows
  (&quot;
  select user_id, date_created_at, sum(int_val) from metrics where habit_id = 2 
  group by date_created_at order by date_created_at desc LIMIT 10;
  &quot;) 
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, sure enough, that worked.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/23/getting-around-the-makara-activerecord-proxy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/23/getting-around-the-makara-activerecord-proxy.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Need to Write</title>
        <description>&lt;p&gt;I'm a long time blogger and from time to time I get people asking me how I produce as many words as I do.  I know a few people looking to start writing projects and I thought I'd put together a few notes on the topic of how I'm productive.&lt;/p&gt;

&lt;h1 id=&quot;my-guidelines-for-writing-productively&quot;&gt;My Guidelines for Writing Productively&lt;/h1&gt;

&lt;p&gt;Here is the quick version of my writing guidelines:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Break the tyranny of the file&lt;/li&gt;
  &lt;li&gt;Write in smaller chunks - never chapters&lt;/li&gt;
  &lt;li&gt;Write don't format&lt;/li&gt;
  &lt;li&gt;Look into different writing tools&lt;/li&gt;
  &lt;li&gt;Realize that no one thing you write matters all that much&lt;/li&gt;
  &lt;li&gt;Measure your progress and improve on it&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;break-the-tyranny-of-the-file&quot;&gt;Break the Tyranny of the File&lt;/h2&gt;

&lt;p&gt;I haven't primarily written using a classical word processor software now since 1987 and I attribute most of my productivity to this one fact, specifically I think that I haven't had to think about files in almost 30 years.  I refer to this as &quot;breaking the tyranny of the file&quot;.  As stupid as it may sound, the need to decide how to name a file, where to locate a file, etc are all cognitive decisions that pull mental energy away from the actual writing process.  And lest you think that in 2019, files are simpler than ever, consider this dialog box from trying to close an unsaved document in Pages:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.imgur.com/a/CYHtw37.png&quot;&gt;View Pic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm sorry but this doesn't make much sense even to me (the answer here is to click Delete; sigh).&lt;/p&gt;

&lt;p&gt;The easiest way for most people to break the tyranny of the file is to use a content management system like a blog where, yes, there are files but their creation and management is hidden.  As an example, here's how I create something in my blogging tool:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll post &quot;So You Need to Write&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-or- if I want to make a draft that isn't going to go live today:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll draft &quot;So You Need to Write&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that one command builds what I need and I can then open it in my editor.  I never have to worry about filename / location / etc.&lt;/p&gt;

&lt;h2 id=&quot;write-in-smaller-chunks---never-chapters&quot;&gt;Write in Smaller Chunks - Never Chapters&lt;/h2&gt;

&lt;p&gt;Along with breaking the tyranny of the file comes the idea of working in small chunks - think sections (or posts) not chapters.  The longer the thing that you are &quot;writing&quot; is, the harder it is to hold it all in your head at once.  If you can write a long work it at the section / post level and then composite it together at the end you will find that each section is easier to write.&lt;/p&gt;

&lt;p&gt;And if you are a software developer trying to write, consider this analogy.  At one time or another, we've all written functions that were longer than one screen.  Remember how hard it was to keep all of that function in your head.  Well, working at the section level is analogous.&lt;/p&gt;

&lt;h2 id=&quot;write-dont-format&quot;&gt;3. Write Don't Format&lt;/h2&gt;

&lt;p&gt;I view formatting as the absolute bane of writing.  Tools like Microsoft Word make formatting so seductive because you feel &quot;productive&quot; but, really, you aren't being productive when you are formatting, you are just &quot;twiddling&quot; with the content.  To me one of the worst advances in modern software for writing productivity is the full integration of formatting tools right into the writing process.  From my perspective, you write and then you format as a final step before output.&lt;/p&gt;

&lt;p&gt;Note: Structural formatting like headings, inline emphasis such as bold facing / italics are fine.  I'm more referring to the &quot;let's see what this looks like with a different font / margins / etc&quot; type of twiddling.&lt;/p&gt;

&lt;h2 id=&quot;look-into-different-writing-tools&quot;&gt;4. Look Into Different Writing Tools&lt;/h2&gt;

&lt;p&gt;To paraphrase McLuhan's famous &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/The_medium_is_the_message&quot;&gt;The Medium is the Message&lt;/a&gt;&quot;, I would argue that the tool alters the output.  If all you have ever used to write is Microsoft Word, well, there is a whole world out there of writing tools that will dramatically affect how you write.  I cover these in the next section and I would strongly, strongly argue that you at least explore different tools.&lt;/p&gt;

&lt;p&gt;Note: If you're addicted to some of the actually excellent tools inside Word such as the grammar checker then you can always do what I do and copy and paste a chunk of writing into Word, let the grammar checker give you changes and then move it back.  I do this regularly.&lt;/p&gt;

&lt;h2 id=&quot;realize-that-no-one-thing-you-write-matters-all-that-much&quot;&gt;5. Realize That No One Thing You Write Matters All That Much&lt;/h2&gt;

&lt;p&gt;When you write a lot, you come to realize that no one thing actually matters all that much.  I tend to view writing as a corpus – some bits are stronger than others and the value is in the totality.  I no longer fret about if a particular piece is perfect because I have accepted that some will be and some won't be.&lt;/p&gt;

&lt;h2 id=&quot;measure-your-progress-and-improve-on-it&quot;&gt;6. Measure Your Progress and Improve On It&lt;/h2&gt;

&lt;p&gt;One of the best changes I've made for being a productive writer in 2019 is that I now benchmark my progress and I use it to motivate myself.  Here's an example&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgur.com/a/IJF29FK&quot;&gt;View Pic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I should note that my numbers here are lower than they would normally be.  A big part of the reason for that is that I wrote the tooling driving the screenshot above (new product coming soon).&lt;/p&gt;

&lt;h1 id=&quot;writing-tools&quot;&gt;Writing Tools&lt;/h1&gt;

&lt;p&gt;For the purposes of being transparent, I will tell you what writing tools I use.  But, for the sake of kittens everywhere, DO NOT use what I use.  My tool choices would likely lead to incessant, Tourette's style cursing.  I use idiosyncratic tools because I've been doing this forever and I'm an uber nerd.  These work for me and likely don't work for you.&lt;/p&gt;

&lt;h2 id=&quot;my-personal-writing-tools&quot;&gt;My Personal Writing Tools&lt;/h2&gt;

&lt;p&gt;I use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate&lt;/a&gt; as an editor&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown&lt;/a&gt; as a drop dead simple content formatter&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; as a blogging tool&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fuzzygroup/blog&quot;&gt;Github&lt;/a&gt; for content management (and Jekyll is intimately tied to github)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup&quot;&gt;gist.github.com&lt;/a&gt; for generating temporary content versions that I can show people a quick draft.  &lt;a href=&quot;https://nickjanetakis.com/&quot;&gt;Nick Janetakis&lt;/a&gt; taught me this trick.  Thanks Nick!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com&quot;&gt;Google Docs&lt;/a&gt; if I need a way for people to edit something but Google Docs WILL NOT re-produce Markdown so it is a suck ass, bullcrap tool. Argh.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To repeat, do not try and use these tools the way I do.  After all, I modeled my writing process after the way I do software development right down to using git …&lt;/p&gt;

&lt;h3 id=&quot;a-note-about-github&quot;&gt;A Note About Github&lt;/h3&gt;

&lt;p&gt;I thought my comment about using Github / git for managing my writing was my being a typically overly nerdy developer and Mark Bernstein gave me some interesting feedback:&lt;/p&gt;

&lt;p&gt;&quot;This might actually be OK advice for writers; I liked the Pragmatic Programmer’s advice, back in the day, to keep all your writing in subversion.  It's possible that Time Machine obviates some of the need for this, but it's a good idea.&quot;&lt;/p&gt;

&lt;p&gt;If you are committed to using a plain ASCII format for writing such as MarkDown or HTML then Github / git might actually be something to consider.  Do bear in mind that Git is an industrial strength tool and &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;not always the easiest thing to use&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tools-you-should-consider&quot;&gt;Tools You Should Consider&lt;/h2&gt;

&lt;p&gt;Here are the writing tools that you should look at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.com/&quot;&gt;WordPress&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eastgate.com/Tinderbox/&quot;&gt;Tinderbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eastgate.com/storyspace/&quot;&gt;Storyspace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.literatureandlatte.com/scrivener/overview&quot;&gt;Scrivener&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wordpress&quot;&gt;WordPress&lt;/h3&gt;

&lt;p&gt;If you are looking to write daily and just build that skill then I strongly recommend that you blog.  I've been blogging now since 2002 and I was one of the authors on the &lt;a href=&quot;https://www.amazon.com/Essential-Blogging-Selecting-Doctorow-Paperback/dp/B00ME3RFYA/&quot;&gt;O'Reilly Essential Blogging book&lt;/a&gt; (by the way O'Reilly, I've never once gotten a royalty check – did no copies ever sell?).  Anyway, blogging is a drop dead simple way to write that incorporates a lot of my approaches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Break the tyranny of the file&lt;/li&gt;
  &lt;li&gt;Write in smaller chunks&lt;/li&gt;
  &lt;li&gt;Write Don't Format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And if you're going to blog then WordPress is a damn fine way to do it.  And hosted WordPress is both easy and cheap; you don't need your own server.  Recommended.&lt;/p&gt;

&lt;h3 id=&quot;tinderbox--storyspace&quot;&gt;Tinderbox / Storyspace&lt;/h3&gt;

&lt;p&gt;I'm covering these tools together because they both come from the same creative mind and, to me, they are heavily interlinked (despite being different products).  Tinderbox and Storyspace are both more tools for thinking about / planning what you have to write than the writing itself.  Both tools are heavily oriented around graphical views of the structure of your writing.  And Tinderbox is specifically designed for note taking.&lt;/p&gt;

&lt;p&gt;Here is some commentary from the author:&lt;/p&gt;

&lt;p&gt;&quot;Storyspace 3 works seamlessly with Tinderbox, with which it shares files. Tinderbox is designed for making, visualizing, and analyzing notes, making it ideal for the early stages of ambitious projects. Storyspace is designed for writing and reading interlinked narrative; many writers will move freely between Tinderbox and Storyspace.&quot;&lt;/p&gt;

&lt;h3 id=&quot;scrivener&quot;&gt;Scrivener&lt;/h3&gt;

&lt;p&gt;Scrivener is the best thought-out tool I've seen for writing long form works (think books / novels) in a damn long time.   With a focus on structural views and working in small chunks, Scrivener addresses my top three concerns (tyranny of the file / smaller chunks / write don't format).  You have to be open to really learning a new tool to use Scrivener, but it is worth it.&lt;/p&gt;

&lt;h3 id=&quot;disclaimers&quot;&gt;Disclaimers&lt;/h3&gt;

&lt;p&gt;Matt Mullenweg, the founder of WordPress, is a friend and one of the coolest folks I know online.  But despite that bias, WordPress is still damn awesome.&lt;/p&gt;

&lt;p&gt;Tinderbox and Storyspace are both written by Mark Bernstein who is also a friend and has been doing this stuff even longer than I have.  I met Mark back in '87 when we both attended the first ACM Conference on Hypertext at University of North Carolina, Chapel Hill.  And while I have done a lot of different things career wise, Mark has focused exclusively on writing tools and brought a lot of good into the world that way.  I respect him greatly for this.&lt;/p&gt;

&lt;p&gt;Mark Bernstein read an early draft of this post and gave me a number of great changes.  Thank you Mark!&lt;/p&gt;

&lt;p&gt;All of the techniques above I have used extensively – for non fiction writing.  I have never tried them in a fiction context.  I suspect that they would work but I can't attest to that.&lt;/p&gt;

&lt;h1 id=&quot;in-closing&quot;&gt;In Closing&lt;/h1&gt;

&lt;p&gt;Someone I used to know once made a wonderful observation on how to be a successful writer.  It was short, succinct and beautiful in its clarity:&lt;/p&gt;

&lt;p&gt;“Fingers on keys; ass in chair”&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/writing/2019/07/22/so-you-need-to-write.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/writing/2019/07/22/so-you-need-to-write.html</guid>
        
        <category>writing</category>
        
        <category>blogging</category>
        
        <category>heinlein</category>
        
        
        <category>writing</category>
        
      </item>
    
      <item>
        <title>Backing Mac to Mac via scp / rsync</title>
        <description>&lt;p&gt;I found myself turning my old Macbook Air over to my wife to use when the cursed butterfly keyboard on her new MacBook died.  And even tho I had theoretically used Dropbox to sync my data with other machines, a quick check on this machine revealed something like 200 top level directories in ~/Dropbox while a check against my &quot;current&quot; machine revealed only 148 top level directories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHAT THE FERENGI Dropbox !!!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And that convinced me that I needed to run a backup on this machine before I turned it over to my wife.  Naturally I found that a Time Machine backup failed and, honestly, I found myself with little desire, inclination or will to fix Time Machine.&lt;/p&gt;

&lt;p&gt;This led me to attempt to backup this Mac via an scp command to my big desktop Mac which has plenty of free disc space.  So I used this shell command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -p -r ~/Downloads/* 192.168.1.25:/Users/sjohnson/backups/macbook_air/Downloads/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;as a test command to backup the ~/Downloads directory from one machine to another.  And, annoyingly, I found that after only a few gigabytes, my scp would fail with a networking error.  After trying this again (and again and again), I came to the conclusion that I was fighting an untenable battle that felt a lot like a land war in Asia.  And this led me to Google which, rapidly, led me to rsync, a tool I love but which I never seem to think to use.  Here was the command I finally came up with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Downloads/* 192.168.1.25:/Users/sjohnson/backups/macbook_air/Downloads/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In case you aren't aware, the benefit to &lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;rsync&lt;/a&gt; is that it will keep track of your progress to date and resume incomplete copies.&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/07/22/backing-mac-to-mac-via-scp-rsync.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/07/22/backing-mac-to-mac-via-scp-rsync.html</guid>
        
        <category>osx</category>
        
        <category>backup</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Employee Transitions - Don't Kill Your Organizational Memory</title>
        <description>&lt;p&gt;A lot of companies have moved to organizational chat systems like Slack or the late, unlamented HipChat.  And, from what I have seen, none of those companies have ever dealt with employee transitions in a remotely rational fashion.  Here's what generally happens:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Employee leaves.&lt;/li&gt;
  &lt;li&gt;Slack / HipChat / whatever chat account is promptly deleted.&lt;/li&gt;
  &lt;li&gt;I lose all access to ANY and ALL conversations with that previous employee forever.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What.  The.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Fsck&quot;&gt;Fsck&lt;/a&gt;*?  This makes no actual sense.  Chat has become the organizational memory for what happens in a company.  Now let's move to an actual, specific example.  At my day job we just had a manager depart during a re-org.  These things happen and I really don't know the specifics.  What I do know is that this was my damn manager and he was directly involved in the project I'm on.  If I hadn't, &lt;strong&gt;painstakingly&lt;/strong&gt; copied every single slack message he and I ever had, all 20 odd plus pages of them, to a text file, I would have lost much of my knowledge of the project including important details like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Who at the client I was supposed to speak with&lt;/li&gt;
  &lt;li&gt;The API keys that define connectivity&lt;/li&gt;
  &lt;li&gt;The schedule&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I might have been able to remember the people at the client and I do have a vague memory of the schedule but a high entropy api key like this:&lt;/p&gt;

&lt;p&gt;afdjklfdsaj294u324,asdfmafrwae6435%1 (not the real api key; I'm annoyed but not an idiot)&lt;/p&gt;

&lt;p&gt;I'll never remember that.  And since I wasn't ready to use it yet, I just left it in my chat client for the time being.  Is this the right place for an API key?   Nope.  But in the real world, chat is often the communications mechanism for delivery of things like API keys.&lt;/p&gt;

&lt;h1 id=&quot;in-closing-email-versus-chat&quot;&gt;In Closing, Email versus Chat&lt;/h1&gt;

&lt;p&gt;It is always interesting to me that organizations would never delete emails that were sent to me from employees who have left (I just confirmed that I have every email ever from employees who quit).  So why is chat different?&lt;/p&gt;

&lt;p&gt;*Yes this is a slightly more polite, much, much more nerdy way of saying &quot;fuck&quot;.  It refers to the fsck utility which checks file system integrity and the fact that when you need to run fsck, you're first word is generally &quot;fuck&quot;.&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/07/20/employee-transitions-don-t-kill-your-organizational-memory.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/07/20/employee-transitions-don-t-kill-your-organizational-memory.html</guid>
        
        <category>startup</category>
        
        <category>hr</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Using redis-cli on An Encrypted AWS Redis Server</title>
        <description>&lt;p&gt;So I find myself needing to use &lt;a href=&quot;https://redis.io/topics/rediscli&quot;&gt;redis-cli&lt;/a&gt; to modify the keys on a running Redis instance to deal with a few &lt;a href=&quot;https://github.com/mperham/sidekiq/blob/master/Changes.md#413&quot;&gt;Sidekiq issues&lt;/a&gt;.  And, much to my surprise, I can't simply connect to it and make changes because I keep getting &lt;strong&gt;Error: Connection reset by peer&lt;/strong&gt; errors.  A bit of a deep dive taught me this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Our redis instance is encrypted both at rest and in transit&lt;/li&gt;
  &lt;li&gt;The way to do this is to connect to it via stunnel which builds a secure tunnel&lt;/li&gt;
  &lt;li&gt;You have to supply the password on the command line to redis-cli; this surprised me because it leaves the password in the shell history and that's fscking awful for security; grumble, grumble, grumble&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some references that I followed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html&quot;&gt;AWS Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://datanextsolutions.com/blog/how-to-fix-redis-cli-error-connection-reset-by-peer/&quot;&gt;Data Next Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the steps I followed:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I started by installing stunnnel.&lt;/li&gt;
  &lt;li&gt;I continued by building a mapping for stunnel to the redis server I wanted to mess with.  This required getting the redis server url from our application's settings.&lt;/li&gt;
  &lt;li&gt;Start the tunnel&lt;/li&gt;
  &lt;li&gt;Verify that the tunnel is running.&lt;/li&gt;
  &lt;li&gt;I connected to redis-cli passing the -a password option.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I was able to then verify that redis-cli works correctly by doing a simple set / get:&lt;/p&gt;

    &lt;p&gt;set a &quot;hello&quot;
get a&lt;/p&gt;

    &lt;p&gt;&quot;hello&quot;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And this positioned me for being able to run a redis-cli keys command.  Of course the keys routine I needed to run was error full but that's another story …&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2019/07/18/using-redis-cli-on-an-encrypted-aws-redis-server.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2019/07/18/using-redis-cli-on-an-encrypted-aws-redis-server.html</guid>
        
        <category>redis</category>
        
        <category>aws</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>Adding Quick and Dirty JSON Serialization to Database Objects</title>
        <description>&lt;p&gt;So let's say that you're building a system where you need to configure things like measurements and you know that some people like pounds and some people like kilograms.  One option is to hard code a database structure where you have an attribute for each.  And while that works, there are always going to be some more measurement types in the world and this approach leads you to an endless array of sucking database column changes.&lt;/p&gt;

&lt;p&gt;Another approach is to add a text column to your database and store a JSON blob in it.  Rails actually makes this pretty easy with a migration and a declaration:&lt;/p&gt;

&lt;p&gt;Migration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AddUnitPreferencesJsonToUsers &amp;lt; ActiveRecord::Migration[5.2]
  def change
    add_column :users, :options, :text
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Declaration at the top of your class:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serialize :options, JSON
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will now add an options column to your table where you can store anything.  And since there is a serialize call, it will even act like an attribute so you can say something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user = User.first
user.options
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and get back:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;length&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;inches&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;weight&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;pounds&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;hours&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if you really, really like working on a REPL like I do then you can set this globally for all users with this snippet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;users = User.all
users.each do |user|
  user.options = options = { &quot;length&quot; =&amp;gt; &quot;inches&quot;, &quot;weight&quot; =&amp;gt; &quot;pounds&quot;, &quot;time&quot; =&amp;gt; &quot;hours&quot; }
  user.save
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Easy - no fuss, no muss, no need to write code in an editor for a one time, one off fix.&lt;/p&gt;

&lt;p&gt;And just to be clear, you can do a better job with this by really following the instructions.  Here's an &lt;a href=&quot;https://codeburst.io/json-serialized-columns-with-rails-a610a410fcdf&quot;&gt;example from CodeBurst&lt;/a&gt; which includes custom serializers.  Recommended&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/18/adding-quick-and-dirty-json-serialization-to-database-objects.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/18/adding-quick-and-dirty-json-serialization-to-database-objects.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Never Type Bundle Exec Again</title>
        <description>&lt;p&gt;The command prefix &quot;bundle exec&quot; is something that I've typed probably a thousand, thousand, thousand times.  The bundle exec prefix goes in front of so many damn Rails commands and while I've seen other developers alias it to &quot;be&quot;, that never felt right to me.  And now there's a workaround where I don't even have to type that thanks to the miracle of &lt;a href=&quot;https://en.wikipedia.org/wiki/Z_shell&quot;&gt;Z-Shell&lt;/a&gt; and &lt;a href=&quot;https://ohmyz.sh/&quot;&gt;Oh My Zsh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Edit your ~/.zshrc and add search for the word plugins and then change that line to this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins=(git bundler brew gem heroku)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then you and to do a source on it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then you can do this magic:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g migration add_frequency_and_economic_value_to_habits
  invoke  active_record
  create    db/migrate/20190717211807_add_frequency_and_economic_value_to_habits.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that makes my life better by 13 characters that I'm never going to have to type again.  Honest to the FSM, I'm mildly aroused right now …&lt;/p&gt;

&lt;p&gt;And thank you to &lt;a href=&quot;https://coderwall.com/p/weixga/no-more-bundle-exec-with-oh-my-zsh&quot;&gt;CoderWall&lt;/a&gt; for publishing this originally.&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/17/never-type-bundle-exec-again.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/17/never-type-bundle-exec-again.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
  </channel>
</rss>
