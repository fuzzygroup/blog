<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 01 Feb 2017 04:25:17 -0500</pubDate>
    <lastBuildDate>Wed, 01 Feb 2017 04:25:17 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Improving Productivity Thru Better Terminal Tabs</title>
        <description>
</description>
        <pubDate>Wed, 01 Feb 2017 03:23:38 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/01/improving-productivity-thru-better-terminal-tabs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/01/improving-productivity-thru-better-terminal-tabs.html</guid>
        
        
      </item>
    
      <item>
        <title>Improving Productivity Thru Tabs</title>
        <description>
</description>
        <pubDate>Wed, 01 Feb 2017 03:23:28 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/01/improving-productivity-thru-tabs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/01/improving-productivity-thru-tabs.html</guid>
        
        
      </item>
    
      <item>
        <title>Surviving the Whole 30</title>
        <description>
</description>
        <pubDate>Wed, 01 Feb 2017 03:10:23 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/01/surviving-the-whole-30.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/01/surviving-the-whole-30.html</guid>
        
        
      </item>
    
      <item>
        <title>Startup Learnings The Smartest Thing I've Ever Seen PayPal Do</title>
        <description>&lt;p&gt;PayPal is one of those companies that we all love to hate.  They work with money so we all feel about PayPal the way we sort of naturally feel about banks – mildly distrustful.  Also the tales of PayPal woes are legendary.  And then there are the login / password issues that seem to surround PayPal like a cloud of flies.  All of that has always made me think that PayPal got to where it is now by luck but I’m really starting to reconsider that.  In fact my current thinking is that we should all realize that PayPal is &lt;strong&gt;smart&lt;/strong&gt;. And when I say smart, I am starting to think that PayPal is &lt;em&gt;Amazon Smart&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In order to explain this I have to disclose a personal preference of mine – if I have a choice as to a software engineer’s nationality, I always tend to lean British.  I’ve had remarkable success over the years in hiring British software engineers and, more than any other nationalities, the results have skewed dramatically positive.  I’m not sure whether it is the educational system, the way they refer to computers as ‘kit’, extensive reading of Dick Pountain when I was young causing me bias, the fact that all the engineers my age learned on either a Sinclair or a BBC Micro (systems so limited that they forced you to be good to survive) or something else but something about the U.K. seems to produce great software engineers.&lt;/p&gt;

&lt;p&gt;And because I tend to lean British in my software engineer hiring, I tend to favor British Linux magazines.  Even though I live in the U.S. and the subscriptions are frightfully expensive, I still get print subscriptions to &lt;a href=&quot;https://www.linuxformat.com/&quot;&gt;Linux Format&lt;/a&gt; and &lt;a href=&quot;http://www.filesilo.co.uk/LinuxUser/&quot;&gt;Linux User&lt;/a&gt;.  These magazines are &lt;strong&gt;fantastic&lt;/strong&gt; – they remind me of Byte Magazine back in its early 1980s hey day when every issue taught you something new.&lt;/p&gt;

&lt;p&gt;Earlier this morning I had to set up a new subscription to Linux User and when my credit card failed due to some U.S. / U.K. thing, I opted to use PayPal instead and I got this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/paypal_is_smart.png&quot; alt=&quot;paypal_is_smart.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This was new to me but perhaps PayPal has been doing it for years and I just never knew.  For some reason, however, this felt to me to be a new feature.&lt;/p&gt;

&lt;p&gt;What PayPal is doing here is recognizing that non local currency transactions are a combination of &lt;strong&gt;hard&lt;/strong&gt; and &lt;strong&gt;scary&lt;/strong&gt; for people.  Most of us, at least Americans for certain, never really have a clue about a foreign currency transaction except we sometimes know “Ok a Euro or a pound is roughly about a dollar”.  And when prices are in something truly foreign like Yen, well, don’t even ask us.  What PayPal is brilliantly doing here is recognizing this and saying to the user:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I know this is hard for you so here’s the actual transaction value and I’m going to actually charge you for the privilege of my doing a teeny, tiny bit of math (and taking some risk).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The fact that I can look at 80 pounds and be told that it is $103.58 gives me much more confidence in the transaction.  Even though I can read the screen and &lt;strong&gt;know&lt;/strong&gt; that I’m being charged (quite a bit actually) for just knowing this, well, it certainly made me feel good.  And, yes, I took them up on it.  PayPal has seriously removed an impediment to commerce here.&lt;/p&gt;

&lt;p&gt;You should note that if you’re not American, I suspect you’re thinking something like “Dude – it is just an exchange rate, deal with it!”.  And that is certainly true but Americans don’t have to deal with exchange rates anywhere near as often as non-Americans.  America’s geography is so vast that you can spend decades here without leaving America whereas most Europeans that I know think nothing of crossing national borders even over a weekend.&lt;/p&gt;

&lt;p&gt;The lesson here for startups is that you can always make money by making hard or scary things easier for people.  The simple fact that right after buying this I have to file an expense for it means that I don’t want to wait for a credit card statement.  By paying PayPal that additional 2.5%, I know exactly what I spent and I can file my expense report immediately.&lt;/p&gt;

&lt;p&gt;Once again I’m going to repeat it: &lt;strong&gt;PayPal is smart&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/startup/2017/02/01/startup-learnings-the-smartest-thing-i-ve-ever-seen-paypal-do.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/startup/2017/02/01/startup-learnings-the-smartest-thing-i-ve-ever-seen-paypal-do.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Linux Tip Of The Day - lsblk</title>
        <description>&lt;p&gt;I suspect a lot of these tips are going to end up being about storage – even today storage is such a pain point.  The lsblk command shows you what block storage devices are hooked up to your Linux system.  This is really useful for when you attach a new device and need to write a mount statement for /etc/fstab.  Personally I use this a lot when I’m using different AWS volumes for organizing my storage.&lt;/p&gt;

&lt;p&gt;There’s nothing to install – lsblk appears to be a standard command for most *nix systems.&lt;/p&gt;

&lt;p&gt;Here’s an example of lsblk without any options:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://fuzzyblog.io/blog/assets/lsblk.png&quot; alt=&quot;http://fuzzyblog.io/blog/assets/lsblk.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Personally I find the -l option most useful:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://fuzzyblog.io/blog/assets/lsblk-l.png&quot; alt=&quot;http://fuzzyblog.io/blog/assets/lsblk-l.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also useful is the -m option which shows permissions:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://fuzzyblog.io/blog/assets/lsblk-m.png&quot; alt=&quot;http://fuzzyblog.io/blog/assets/lsblk-m.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2017/02/01/linux-tip-of-the-day-lsblk.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2017/02/01/linux-tip-of-the-day-lsblk.html</guid>
        
        <category>linux_tip_of_the_day</category>
        
        <category>linux</category>
        
        <category>sys_admin</category>
        
        <category>aws</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Delete Key on OSX</title>
        <description>&lt;p&gt;The Fn + Delete key on macOS == Delete key on Win/Linu&lt;/p&gt;

&lt;p&gt;https://news.ycombinator.com/item?id=13516755&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jan 2017 20:56:56 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/31/delete-key-on-osx.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/31/delete-key-on-osx.html</guid>
        
        
      </item>
    
      <item>
        <title>Linux Tip Of The Day dig</title>
        <description>&lt;p&gt;dig appdata.com&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jan 2017 16:06:43 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/31/linux-tip-of-the-day-dig.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/31/linux-tip-of-the-day-dig.html</guid>
        
        
      </item>
    
      <item>
        <title>Working with Windows 10 Pro HyperVisor When You Are a Mac Guy</title>
        <description>&lt;p&gt;So that &lt;a href=&quot;http://fuzzyblog.io/blog/aws/2017/01/26/s3-ruby-api-programming-tip.html&quot;&gt;data center migration&lt;/a&gt; that I mentioned recently has turned into not, well a disaster, but a bit of challenge.  The problem at hand was how to get data off three large MySQL databases, about 4 terabytes in size and then capture whatever else was desired and do it all in about 10 days to avoid getting hit with another $5 K data center monthly fee.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want a hilarious tale of how this data actually got to the data center in the first place then I highly recommend &lt;a href=&quot;http://fuzzyblog.io/blog/humor/2014/08/21/anatomy-of-a-business-trip-gone-horribly-wrong.html&quot;&gt;Anatomy of a Business Trip Gone Horribly Wrong&lt;/a&gt;.  It was awful at the time but it is funny as hell now.  It is also the last time I was in New York, pretty close to where the person who helped me on this actually lives.  Small, small world.&lt;/p&gt;

&lt;p&gt;All of this data was in Ubuntu virtual machines apparently hosted under Windows Server Hyper-V.  Why any hosting company worth their salt would ever opt to run a *nix based operating system under the Windows Hyper-V, well, I don’t understand.  Sigh.  I’ll come back to this if I have the mental energy to engage in a rant.&lt;/p&gt;

&lt;p&gt;My initial approach was to roll a custom backup solution which took a prioritized list of databases and tables and them dumped the data using mysqldump, split the data with the unix split tool and then gzipped each split file.  Finally it uploaded it to S3, deleting its in process work files as it goes.  Yes this sounds awfully convoluted but rolling your own means that you actually understand what it is in and isn’t doing – something critical when you are know the original hardware is going away forever.  And since I didn’t have much in the way of free disc space, this could not be done all at once.&lt;/p&gt;

&lt;p&gt;Using this approach we transferred over 400 gigs of data to S3.  Given that this was gzip compressed data without the MySQL index overhead, which takes up a huge amount of the raw disc space, we got a sizable percentage of the data.  And, yes, that’s why I blogged about &lt;a href=&quot;http://fuzzyblog.io/blog/linux/2017/01/29/linux-tip-of-the-day-use-bmon-for-bandwidth-monitoring.html&quot;&gt;bmon&lt;/a&gt; recently – I was monitoring these transfers.&lt;/p&gt;

&lt;p&gt;Naturally, by the power of Murphy’s Law, I wasn’t able to get it all.  So this called for mechanism #2 – hard drives.  I delivered to the data center several three terabyte drives with instructions to the effect of “Get these mounted and I’ll do the rest”.  My plan was to just use ansible to recursively copy the directory structures onto the hard drives, get the drives back and then go on my merry way.  Remember – all I wanted was the data.&lt;/p&gt;

&lt;p&gt;Sadly the hosting company was never able to get these hard drives to show up in the Ubuntu virtual machine that is running under the Windows Hyper-V.  I don’t understand why but since I wasn’t physically in the data center, I couldn’t do much about it.  With time running out the hosting company suggested “Why don’t we just copy the virtual machines onto the hard drives and then you can have your exact environment and do what you want”.&lt;/p&gt;

&lt;p&gt;That sounds great, doesn’t it?  I mean who wouldn’t want their old servers back, right?  Well, &lt;strong&gt;me&lt;/strong&gt; actually.  Once again, what I wanted was &lt;strong&gt;my data&lt;/strong&gt;.  I didn’t want the virtual machines but since I have them, here’s how I went about using them.&lt;/p&gt;

&lt;p&gt;My thanks go out to &lt;a href=&quot;http://www.nickjanetakis.com/blog/&quot;&gt;Nick&lt;/a&gt; who walked me thru large parts of this and edited this documentation.  I’m a *nix guy who last used Windows XP in 2004.  The experience was, well, illuminating to say the least.  I’m sure that I will return to this in a future blog post.&lt;/p&gt;

&lt;p&gt;Here were the initial steps that I had to follow to get ready to use these virtual machines.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Buy a Windows laptop&lt;/strong&gt;.  This was the first step.  I took a trip to the local &lt;a href=&quot;http://www.frys.com/&quot;&gt;Frys&lt;/a&gt; and managed to find a refurbished HP laptop for only $500.  The key thing here is that you need Windows 10 Pro.  If you don’t have Windows 10 Pro you don’t have the Hyper-V tools.  And since Windows 10 Pro is about $200, well, it really is cheaper to buy it installed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Set the BIOS Options to Enable Virtualization&lt;/strong&gt;.  Every BIOS is different so I can’t tell you where / how to do this.  I had to press F10 during the boot process and navigate thru all the options until I found the virtualization options and turned them on.  If you don’t do this then the HyperVisor itself won’t start and you won’t be able to run virtual machines.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Install the HyperV Manager in Windows&lt;/strong&gt;.   We enabled hyper-v by searching for “windows features” and then turned it on.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Connect the USB Drive / Drives&lt;/strong&gt;.  This was just a plug and play operation so piece of cake.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Label the Physical Drives&lt;/strong&gt;.  This is optional but since I have 26 virtual machines spread across three physical hard drives so I used my label maker to indicate which virtual machines are on which hard drive.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once I had the hard drives attached, the next step was to actually deal with the virtual machines.  Even though I had actual .vhdx virtual machine files, for some bizarre reason, I was unable to use them directly.  Instead I had to recreate the virtual machine from scratch, yes, 26 times, and then attach the .vhdx file as a drive.  This process was something like this:&lt;/p&gt;

&lt;p&gt;Note: I say “something like this” because I’m writing this from memory after a long, long day.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the HyperVisor Manager, start by creating a virtual network interface.  This needs to be your very &lt;strong&gt;first&lt;/strong&gt; step because without it you can’t attach the .vhdx files – you wil die on errors like “Hyper-V encountered an error while configuring the network on New Virtual Machine”.  This should be called NIC#1 or at least this is what I needed.&lt;/li&gt;
  &lt;li&gt;Create a new virtual machine and walk thru the steps and in the last step browse to the .vhdx file and select it.&lt;/li&gt;
  &lt;li&gt;But if your vhdx file is actually in two parts then you don’t want to browse to the .vhdx file at all.  Instead create the virtual machine and then edit its settings after the fact and attach the multiple .vhdx files at that stage.&lt;/li&gt;
  &lt;li&gt;Once your .vhdx files are attached as per #2 or #3 then you can actually make use of them.  Remember that these really are virtual machines and, well, you still have some hoops to jump through.  The first step is to turn on the virtual machine.&lt;/li&gt;
  &lt;li&gt;After the virtual machine is running you then need to connect to it.  And this, dear reader, is where you will be confronted by a login prompt – and you will realize that you’ve been using SSH keys to login for over two years now and you have &lt;strong&gt;no idea&lt;/strong&gt; what the password is.&lt;/li&gt;
  &lt;li&gt;A quick email back to the data center staff will elicit information like “well it might be this username and this password or it might be this other username and this other password”.&lt;/li&gt;
  &lt;li&gt;Here’s where I’m going to argue against rational security practices and say use your label maker again and attach the different username / password combos physically to each backup hard drive.  Trust me – when I need this data for real sometime in the next six months I’m going to be wondering where the heck that text message with the details disappeared to.&lt;/li&gt;
  &lt;li&gt;Once you’ve resolved the username and password info you can actually get into a database server virtual machine and verify that, well, it appears to be actual data.  I mean the directories appear to be there and the data appears to be real.  Huzzah!&lt;/li&gt;
  &lt;li&gt;You &lt;strong&gt;sudo su&lt;/strong&gt; to root and the do a &lt;strong&gt;passwd actual_username&lt;/strong&gt; and reset that password to something insecure but easy (again these are virtual machines on hard drives on a development laptop; its ok).&lt;/li&gt;
  &lt;li&gt;And then the grim spectre of reality strikes – you go and start MySQL and you get this wonderful kick to the nuts: “The partition with /var/lib/mysql is too full”.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that’s where I stopped.  As best I can tell I actually have the data and the virtual machines but I don’t know if the data is actually valid.  My guess is that verifying this is likely about a full week of repetitive, manual, unscriptable work.&lt;/p&gt;

&lt;p&gt;Here are some screenshots I captured along with way.  And yes, because I don’t have the equivalent of command+shift+4 on OSX, I used my phone.  Alas.&lt;/p&gt;

&lt;h2 id=&quot;windows-hardware-on-my-desk&quot;&gt;Windows Hardware On My Desk&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/hyperv_hardware.jpg&quot; alt=&quot;hyperv_hardware.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-error-when-you-dont-have-a-virtual-network-adapter&quot;&gt;The Error when You Don’t have a Virtual Network Adapter&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/hyperv_error.jpg&quot; alt=&quot;hyperv_error.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-hyperv-manager&quot;&gt;The HyperV Manager&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/hyperv_manager.jpg&quot; alt=&quot;hyperv_manager.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;an-ubuntu-virtual-machine-running-under-hyperv&quot;&gt;An Ubuntu Virtual Machine Running Under HyperV&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/hyperv_mounted_filesystem.jpg&quot; alt=&quot;hyperv_mounted_filesystem.jpg&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 31 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/devops/2017/01/31/working-with-windows-10-pro-hypervisor-when-you-are-a-mac-guy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/devops/2017/01/31/working-with-windows-10-pro-hypervisor-when-you-are-a-mac-guy.html</guid>
        
        <category>devops</category>
        
        <category>sysadmin</category>
        
        <category>windows</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Linux Tip of the Day inotifywait</title>
        <description>&lt;p&gt;My podcast listening, which has always been on the nerdy side, has recently taken a trip down the far, far nerdier rabbit hole.  Whereas I used to listen to things with at least some connection to pop culture such as &lt;a href=&quot;http://majorspoilers.com/category/podcast/&quot;&gt;Major Spoilers&lt;/a&gt;, I now find myself listening to the &lt;a href=&quot;http://ubuntupodcast.org/&quot;&gt;Ubuntu Podcast&lt;/a&gt;, a British podcast covering the Ubuntu community.  It was there that I learned about inotifywait and I had a feeling it was brilliant.  I tried it out and it is brilliant!&lt;/p&gt;

&lt;p&gt;To install on Linux, use:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install inotify-tools&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since inotify is a Linux api this doesn’t exist for OSX but you can use an open source tool called notifywait available &lt;a href=&quot;https://github.com/ggreer/fsevents-tools&quot;&gt;here&lt;/a&gt;.  Alternatively there is fswatch which can be easily installed with &lt;strong&gt;brew fswatch&lt;/strong&gt;.  Please note that I didn’t try either.&lt;/p&gt;

&lt;p&gt;The inotifywait utility takes a few command line parameters and then tells you all file accesses that go on in that directory.  This sounds a bit obscure but here’s how I tested it last night:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;inotifywait ~ -mr&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This tells inotifywait to run on the ~ or home directory and monitor it forever (the m flag) and r tells it to monitor recursively on all directories below the current.&lt;/p&gt;

&lt;p&gt;Here’s an example of its output once I set it monitoring in one shell window on a server after I logged into the same box in a different shell window and then touched the file foo.txt:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/inotifywait.png&quot; alt=&quot;inotifywait.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The really interesting here is that while I sort of know that the bash prompt initialization pattern is .profile and then  .bashrc but I’ve never &lt;strong&gt;seen&lt;/strong&gt; it before.  I have a feeling that I’ll understand this better from now on.&lt;/p&gt;

&lt;p&gt;Not only is this useful for sysadmin / devops work but I can see it being highly useful for application developers. Sometimes the files you are touching or your io access patterns are not always apparent.  Using inotifywait makes them obvious.&lt;/p&gt;

&lt;p&gt;Different events can even be monitored with the –e flag.  Here’s what you can monitor for:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Events:
	access		file or directory contents were read
	modify		file or directory contents were written
	attrib		file or directory attributes changed
	close_write	file or directory closed, after being opened in
	           	writable mode
	close_nowrite	file or directory closed, after being opened in
	           	read-only mode
	close		file or directory closed, regardless of read/write mode
	open		file or directory opened
	moved_to	file or directory moved to watched directory
	moved_from	file or directory moved from watched directory
	move		file or directory moved to or from watched directory
	create		file or directory created within watched directory
	delete		file or directory deleted within watched directory
	delete_self	file or directory was deleted
	unmount		file system containing file or directory unmounted
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 31 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2017/01/31/linux-tip-of-the-day-inotifywait.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2017/01/31/linux-tip-of-the-day-inotifywait.html</guid>
        
        <category>linux_tip_of_the_day</category>
        
        <category>linux</category>
        
        <category>git</category>
        
        <category>sys_admin</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Rails New with .</title>
        <description>&lt;p&gt;rails new . –api –d=mysql –skip-spring –skip-listen&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Jan 2017 10:22:28 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/30/rails-new-with.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/30/rails-new-with.html</guid>
        
        
      </item>
    
  </channel>
</rss>
