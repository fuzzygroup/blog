<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 01 Dec 2016 07:01:57 -0500</pubDate>
    <lastBuildDate>Thu, 01 Dec 2016 07:01:57 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Debugging Christmas Lights</title>
        <description>&lt;p&gt;In any family, over time, you specialize in your roles.  This is similar to a work environment where one person gets good at an aspect of the code base and then that person gets tasked with it on a regular basis.  In an ideal world everyone would always be 100% capable at all aspects of the code but we all know that’s generally not the case.  In our family, Dad (me) puts up the Christmas lights.  Part of it is that I don’t mind heights terribly, not the same as saying I like them but you get it but the other part of it is that &lt;em&gt;debugging crap that doesn’t work&lt;/em&gt; is really my very job definition.  And, a few days ago I wanted this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/debugging_xmas_lights.jpg&quot; alt=&quot;debugging_xmas_lights.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;but after 10 minutes or so I got this instead:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/debugging_xmas_lights2.jpg&quot; alt=&quot;debugging_xmas_lights2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And while I was initially reminded of the Bob Rivers / Twisted Christmas album - “I plug in one light and THEY ALL #$#(&lt;em&gt;$&lt;/em&gt;#) go OUT”, that wasn’t this.  Everything worked perfectly – until it all stopped.  Sigh.&lt;/p&gt;

&lt;p&gt;The very essence of debugging is the quest for understanding and your key tool is &lt;em&gt;persistence&lt;/em&gt;.  I’ve worked with a lot of smart people in my life, many of them dramatically smarter than I am but I haven’t worked with many people who are as persistent.  Whether you are debugging software, hardware or even christmas lights, &lt;em&gt;persistence&lt;/em&gt; is what you want.  If you just think of yourself as a dog with a bone, that’s the right image.&lt;/p&gt;

&lt;p&gt;Ok then.  The first step was to get out the tools.  Happily I recently bought a &lt;a href=&quot;https://www.amazon.com/gp/product/B019EJXUJU/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;non-contact AC voltage tester from Amazon&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/non_contact_tester.jpg&quot; alt=&quot;debugging_xmas_lights2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What this does is essentially &lt;em&gt;sniff&lt;/em&gt; electricity.  I’m not enough of a hardware guy to really understand it but I tried it and it works!  Given that I was doing this on a rainy day, not having to manipulate two test leads or a digital volt ohm meter was a huge, huge win.  This little gadget is actually sensitive enough that you can touch it to the end of a lightning cable and it will detect the voltage there so, apparently, it does both DC and AC.  Oh and did I mention it has an LED pen light built into it?  This thing rocks!&lt;/p&gt;

&lt;p&gt;Whenever you have something, related to electricity, that happens after a period of latency, the natural suspect is somehow thermal or load related.  But here was the aggregate load:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 power strip&lt;/li&gt;
  &lt;li&gt;4 strings of relatively low voltage lights&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/gp/product/B01JBTO16E/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;Christmas Laser Projector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two of the strings and the projector were all plugged into a contractor grade, 20 amp, thick as hell extension cord coming from a GFCI outlet.  Call this one Big Green.  The remaining two strings were plugged into a separate contractor grade cord but one that was only 15 amp.  And call this Little Orange.  Both of these have served me thru tree house building, home remodeling, etc.&lt;/p&gt;

&lt;p&gt;This isn’t sufficient load to trip a breaker.  I grew up doing AC wiring stuff so I have no issues stating that as a fact.&lt;/p&gt;

&lt;p&gt;So if we think of this in terms of debugging here are the different components at hand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;power strip&lt;/li&gt;
  &lt;li&gt;light string 1&lt;/li&gt;
  &lt;li&gt;light string 2&lt;/li&gt;
  &lt;li&gt;light string 3&lt;/li&gt;
  &lt;li&gt;light string 4&lt;/li&gt;
  &lt;li&gt;extension cord 1 - Big Green&lt;/li&gt;
  &lt;li&gt;extension cord 2 - Little Orange&lt;/li&gt;
  &lt;li&gt;GFCI outlet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any one of these, or any combination of these, could be leading to this problem.  And since it only happened after 10 minutes, I knew that at a worst case I was looking at N * 10 minutes in terms of potential maximum time that I’d be trouble shooting this where N was the number of components, 8.  So this was potentially at least a 90 minute plus exercise.  Given that the amount of time involved was now known to be non trivial, it was time to start by eliminating things outright.&lt;/p&gt;

&lt;p&gt;Note: My worst case estimate was actually incorrect.  If the problem was combinatorial in nature like string 1 interacting with string 3 and causing the outage, well, I’m glad I didn’t realize this – its a lot more options.&lt;/p&gt;

&lt;p&gt;My first task was to remove the power strip.  My wife had wanted to add more lasers to the mix so that was there to support the end goal – but we don’t have them yet so it was a case of over-engineering.  So, remove powerstrip, rejigger wires, try again.  &lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My next step was to look at this in terms of overall complexity.  The most complex component is generally the one most likely to fail.  That meant that I should pull the laser projector from the mix.  Even though it was brand, stinking new, it is definitely more complex than christmas lights so out it goes.  And, once again, &lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The lights are only a year old but they are very poorly made.  Even though they are a name brand, Sylvania, they seem to epitomize the term &lt;em&gt;shite quality&lt;/em&gt;.  Some of the time just screwing a bulb in blows out the bulb due to poor socket quality.  But my wife loves the visual so the chances of my being able to route these strands of lights to /dev/null approximates zero.  Given that I have issues with the light quality, the next step is to alternately remove each string of lights in turn:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Grumble&lt;/em&gt;.  Ok then so what’s left.  At this point we’re down to two extensions cords.  Little Orange isn’t as robust as big green so let’s take that out of the loop - &lt;strong&gt;10 minute and darkness!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hm… The message seems clear – we’re down to Big Green so let’s un plug it and substitute another one:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;10 minute and LIGHT!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 more minute and still LIGHT!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 more minute and still LIGHT!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we’re good now but what went wrong?  To some extent if you debug something and you don’t actually understand the failure cause at the end then you may have won the battle but you have perhaps lost the war as the real goal should always be understanding.&lt;/p&gt;

&lt;p&gt;When I look a more detailed look at my Big Green extension cord I saw this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/big_green_big_culprit.jpg&quot; alt=&quot;big_green_big_culprit.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Apparently I’ve fixed this extension cord in the past – and then it all made sense.  If you remember I have this all going into a GFCI outlet and I also mentioned that I was doing all this in the rain.  And that was the vital clue.  GFCI stands for Ground Fault Circuit Interrupter and it is a way for an electrical outlet to automatically shut down in dangerous conditions.  Since a GFCI outlet is more expensive than a standard outlet you don’t see them everywhere but they are &lt;strong&gt;required&lt;/strong&gt; for use in commercial bathrooms due to the potential issues with respect to water and electricity.  And if your home builder was any good you likely have them in your home bathrooms for the same reason.&lt;/p&gt;

&lt;p&gt;So what seems to have been happening was that moisture was slowly affecting the Big Green extension cord.  After about 10 minutes it caused a GFCI issue which led to a power shut down.  Strangely it seemed to clear itself up almost immediately.  Odder still is that when I checked the extension cord with a circuit tester designed to catch GFCI wiring errors it reported just fine.&lt;/p&gt;

&lt;p&gt;The morals of the story seem to be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t fix your extension cord – just replace it&lt;/li&gt;
  &lt;li&gt;Debugging is the same when its software, hardware or christmas mights – it call comes down to persistence&lt;/li&gt;
  &lt;li&gt;Anything can be debugged, you just have to take it step by step, bit by bit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Merry Christmas!&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/debugging/2016/12/01/debugging-christmas-lights.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/debugging/2016/12/01/debugging-christmas-lights.html</guid>
        
        <category>debugging</category>
        
        <category>christmas</category>
        
        <category>software_engineering</category>
        
        
        <category>debugging</category>
        
      </item>
    
      <item>
        <title>Code Monkey, Software Engineer, Computer Scientist</title>
        <description>&lt;p&gt;So my buddy Nick mentioned to me that he wrote a blog post titled &lt;a href=&quot;https://nickjanetakis.com/blog/are-you-a-computer-scientist-or-a-code-monkey&quot;&gt;Are You a Computer Scientist or a Code Monkey?&lt;/a&gt; and I almost instantly had typed:&lt;/p&gt;

&lt;p&gt;jekyll post “Code Monkey, Software Engineer, Computer Scientist”&lt;/p&gt;

&lt;p&gt;I don’t actually think that he had finished talking before I had my take on this going.  So:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go read &lt;a href=&quot;https://nickjanetakis.com/blog/are-you-a-computer-scientist-or-a-code-monkey&quot;&gt;Nick’s post&lt;/a&gt;; it is good and I’ll wait.&lt;/li&gt;
  &lt;li&gt;Come back because my take on it is different.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nick looked at this in terms of are you a code monkey or are you a computer scientist.  Personally I think that this is more nuanced than that.  And I don’t think that it is impossible to actually be all of these at once depending on the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you haven’t ever listened to &lt;a href=&quot;https://www.youtube.com/watch?v=v4Wy7gRGgeA&quot;&gt;Jonathan Coulton’s Code Monkey&lt;/a&gt; then you absolutely should.  It is one of the very best, most self aware coding songs anyware.  I have it as the top play in my iTunes collection and it is part of my programming playlist.&lt;/p&gt;

&lt;h1 id=&quot;science-versus-engineering&quot;&gt;Science Versus Engineering&lt;/h1&gt;

&lt;p&gt;There are a great many people on the Internet who can talk to you about the difference between science and engineering.  To me the fundamental difference is that science is concerned with the &lt;strong&gt;WHY&lt;/strong&gt; and engineering is concerned with the &lt;strong&gt;HOW&lt;/strong&gt;.  As an example consider a hashing algorithm like MD5.  A computer scientist can explain &lt;em&gt;why&lt;/em&gt; it works but a software engineer just cares about &lt;em&gt;how&lt;/em&gt; it works.  And to draw in our code monkeys, well, a code monkey might not even know that what a hashing algorithm is.&lt;/p&gt;

&lt;h1 id=&quot;code-monkey&quot;&gt;Code Monkey&lt;/h1&gt;

&lt;p&gt;I don’t care what anyone says – we all start as &lt;em&gt;code monkeys&lt;/em&gt;.  I’ve seem trained “computer scientists” come out of university that I would barely give a status of code monkey.  A code monkey is someone who can use a computer to get tasks done in some kind of automated fashion.  This might be&lt;/p&gt;

&lt;h1 id=&quot;software-engineer&quot;&gt;Software Engineer&lt;/h1&gt;
&lt;p&gt;# Computer Scientist
# An Example&lt;/p&gt;

&lt;p&gt;If you look at my recent Poor Man’s Load Balancer post, I think this is a nice illustration of shifting between Computer Scientist and Software Engineer.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 19:54:31 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/11/30/code-monkey-software-engineer-computer-scientist-(J-s-MacBook-Pro's-conflicted-copy-2016-11-30).html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/11/30/code-monkey-software-engineer-computer-scientist-(J-s-MacBook-Pro's-conflicted-copy-2016-11-30).html</guid>
        
        <category>software_engineering</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>On Donner, On Blitzen, On Martians, On Pebbles, On FitBits, On AppleWatches</title>
        <description>
</description>
        <pubDate>Wed, 30 Nov 2016 16:13:01 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/11/30/on-donner-on-blitzen-on-martians-on-pebbles-on-fitbits-on-applewatches.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/11/30/on-donner-on-blitzen-on-martians-on-pebbles-on-fitbits-on-applewatches.html</guid>
        
        
      </item>
    
      <item>
        <title>AWS, Ansible and Dynamic Inventory with Profiles</title>
        <description>&lt;p&gt;python ec2.py –profile appdata –list&lt;/p&gt;

&lt;p&gt;~/.aws/config
~/.aws/credentials &amp;lt;=== profile data goes here NOT in ec2.ini&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 09:48:58 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/11/30/aws-ansible-and-dynamic-inventory-with-profiles.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/11/30/aws-ansible-and-dynamic-inventory-with-profiles.html</guid>
        
        
      </item>
    
      <item>
        <title>Life Lesson - Sometimes It Is Ok to Deliberately Break Things</title>
        <description>
</description>
        <pubDate>Wed, 30 Nov 2016 09:02:39 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/11/30/life-lesson-sometimes-it-is-ok-to-deliberately-break-things.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/11/30/life-lesson-sometimes-it-is-ok-to-deliberately-break-things.html</guid>
        
        
      </item>
    
      <item>
        <title>When is SSO not SSO?</title>
        <description>
</description>
        <pubDate>Wed, 30 Nov 2016 02:20:08 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/11/30/when-is-sso-not-sso.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/11/30/when-is-sso-not-sso.html</guid>
        
        
      </item>
    
      <item>
        <title>When MySQL Loads Go Wrong - What Do You Do?</title>
        <description>&lt;p&gt;This piece is the natural follow on to my &lt;a href=&quot;https://fuzzygroup.github.io/blog/aws/2016/11/26/fear-and-loathing-in-awsville-or-adventures-in-partition-resizing.html&quot;&gt;Adventures in Partition Resizing&lt;/a&gt; epic.  At this point our systems still aren’t fully back up yet and, well, it tastes like ashes.  Like a lot of hard core techies I tend to internalize the state of my system and when its not right, well, things suck for me.&lt;/p&gt;

&lt;p&gt;The current state of things is that out of 187 tables that needed to be migrated over, we’re down to the last one – big number 187 and nothing appears to be happening.  All I see at the console is the same thing I’ve seen for over 24 hours:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ubuntu@ip-172-31-43-176:~$ mysql -uappdata -p4PfnGtEGy9JtFF foo_production &amp;lt; /mnt/old2/foo2016_m2s.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And it just sits there.  Sigh.  Figuring out the next logical step means that you need to wrap your head around the quirky aspects of the MySQL load architecture.  Happily this isn’t the first time for me so here goes.&lt;/p&gt;

&lt;h1 id=&quot;step-1---show-full-process-list&quot;&gt;Step 1 - SHOW FULL PROCESS LIST;&lt;/h1&gt;

&lt;p&gt;When you have a large table coming in the command line like this, well, MySQL gets seriously weird.  You can’t select a row to see the status.  The best you can do is a SHOW FULL PROCESS LIST which makes the system go nuts.  Seriously - try it sometime.  What you get is an enormous SQL dump showing what’s being loaded and since it scrolls by at like 90 miles per hour, well, that’s not helpful.  Here’s a little trick tho:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pager less;
SHOW FULL PROCESS LIST\G
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this will give you something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*************************** 1. row ***************************
      Id: 257
    User: appdata
    Host: localhost
      db: foo_production
 Command: Query
    Time: 0
   State: update
    Info: INSERT INTO `foo2016_q1s` VALUES (240213,'2016-03-16 21:14:57','2016-
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Given that there 927,040 records in this table what this has shown us is that after 36 hours or so we’re only 1/4 of the way thru.  Press ESC and run SHOW FULL PROCESS LIST a few times to make sure that id value keeps changing to get confirmation that the load is continuing.&lt;/p&gt;

&lt;p&gt;The only problem is that what I just wrote above may &lt;strong&gt;NOT&lt;/strong&gt; be reliable – emphasis on the &lt;strong&gt;NOT&lt;/strong&gt;.  Here’s what I just got when I ran it again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Id: 257
    User: appdata
    Host: localhost
      db: banks_production
 Command: Query
    Time: 0
   State: update
    Info: INSERT INTO `foo2016_q1s` VALUES (406347,'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There’s no way that roughly 200K records went in while I was writing two paragraphs so what we now know is that SHOW FULL PROCESS LIST tells you that the load is proceeding but it may be &lt;strong&gt;utterly useless&lt;/strong&gt; as a monitoring tool.  Deep, Deep Sigh.&lt;/p&gt;

&lt;h1 id=&quot;step-2---desc-foo2016m2s&quot;&gt;Step 2 - DESC foo2016_m2s&lt;/h1&gt;

&lt;p&gt;The next logical step is to check the schema to make sure nothing weird is going on.  This can be done with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DESC foo2016_m2s;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In MySQL checking the schema tells you nothing about the index structures so you can check those with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SHOW CREATE TABLE foo2016_m2s;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My guess is that you won’t learn anything from these operations but this is step by step, high value debugging so you check everything.&lt;/p&gt;

&lt;h1 id=&quot;step-3---options&quot;&gt;Step 3 - Options&lt;/h1&gt;

&lt;p&gt;The logical next step would be to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stop the load&lt;/li&gt;
  &lt;li&gt;delete the last record as it might not be complete&lt;/li&gt;
  &lt;li&gt;find the last id (thank heavens that ids are sequential)&lt;/li&gt;
  &lt;li&gt;re-dump from the original source table from the last record + 1 forward&lt;/li&gt;
  &lt;li&gt;re-import&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If, Ghu Help Us, we find that stopping the load means that there isn’t any data in the table then the next step would be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Export from the original source in say 100K record chunks&lt;/li&gt;
  &lt;li&gt;Import the first one and see what happens&lt;/li&gt;
  &lt;li&gt;Import the next one and see what happens&lt;/li&gt;
  &lt;li&gt;Think carefully if we want to proceed sequentially or move to loading files in parallel; if the issue is bad data somewhere in a load file then parallel is a bad, bad, bad idea.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Need a long job architecture&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 00:57:04 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/11/30/when-mysql-loads-go-wrong-what-do-you-do.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/11/30/when-mysql-loads-go-wrong-what-do-you-do.html</guid>
        
        
      </item>
    
      <item>
        <title>Time Machine Backup Woes</title>
        <description>&lt;p&gt;It is a fairly well understood IT truism that you don’t really know how good your backup strategy is &lt;strong&gt;until&lt;/strong&gt; you restore it.  I’m an IT professional and I’ve been one my whole life but, even so, I still got bit badly by backup woes.  About a month ago I took a moderately functioning 2011 Macbook Pro 15” and did a full time machine back up on it.  Then I wiped it and played with Linux distros on it.  The machine did have valuable data on it but I did a full backup on it and I was beyond careful:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the backup disk was labeled&lt;/li&gt;
  &lt;li&gt;the backup disk was turned off&lt;/li&gt;
  &lt;li&gt;the backup disk was physically unplugged&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that I had valuable data on the disk, I wanted to be absolutely certain that nothing happened to it.  I always knew I’d restore it but I wasn’t sure exactly &lt;em&gt;when&lt;/em&gt;.  And then &lt;em&gt;when&lt;/em&gt; turned out to be today.  Now, since the title includes the words “backup” and “woes” you do know that this isn’t going to end well, right?&lt;/p&gt;

&lt;h1 id=&quot;problem-the-first----200-gigs-free-space&quot;&gt;Problem the First – 200 Gigs Free Space&lt;/h1&gt;

&lt;p&gt;My first inkling that something had gone very, very wrong came when I did a &lt;strong&gt;df -h&lt;/strong&gt; and realized that my restored computer has roughly 200 gigs of free space.  Normally this box runs between 5 and 20 gigs free.  Clearly there is a problem.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-second----all-passwords-have-to-be-re-entered&quot;&gt;Problem the Second – All Passwords Have to be Re-Entered&lt;/h1&gt;

&lt;p&gt;This was weird – I noticed that sometimes I’d have to re-enter passwords when I know that they worked perfectly before.  I find this odd because it implies that not everything got restored.  This is troubling.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-third----iphoto-doesnt-work-at-all&quot;&gt;Problem the Third – iPhoto Doesn’t Work At All&lt;/h1&gt;

&lt;p&gt;Interestingly I found that my copy of iPhoto told me that it wouldn’t work under Capitan.  I don’t know how an older version of iPhoto got left behind when this box was upgraded to capitan but, again, troubling.&lt;/p&gt;

&lt;p&gt;I simply copied iPhoto from another Capitan box onto a USB stick and dropped it onto this machine and it worked beautifully and, praise Ghu, I have pictures of my kids again.  As I said in the beginning – &lt;strong&gt;valuable data&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-fourth----where-are-my-damn-databases&quot;&gt;Problem the Fourth – WHERE ARE MY DAMN DATABASES?&lt;/h1&gt;

&lt;p&gt;And here comes the punch line – the missing data seems to all be my MySQL databases.  A quick google shows that for the query “time machine” “mysql” (indicating that both terms are phrases and both are required) gives some &lt;a href=&quot;https://www.google.com/search?q=%22mysql%22+%22time+machine%22&amp;amp;ie=utf-8&amp;amp;oe=utf-8&quot;&gt;227,000 results&lt;/a&gt;.  Clearly I’m not the only one with an issue here.  My guess is that the data I need is actually on the backup disc – somewhere.  I suspect that Time Machine doesn’t restore anything outside of /Users/ and the operating system itself.  And, yes, that’s stupid.  Quite honestly this is likely the last time I’ll ever trust Time Machine.  Sheesh.&lt;/p&gt;

&lt;p&gt;If anyone out there has experience with restoring MySQL databases from Time Machine I’d really appreciate some assistance.  Trying to ferret out their location from the back up disc is mildly impenetrable.&lt;/p&gt;

&lt;h1 id=&quot;conclusion-and-a-recommendation&quot;&gt;Conclusion and a Recommendation&lt;/h1&gt;

&lt;p&gt;I know someone out there is saying “Carbon Copy Cloner”.  Yep.  I know.  And I own a full copy, bought and paid for.  But I honestly thought that Time Machine was good enough for a personal backup.  Apparently, at least for a developer, it is &lt;strong&gt;not&lt;/strong&gt;.  Tomorrow I am figuring out where MySQL stores its data on all my other OSX boxes and I’m relocating it to a location inside /Users/sjohnson with a vengeance.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/osx/2016/11/30/time-machine-backup-woes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/osx/2016/11/30/time-machine-backup-woes.html</guid>
        
        <category>osx</category>
        
        <category>time_machine</category>
        
        <category>mysql</category>
        
        <category>mac</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Painful Checks I have Written as an Entrepreneur</title>
        <description>&lt;p&gt;Painful Check #1 $4,000 or so – in Pennies&lt;/p&gt;

&lt;p&gt;Painful Check #2 $13,000 in $1,000 Payments Per Month&lt;/p&gt;

&lt;p&gt;Painful Check #3: $801.21 / Month&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Nov 2016 16:13:24 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/11/29/painful-checks-i-have-written-as-an-entrepreneur.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/11/29/painful-checks-i-have-written-as-an-entrepreneur.html</guid>
        
        
      </item>
    
      <item>
        <title>Startup Learnings - Four Things that Betsy Devine Taught Me</title>
        <description>&lt;p&gt;Although I’m now happily ensconced in the mid west, once upon a time, in a vastly different personal universe, I lived in Boston.  And I think the happiest times I had in Boston were the brief period where I was part of the informal Boston blogging crowd centered around &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt;, the &lt;a href=&quot;https://cyber.harvard.edu/&quot;&gt;Berkman Center at Harvard&lt;/a&gt; and a random crew of people that drifted into that orbit.  Among those people were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://betsydevine.com/blog/&quot;&gt;Betsy Devine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://halleyscomment.blogspot.com/&quot;&gt;Halley Suitt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rura.org/shimon/&quot;&gt;Shimon Rura&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.markbernstein.org/&quot;&gt;Mark Bernstein&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blogs.harvard.edu/jkbaumga/&quot;&gt;Jessica Baumgart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Myself and many others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of us were drawn together to the hotness of a new medium and it had, as best as I can tell, the feeling of an &lt;a href=&quot;https://en.wikipedia.org/wiki/Salon_(gathering)&quot;&gt;18th century salon&lt;/a&gt;.  Everything was new; the people were excited and it felt like something was brewing.&lt;/p&gt;

&lt;p&gt;Today I’d like to talk about &lt;a href=&quot;https://en.wikipedia.org/wiki/Betsy_Devine&quot;&gt;Betsy Devine&lt;/a&gt; and what I learned from her.  I first met Betsy in roughly May 2003 as dated by &lt;a href=&quot;https://fuzzygroup.github.io/blog/story.radio.weblogs.com/2003/05/11/boston-beach-blogging-bingo.html&quot;&gt;this url&lt;/a&gt; where she was present; the pictures aren’t present any more – I’ll fix that some other time so you’ll have to take my word for it.&lt;/p&gt;

&lt;p&gt;At the time I didn’t really know Betsy very well but here’s what I did and didn’t know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I knew she was pleasant.&lt;/li&gt;
  &lt;li&gt;I knew she was clearly smart as a whip but I was in my mid 30s and Betsy was my Mom’s age so I suspect I didn’t give all the respect I should have.&lt;/li&gt;
  &lt;li&gt;I didn’t know that she was a &lt;a href=&quot;https://www.amazon.com/Longing-Harmonies-Themes-Variations-Physics/dp/0393305961/ref=sr_1_1?ie=UTF8&amp;amp;qid=1479718439&amp;amp;sr=8-1&amp;amp;keywords=Longing+for+the+Harmonies&quot;&gt;published author&lt;/a&gt; (yes I just ordered it and you likely should to if you’re bothering to read this).&lt;/li&gt;
  &lt;li&gt;And I knew she was kind which is a character trait all to often overlooked and all too often ignored.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then in 2004 Betsy’s life changed dramatically – her &lt;a href=&quot;https://en.wikipedia.org/wiki/Frank_Wilczek&quot;&gt;husband&lt;/a&gt;, someone I knew slightly from having carved &lt;a href=&quot;http://betsydevine.com/blog/page/89/?s=devine&quot;&gt;this pumpkin at their house on October 22, 2003&lt;/a&gt;, won the &lt;strong&gt;Nobel Prize&lt;/strong&gt; in Physics.  At the time I met him, I was told “hey - here’s Betsy’s husband - he teaches at MIT”.  And, yes, MIT is impressive but he’s a teacher (and a very pleasant fellow).  And so Betsy went from being just Betsy to being the wife of a legitimate celebrity.&lt;/p&gt;

&lt;h1 id=&quot;learning-the-first-celebrity-changes-things&quot;&gt;Learning the First: Celebrity Changes Things&lt;/h1&gt;

&lt;p&gt;In modern culture celebrity is an odd thing.  I work alone, from home, in a pitch dark room, most days so I clearly fall into the introvert camp and I’ve never cared much for it but I’ve had a few random encounters with celebrities over the years:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My first partner physically crashed into Bill Gates at a CD-ROM conference back in maybe ‘91 and almost took him out&lt;/li&gt;
  &lt;li&gt;I stayed on Ted Turner’s yacht once upon a time when my Dad and I were hunting&lt;/li&gt;
  &lt;li&gt;My Dad’s best friend, Jim Mattingly, &lt;a href=&quot;http://forum.sailingscuttlebutt.com/cgi-bin/gforum.cgi?post=7816#7816&quot;&gt;skippered Tenacious in the Fastnet Race in ‘79&lt;/a&gt;.  He was then featured in posters that ran for years in the boating industry (I grew up in boating)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Andy_Rooney&quot;&gt;Andy Rooney&lt;/a&gt; used to shop at one of my family’s wood working businesses and he was exactly the same in person as on 60 minutes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But, even with some exposure to celebrities all through my youth, I suspect on some level, post 2004, I viewed Betsy at least a little bit as “wife of a nobel laureate” instead of as “Betsy”.  Apologies for that.&lt;/p&gt;

&lt;p&gt;Normally this is where I end this type of post but not this time.  Upon reflection I learned at least two more things from Betsy.&lt;/p&gt;

&lt;h1 id=&quot;learning-the-second-never-ever-underestimate-the-brains-people-have&quot;&gt;Learning the Second: Never, Ever Underestimate the Brains People Have&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bill_Joy&quot;&gt;Bill Joy&lt;/a&gt; is a computer scientist, a co-founder of Sun Microsystems, the primary author of BSD unix and too many other technical achievements to write down and the author of Joy’s Law:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Joy’s law is the principle that “no matter who you are, most of the smartest people work for someone else,” \ &lt;a href=&quot;https://en.wikipedia.org/wiki/Joy's_law_(management)&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now Bill Joy wrote this in the context of Sun, Microsoft and technical nerds and who they work for but I would actually expand it to be something far more expansive:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are smart people all around you.  And at least one of them is almost certainly smarter than you are.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From my initial perspective Betsy was a mom, heck, she even looked like my mom.  What I didn’t realize at the time, and wouldn’t realize for literally years to come, was just how &lt;strong&gt;damn smart&lt;/strong&gt; she was.  I should have taken a clue from the fact that she wrote humor professionally.  Comedians are always smart and that should have tipped me off.  Or I should have taken a clue from the fact that she had a Masters in Materials Science Engineering from Princeton.  How smart did she have to be to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;get into princeton&lt;/li&gt;
  &lt;li&gt;get into a technical field&lt;/li&gt;
  &lt;li&gt;get into a technical field as a woman in 1978??&lt;/li&gt;
  &lt;li&gt;get a master’s degree that almost certainly required a thesis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I suspect that by any measure there’s far more depth to Betsy’s smarts then I’ll ever know. There are literally smart people all around you; never, ever, underestimate the brains people have.&lt;/p&gt;

&lt;h1 id=&quot;learning-the-third-what-might-betsy-have-done&quot;&gt;Learning the Third: What Might Betsy Have Done?&lt;/h1&gt;

&lt;p&gt;Gender and identity politics is a dicey subject in America in 2016 so I write this with no small degree of trepidation.  It is the reason that as a profoundly white male of privilege – the only college nickname I ever had was, I kid you not, &lt;em&gt;Captain Whitebread&lt;/em&gt; – I actually had Betsy read this in advance of posting since I didn’t want to stick my foot in my mouth.&lt;/p&gt;

&lt;p&gt;So my third learning is more of a zen like question – Why Might Betsy Have Done?  As a woman, even an accomplished woman, in the late 1960s / 1970s, Betsy went down a fairly traditional route of wife and mother but also kept herself as a distinct entity.  That’s a challenge because raising a family is an all consuming past time.  I say that as a father and husband who has seen that his wife has a harder “job” that he has.  And my wife certainly has a more important job than I have.  My work product is literally ephemeral – I write lines of code that often don’t survive a week.  My wife?  She’s takes little people and day by day turns them into big people.  Every product I’ve ever written – and I’ve written a lot of them – will be gone someday, generally soon – but my wife’s “work product” will last forever.&lt;/p&gt;

&lt;p&gt;So I have damn near infinite respect for what Betsy did.  But when I see how smart she is and how smart she has to be it makes me wonder what she might have done.  Perhaps in a slightly different universe she might have the Nobel prize.&lt;/p&gt;

&lt;p&gt;So the next time you see a wife and mother and look at the accomplishments that their husband has you should really wonder what that wife and mother might have done on their own.&lt;/p&gt;

&lt;h1 id=&quot;learning-the-fourth-engage-more-with-women-at-work&quot;&gt;Learning the Fourth: Engage More with Women at Work&lt;/h1&gt;

&lt;p&gt;For a brief period Betsy helped out with Feedster back in 2003 / 2004 and she added very real value.  One of the things I noticed was that she made a great team player and brought a very different perspective to things.  So the next time you see a woman at work, whether she’s “technical” or not, recognize that she’s almost certainly smart and there is a fair chance you’re underestimating her.  Men are notorious for that and there’s no reason for it in this day and age.&lt;/p&gt;

&lt;p&gt;And that’s the fourth learning.&lt;/p&gt;

</description>
        <pubDate>Tue, 29 Nov 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/11/29/startup-learnings-two-things-that-betsy-devine-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/11/29/startup-learnings-two-things-that-betsy-devine-taught-me.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
  </channel>
</rss>
