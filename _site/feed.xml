<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 30 May 2019 11:53:45 -0400</pubDate>
    <lastBuildDate>Thu, 30 May 2019 11:53:45 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Summer Games - An Overview for Noobs by a Noob</title>
        <description>&lt;p&gt;by Wagner the Impaler&lt;/p&gt;

&lt;p&gt;I just returned from 5 days at Summer Games with my wife and we found the experience unbelievably outstanding. I am writing this overview to decompress from Summer Games and avoid the intense con drop from this event.&lt;/p&gt;

&lt;p&gt;It should be noted that although I have written some criticisms of Summer Games in this document, I absolutely loved the experience. Summer Games 2019, for me, was magical and I would describe it as one of the best weekends of my adult life.&lt;/p&gt;

&lt;h2 id=&quot;what-is-barfleet&quot;&gt;What is Barfleet?&lt;/h2&gt;

&lt;p&gt;Barfleet is a social organization that is really a LARP on the theme of “Starfleet exists and we throw the parties in Ten Forward”. Barfleet exists to throw parties that enhance the fan run con experience.&lt;/p&gt;

&lt;p&gt;One of the really interesting things about Barfleet is that you can’t just join Barfleet – membership is only by sponsorship.  A member of a certain rank has to vouch for you and basically say “this person isn’t toxic” and be willing to take responsibility for your actions.  This level of accountability makes everyone feel comfortable and free.  For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you drink too much then someone will take care of you&lt;/li&gt;
  &lt;li&gt;If something triggers you then someone will talk it out&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And since Barfleet is a non profit organization, it needs to hold an annual meeting and why not hold it at a camping trip?&lt;/p&gt;

&lt;h2 id=&quot;what-is-summer-games&quot;&gt;What is Summer Games?&lt;/h2&gt;

&lt;p&gt;At its heart Summer Games is just a camping trip – for adults – although I would more describe it as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a 5 day experience in lightweight communal living&lt;/li&gt;
  &lt;li&gt;a giant party with 175 of your closest friends&lt;/li&gt;
  &lt;li&gt;a safe, consent-based environment where fleet is your family and will take care of you&lt;/li&gt;
  &lt;li&gt;an inclusive environment right down to people knowing your dietary restrictions and making sure that your medical needs and religious beliefs are respected (I helped with breakfast and watched this first hand)&lt;/li&gt;
  &lt;li&gt;a place where you can not only use an authentic Japanese Katana to battle frisbees (DiscHack) but also find a martial artist who would offer to restore your Katana to pristine condition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DiscHack pointed out to me the difference between Barfleet and the real world.  After playing DiscHack, someone walked up to me, the member DeadPool, and first asked to see my sword and then offered to restore it.  &lt;em&gt;Blink&lt;/em&gt;.  When do you find people this talented and random in the real world?  Disclaimer - I took the gold in DiscHack where my fleet name was spontaneously amended from Wagner to Wagner the Impaler.&lt;/p&gt;

&lt;p&gt;At Summer Games you are likely to encounter alcohol, sex, nudity and more all in a consent-driven, safe environment. This is not your grandparents camping trip.&lt;/p&gt;

&lt;h2 id=&quot;give-back-dont-take&quot;&gt;Give Back Don’t Take&lt;/h2&gt;

&lt;p&gt;One of the very different aspects of Summer Games is that it truly is communal living. This runs counter to all of our normal cultural programming. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Food is very often shared (I brought 180 jello shots to give out; someone else gave me a homemade apple pie and fresh plum jam; thank you anonymous wonderful person),&lt;/li&gt;
  &lt;li&gt;If you need help - just ask; someone will have salt, pepper, a beer, whatever&lt;/li&gt;
  &lt;li&gt;If you have help to give - give it (for people without a wagon, I moved a ton of totes)&lt;/li&gt;
  &lt;li&gt;One of the best parts of Summer Games, if not the best, is the communal living. Planning your time as an exercise in communal living is smart as hell. Example - if you are bringing a camp stove, another person in your camp doesn’t need one, right?&lt;/li&gt;
  &lt;li&gt;Fire can be a shared resource; I kept the campfire alive part of the last night because I knew someone would want to use it and that’s how I got great, great S’mores&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;your-fleet-name&quot;&gt;Your Fleet Name&lt;/h2&gt;

&lt;p&gt;Throughout this document you will see references to people but not their actual name.  Instead you will find “fleet names”.  Examples are Shiny, Nymph, Wagner, etc.  The reason for this is that Barfleet is an environment where the personal wheels sometimes come off and having an abstraction layer (the fleet name) between yourself and the real world can be useful.&lt;/p&gt;

&lt;h2 id=&quot;planning-your-summer-games-adventure&quot;&gt;Planning Your Summer Games Adventure&lt;/h2&gt;

&lt;p&gt;When you have kids, getting out of town without them is a huge, huge deal – child care had to be arranged, food had to be prepped, etc.  Our planning process was the single worst mistake I made. I had my list of tasks and my wife had her own list of tasks. Because there was no single view, we each had a different perspective on what needed to be done and that led to conflict.  Remember – there can be only one list!&lt;/p&gt;

&lt;p&gt;Finally when you plan for Summer Games, you really may want to take a day off on the return side of the trip.  Summer Games is fairly intense and all the happy people with jobs that I know are taking it easy today.  Me?  I’m a noob and I’m at my day job – grumble, grumble, grumble.&lt;/p&gt;

&lt;h2 id=&quot;hail-hydrate&quot;&gt;Hail Hydrate&lt;/h2&gt;

&lt;p&gt;One of the more perplexing aspects of Barfleet for a noob are the constant calls for “Hail Hydrate”.  This means nothing more than “it’s time to drink some water”. This is simply valid advice whenever you are outside in the hot sun and it is particularly valid when you are playing games all day in summer heat.  And while there is always water available at Barfleet events, a good idea is either a Camelbak or portable water container.  Remember there’s no dehydration in Barfleet (apologies to the Nymph).&lt;/p&gt;

&lt;h2 id=&quot;this-is-glamping-not-camping&quot;&gt;This is Glamping Not Camping&lt;/h2&gt;

&lt;p&gt;I grew up camping and I thought Summer Games was camping – no. Summer Games is glamping (Glamour Camping). When your context for camping is minimizing weight, it is hard to adapt your brain to camping with electricity (kudos to Ignitable Shot Therapy for running a functional electrical grid; thanks!), air mattresses, ready access to a Walmart and tents big enough to park a motorcycle in. And yes there is one attendee who sleeps in an authentic yurt.&lt;/p&gt;

&lt;p&gt;The underlying inverted camping assumption driving glamping is that weight doesn’t matter but volume does (since glamping uses cars for travel to the camping location and wagons for travel within the camp site). A car can only hold so much volume but even a prius can haul a crap ton of weight.&lt;/p&gt;

&lt;h3 id=&quot;this-is-tote-based-camping&quot;&gt;This is Tote Based Camping&lt;/h3&gt;

&lt;p&gt;The best way I found to wrap my head around the model of Summer Games is by thinking of it as “Tote Based Camping”. Totes are plastic storage containers that all your gear goes in. You get your totes to your campsite with a camping wagon. I found that you could effectively get by with the following categories of totes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clothing (one tote for all clothing and bathroom stuff for each 2 people in your campsite; most of your clothing will actually go unused)&lt;/li&gt;
  &lt;li&gt;Kitchen Gear / Camping Gear.&lt;/li&gt;
  &lt;li&gt;Food.&lt;/li&gt;
  &lt;li&gt;Misc / Entertainment.&lt;/li&gt;
  &lt;li&gt;Booze. This is Barfleet!  It should be noted that there is a full bar at SummerGames.  I chose to bring alcohol so that it could be in our campsite but this actually wasn’t needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;your-camping-wagon&quot;&gt;Your Camping Wagon&lt;/h3&gt;

&lt;p&gt;You need a folding camping wagon or a folding camping hand truck. This needs to be big enough to move one or more totes and you need bungee cords on it so that when the wagon falls over you don’t dump your wife’s (or boyfriend’s) clothes in the dirt. My second biggest Summer Games mistake was not realizing the need for a wagon and thankfully my Shiny wife saved me by purchasing one.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pro Tip&lt;/em&gt;: Wagons can be enhanced and customized. Creativity is important.&lt;/p&gt;

&lt;h3 id=&quot;tote-1---clothing&quot;&gt;Tote 1 - Clothing&lt;/h3&gt;

&lt;p&gt;Here’s what you need at a minimum for each person in the clothing tote (assuming you are staying for the full 5 days, Thursday to Monday; adjust based on days on the ground):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;10 pairs of underwear (you get wet and muddy)&lt;/li&gt;
  &lt;li&gt;10 pairs of socks if you wear such things; I don’t&lt;/li&gt;
  &lt;li&gt;4 pairs of shorts&lt;/li&gt;
  &lt;li&gt;5 t shirts&lt;/li&gt;
  &lt;li&gt;2 jackets&lt;/li&gt;
  &lt;li&gt;Shoes (see below)&lt;/li&gt;
  &lt;li&gt;1 pair of jeans or pants&lt;/li&gt;
  &lt;li&gt;Pajama Pants / Sweats because at times it can be cold&lt;/li&gt;
  &lt;li&gt;Dresses / Skirts / Kilts for the evening dance party as per your preference&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tote-2---kitchen-gear--camping-gear&quot;&gt;Tote 2 - Kitchen Gear / Camping Gear&lt;/h3&gt;

&lt;p&gt;This is the heaviest of the totes. I’m a pretty serious cook so my needs are likely stronger than yours. Here’s what goes in ours:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Propane Torch for fire starting even in the damn rain&lt;/li&gt;
  &lt;li&gt;Extra tarps if you have them&lt;/li&gt;
  &lt;li&gt;Paper Coffee Cups&lt;/li&gt;
  &lt;li&gt;Red Solo Cups&lt;/li&gt;
  &lt;li&gt;Classic Boy Scout Mess Kit&lt;/li&gt;
  &lt;li&gt;Small Propane Stove&lt;/li&gt;
  &lt;li&gt;Trash Bags - you need these for daily use and for hauling out dirty clothes / stuff at the end.  You need at least one for each day.&lt;/li&gt;
  &lt;li&gt;Citronella Candles&lt;/li&gt;
  &lt;li&gt;Plastic Knives and Forks and Spoons&lt;/li&gt;
  &lt;li&gt;Paper Towels&lt;/li&gt;
  &lt;li&gt;AeroPress Coffee Maker&lt;/li&gt;
  &lt;li&gt;Extra pocket knives for giving to someone; I lost my first one before I left the house when another car in our caravan was missing one&lt;/li&gt;
  &lt;li&gt;Toilet paper in case the bathrooms run out; just a roll or two for personal use&lt;/li&gt;
  &lt;li&gt;Paper Plates&lt;/li&gt;
  &lt;li&gt;Kitchen Tongs&lt;/li&gt;
  &lt;li&gt;Spatula&lt;/li&gt;
  &lt;li&gt;Plunge Whisk&lt;/li&gt;
  &lt;li&gt;Cooking Skewers&lt;/li&gt;
  &lt;li&gt;Long Matches&lt;/li&gt;
  &lt;li&gt;Canola Oil cooking spray both pump and aerosol (for a flamethrower in case the zombies attack)&lt;/li&gt;
  &lt;li&gt;Thick Leather gloves for pulling things off hot fires&lt;/li&gt;
  &lt;li&gt;Flashlight - Camping Lantern (a lantern is a flashlight with a handle and a base). It stands up on its own and can be hung as well.&lt;/li&gt;
  &lt;li&gt;Flashlight - Head Lamp&lt;/li&gt;
  &lt;li&gt;Flashlight - Small, personal, pocketable&lt;/li&gt;
  &lt;li&gt;Flashlight - Large enough to blind a zombie&lt;/li&gt;
  &lt;li&gt;Sunscreen&lt;/li&gt;
  &lt;li&gt;Duct Tape&lt;/li&gt;
  &lt;li&gt;Double A and Triple A batteries (LED lights last so much longer than older styles that this may be personal paranoia)&lt;/li&gt;
  &lt;li&gt;Kitchen Knives&lt;/li&gt;
  &lt;li&gt;Frying Pan&lt;/li&gt;
  &lt;li&gt;Tin Foil&lt;/li&gt;
  &lt;li&gt;Pot Holder&lt;/li&gt;
  &lt;li&gt;Measuring spoons&lt;/li&gt;
  &lt;li&gt;Kitchen shears&lt;/li&gt;
  &lt;li&gt;Light Sticks&lt;/li&gt;
  &lt;li&gt;Butane lighter stick&lt;/li&gt;
  &lt;li&gt;Sharpie&lt;/li&gt;
  &lt;li&gt;Rope for an ad hoc popup / tent level sun shield to reduce the damn heat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pro Tip&lt;/em&gt;: The best trick I came up with for this tote was that I could upgrade my old crappy kitchen gear to Summer Games stuff by moving it to the camping gear tote and giving my wife nice new kitchen gear.  This may actually be cheating…&lt;/p&gt;

&lt;h3 id=&quot;tote-3---food&quot;&gt;Tote 3 - Food&lt;/h3&gt;

&lt;p&gt;Bring food for the requisite number of days. Food is very dietary specific so it’s hard to describe. For example my wife has Celiac so our food issues are quite different from yours. You can put all the non perishable food in a single tote. Here are the baseline items that will always be in our food tote:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Granola Bars - 3 boxes - for quick energy&lt;/li&gt;
  &lt;li&gt;Coffee&lt;/li&gt;
  &lt;li&gt;English Breakfast Tea&lt;/li&gt;
  &lt;li&gt;Tortillas, Corn and Flour&lt;/li&gt;
  &lt;li&gt;Summer Sausage&lt;/li&gt;
  &lt;li&gt;Nuts&lt;/li&gt;
  &lt;li&gt;Crackers&lt;/li&gt;
  &lt;li&gt;Canned beans - because camping and eating beans just feels authentic; I favor Bush’s Southern Style White Beans but your preference obviously&lt;/li&gt;
  &lt;li&gt;Tuna, 2 cans&lt;/li&gt;
  &lt;li&gt;An onion or two&lt;/li&gt;
  &lt;li&gt;Bread&lt;/li&gt;
  &lt;li&gt;Salt&lt;/li&gt;
  &lt;li&gt;Pepper&lt;/li&gt;
  &lt;li&gt;Crushed Red Pepper&lt;/li&gt;
  &lt;li&gt;Jalapenos because spicy&lt;/li&gt;
  &lt;li&gt;Olives&lt;/li&gt;
  &lt;li&gt;Marshmallows&lt;/li&gt;
  &lt;li&gt;Graham Crackers&lt;/li&gt;
  &lt;li&gt;Ketchup&lt;/li&gt;
  &lt;li&gt;Mustard&lt;/li&gt;
  &lt;li&gt;Chocolate Bars, fully sealed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Funny Games Moment&lt;/strong&gt;: Chocolate bars melt in summer heat and ours actually did.  Then, in a true fleet moment, the phrase &lt;em&gt;Chocolate Bukkake&lt;/em&gt; was immediately coined by Ignitable Shot Therapy. A joke was made that we could find someone in camp with this fetish and and then they spoke up …&lt;/p&gt;

&lt;h4 id=&quot;sidebar-ultimate-smores&quot;&gt;Sidebar: Ultimate S’mores&lt;/h4&gt;

&lt;p&gt;On the last night around the campfire, Adorable Cannon Fodder shared outstandingly excellent S’Mores with me, honestly the best I’ve ever eaten. Thank you! Here is her recipe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chocolate Graham Crackers&lt;/li&gt;
  &lt;li&gt;Square Marshmallows&lt;/li&gt;
  &lt;li&gt;Double Stuff Oreos&lt;/li&gt;
  &lt;li&gt;Hershey’s Bar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;She also had the coolest wagon of all complete with hand sanitizer dispenser.&lt;/p&gt;

&lt;h3 id=&quot;tote-4---misc--entertainment&quot;&gt;Tote 4 - Misc / Entertainment.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Power strip and 20’ Extension Cord – if you get an electric tent.&lt;/li&gt;
  &lt;li&gt;USB Batteries for phone charging&lt;/li&gt;
  &lt;li&gt;USB Laser lights for tent coolness; a single USB battery can drive these for multiple nights&lt;/li&gt;
  &lt;li&gt;Two editions of Flux card game, Firefly and Drinking&lt;/li&gt;
  &lt;li&gt;FoxTail LED edition for night time catch&lt;/li&gt;
  &lt;li&gt;Frisbee&lt;/li&gt;
  &lt;li&gt;Wireties assortment&lt;/li&gt;
  &lt;li&gt;Popup Trash Can&lt;/li&gt;
  &lt;li&gt;Extra Sunglasses&lt;/li&gt;
  &lt;li&gt;Nespresso Machine / Milk Steamer (Coffee is Life).  Again if you get an electric tent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tote-5---booze&quot;&gt;Tote 5 - Booze&lt;/h3&gt;

&lt;p&gt;This can be beer, wine, spirits, mixers, bar tools, etc. This varies for every person.&lt;/p&gt;

&lt;h3 id=&quot;cooler&quot;&gt;Cooler&lt;/h3&gt;

&lt;p&gt;For food you also need to have a cooler to hold the cold stuff. There are two included meals at Summer Games (Friday dinner; taco night and Sunday breakfast; pancakes, eggs, bacon, goetta). You need a cooler to hold whatever other perishable items you want to eat. This varies per person but here are the essentials that HAVE to be in our cooler:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Butter&lt;/li&gt;
  &lt;li&gt;Sea Salt Caramel Milk for Coffee; this is the coffee creamer of the gods; available from Kroger&lt;/li&gt;
  &lt;li&gt;Half and Half; this is the coffee creamer for mere mortals&lt;/li&gt;
  &lt;li&gt;Proteins&lt;/li&gt;
  &lt;li&gt;Cheese&lt;/li&gt;
  &lt;li&gt;Smoked Salmon&lt;/li&gt;
  &lt;li&gt;Hard Boiled Eggs&lt;/li&gt;
  &lt;li&gt;Eggs cracked into a tupperware and beaten for scrambling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;big-items&quot;&gt;Big Items&lt;/h2&gt;

&lt;p&gt;A camp site is basically a small bit of land where you live for N days while you try and enjoy yourself. Given that you may be rained on, invite friend over to your campsite, etc, the big things actually matter.  Again since this is glamping not camping, weight doesn’t matter but volume does.  For example, our tent was heavy as hell but it had 3 rooms which meant we had a lot of space when it rained.&lt;/p&gt;

&lt;h3 id=&quot;do-i-tent&quot;&gt;Do I Tent?&lt;/h3&gt;

&lt;p&gt;Even though Summer Games is a camping trip and tents are kind of a thing, you do not have to stay in a tent, there are cabins and bunk houses.  These accommodate people with medical needs like CPAP machines, people without tents / equipment and people who just want to sleep in a real bed.&lt;/p&gt;

&lt;h3 id=&quot;tent&quot;&gt;Tent&lt;/h3&gt;

&lt;p&gt;A tent needs to be big enough that if you were stuck inside it for N days of rain you would truthfully still be able to say “that was fun”. This varies per person.&lt;/p&gt;

&lt;h3 id=&quot;camping-table&quot;&gt;Camping Table&lt;/h3&gt;

&lt;p&gt;A camping table is a simple plastic table, sometimes folding, sometimes not that gives a decent workspace in camp. Unlike the Boy Scout camping I grew up with where you never had a place to work, a camping table solves this.&lt;/p&gt;

&lt;h3 id=&quot;camping-chairs&quot;&gt;Camping Chairs&lt;/h3&gt;

&lt;p&gt;Folding camping chairs make it happy to sit down and talk with people. You should have least the number of chairs as you have people on your trip plus a few.&lt;/p&gt;

&lt;h3 id=&quot;heat-source&quot;&gt;Heat Source&lt;/h3&gt;

&lt;p&gt;You need a heat source that you can cluster around because cooking over wood or charcoal is fun. We wanted a fire pit but my wife found the &lt;a href=&quot;https://www.amazon.com/Char-Griller-2-2424-Table-Charcoal-Grill/dp/B003HFFVJK/&quot;&gt;Char Griller Table Top Charcoal Grill&lt;/a&gt; and everyone was very impressed by it. Even Ignitable Shot Therapy, Summer Games Fire Demigod, thought it was a great idea.&lt;/p&gt;

&lt;p id=&quot;gdcalert1&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;  gd2md-html alert: inline image link here (to images/Summer-Games0.jpg). Store image on your image server and adjust path/filename if necessary. &lt;/span&gt;&lt;br /&gt;(&lt;a href=&quot;#&quot;&gt;Back to top&lt;/a&gt;)(&lt;a href=&quot;#gdcalert2&quot;&gt;Next alert&lt;/a&gt;)&lt;br /&gt;&lt;span style=&quot;color: red; font-weight: bold&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/Summer-Games0.jpg&quot; alt=&quot;alt_text&quot; title=&quot;image_tooltip&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;popup&quot;&gt;Popup&lt;/h3&gt;

&lt;p&gt;A popup is just that, a popup canopy which goes over your camping table and chairs to shield you from the rain. There will be times when you are sitting under your popup while water runs underneath you and are still having a damn great time.&lt;/p&gt;

&lt;p id=&quot;gdcalert2&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;  gd2md-html alert: inline image link here (to images/Summer-Games1.jpg). Store image on your image server and adjust path/filename if necessary. &lt;/span&gt;&lt;br /&gt;(&lt;a href=&quot;#&quot;&gt;Back to top&lt;/a&gt;)(&lt;a href=&quot;#gdcalert3&quot;&gt;Next alert&lt;/a&gt;)&lt;br /&gt;&lt;span style=&quot;color: red; font-weight: bold&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/Summer-Games1.jpg&quot; alt=&quot;alt_text&quot; title=&quot;image_tooltip&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: The best trick I saw at Summer Games was the person who pitched a pop up over their tent.  That one trick likely trimmed 10 degrees from the heat in their tent.&lt;/p&gt;

&lt;h2 id=&quot;vital---your-pocket-knife&quot;&gt;Vital - Your Pocket Knife&lt;/h2&gt;

&lt;p&gt;Ever since 9/11 I no longer carry a pocket knife everywhere I go but going camping one time pointed out to me just how important a pocket knife can be. I used mine constantly. Your choice will vary best on preference. I used a Smith and Wesson Special Tactical and it worked brilliantly.&lt;/p&gt;

&lt;h2 id=&quot;disconcerting-aspects&quot;&gt;Disconcerting Aspects&lt;/h2&gt;

&lt;p&gt;There were a few disconcerting aspects to Summer Games, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Connectivity. We use AT&amp;amp;T and there was next to no signal. I was personally glad to be disconnected but we had a kid crisis on the way to Summer Games and having to drive to the Walmart to talk to your kid, well, sucks. This is apparently fixable if you use T-Mobile as a provider since that one provider works at Summer Games. Perhaps a &lt;a href=&quot;https://support.t-mobile.com/docs/DOC-36974&quot;&gt;mobile hotspot linked to T-Mobile&lt;/a&gt; would work.&lt;/li&gt;
  &lt;li&gt;Bathrooms. Oy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;useful-advice-for-the-noob&quot;&gt;Useful Advice for the Noob&lt;/h2&gt;

&lt;p&gt;Here are a series of bullet points that address different things where I had specific issues.  Some of these are repeats from above and the fact that they are repeated indicates their importance.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Totes&lt;/em&gt; - Get these totes from &lt;a href=&quot;[https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/27-gallon-black-storage-tote/27gblkyw/p-1459474982373.htm](https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/27-gallon-black-storage-tote/27gblkyw/p-1459474982373.htm)&quot;&gt;Menards&lt;/a&gt;. They have the advantage of being easily made raccoon proof. There is a stripper raccoon named Cinnamon that roams the campsite.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Trash&lt;/em&gt; - Your trash needs to go up every single night. You cannot leave food around.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Bathrooms&lt;/em&gt; - The water will go on and off every single day. This is not a big deal and it will be fine. The port-a-potties on site are not as scary as you think they will be.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Car Bag&lt;/em&gt; - Pack a car bag with emergency clothing for when you get soaked. Make CERTAIN to leave this bag in the car or when your tent gets flooded you will lose your last dry clothes. My wife used the car bag to find a clean shirt on the way home when her clothing was uncomfortable.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Tent&lt;/em&gt; - Whatever you do get a tent with a functional door such as the &lt;a href=&quot;https://www.coleman.com/tenaya-lake-6p-fast-pitch-cabin-with-cabinets/2000018142.html?cgid=coleman-tentsandshelters#pmax=5%2C000.00&amp;amp;prefn1=numberOfSleepers&amp;amp;pmin=250.00&amp;amp;prefv1=4-Person%7C6-Person&amp;amp;start=1&quot;&gt;Coleman Tenaya&lt;/a&gt;. You will go in and out of your tent a huge number of times and a door is a dramatic improvement in quality of life. Trust me.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Air Mattress&lt;/em&gt;. You need a decent air mattress. You want one with a built in inflater which has Never Flat technology or you will end up adding air in the middle of the night while cursing life, the universe and your choices. It should be noted that this option only works if you have an electric campsite or if you have a UPS plugged into your air mattress.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Zip Up&lt;/em&gt;. Keep your tent zipped at all times or get used to bugs going in and out. I had a spider run over my face on the last night. Disconcerting to say the least.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Tent Pull&lt;/em&gt;.  Attach a lighted pull to your tent zipper. Thanks to NerdOn for this tip using a glow in the dark LED “ice cube”.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Stake down your tent&lt;/em&gt;. A tent with an external frame is largely self supporting so you may not choose to stake it down. This can lead to issues with your tent floating away. &lt;a href=&quot;https://www.walmart.com/ip/Universal-Camping-Steel-Tent-Stakes-Heavy-Duty-Replacement-Pegs/890381996&quot;&gt;[These are the best tent stakes I’ve ever used](https://www.walmart.com/ip/Universal-Camping-Steel-Tent-Stakes-Heavy-Duty-Replacement-Pegs/890381996)&lt;/a&gt;. Thank you Han Solo Cup for loaning them to me when I needed them!&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Shoes&lt;/em&gt;.  You will need more shoes than you think. Camping is absolutely miserable when you don’t have decent footwear.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Label your crap&lt;/em&gt;.  Lots and lots of things look identical; it makes it easier when you know that say this green chair is really yours.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Your Damn Car&lt;/em&gt;. If you get really hot and you need a place to sleep or make love, well, go to your car with your sleeping bag and teenager it&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Your Car Keys&lt;/em&gt;. Attach your car keys to your belt with a carabiner and keep them in a known place other than that. Losing your car keys means you can’t go home and that’s a big deal.  I never lose anything and I lost stuff at Summer Games.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Cheap Wedding Ring&lt;/em&gt;. My wife and I went to Amazon for cheap wedding rings (think $10 for titanium) instead of wearing our good stuff.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Cheap Watch&lt;/em&gt;. You lose track of time camping and a cheap watch helps keep you connected to the real.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;There are other documents on Summer Games on Facebook that you should read, specifically packing lists.  I read them but still wrote this one because I didn’t feel that the packing lists gave me a feel for the “Zen of Summer Games”; the packing lists had the how but not the why.&lt;/p&gt;

&lt;h2 id=&quot;recovering-from-summer-games&quot;&gt;Recovering from Summer Games&lt;/h2&gt;

&lt;p&gt;Among people who go to science fiction cons, there is the phrase Con Drop:&lt;/p&gt;

&lt;p&gt;Con Drop is a physiological reaction that often has emotional or psychological symptoms. Essentially, it’s the endorphins and other happy chemicals your body has been spewing out the last 3-5 days drying up. It’s the crash after the high. Con Drop generally happens two to four days after the end of the convention.  &lt;a href=&quot;http://speculativechic.com/2017/05/11/convention-life-con-prep-con-crud-con-drop/&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I would add that Summer Games isn’t a normal con – it is an event dialed up to 11 in every damn way.  This makes the con drop even worse.  So just as you feel wonderful during Summer Games, I can assure you that you will feel pretty damn bad afterwards – I know because I am living it right damn now.  Here are some suggestions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take the day off from work after Summer Games.  I didn’t do that and I profoundly regret it.&lt;/li&gt;
  &lt;li&gt;Aggressively practice self care – if you like movies then watch movies; if you like to read comics then get out a run and devour it; if you like ice cream, buy the gallon container.&lt;/li&gt;
  &lt;li&gt;Sleep as much as possible.  This has been the biggest issue for me.  I went from sleeping two to three hours a night at Summer Games to sleeping … three to four hours a night at home.&lt;/li&gt;
  &lt;li&gt;Eat well if you can.  At Summer Games you aren’t really eating a balanced meal.  Better nutrition is helpful.  The one exception to this is that I’ve found that sugar helps.&lt;/li&gt;
  &lt;li&gt;Help someone else.  I’ve always found that when times are bad, helping someone out makes them better.  Honestly that’s why I wrote this document – it got me past the worst of the con drop.  So find a friend suffering from this and get together with them; feed them dinner, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And you know what?  Summer Games was absolutely, unquestionably worth it.&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;p&gt;This document was reviewed and edited by Shiny, Nymph, Dr. Shake  N Bake, Uisge T’Ango Foxtrot and D’zzy L’zzy.  Thank you for turning these somewhat incoherent scribblings into actual prose.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/barfleet/2019/05/30/summer-games-an-overview-for-noobs-by-a-noob.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/barfleet/2019/05/30/summer-games-an-overview-for-noobs-by-a-noob.html</guid>
        
        <category>barfleet</category>
        
        
        <category>barfleet</category>
        
      </item>
    
      <item>
        <title>And Now for Something New</title>
        <description>&lt;p&gt;Io, Io, its off to code I go.  From bit to byte I build my stack. Io, Io its off to code I go….&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd development_project_path
rails new slumgullion --database=mysql   --skip-spring --skip-listen --skip-test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then a shift to &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2017/02/26/setting-up-rails-with-rspec-from-the-start.html&quot;&gt;RSpec&lt;/a&gt;.  And then a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd slumgullion
# mate is my source code editor
# edit Gemfile (core package file for external components aka gems)
mate Gemfile
# Change gemfile version number to 5.2.3
# Follow directions in blog post above
bundle update
mate config/database.yml
#update database configuration file with development credentials
bundle exec rails db:create
bundle exec rails g controller Dashboard
# set the default route
mate config/routes.rb
# write a trivial def index i.e. def index end
mate app/controllers/dashboard_controller.rb
# start the server
bundle exec rails s -p3000
# open in chrome this url 
http://localhost:3000/
# get errors; remember to create a blank index template to force html rendering
touch app/views/dashboard/index.html.erb
# mate app/views/dashboard/index.html.erb
# get a blank page without any errors
# get it into version control
git add . 
git commit -m &quot;Canonical initial commit message&quot;
# goto git and create a private repo
# add the origin
# initial push
# create first branch paralleling first ticket id
git branch feature/1
git co feature/1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now its time for real work.  I personally believe that Rails development is always, always, always, always, always, always best done with N terminal windows where the beginning of them is as follows: Server, Database Terminal, Rails Console, General Command Line usage (add / commit / run tests / etc).  Your opinion may differ but that’s how I roll – keep all your tooling available at the same time.  And yes it is a Zorkian experience where you can be lost in a twisty maze of terminal windows all alike.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# onto Bootstrap configuration for some appearance
mate Gemfile
# add bootsnap
# add bootstrap-saas
# stop server with command + c / ctrl c
bundle update
# port 3000 is default so omit
bundle exec rails s 
# start second terminal tab - db window
# cd development root
cd slumgullion
# start third terminal tab - console window
# cd development root
cd slumgullion
bundle exec rails c
# start fourth terminal window
cd slumgullion
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Realize that after N late nights, even with examples you wrote yourself using Bootstrap, you do not know how to setup Bootstrap from scratch so sacrifice a small goat in the dark of the night whilst chanting around a firepit.  When that fails to produce results, grumble and then resume with Google while chanting &lt;a href=&quot;https://medium.freecodecamp.org/add-bootstrap-to-your-ruby-on-rails-project-8d76d70d0e3b&quot;&gt;Save Me FreeCodeCamp.  Save Me FreeCodeCamp&lt;/a&gt;.  And like magic you channel this set of commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git mv app/assets/stylesheets/application.css app/assets/stylesheets/application.scss
# fix application.scss like url above directs
mate app/assets/stylesheets/application.scss
# fix application.js like url above directs
mate app/assets/javascripts/application.js
mate app/views/application.html.erb
# add a jumbotron element to see if bootstrap works
mate app/views/dashboard/index.html.erb
# restart server as per above
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Success !&lt;/p&gt;

&lt;p&gt;With thanks to Pete Jenney / Dataware for giving me the basis to make up that lyrical riff.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/slumgullion/2019/05/21/and-now-for-something-new.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/slumgullion/2019/05/21/and-now-for-something-new.html</guid>
        
        <category>rails</category>
        
        <category>slumgullion</category>
        
        
        <category>slumgullion</category>
        
      </item>
    
      <item>
        <title>Using Ansible ec2.py Directly</title>
        <description>&lt;p&gt;This is a shorty but it is incredibly useful when you need to diagnose &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; weirdness.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; I know this is obvious but when you have used Ansible and AWS extensively, you get used to ec2.py just being a component to Ansible and you don’t even think about calling it directly.&lt;/p&gt;

&lt;p&gt;We recently had a situation where all of our Ansible driven deploys were failing.  And the reason for this wasn’t easy to diagnose because all of our deploys were wrapped up in fairly complex shell logic.  What helped us sort it out was breaking the underlying Ansible execution pipeline apart and calling &lt;a href=&quot;https://github.com/ansible/ansible/blob/devel/contrib/inventory/ec2.py&quot;&gt;ec2.py&lt;/a&gt; directly.  ec2.py is the open source bit that talks to an AWS environment and returns a massive data structure that represents the “inventory” of servers, volumes, network connections, etc.&lt;/p&gt;

&lt;p&gt;Here’s the way to call ec2.py directly&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AWS_ACCESS_KEY_ID=some_access_key AWS_SECRET_ACCESS_KEY=some_secret_key /etc/ansible/inventory/ec2.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As long as your ec2.py is executable (and it damn well should be), this will return the normal giant JSON hash of data that represents your AWS environment.  And if it doesn’t return a giant JSON hash, well, then you know you have a problem.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/ansible/2019/05/18/using-ansible-ec2-py-directly.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/ansible/2019/05/18/using-ansible-ec2-py-directly.html</guid>
        
        <category>ansible</category>
        
        <category>devops</category>
        
        <category>python</category>
        
        <category>aws</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Camel Camel Camel - A Way to Get Amazon Stuff Cheaper</title>
        <description>&lt;p&gt;The vast breadth of things on the Internet never fails to amaze me.  And when I discover something new, I find that writing about it helps me internalize them.  &lt;a href=&quot;https://www.camelcamelcamel.com&quot;&gt;Camel Camel Camel&lt;/a&gt;, hence forth referred to as Camel^3, is one that I am absolutely late to the party  on but I thought that someone out there might not know about it.&lt;/p&gt;

&lt;p&gt;Camel^3 is an Amazon price watcher that lets you supply either an Amazon link or simply a search term as well as a price target.  Camel^3 will then persistently monitor that product and alert you when the price drops.  The advantage to this is that even though you think that Amazon’s prices are fixed, they are actually fairly variable and when you have a &lt;strong&gt;non immediate&lt;/strong&gt; purchase need, Camel^3 gets you what you need at a cheaper price.&lt;/p&gt;

&lt;p&gt;In my case I’m currently lusting after a &lt;a href=&quot;https://www.amazon.com/Synology-bay-DiskStation-DS218j-Diskless/dp/B076G6YKWZ/ref=sr_1_3?keywords=Synology&amp;amp;qid=1558199113&amp;amp;s=gateway&amp;amp;sr=8-3&quot;&gt;Synology NAS Disc array&lt;/a&gt; which presently has a price of $175.  So I added it to my Camel^3 page with a price target of $130.  And since this is going to require drives with it, I can also set up Camel^3 price watches on &lt;a href=&quot;https://www.amazon.com/Red-Pro-10TB-Hard-Drive/dp/B072F422FW/ref=sr_1_fkmrnull_3?keywords=western+digital+raid+red+10tb&amp;amp;qid=1558199233&amp;amp;s=gateway&amp;amp;sr=8-3-fkmrnull&quot;&gt;Western Digital RED Raid Drives&lt;/a&gt;.    So if my price watches get fulfilled between the disc array and the drives, I should save about $200.&lt;/p&gt;

&lt;p&gt;Camel^3 makes money by you returning to their page and using their affiliate links to Amazon.  There doesn’t seem to be any privacy violations, advertising or any other crap as all too often there are.  Oh and massive props to Camel^3 for allowing use of its service without even creating an account and password.  That’s hugely awesome.&lt;/p&gt;

&lt;p&gt;Strongly Recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/amazon/2019/05/18/camel-camel-camel-a-way-to-get-amazon-stuff-cheaper.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/amazon/2019/05/18/camel-camel-camel-a-way-to-get-amazon-stuff-cheaper.html</guid>
        
        <category>amazon</category>
        
        
        <category>amazon</category>
        
      </item>
    
      <item>
        <title>A Mobile First Blogging Strategy</title>
        <description>&lt;p&gt;Not that anyone’s watching but if they were, they would notice that I’ve started blogging again both here and on my &lt;a href=&quot;https://www.fuzzyblog.io/recipes&quot;&gt;recipes&lt;/a&gt; site.  There were a few things that really made the difference in my starting again but the biggest was realizing that I could actually employ mobile devices in my blogging strategy.&lt;/p&gt;

&lt;p&gt;The interesting thing here is that I made zero changes in my blogging tool.  I’m still using Jekyll hosted on Github Pages.  These changes were purely in how I approached content.  You could use this with Jekyll, WordPress or any blogging tool.&lt;/p&gt;

&lt;p&gt;Here’s what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The biggest change was my adoption of Apple Notes as a core text editor.  Yes it isn’t perfect by any means but the fact that Apple Notes is a standard thing across my iPhone, my iPad and my OSX laptops means that I have a simple way to always create a blog post no matter where I am.  The Sync on Apple Notes seems to be flawless and it is fast enough that I now use Apple Notes as a “paste buffer” between my boxes.&lt;/li&gt;
  &lt;li&gt;I &lt;a href=&quot;https://www.howtogeek.com/344310/how-to-turn-off-smart-punctuation-on-your-iphone-and-ipad/&quot;&gt;turned off Smart Punctuation&lt;/a&gt; on all my iOS devices so I don’t have issues with a curly quote in a MarkDown file.&lt;/li&gt;
  &lt;li&gt;I turned off Smart Punctuation on my OSX device also, Apple Menu, System Preferences, Keyboard, Text, uncheck Use Smart Quotes and Dashes.&lt;/li&gt;
  &lt;li&gt;I copied into my Apple Notes Blogging folder a markdown template for how I like to create a post.  When I need to start something I just copy it in at the top of the post.&lt;/li&gt;
  &lt;li&gt;I added a Belkin keyboard to my iPad converting it from a tablet to a lightweight, long lasting laptop.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And this is what my blogging strategy now looks like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into notes, wherever I am, in whatever computing device I have handy.&lt;/li&gt;
  &lt;li&gt;Open my template post and copy all of it.&lt;/li&gt;
  &lt;li&gt;Create a new note and paste in my template.&lt;/li&gt;
  &lt;li&gt;Write.  Lather / Rinse / Repeat as needed.&lt;/li&gt;
  &lt;li&gt;When I’m ready to publish, go to my actual laptop and copy the title off the post.  Then I execute a “jekyll post (paste in title)” and press enter.&lt;/li&gt;
  &lt;li&gt;I go back into the note and copy all of it with command + a, command + c&lt;/li&gt;
  &lt;li&gt;I open the resulting post in my MarkDown editor of choice, TextMate.&lt;/li&gt;
  &lt;li&gt;I paste in the text and make any residual edits / adjustments.&lt;/li&gt;
  &lt;li&gt;If I don’t have the Jekyll Server running, I start it with jekyll s to generate the correct feed and such.&lt;/li&gt;
  &lt;li&gt;In the command line, I do a git add / commit / push cycle. I also wrapped this into a shell command so I can just type ./postentries.sh “some description of what i’m posting” and have all of this handled for me (including step 9).&lt;/li&gt;
  &lt;li&gt;And then everything is online almost instantly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Writing this out does make it seem convoluted but it is actually pretty damn seamless and the ability to use any computing device I have at hand for content creation makes it &lt;em&gt;wonderful&lt;/em&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/blogging/2019/05/18/a-mobile-first-blogging-strategy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/blogging/2019/05/18/a-mobile-first-blogging-strategy.html</guid>
        
        <category>blogging</category>
        
        <category>writing</category>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>When libreadline Goes Whack</title>
        <description>&lt;p&gt;Well shite.  I’ve seen this before and I just plain hate it.  This is the last error you want to get on a Friday afternoon after five.  Taking the time to fix it now generally means that your computer won’t boot on a Monday due to something going wrong in the fixing process and you forgetting what you did.&lt;/p&gt;

&lt;p&gt;Every single time libreadline goes to hell, it is always a pain. Here’s how I fixed it this time.&lt;/p&gt;

&lt;h2 id=&quot;the-environment--context&quot;&gt;The Environment / Context&lt;/h2&gt;

&lt;p&gt;I’m running a MacBook on OSX (Sierra; yes I’m a luddite on OS upgrades) with &lt;a href=&quot;https://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt; 1.7.0.&lt;/p&gt;

&lt;h2 id=&quot;the-error&quot;&gt;The Error&lt;/h2&gt;

&lt;p&gt;Here is the error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dyld: Library not loaded: /usr/local/opt/readline/lib/libreadline.7.dylib
Referenced from: /usr/local/Cellar/postgresql@9.5/9.5.12/bin/psql
Reason: image not found
sh: line 1: 36440 Abort trap: 6           
/usr/local/Cellar/postgresql@9.5/9.5.12/bin/psql seasthree_test /Users/sjohnson/fuzzygroup/seas/cas-seas3-attain-admin/spec/fixtures/schools.sql```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;libreadline is a core library used by almost any open source tool that ends up reading input from the standard in.  In this case I’m trying to feed a sql file into the pg (postgres) executable.&lt;/p&gt;

&lt;p&gt;This is one of those errors that I’ve seen a dozen or so times and I always fix it with some crazy combination of jiggery-pokery / goat sacrificing.  This time I thought I’d document it for, well, the next damn time.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;The answer appears, courtesy of Google via a &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/5799&quot;&gt;Github Issue&lt;/a&gt;, appears to be an update of bash.  Sigh.  While I love the power of command shells, I truly, truly hate messing with them.&lt;/p&gt;

&lt;p&gt;Here’s the process I followed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That upgrades HomeBrew to the latest.  I then check the process again to see if it has magically gone away and no such luck.  The next step is to upgrade bash itself:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade bash 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On an OSX box there is the version of bash that comes with the system and then there is the bash that comes from HomeBrew.  The reason you upgrade bash is that what Apple ships is woefully obsolete:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash --version
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin16)
Copyright (C) 2007 Free Software Foundation, Inc.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Bash after it has been upgraded is now north of version 5.&lt;/p&gt;

&lt;p&gt;The way that you make your new bash usable is that you first have to add it to /etc/shells by editing this file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/shells
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This prompts you for your password.  Then at the very end of the file you need to add this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After adding this line, do the CTRL+W and then CTRL+Q dance to exit the editor.  That essentially tells OSX “Ok this is a valid shell that someone can now tell us they want to use”.  The next step is to use the chsh command to make this permanent.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh -s /usr/local/bin/bash $USER
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Much of what I know about changing an OSX shell comes from this &lt;a href=&quot;https://apple.stackexchange.com/questions/224511/how-to-use-bash-as-default-shell&quot;&gt;Stack Exchange post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At this point you have set your system up to use the new shell but it won’t take effect until you restart your terminal.  Given that I use iTerm and I have about 70 terminals open at any point, restarting a terminal is a big deal.  But what I can do is validate this by using the Apple Terminal.  So I start up Apple Terminal and do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $BASH_VERSION
5.0.7(1)-release
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, unfortunately, I still get the error when I try again.  Sigh.  At this point with the new Bash in place, I’m able to try:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade libreadline
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that begins the process.  Now since libreadline is used by almost everyone that HomeBrew has installed for me, it is a long, long process.  I can watch it upgrade Postgres, Maple, etc.  When it is finally done, I try again only to find that my pg executable isn’t there anymore.  This takes a moment of thought but I realize that it is simply moved since the previous directory included a version number.  When I finally reconstruct a path to the correct version of pg, it now executes flawlessly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/Cellar/postgresql@9.5/9.5.15/bin/psq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Success!  And, in closing, yes I do actually know that I shouldn’t have to specify the exact pathing.  A big part of homebrew’s advantage is that this isn’t needed.  But for some reason, on this particular box, it is needed.  And I’ve just never bothered to figure out why.&lt;/p&gt;
</description>
        <pubDate>Sat, 11 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/brew/2019/05/11/when-libreadline-goes-whack.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/brew/2019/05/11/when-libreadline-goes-whack.html</guid>
        
        <category>brew</category>
        
        <category>osx</category>
        
        <category>libreadline</category>
        
        
        <category>brew</category>
        
      </item>
    
      <item>
        <title>The Schema WTF Moment Take 2 - An Excursion into SourceTree</title>
        <description>&lt;p&gt;I recently wrote about the &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html&quot;&gt;Rails Schema WTF&lt;/a&gt; moment, that moment when you’re making changes to your system and you have issues with what to commit.  The problem I wrote about there was what happens when you get a migration from another developer.  This time I’m writing about what to do when you create a migration.&lt;/p&gt;

&lt;p&gt;The primary idea here isn’t much different from what I wrote about the other day but the core idea is the same — you only want to commit to version control the changes to the schema.rb file that your migration caused.  Let’s start with a sample migration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AddUniqueIndexToThingss &amp;lt; ActiveRecord::Migration[5.0]
  def up
    execute &quot;CREATE UNIQUE INDEX unique_index_things_on_id ON public.things USING btree (id, project_id) where deleted_at is null;&quot;
  end

  def down
    execute &quot;drop index unique_index_things_on_id&quot;
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you think thru this migration, it is going to introduce two changes to schema.rb:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A new date stamp on the schema.rb file will be listed at the top&lt;/li&gt;
  &lt;li&gt;A single line for the index creation will be added&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So conceptually what you want to do is do a git add and commit of only these things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The migration file itself&lt;/li&gt;
  &lt;li&gt;The date stamp line&lt;/li&gt;
  &lt;li&gt;The index creation line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And therein lies the problem because while Git is a fantastic tool, from the command line, you never want to have to commit a range of lines because it is just plain ugly.  Even after a decade plus of using git from the command line, I don’t know how to do that.&lt;/p&gt;

&lt;p&gt;And this brings us to SourceTree.  SourceTree is a Git user interface which makes this particular task actually easy.  Here are the steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run SourceTree.&lt;/li&gt;
  &lt;li&gt;If SourceTree doesn’t open the right git project automatically, navigate to the correct project with File menu, Open command.&lt;/li&gt;
  &lt;li&gt;You should set your view to &lt;em&gt;Flat list (single column)&lt;/em&gt; and also &lt;em&gt;Split view staging&lt;/em&gt; if it isn’t that way.  This is done with the hamburger icon to the right of &lt;em&gt;Pending Files, sorted by path&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;In the panel on the lower left, select the checkbox next to the migration itself.  This will move the migration file up to the Staged Files area.  This is equivalent to a &lt;em&gt;git add&lt;/em&gt; operation.&lt;/li&gt;
  &lt;li&gt;In the panel on the lower left click on the schema file.  This gives you a text view of the whole schema file on the right.  Start by finding BOTH lines for the date stamp (one will be red and one will be green).  Select BOTH of these and click the &lt;em&gt;Stage lines&lt;/em&gt; button.  This is equivalent to a git add command for only these lines.&lt;/li&gt;
  &lt;li&gt;In the text view of the whole schema file, scroll down until you find the exact changes from your migration.  In this case we are looking for an index creation line on the things table.  This line was an addition to your schema.rb file so it should be in green.  When you find it, select that line (or lines), highlighting them, and then click &lt;em&gt;Stage lines&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;In the left most bottom pane, right click the overall schema.rb file and click “Reset” from the context menu.&lt;/li&gt;
  &lt;li&gt;Press Command + Shift + C and write a commit message and then click the Commit message.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank You&lt;/h2&gt;

&lt;p&gt;As always, thank you Sean Kennedy for teaching me this particular trick and also for editing this post for clarity.  Appreciated.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2019/05/10/the-schema-wtf-moment-take-2-an-excursion-into-sourcetree.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2019/05/10/the-schema-wtf-moment-take-2-an-excursion-into-sourcetree.html</guid>
        
        <category>rails</category>
        
        <category>db</category>
        
        <category>schema</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Want to Delete Temp Files - An Excursion into Software Engineering Suckitude</title>
        <description>&lt;p&gt;So today was a day of epic software engineering failure.  Let’s consider, just for a second, this string of commit messages:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;feature/ATT-1551-f - And goodbye ... it all goes away like the bad dream that it was
feature/ATT-1551-e - It is called a constant; sigh; oh and an entire rewrite
feature/ATT-1551-d - And let's go again - there are still hours in the day to get this wrong ...
feature/ATT-1551-c - hopefully, possibly the last iteration on this humiliating bit of work
feature/ATT-1551-b - Argggh !!!!
feature/ATT-1551-a - Debugging hooks for understanding this bit of madness
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any experienced engineer can read between the lines of that level of &lt;em&gt;gallows humor&lt;/em&gt; in these commit messages and know, I mean &lt;em&gt;know&lt;/em&gt;, what’s coming.  This whole blog post is an illustration of how something that is drop dead simple can really, really bite you in the ass.  And you can take away from this either a smug feeling of “I’m smarter than that” or you are raising a glass to me somewhere and saying “you poor damn bastard, there, there”.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;This all started with the git branch &lt;em&gt;feature/ATT-1551&lt;/em&gt; which added a feature to our architecture which cleaned up straggling temp files that had been left behind by a variety of different processes that generated data locally that was then queued up to S3.  Yes, yes, yes I know fix the cause not the symptom but that was out of the scope of the defined work; you know the drill.&lt;/p&gt;

&lt;p&gt;We are a Rails application and I made the decision to implement this as a Capistrano post deploy hook that executed a Capistrano rake task.  That was, unbeknownst to me, my &lt;em&gt;first&lt;/em&gt; mistake.  The specification on the ticket said that the need was to clean up any files in shared/tmp that were older than 10 days.  My initial pass on this ended up being about maybe 25 lines of ruby implemented in lib/capistrano/tasks/tmp_files.rake.&lt;/p&gt;

&lt;h2 id=&quot;and-heres-where-it-all-began&quot;&gt;And Here’s Where It All Began&lt;/h2&gt;

&lt;p&gt;My code went thru the pull review process just fine until there was a comment that said something to the effect of “Wouldn’t it be better if the 10 days was not fixed in the code but could be adjustable from outside so we didn’t have to redeploy if we needed a different amount of days”.  That sounds logical, right?  The pull request discussion thread diverged between passing in a parameter or using an environment variable and it ultimately converged on an environment variable because a parameter didn’t work since this was already buried inside an Ansible based deploy engine that executed a Capistrano task (that then called a post deploy hook).  So with that decision, the descent into madness truly began.  And if my description of Ansible spawning Capistrano spawning a post deploy hook feels virtually Cthulian to you, well, &lt;em&gt;yep&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidebar:&lt;/em&gt; I’d love to tell you that all of this was easily resolved but that wouldn’t be fun, now would it?  Instead, while the initial code was written by me, getting this actually debugged and solved took two senior software engineers most of a day. And it is an excellent illustration of just how complex even something simple can be in today’s world.  The second engineer got pulled in right about here, after the pull review process centered around environment variables.&lt;/p&gt;

&lt;h2 id=&quot;nothing-is-actually-simple-anymore&quot;&gt;Nothing is Actually Simple Anymore&lt;/h2&gt;

&lt;p&gt;We have a file of environment variables that are automatically defined by our application using the &lt;a href=&quot;https://github.com/laserlemon/figaro&quot;&gt;Figaro gem&lt;/a&gt;.  Normally I’m not an environment var fan but this really works well so I followed our normal process for this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go into our Ansible stack&lt;/li&gt;
  &lt;li&gt;Decrypt the environment variable files (these are YAML files and that becomes relevant later on)&lt;/li&gt;
  &lt;li&gt;Add the new variable to each of our environments (production, training, staging)&lt;/li&gt;
  &lt;li&gt;Encrypt the environment variables&lt;/li&gt;
  &lt;li&gt;Move the environment variable files up to our Jenkins deployment box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason for the convoluted process is that we don’t have these files as part of our Capistrano deployment since they expose serious credentials.  Instead our Ansible wrapper around the deployment handles moving these up and in place.  And this uses Ansible’s transparent encrypting / decrypting as well.&lt;/p&gt;

&lt;p&gt;After a few go arounds of “what should this variable be named”, I added to our Ansible stack two shell files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;decrypt_all.sh&lt;/li&gt;
  &lt;li&gt;encrypt_all.sh&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So at least that makes this process suck less given that each command line for this is about 112 characters long and I have to do it three times every single time.  I try and follow a boy scout’s approach to code where you leave things better than you found them whenever possible.  And this did make things better.&lt;/p&gt;

&lt;h2 id=&quot;using-the-environment-variables&quot;&gt;Using the Environment Variables&lt;/h2&gt;

&lt;p&gt;Once this was done, that led to modifying the code to pull the value out of the environment variable.  Now this should have been nothing more than reading ENV[‘DELETE_TMP_FILE_DAYS’] for the value TRUE, couldn’t be easier, right?  Ha!  &lt;em&gt;Shudder&lt;/em&gt;. Given that this was implemented as a Capistrano post deploy hook, getting any bit of this tested boiled down to this process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new branch for every single debugging attempt (because we have to go thru a pull review process)&lt;/li&gt;
  &lt;li&gt;Write code&lt;/li&gt;
  &lt;li&gt;Git commit / add / push&lt;/li&gt;
  &lt;li&gt;Go thru pull review process&lt;/li&gt;
  &lt;li&gt;Deploy&lt;/li&gt;
  &lt;li&gt;Wait thru a roughly 11 minute deploy cycle for something to fail&lt;/li&gt;
  &lt;li&gt;Read logs to analyze failure&lt;/li&gt;
  &lt;li&gt;Lather / Rinse / Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that this is a post deploy hook executed Rake task there is no way to debug this easily.  Yes you can check the code.  And you can execute it manually in Rails console but that’s not quite the same as it actually running in the environment … or is it?&lt;/p&gt;

&lt;h2 id=&quot;cutting-to-the-chase-or-11-steps-into-madness&quot;&gt;Cutting to the Chase Or 11 Steps Into Madness&lt;/h2&gt;

&lt;p&gt;This is getting kind of long already so I’m going to cut to the chase and bullet point the issues as we hit them:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The first issue was that we kept defaulting to the if / else case where our environment variable wasn’t being set.  And since I was casting this to a constant for safety (remember this code deletes files on a file system so it is wise to be damn careful with it), this meant that the constant kept failing a defined? check.  We had put in a raise “Constant not defined” unless defined?(CONSTANT_NAME) check before anything got deleted as a safe guard and that one line of code entirely saved us.  Kudos to my coding partner, Sean Kennedy, for that.&lt;/li&gt;
  &lt;li&gt;This first issue ultimately ended up being tied to recognizing that a Capistrano post deploy hook &lt;em&gt;DOES NOT RUN UNDER RAILS&lt;/em&gt;!  And that means that anything loaded by a Rails initializer isn’t available — meaning the Figaro gem never executed so the values in our environment variable file weren’t even being seen.  But since our environment variable file syntax was read from using ENV[‘VARIABLE_NAME’] we weren’t getting failures due to ENV not existing (ENV always exists, even in an IRB environment).  We would just get a nil value instead of the expected string value of TRUE or FALSE.&lt;/li&gt;
  &lt;li&gt;Figuring out that we weren’t in a Rails environment was one of those face palm moments — you’ve seen the meme, the one with Picard.  I’m more than a bit embarrassed to point out how long that took so we’re just going to move on past that issue.&lt;/li&gt;
  &lt;li&gt;Once we recognized that Figaro wasn’t available and that we would never get a value for our environment variable key, it wasn’t hard to write our own YAML reading routine.  That went thru a deploy cycle and we were fairly certain that it would be solved any minute now — what a crock!&lt;/li&gt;
  &lt;li&gt;What we found was that even though our YAML file had a structure of KEY_NAME=TRUE, we weren’t getting back TRUE, we were getting back true.  So, of course, our if test which matched on ‘TRUE’ would fail.&lt;/li&gt;
  &lt;li&gt;At this point we started testing using the IRB (remember you aren’t using Rails) console and YAML parsing.  And this led us to realize that YAML has automatic type coercion for a range of possible true / false values. The first clue was when my editor showed color coding on the YAML value we had, but not when we changed it to something odd like “ASDF”.  And we ultimately found the &lt;a href=&quot;https://yaml.org/type/bool.html&quot;&gt;YAML spec&lt;/a&gt; which takes about booleans.  Who even knew there was a spec for YAML???  Any of these in a YAML file will automatically get coerced into a boolean: &lt;em&gt;y, Y, yes, Yes, YES, n, N, no, No, NO, true, True, TRUE, false, False, FALSE, on, On, ON, off, Off, OFF&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;I don’t know about any other developer but to hell with that noise!  I changed our value from TRUE to 1.  And because I wasn’t sure if that would come to me as a value or a string, I ended up with a logical check like this: [1,”1”].include?(ENV[‘DELETE_TMP_FILE_DAYS’]).&lt;/li&gt;
  &lt;li&gt;The next hurdle was that we realized that it was ambiguous where we should be looking for the YAML file.  The backtrace indicated that the YAML file should be found on the box where Capistrano was executing but logically because the post deploy hook executes each node being deployed, it should be on that machine.  And given that there was an 11 minute minimum cycle time per attempt to figure this out, we simply said to heck with it and tested for each directory and read from whichever existed.  And don’t even bring up the fact that the exception Ruby throws on an invalid directory isn’t Errno::ENOENT but instead a system call exception.  Sheesh.&lt;/li&gt;
  &lt;li&gt;Once we finally got past nothing more than the boolean test of whether or not to run this (remember that’s all we’ve been trying to do so far, isolate a boolean from inside the code base to an environment variable), we found the code failing entirely.  And this time the failure was weird and unclear.  It had the feeling that Capistrano itself was swallowing at least one exception.  Doing a read of the code line by line made is realize that the date time math was using a Rails-ism, 10.days.  And, remember, we aren’t in Rails now (even though this is a Rails app), this is a Capistrano post deploy hook so we are really running an an IRB context without ActiveSupport.&lt;/li&gt;
  &lt;li&gt;And that brought in the need to treat this not as logical days but instead as old school Unix epoch math.  So it become a matter of comparing a File.ctime(path_to_file).to_i (for the epoch conversion) against Time.now.to_i - (10 * 86400).  My pairing partner wanted to bring in ActiveSupport for the clarity of the 10.days expression but I was having none of that, ActiveSupport is a beast.&lt;/li&gt;
  &lt;li&gt;With each of these changes, we would make the code better and better, each time and we were finally at a point where the code was actually what even I would call good.  It was well structured, well written and clean.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sidebar-what-about-test-coverage&quot;&gt;Sidebar: What About Test Coverage&lt;/h2&gt;

&lt;p&gt;Someone out there reading this is pounding their desk and shouting “YOU SHOULDA WRITTEN TESTS DUMB ASS!!!”.  Now normally I would agree with you but there are a few problems with that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rake tasks aren’t well testable; God bless Jim Weirich but rake tasks have always been an aside to testing&lt;/li&gt;
  &lt;li&gt;There isn’t, to my knowledge, a way to test a rake task that is executing under Capistrano and isn’t actually part of Rails&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-that-brings-us-to-the-final-solution&quot;&gt;And that Brings Us to The Final Solution&lt;/h2&gt;

&lt;p&gt;And with the code finally rewritten and being actually implemented in a very service object pattern, my co worker said “WAIT!  Why are we doing this as a Capistrano post deploy hook anyway?  Why isn’t this just a CRON job calling a rake task”  This led to a discussion of the issues around CRON and &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;RbEnv&lt;/a&gt; and the need for the DevOps around getting a CRON job installed on N boxes.  And then he said the magic incantation: “Why don’t we just use &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; for this and execute it regularly via &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt;?”  Ansible is an outstandingly good DevOps environment and one that I actually taught him.  My initial argument to him against Ansible was because this was fundamentally an imperative task and Ansible was declarative.  His counter was why not just use Ansible to solve this via a &lt;a href=&quot;https://fuzzyblog.io/blog/linux/2019/05/09/linux-tip-find-all-files-older-than-10-days-and-delete-them.html&quot;&gt;bash shell expression&lt;/a&gt;.  I thought about it for a few, and, son of a bitch, he was right.  In about 40 minutes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We tossed out all of the Ruby&lt;/li&gt;
  &lt;li&gt;We tossed out the entire Capistrano post deploy task&lt;/li&gt;
  &lt;li&gt;We tossed out the invocation of the call back (ok I remembered this right now as I wrote this section of the blog post)&lt;/li&gt;
  &lt;li&gt;We spun up an Ansible Playbook and Role that executed a shell one liner and had it running on a dozen plus boxes.  This included researching and testing how to do this with shell.&lt;/li&gt;
  &lt;li&gt;We defined a Jenkins scheduled task that ran this every 7 days at an off time using a simple CRON syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the before / after on the final Ansible implementation showing the change in our disc space utilization:&lt;/p&gt;

&lt;h3 id=&quot;before&quot;&gt;BEFORE&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok: [194.55.22.38] =&amp;gt;
  msg: 'Actual free disc space: 5.3G'
ok: [194.55.19.230] =&amp;gt;
  msg: 'Actual free disc space: 5.6G'
ok: [194.55.23.18] =&amp;gt;
  msg: 'Actual free disc space: 5.6G'
ok: [194.55.23.10] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.30.164] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.20.214] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.30.119] =&amp;gt;
  msg: 'Actual free disc space: 8.2G'
ok: [194.55.29.248] =&amp;gt;
  msg: 'Actual free disc space: 8.7G'
ok: [194.55.26.185] =&amp;gt;
  msg: 'Actual free disc space: 6.7G'
ok: [194.55.24.235] =&amp;gt;
  msg: 'Actual free disc space: 6.6G'
ok: [194.55.30.37] =&amp;gt;
  msg: 'Actual free disc space: 2.3G'
ok: [194.55.31.216] =&amp;gt;
  msg: 'Actual free disc space: 2.4G'
ok: [194.55.29.170] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.29.107] =&amp;gt;
  msg: 'Actual free disc space: 11G'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;after&quot;&gt;AFTER&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok: [194.55.22.38] =&amp;gt;
  msg: 'Actual free disc space: 5.3G'
ok: [194.55.19.230] =&amp;gt;
  msg: 'Actual free disc space: 5.8G'
ok: [194.55.23.18] =&amp;gt;
  msg: 'Actual free disc space: 5.8G'
ok: [194.55.23.10] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.30.164] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.20.214] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.30.119] =&amp;gt;
  msg: 'Actual free disc space: 8.3G'
ok: [194.55.29.248] =&amp;gt;
  msg: 'Actual free disc space: 8.7G'
ok: [194.55.26.185] =&amp;gt;
  msg: 'Actual free disc space: 6.7G'
ok: [194.55.24.235] =&amp;gt;
  msg: 'Actual free disc space: 6.6G'
ok: [194.55.30.37] =&amp;gt;
  msg: 'Actual free disc space: 7.2G'
ok: [194.55.31.216] =&amp;gt;
  msg: 'Actual free disc space: 7.0G'
ok: [194.55.29.170] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.29.107] =&amp;gt;
  msg: 'Actual free disc space: 11G'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll notice that boxes 194.55.30.37 and 194.55.31.216 went from 2 odd gigs of free disc space to 7 odd gigs of disc space.  That’s a huge win.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The hardest part about debugging anything is when your mental model doesn’t match what’s actually going on under the hood.  The actual epiphany moment was when I realized that this wasn’t running under Rails itself.  After that things started to fall into place.&lt;/p&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank Yous&lt;/h2&gt;

&lt;p&gt;A big shout out to Sean Kennedy who did a fantastic job debugging this with me and came up with a great final solution.  Kudos also to various friends who im’d with me over the course of the day and provided moral support on an extremely frustrating day.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/software_engineering/2019/05/09/so-you-want-to-delete-temp-files-an-excursion-into-software-engineering-suckitude.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/software_engineering/2019/05/09/so-you-want-to-delete-temp-files-an-excursion-into-software-engineering-suckitude.html</guid>
        
        <category>software_engineering</category>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Rails, Migrations, Multiple Developers and the Schema WTF Moment</title>
        <description>&lt;p&gt;I’ve been doing Rails now since 2007.  However for much of that time I was a project lead and one of the tasks that I reserved for myself was &lt;em&gt;all&lt;/em&gt; schema changes.  One of the benefits of that was that because I did all the primary schema changes, I rarely, if ever, had schema conflicts.  I am now on a project where, while I am a Senior Software Engineer, I am not the lead and the schema changes are done by everyone on the team, all the time.&lt;/p&gt;

&lt;p&gt;The consequence of this is that while Rails should handle any schema conflicts correctly, well, &lt;em&gt;should&lt;/em&gt; is the operative term.  In practice we have found that depending on how you do your git pull and git branching, you often (like every damn branch you make) end up with a schema conflict.  And since our schema file is enormous (think over 3,000 lines in schema.rb), figuring this out can be brutal.  This moment where you realized that your schema is borked is what I call the &lt;em&gt;Schema WTF Moment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;While I’ve struggled with this for a while and never found a decent solution, today, I was speaking with another senior guy (my buddy Sean Kennedy) and he very cogently explained the issue in a way that made sense.  This is my write up of his description.  He described it thusly:&lt;/p&gt;

&lt;p&gt;“If you do a git pull, you should already have the latest schema, affected by any migrations that came in via the pull, but your database tables may not be updated. So, you do need to run the migrations after pulling, but this will often change db/schema.rb. If all you’ve done is pull and migrate, there’s no reason you should be responsible for committing any of the resultant schema changes as they don’t technically belong to you, and they may end up being extraneous/incorrect, so resetting the schema diff makes the most sense.”&lt;/p&gt;

&lt;p&gt;To help you understand our approach to git, we use:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;All work is done in a branch.&lt;/li&gt;
  &lt;li&gt;All branches are created from develop.&lt;/li&gt;
  &lt;li&gt;Once a branch is approved, it is merged into develop.&lt;/li&gt;
  &lt;li&gt;The develop branch is automatically deployed to staging with every merge.&lt;/li&gt;
  &lt;li&gt;A production deploy automatically merges develop into master.&lt;/li&gt;
  &lt;li&gt;The master branch is only deployed to production.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is my step by step version of what to do before beginning a branch.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Switch your code base over to the develop branch.&lt;/li&gt;
  &lt;li&gt;Pull the latest code.&lt;/li&gt;
  &lt;li&gt;Run bundle exec rake db:migrate.  This updates your schema.rb file locally but you want to throw these changes away before beginning any work.&lt;/li&gt;
  &lt;li&gt;Do a git checkout db/schema.rb to throw away the changes&lt;/li&gt;
  &lt;li&gt;Create your new branch.&lt;/li&gt;
  &lt;li&gt;Change to your new branch and begin work&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 09 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html</guid>
        
        <category>rails</category>
        
        <category>schema</category>
        
        <category>migration</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Linux Tip - Find All Files Older than 10 Days and Delete Them</title>
        <description>&lt;p&gt;It is easy to forget at times just how powerful simple Linux shell commands here.  Here’s one I used recently that finds all files in a single directory that are older than 25 days and deletes them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find /apps/foo/shared/tmp/ -mtime +25 -maxdepth 1 -exec rm {} \;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The -mtime param takes a number of days.  The maxdepth takes the number of directories below this to look (1 means the specified directory).  The exec takes the list of files produced and runs rm on each of them.  For reference, this was discovered from &lt;a href=&quot;https://serverfault.com/questions/122824/linux-using-find-to-locate-files-older-than-date/122854#122854&quot;&gt;ServerFault&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just in case you’re curious, I tested this on a system with more than 11,000 files in a single directory and it executed flawlessly — no problems at all and it cleaned up more than 5 gigs of disc space.&lt;/p&gt;

&lt;p&gt;And you don’t just have to delete files of course.  If you wanted to say find all the files older than 25 days and list them out with the date and time stamp then you could use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find /apps/cas-seas3/shared/tmp/ -mtime +10 -maxdepth 1 -exec ls -al {} \;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This was how we debugged this courtesy of a &lt;a href=&quot;https://stackoverflow.com/questions/20893022/how-to-display-modified-date-time-with-find-command/20893429#20893429&quot;&gt;Stack Overflow post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2019/05/09/linux-tip-find-all-files-older-than-10-days-and-delete-them.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2019/05/09/linux-tip-find-all-files-older-than-10-days-and-delete-them.html</guid>
        
        <category>linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
  </channel>
</rss>
