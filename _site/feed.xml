<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 21 Dec 2016 17:05:16 -0500</pubDate>
    <lastBuildDate>Wed, 21 Dec 2016 17:05:16 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>PostMac Roundup</title>
        <description>&lt;p&gt;Here are a few more things in the ongoing PostMac roundup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://techcrunch.com/2016/12/19/apples-tim-cook-assures-employees-that-it-is-committed-to-the-mac-and-that-great-desktops-are-coming/&quot;&gt;Apple’s Tim Cook assures employees that it is committed to the Mac and that ‘great desktops’ are coming&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13217008&quot;&gt;HN Discussion&lt;/a&gt;  Given that Tim Cook is the one who said publicly that people should use iPads and not laptops I’d have to wonder about this.  &lt;a href=&quot;http://daringfireball.net/linked/2016/10/31/cook-why-would-you-buy-a-pc-anymore&quot;&gt;Gruber on This Comment&lt;/a&gt;.  Lots of good comments on people using Linux in place of OSX here.  &lt;a href=&quot;https://news.ycombinator.com/item?id=13217412&quot;&gt;A brilliant comment&lt;/a&gt;.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https://www.bloomberg.com/news/articles/2016-12-20/how-apple-alienated-mac-loyalists&quot;&gt;How Apple Alienated Mac Loyalists&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13220623&quot;&gt;HN Discussion&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 21 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/postmac/2016/12/21/postmac-roundup.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/postmac/2016/12/21/postmac-roundup.html</guid>
        
        <category>postmac</category>
        
        <category>mac</category>
        
        
        <category>postmac</category>
        
      </item>
    
      <item>
        <title>Using Gems to Slay the Monolith Part 1 - Validations</title>
        <description>&lt;p&gt;We all talk quite a bit about the monolithic Ruby application but the simple truth of it is that your rails application really, really wants to be monolithic.  Let’s explore the concept of an email sending application that wants to offer an API for contact import.  If you think about this you’re basically saying:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Let’s externalize the process of importing user data&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ideally we’d like to build this with the new Rails 5 api mode that speaks JSON as its lingua franca.  Rails 5 api mode is small, fast and like Rails was before the asset pipeline – easy.  And, personally, I love API mode.  But since API mode does not ANY view handling this means that you are inherently building two rails applications:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the user facing portion&lt;/li&gt;
  &lt;li&gt;the API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since user data inevitably needs to be displayed and generally created in the user facing application as well as in the api, you’re talking about a user model that exists in two places.  And that means that all the support cruft like validations needs to exist in both places.  That’s not DRY at all – it is verbose beyond belief.&lt;/p&gt;

&lt;h1 id=&quot;cross-project-code-sharing-1---git&quot;&gt;Cross Project Code Sharing 1 - Git&lt;/h1&gt;

&lt;p&gt;In an idealized world you would think that git would race to our rescue and be the hero here but I’ve looked into git for cross project model re-use and my response was “icky poo”.  Another developer I know, Winston, looked into it and wrote up the options but had a similar feel.&lt;/p&gt;

&lt;h1 id=&quot;cross-project-code-sharing-2---a-gem-based-approach&quot;&gt;Cross Project Code Sharing 2 - A Gem Based Approach&lt;/h1&gt;

&lt;p&gt;When you come right down to it we actually have a model for code sharing in the Rails world and it is the Ruby Gem.  I was in Rails prior to gems and still remember, fondly, the days of plugins.&lt;/p&gt;

&lt;p&gt;What if there was a website to support it??? validationhub.com&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 12:11:05 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/12/20/using-gems-to-slay-the-monolith-part-1-validations.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/12/20/using-gems-to-slay-the-monolith-part-1-validations.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>monolith</category>
        
        <category>validations</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Apple - A Tale of Too Litle Storage</title>
        <description>&lt;p&gt;http://daringfireball.net/linked/2016/12/15/speirs-icloud-storage&lt;/p&gt;

&lt;p&gt;http://www.speirs.org/&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 07:55:03 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/20/apple-a-tale-of-too-litle-storage.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/20/apple-a-tale-of-too-litle-storage.html</guid>
        
        
      </item>
    
      <item>
        <title>The Kindest Thing I Ever Saw Disney Do</title>
        <description>
</description>
        <pubDate>Tue, 20 Dec 2016 07:02:48 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/20/the-kindest-thing-i-ever-saw-disney-do.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/20/the-kindest-thing-i-ever-saw-disney-do.html</guid>
        
        
      </item>
    
      <item>
        <title>David Rovics Community Supported Art or a Tale of PayWoe and UI / UX Failures for Startups to Learn From</title>
        <description>&lt;p&gt;Tales on the Internet of problems with PayPal are damn near epic in their size.  Everyone, always, seems to have issues with PayPal and I am no exception.  Part of this is the nature of PayPal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a long running Internet service - I remember the first time I used PayPal and that was three houses ago (not three rented houses; three owned houses); if I measure PayPal in terms of places I have lived then the number is 8.&lt;/li&gt;
  &lt;li&gt;focus on a single persistent personal address; I have been using the same email address since the early days of gMail. It is how PayPal knows me but that means there is “contact cruft” attached to it in the form of dead address; dead cell phone numbers&lt;/li&gt;
  &lt;li&gt;it is constantly under attack.  I read &lt;a href=&quot;https://www.amazon.com/PayPal-Wars-Battles-Media-Planet/dp/1936488590&quot;&gt;The PayPal Wars&lt;/a&gt; back when I worked with &lt;a href=&quot;https://medium.com/@kareem.m?source=false---------0&quot;&gt;Kareem&lt;/a&gt; and I’ve fought spam wars in both email and blog so I understand how being under constant attack changes how you build and design products.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the people I grew up with is &lt;a href=&quot;http://www.davidrovics.com&quot;&gt;David Rovics&lt;/a&gt; and consider a friend albeit one I haven’t seen since 1985.  I remember trading comic books with him at his parent’s house back in the late 1970s.  Our political leanings couldn’t be more different - he’s a card carrying anarchist / socialist / musican who writes beautiful songs that honestly bring tears to my eyes.  Songs of social significance is how he describes them and he isn’t wrong.  Me?  I may live in Indiana but I’m deeply tied to tech entrepreneurialism and the open source world.  We could not be more different along ideological lines but I have damn near infinite respect for him.&lt;/p&gt;

&lt;p&gt;David is also a writer / blogger and his piece about the &lt;a href=&quot;http://songwritersnotebook.blogspot.com/2016/03/rejected-by-america.html&quot;&gt;differences between America and Europe&lt;/a&gt; is illuminating.  I don’t agree entirely with his conclusions but I also don’t argue with the facts.  If you like folk music / songs with meaning then his stuff, all freely available on &lt;a href=&quot;https://davidrovics.bandcamp.com/&quot;&gt;BandCamp&lt;/a&gt; is fascinating.  Personally I’d highly recommend the &lt;a href=&quot;https://www.youtube.com/watch?v=Z_rCdNdkb_g&quot;&gt;Battle of Blair Mountain&lt;/a&gt; which tells a dark tale of American labor relations that you don’t learn in school – certainly not Wilton High School where David and I attended.&lt;/p&gt;

&lt;p&gt;So what does that very long introduction have to do with PayPal?  Well David is an artist which means that he sells CDs, tours, etc and he recently introduced his CSA or Community Supported Art program where you can sign up as a member for $50 / year (other options available as well).  And I tried, back in September, to signup only to be thwarted by PayPal issues.  And then, sadly, I got busy and lost it amongst the weeks of AWS, Ansible, server migrations, code migrations, learning elixir, etc.  But you should never forget your friends.  Yesterday I noticed that David’s main site was down so I dropped him an email and that inspired me to finally fix my PayPal account.  In the process I noticed a few UI issues that I found surprising in a site of PayPal’s scale.&lt;/p&gt;

&lt;p&gt;You would think that a company like PayPal would have a finely tuned UI / UX team around the issues of common problems. Somehow, given what I just experienced, I don’t think so.  And therein lies the tale.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-first---login-and-verification&quot;&gt;Problem the First - Login and Verification&lt;/h1&gt;

&lt;p&gt;This happened yesterday morning and I did not capture any screenshots because, well, my bad.  Given that PayPal had old contact info for all my cell phones user verification was tricky but I got past it.  To be entirely honest tho I was actually kind of happy that verification was tricky - that means accounts cannot be compromised.&lt;/p&gt;

&lt;h1 id=&quot;problem-2---expired-card&quot;&gt;Problem 2 - Expired Card&lt;/h1&gt;

&lt;p&gt;When I went to purchase from a link from David’s site, I got this screen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/paypal_link_to_add_new_card_is_where.png&quot; alt=&quot;paypal_link_to_add_new_card_is_where.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you notice there is no way to add a new card here and the card that they had on file for me was easily 5 years old.  Now I do get that the designers might have been worried about breaking the payment flow by allowing a link to add a new card.  But given that I’m not a UI guy and I can easily think of at least one way around that, should’t they been able to?  I have to think that adding a new credit card is a fairly common thing if you are PayPal.  And if the card is as old as I had then shouldn’t a link be presented at least in that case if not every case?&lt;/p&gt;

&lt;h1 id=&quot;problem-3---the-no-no-no-screen&quot;&gt;Problem 3 - The No No No Screen&lt;/h1&gt;

&lt;p&gt;So I navigated thru the PayPal ui and finally found where to add a new card – the correctly named “Wallet”.  So I copied and pasted my details from &lt;a href=&quot;https://fuzzygroup.github.io/blog/software_worth_purchasing/2016/09/15/software-worth-purchasing-02-enpass.html&quot;&gt;Enpass&lt;/a&gt; (highly recommended btw) and I got what I think of as the No No No screen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/paypal_no_no_no.png&quot; alt=&quot;paypal_no_no_no.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yeah I get it.  My wife has our main credit card attached to her PayPal account but she’s sleeping.  Time to dig out the wallet and find some other card.  But, again, shouldn’t there have been a link here to use a different card instead?  The web is, inherently, a hyper linked medium – didn’t the PayPal designers ever get the memo?&lt;/p&gt;

&lt;p&gt;So I navigated backwards thru the UI and found the place to add a different credit card and then went back to my friends site and completed my purchase.  Huzzah!&lt;/p&gt;

&lt;h1 id=&quot;good-things&quot;&gt;Good Things&lt;/h1&gt;

&lt;p&gt;There are a few good things that PayPal has done that in all fairness I should point out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The list of security questions has been substantially revised.  My older security questions where last 4 of social and mother’s maiden name.  Now it is things like “name of first pet” / “name of favorite childhood stuffed toy”.  That isn’t as good as write your own question but it is much, much harder to find that type of personal trivia online.&lt;/li&gt;
  &lt;li&gt;I was able to add a credit card, pay for something and then delete the credit card even tho the transaction might not have been processed yet.  That is a wonderful design decision and very much pro user.  Kudos!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-to-fix-core-usability-if-you-are-a-startup&quot;&gt;How to Fix Core Usability if You Are a Startup&lt;/h1&gt;

&lt;p&gt;The take away here and the reason that I tagged this as startup is that even well established, mature companies get common UI / UX issues wrong all the time.  I don’t think I’m wrong to think that adding a credit card is a common use case for PayPal and that it should have been a 1 step action from payment.  Instead I spent about 15 minutes to do nothing more than complete one purchase.  If it wasn’t for my friend then there’s a very good chance that I would have dropped out – as I did once before.&lt;/p&gt;

&lt;p&gt;The single best way to avoid this type of UI disaster is to simply watch your users use your product, take notes and then iterate on your product until that issue is addressed.  Then you go back to a different user and watch them try and do the same thing and see if you made it better or worse.  And repeat until this whatever that issue is is fixed.  I learned this lesson a number of times over the years but most recently from &lt;a href=&quot;https://twitter.com/kouriskalligas&quot;&gt;Kouris&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Dave_Sifry&quot;&gt;Dave&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;People, particularly “UX specialists”, want to make a big deal out of usability but it really isn’t all that hard or even all that expensive.  All you need to do, if you want to solve these type of core usability issues, is have &lt;strong&gt;the will to do it&lt;/strong&gt;.  You have to take responsibility for the problem, focus on it and then set an agenda like “this week we’re going to improve login”.  It can be absolutely exhausting since you’re iterating on the same, often tiny details, over and over but that’s part of the game.  A software engineer, particularly someone like myself, generally won’t take ownership of that kind of problem since our focus is internals but someone on the management or product side absolutely can do this.  Sometimes the improvements are absolutely tiny – perhaps better messaging is needed or even just a link.  As an example, messaging in one case and a link in both cases would have addressed all of my issues above.&lt;/p&gt;

&lt;p&gt;In closing, given the size of PayPal I can actually sort of understand why getting this fixed is hard – I suspect that there are a lot of organizational boundaries to cross and people to deal with.  A startup shouldn’t have that problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Kudos to &lt;a href=&quot;https://fuzzygroup.github.io/blog/software_worth_purchasing/2016/09/11/software-worth-purchasing-01-acorn.html&quot;&gt;Acorn&lt;/a&gt; for being easy enough to use that even I, a thumb fingered, graphically challenged engineer, could get it right.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rant/2016/12/20/david-rovics-community-supported-art-or-a-tale-of-paywoe.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rant/2016/12/20/david-rovics-community-supported-art-or-a-tale-of-paywoe.html</guid>
        
        <category>startup</category>
        
        <category>paypal</category>
        
        <category>paywoe</category>
        
        <category>rant</category>
        
        <category>art</category>
        
        <category>rovics</category>
        
        <category>ui</category>
        
        <category>ux</category>
        
        <category>usability</category>
        
        
        <category>rant</category>
        
      </item>
    
      <item>
        <title>Make Testing Easy</title>
        <description>&lt;p&gt;bundle exec rake crawl2016_q4:test_crawl –trace&lt;/p&gt;

&lt;p&gt;After crawling site: 457, domain: lowrystate.com there were:
      pages_count: 43 | 46 (prior)
      links_count: 1337 | 1333 (prior)
page_bodies_count: 43 | 46 (prior)
      forms_count: 0 | 3 (prior)
    iframes_count: 1 | 0 (prior)
unique_urls_count: 152 | 73 (prior)
Total crawl time: 79.70658148999792 | seconds_per_page: 1.8536414299999515&lt;/p&gt;

&lt;p&gt;Tests for writing to the WRONG table – In the q3 data set there are:
        q3_pages: 0
        q3_links: 0
        q3_forms: 0
      q3_iframes: 0
  q3_unique_urls: 74
  q3_page_bodies: 0
MAJOR ERROR - The q3 calls above should be 0&lt;/p&gt;

&lt;p&gt;After crawling site: 457, domain: lowrystate.com there were:
      pages_count: 43 | 46 (prior)
      links_count: 1337 | 1333 (prior)
page_bodies_count: 43 | 46 (prior)
      forms_count: 0 | 3 (prior)
    iframes_count: 1 | 0 (prior)
unique_urls_count: 74 | 73 (prior)
Total crawl time: 119.04229378001764 | seconds_per_page: 2.768425436744596&lt;/p&gt;

&lt;p&gt;Tests for writing to the WRONG table – In the q3 data set there are:
        q3_pages: 0
        q3_links: 0
        q3_forms: 0
      q3_iframes: 0
  q3_unique_urls: 0
  q3_page_bodies: 0
No crawling into the q3 data so good!&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Dec 2016 06:57:24 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/19/make-testing-easy.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/19/make-testing-easy.html</guid>
        
        
      </item>
    
      <item>
        <title>The Worst Business Decision I Ever Saw Disney Make</title>
        <description>&lt;p&gt;My wife, kids and I are at DisneyWorld right now for a pre-Christmas vacation.  There are 4 of us stuffed into a &lt;em&gt;single&lt;/em&gt; room since when we booked it the adjoining room was not available.  This happened yesterday so the date was December 18th and we noticed early in the day that the room adjoining ours was actually empty.  And, at 5 pm, it was still empty so my wife and I went to the front desk and asked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is that room really empty?&lt;/li&gt;
  &lt;li&gt;Can we rent that room as well as ours?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This seems like a simple, straightforward request.  Unfortunately it took ten minutes of waiting and two authorization phone calls for the person helping us to write a price down on a scrap of paper and show it to us.  The price for that unoccupied room was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;$493 / night&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;She mouthed some sort of corporate line about how “when she rents it directly to the customer she &lt;strong&gt;has&lt;/strong&gt; to charge &lt;em&gt;rack rate&lt;/em&gt;.”  So for the four remaining nights of our trip adding this additional room would cost almost $2,000 or more than we are currently paying.  Curiously she seemed to know that this price was too high since she seemed mildly embarrassed about giving us the price.&lt;/p&gt;

&lt;p&gt;My only response here is: &lt;em&gt;balderdash&lt;/em&gt;, &lt;em&gt;poppycock&lt;/em&gt; and what a &lt;em&gt;load of hooey&lt;/em&gt;!  Yes I pulled that from an old episode of &lt;a href=&quot;http://www.imdb.com/title/tt3514324/&quot;&gt;Scorpion&lt;/a&gt;.  But let’s look at this from a business perspective.&lt;/p&gt;

&lt;h1 id=&quot;trick-question-1--what-is-the-value-of-an-unsold-hotel-room&quot;&gt;Trick Question #1- What is the Value of an Unsold Hotel Room?&lt;/h1&gt;

&lt;p&gt;This isn’t actually much of a trick question, it is a simple one - the value of an unsold hotel room is &lt;strong&gt;$0&lt;/strong&gt;.  Each hotel room is only available for rent for 365 nights a year.  A hotel room that isn’t rented for a night is simply &lt;strong&gt;lost revenue&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;trick-question-2---what-are-the-additional-costs-of-renting-it-to-us&quot;&gt;Trick Question #2 - What Are the Additional Costs of Renting It to Us?&lt;/h1&gt;

&lt;p&gt;Now you could argue that by renting it to us, Disney incurs additional house keeping expenses but, at best, that’s an incorrect argument.  House keeping is already paid for since there is a person assigned to the floor anyway.  And, under normal circumstances, she would be planning on cleaning that room anyway.&lt;/p&gt;

&lt;h1 id=&quot;a-business-decision-so-bad-it-makes-me-sad&quot;&gt;A Business Decision So Bad It Makes Me Sad&lt;/h1&gt;

&lt;p&gt;The saddest thing of all in this case is that Disney actually knows who we are as customers.  My wife is a certified Disney nut and we have been to Disney an embarrassingly large number of times.  With the MagicBand system any Disney customer service rep seems to always know everything we spend / have done / etc.  As best I can tell our entire purchase history is always available to them.  This would have been a fantastic opportunity to reward a loyal customer with something like “Normally I have to rent it out at rack rate which is $493 / night but since you are a regular customer I can rent it out for $300 / night”.  We’re here for 4 more nights and that would have guaranteed Disney an additional $1,200 in revenue.  Sure it wouldn’t have been the $2,000 they might want but the room isn’t sold and I’d bet that if a room isn’t pre-booked right before Christmas then it is very unlikely to be booked.  Now my business background isn’t in hotels and I could be wrong here – perhaps there is a large quantity of last minute, pre-Christmas Disney bookings but I think not.&lt;/p&gt;

&lt;p&gt;Sad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: In discussing this with my wife she commented that perhaps Disney did look at our history and saw that we actually spend money with them and wanted to get the potential maximum for the room.  That’s an intriguing perspective but I would think that looking at the ratio here would be instructive i.e. if the requested upgrade doubles the overall vacation cost then no one would ever do it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: The room is still empty the next day.&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/12/19/the-worst-business-decision-i-ever-saw-disney-make.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/12/19/the-worst-business-decision-i-ever-saw-disney-make.html</guid>
        
        <category>startup</category>
        
        <category>business</category>
        
        <category>disney</category>
        
        <category>pricing</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Rails Refactoring Tip - When You Remove a Database Column and You Are Still Trying to Use It</title>
        <description>&lt;p&gt;I have to admit, up front, that this is a hacky, schlocky recommendation but it is also &lt;strong&gt;useful&lt;/strong&gt;.  As much as all of us would like to imagine that we refactor with grace, skill and perfection the reality is often far darker.&lt;/p&gt;

&lt;p&gt;I recently had a refactor involving the removal of database columns &lt;strong&gt;fail&lt;/strong&gt; on me.  I attempted something quite ambitious and it just didn’t work out.  And, worse, it involved removal of database columns from a production database so reverting to the older code is now quite an issue.  When I run it my master exception handler gives me output look this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EXCEPTION===========================================================================
undefined method `crawl_id=' for #&amp;lt;Form2016Q4:0x007fa52c346128&amp;gt;
Did you mean?  crawl=
               crawl
               crawl_url=
               crawl_url (PAGE) /Users/sjohnson/Dropbox/appdatallc/banks_before_refactor/banks/lib/common_page.rb 157 new_and_create_for_external_links
====================================================================================
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What’s happening here is that I’ve removed the crawl_id attribute from the form2016_q4s table. And the older code doesn’t understand this.  At this point I’m still trying to get evaluate if the original problem I was trying to fix is fixed in the older code check out.  I don’t want to make major changes in this check out since I’m still at that “should I stay or should I go now” part of the evaluation (i.e. toss out my refactor or try and pull in from the older check out).&lt;/p&gt;

&lt;p&gt;Here’s how I got around this, &lt;em&gt;attr_accessor&lt;/em&gt;. &lt;a href=&quot;http://notes.jerzygangi.com/using-attr-accessor-in-rails-model-classes/&quot;&gt;Good Blog Post&lt;/a&gt; versus &lt;a href=&quot;http://ruby-doc.org/core-2.0.0/Module.html#method-i-attr_accessor&quot;&gt;Actual Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;attr_accessor is one of those bits of Ruby magic that you don’t use often when when you need it you really, really need it.  It generates reader and writer methods for an instance variable and it does so automagically behind the scenes.&lt;/p&gt;

&lt;p&gt;Here’s the only change that I needed to make at the top of my class:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;attr_accessor :crawl_id
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note 1: that I put it at the top of my class by style preference; it could have gone anywhere after class and before protected or private.  I also used attr_accessor instead of attr_writer I wanted support to enable reads in case I had any of those.&lt;/p&gt;

&lt;p&gt;Note 2: If you’re using a deleted column in an ActiveRecord where statement you’re still going to have issues; those I had to fix by hand.&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/12/19/rails-refactoring-tip-when-you-remove-a-database-column-and-you-are-still-trying-to-use-it.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/12/19/rails-refactoring-tip-when-you-remove-a-database-column-and-you-are-still-trying-to-use-it.html</guid>
        
        <category>rails</category>
        
        <category>refactor</category>
        
        <category>activerecord</category>
        
        <category>database</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Working with Lithium Technical Support</title>
        <description>&lt;p&gt;Doing technical support is not a complicated thing.  Even doing technical support well is not complicated.  At its core technical support amounts to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Listen to the customer’s needs.&lt;/li&gt;
  &lt;li&gt;Help the customer with their problem.&lt;/li&gt;
  &lt;li&gt;Be accessible.&lt;/li&gt;
  &lt;li&gt;Don’t be a jerk&lt;/li&gt;
  &lt;li&gt;Don’t make the customer feel stupid.&lt;/li&gt;
  &lt;li&gt;Admit when you get it wrong.  When you support a complex product then, inevitably, you will get it wrong at some point.&lt;/li&gt;
  &lt;li&gt;Have examples and things in writing to give to the customer when they really need it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;During the course of the Interania project, Neal and I had the experience of interacting directly with both Lithium and MindTouch support and despite both companies supporting the same thing, SAML access to their product, the experiences could not have been more different:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Our experience with MindTouch was so overwhelmingly positive that I emailed our support technician’s boss and the subject line was “You Have an Outstanding Staffer in ScottG”&lt;/li&gt;
  &lt;li&gt;In all my years in this industry, I have never had a more frustrating experience with support than Lithium.  After about half the interactions with Lithium, I’d get off the phone and curse a blue streak and be angry for about an hour or more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;interacting-with-lithium&quot;&gt;Interacting with Lithium&lt;/h1&gt;

&lt;p&gt;We had two points of contact with Lithium:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Colleen&lt;/li&gt;
  &lt;li&gt;Vicky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Colleen was the overall project manager and I’m going to leave the discussion of Colleen’s issues to Neal.  Suffice it to say that I am not a fan of hers.&lt;/p&gt;

&lt;p&gt;Vicky was our technical contact and I believe his role was as implementation manager or implementation expert.  Here are the problems that we experienced with Vicky:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;No Adhoc Accessibility&lt;/strong&gt;.  Every single interaction with Vicky had to be scheduled and planned in advance.  He simply wasn’t someone would could be called for support.  Often times this would mean that we couldn’t interact with him for more than a day which makes debugging a complex system hard.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t be a Jerk&lt;/strong&gt;.  At different points in my career I’ve had direct responsibility for managing customer support including hiring and training support technicians.  One of the thing things I always used to emphasize to them is that this is a customer service position and while you know more than the customer with respect to our product, you don’t actually know more than the customer in general.  In general I used to sum up how to interact with customer as “Don’t be a Jerk”.  This is not a lesson that anyone ever taught Vicky because now, even more than a month after I last interacted with him, I’m still angry at him (and Lithium).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t Make the Customer Feel Stupid&lt;/strong&gt;.  Going right along with don’t be a jerk is don’t make the customer feel stupid and this is one that Vicky violated with in spades.  Given that a support technician always knows more about the product then the customer, it is very easy for a support technician to act superior and Vicky certainly did that.  Having looked up Vicky’s credentials on LinkedIn, I can certainly attest to Vicky being a smart guy but there’s no need to bolster your own ego by making someone else feel like crap when they make a mistake.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;He Never Admitted When He Got It Wrong&lt;/strong&gt;. I am always the first person to admit when I get something wrong and there were times in this project when I did get things wrong.  This was a complex project and we had two vendors with the opposite approach to the same technology which always leads to problems.  Now in the course of interacting with Vicky when I got something wrong I handled it correctly and a) apologies and b) admitted it.  Now, if I had been the only person who got things completely wrong, that would have been fine but Vicky was also absolutely technically wrong on at least 2 if not three occasions.  These were cases where he told me to do X and it was entirely unambiguous.  On these occasions where he got it wrong thus wasting both my time, Neal’s time and the time that we were paying them for support, he failed to ever admit it, take responsibility for it or apologize.  Even when I specifically called him out on this he would just brush it aside and fail to address it.  I understand that no one wants to be wrong but when you are then &lt;em&gt;own it&lt;/em&gt; and &lt;em&gt;learn from it&lt;/em&gt;.  Vicky did not and would not.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nothing in Writing&lt;/strong&gt;.  One of the things that I think affected our entire Lithium SSO implementation was that there wasn’t anything in writing after the initial presentation that Colleen gave us (and she did do a good job on that).  For example once we were ready to go live it was very unclear how that happened so I specifically asked Vicky for something in writing to guide us through the process.  It didn’t have to be much – even an email that enumerated the steps would have been fine.  Nothing was ever forth coming.  I suspect that Lithium themselves actually do not have a lot of SSO experience and this cannot really write this down in a cohesive fashion.  There were a number of very complex aspects to our integration that should have been clearly documented that were not.  Things like how data ownership works when you use SSO had to be figured out by trial and error.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Working with Lithium was enormously frustrating and much of the blame goes straight back to Vicky.  He is technically very smart but he lacks the people skills that make working with a customer an experience where the customer doesn’t want to reach through the screen and throttle him. Overall Lithium needs to put a lot of work into the customer service portion of their business.&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Dec 2016 19:04:13 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/18/working-with-lithium-technical-support.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/18/working-with-lithium-technical-support.html</guid>
        
        
      </item>
    
      <item>
        <title>Creating Week Day Only Events On Apple Calendar</title>
        <description>&lt;p&gt;https://support.busymac.com/help/70596-repeating-events&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Dec 2016 09:10:24 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/18/creating-week-day-only-events-on-apple-calendar.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/18/creating-week-day-only-events-on-apple-calendar.html</guid>
        
        
      </item>
    
  </channel>
</rss>
