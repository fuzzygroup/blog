<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Jan 2017 09:04:47 -0500</pubDate>
    <lastBuildDate>Fri, 13 Jan 2017 09:04:47 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Heinlein's Rules for Solo Entrepreneurs</title>
        <description>&lt;p&gt;We all have influences in our lives – books, movies, music.  For me the seminal influence was the writings of Robert A. Heinlein (RAH).  I’ve read I think every word he ever commercially produced and while I can cite chapter and verse on his fiction, his rules for writing are absolutely brilliant.  Here’s a quick summary:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Rule One: You Must Write&lt;/li&gt;
  &lt;li&gt;Rule Two: Finish What You Start&lt;/li&gt;
  &lt;li&gt;Rule Three: You Must Refrain From Rewriting, Except to Editorial Order&lt;/li&gt;
  &lt;li&gt;Rule Four: You Must Put Your Story on the Market&lt;/li&gt;
  &lt;li&gt;Rule Five: You Must Keep it on the Market until it has Sold&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Robert Sawyer, a fantastic Canadian Science Fiction writer has a great commentary on this on his &lt;a href=&quot;http://www.sfwriter.com/ow05.htm&quot;&gt;Heinlein’s Rules&lt;/a&gt; blog post.&lt;/p&gt;

&lt;p&gt;Right now I am faced with a number of startup opportunities in front of me and trying to shuffle the deck so to speak to choose the right one is damn hard.  It seems like all of them are good ideas but they&lt;/p&gt;

&lt;p&gt;So here goes: my attempt to make Heinlein’s rules for startups:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Rule One: You Must Create Every Single Day.  &lt;br /&gt;Comment: Even an hour per day adds up quickly.&lt;/li&gt;
  &lt;li&gt;Rule Two: Take it to the MVP Stage.&lt;/li&gt;
  &lt;li&gt;Rule Three: You Must Refrain From Making Needless Changes Except Due to Customer Input.&lt;/li&gt;
  &lt;li&gt;Rule Four: You Must Put It Out There.&lt;/li&gt;
  &lt;li&gt;Rule Five: You Must Keep it Running Until It Makes Revenues; Not Profits; Revenues.&lt;/li&gt;
  &lt;li&gt;Rule Six: You must keep spending to an absolute minimum.&lt;br /&gt; Any smart engineer should now be able to make an MVP without spending a dime.&lt;/li&gt;
  &lt;li&gt;Rule Seven: You must design to keep hosting costs to an absolute minimum.&lt;br /&gt;  As I look at technologies like AWS, ansible, ec2, etc, I see that how you choose to structure your architecture can dramatically impact your costs.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 13 Jan 2017 08:24:25 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2017/01/13/heinlein-s-rules-for-startups.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2017/01/13/heinlein-s-rules-for-startups.html</guid>
        
        <category>startup</category>
        
        <category>heinlein</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>So you think AWS volumes are expensive or hard to use...</title>
        <description>&lt;p&gt;This is one of those stories that revolves around my walking uphill in the snow to school both ways …&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Jan 2017 14:33:12 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2017/01/12/so-you-think-aws-volumes-are-expensive-or-hard-to-use.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2017/01/12/so-you-think-aws-volumes-are-expensive-or-hard-to-use.html</guid>
        
        
      </item>
    
      <item>
        <title>When rails g won't generate a Model</title>
        <description>&lt;p&gt;I just saw about an hour of precious, early morning development time disappear because this failed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g model TextCommon    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All that would happen was I’d get a cryptic:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Running via Spring preloader in process 19539&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then nothing.  No model file was generated, no spec file was generated.&lt;/p&gt;

&lt;p&gt;This was a newly created Rails 5 api application and I had already used rails g to create my first controller.   So I knew it was working – I knew it.  Here was my trouble shooting process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I started my troubleshooting by stopping my Tmux session and trying without it – &lt;strong&gt;NOPE&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Being a cranky programmer who is often distrustful of newer things, I figured that spring might be the problem so I did a ps auwwx&lt;/td&gt;
          &lt;td&gt;grep hyde_api_ruby and found a truly disturbing number of processes.  I went through a number of p*kill -f hyde_api_ruby * gyrations (more on &lt;a href=&quot;https://fuzzygroup.github.io/blog/unix/2016/11/23/pkill-rocks.html&quot;&gt;pkill&lt;/a&gt;) and still no luck.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Next up was to try this on an El Capitan machine because I’ve had enough issues with Sierra to, well, think it sucks monkey chunks.  Nope.  Same issues.&lt;/li&gt;
  &lt;li&gt;My next thought was to revert to my spring theory and disable spring and listen at the Gemfile level.  Apparently you can’t do that because if you don’t have listen then the rails command dies with an exception.&lt;/li&gt;
  &lt;li&gt;So I added back listen but not spring and got another version of the same error.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point I thought to myself – &lt;strong&gt;wait&lt;/strong&gt; – you generated this app with &lt;strong&gt;–skip-active-record.&lt;/strong&gt;  Is that why model generation is failing?  So I tried rails g controller Foo as a test and that worked just fine.&lt;/p&gt;

&lt;p&gt;The bottom line is that if you don’t have persistent storage configured at the Rails level, rails g model just won’t work.  That’s a pity because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PORO (plain old ruby objects) are really, really nice&lt;/li&gt;
  &lt;li&gt;Storing them in app/models gives you the benefits of reload!&lt;/li&gt;
  &lt;li&gt;The rails g process ensures that a spec file is generated correctly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I added this to the Spring issues tracker &lt;a href=&quot;https://github.com/rails/spring/issues/486&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Jan 2017 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2017/01/12/when-rails-g-won-t-generate-a-model.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2017/01/12/when-rails-g-won-t-generate-a-model.html</guid>
        
        <category>rails</category>
        
        <category>model</category>
        
        <category>spring</category>
        
        <category>listen</category>
        
        <category>hyde</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>App Review - Zero by Kevin Rose</title>
        <description>&lt;p&gt;This year I turn 50 and for the first time in my life my high metabolism is mildly failing me – I’m not fat by any means but like a truck bearing down upon me, I can see a change coming.  And I do not like that.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Jan 2017 05:48:36 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/personal/2017/01/11/a-review-of-zero-by-kevin-rose.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/personal/2017/01/11/a-review-of-zero-by-kevin-rose.html</guid>
        
        <category>celiac</category>
        
        <category>fasting</category>
        
        <category>zero</category>
        
        <category>app_review</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Electron Development is Like Mos Eisley</title>
        <description>&lt;p&gt;So for my side project there is, for the first time in years, a client side component.  I already have 3 target users in mind and one of them uses Windows exclusively so that rules out any type of Mac development tool.  And because I really do believe that we are now in a &lt;a href=&quot;http://fuzzygroup.github.io/blog/category.html#postmac&quot;&gt;postmac&lt;/a&gt; world, I also need to support Linux.  All of that rolls up into the nigh inescapable conclusion that I’m going to have to use &lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt; for development.&lt;/p&gt;

&lt;p&gt;Given that the Atom editor and Slack are both based on Electron and run across OSX, Windows and Linux you really can’t argue against Electron at this point.  Atom and Slack are both best of breed applications and my only objection to them is resource usage.  And arguing against resource usage is a sucker’s bet – you always, always, always build for tomorrow’s platform because machines get faster (or at least stay the same) and memory gets larger.&lt;/p&gt;

&lt;p&gt;The crying shame of electron development is the abysmal state of documentation and examples.  Honestly it is like &lt;a href=&quot;https://en.wikipedia.org/wiki/Mos_Eisley&quot;&gt;Mos Eisley&lt;/a&gt; – a wretched hive of scum and villainy or really a &lt;strong&gt;wretched hive of things that don’t actually work &lt;em&gt;anymore&lt;/em&gt;&lt;/strong&gt;.  I’ve been working for the past two hours on nothing more than trying to follow top ranked tutorials and the only thing I’ve been able to make is a &lt;a href=&quot;https://github.com/fuzzygroup/HelloWorldElectron01&quot;&gt;Hello World&lt;/a&gt; app of my own.&lt;/p&gt;

&lt;p&gt;The core problem here is that the JavaScript / Node world which vomited all this technology onto us is changing more rapidly than anything I’ve seen before.  And when that happens people don’t tend to go back and fix their samples.  And I get it, I really do.  But the taste that it leaves in your developer mind is, well, Mother Johnson told me never to use words like those.  ;-)&lt;/p&gt;

&lt;p&gt;I think my only reliable advice if you’re trying to learn electron is the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If you’re trying to learn from a code sample on the net, git clone it to your machine IMMEDIATELY and try and run it with the normal electron . process from the checkout directory&lt;/li&gt;
  &lt;li&gt;If it dies as seems to be the norm then abort and move on.&lt;/li&gt;
  &lt;li&gt;Check the dates on sample apps carefully; older then a year and I wouldn’t even try anymore.&lt;/li&gt;
  &lt;li&gt;Personally I learn better from examples and I tend to avoid API documentation.  I think in this case I need to make a beeline for the &lt;a href=&quot;http://electron.atom.io/docs/&quot;&gt;official electron docs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The docs are actually very good.  Because I’m trying to make a standard desktop app, I looked at the &lt;a href=&quot;http://electron.atom.io/docs/api/menu/&quot;&gt;Electron Menu&lt;/a&gt; docs and it was very helpful.  Integrating this into an overall app skeleton – not helpful; sigh.  Getting the &lt;a href=&quot;http://stackoverflow.com/questions/34840026&quot;&gt;menu to show up at all&lt;/a&gt; in development – entirely unhelpful.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 11 Jan 2017 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/electron/2017/01/11/electron-development-is-like-mos-eisley.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/electron/2017/01/11/electron-development-is-like-mos-eisley.html</guid>
        
        <category>javascript</category>
        
        <category>electron</category>
        
        <category>hyde</category>
        
        
        <category>electron</category>
        
      </item>
    
      <item>
        <title>Creating New Rails Projects with RailsApps</title>
        <description>
</description>
        <pubDate>Tue, 10 Jan 2017 15:40:25 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2017/01/10/creating-new-rails-projects-with-railsapps.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2017/01/10/creating-new-rails-projects-with-railsapps.html</guid>
        
        
      </item>
    
      <item>
        <title>Review Git Clients</title>
        <description>&lt;p&gt;http://www.syntevo.com/smartgit/download?file=smartgit/smartgit-macosx-8_0_3.dmg&lt;/p&gt;

&lt;p&gt;git-tower.com&lt;/p&gt;

&lt;p&gt;git-fork.com&lt;/p&gt;

&lt;p&gt;gitkraken.com&lt;/p&gt;

&lt;p&gt;gitup.co&lt;/p&gt;

&lt;p&gt;github.com/jonas/tig&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Jan 2017 15:11:40 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2017/01/10/review-git-clients.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2017/01/10/review-git-clients.html</guid>
        
        
      </item>
    
      <item>
        <title>When Spring is Sprung or when rails g model makes nothing</title>
        <description>&lt;p&gt;sjohnson@FuzzygroupMacbookPro2016:~/me/fuzzygroup/voice_click/voice_click_site$ bundle exec rails g model MailingList
Running via Spring preloader in process 80231
Expected string default value for ‘–jbuilder’; got true (boolean)
      invoke  active_record
      create    db/migrate/20170110073523_create_mailing_lists.rb
      create    app/models/mailing_list.rb
      invoke    rspec
      create      spec/models/mailing_list_spec.rb
      invoke      factory_girl
      create        spec/factories/mailing_lists.rb
sjohnson@FuzzygroupMacbookPro2016:~/me/fuzzygroup/voice_click/voice_click_site$ mate db/migrate/20170110073523_create_mailing_lists.rb&lt;/p&gt;

&lt;p&gt;I had to kill multiple spring processes&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Jan 2017 02:40:20 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2017/01/10/when-spring-is-sprung-or-when-rails-g-model-makes-nothing.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2017/01/10/when-spring-is-sprung-or-when-rails-g-model-makes-nothing.html</guid>
        
        
      </item>
    
      <item>
        <title>End of an Era rails db:migrate or a Salute to Jim Weirich</title>
        <description>
</description>
        <pubDate>Mon, 09 Jan 2017 06:01:22 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2017/01/09/end-of-an-era-rails-db-migrate-or-a-salute-to-jim-weirich.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2017/01/09/end-of-an-era-rails-db-migrate-or-a-salute-to-jim-weirich.html</guid>
        
        
      </item>
    
      <item>
        <title>So You Have to Help Your Kid with Algebra</title>
        <description>&lt;p&gt;Here’s a great overview of the different &lt;a href=&quot;https://lwn.net/SubscriberLink/710537/31440d3205ea5d83/&quot;&gt;Symbolic Math tools on Linux&lt;/a&gt; and here is the &lt;a href=&quot;https://news.ycombinator.com/item?id=13332781&quot;&gt;Hacker News Discussion&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;integrate(%e^(-x^2), x);

solve(3x+2=10, x);

solve(x^2+2x=5, x);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;brew install homebrew/science/maxima&lt;/p&gt;

&lt;p&gt;https://coeurdecode.com/2015/02/27/installing-maxima-on-mac-os-x-2/&lt;/p&gt;

&lt;p&gt;Wolfram Alpha Pro&lt;/p&gt;

&lt;p&gt;A couple of quick maxima tips and examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;To quit out just type if it says &lt;strong&gt;ENTER&lt;/strong&gt; then just press the enter key:&lt;/p&gt;

    &lt;p&gt;quit(); &lt;strong&gt;ENTER&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;brew install homebrew/science/maxima&lt;/p&gt;

    &lt;p&gt;solve(x+3=10, x);&lt;/p&gt;

    &lt;p&gt;Maxima can be a tool to check your home work&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Jan 2017 13:05:29 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/math/2017/01/08/so-you-have-to-help-your-kid-with-algebra.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/math/2017/01/08/so-you-have-to-help-your-kid-with-algebra.html</guid>
        
        <category>math</category>
        
        <category>algebra</category>
        
        
        <category>math</category>
        
      </item>
    
  </channel>
</rss>
