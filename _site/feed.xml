<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff.  Ruby / Rails / Elixir.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
    <lastBuildDate>Sun, 11 Sep 2016 06:29:54 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>When is Design Done?</title>
        <description>
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/09/11/when-is-design-done.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/09/11/when-is-design-done.html</guid>
        
        <category>software_engineering</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>What Dave Winer Taught Me</title>
        <description>&lt;p&gt;The power of outreach.  I’ve never been so surprised in all my life as when the phone rang, on a sunday morning, as I sat in my kitchen in Nahant, CT and I heard “Hi, this is Dave Winer”&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/09/11/what-dave-winer-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/09/11/what-dave-winer-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>entrepreneurship</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>What Dave Sifry Taught Me</title>
        <description>&lt;p&gt;Grace and Kindness&lt;/p&gt;

&lt;p&gt;In a small industry you grow as a function of the market expanding&lt;/p&gt;

&lt;p&gt;When I got fired from Feedster, a company I founded and where I hired every single executive, I was in a state of shock.  I had flown out to San Francisco and I knew that I was being terminated but I had expected to retain my board seat so I could at least influence things.  Little did I know that when a founder is removed from his firm, it happens with extreme prejudice.  So, when I discovered that even that had been stripped from me, well, I was a mess.  Over ten years later I remember wandering the streets of San Francisco in a daze.  And, when I needed office space for a few hours, to process the paperwork associated with all this mess, you know where I ended up?  Yep.  That’s right – I went to see Dave.  He let me use wifi, power and fax so I could get the paperwork handled.  At what was a moment of professional lowness, Dave was the very epitome of grace and kindness.&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/09/11/what-dave-sifry-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/09/11/what-dave-sifry-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>entrepreneurship</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>What Brad Fitz Taught Me</title>
        <description>&lt;p&gt;iterative Design
Memcache
Favorite Internet Architect&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/09/11/what-brad-fitz-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/09/11/what-brad-fitz-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>entrepreneurship</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Two Alpha Geeks in the Same Meeting</title>
        <description>
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/09/11/two-alpha-geeks-in-the-same-meeting.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/09/11/two-alpha-geeks-in-the-same-meeting.html</guid>
        
        
      </item>
    
      <item>
        <title>The Pain of Going from 1 Engineer to N Engineers</title>
        <description>
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/09/11/the-pain-of-going-from-1-engineer-to-n-engineers.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/09/11/the-pain-of-going-from-1-engineer-to-n-engineers.html</guid>
        
        
      </item>
    
      <item>
        <title>The MVP From Hell</title>
        <description>&lt;p&gt;Here’s an example of just how bad communications got on this project:
Product Manager [5:20 PM]&lt;br /&gt;
@back_end_engineer_#1 @jon @chrisaddapp hello, i have tested the changes for dashboard and provided feedback to Chris. I also provided feedback to Jon on screenflow. Once those changes are fixed, I approve deploying the changes to production. Thank you for all your help and have a wonderful weekend!&lt;/p&gt;

&lt;p&gt;Front End Engineer [5:20 PM]&lt;br /&gt;
ive pushed my changes up to master&lt;/p&gt;

&lt;p&gt;Back End Engineer #1 [5:27 PM]&lt;br /&gt;
@chhavi:  Um… @chrisaddapp is offline and hasn’t told me anything.  So I’m assuming that since you’re giving change orders after 5 pm on a friday to people working in eastern time zone that you’re ok with these changes not going live until monday or later.&lt;/p&gt;

&lt;p&gt;Also I’m not comfortable at this point with deploying anything to production until you have a chance to review it on staging.  There’s been too many miscommunications on this project.  once it goes onto production its difficult to roll back so it needs to be right.&lt;/p&gt;

&lt;p&gt;Product Manager [5:46 PM]&lt;br /&gt;
@back_end_engineer_#1 great point Scott and completely aligned with you on not deploying any changes unless confirmed by the engineers working on it. If @chris hasn’t confirmed the fixes to you, we should hold off on deploying those changes. I did test the changes in the staging server though and hence had feedback provided for Chris and Jon. @chrisaddapp please confirm once the fixes have been made. Thank you and have a great weekend!&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/09/11/the-mvp-from-hell.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/09/11/the-mvp-from-hell.html</guid>
        
        
      </item>
    
      <item>
        <title>The Importance of Inserting NO-OPs Into Your Programming Day</title>
        <description>&lt;p&gt;One of the better development techniques that I’ve ever found has nothing to do with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;programming language&lt;/li&gt;
  &lt;li&gt;editor / tools&lt;/li&gt;
  &lt;li&gt;methodology&lt;/li&gt;
  &lt;li&gt;anything internet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is what I refer to as a &lt;strong&gt;personal no op&lt;/strong&gt;.  A &lt;a href=&quot;https://en.wikipedia.org/wiki/NOP&quot;&gt;no op is an assembly language instruction&lt;/a&gt; that does nothing and since I Z-80 assembly was my second language, I feel comfortable using term.  A personal no op is when you know that you’re about to go dangerously down the wrong path and you decide “All righty then – time to leave the keyboard before I screw something up.”  This is one of those lessons that you only get by experience and, yes, it is a bit of a gray beard thing.&lt;/p&gt;

&lt;p&gt;Let me illustrate with an example.  I’ve been wrestling with a data indexing issue with respect to &lt;a href=&quot;http://www.sphinxsearch.com&quot;&gt;Sphinx Search&lt;/a&gt; and a very large data set.  The time cost of an end to end index is about 20+ hours and, in the process, it trashes the previous index making previous to current comparisons hard if not impossible.  So what did I do?  I went upstairs and I made a sandwich.  And since I wanted a sandwich based on last night’s meatballs and we were all out of tomato sauce, I thought nothing of grabbing a can of tomatoes and cooking them down with spices and a bit of sugar.  And, all the while, I was thinking these issues thru, partially in the foreground and partially in the background.  And, sure enough, as the sauce neared completion, the answer came to me.  I won’t bore you with the details but the answer lies in an arcane aspect of how we do database sharding.  With a handful of new models and some code injected dynamically I should be able to preserve old and new indices concurrently.  And now I’m back at my desk writing this up and getting read to code it together.&lt;/p&gt;

&lt;p&gt;One of the harder truths to recognize as a software engineer is that you’re not actually a typist.  You’re not even actually a programmer.  If you really are an engineer then all your real work happens in your own head and typing it out is just a side effect.  Being a software engineer isn’t all that different I would argue from being an attorney.  Just as an attorney’s real work happens not with Lexis / Nexis / Microsoft Word but in his or her head, so too does your work.&lt;/p&gt;

&lt;p&gt;So the next time you’re struggling with something, get away from the keyboard and take a personal no op.  It really does help.&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/09/11/the-importance-of-inserting-no-ops-into-your-programming-day.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/09/11/the-importance-of-inserting-no-ops-into-your-programming-day.html</guid>
        
        <category>software_engineering</category>
        
        <category>programming</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>The 8 Foot Powerstrip</title>
        <description>
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/09/11/the-8-foot-powerstrip.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/09/11/the-8-foot-powerstrip.html</guid>
        
        
      </item>
    
      <item>
        <title>Source of Truth Local Db or Schema in Git</title>
        <description>&lt;p&gt;no changes added to commit (use “git add” and/or “git commit -a”)
sjohnson@ScottJohnsonMacbookAir:~/appdatallc/banks$ git status | grep migrate
	db/migrate/20160908163042_create_page2016_q3s.rb
	db/migrate/20160908163054_create_page2016_q4s.rb
	db/migrate/20160908163110_create_page_body2016_q3s.rb
	db/migrate/20160908163120_create_page_body2016_q4s.rb
	db/migrate/20160908163141_create_link2016_q3s.rb
	db/migrate/20160908163149_create_link2016_q4s.rb
	db/migrate/20160908163320_create_unique_url2016_q3s.rb
	db/migrate/20160908163333_create_unique_url2016_q4s.rb
sjohnson@ScottJohnsonMacbookAir:~/appdatallc/banks$ rm db/migrate/20160908163042_create_page2016_q3s.rb db/migrate/20160908163054_create_page2016_q4s.rb db/migrate/20160908163110_create_page_body2016_q3s.rb db/migrate/20160908163120_create_page_body2016_q4s.rb db/migrate/20160908163141_create_link2016_q3s.rb db/migrate/20160908163149_create_link2016_q4s.rb db/migrate/20160908163320_create_unique_url2016_q3s.rb db/migrate/20160908163333_create_unique_url2016_q4s.rb&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Sep 2016 06:29:54 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/09/11/source-of-truth-local-db-or-schema-in-git.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/09/11/source-of-truth-local-db-or-schema-in-git.html</guid>
        
        
      </item>
    
  </channel>
</rss>
