<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 17 Dec 2016 04:50:17 -0600</pubDate>
    <lastBuildDate>Sat, 17 Dec 2016 04:50:17 -0600</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Vacation Insomnia and the Hotel Business Office</title>
        <description>&lt;p&gt;As a remote worker I’ve found that you tend to work more, there are fewer distractions, there are no co-workers to go out with, etc, so you just work more.  And when you always have a laptop with you then even vacation tends to flow into work.  One of the oddest things about being a remote worker is that you end up with recollections of work that are entirely cognitively dissonant with work itself.&lt;/p&gt;

&lt;p&gt;Here are a few examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When I first wrote the iOS version of AppData after fighting an internal battle &lt;strong&gt;hard&lt;/strong&gt; that iOS mattered (this was back in 2010 or 2011) I remember staying at a cheap Dallas hotel with bad wifi on vacation with my family when I first wrote that crawler&lt;/li&gt;
  &lt;li&gt;I can’t tell even begin you how much code I wrote from Great Wolf Lodge on different family trips.  I suspect I’ve not only written code there but entire products there.&lt;/li&gt;
  &lt;li&gt;The last time I was in Disney world I wrote an anti-spam algorithm to evaluate your Twitter followers for their &lt;em&gt;spamminess&lt;/em&gt; related to your content.  I guess that wasn’t for work tho – more for late night boredom.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I’m once again on a short vacation and I find myself in the hotel business office working in wonderful, blessed quiet and darkness.  This time I’m in the hotel’s business office and it is &lt;em&gt;absolutely lovely&lt;/em&gt;.  After a night’s drive on the way to our destination and a late checkin I found myself up at the crack of 1 am.  And with three other people in the hotel room, what do you do?  Well, if you’re me, you shower, shave, grab your gear and find a place with wifi.&lt;/p&gt;

&lt;p&gt;And this time around I’m rewriting the core crawl / recursive_crawl routines for our main HTML crawler.  This is a core loop which is the innermost guts of our crawler and it is ugly beyond belief.  I can say that because I’m one of its two core authors.  This is a routine which takes like 8 parameters and returns 7 (or the other way around; even I can’t tell).  So I’m in the middle of a massive refactor where it takes in one struct and returns another.  And I know it will be better but right now I suspect it resembles a butcher shop when a flood of carcasses has just arrived – there’s blood everywhere and bits of bone and gristle from the big band saws that a real butcher shop would actually use.  Even if you’re a self confessed carnivore like myself, you likely wouldn’t want to see it and that’s how I feel right now.  I want this refactor done desperately but, man, even I don’t want to do this work.&lt;/p&gt;

&lt;p&gt;I’ve now gotten it to this stage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crawl_struct = UrlTool.get_mechanize_links_on_a_page_from_struct(OpenStruct.new(:site =&amp;gt; site))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which returns this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;OpenStruct {
           :num_pages =&amp;gt; 1,
     :already_crawled =&amp;gt; [
        [0] &quot;14b461cc3eecf248213c23999ca33236363d083f&quot;
    ],
    :page_body_hashes =&amp;gt; [],
               :links =&amp;gt; [],
      :mechanize_page =&amp;gt; nil,
      :resolved_links =&amp;gt; []
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which means that I’ve made a crawler which, now, does not crawl.  &lt;strong&gt;Groan&lt;/strong&gt;.  I wish I’d stayed in bed.  Happily that likely means that I’ve missed something basic like a conditional since at least my basic return structure is better.  And, while writing this, I just found it – I had omitted a conditional.&lt;/p&gt;

&lt;p&gt;Now I suspect that a number of my readers are saying something along the lines of “Dude – &lt;strong&gt;it is vacation&lt;/strong&gt;; STOP CODING!” and I will.  And you are right but there are some mitigating factors&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;this is time sensitive work that needs to get done before year end&lt;/li&gt;
  &lt;li&gt;I suffer from an over developed sense of personal responsibility on all fronts&lt;/li&gt;
  &lt;li&gt;everyone else is sleeping which means no reading, no media to consume&lt;/li&gt;
  &lt;li&gt;workaholic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The strongest mitigating factor here tho is that I’ve found that when I’m forced to leave my home office it often &lt;strong&gt;spurs creativity&lt;/strong&gt; fairly dramatically.  Just as an example we normally compare crawl results to past crawls only on 2 dimensions, pages and links because the attributes for those versus past crawls are easily accessible.  What I just realized tho is that I can implement a simple JSON api and compare my new crawl against any of the dimensions by which we crawl - forms, iframes, etc.  And, in the process of writing this post, I actually implemented that JSON api.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 00:00:00 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/remote_work/2016/12/17/vacation-insomnia-and-the-hotel-business-office.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/remote_work/2016/12/17/vacation-insomnia-and-the-hotel-business-office.html</guid>
        
        <category>vacation</category>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Why Freelancing Makes You A Better Engineer And You The Employeer Should Not Object</title>
        <description>
</description>
        <pubDate>Wed, 14 Dec 2016 06:38:27 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/14/why-freelancing-makes-you-a-better-engineer-and-you-the-employeer-should-not-object.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/14/why-freelancing-makes-you-a-better-engineer-and-you-the-employeer-should-not-object.html</guid>
        
        
      </item>
    
      <item>
        <title>The Silver Searcher</title>
        <description>&lt;p&gt;I had a project die about two months ago and I’ve been involved in a bit of resurrection work recently.  This was related to my comments on &lt;a href=&quot;https://fuzzygroup.github.io/blog/rails/2016/12/06/code-rot-is-very-very-real.html&quot;&gt;code rot&lt;/a&gt;.  Happily, with the assistance of &lt;a href=&quot;http://dasari.me&quot;&gt;Dv&lt;/a&gt; and &lt;a href=&quot;http://www.nickjanetakis.com&quot;&gt;Nick&lt;/a&gt; for different aspects, we’re once again indexing and functioning correctly.  Today I’m going to talk about a basic search tool, &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;The Silver Searcher&lt;/a&gt;, also known as ag and that’s how I’ll refer to it mostly.&lt;/p&gt;

&lt;p&gt;This blog post is written as a basic, example based tutorial since that type of information seems to be entirely missing from &lt;a href=&quot;http://geoff.greer.fm/ag/&quot;&gt;ag’s home page&lt;/a&gt; and github page.  ag is a fantastic tool but its usage isn’t always apparent.&lt;/p&gt;

&lt;p&gt;ag, the silver searcher’s command line invocation, is a search tool similar to grep or ack only:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;better&lt;/li&gt;
  &lt;li&gt;faster&lt;/li&gt;
  &lt;li&gt;able to leap tall buildings in a single bound! (just kidding but it feels that way)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ag is a fantastic tool and its strong enough that I’ve just added it to my standard ansible playbook for all my servers so I will always have it available.  Recommended&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;ag can be installed on a mac using homebrew:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install the_silver_searcher
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or on Ubuntu using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install silversearcher-ag
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;

&lt;p&gt;ag operates by searching in the current directory and below using a very simple syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ag WHAT_YOU_WANT_TO_FIND
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;replace WHAT_YOU_WANT_TO_FIND with, well, what you’re looking for.  Here’s an example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ag NUM_THREADS=10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this case I was struggling to find documentation that I knew I had written down but I had changed boxes, re-organized directories and so on.  By simply opening a Terminal window to my home directory i.e. ~ and then typing ag NUM_THREADS=10 I was able to find all documents containing this.&lt;/p&gt;

&lt;h2 id=&quot;understanding-how-ag-operates&quot;&gt;Understanding How ag Operates&lt;/h2&gt;

&lt;p&gt;Search tools tend to be fiddly little beasts at the best of times and if you don’t understand how they work then this tends to rise up and bite you badly.  Here’s what I know about how ag operates and that I took the time to verify:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Searches by default are case insensitive; I got roughly the same results with ag num_threads=10 as I did with ag NUM_THREADS=10; no I don’t understand why I got 76 results with the lower case version and 77 with the upper case but the box I’m searching is a bit wonky so perhaps that’s it.&lt;/li&gt;
  &lt;li&gt;Searches go across directories by default&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 03:39:05 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/search/2016/12/14/the-silver-searcher.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/search/2016/12/14/the-silver-searcher.html</guid>
        
        <category>search</category>
        
        <category>grep</category>
        
        <category>ack</category>
        
        <category>ag</category>
        
        <category>silver_searcher</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>When Ruby bzip2 Won't Install</title>
        <description>&lt;p&gt;I spent quite a bit of time today trying to get the bzip2 gem working.  Not even the fork worked.  Happily I found &lt;a href=&quot;https://github.com/koraktor/rbzip2&quot;&gt;rbzip2&lt;/a&gt; which worked brilliantly.  Not sure if it compresses or decompresses yet but I can deploy at least and that was today’s goal.&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/ruby/2016/12/14/when-ruby-bzip2-won-t-install.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/ruby/2016/12/14/when-ruby-bzip2-won-t-install.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>bzip</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>What Just Happened To Your Database In the Past 10 Minutes</title>
        <description>&lt;p&gt;So I’m rapidly coming to the conclusion that Christmas is the enemy of getting things done.  While I have come up with a lot of potential topics to write about recently I don’t seem to be able to get anything actually finished due to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Present Shopping&lt;/li&gt;
  &lt;li&gt;Present Wrapping&lt;/li&gt;
  &lt;li&gt;Christmas Events (parties, choir concerts, etc)&lt;/li&gt;
  &lt;li&gt;Christmas Baking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alas – at least, as my old boss, &lt;a href=&quot;https://twitter.com/rafer&quot;&gt;Scott Rafer&lt;/a&gt;, used to say – &lt;em&gt;these are high quality problems to have&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;A quick post today – looking at the state of your database.  Let’s say you have a table called posts and it has a field called created_at (the Rails standard way of tracking table changes) and you want to see how many things came into that table in the past 10 minutes.  Here’s the sql you need:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 10 MINUTE);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Previously I’ve generally looked at tables and then tried to relate what’s going on to the current time and adjust in my head for the server time zone offset.  This is &lt;strong&gt;much, much&lt;/strong&gt; better.&lt;/p&gt;

&lt;p&gt;A really nice side effect of this is that you can simply change the interval quickly and see if your performance is linear or non-linear.  Let’s say you change your interval to 5, 10 and 15 minutes and this was the result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [foo_production]&amp;gt; SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 5 MINUTE);
+----------+
| COUNT(*) |
+----------+
|      468 |
+----------+
1 row in set (0.45 sec)

MariaDB [foo_production]&amp;gt; SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 10 MINUTE);
+----------+
| COUNT(*) |
+----------+
|      512 |
+----------+
1 row in set (0.44 sec)

MariaDB [foo_production]&amp;gt; SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 15 MINUTE);
+----------+
| COUNT(*) |
+----------+
|     1312 |
+----------+
1 row in set (0.45 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this illustrates is that while performance was non linear in the 5 to 10 minute range, it became linear again (roughly) at the 15 minute mark.  This is a nice simple way to get a &lt;em&gt;feel&lt;/em&gt; if performance is overall on track.&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/mysql/2016/12/14/what-just-happened-to-your-database-in-the-past-10-minutes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/mysql/2016/12/14/what-just-happened-to-your-database-in-the-past-10-minutes.html</guid>
        
        <category>mysql</category>
        
        <category>rails</category>
        
        <category>sql</category>
        
        
        <category>mysql</category>
        
      </item>
    
      <item>
        <title>So You Want to Hire a Freelancer to Be Full Time</title>
        <description>&lt;p&gt;For most of the past 8 years I’ve been a professional freelancer and it all started with &lt;em&gt;eduFire&lt;/em&gt; where I was VP of Engineering.  When eduFire dissolved in a wash of founder level “oh crap we can’t raise our A round; what do we do; I know – I’ll just quit and start something else”(Note1) I made the choice to become a professional freelancer and I have really enjoyed that decision.  I’ve never made as much money or learned as much as I have since I’ve been a freelancer.  My skills now are better than they ever have been and it is largely from freelancing – more on that in a future post.&lt;/p&gt;

&lt;p&gt;From time to time clients try, often hard, to hire you full time.  And if you want to hire a freelancer full time then I have one piece of advice for you:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Pay the freelancer’s bills promptly&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When someone is a freelancer and they are resistant to taking a full time job, I’d argue that there has to be a reason for it since it is &lt;strong&gt;dramatically harder&lt;/strong&gt; to be a freelancer than a full time employee.  We may all talk a lot about the &lt;em&gt;gig economy&lt;/em&gt; but, in 2016 America, things are still structured against freelancers in every way – insurance, taxes, etc.&lt;/p&gt;

&lt;p&gt;In my case I have &lt;strong&gt;trust&lt;/strong&gt; issues.  eduFire shut down 2 weeks before Christmas in 2009 with &lt;em&gt;no notice&lt;/em&gt; and all of us were left high and dry and scrambling for what was next.  And since no one hires in December or even January it meant that everyone was faced at least 2 months of no salary.  I think we all landed on our feet - I certainly did.&lt;/p&gt;

&lt;p&gt;As long as a client is moderately rational or at least not insane the best impression you can give a freelancer is, well, if you &lt;strong&gt;pay your bills promptly&lt;/strong&gt;.  As long as the freelancer is paid on time, well, we’re generally happy.  And if you want them to join you full time, well, pay your bills on time.  That goes a long, long way towards giving a freelancer the positive feelings you want them to have if you are going to name them a job offer.&lt;/p&gt;

&lt;p&gt;Note1: No eduFire wasn’t mine and yes that’s more than a little bit of much deserved bitterness.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/hiring/2016/12/14/so-you-want-to-hire-a-freelancer-to-be-full-time.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/hiring/2016/12/14/so-you-want-to-hire-a-freelancer-to-be-full-time.html</guid>
        
        <category>hr</category>
        
        <category>hiring</category>
        
        <category>software_engineering</category>
        
        <category>freelance</category>
        
        <category>gig</category>
        
        
        <category>hiring</category>
        
      </item>
    
      <item>
        <title>Recent PostMac Notes</title>
        <description>&lt;p&gt;Some recent things in the Post Mac category:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mondaynote.com/macbook-pro-launch-perplexing-b47003037b2e#.88txiffc1&quot;&gt;Jean Louis Gassee returned his New MacBook Pro&lt;/a&gt; and called the launch &lt;strong&gt;perplexing&lt;/strong&gt;; &lt;a href=&quot;https://news.ycombinator.com/item?id=13162310&quot;&gt;Hacker News Discussion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://9to5mac.com/2016/12/13/why-apple-is-removing-time-remaining-battery-life-estimates-macbook-pro/&quot;&gt;Apple is removing battery life estimates from the MacBook Pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theguardian.com/technology/2016/dec/12/apple-macbook-pro-review-the-best-computer-you-shouldnt-buy&quot;&gt;The Guardian calls the next MacBook Pro the Best Computer You Shouldn’t Buy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://hn.algolia.com/?query=macbook%20pro&amp;amp;sort=byPopularity&amp;amp;prefix&amp;amp;page=0&amp;amp;dateRange=pastWeek&amp;amp;type=story&quot;&gt;Hacker News search on recent MacBook articles&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I should note that I am basically happy with my MacBook Pro 13” but I bought the previous generation so it is much, much older than the current.  And my wife absolutely adores here brand new MacBook (but not the pro).  Her only real objection is having to use a dongle to print on our old Brother laser printer but she’s back in graduate school now and very, very happy with the weight and size of it.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/postmac/2016/12/14/recent-postmac-notes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/postmac/2016/12/14/recent-postmac-notes.html</guid>
        
        <category>postmac</category>
        
        <category>osx</category>
        
        
        <category>postmac</category>
        
      </item>
    
      <item>
        <title>Adhoc Ansible Example</title>
        <description>&lt;p&gt;I’ve never been a fan of adhoc ansible – I’m more of a playbook and role kind of guy but this was pretty useful earlier today:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible -i inventories/machines workers -m shell -a 'python --version'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that gave me the python version on roughly a dozen or so machines allowing me to focus in on the one box where it was was incorrect.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/ansible/2016/12/14/adhoc-ansible-example.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/ansible/2016/12/14/adhoc-ansible-example.html</guid>
        
        <category>ansible</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Considering Phabricator</title>
        <description>&lt;p&gt;So I ran across &lt;a href=&quot;https://phacility.com/phabricator/&quot;&gt;phabricator&lt;/a&gt; from &lt;a href=&quot;https://phacility.com&quot;&gt;phacility&lt;/a&gt; recently and I’m intrigued.  I also had a horrific out of the box experience trying it out that I thought nicely illustrated a number of what I consider straight up fails.&lt;/p&gt;

&lt;p&gt;Phabricator is a multi author code review and management tool that was originally built at Facebook and is now a hosted open source product.  They describe it as: &lt;em&gt;Discuss. Plan. Code. Review. Test. - Every application your project needs, all in one tool.&lt;/em&gt; and I think that’s a fairly solid overview.  They also have a hell of a great sense of humor and if you haven’t read this &lt;a href=&quot;https://phacility.com/phabricator/&quot;&gt;page&lt;/a&gt; then you should go there now and search for either intern or purple.  +10 for the sense of humor.&lt;/p&gt;

&lt;p&gt;So I went to phacility and chose to set up a hosted instance in order to evaluate it.  Here’s my sad, short, less than sweet experience:&lt;/p&gt;

&lt;p&gt;https://secure.phabricator.com/book/phabricator/article/diffusion_existing/&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Dec 2016 14:50:22 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/phabricator/2016/12/13/considering-phabricator.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/phabricator/2016/12/13/considering-phabricator.html</guid>
        
        <category>phabricator</category>
        
        <category>software_engineering</category>
        
        <category>git</category>
        
        
        <category>phabricator</category>
        
      </item>
    
      <item>
        <title>Multi Cooking Is A Thing And Here's How To Do It</title>
        <description>
</description>
        <pubDate>Sun, 11 Dec 2016 04:22:58 -0600</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/11/multi-cooking-is-a-thing-and-here-s-how-to-do-it.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/11/multi-cooking-is-a-thing-and-here-s-how-to-do-it.html</guid>
        
        
      </item>
    
  </channel>
</rss>
