<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 03 Jan 2017 08:41:22 -0500</pubDate>
    <lastBuildDate>Tue, 03 Jan 2017 08:41:22 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Processing Large Datasets On AWS Using Ruby, Rails and SideKiq</title>
        <description>&lt;p&gt;Two days ago I did a data processing task which previously took me a week – overnight.  I did this using the following technology stack:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby&lt;/li&gt;
  &lt;li&gt;Rails&lt;/li&gt;
  &lt;li&gt;AWS&lt;/li&gt;
  &lt;li&gt;Sidekiq&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My platform was a “cluster” of 40 m3.large AWS ec2 instances.  We all see a lot about cloud computing and using AWS / Azure / Google Cloud to do these types of large jobs but you rarely see what I think of as the hard details:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you get code deployed?&lt;/li&gt;
  &lt;li&gt;How do you fix bugs?&lt;/li&gt;
  &lt;li&gt;How do you deal with Capistrano failures when a box isn’t available and Capistrano doesn’t give you good feedback?&lt;/li&gt;
  &lt;li&gt;How do you get things coordinated?&lt;/li&gt;
  &lt;li&gt;How do you kick off the overall job?&lt;/li&gt;
  &lt;li&gt;How do you know when it is done?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this blog post I’m going to illustrate how I managed these things.  I’m not saying that what I did was the only way to do this.  I’m not even saying that what I did was the best way to do this.  What I am saying is that this is a practical approach to ad hoc large data processing jobs using a ruby / rails / sidekiq approach.  And I’m going to describe how I did this without using cloud formation or another large, complicated AWS or third party API.  The only external tool I used was Ansible and even that was optional.&lt;/p&gt;

&lt;p&gt;For obvious reasons of company confidentiality I can’t go into the details of what the job was.  Suffice it to say:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a “lot” of data had to be “processed”&lt;/li&gt;
  &lt;li&gt;the actions were time consuming including deliberate sleep calls to avoid being blocked on the remote end&lt;/li&gt;
  &lt;li&gt;about 35,000 discrete data items needed to be processed.  With sleep calls at a randomized 10 to 15 seconds between each call that’s 350,000 to 525,000 seconds in aggregate compute time (less if threaded but too many threads and we get blocked)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, with that said, here’s how I went about this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;build an ec2 instance as a template&lt;/li&gt;
  &lt;li&gt;deploy the current code onto it&lt;/li&gt;
  &lt;li&gt;test&lt;/li&gt;
  &lt;li&gt;make an image&lt;/li&gt;
  &lt;li&gt;launch the job on the template box&lt;/li&gt;
  &lt;li&gt;launch more copies of the image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these is described below.&lt;/p&gt;

&lt;p&gt;My thanks go out to &lt;a href=&quot;http://www.nickjanetakis.com/&quot;&gt;Nick&lt;/a&gt; who was a consultant on this and paired on it throughout the process.  I also have to say thank you to &lt;a href=&quot;http://www.mikeperham.com&quot;&gt;Mike Perham&lt;/a&gt; who built &lt;a href=&quot;http://www.sidekiq.org&quot;&gt;Sidekiq&lt;/a&gt; which is at the heart of this.&lt;/p&gt;

&lt;h1 id=&quot;step-1---build-an-ec2-template-instance&quot;&gt;Step 1 - Build an EC2 “Template” Instance&lt;/h1&gt;

&lt;p&gt;The first step is that like with everything AWS you need an instance.  Picking the right instance type isn’t a topic that I’m going to cover here.  I did know that I needed a reduced thread count so I wasn’t terribly worried about memory.  We had already arranged with Amazon for up to 200 m3.large instances so that’s what I went with.  I didn’t worry terribly about whether not not I had the perfect instance type – I just used what was available.&lt;/p&gt;

&lt;p&gt;A m3.large is 7.5 gb of RAM and 8 gigs of storage so that’s perfectly fine for a Rails app of even large size.&lt;/p&gt;

&lt;p&gt;After I created the box I provisioned to run my Rails app as &lt;a href=&quot;https://fuzzygroup.github.io/blog/category.html#ansible&quot;&gt;per all the things I’ve written about using Ansible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once we get this machine built out we’re going to be using it as a template for making more machines later hence my referring to this as a “template” instance.&lt;/p&gt;

&lt;h1 id=&quot;step-2---deploy-the-current-code-base-with-capistrano&quot;&gt;Step 2 - Deploy the Current Code Base with Capistrano&lt;/h1&gt;

&lt;p&gt;The next step was to get my code base onto the box using Capistrano.  I just added this box to my ~/.ssh/config file and then dropped the hostname into my config/deploy/production.rb file and did a normal deploy.&lt;/p&gt;

&lt;h1 id=&quot;step-3---test-test-test&quot;&gt;Step 3 - Test, Test, Test&lt;/h1&gt;

&lt;p&gt;At this point we have a single instance running our rails application.  We need to make very, very sure that this is working correctly because our next step is to make an &lt;strong&gt;image&lt;/strong&gt; of this instance and then use AWS to launch N copies of the image.  Here’s what you want to test:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;connectivity to your database&lt;/li&gt;
  &lt;li&gt;connectivity to your redis&lt;/li&gt;
  &lt;li&gt;that the job process code works&lt;/li&gt;
  &lt;li&gt;that sidekiq works&lt;/li&gt;
  &lt;li&gt;that your thread count is tuned properly&lt;/li&gt;
  &lt;li&gt;that sidekiq starts on boot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This last point, that sidekiq starts on boot, is the key thing that you need to ascertain.  Since sidekiq is what’s going to run our jobs and we don’t want to manually ssh into each machine, we need a way for the job to start.  If sidekiq starts on boot then job processing begins automatically when the machine starts up.&lt;/p&gt;

&lt;p&gt;The only real way to verify this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/sbin/reboot
log back into machine
ps auwwx | grep side
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you see sidekiq running then you have things configured correctly and sidekiq is starting on boot.&lt;/p&gt;

&lt;h1 id=&quot;step-4---make-an-image&quot;&gt;Step 4 - Make an Image&lt;/h1&gt;

&lt;p&gt;At this point you know that things work and you might be thinking - “Ok I now create a bunch more boxes; provision them and deploy with capistrano.”  That’s absolutely correct from a classical hosting perspective and absolutely wrong in a cloud environment.  The far easier, far faster approach is to make an &lt;em&gt;image&lt;/em&gt;. An image is simply a full disk copy of the instance that you can use to replicate the machine.  If you’re an old school PC guy then think of this as ghosting the machine.  Where installing things from scratch or even provisioning from ansible takes hours or minutes, cloning takes only a few minutes and then AWS can launch your instance in parallel so 40 machines might come up in just a minute or two.&lt;/p&gt;

&lt;p&gt;On your EC2 instance list select the instance and then on the Actions menu select Image, Create Image.  You’ll need to give it a name and the more descriptive, the better  It will take a minute or two but Amazon will make it just fine.&lt;/p&gt;

&lt;p&gt;Note: Making an instance shuts down the machine fully to make sure that any open files are backed up.  Keep this in mind since you’ll need to re-login to the machine for Step 5.&lt;/p&gt;

&lt;h1 id=&quot;step-5---launch-the-job-using-sidekiq-and-re-test-to-be-sure&quot;&gt;Step 5 - Launch the Job Using Sidekiq and Re-test to be Sure&lt;/h1&gt;

&lt;p&gt;At this point you’re ready to actually launch the job using sidekiq and start processing on one instance.  You can do this with the Rails console or a Rake task.  I prefer a rake task. Here’s what my rake task looked like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;task :some_large_job =&amp;gt; :environment do
  search_urls = MiscClass.large_urls_collection
  search_urls.each do |search_url|
    MiscCkassWorker.perform_async(search_url)
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That built a redis queue and gave each method to sidekiq as an asynchronous call to be processed.  Check your sidekiq log file to make sure that things are going ok.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If You find that there are changes you need to make then you’ll need to re-create the image as per Step 4.&lt;/p&gt;

&lt;p&gt;As long as things are looking fine then it is time for Step 6 – launching more copies of the image.&lt;/p&gt;

&lt;h1 id=&quot;step-6---launch-n-more-copies-of-the-image&quot;&gt;Step 6 - Launch N More Copies of the Image&lt;/h1&gt;

&lt;p&gt;The final step is to launch more copies of the image.  Because the job is already queued into redis and running, as soon as you launch any more instances the copy of sidekiq which runs on boot will start pulling jobs and processing them.&lt;/p&gt;

&lt;p&gt;Launch an instance the way you create any instance, only this time you’ll select that you want to make the instance from “My AMIs”] and then pick the image that you created in Step 4.  You can then tell AWS how many copies of the image you want made.  I specified 40 and then it is the normal AWS instance creation options like security groups and such.  Sadly all of these options aren’t defined solely in the instance itself.&lt;/p&gt;

&lt;p&gt;Note: The AWS command line tools or ansible code can be used to automate this further.&lt;/p&gt;

&lt;h1 id=&quot;step-7---make-your-wife-a-margarita&quot;&gt;Step 7 - Make Your Wife a Margarita&lt;/h1&gt;

&lt;p&gt;Well you can celebrate how you want but that’s what I did.  I checked the sidekiq queue the next morning and it was at 0.  I checked the database and we had generated 2,500 new records which was about what I expected.&lt;/p&gt;

&lt;h1 id=&quot;epiphany---realize-youre-making-an-appliance&quot;&gt;Epiphany - Realize You’re Making an Appliance!&lt;/h1&gt;

&lt;p&gt;I’m writing this blog post now having done this a dozen times or more. What finally made all this click in my head is the realization that what I’m doing here is making an &lt;em&gt;appliance&lt;/em&gt; or actually a &lt;em&gt;farm&lt;/em&gt; of appliances. An appliance is a tool which does one thing and does it well.  If you think about what we’ve done here is that we’ve made a ruby appliance in the form of an AWS image which eats data and (presumably) excretes some type of database record.&lt;/p&gt;

&lt;h1 id=&quot;circling-back-to-the-hard-questions-mentioned-earlier&quot;&gt;Circling Back to The Hard Questions Mentioned Earlier&lt;/h1&gt;

&lt;p&gt;At the start of this piece I mentioned a number of hard questions like deployment, bug fixing, etc.  Each of these is addressed below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you get code deployed?  Capistrano is currently our tool for code deployment.  If we need to get a code fix onto the boxes we built off the template we add the ec2 host name into our SSH config and then just do a deploy.  We are currently writing a simple deployer in Ansible to make deploy easier and more integral with the entire process.  Hopefully I’ll be able to open source that at some point.  Yes we looked at &lt;a href=&quot;https://github.com/ansistrano/deploy&quot;&gt;Anistrano&lt;/a&gt; but Anistrano lacks critical rails features like bundle install which I find to be an absolute show stopper on using it.&lt;/li&gt;
  &lt;li&gt;How do you fix bugs?  We try very hard to test up front to avoid having to fix bugs on a long running job.  We streamlined our testing and focused hard on it before the jobs began deliberately to minimize bugs.&lt;/li&gt;
  &lt;li&gt;How do you deal with Capistrano failures when a box isn’t available and Capistrano doesn’t give you good feedback?  This remains an issue.  When Capistrano fails on a multiple box deploy it often isn’t clear why and Capistrano is specifically designed to stop when a single box in a deploy fails.  This contrasts nicely with Ansible which is specifically designed to continue despite failing.&lt;/li&gt;
  &lt;li&gt;How do you get things coordinated?  Coordination is always, always hard.  I have some interesting ideas on management tools for pulling this together but it isn’t time yet to implement them.&lt;/li&gt;
  &lt;li&gt;How do you kick off the overall job?  We use a Rake task which is my default for automation and is documented above.&lt;/li&gt;
  &lt;li&gt;How do you know when it is done? We don’t have a great answer yet on this.   Again I have some interesting ideas but we’re not yet at the implementation stage yet.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 03 Jan 2017 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2017/01/03/processing-large-datasets-on-aws-using-ruby-rails-and-sidekiq.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2017/01/03/processing-large-datasets-on-aws-using-ruby-rails-and-sidekiq.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>sidekiq</category>
        
        <category>aws</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Tutorial How To Upgrade Your PS4 to 2 Terabytes of Storage</title>
        <description>&lt;p&gt;There are times when it seems like we live in a weird world of storage capacity imbalance.  We see this in two places:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;phones&lt;/li&gt;
  &lt;li&gt;gaming consoles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For phones we see this when a 12 megapixel camera shoots 4K video but the manufacturer sells it with only 32 gigs of ram.  And for gaming consoles we see this when a manufacturer ships a device with only a 500 gb drive but every single game you play might be 10+ gigs or more in size – and every game requires a full install + a multiple gig update.&lt;/p&gt;

&lt;p&gt;My kids have a PS4 – ok its actually mine but I’ve barely played it – and having gotten them the new PSVR for Christmas, we are officially out of space.  I actually had to delete some installed games just to make enough space to get things installed.  Clearly this is madness.&lt;/p&gt;

&lt;p&gt;My oldest son is an Xbox One gamer mostly and he has an external drive where he can just install all his extra games and it it works beautifully.  Unfortunately the PS4 cannot play games from an external drive and while this sucks green monkey chunks, it isn’t as bad as you might think because Sony made upgrading the hard drive in a PS4 brilliantly simple.  Here’s what you do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the case which is done by powering down the system and disconnecting all cables.  Slide the case open.  Unscrew the hard drive and add a new one.  Any 9 millimeter USB 3 hard drive should do.  I bought one in a case so I could re-use the 500 GB drive that Here’s a &lt;a href=&quot;https://www.youtube.com/watch?v=YDQL0qvt3Qk&quot;&gt;PS4 upgrade video&lt;/a&gt; that illustrates this and here’s &lt;a href=&quot;https://www.youtube.com/watch?v=fkIyCXbiGZs&quot;&gt;another one&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;https://www.youtube.com/watch?v=fkIyCXbiGZs &amp;lt;== this is the good one&lt;/p&gt;

&lt;p&gt;Here’s the &lt;a href=&quot;https://www.amazon.com/gp/product/B00FRHTSK4/ref=oh_aui_detailpage_o01_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;amazon link&lt;/a&gt; for about $80.
2.  After you try and power the device on you’ll get a message on screen about “ps4 update file for reinstallation” which basically means &lt;em&gt;you have no operating system so go download one&lt;/em&gt; from Sony.
3.  Take a USB stick with at least 1.5 gigs of free space on it and create a directory PS4 and then a directory PS4/UPDATE and place the PS4UPDATE.PUP file on it which you get from this [Sony PS4 download page]https://www.playstation.com/en-us/support/system-updates/ps4/.  Insert this into the PS4 and then power it on per their instructions holding down the power button for 7 seconds and it will prompt you to re-install the OS.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Jan 2017 02:44:30 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/gaming/2017/01/02/tutorial-how-to-upgrade-your-ps4-to-2-terabytes-of-storage.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/gaming/2017/01/02/tutorial-how-to-upgrade-your-ps4-to-2-terabytes-of-storage.html</guid>
        
        <category>tutorial</category>
        
        <category>ps4</category>
        
        
        <category>gaming</category>
        
      </item>
    
      <item>
        <title>Invalid route name, already in use 'page'</title>
        <description>&lt;p&gt;It seems that whenever you start a new Rails project you hit some kind of wackiness with respect to an error message that you’ve never seen before.  Yesterday I started a new project and I wanted to use Bootstrap for my layout.  Well I couldn’t make it work and then &lt;a href=&quot;http://dv.dasari.me&quot;&gt;Dv&lt;/a&gt; couldn’t make it work so I finally turned to the &lt;a href=&quot;https://github.com/RailsApps/&quot;&gt;RailsApps&lt;/a&gt; project and used their &lt;a href=&quot;https://github.com/RailsApps/rails-bootstrap/blob/master/config/routes.rb&quot;&gt;bootstrap template app&lt;/a&gt;.  And that worked so Huzzah! both for them and me.  Thanks Guys!&lt;/p&gt;

&lt;p&gt;Note: Dv and I have both used bootstrap on I can’t tell you how many different sites and its always a pain in the neck to initially get going.  We were using the bootstrap gem and we had the scss stuff configured correctly at least by comparing to a reference site.&lt;/p&gt;

&lt;p&gt;Today I integrated &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;authlogic&lt;/a&gt; for authentication based on a &lt;a href=&quot;https://www.sitepoint.com/rails-authentication-with-authlogic/&quot;&gt;SitePoint AuthLogic tutorial&lt;/a&gt;.  When I generated a Pages Controller and dropped a resources :pages into my routes file I got this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Invalid route name, already in use: 'page' 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My routes file right now is like 5 lines so I was actually certain that I didn’t have pages in there already (embarrassingly though I did do a command+F anyway).  A bunch of googling turned up this &lt;a href=&quot;https://github.com/thoughtbot/high_voltage/issues/109&quot;&gt;answer&lt;/a&gt;.  Apparently the &lt;a href=&quot;https://github.com/thoughtbot/high_voltage&quot;&gt;High Voltage gem&lt;/a&gt; from &lt;a href=&quot;https://github.com/thoughtbot&quot;&gt;Thoughtbot&lt;/a&gt; automagically inserts its pages route into the routes file.  And I get the desire for simplicity but when it doesn’t even require a declaration in the Gemfile it makes tracking this kind of stuff down annoying.  Sigh.&lt;/p&gt;

&lt;p&gt;Once that was removed then I was able to get my static pages working again so that’s nice.  And I like what the High Voltage gem is actually doing.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/12/29/invalid-route-name-already-in-use-page.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/12/29/invalid-route-name-already-in-use-page.html</guid>
        
        <category>rails</category>
        
        <category>pages</category>
        
        <category>authlogic</category>
        
        <category>bootstrap</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Getting Past SSH Errors in OSX Sierra</title>
        <description>&lt;p&gt;If you are having problems with OSX Sierra and authenticating with github, the issue is that OSX Sierra doesn’t automatically add ssh keys by default.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/osx/comments/52zn5r/difficulties_with_sshagent_in_macos_sierra/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jirsbek/SSH-keys-in-macOS-Sierra-keychain&quot;&gt;SSH Keys in MacOS Sierra&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://askubuntu.com/questions/363404/ssh-add-command-does-not-add-my-identity-to-ssh-agent&quot;&gt;Adding SSH Identities via Terminal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/error-permission-denied-publickey/&quot;&gt;Github SSH Add&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One solution is to add the below lines to your .ssh/config file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host *
  IdentityFile ~/.ssh/id_rsa
  AddKeysToAgent yes
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 29 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/osx/2016/12/29/getting-past-ssh-errors-in-osx-sierra.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/osx/2016/12/29/getting-past-ssh-errors-in-osx-sierra.html</guid>
        
        <category>osx</category>
        
        <category>ssh</category>
        
        <category>sierra</category>
        
        <category>sshagent</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Fixing Sudo on OSX Sierra</title>
        <description>&lt;p&gt;OSX Sierra makes a number of low level changes in how things operate.  Earlier I wrote about OSX and SSH errors.  If you’re having issues with sudo then you may want to add this to the sudoers file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo visudo (this command gets)

Defaults !tty_tickets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/39474047/sudo-command-on-macos-sierra-does-not-respect-timestamp-timeout&quot;&gt;Stack Overflow Reference&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/osx/2016/12/29/fixing-sudo-on-osx-sierra.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/osx/2016/12/29/fixing-sudo-on-osx-sierra.html</guid>
        
        <category>osx</category>
        
        <category>sierra</category>
        
        <category>sudo</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Ansible Error Fixing ControlPath Too Long Error</title>
        <description>&lt;p&gt;If you get the ansible error &lt;em&gt;ControlPath Too Long Error&lt;/em&gt; then all you need to do is create an ansible.cfg file in the directory where you run your playbook.  Please note that this is generally an OSX only error related to the length of the .  Then you need to add this line to it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ssh_connection]
control_path = %(directory)s/%%h-%%r
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are other options that can go here as well.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/ansible/2016/12/29/ansible-error-fixing-controlpath-too-long-error.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/ansible/2016/12/29/ansible-error-fixing-controlpath-too-long-error.html</guid>
        
        <category>ansible</category>
        
        <category>osx</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>How to Build Rails views with Markdown</title>
        <description>&lt;p&gt;So I’m starting prototyping on an all new thing and I it want to be commercially successful out of the gate.  That’s a bit different for me where I usually focus initially on the code.  This means thinking, from not just &lt;em&gt;day 1&lt;/em&gt; but &lt;strong&gt;hour 1&lt;/strong&gt;, about how the customer sees things and for me that starts with two pages on the site:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;about&lt;/li&gt;
  &lt;li&gt;faq&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would argue that for any web thing, an about page and a faq are at the core of your marketing.  And since both of these are content, I can’t see the point of using straight erb or haml views when MarkDown is so damn easy.  I wouldn’t use markdown for a page where there were forms or UI elements but for content?  Hell yes!&lt;/p&gt;

&lt;h1 id=&quot;how-to-use-markdown-for-rails-views&quot;&gt;How to Use Markdown for Rails Views&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;In your Gemfile you need to call the &lt;a href=&quot;https://github.com/chrisroberts/kramdown-rails&quot;&gt;kramdown-rails gem&lt;/a&gt;: gem ‘kramdown-rails’&lt;/li&gt;
  &lt;li&gt;Do the bundle install happy dance&lt;/li&gt;
  &lt;li&gt;In your app/views/controller_name directory create your views with a .md extension&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The kramdown-rails gem is a light wrapper around the core &lt;a href=&quot;https://github.com/gettalong/kramdown&quot;&gt;kramdown gem&lt;/a&gt; which does the markdown to html translation and supports using it in an Rails view context.&lt;/p&gt;

&lt;p&gt;Just to be a good internet citizen I added the content of this answer to &lt;a href=&quot;http://stackoverflow.com/questions/36957097/rails-4-how-i-use-the-contents-of-a-markdown-file-in-a-view/41362259#41362259&quot;&gt;StackOverflow on Rails Markdown&lt;/a&gt;.  If you have the time and like this then I’d appreciate an upvote.  Thanks!&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/12/28/how-to-build-rails-views-with-markdown.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/12/28/how-to-build-rails-views-with-markdown.html</guid>
        
        <category>rails</category>
        
        <category>markdown</category>
        
        <category>kramdown</category>
        
        <category>hyde</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Product Review Amazon Echo is Excellent</title>
        <description>&lt;p&gt;So my wife got me an Amazon Echo for Christmas and I powered it up today.  Overall I was absolutely delighted with it – Amazon has a hell of a product here.  The ease of use that a conversational user interface brings is staggering:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Alexa play happy holiday music&lt;/li&gt;
  &lt;li&gt;Alexa may the force be with you&lt;/li&gt;
  &lt;li&gt;Alexa play pink&lt;/li&gt;
  &lt;li&gt;Alexa what is the weather&lt;/li&gt;
  &lt;li&gt;Alexa what is the temperature&lt;/li&gt;
  &lt;li&gt;Alexa what is the news&lt;/li&gt;
  &lt;li&gt;Alexa 5 minute timer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those were a few of the commands that we came up with right away.  My wife gets the serious nerd fu credit for the force one; bless her.&lt;/p&gt;

&lt;h1 id=&quot;amazon-echo-out-of-the-box-experience&quot;&gt;Amazon Echo Out of the Box Experience&lt;/h1&gt;

&lt;p&gt;A few thoughts on the out of the box experience:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The out of the box experience is far, far rougher than I had expected.  You certainly get thru it but I didn’t find it clear.&lt;/li&gt;
  &lt;li&gt;You do need to install the Amazon Echo app on your phone&lt;/li&gt;
  &lt;li&gt;There’s a weird config step where the Echo presents a wifi network that you connect to so it can find the actual network that in your house; at the end of it your phone is left connected to the echo and its unclear if you change that or not (I would think so but who knows)&lt;/li&gt;
  &lt;li&gt;The trend towards “no one reads the manual so let’s not even have one” is a suck ass trend.  There are those of us who do read the manual and we get very annoyed by the fact that there isn’t even comprehensive online documentation.  I can rationalize the lack of a printed manual due to rapid updates but sheesh.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;when-it-doesnt-play-music&quot;&gt;When It Doesn’t Play Music&lt;/h1&gt;

&lt;p&gt;My biggest problem was that it wouldn’t play music initially.  Googling was relatively fruitless but it did reveal that lots of other people have this problem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/search?q=amazon+echo+won%27t+play+music&amp;amp;oq=amazon+echo+won%27t+&amp;amp;aqs=chrome.3.0j69i57j0l4.5987j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;Google Search - 3.42 million results&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.echotalk.org/index.php?topic=322.0&quot;&gt;NTP Related&lt;/a&gt;; best theory I saw&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The answer, at least for me, turned out to be turn it off and then on and then wait.  And that did it. Sigh.  Given how important digital technology is to all of our lives the answer of power on / power off or as I refer to it “get out of the car and get back into the car” is a crappy answer at best.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Well I’ve already tried to order the &lt;a href=&quot;https://www.amazon.com/dp/B01DFKC2SO/ref=ods_gw_b_h1_ha_justask_black?pf_rd_r=QMHK561Z7EWPEZQJ1BFX&amp;amp;pf_rd_p=68d26f18-1cf3-45a4-870c-87bf6bd9cee6&quot;&gt;hockey puck extension&lt;/a&gt; for the echo so I guess that says all you need to know about how much I like it. This is a fantastic product.  Here’s a &lt;a href=&quot;http://www.pocket-lint.com/news/136952-amazon-echo-vs-amazon-tap-vs-echo-dot-what-s-the-difference&quot;&gt;good article that clarifies the difference between the Echo and Echo Dot&lt;/a&gt;; much to my surprise the hockey puck isn’t an extension - its a standalone version of the echo with a smaller speaker so it can be cheaper but it doesn’t require the echo at all.  You can plug it into your own speakers for better output.&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/amazon_echo/2016/12/26/product-review-amazon-echo-is-excellent.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/amazon_echo/2016/12/26/product-review-amazon-echo-is-excellent.html</guid>
        
        <category>alexa</category>
        
        <category>echo</category>
        
        <category>music</category>
        
        <category>echo_dot</category>
        
        <category>review</category>
        
        
        <category>amazon_echo</category>
        
      </item>
    
      <item>
        <title>My Worst Git Commit Message Ever</title>
        <description>&lt;p&gt;I was in the car with my wife talking to her as I worked and this was the bmessage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git commit -m &quot;misc:
→ '''''''''''''''''''vvvvvvvvvvvvvvvvvvvvvvV 
VVVVVVVVVVVVVV                                                               
                          ///////// vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                          vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                          vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                          vvvvvvvvvvvvvvvvvvvvvvvvvvv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I feel asleep while talking to her and coding.  I suspect drooling was also involved.  Too many late nights…&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/git/2016/12/23/my-worst-git-commit-message-ever.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/git/2016/12/23/my-worst-git-commit-message-ever.html</guid>
        
        <category>git</category>
        
        <category>humor</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>On Merging Files - Diff Alternatives on the Mac</title>
        <description>&lt;p&gt;There are certain skills as a software developer that take, in my experience, a lifetime to master.  I have now been using version control since the mid 1990s and I still don’t consider myself, by any means, a master.  I’m good, don’t get me wrong, but I don’t feel that I have yet fully internalized all the benefits that version control offers.  So, when I have a chance to really take advantage of version control, I truly relish the opportunity.&lt;/p&gt;

&lt;p&gt;I recently had a refactoring situtation where I was, shall we say, overly ambitious.  And, yes, that’s the positive version of what I’d refer to as “Humpty Dumpty” code syndrome where you have so thoroughly broken a critical bit of code that you just can’t put it back together.  Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I refactored a truly alway bit of two critical routines, one with 8 input variables that returned 6 variables&lt;/li&gt;
  &lt;li&gt;No test coverage&lt;/li&gt;
  &lt;li&gt;It would not, no matter what I did, do what it did before; specifically it would do the first pass of an N pass algorithm but I could never make it go beyond stage 1&lt;/li&gt;
  &lt;li&gt;In the process of doing this I added new and highly desirable functionality everywhere and fixed about 30 critical code mistakes along the way&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, well, &lt;strong&gt;crap&lt;/strong&gt;.  The fix was, in the immortal words of Doctor Who, to get all timey-whimey!  Specifically I needed to time travel back to &lt;em&gt;before&lt;/em&gt; I started and then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;confirm that this code actually worked in the first place – maybe this problem existed before I &lt;em&gt;fixed&lt;/em&gt; it&lt;/li&gt;
  &lt;li&gt;figure out how to travel back from the past while bringing with me a working version&lt;/li&gt;
  &lt;li&gt;NOT lose any of the cool new features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the development practices I am absolutely adamant about is only ever having 1 checkout of the code based at a time.  I’m hardcore on this because I’ve seen what happens when you have multiple versions floating about – its very, very convenient but you tend to get confused and then you lose track of what’s the master and things get screwball.  But, in desparate times, you do what you must and so I went over to github and:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I found a commit from roughly before I started; I wasn’t real specific about this, I just remember “this debacle started last Thursday so goto Wednesday”&lt;/li&gt;
  &lt;li&gt;I browsed the code base at that point&lt;/li&gt;
  &lt;li&gt;I created a new directory where I wanted this&lt;/li&gt;
  &lt;li&gt;I checked out the code; that put a fresh copy of master in place&lt;/li&gt;
  &lt;li&gt;I did a git co HASH where HASH represented the commit hash for Wednesday&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This put me what’s called &lt;a href=&quot;http://stackoverflow.com/questions/3965676/why-did-my-git-repo-enter-a-detached-head-state&quot;&gt;&lt;em&gt;detached head&lt;/em&gt;&lt;/a&gt; mode and I was able to modify /run / test, etc.  I then had to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;port over my rake task which was doing my tests&lt;/li&gt;
  &lt;li&gt;port over the individual changes, one by one, &lt;em&gt;carefully&lt;/em&gt; to let the old code run correctly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I found was that the old code did, in fact, run better than the new code.  Sigh.  And after 2 days of fixing things all over the place I had the system back to running order with the exception that I now had 2 code bases that needed to be merged.  &lt;em&gt;Bigger Sigh&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;time-for-some-diff-magic&quot;&gt;Time for some Diff Magic&lt;/h1&gt;

&lt;p&gt;So I now had two git checkouts with differences between them.  One of them was master, and did I mention that while this was all going on I got pulled off the project to fix something else and add yet more functionality to the code base for a day and half, and the other was my time travel branch.  When I did a git status in the time travel branch I got this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status
HEAD detached at 93bf221
Changes not staged for commit:
  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &amp;lt;file&amp;gt;...&quot; to discard changes in working directory)

	modified:   app/models/form.rb
	modified:   app/models/form2016_q4.rb
	modified:   app/models/iframe2016_q4.rb
	modified:   app/models/link.rb
	modified:   app/models/link2016_q4.rb
	modified:   app/models/page.rb
	modified:   app/models/page2016_q4.rb
	modified:   app/models/page_body.rb
	modified:   app/models/page_body2016_q4.rb
	modified:   app/models/site.rb
	modified:   app/models/unique_url.rb
	modified:   app/models/unique_url2016_q4.rb
	modified:   app/models/url_resolver.rb
	modified:   app/models/url_tool.rb
	modified:   config/initializers/constants.rb
	modified:   lib/common_link.rb
	modified:   lib/common_page.rb

Untracked files:
  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to include in what will be committed)

	docs/snippets/create_mechanize_page_without_fetch.rb
	lib/tasks/crawl2016_q4.rake

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s a whole lot of changes.  The easiest approach was to start with the entirely new files and just copy them over to the original.&lt;/p&gt;

&lt;p&gt;Now this is where I’m going to make a highly personal engineering choice here – I’m going to avoid an automated merge process of any type.  When it comes to complex code changes in an automated fashion I honestly don’t have a lot of faith.  I’ve seen automated merges go wrong time after time so I was looking for a tool to make this easier.  A quick bit of googling turned up:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenDiff / FileMerge (part of X-Code)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meldmerge.org/&quot;&gt;meld&lt;/a&gt; - a python tool with an unofficial brew install via &lt;em&gt;brew install homebrew/gui/meld&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;[Beyond Compare]http://www.scootersoftware.com/download.php from &lt;a href=&quot;http://www.scootersoftware.com/&quot;&gt;Scooter Software&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sourcegear.com/diffmerge/&quot;&gt;Diff Merge&lt;/a&gt; from &lt;a href=&quot;http://www.sourcegear.com/&quot;&gt;SourceGear&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kaleidoscopeapp.com/&quot;&gt;Kaleidoscope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I ended up using Open Diff for my merge issues:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/open_diff.png&quot; alt=&quot;opendiff&quot; /&gt;&lt;/p&gt;

&lt;p&gt;diff_merge.png
beyond_compare.png
kaleidoscope.png&lt;/p&gt;

&lt;p&gt;Good articles on merge tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.git-tower.com/blog/diff-tools-mac&quot;&gt;GitTower&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.outcoldman.com/en/archive/2014/05/12/git-dirdiff/&quot;&gt;outcoldman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 22 Dec 2016 11:26:49 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/12/22/on-merging-files-diff-alternatives-on-the-mac.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/12/22/on-merging-files-diff-alternatives-on-the-mac.html</guid>
        
        <category>software_engineering</category>
        
        <category>version_control</category>
        
        <category>merge</category>
        
        <category>git</category>
        
        <category>diff</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
  </channel>
</rss>
