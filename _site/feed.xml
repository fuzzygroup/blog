<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 26 Apr 2017 17:53:53 -0400</pubDate>
    <lastBuildDate>Wed, 26 Apr 2017 17:53:53 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Testing Out New Programming Languages Using Docker</title>
        <description>&lt;p&gt;I am, as you likely know, an unabashed Ruby fan – love the language; loathe the performance but still a huge, huge damn fan.  Ruby is the first language I ever fell in love with and like many first loves, they never really fade.  Still, even so, there times when you just hunger for something new.  Here’s how to get a new programming language up and running with Docker for a handful of different environments.  I deliberately chose languages that can boot into a console or REPL (replace-evaluate-print-loop) since that’s the easiest way to get going in terms of experimenting with a language.&lt;/p&gt;

&lt;h1 id=&quot;installing-docker&quot;&gt;Installing Docker&lt;/h1&gt;

&lt;p&gt;The easiest way to install Docker is to follow the official directions &lt;a href=&quot;https://docs.docker.com/engine/installation/&quot;&gt;here&lt;/a&gt;.  You want Docker Community Edition in likely one of these platforms:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/docker-for-mac/install/&quot;&gt;Mac&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/docker-for-windows/install/&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/installation/linux/ubuntu/&quot;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please note that Docker install urls change frequently so you may need to look around a bit.  They work today, end of April 2017, how long that lasts is unclear.&lt;/p&gt;

&lt;h1 id=&quot;docker-basics&quot;&gt;Docker Basics&lt;/h1&gt;

&lt;p&gt;There are a few basic Docker things that you need to know, particularly, if you run Docker on OSX.  Docker is a container technology, similar to a virtual machine (albeit faster, smaller and very differently implemented) that allows you to run programs.  The best way I understand Docker is to think of it as a portable runtime that is bound to a software stack and allows you to achieve build once, run anywhere status.  The software stack can be your own code, 3rd party code such as a database or some combination.&lt;/p&gt;

&lt;h2 id=&quot;the-ps-and-kill-commands&quot;&gt;The ps and kill Commands&lt;/h2&gt;

&lt;p&gt;Just like your operating system has a ps command, so too does Docker:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/docker_ps.png&quot; alt=&quot;docker_ps.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unlike your operating system where a simple number denotes a process id, Docker uses a git like hash for each process.&lt;/p&gt;

&lt;p&gt;Just like your operating system has a kill command, so too does docker which you run with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker kill hash&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The general syntax shown above of &lt;strong&gt;docker&lt;/strong&gt; &lt;em&gt;command&lt;/em&gt; is what you’ll see below.  Normally there will be other options as well which you can see illustrated below.&lt;/p&gt;

&lt;h2 id=&quot;the-magic-eval-statement&quot;&gt;The Magic Eval Statement&lt;/h2&gt;

&lt;p&gt;If you get this message:&lt;/p&gt;

&lt;p&gt;docker ps
Cannot connect to the Docker daemon at tcp://192.168.59.103:2376. Is the docker daemon running?&lt;/p&gt;

&lt;p&gt;after running a docker ps or any docker command then its an issue of not being able to find the Docker daemon and then you need this bit of magic:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;eval $(docker-machine env ${C_DOCKER_MACHINE})&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My bash skills are laughably bad so I’m not going to even try and explain that.  Just think of it as a magic spell given to you by an experienced wizard – you don’t have to understand how it works as long as it does.&lt;/p&gt;

&lt;h2 id=&quot;the-images-command&quot;&gt;The images Command&lt;/h2&gt;

&lt;p&gt;Run the command docker images to find all the Docker images on your system.  You’ll be surprised at how big some of these can be and they often will hang out on your system, just eating your disc space.  Just as an example, a prototype I played with using the tleyden5iwx/open-ocr-preprocessor OpenOcr image over a year ago is still on my system using 1.3 gigs of disc sapce.&lt;/p&gt;

&lt;h2 id=&quot;disc-space-usage--where-does-all-this-go&quot;&gt;Disc Space Usage / Where Does All This Go?&lt;/h2&gt;

&lt;p&gt;The location of all your images varies by &lt;a href=&quot;http://stackoverflow.com/questions/19234831/where-are-docker-images-stored-on-the-host-machine&quot;&gt;operating system&lt;/a&gt;.  On OSX it is stored under the virtual machine:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please keep in mind that you can use up a considerable amount of disc space just by experimenting with images.  Here’s my system:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hc ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 21G	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 21G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;testing-different-languages&quot;&gt;Testing Different Languages&lt;/h1&gt;

&lt;h2 id=&quot;ruby&quot;&gt;Ruby&lt;/h2&gt;

&lt;p&gt;In case you’re not a rubyist, I thought I’d start with this one.  &lt;a href=&quot;https://hub.docker.com/r/library/ruby/tags/&quot;&gt;Ruby on Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run –rm –name ruby -it ruby:2.4-alpine&lt;/p&gt;

&lt;h2 id=&quot;elixir&quot;&gt;Elixir&lt;/h2&gt;

&lt;p&gt;Elixir is a next generation functional language designed by some of the former Rails core members.  &lt;a href=&quot;https://hub.docker.com/_/elixir/&quot;&gt;Elixir on Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run –rm –name elixir -it elixir:1.4-slim&lt;/p&gt;

&lt;p&gt;Here’s what this process looks like while it runs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/docker_elixir.png&quot; alt=&quot;docker_elixir.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;php-71&quot;&gt;PHP 7.1&lt;/h2&gt;

&lt;p&gt;PHP is, well, php.  Do I really need to say any more?  &lt;a href=&quot;https://hub.docker.com/r/library/php/tags/&quot;&gt;PHP On Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run –rm –name php -it php:7.1-alpine&lt;/p&gt;

&lt;h2 id=&quot;python-27&quot;&gt;Python 2.7&lt;/h2&gt;

&lt;p&gt;Python is a dynamic scripting language similar to Ruby.  Python 2.7 is the mainstream version of Python.  &lt;a href=&quot;https://hub.docker.com/_/python/&quot;&gt;Python on Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run –rm –name python27 -it python:2.7-slim&lt;/p&gt;

&lt;h2 id=&quot;python-3&quot;&gt;Python 3&lt;/h2&gt;

&lt;p&gt;Python 3 is a newer version of Python that hasn’t been as widely adopted as the Python 2 family.&lt;/p&gt;

&lt;p&gt;docker run –rm –name python33 -it python:3.3-slim&lt;/p&gt;

&lt;h2 id=&quot;r&quot;&gt;R&lt;/h2&gt;

&lt;p&gt;I really, really like R for statistical analysis and data crunching.  &lt;a href=&quot;https://hub.docker.com/_/r-base/&quot;&gt;R on Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run –rm –name r-base -it r-base:3.4.0&lt;/p&gt;

&lt;p&gt;R can be a bit different from other languages due to its mathematical orientation.  Here’s a sample R one liner you can use to test it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;print(sample(1:10))&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.rexamples.com/&quot;&gt;More R Examples&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;perl&quot;&gt;Perl&lt;/h2&gt;

&lt;p&gt;Perl in many ways is the grandfather to all modern web development.  Unlike the languages above, Perl isn’t a REPL based language so you’ll have to pass a script in when you run it.  &lt;a href=&quot;https://hub.docker.com/_/perl/&quot;&gt;Perl on Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run -it –rm –name my-running-script -v “$PWD”:/usr/src/myapp -w /usr/src/myapp perl:5.20 perl your-daemon-or-script.pl&lt;/p&gt;

&lt;h2 id=&quot;julia&quot;&gt;Julia&lt;/h2&gt;

&lt;p&gt;Julia is a high performance language used for finance and math that runs on top of the Java VM.  &lt;a href=&quot;https://hub.docker.com/_/julia/&quot;&gt;Julia on Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;docker run -it –rm -v “$PWD”:/usr/myapp -w /usr/myapp julia julia script.jl arg1 arg2&lt;/p&gt;

&lt;h1 id=&quot;learning-more-about-docker&quot;&gt;Learning More About Docker&lt;/h1&gt;

&lt;p&gt;Most of what I know about Docker, I learned from The &lt;a href=&quot;https://diveintodocker.com/courses/dive-into-docker&quot;&gt;Dive into Docker&lt;/a&gt; course by Nick Janetakis.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/docker/2017/04/26/testing-out-new-programming-languages-using-docker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/docker/2017/04/26/testing-out-new-programming-languages-using-docker.html</guid>
        
        <category>docker</category>
        
        <category>programming</category>
        
        <category>elixir</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Using the Bing Cognitive Search API - Decrypting the Search Result Url</title>
        <description>&lt;p&gt;There are times when you use someone’s API that just make you go &lt;em&gt;What the Hell???&lt;/em&gt; – what were they thinking???  I hit this recently using the CognitiveBing gem in Ruby.  This is a gem which lets you execute queries against the Bing search engine. What I found was that an interface to the search engine &lt;strong&gt;fails&lt;/strong&gt; to give you the &lt;strong&gt;actual url&lt;/strong&gt; to the search results that it finds.  What Bing instead does is send down a tracking url on Bing itself that is a redirector to the search result in question.  This is so ludicrous that it astonishes me.  Sure, I get it, this gives Bing more tracking information but the CognitiveSearch api is a &lt;strong&gt;paid&lt;/strong&gt; api.  If I’m paying good money for an api then I wouldn’t expect that the destinations of everything I care about in the search result get fed bank to Bing.  And, just to clarify, this isn’t a part of the gem, it is in the raw search result sent back from Bing.&lt;/p&gt;

&lt;p&gt;http://stackoverflow.com/questions/2733007/urldecode-in-ruby&lt;/p&gt;

&lt;p&gt;You can’t use display url&lt;/p&gt;

&lt;p&gt;My Fork: https://github.com/fuzzygroup/cognitivebing/&lt;/p&gt;

&lt;p&gt;Pagination rference: https://github.com/kaminari/kaminari&lt;/p&gt;

&lt;p&gt;https://github.com/aggounix/cognitivebing&lt;/p&gt;

&lt;p&gt;https://msdn.microsoft.com/en-us/library/dn760794.aspx#responsefilter&lt;/p&gt;

&lt;p&gt;https://msdn.microsoft.com/en-us/library/dn760787.aspx&lt;/p&gt;

&lt;p&gt;https://msdn.microsoft.com/en-US/library/dn760794.aspx&lt;/p&gt;

&lt;p&gt;https://docs.microsoft.com/en-us/azure/cognitive-services/Speech/GetStarted/GetStarted-cURL&lt;/p&gt;

&lt;p&gt;https://docs.microsoft.com/en-us/azure/cognitive-services/cognitive-services-apis-create-account&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Apr 2017 20:28:41 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/22/using-the-bing-api-decrypting-the-search-result-url.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/22/using-the-bing-api-decrypting-the-search-result-url.html</guid>
        
        
      </item>
    
      <item>
        <title>Rails and ActiveRecord Optimization - Banishing MySQL File Sorts</title>
        <description>&lt;p&gt;MariaDB [seira_crawler_development]&amp;gt; explain SELECT  &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.* FROM &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt; WHERE &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;url_type&lt;/code&gt; = ‘udemy_user’ AND &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;url_fid&lt;/code&gt; = ‘zohouniversity’ ORDER BY &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; ASC LIMIT 1\G
&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;* 1. row **&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;*****
           id: 1
  select_type: SIMPLE
        table: page_archives
         type: ref
possible_keys: page_type__date_created_at__url,url_fid__url_type__adate_created_at__url,page_type__meta_type__date_created_at__url
          key: url_fid__url_type__adate_created_at__url
      key_len: 1536
          ref: const,const
         rows: 2
        Extra: Using index condition; Using where; Using filesort
1 row in set (0.00 sec)&lt;/p&gt;

&lt;p&gt;MariaDB [seira_crawler_development]&amp;gt; quit
Bye
sjohnson@ip-10-19-48-1:~/Dropbox/fuzzygroup/hyde/seira_crawler$ bundle exec rails c
#&amp;lt;Gem::Specification name=sidekiq version=4.2.10&amp;gt;
Loading development environment (Rails 5.0.2)
2.3.1 :001 &amp;gt; PageArchive.url_type_and_url_fid_exist?(“udemy_user”, “zohouniversity1”)
  PageArchive Load (0.4ms)  SELECT  &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.* FROM &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt; WHERE &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;url_type&lt;/code&gt; = ‘udemy_user’ AND &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;url_fid&lt;/code&gt; = ‘zohouniversity1’ LIMIT 1
false
2.3.1 :002 &amp;gt; quit
sjohnson@ip-10-19-48-1:~/Dropbox/fuzzygroup/hyde/seira_crawler$ mysql -uroot -p seira_crawler_development
Enter password:
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A&lt;/p&gt;

&lt;p&gt;Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 147
Server version: 10.1.19-MariaDB Homebrew&lt;/p&gt;

&lt;p&gt;Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.&lt;/p&gt;

&lt;p&gt;Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement.&lt;/p&gt;

&lt;p&gt;MariaDB [seira_crawler_development]&amp;gt; explain SELECT  &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.* FROM &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt; WHERE &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;url_type&lt;/code&gt; = ‘udemy_user’ AND &lt;code class=&quot;highlighter-rouge&quot;&gt;page_archives&lt;/code&gt;.&lt;code class=&quot;highlighter-rouge&quot;&gt;url_fid&lt;/code&gt; = ‘zohouniversity1’ LIMIT 1\G
&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;* 1. row **&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;*****
           id: 1
  select_type: SIMPLE
        table: page_archives
         type: ref
possible_keys: page_type__date_created_at__url,url_fid__url_type__adate_created_at__url,page_type__meta_type__date_created_at__url
          key: url_fid__url_type__adate_created_at__url
      key_len: 1536
          ref: const,const
         rows: 1
        Extra: Using index condition
1 row in set (0.00 sec)&lt;/p&gt;

&lt;p&gt;# PageArchive.url_type_and_url_fid_exist?(“udemy_user”, “zohouniversity”)
  def self.url_type_and_url_fid_exist?(url_type, url_fid)
    return true if PageArchive.where(:url_type =&amp;gt; url_type, :url_fid =&amp;gt; url_fid).order(“”).limit(1).first
    return false 
  end&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Apr 2017 19:40:04 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/04/22/rails-and-activerecord-optimization-banishing-mysql-file-sorts.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/04/22/rails-and-activerecord-optimization-banishing-mysql-file-sorts.html</guid>
        
        <category>rails</category>
        
        <category>mysql</category>
        
        <category>optimization</category>
        
        <category>activerecord</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Git Overview - Resetting Your Changes</title>
        <description>&lt;p&gt;http://stackoverflow.com/questions/5807137/how-to-revert-uncommitted-changes-including-files-and-folders&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Apr 2017 04:53:30 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/21/git-overview-resetting-your-changes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/21/git-overview-resetting-your-changes.html</guid>
        
        
      </item>
    
      <item>
        <title>OSX MySQL Disc Space Usage and Location</title>
        <description>&lt;p&gt;Your permanent storage for a SAAS app is always one of your single biggest per user costs.  There are two ways to get this info – at the SQL layer with a query and at the filesystem layer.  Each method is explained.&lt;/p&gt;

&lt;h1 id=&quot;getting-disc-space-from-mysql-with-a-query&quot;&gt;Getting Disc Space From MySQL With a Query&lt;/h1&gt;

&lt;p&gt;You can run this query:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select table_schema, sum((data_length+index_length)/1024/1024) AS MB from information_schema.tables group by 1;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and you’ll get back a per database assessment of disc space used.  That’s the easiest way to get this information.  Here’s what it looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| seira_crawler_development         | 354.68750000 |
| seira_crawler_test                |   0.23437500 |
| seira_watch_development           |   0.75000000 |
| seira_watch_site_development      |   0.12500000 |
| seira_watch_web_app_1_development |   2.82812500 |
| seira_watch_web_app_2_development |   1.21875000 |
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;where-is-your-physical-database-instance&quot;&gt;Where Is Your Physical Database Instance?&lt;/h1&gt;

&lt;p&gt;Run this mysql query from your command line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uUSER -p -e 'SHOW VARIABLES WHERE Variable_Name LIKE &quot;%dir&quot;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll see something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uUSER -p -e 'SHOW VARIABLES WHERE Variable_Name LIKE &quot;%dir&quot;'
Enter password:
+---------------------------+---------------------------------------------------------+
| Variable_name             | Value                                                   |
+---------------------------+---------------------------------------------------------+
| aria_sync_log_dir         | NEWFILE                                                 |
| basedir                   | /usr/local/Cellar/mariadb/10.1.19                       |
| character_sets_dir        | /usr/local/Cellar/mariadb/10.1.19/share/mysql/charsets/ |
| datadir                   | /usr/local/var/mysql/                                   |
| innodb_data_home_dir      |                                                         |
| innodb_log_arch_dir       | ./                                                      |
| innodb_log_group_home_dir | ./                                                      |
| innodb_tmpdir             |                                                         |
| lc_messages_dir           |                                                         |
| plugin_dir                | /usr/local/Cellar/mariadb/10.1.19/lib/plugin/           |
| slave_load_tmpdir         | /var/folders/76/mqchlgzs6x5cv2f11jh3jkjw0000gn/T/       |
| tmpdir                    | /var/folders/76/mqchlgzs6x5cv2f11jh3jkjw0000gn/T/       |
| wsrep_data_home_dir       | /usr/local/var/mysql/                                   |
+---------------------------+---------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The path datadir is where your data is stored.  For my system I want to look into this path: /usr/local/var/mysql/.&lt;/p&gt;

&lt;h1 id=&quot;assessing-disc-space-usage&quot;&gt;Assessing Disc Space Usage&lt;/h1&gt;

&lt;p&gt;Running an ls -l on the path in datadir will show you all your databases on your development machine.  Doing a du -h on the path to any database on your system will show you a result like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hc /usr/local/var/mysql/seira_crawler_development/
400M    /usr/local/var/mysql/seira_crawler_development/
400M    total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s the metric for my backing crawler data archive.  The data for a single user instance is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hc /usr/local/var/mysql/seira_watch_web_app_1_development/
 12M    /usr/local/var/mysql/seira_watch_web_app_1_development/
 12M    total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;scaling-the-numbers-up&quot;&gt;Scaling the Numbers Up&lt;/h1&gt;

&lt;p&gt;If you want to assess your disc space needs for a SAAS app, take your per user disc space needs and then multiply it by the number of users that you are projecting to handle and then add the disc space for any system level databases (such as the crawler data above).&lt;/p&gt;

&lt;h1 id=&quot;adding-the-numbers-to-a-dashboard&quot;&gt;Adding the Numbers to a Dashboard&lt;/h1&gt;

&lt;p&gt;If your SAAS app supports an admin tool of any type then you want to watch the growth of this number pretty carefully since unexpected database growth can lead to system outages and the like.  Here’s a quick Ruby snippet to get this information as a float which you could log, graph, etc:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def self.database_size
  sql = &quot;select table_schema, sum((data_length+index_length)/1024/1024) AS MB from information_schema.tables where table_schema='#{Rails.configuration.database_configuration[Rails.env][&quot;database&quot;]}' group by 1;&quot;
  results = ActiveRecord::Base.connection.select_all(sql)
  return results.first[&quot;MB&quot;].to_f
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m getting the name of the current database in an environment agnostic way using: &lt;strong&gt;Rails.configuration.database_configuration[Rails.env][“database”]&lt;/strong&gt;.  That value was read from the configuration file.  You could also get it from: &lt;strong&gt;ActiveRecord::Base.connection.current_database&lt;/strong&gt; (which to use depends on whether or not you are using ActiveRecord or a different storage abstraction).&lt;/p&gt;

&lt;p&gt;Note: I’m feed this, via a JSON feed, to my new Cartazzi engine and I’m pretty pleased with this as an admin tool.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17968287/how-to-find-the-mysql-data-directory-from-command-line-in-windows&quot;&gt;Finding Your MySQL Data Directory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.mysql.com/doc/mysql-utilities/1.5/en/mysqldiskusage.html&quot;&gt;mysqldiskusage utility (not always available)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dba.stackexchange.com/questions/14337/calculating-disk-space-usage-per-mysql-db&quot;&gt;Calculating Disc Space Usage with a Query&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10001583/how-to-check-the-database-name-that-activerecord-uses&quot;&gt;Getting Current ActiveRecord Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 21 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/mysql/2017/04/21/osx-mysql-disc-space-usage-and-location.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/mysql/2017/04/21/osx-mysql-disc-space-usage-and-location.html</guid>
        
        <category>osx</category>
        
        <category>mysql</category>
        
        <category>mariadb</category>
        
        <category>saas</category>
        
        <category>ruby</category>
        
        <category>hyde</category>
        
        
        <category>mysql</category>
        
      </item>
    
      <item>
        <title>Getting It Wrong with sync.rake and how to recover using git</title>
        <description>&lt;p&gt;I’m working with a pretty complex source code model where I’m pulling in functionality from other git repos via shell scripts. This morning I got it wrong and a bunch of code disappeared. git checkout – . cleaned up my problem perfectly. Thanks!&lt;/p&gt;

&lt;p&gt;http://stackoverflow.com/questions/5807137/how-to-revert-uncommitted-changes-including-files-and-folders&lt;/p&gt;

&lt;p&gt;Here was the crucial portion of my manifest:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;app/models/user.rb&quot;:[
  &quot;../hyde_web&quot;,
  &quot;../hyde_admin&quot;,
  &quot;../hyde_worker&quot;,
  &quot;../cartazzi_site&quot;,
  &quot;../cartazzi_web_app&quot;],
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 20 Apr 2017 05:36:04 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/20/getting-it-wrong-with-sync-rake-and-how-to-recover-using-git.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/20/getting-it-wrong-with-sync-rake-and-how-to-recover-using-git.html</guid>
        
        
      </item>
    
      <item>
        <title>Real World Crawling and Scraping Using Ruby</title>
        <description>&lt;p&gt;https://github.com/scrapy-plugins/scrapy-splash&lt;/p&gt;

&lt;p&gt;https://hub.docker.com/r/scrapinghub/splash/&lt;/p&gt;

&lt;p&gt;https://devcentral.f5.com/articles/these-are-not-the-scrapes-youre-looking-for-session-anomalies&lt;/p&gt;

&lt;p&gt;https://github.com/JonasCz/How-To-Prevent-Scraping&lt;/p&gt;

&lt;p&gt;http://ngauthier.com/2014/06/scraping-the-web-with-ruby.html&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Apr 2017 20:00:43 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/19/real-world-crawling-and-scraping-using-ruby.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/19/real-world-crawling-and-scraping-using-ruby.html</guid>
        
        
      </item>
    
      <item>
        <title>NightmareJS and XVFB</title>
        <description>&lt;p&gt;var Xvfb = require(‘xvfb’);
var Nightmare = require(‘nightmare’);&lt;/p&gt;

&lt;p&gt;var xvfb = new Xvfb({
  silent: true
});
xvfb.startSync();&lt;/p&gt;

&lt;p&gt;var nightmare = Nightmare({
  show: false,
  webPreferences: {
    partition: ‘custom’
  }
});&lt;/p&gt;

&lt;p&gt;nightmare
  .goto(‘https://google.com’)
  .evaluate(function() {
    return document.title;
  })
  .end()
  .then(function(title) {
    console.log(title);
    xvfb.stopSync();
  });&lt;/p&gt;

&lt;p&gt;https://github.com/segmentio/nightmare/issues/602&lt;/p&gt;

&lt;p&gt;http://elementalselenium.com/tips/38-headless&lt;/p&gt;

&lt;p&gt;https://github.com/sebastienvercammen/ptc-acc-gen/issues/23&lt;/p&gt;

&lt;p&gt;https://github.com/nodejs/node-gyp/issues/569&lt;/p&gt;

&lt;p&gt;https://github.com/segmentio/nightmare/issues/602&lt;/p&gt;

&lt;p&gt;http://stackoverflow.com/questions/32518777/nightmare-js-browsing-and-parsing-multiple-sites&lt;/p&gt;

&lt;p&gt;https://github.com/teampoltergeist/poltergeist#customization&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Apr 2017 20:00:21 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/19/nightmarejs-and-xvfb.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/19/nightmarejs-and-xvfb.html</guid>
        
        
      </item>
    
      <item>
        <title>Rails Redis Basics</title>
        <description>&lt;p&gt;http://stackoverflow.com/questions/6301399/empty-delete-a-set-in-redis&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Apr 2017 19:52:02 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/19/rails-redis-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/19/rails-redis-basics.html</guid>
        
        
      </item>
    
      <item>
        <title>JavaScript and Node and NPM Basics</title>
        <description>&lt;p&gt;http://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu&lt;/p&gt;

&lt;p&gt;http://stackoverflow.com/questions/8393636/node-log-in-a-file-instead-of-the-console&lt;/p&gt;

&lt;p&gt;https://nodejs.org/en/docs/guides/nodejs-docker-webapp/&lt;/p&gt;

&lt;p&gt;https://github.com/npm/npm/issues/9161&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Apr 2017 19:50:19 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/04/19/javascript-and-node-and-npm-basics.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/04/19/javascript-and-node-and-npm-basics.html</guid>
        
        
      </item>
    
  </channel>
</rss>
