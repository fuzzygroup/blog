<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>https://fuzzyblog.io/blog/</link>
    <atom:link href="http://fuzzyblog.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 15 Jan 2020 19:29:51 -0500</pubDate>
    <lastBuildDate>Wed, 15 Jan 2020 19:29:51 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Protecting Your Kid From the Internet</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0935.jpeg&quot; alt=&quot;IMG_0935.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't care how permissive / how liberal a parent you are, I suspect that you would have problems with your relatively young kid (let's say &lt;strong&gt;under&lt;/strong&gt; 18) going into a place like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/porn_shop.jpg&quot; alt=&quot;sex_shop_image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I look at putting the Internet into your home without some kind of Internet filtering as analogous to letting your kids walk into a place like this and not stopping them.  In the rest of this post I'll talk about Internet filtering and the first ever product, Disney Circle, that I've found is worth using&lt;/p&gt;

&lt;h2 id=&quot;my-credentials-to-even-write-this&quot;&gt;My Credentials to Even Write This&lt;/h2&gt;

&lt;p&gt;On a personal level I am a husband and father (two sons, 18 and 13).  I'm also a software engineer who has been active on the Internet since the pre-web days and I've spent a large amount of my professional life dealing with spam and bad actors on the Internet.  Finally I'm a firm believer in free speech and as my wife might comment, I'm the furthest thing from a prude in any way, shape or form.  Those last two points, free speech and not being a prude make this a hard post for me to write as I am generally &lt;strong&gt;philosophically opposed&lt;/strong&gt; to Internet filtering.  Now, that said, I would never let my kid walk into a place like that pictured above and I don't think you should either – what happens there is an adult activity and there is a reason why its actually illegal to be in there if you're under 18.&lt;/p&gt;

&lt;h3 id=&quot;internet-filtering-overview&quot;&gt;Internet Filtering Overview&lt;/h3&gt;

&lt;p&gt;Internet filtering is just that – the idea of selectively blocking portions of the Internet i.e. filtering.  From the bits, bytes and megabytes perspective, internet filtering is a hard technical problem for a whole bunch of reasons.  And, alas, those actually don't matter all that much so I'm going to skip nerding out here as much as I might like to do a deep dive into Internet architecture.&lt;/p&gt;

&lt;h3 id=&quot;disney-circle&quot;&gt;Disney Circle&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Circle-Parental-Controls-Internet-Devices/dp/B07QQHRB8P/ref=sr_1_1_sspa?keywords=disney+circle&amp;amp;qid=1578914466&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExSjZMWjVISU85RDhNJmVuY3J5cHRlZElkPUEwODA5MTA2Q0ROWFFTSktTWkpKJmVuY3J5cHRlZEFkSWQ9QTAzNTE0MDgzMEZMUkpBSkdZNEM5JndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ==&quot;&gt;Disney Circle&lt;/a&gt; is a hardware box that plugs into your wifi network and acts to intercept network traffic and block things that fall into the category of malicious stuff including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Porn&lt;/li&gt;
  &lt;li&gt;Gambling&lt;/li&gt;
  &lt;li&gt;Drug related content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a variety of well thought out parental controls which give you category level granularity down to things like &quot;Allow Facebook but not Twitter&quot;.&lt;/p&gt;

&lt;p&gt;I honestly didn't expect to like Disney Circle and I find myself in the rare position of not being able to say enough good things about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you use a mesh networking product like Eero, you may find that Disney Circle doesn't work with it so you might specifically find out before you buy one.&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2020/01/13/protecting-your-kid-from-the-internet.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2020/01/13/protecting-your-kid-from-the-internet.html</guid>
        
        
      </item>
    
      <item>
        <title>Startup Coach 02 - How to Learn Technology Stuff Quickly Part 1</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6390.jpeg&quot; alt=&quot;IMG_6390.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are typically two types of folks that want to have their own startup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Engineers / Technical folk who have the ability to create their own products / services / mobile apps / SAAS apps&lt;/li&gt;
  &lt;li&gt;Business Folk who have a concept but don't have the ability to create their own technology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are exceptions to the rule – sometimes you will see someone who straddles these lines (I do; I'm both more than business savvy and I write code like demon every damn day) – but, generally, this is the split that you see.&lt;/p&gt;

&lt;p&gt;This post is written for the business person who finds themselves with the need to learn technical things quickly.  I'm going to tell you how, decades ago, I learned &lt;em&gt;how to learn&lt;/em&gt; technology stuff and then, in part two, I'm going to give recommendations for how I'd approach this in 2020.&lt;/p&gt;

&lt;h2 id=&quot;how-i-learned-technology-stuff----in-april-1982&quot;&gt;How I Learned Technology Stuff – in April, 1982&lt;/h2&gt;

&lt;p&gt;I date my technology education back to April 1982 (it was likely earlier since this was a cover date on a periodical and magazines come out before the date on the cover so they have news stand time but we'll go with April).   Going on that date, this puts me at:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1967&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magazine_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1982&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;040&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magazine_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;372602739726027&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;so let's call it 14 years old.  At this point I was likely a sophomore in high school with no formal computer training save for I owned an early personal computer which I mostly used for playing games.&lt;/p&gt;

&lt;p&gt;And then I walked into the local Walden Books and discovered Byte Magazine:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;https://ia802603.us.archive.org/BookReader/BookReaderImages.php?zip=/26/items/byte-magazine-1982-04/1982_04_BYTE_07-04_Human_Factors_Engineering_jp2.zip&amp;amp;file=1982_04_BYTE_07-04_Human_Factors_Engineering_jp2/1982_04_BYTE_07-04_Human_Factors_Engineering_0000.jp2&amp;amp;scale=16&amp;amp;rotate=0&quot; alt=&quot;https://ia802603.us.archive.org/BookReader/BookReaderImages.php?zip=/26/items/byte-magazine-1982-04/1982_04_BYTE_07-04_Human_Factors_Engineering_jp2.zip&amp;amp;file=1982_04_BYTE_07-04_Human_Factors_Engineering_jp2/1982_04_BYTE_07-04_Human_Factors_Engineering_0000.jp2&amp;amp;scale=16&amp;amp;rotate=0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can read this issue online &lt;a href=&quot;https://archive.org/details/byte-magazine-1982-04&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;and I was just plain fascinated.  What I discovered was that not only did I &lt;strong&gt;not understand&lt;/strong&gt; this magazine, I maybe understood only every 15th word (generally pronouns).  But what I did was this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I simply read it even though I didn't understand it&lt;/li&gt;
  &lt;li&gt;I bought the next issue&lt;/li&gt;
  &lt;li&gt;And I read that and I understood a bit more&lt;/li&gt;
  &lt;li&gt;Lather; rinse; repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then, five years later, I started my first software company based on what I learned from reading Byte magazine.  And, honestly, at that point I really qualified purely as the business folk (albeit one with a strong product focus; not engineering; product definition / product management).  And I want to be clear about something – I didn't spend 5 years learning technology stuff.  During that time, I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Became an Eagle Scout&lt;/li&gt;
  &lt;li&gt;Learned a bit of Basic programming&lt;/li&gt;
  &lt;li&gt;Learned to drive and work on cars&lt;/li&gt;
  &lt;li&gt;Finished High School&lt;/li&gt;
  &lt;li&gt;Discovered girls and, my, my – what a deep and wonderful journey that began for me&lt;/li&gt;
  &lt;li&gt;Started my first business (we fixed old school tube televisions mostly in the inner city)&lt;/li&gt;
  &lt;li&gt;Worked in the family business a lot (full time during the summers)&lt;/li&gt;
  &lt;li&gt;Went to college for 2 years before dropping out and starting my software company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What that single issue of Byte Magazine taught me was the power of &lt;strong&gt;immersion&lt;/strong&gt;.  If you need to learn something then what you do is a deep dive into it and, if you &lt;strong&gt;really&lt;/strong&gt; want it, I am a firm believer that you can master whatever you want.  And, I will admit, that there are certain things you want to learn of which there are intellectual capabilities that you may not have (for example, I'm never going to learn certain types of higher math; I'm just not wired for that).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: When I entered high school I was in remedial math; I left high school with calculus under my belt having taken 5 years of math in 4 years.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I'm don't dispute that I'm a sort of smart guy but what I really am is &lt;strong&gt;somebody who learned how to learn&lt;/strong&gt; very, very early.  I'm also a damn hard worker.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/12/startup-coach-02-how-to-learn-technology-stuff.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/12/startup-coach-02-how-to-learn-technology-stuff.html</guid>
        
        <category>startup</category>
        
        <category>startup_coach</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Tools for Tailwind CSS</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6308.jpeg&quot; alt=&quot;IMG_6308.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tailwind is a CSS grid library that is an alternative to Bootstrap and, well, something I'm increasingly using.  Here are some handy, dandy Tailwind tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@mattburgess/getting-started-with-tailwindcss-3190def35361&quot;&gt;Tailwind Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hanneslund.github.io/elm-tailwind-button-maker/&quot;&gt;Tailwind Button Generator&lt;/a&gt; (written in &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;!!!!)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwindgrids.com/#/&quot;&gt;Tailwind Grid Generator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tailwindtoolbox.com/&quot;&gt;Tailwind Toolbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tailwind.build/&quot;&gt;Tailwind Builder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 11 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/css/2020/01/11/tools-for-tailwind-css.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/css/2020/01/11/tools-for-tailwind-css.html</guid>
        
        <category>css</category>
        
        <category>tailwind</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Adding Explainability to Machine Learning Routines via Runtime Execution of Labeling Functions</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0928.jpeg&quot; alt=&quot;IMG_0928.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am spending much of my time these days in the world of machine learning and I'm finding that it is &lt;strong&gt;profoundly interesting&lt;/strong&gt;.  One of the most interesting aspects of machine learning, for me, is the &lt;em&gt;black box&lt;/em&gt; nature of machine learning's output.  What we typically get from a machine learning model what the model thinks but not how it arrived at that result.  And this lack of explainability is true for machine learning whether the underlying technology is Tensor Flow for image segmentation or Bert / Roberta / Albert for text processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:  Bert / Roberta / Albert are machine learning tools that generate linguistically savvy models that understand English language content.&lt;/p&gt;

&lt;p&gt;As a side note, given how hard it is for most people to understand why they think what they think, is the black box nature of machine learning actually all that surprising?&lt;/p&gt;

&lt;h2 id=&quot;machine-learning-basics-for-the-newbie&quot;&gt;Machine Learning Basics for the Newbie&lt;/h2&gt;

&lt;p&gt;The world of machine learning, which appears intimidating as hell to the newbie, actually isn't that hard but the terms can be terrifying.  Someone recently asked me what I was doing and this was my answer:&lt;/p&gt;

&lt;p&gt;&quot;I am working on a weekly supervised learning model for an anti Semitic classifier that will be used in a Kafka data pipeline. &quot;&lt;/p&gt;

&lt;p&gt;Here are the very basics of machine learning:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Machine Learning is just that - a way for a machine to learn from data.&lt;/li&gt;
  &lt;li&gt;The underlying idea of machine learning is pretty much just &lt;em&gt;pattern recognition&lt;/em&gt; based on data fed through a neural network.&lt;/li&gt;
  &lt;li&gt;To make machine learning work you &quot;label&quot; a data set which means you tell the machine that for Example X, the answer you want is Foo and for Example Y, the answer is Bar.  And you do this over and over and over (sometimes you have to label 50,000 examples; that's what my current project uses).&lt;/li&gt;
  &lt;li&gt;You give a program, generally called a training program, this labeled data and then it thinks on this for a while and creates what is called a &lt;strong&gt;model&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;model&lt;/strong&gt; is a trained neural network which understands how to process data like what you trained it with and give back results of the types that you taught it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot of terms that I could throw around - Python, Bert / Alberta / Roberta, TensorFlow, Convolutional Neural Network, Adversarial Neural Network and so on but the essence of machine learning are the bullet points above.&lt;/p&gt;

&lt;h2 id=&quot;labeling-and-machine-learning&quot;&gt;Labeling and Machine Learning&lt;/h2&gt;

&lt;p&gt;There are two general approaches to labeling data for machine learning, one classical and one new:&lt;/p&gt;

&lt;h3 id=&quot;classical&quot;&gt;Classical&lt;/h3&gt;

&lt;p&gt;With a classical approach, you generate a set of &quot;labeled&quot; data by humans manually labeling a large set of data with yes / no (or something else) options.  This is generally measured in the tens of thousands of chunks of labeled data.  This is generally expensive and time consuming.&lt;/p&gt;

&lt;h3 id=&quot;new&quot;&gt;New&lt;/h3&gt;

&lt;p&gt;A newer approach falls into the category of &lt;em&gt;Weak Supervision&lt;/em&gt; where you leverage a series of what are called labeling functions (lfs for short) along with a new technology called Snorkel.  This is termed &quot;weak supervision&quot; because the supervision of the process is just that – weak (less human training).&lt;/p&gt;

&lt;p&gt;A labeling function is often nothing more than a regular expression that returns true / false / abstain.  The idea of a labeling function is to leverage human expertise that can be easily codified into a rule set.  You then run these labeling functions against your dataset and build a matrix of the results.  That matrix, along with the data itself allows you to generate a machine learning model which has similar performance characteristics as the classical approach but with a fraction of the amount of training data – think 500 to 1000 labeled chunks of data instead of tens of thousands of chunks.&lt;/p&gt;

&lt;h2 id=&quot;leveraging-the-labeling-functions&quot;&gt;Leveraging the Labeling Functions&lt;/h2&gt;

&lt;p&gt;It is important to understand that the labeling functions aren't a part of the machine learning model – they simply generate the training data that create the machine learning model.  To draw in a metaphor, labeling functions are like the loom which &lt;em&gt;creates&lt;/em&gt; the blanket but is &lt;em&gt;not itself&lt;/em&gt; part of the blanket.  Because the labeling functions aren't actually part of the model, they don't actually run on the data that model processes.  So when you process a chunk of data through the machine learning model, it can tell you the result but it can't tell you why.&lt;/p&gt;

&lt;p&gt;But, and here's the &lt;em&gt;new thing&lt;/em&gt;, you could take the chunk of data you processed through the machine learning model and run it through the labeling functions at &lt;strong&gt;runtime&lt;/strong&gt; to get back a set of matches from the labeling functions.  These matches can make the output of the model explainable.  Labeling functions, even though they are thought solely to a part of the training process, can still be used at runtime.&lt;/p&gt;

&lt;h3 id=&quot;practical-implementation&quot;&gt;Practical Implementation&lt;/h3&gt;

&lt;p&gt;Here's how this might be implemented in a web based online system which processes data though a model that has users:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write a set of labeling functions.&lt;/li&gt;
  &lt;li&gt;Process the data set through the labeling functions and generate a model.&lt;/li&gt;
  &lt;li&gt;Deploy the model into a production environment.&lt;/li&gt;
  &lt;li&gt;Deploy the labeling functions into a production environment wrapped into an API that accepts the same data fed into the model.  This might be an http api or a thrift api or whatever; this depends on the system.&lt;/li&gt;
  &lt;li&gt;Process data through the model.&lt;/li&gt;
  &lt;li&gt;When the user requests &quot;Explain&quot; on the results of the model, pass the data through the labeling functions API and display the results of the labeling functions in a way that the user can understand them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;the-counter-speech-issue&quot;&gt;The Counter Speech Issue&lt;/h3&gt;

&lt;p&gt;My machine learning work is specifically in the arena of identifying / measuring hate speech on public social platforms.  When you work in the hate speech arena, a key consideration is &lt;em&gt;counter speech&lt;/em&gt;.  Counter speech is speech that attempts to address hate speech / fight hate speech.  Now the typical mechanism for counter speech is that it often quotes the hateful speech and then attempts to defuse it.  Counter speech when processed through a well defined machine learning model tends to &lt;strong&gt;not&lt;/strong&gt; be identified as hateful because the underlying model technology (Bert / Roberta / Albert) understands the linguistic nature of the speech and discount the specific nouns inside it.&lt;/p&gt;

&lt;p&gt;Now, given that counter speech tends to use the same words as hate speech, labeling functions that attempt to explain counter speech tend to explain it as hateful (where as the machine learning model tends to identify counter speech as non hateful).  The issue here is that regular expressions don't understand the linguistic subtleties that a machine learning model based on bert / roberta / albert does understand.  A possible way to address this is to enable the explain function to only operate for things are hateful not things that aren't hateful.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/a-look-into-snorkel-drybell-8e9e781dc250&quot;&gt;A Look Into Snorkel Drybell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1812.00417&quot;&gt;Arxiv Paper on Snorkel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zdnet.com/article/is-googles-snorkel-drybell-the-future-of-enterprise-data-management/&quot;&gt;ZdNet on Snorkel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.snorkel.org/&quot;&gt;Snorkel.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ai.googleblog.com/2019/03/harnessing-organizational-knowledge-for.html&quot;&gt;Google AI Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/sculpt/a-technique-for-building-nlp-classifiers-efficiently-with-transfer-learning-and-weak-supervision-a8e2f21ca9c8&quot;&gt;Sculpt on Building AI Classifiers Using NLP (Abraham)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://explosion.ai/demos/displacy&quot;&gt;Displacy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spacy.io/models&quot;&gt;Spacy Models&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2020/01/10/adding-explainability-to-machine-learning-routines-via-re-execution-of-labeling-functions.html</guid>
        
        <category>machine_learning</category>
        
        <category>python</category>
        
        <category>snorkel</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Creating an All New Rails App</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/2017-02-20_08.11.21.jpg&quot; alt=&quot;2017-02-20_08.11.21.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have been mentoring a person new to Rails for the past several weeks and it is always instructive to see where someone new to the platform has issues.  This blog post walks through the commands we used today and explains them.  If you're an old hat at this, just move on but if you're starting out, I suspect this may be quite helpful.&lt;/p&gt;

&lt;h2 id=&quot;navigate-to-the-right-starting-directory&quot;&gt;Navigate to the Right Starting Directory&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/rails/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;make-sure-rails-is-ok&quot;&gt;Make Sure Rails is Ok&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;set-the-ruby-version&quot;&gt;Set the Ruby Version&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rvm use 2.7.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;find-a-rails-new-command-from-my-history&quot;&gt;Find a Rails New Command from my History&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;history | grep 'rails new'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;create-a-new-rails-app&quot;&gt;Create a New Rails App&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new dev_home_page --database=mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;change-into-the-directory&quot;&gt;Change Into The Directory&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd dev_home_page
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-bundle-install&quot;&gt;Run Bundle Install&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-a-web-server&quot;&gt;Start a Web Server&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3096
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Open the web server in your browser with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3096/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;close-web-server-with-ctrlc-and-edit-configdatabaseyml&quot;&gt;Close Web Server with Ctrl+C and Edit config/database.yml&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mate config/database.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You need to set the user and password on your database server in the first configuration block within the database.yml file.&lt;/p&gt;

&lt;h2 id=&quot;create-the-database-itself&quot;&gt;Create the Database Itself&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:create
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-rake-dbmigrate&quot;&gt;Run rake db:migrate&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-two-more-terminal-panes&quot;&gt;Start Two More Terminal Panes&lt;/h2&gt;

&lt;p&gt;I run iTerm and I'm a firm believer in the &quot;The Trininty of Terminal Windows for Rails Development&quot; so I right click in my terminal window and select Split Pane Horizontally twice giving me 3 terminal windows in one.  I then go back to my first terminal window and get the current directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: The trinity of terminal windows is Web Server, Rails Console and a Command Line for git commits / whatever else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: The same result can be done with 3 tabs in standard OSX Terminal.  I just &lt;strong&gt;adore&lt;/strong&gt; iTerm; it has made my life better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: Start your Rails Console in the middle pane with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;get-the-current-directory-and-set-all-terminal-panes-to-this-directory&quot;&gt;Get the Current Directory and Set all Terminal Panes to this Directory&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pwd 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then in each other terminal pane, do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/sjohnson/Sync/coding/rails/dev_home_page
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is the directory that pwd displayed or you.&lt;/p&gt;

&lt;h2 id=&quot;install-yarn&quot;&gt;Install Yarn&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -o- -L https://yarnpkg.com/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Update your current terminal window's path with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add yarn to your application:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn install --check-files    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;re-run-the-web-server-from-the-top-terminal-pane&quot;&gt;Re-Run the Web Server from the Top Terminal Pane&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3096
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point the errors seen initially should be gone entirely.  Open the web server in your browser with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3096/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;create-a-model-and-edit-the-migration&quot;&gt;Create a Model and Edit the Migration&lt;/h2&gt;

&lt;p&gt;The next real test of being able to make a Rails app is to generate a model.  If this works then your entire Rails app should be setup correctly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g model Project
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 09 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/09/creating-an-all-new-rails-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/09/creating-an-all-new-rails-app.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Finding Your Rhythm as a Remote Worker</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7013.JPG&quot; alt=&quot;IMG_7013.JPG&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Denver Skyline from a Remote Worker's Office; Photo Credit - Kim Corbett; Thank You)&lt;/p&gt;

&lt;p&gt;I have been, with one 9 month exception, a fully remote worker since 1999 and a manager of remote workers since 1996.  Heading into 2020 that puts me at over 20 years of solid, day in and day out remote work so, I'll admit, that I &lt;strong&gt;know&lt;/strong&gt; a thing or two about remote work.  I've both been a remote worker, managed remote workers and I think all possible permutations.  This post attempts to summarize what works for &lt;strong&gt;me&lt;/strong&gt;.  What works for &lt;strong&gt;you&lt;/strong&gt; will almost certainly be different but I suspect the same meta principles will apply.&lt;/p&gt;

&lt;h1 id=&quot;routine-routine-routine&quot;&gt;Routine, Routine, Routine&lt;/h1&gt;

&lt;p&gt;Day in and day out my days look remarkably similar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;roll out of bed sometime between 3 am and 6 am&lt;/li&gt;
  &lt;li&gt;shower, shave, dress, etc.  Even tho the only people that ever see me are my wife, kids and cats (yes they are peole to me) I still dress like I was going into an office every day.&lt;/li&gt;
  &lt;li&gt;hit &lt;a href=&quot;http://www.meh.com/&quot;&gt;meh&lt;/a&gt; while it hasn't sold out and see if there is something cheap I can treat myself to&lt;/li&gt;
  &lt;li&gt;hit the hardest code immediately and get my momentum going&lt;/li&gt;
  &lt;li&gt;take advantage of the &lt;a href=&quot;https://fuzzyblog.io/blog/startup/2016/10/29/startup-learnings-i-do-all-my-coding-before-anyone-gets-to-work-or-what-ed-fisher-taught-me.html&quot;&gt;early morning, blessed quiet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;continue until the end of the day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know that some remote workers are constantly changing location and fully embrace the digital nomad lifestyle (&lt;a href=&quot;http://wanderling.co/how-i-work-from-anywhere-in-the-world&quot;&gt;example&lt;/a&gt;).  And that is brilliant that they are able to do so but for myself I really appreciate consistency.  And I adore having a solid, fast connection like fiber – you don't get that when you move regularly.&lt;/p&gt;

&lt;h1 id=&quot;it-is-still-work&quot;&gt;It Is Still Work&lt;/h1&gt;

&lt;p&gt;The single biggest mistake that everyone, and that has included me in the past, makes with remote work is not treating it as work.  Because you are the one at home it is all too easy for your spouse (or yourself) to assume &quot;oh they can also do a load of laundry&quot; or some other house hold task.  &lt;strong&gt;No&lt;/strong&gt;.  &lt;strong&gt;You&lt;/strong&gt;.  &lt;strong&gt;Can't&lt;/strong&gt;.  Work is work and home is home.  I find that my greatest productivity comes when my door is shut and I can concentrate.  Now your results might vary&lt;/p&gt;

&lt;h1 id=&quot;you-dont-have-colleagues-so-figure-out-how-to-do-everything-alone&quot;&gt;You Don't Have Colleagues So Figure Out How to Do Everything Alone&lt;/h1&gt;

&lt;p&gt;When you are a remote worker you do have colleagues but, often, when you are the odd man out in the remote wilderness you may find that, ahem, they aren't always helpful.  Being able and willing to figure things out on your own is a key skill.&lt;/p&gt;

&lt;h1 id=&quot;gear---you-never-know&quot;&gt;Gear - You Never Know&lt;/h1&gt;

&lt;p&gt;I almost never throw any computer gear out.  As a remote engineer there is no one to turn to in the next cubicle and say something like &quot;I need a USB to firewire adapter to get some data off this old drive that might help me with my current code&quot;.  Can I go to the computer store for that?  Sure.  I even have a Fry's 20 minutes away but that 20 minute drive easily turns into:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;20 minutes there&lt;/li&gt;
  &lt;li&gt;20 minutes back&lt;/li&gt;
  &lt;li&gt;20 minutes shopping&lt;/li&gt;
  &lt;li&gt;an hour plus getting my head back where it was before I left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I stay in my cozy home environment, even if I'm rooting thru a cable bin for something I can keep my current context solid in my head.  But if I have to get into a car and engage the outside world then it is a given that I have lost it and it will usually take a solid hour to get my brain back to where it needs to be (if the problem is complex).&lt;/p&gt;

&lt;p&gt;If you don't keep a gear box where you toss old hard drives, cables, an odd network hub, etc then I strongly encourage you to do so.  Odds are that this pack rat tendency will drive your spouse mad but the productivity benefits are real.&lt;/p&gt;

&lt;h1 id=&quot;engineer-invest-in-thyself&quot;&gt;Engineer Invest In Thyself&lt;/h1&gt;

&lt;p&gt;I don't think I'm wrong in saying that engineers are notoriously cheap.  We all look at technology and think to ourselves &quot;I could build that&quot; – even when it is normally untrue.  One of the very best decisions you can make is to invest in yourself.  There are three great purchases that I've made over the years that really, truly improved my productivity:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/startup/2016/10/21/startup-learnings-what-francois-schiettecatte-taught-me.html&quot;&gt;an Aeron chair&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bose Quiet Comfort Headphones&lt;/li&gt;
  &lt;li&gt;Building My Own Computer Desk&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll sit in the same chair for sometimes 14 to 16 hours per day.  I don't ever have back pain and I never even notice my chair – an Aeron is just that good.  Similarly there are times when I've pair programmed for 10 hours straight and my ears don't hurt.  I can wear Quiet Comfort headphones all damn day.  When I got them they were $350 which I thought at the time was absurd but all other pairs of headphones just didn't cut it.  And if you buy two or three pairs of $60 headphones then you're almost half way there anyway.&lt;/p&gt;

&lt;p&gt;I haven't spoken about my adventures earlier this year in building exactly the computer desk I've always wanted but I will someday.  A bad day in the office about a month ago sent me racing to the lumber yard and two days later I had ripped out the absolutely shite working surface I had and replaced it with this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/desk1.jpg&quot; alt=&quot;desk1&quot; /&gt; 
(simple, flat, 8 foot span)
&lt;img src=&quot;/blog/assets/desk2.jpg&quot; alt=&quot;desk2&quot; /&gt;
(most of the computers in place; there are more now)
&lt;img src=&quot;/blog/assets/desk3.jpg&quot; alt=&quot;desk3&quot; /&gt; 
(Nice cut outs for cable transfer)
&lt;img src=&quot;/blog/assets/desk4.jpg&quot; alt=&quot;desk4&quot; /&gt; 
(why you make your own desk - the desire to NOT have a visual rats nest of all the cabling that modern computing &lt;strong&gt;requires&lt;/strong&gt;; there are 6 power strips under my desk and all are full; I'm about to add a seventh)&lt;/p&gt;

&lt;p&gt;All total I spent less than 8 hours in rough carpentry from start to finish on this and I highly recommend it if you are a hands on person.  I've wanted to do this for more than a decade now and I'm tremendously happy that I did.&lt;/p&gt;

&lt;p&gt;The only sad thing about making my own desk is that my wife recently got me &lt;a href=&quot;https://www.amazon.com/Good-Clean-Fun-Misadventures-Offerman/dp/1101984651/ref=sr_1_1?ie=UTF8&amp;amp;qid=1480930872&amp;amp;sr=8-1&amp;amp;keywords=nick+offerman&quot;&gt;Nick Offerman's Good Clean Fun&lt;/a&gt; book and now I really want to make another one this time as a trestle table.  Sigh.  If you are a woodworker and you haven't read Offerman yet then I highly recommend it.  You would never believe that an actor could teach you wood working but he does a credible job and spins a wonderful tale in the doing.&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2020/01/08/finding-your-rhythm-as-a-remote-worker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2020/01/08/finding-your-rhythm-as-a-remote-worker.html</guid>
        
        <category>remote</category>
        
        <category>work_from_home</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>An Open Letter to Bob Frankston</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1312.jpg&quot; alt=&quot;IMG_1312.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;Hi &lt;a href=&quot;https://en.wikipedia.org/wiki/Bob_Frankston&quot;&gt;Bob&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I strongly doubt you remember but I met you years ago as part of the Boston Blogging group that &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt; used to organize.  About the same time I also met &lt;a href=&quot;https://en.wikipedia.org/wiki/Dan_Bricklin&quot;&gt;Dan Bricklin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to make a suggestion to you.  I've been subscribed to you in my aggregator for a long time but due to the design of aggregators, it isn't clear if a post in the aggregator is full content or summary.  Here's all I saw of your current (wonderful) &lt;a href=&quot;http://rmf.vc/IEEECE202001&quot;&gt;CES post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CES is a time to see new products and services. Alas, my expectations might be too high.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here is how this appears in an aggregator:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/frankston_aggregator.png&quot; alt=&quot;frankston_aggregator.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I thought this was just a lament but I happened to click through and lo and below, a &lt;strong&gt;wonderful&lt;/strong&gt; bit of writing.&lt;/p&gt;

&lt;p&gt;So my suggestion to you is to change your blogging tool to output the &lt;em&gt;full content&lt;/em&gt; of each post you write.  I'm pretty certain you wrote your own blogging tool and, thus, I know this is possible; you obviously have the skills (and if that isn't the greatest understatement I've made blogging, I don't know what is).&lt;/p&gt;

&lt;p&gt;My suspicion is that for &lt;strong&gt;yourself&lt;/strong&gt; it is more important that you get your ideas out into the universe than that you drive people to &lt;strong&gt;your&lt;/strong&gt; site.  This is the single best reason for a full content feed.  Every time you have to rely on someone clicking thru from their aggregator to your site, there is a solid chance (1 in 2; 1 in 3; 1 in 5; 1 in 10 ???) that they just won't).  Often times they don't ever know that there is more content out there; I certainly didn't and I've been in the RSS world now for almost 20 years and I have pretty solid credentials in the RSS world – I was the creator of the Feedster RSS and Blog search engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My own &lt;a href=&quot;https://fuzzyblog.io/blog/&quot;&gt;blog&lt;/a&gt; and my &lt;a href=&quot;https://fuzzyblog.io/recipes/&quot;&gt;recipes&lt;/a&gt; are all done with full content feeds so I'm not askign you to do anything that I'm not doing.  Also full content feeds aren't really any harder than a summary feed - just put out the full content.  Feel free to use &lt;a href=&quot;https://fuzzyblog.io/blog/feed.xml&quot;&gt;my feed&lt;/a&gt; as an example.  Even better – use &lt;a href=&quot;http://scripting.com/rss.xml&quot;&gt;Dave's&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Btw I loved this point: &quot;I mount the devices as soft infrastructure using 3M Command Strips which means I can take it off the wall and use it as a flashlight.&quot;.  Damn brilliant and I've started doing this with devices.  Thank you.&lt;/p&gt;

&lt;p&gt;And thank you for all the wonderful work you've done over the years. I started with VisiCalc way, way back in the 80s.&lt;/p&gt;

&lt;p&gt;Scott&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rss/2020/01/07/an-open-letter-to-bob-frankston.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rss/2020/01/07/an-open-letter-to-bob-frankston.html</guid>
        
        <category>rss</category>
        
        <category>blogging</category>
        
        
        <category>rss</category>
        
      </item>
    
      <item>
        <title>Python Tips - Playing with Pandas</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6444.jpeg&quot; alt=&quot;IMG_6444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I write this it is 3:45 am and I am playing with Python.  I have a small script that looks like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DATA_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;data/&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;file.json&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATA_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataset_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;dataset_head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_sample_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The pandas library give you a bunch of facilities for looking at data and organizing it into what are called data frames.  If you think of pandas as a spreadsheet that you can use programmatically, well, that's not far off.  Pandas is widely used for Python data processing and can read data from CSV and JSON formats (among others).&lt;/p&gt;

&lt;p&gt;If I want to investigate the length of a variable, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) len(dataset)
45648
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if I want to know the type of a variable, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type(dataset)
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if I want to know the columns that Pandas as loaded from the json, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; dataset.columns
Index(['tweet_id', 'timestamp_us_eastern', 'author_handle',
       'author_screenname', 'authority', 'predicted_gender',
       'predicted_language', 'predicted_country',
       'predicted_state_or_province', 'predicted_city', 'given_location',
       'followers', 'following', 'predicted_sentiment', 'context_notes',
       'antisemitic_classification', 'author_bio', 'text', 'is_truncated',
       'is_retweet', 'lang', 'Majority Model', 'label'],
      dtype='object')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this tells me is that I have a dataset variable with a text column that I can access by dataset.text.  And then if I want the first 'row' of data in this column, I can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) dataset.text[0]
&quot;Jerry Seinfeld spent a lot of time in Israel's apartheid State supporting the Zionists and giving the bastards credibility. Think its fair to shun his crappy unfunny TV Shows. Let him know what people think of him brown nosing the terrorists of Israel.\n&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So [0] gives the first bit of data.  And, correspondingly, [1] gives the next bit:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Pdb) dataset.text[1]
'RT @papicek: @BrncicIvo @fouadhaidar @MehDonaldTrump @AlyseRadenovicA @Sean_x_Larkin @Wandaspangler2 @z123Alpha @Mark_E_Noonan @pouria_63 @KirstyMartin19 @rico_hands @pickle_shmickle @_antizionism @MrBacteriaThief @AltRightJoseph @muld_ulme @kenmckelvey224 @kratze1935 @ExpertZionist @WorldneedsL0VE @amerikagulag @Loo_Siffa @Aristilus @gazaboatconvoy Zionists came up with jut about every form of terrorism you can think of: https://t.co/qvmuMpVWHQ https://t.co/EUg4EviJAe\n'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now that we know this, if we wanted to loop over all the bits of data in dataset.text, a simple Python for loop would do this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's say that you have a variable wordfreq and you want to look at the string version of a variable, you can do this with the &lt;strong&gt;str&lt;/strong&gt; function:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; str(wordfreq)
'[12, 1, 1, 1, 1, 10, 1, 1, 1, 10, 1, 3, 1, 2, 1, 1, 3, 1, 12, 1]'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 06 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/01/06/python-tips-playing-with-pandas.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/01/06/python-tips-playing-with-pandas.html</guid>
        
        <category>python</category>
        
        <category>pandas</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Pundit and Group By Operations - DOH</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6430.jpeg&quot; alt=&quot;IMG_6430.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of working out security for a new side project (yes, yes, yes - I know; I have too many of these but they are such a good teaching tool for one's self) and I wanted to use &lt;a href=&quot;https://github.com/varvet/pundit&quot;&gt;pundit&lt;/a&gt;.  Pundit, for those who haven't played with it, is a Ruby gem which makes authorization at the controller level easier.&lt;/p&gt;

&lt;h2 id=&quot;authorization-authentication-oh-my&quot;&gt;Authorization, Authentication, Oh My&lt;/h2&gt;

&lt;p&gt;Just to review the very basics of computer security, there are two key concepts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication is who you are to a system&lt;/li&gt;
  &lt;li&gt;Authorization is what you can do to an object within that system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the Rails world of MVC (model, view, controller) architecture, security happens at the controller because that is where the request from the user comes in.&lt;/p&gt;

&lt;p&gt;The way that pundit works is you add a top level directory under app called policies and then there is a generic application_policy.rb as well as a classname_policy.rb file for each ActiveRecord class (change classname to the name of an actual class) in your application.  And, inside each classname_policy.rb file you define permission rules for each controller action.  In short Pundit is a well thought out, fairly seamless way to integrate security in your Rails application.  I like Pundit for more than I ever liked &lt;a href=&quot;https://github.com/ryanb/cancan&quot;&gt;CanCan&lt;/a&gt;, another tool for this same type of problem.&lt;/p&gt;

&lt;h2 id=&quot;my-application&quot;&gt;My Application&lt;/h2&gt;

&lt;p&gt;Here is the rough security rules that I wanted to follow (comments from the Pundit policy model):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-created-it&quot;&gt;yes you can view the object if YOU created it&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-belong-to-the-organizationgroup&quot;&gt;yes you can view the object if you belong to the organization_group&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;yes-you-can-view-the-object-if-you-belong-to-the-organization-and-you-are-a-boss&quot;&gt;yes you can view the object if you belong to the organization and you are a boss&lt;/h1&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So when I started down this path, I immediately started getting a Pundit error that I've never seen before and that I didn't understand:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pundit::NotDefinedError: unable to find policy `HashPolicy` for `{}`    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this error sent me through the normal spiral of google results only to find relatively few results.  This &lt;a href=&quot;https://github.com/ankane/groupdate/issues/94&quot;&gt;one&lt;/a&gt;, which I didn't read well, however, was prescient.  And I continued down the path of debugging this at a lower and lower level until I found myself dropping byebug into Pundit itself in this method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;policy&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;safe_constantize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And what I found was that the &quot;object&quot; that Pundit had was just {} which made no sense to me.  And then I looked at my controller and saw what I was doing:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'quarter_id ASC, name ASC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quarter_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What I discovered, as I continued to debug this is that I had a failure in my test setup and that, with the .group_by method which converts an ActiveRecord collection into a hash which points to an ActiveRecord collection meant that all Pundit was getting was nothing more than {} which, naturally, led to the failure above.&lt;/p&gt;

&lt;p&gt;The solution was to initially fix my test setup (damn RSpec let statements; how they hell do they actually work; sigh) and then change my controller action to be this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'quarter_id ASC, name ASC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;authorize&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@objectives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quarter_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that, naturally, is almost identical to what Ankane had (the prescient github post I cited earlier; big damn sigh).&lt;/p&gt;

&lt;p&gt;Note to Self: Pay more attention to Ankane; something I already know.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/05/pundit-and-group-by-operations-doh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/05/pundit-and-group-by-operations-doh.html</guid>
        
        <category>rails</category>
        
        <category>pundit</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Startup Coach 01 The Opportunity Profile</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6593.jpeg&quot; alt=&quot;IMG_6593.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is the first blog post in what I hope becomes a series that I'm calling &quot;Startup Coach&quot;.  I have a friend who wants their own business and I offered to write a blog post a week along the veins of how to do a startup.  Each week I plan to take a single topic and discuss it .  If you'd like to suggest a topic then my email address is fuzzygroup at gmail and I'd be happy to slot something into the queue.&lt;/p&gt;

&lt;p&gt;Today's topic is what I refer to as the Opportunity Profile.  This is a single document that I write at the very beginning of anything that even smells of being entrepreneurial.  The idea behind the opportunity profile is to document the opportunity – in as much detail as you can at the moment of the initial idea.  Everyone's opportunity project is always going to be a little bit different depending on how you conceptualize an opportunity.  My personal opportunity profiles tend to be heavy on product focus and less focused on business side issues simply because that's how I roll.  If you, for example, were strong on the business side then your opportunity profile might sketch out the entire business model and then have a place holder called &quot;Product Goes Here&quot;.&lt;/p&gt;

&lt;p&gt;Here are the topics that I usually put in an opportunity profile:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Overview&lt;/li&gt;
  &lt;li&gt;Tag Lines&lt;/li&gt;
  &lt;li&gt;Business Model&lt;/li&gt;
  &lt;li&gt;Product Overview&lt;/li&gt;
  &lt;li&gt;Competition&lt;/li&gt;
  &lt;li&gt;Development Approach (how I would tackle development)&lt;/li&gt;
  &lt;li&gt;Marketing&lt;/li&gt;
  &lt;li&gt;Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This document might be nothing more than a set of bullet points.  It might be fleshed out.  The important thing is to capture that initial &lt;strong&gt;ideation moment&lt;/strong&gt; when the problem you're trying to solve is crystal clear and you have that rush of &lt;em&gt;intellectual adrenaline&lt;/em&gt;.  And I would note the last sentence doesn't resonate for you, perhaps, you're not cut out for founding a startup.  And, yes, that's harsh and I apologize but I'm a pretty big believer that you are either a startup person or you aren't.&lt;/p&gt;

&lt;p&gt;The way that I recommend writing these, in 2019, is as a Google Doc.  The reason for this is that one of the very best actions you can take with an opportunity profile is to share the link to it to your friends and family and get other people's opinion.  And that brings us to the next topic.&lt;/p&gt;

&lt;h2 id=&quot;but-my-idea-is-unique&quot;&gt;But My Idea is Unique&lt;/h2&gt;

&lt;p&gt;I know that sharing ideas is often hard for entrepreneurs but here's the brutal truth about startup ideas at this stage: &lt;strong&gt;They Really Aren't Worth Anything at All&lt;/strong&gt;.  Now, I get it, that's hard for people to hear – everyone wants to think their idea is brilliant and special but, honestly, it likely isn't.  Most ideas are already out there in one form or another and what actually matters is &lt;strong&gt;idea execution&lt;/strong&gt;.  We all want to believe that the first person in a market succeeds but that's actually rarely, if ever, the case.  And let me back that up with two examples of late market entrants that executed better and succeeded:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Yahoo was not the first web search engine; Web Crawler was and yet Yahoo executed better and succeeded for a lot of years until&lt;/li&gt;
  &lt;li&gt;Google came in an executed better (by recognizing that search was important and making a better mouse trap)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;but-there-are-great-ideas-&quot;&gt;But There Are Great Ideas …&lt;/h2&gt;

&lt;p&gt;I will admit that, on very, very rare occasions, there are great ideas that are simply stunning in their brilliance and the &lt;strong&gt;one&lt;/strong&gt; example that I can point to is HotMail (the generic idea of web based email).  HotMail was uniquely brilliant and a fantastic idea.  If I had had that idea, yeah, I likely would have been pretty careful about it.  But, and this is important, web based email &lt;strong&gt;NOW&lt;/strong&gt; makes a metric ton of sense – would it back in 1995 when the definition of a web browser was so much more limited?  I think that this is an important point to consider.&lt;/p&gt;

&lt;h2 id=&quot;so-you-wrote-a-google-doc---what-now&quot;&gt;So You Wrote a Google Doc - What Now?&lt;/h2&gt;

&lt;p&gt;My best advice to you is turn on Sharing in your google doc and then email it out to whatever your close circle of friends and family and say to them &quot;I had this idea; can you poke holes in it for me?&quot;.  I did this recently with an idea I had (the Cat example below) and I got feedback in like 24 hours that deflated the concept entirely (and it was a bad idea for me to pursue; I lacked the right attributes for the opportunity but that's the topic of next week's post).&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Here are two opportunity profiles that were near the top of my Google Drive:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PhwX4M6G6qFgwC8BLJGjoJy9AT52m9qVlwkI6PFQJOs/edit?usp=sharing&quot;&gt;Cat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/12LP2X2WiviMmz7kqB5qgJpRtuqD5NnrurmhOMJ3AHzc/edit?usp=sharing&quot;&gt;Other&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/04/startup-coach-01-the-opportunity-profile.html</guid>
        
        <category>startup</category>
        
        <category>startup_coach</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>When Jupyter Notebooks Won't Import Libraries</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9429.jpeg&quot; alt=&quot;IMG_9429.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don't claim to be an expert when it comes to Python.  At best I'm an apprentice striving to be a journey man.  One of the interesting tools in the Python / Data Science ecosystem is the Jupyter Notebook which gives a cell based representation of code, visualizations, documentation and execution flow and allows you to package things up for distribution i.e. hand your work, in a complete fashion, from say Data Scientist 1 (&quot;Rebekah&quot;) to Data Scientist 2 (&quot;Dawn&quot;).  This is a laudable goal and one that I theoretically agree with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Jupyter Notebooks do NOT include data so that's still external to the notebook, something that can easily bite you (as it is currently biting me).&lt;/p&gt;

&lt;p&gt;I know a lot of pythonistas simply install libraries to their local machine and just have a collection of tools that the throw at problems.  This, however, is a terrible practice due to code deprecation, version conflicts, etc.  I say this with authority because I've been through this in the Ruby world before we all regularly started using Ruby virtual environments / Ruby version managers like RBENV / RVM which manage dependencies on a per project basis.  Knowing this, my first practice with Python, is to always create a virtual environment, generally using Virtual ENV (VENV).&lt;/p&gt;

&lt;p&gt;So, when I set out today to use a Jupyter Notebook, my first approach was to make this work with a Jupyter Notebook.  And, alas, I haven't been so lucky as to make this work cleanly with a Python virtual environment like VENV.  Here are some of the things I tried:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Installing jupyter into the virtual env and running from bin/jupyter notebook&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://anbasile.github.io/programming/2017/06/25/jupyter-venv/&quot;&gt;Following Angelo Basille's Directions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://janakiev.com/blog/jupyter-virtual-envs/&quot;&gt;Following Janakiev's Directions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44586234/how-to-change-kernel-when-jupyter-notebook-shows-only-one-python?rq=1&quot;&gt;Changing the Kernel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're curious about how to use Python Virtual Environments, I wrote a &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html&quot;&gt;solid tutorial back in September&lt;/a&gt; that I used to get a full installation of Tensor Flow up and running.  I've referred back to this over and over, each time I needed a Python Virtual Environment, so I know it works.&lt;/p&gt;

&lt;p&gt;I'm sure there is a way to mess about with virtual environments and Jupyter Notebooks to make them work but, honestly, I'm skeptical on notebooks and how they obfuscate code and data together anyway so I thought &quot;How do I just make this a Python script&quot;.  I took this approach because I was absolutely certain that I could make a virtual environment work with just Python.  And, thanks to my pairing partner, Grant, there is, indeed, a way.&lt;/p&gt;

&lt;h2 id=&quot;making-a-jupyter-notebook-into-a-python-script-with-a-virtual-env&quot;&gt;Making a Jupyter Notebook into a Python Script with a Virtual Env&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Follow the instructions &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html&quot;&gt;here&lt;/a&gt; to setup VENV for a new project in a new directory.&lt;/li&gt;
  &lt;li&gt;Use File menu, Export as Python to write a single Python script representing the notebook.&lt;/li&gt;
  &lt;li&gt;Create a requirements.txt file as per the instructions &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go through the Python code that was exported and convert the import / from instructions to the right &lt;a href=&quot;http://packages.pypy.org/&quot;&gt;PyPy package index&lt;/a&gt; name entry in the requirements.txt file.  Be aware that there isn't a straight correspondence between the import statements and the package names.  For example you import from &quot;metal&quot; in the notebook I'm porting but the package name is actually &quot;snorkel-metal&quot; and you import from sklearn but the package name is actually scikit-learn.  Python's there's only one way to do this mantra, in the area of package management, is just plain crap.  Sigh.&lt;/li&gt;
  &lt;li&gt;Run pip3 install -r requirements.txt&lt;/li&gt;
  &lt;li&gt;Run your python script and then adjust the requirements.txt file accordingly.  You will almost certainly need to change some things but, by and large, I'm finding that this process does work.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2020/01/03/when-jupyter-notebooks-won-t-import-libraries.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2020/01/03/when-jupyter-notebooks-won-t-import-libraries.html</guid>
        
        <category>python</category>
        
        <category>jupyter</category>
        
        <category>data_science</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Ruby Testing Technique - The Power and Stupidity of def foo</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0736.jpeg&quot; alt=&quot;IMG_0736.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had an abysmal day yesterday coding on my side project.  Ok – coding on one of my side projects.  I had one of those days where you try to do something simple and NOTHING, NOT ONE DAMN THING, WORKS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Every software engineer knows this type of day.  They aren't days that you talk about with anyone in your life because you spend hours failing at something that you know is so damn simple that, if you can't make it work, you should honestly give up software engineering and go cut grass for a living.  I refer to these days, when I have them, as spirit crushers / brain emasculators. And when they occur, I find that a nap (or a snickers bar) is the best medicine.&lt;/p&gt;

&lt;p&gt;All I was trying to do was make a simple factory work.  For those who aren't deeply immersed in the world of software testing in ruby, a factory is a software method which creates a sample object that represents the actual object so it can be tested.  Factories are used in place of actual objects, generally, because they run faster.&lt;/p&gt;

&lt;p&gt;Here was the definition of the factory:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objective&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Faker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organization&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objective_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;okr_team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quarter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All this means is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an object named objective&lt;/li&gt;
  &lt;li&gt;Give it a name attribute that is pulled from a library called Faker using the first_name method&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the user object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the organization object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the objective_type object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the okr_team object&lt;/li&gt;
  &lt;li&gt;Give it a relationship back to the quarter object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although this might seem complex, it is actually drop dead simple and something that I've probably done hundreds if not thousands of times.  And yet, yesterday, all I could get was some variant on this &lt;em&gt;censored&lt;/em&gt; backtrace:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ActiveRecord::RecordInvalid:
  Validation failed: Organization must exist, User can't be blank, Organization can't be blank
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:91:in `persist'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:25:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:82:in `block in fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `instance_eval'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabricate.rb:33:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication.rb:65:in `Fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:120:in `block in generate_value'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:41:in `instance_exec'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:41:in `execute'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/attribute.rb:29:in `processed_value'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:97:in `block in process_attributes'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:96:in `each'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:96:in `process_attributes'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:6:in `build'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/generator/base.rb:20:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:82:in `block in fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `instance_eval'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication/schematic/definition.rb:81:in `fabricate'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabricate.rb:33:in `create'
# /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/fabrication-2.21.0/lib/fabrication.rb:65:in `Fabricate'
# ./spec/controllers/objectives_controller_spec.rb:20:in `block (4 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I blew I don't know how much time on this in the early morning hours.  This is one of the problems with solo side projects – you don't have anyone you can ask when you hit a blocker like this.  Finally, around 6 am, I threw my hands up, muttered a few choice words and then went back to bed.&lt;/p&gt;

&lt;p&gt;And now, 24 hours later, I find myself having solved this and it is through, what I will always remember as &quot;The Power of Foo&quot;.  Here is what I did:&lt;/p&gt;

&lt;h2 id=&quot;step-1-implement-class-and-instance-methods-called-foo-on-user&quot;&gt;Step 1: Implement class and instance methods called foo on User&lt;/h2&gt;

&lt;p&gt;Like a lot of classes in a Rails project that exist to simply support the database, I didn't actually have any methods in my User class.  Now, I would assume that this means that my class was was fine – but what if it wasn't?  So I thought to myself – what if the problem is something that I'm just not seeing?  And so I started to add a &lt;strong&gt;stupid&lt;/strong&gt; method called foo to my user class both at the class level and the instance level:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gave me something that I could test:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.foo'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'should return FOO'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You will notice that my output between the two methods is different - 'bar' versus 'BAR' which I did deliberately to ensure that I'm not inadvertently calling a class method versus an instance method or vice versa.  And, happily, this worked perfectly.  Now, let's bring back our Factory definition for user:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objective&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Faker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organization&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objective_type&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;okr_team&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quarter&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My next step was to implement this same approach on organization.  And then on objective_type.  And then on okr_team – and that's where I hit a problem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rspec spec/models/okr_team_spec.rb

Randomized with seed 33038

OkrTeam
  .foo
    should return FOO
  #foo
    should return foo (FAILED - 1)

Failures:

  1) OkrTeam#foo should return foo
     Failure/Error: subject = FactoryBot.create(:okr_team)

     NoMethodError:
       undefined method `user=' for #&amp;lt;OkrTeam:0x00007ff431cfca88&amp;gt;
       Did you mean?  user_id=
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:16:in `public_send'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:16:in `block (2 levels) in object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:15:in `each'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:15:in `block in object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:14:in `tap'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/attribute_assigner.rb:14:in `object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/evaluation.rb:13:in `object'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/strategy/create.rb:9:in `result'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory.rb:43:in `run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory_runner.rb:29:in `block in run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/factory_runner.rb:28:in `run'
     # /Users/sjohnson/.rvm/gems/ruby-2.6.5/gems/factory_bot-5.1.1/lib/factory_bot/strategy_syntax_method_registrar.rb:20:in `block in define_singular_strategy_method'
     # ./spec/models/okr_team_spec.rb:25:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

Top 2 slowest examples (0.4025 seconds, 98.4% of total time):
  OkrTeam#foo should return foo
    0.3979 seconds ./spec/models/okr_team_spec.rb:24
  OkrTeam.foo should return FOO
    0.0046 seconds ./spec/models/okr_team_spec.rb:31

Finished in 0.40894 seconds (files took 3.55 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/models/okr_team_spec.rb:24 # OkrTeam#foo should return foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In my okr_team model, I discovered that I was missing a &lt;strong&gt;belongs_to&lt;/strong&gt; relationship, specifically a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;belongs_to :user
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that, dear reader, was sufficient to bring my whole house of software cards crashing to a pile.  I was actually fairly surprised by this; it was a dependency failure that I hadn't seen before.  My missing relationship was a consequence of my very productive &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html&quot;&gt;Example Data&lt;/a&gt; approach to building this side project.&lt;/p&gt;

&lt;h2 id=&quot;the-moral-of-the-story&quot;&gt;The Moral of the Story&lt;/h2&gt;

&lt;p&gt;I think that from now on I'm always going to implement a useless method called def foo and def self.foo to prove that a class works – even if it has &quot;no code&quot; – as even &lt;strong&gt;no code&lt;/strong&gt; can, curiously, have bugs.  So the real moral of the story is &lt;strong&gt;TEST EVERYTHING&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rspec/2020/01/03/ruby-testing-technique-the-power-and-stupidity-of-def-foo.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>testing</category>
        
        <category>rspec</category>
        
        
        <category>rspec</category>
        
      </item>
    
      <item>
        <title>In Celebration of Event Organizers - Happy Birthday Kevin Werbach</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9458.jpeg&quot; alt=&quot;IMG_9458.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Taken November 20, 2019 which is significant only because that is my birthday&lt;/p&gt;

&lt;p&gt;I'm writing this blog post because my Facebook feed just flashed by at me &quot;Today is &lt;strong&gt;Kevin Werbach's&lt;/strong&gt; Birthday&quot; and that made me &lt;em&gt;remember&lt;/em&gt;.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Kevin_Werbach&quot;&gt;Kevin Werbach&lt;/a&gt; is a technology analyst and professor at the Wharton School and someone who is far more important to my life than I ever was to him.  This blog post is a tribute to him because he, through a random act of kindness, had a pretty big impact on my life (and I bet he has never realized this; nor should he).&lt;/p&gt;

&lt;p&gt;Back in 2003, I had created the RSS search engine Feedster and had just merged it with RSS-Search which was created by Francois Schiettecatte and he and I, as two nerds do, were trying to figure out &quot;what the hell do we do with this; we have a product and traffic but no business strategy and an ever increasing hosting bill on Scott's credit card that we keep rolling forward each month&quot;.  I saw that Kevin had setup the SuperNova conference and I reached out to him and said &quot;I'd love to come but I just can't afford it; help&quot; and Kevin, with absolute graciousness, gave me a free ticket.&lt;/p&gt;

&lt;p&gt;I made it down to the DC area for the conference, networked unsuccessfully for a day or two and ended up getting a cab to the airport with Scott Rafer, henceforth referred to as Rafer since I am also a Scott.  A chance thunderstorm stranded Rafer and I at the airport for like 7 hours and during that time I got to know him well enough to ask him to be on our advisory board.  And, shortly there after, I hired Rafer as Feedster's first CEO.  And that hiring led to a whole chain of events detailed below.&lt;/p&gt;

&lt;p&gt;So here's the chain of events that Kevin started which, interestingly, lead right up to today:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Kevin gave me a ticket to SuperNova when I couldn't afford one.&lt;/li&gt;
  &lt;li&gt;A random meeting led to a colleague and then a CEO.&lt;/li&gt;
  &lt;li&gt;Rafer led Feedster's legal formation, office space, hiring and funding efforts.  He made a pile of code into a business.&lt;/li&gt;
  &lt;li&gt;We ended up employing a (small) bunch of people and being in business for 3 years.&lt;/li&gt;
  &lt;li&gt;Because of Rafer, I ended up having a much larger presence in Silicon Valley than I should have given that I lived in Boston.&lt;/li&gt;
  &lt;li&gt;Thanks to my Silicon Valley connections, I got to know a large number of interesting people including Dave Sifry (who at that time was the founder of my biggest competitor, Technorati).&lt;/li&gt;
  &lt;li&gt;My work at Feedster led to my getting hired at eduFire which took me into the world of Ruby and Rails and cloud computing.&lt;/li&gt;
  &lt;li&gt;I'm still working off a lot of connections I made back in 2003 to 2006.  This includes my current role leading measurement of hate speech for the ADL where I was hired by Dave Sifry (this is now the third time I've taken a role reporting to Dave Sifry).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'd like to pretend that Feedster would have been successful if I hadn't met Rafer but we very much needed capital and meeting Rafer was a strategic inflection point for me.  And that wouldn't have happened without Kevin so &lt;strong&gt;Happy Birthday Kevin&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;And so, in closing, if you are an event organizer, taking a chance on the proverbial little guy sometimes has profound implications for them.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2020/01/03/in-celebration-of-event-organizers-happy-birthday-kevin-werbach.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2020/01/03/in-celebration-of-event-organizers-happy-birthday-kevin-werbach.html</guid>
        
        <category>startup</category>
        
        <category>events</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Jumpstart Rails Tutorial 01 - Bringing an Existing Codebase In</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0902.jpeg&quot; alt=&quot;IMG_0902.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is the second day of the New Year – welcome to 2020 – and I have still failed to launch my side project that I started midway through 2019.  Sigh.  I find myself fundamentally regretting this but, well, life:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Job&lt;/li&gt;
  &lt;li&gt;Wife in Hospital&lt;/li&gt;
  &lt;li&gt;Son and Schooling Issues&lt;/li&gt;
  &lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my New Year's Resolution(s) is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch by end of Q1, 2020&lt;/li&gt;
  &lt;li&gt;Not have deployment eat my brain&lt;/li&gt;
  &lt;li&gt;Launch with Something that I'm Visually Proud Of&lt;/li&gt;
  &lt;li&gt;Launch with SAAS billing features from day 1 and Get paying Customers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That last item, SAAS billing features, is a sticky point.  I've actually implemented this myself before – I wrote all the back end code for the AppData SAAS engine which successfully processed over 3.1 million dollars in revenue over a 5 year period (BrainTree api).  And I really, really, really don't want to rewrite that.  Nor do I want to use a third party service and lose another percentage chunk over baseline Stripe fees.&lt;/p&gt;

&lt;p&gt;And all of this means that I need to use the &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Rails&lt;/a&gt; application framework.  I already have a license for it anyway and the issue is that I need to port an existing, almost complete Rails app into it.  All of the blog posts starting with Jumpstart Rails Tutorial nn will cover this process.  While there is &lt;a href=&quot;https://jumpstartrails.com/docs/&quot;&gt;good documentation for Jumpstart Rails&lt;/a&gt;, it is reference material rather than how to material.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If anything I write during this series comes off as critical of Chris Oliver, the man behind Jumpstart Rails, it isn't.  I am an unabashed fan of the &lt;strong&gt;damn fine&lt;/strong&gt; work that Chris Oliver does.&lt;/p&gt;

&lt;h2 id=&quot;step-1---getting-started-with-jumpstart-rails---clone-the-repo&quot;&gt;Step 1 - Getting Started with Jumpstart Rails - Clone the Repo&lt;/h2&gt;

&lt;p&gt;The first step is to purchase an actual license for Jumpstart Rails. This will get you added onto the Jumpstart Rails git repo:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://gitlab.com/gorails/jumpstart-pro
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What you need to do is begin by cloning this repo down to your local system:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@gitlab.com:gorails/jumpstart-pro.git web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You notice that I changed the name of this to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I changed it since my previous repo name was web_change_me_now and this is going to be the second version of it.&lt;/p&gt;

&lt;h2 id=&quot;step-2---add-your-local-version-to-github&quot;&gt;Step 2 - Add Your Local Version to Github&lt;/h2&gt;

&lt;p&gt;I then went to github (I'm a staunch github user instead of gitlib) and created a new repo named:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_change_me_now2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then needed to add this as an origin:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add web_change_me_now2 git@github.com:fuzzygroup/web_change_me_now2.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My next step is to push.  Now I need to be careful here since I can't push back to the gitlab remote since I don't have permissions for that (and any changes I make are to &lt;strong&gt;my application&lt;/strong&gt; not the template).  Here's the push syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* make some silly ass change; I messed about with README.md */
git add .
git commit -m &quot;readme change&quot;
git push web_change_me_now2 master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I don't use remotes all that much – and I suspect outside of Heroku, you don't either – so here's the syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push ORIGIN_NAME BRANCH_NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So if I want to push my changes, I need to do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push web_change_me_now2 master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-3---getting-a-develop-branch-in-place&quot;&gt;Step 3 - Getting a develop Branch in Place&lt;/h2&gt;

&lt;p&gt;I'm a firm believer in a simple, branch based approach to git.  I've talked about this before and, specifically:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Always work in a branch tied to an issue number.&lt;/li&gt;
  &lt;li&gt;Issue branches are merged into develop.&lt;/li&gt;
  &lt;li&gt;Develop is merged into master.&lt;/li&gt;
  &lt;li&gt;Master is then deployed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is simple, straight forward and clean.  I've now worked on teams up to 10 people in size and in Rails code bases of several hundred thousand lines using this with nary a hitch so it is an excellent model for small startups.&lt;/p&gt;

&lt;p&gt;This needs to be done in your terminal and then in Github itself:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In your terminal, create a branch named develop with: &lt;strong&gt;git branch develop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;In your terminal, change into that branch with: &lt;strong&gt;git co develop&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Again update the README.md so you have something to push.&lt;/li&gt;
  &lt;li&gt;Add with: &lt;strong&gt;git add .&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Commit with: &lt;strong&gt;git commit -m &quot;readme change&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Push with: git push web_change_me_now2 develop&lt;/li&gt;
  &lt;li&gt;Go into github and pull up your repository.&lt;/li&gt;
  &lt;li&gt;Go into the settings link.  Mine is here: https://github.com/gochangeme/web_change_me_now2/settings&lt;/li&gt;
  &lt;li&gt;Go into the Branches link.  Mine is here: https://github.com/gochangeme/web_change_me_now3/settings/branches&lt;/li&gt;
  &lt;li&gt;You will see the default branch is set to master.  Use the drop down to pick develop and then click the update button.&lt;/li&gt;
  &lt;li&gt;Click the I understand … button.&lt;/li&gt;
  &lt;li&gt;Submit the pull request (you may need to change things a bit with the drop down due to changing the default).&lt;/li&gt;
  &lt;li&gt;Click the merge button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point you are now set for development using the model above.  The next blog post along these lines will focus on taking an initial model and controller and start to develop a porting process.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2020/01/02/jumpstart-rails-tutorial-01-bringing-an-existing-codebase-in.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2020/01/02/jumpstart-rails-tutorial-01-bringing-an-existing-codebase-in.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Making the Trix Editor Resizable</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0935.jpeg&quot; alt=&quot;IMG_0935.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is interesting that my first post of 2020 is actually a CSS trick.  That's quite an evolution in my web development practices from 2019.  Here is a CSS addition that limits the max height of your trix editor window and makes it resizable:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.trix-content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;800px&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;#set&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;want&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow-y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;trix-editor-resources&quot;&gt;Trix Editor Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://trix-editor.org/&quot;&gt;https://trix-editor.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gorails.com/episodes/trix-editor&quot;&gt;Go Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://headway.io/blog/how-to-use-trix-and-shrine-for-wysiwyg-editing-with-drag-and-drop-image-uploading/&quot;&gt;Headway on Trix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/basecamp/trix&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 01 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/trix/2020/01/01/making-the-trix-editor-resizable.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/trix/2020/01/01/making-the-trix-editor-resizable.html</guid>
        
        <category>css</category>
        
        <category>trix</category>
        
        
        <category>trix</category>
        
      </item>
    
      <item>
        <title>Updating to the Latest Version of JumpStart Pro</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0939.jpeg&quot; alt=&quot;IMG_0939.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I've been using JumpStart Pro to  build a new side project and in a discussion with Chris Oliver, the creator of JumpStart Pro, I reported a bug which he said &quot;Oh - you should update to the latest&quot;.  He viewed the update process as something seamless and I, honestly, didn't get it.  And, in researching this, I discovered that I made a fatal mistake.  The rest of this blog post covers that mistake and explains how you update JumpStart Pro.  Here's the tldr (too long; did not read):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ALWAYS, ALWAYS, ALWAYS create a new app based on JumpStart Pro by cloning it from the GitLab source i.e. you start with: &quot;git clone git@gitlab.com:gorails/jumpstart-pro.git YOUR_PROJECT_NAME&quot;&lt;/li&gt;
  &lt;li&gt;Go to github and create a repo for YOUR_PROJECT_NAME&lt;/li&gt;
  &lt;li&gt;Copy the github clone info and add it as a separate remote: git remote add YOUR_PROJECT_NAME git@github.com:YOUR_GITHUB_USERNAME/YOUR_PROJECT_NAME.git&lt;/li&gt;
  &lt;li&gt;Make a change like updating the README.md and do the add / commit dance and push to your repo as  git push YOUR_PROJECT_NAME master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though I've worked with Git for more than a decade now, I've previously only worked with Heroku as a git remote so I missed the implications of this when I originally cloned my first JumpStart Pro app.  Sigh.&lt;/p&gt;

&lt;p&gt;The critical mistake I made was that I had started my second JumpStart Pro project by copying from the first JumpStart Pro project I had made and the NOT moving over the .git folder.  This meant that my new project was now disconnected from the original remote so I couldn't just do a git pull to update it.&lt;/p&gt;

&lt;h2 id=&quot;fixing-my-own-stupidity&quot;&gt;Fixing My Own Stupidity&lt;/h2&gt;

&lt;p&gt;Here's what I did to fix this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I started by creating a new application cloning into a new location: git clone git@gitlab.com:gorails/jumpstart-pro.git okrsnow&lt;/li&gt;
  &lt;li&gt;I created a new git repo for my app&lt;/li&gt;
  &lt;li&gt;I added the new repo with: git remote add okrsnow git@github.com:fuzzygroup/okrsnow.git&lt;/li&gt;
  &lt;li&gt;I made a change and pushed to git push okrsnow master&lt;/li&gt;
  &lt;li&gt;I manually copied over all the code from my original JumpStart pro repo.  Given that Rails apps have such a clearly defined directory structure, this was tedious but not insurmountable.&lt;/li&gt;
  &lt;li&gt;I had to adapt my normal development practices so that I remember to always use the remote when workign with branches.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;oh-and-about-that-bug&quot;&gt;Oh and About that Bug&lt;/h2&gt;

&lt;p&gt;I noticed that Chris fixed it within a few hours of my reporting it.  Thanks Chris!&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/12/29/updating-to-the-lastest-version-of-jumpstart-pro.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/12/29/updating-to-the-lastest-version-of-jumpstart-pro.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Heroku and Route 53 - Using Amazon for Domain Registration with Heroku for Hosting</title>
        <description>&lt;p&gt;https://devcenter.heroku.com/articles/route-53&lt;/p&gt;

&lt;p&gt;https://devcenter.heroku.com/articles/route-53&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2 took 5m33s
❯ heroku domains:add okrsnow.com
Adding okrsnow.com to ⬢ okrsnow… done
Configure your app's DNS provider to point to the DNS Target thawing-coral-9zbepdxpaa0ondgs6ubrpre7.herokudns.com.
For help, see https://devcenter.heroku.com/articles/custom-domains&lt;/p&gt;

&lt;p&gt;The domain okrsnow.com has been enqueued for addition
Run heroku domains:wait 'okrsnow.com' to wait for completion&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2 took 2s
❯ heroku domains:add www.okrsnow.com
Adding www.okrsnow.com to ⬢ okrsnow… done
Configure your app's DNS provider to point to the DNS Target quiet-cephalopod-d3uo5fkp1t6x7dnqtpyc1jue.herokudns.com.
For help, see https://devcenter.heroku.com/articles/custom-domains&lt;/p&gt;

&lt;p&gt;The domain www.okrsnow.com has been enqueued for addition
Run heroku domains:wait 'www.okrsnow.com' to wait for completion&lt;/p&gt;

&lt;p&gt;okrsnow on  master [🏎💨] via ⬢ v12.8.1 via 💎 v2.6.5 on ☁️  us-west-2
❯&lt;/p&gt;

</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2019/12/29/heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/12/29/heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.html</guid>
        
        
      </item>
    
      <item>
        <title>Getting Past the unpack1 error on Heroku</title>
        <description>&lt;p&gt;11373* heroku domains:add okrsnow.com
11374* heroku domains:add www.okrsnow.com
11376* mate _posts/2019-12-29-heroku-and-route-53-using-amazon-for-domain-registration-with-heroku-for-hosting.md
11377* heroku logs
11378* heroku logs –tail
11379* heroku config:set RAILS_MASTER_KEY=123456789abcefg
11380* git push heroku master
11384* git push heroku master
11385* heroku logs –tail
11390* git push heroku master
11391* heroku config:set RAILS_MASTER_KEY=config/credentials/production.yml.enc
11395* git push heroku master
11396* heroku config:set RAILS_MASTER_KEY=f9d510292a72197cb71c44617a6f71690ebe5fde9aaf7c0b19dc0427aeef62e2143e271260e169fd04ab3681f1df173d6079c740f8aeafff491787974809b9aa
11397* git push heroku master
11399* heroku config:set RAILS_MASTER_KEY=65371bc52c911ea14494c5905c07c1cf
11400* git push heroku master
11402  heroku logs tail -f
11404  heroku logs –tail
11409  heroku logs –tail
11411  history | grep heroku
11412  heroku config
11413  bundle exec heroku rake db:migrate
11414  bundle exec heroku rake seed:init&lt;/p&gt;

&lt;p&gt;https://jumpstartrails.com/discussions/88&lt;/p&gt;

&lt;p&gt;remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/rake-13.0.1/exe/rake:27:in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;top (required)&amp;gt;'
remote:
remote:        Caused by:
remote:        ArgumentError: key must be 16 bytes
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:193:in &lt;/code&gt;key='
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:193:in &lt;code class=&quot;highlighter-rouge&quot;&gt;_decrypt'
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/message_encryptor.rb:157:in &lt;/code&gt;decrypt_and_verify'
remote:        /tmp/build_b70efc9d2ecef8d7607b7096a75f9e13/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.2.1/lib/active_support/messages/rotator.rb:21:in `decrypt_and_verify'
remote&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/2019/12/29/getting-past-the-unpack1-error-on-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/12/29/getting-past-the-unpack1-error-on-heroku.html</guid>
        
        
      </item>
    
      <item>
        <title>How Do You Know What ActiveRecord Table Has a user_id Attribute?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0903.jpeg&quot; alt=&quot;IMG_0903.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Even though I'm a firm, firm believer in agile, I've recently been experimenting with a throwback to waterfall style development and it very quickly left me with a fully featured data structure of tables and relationships modeled as &lt;strong&gt;example data&lt;/strong&gt;.  What I did is very rapidly write a series of migrations and then populate them to represent a sample &quot;installation&quot;.  My goal with this approach was to play to my strengths – data modeling – and avoid getting tied down in user interface stuff (my weakness).&lt;/p&gt;

&lt;p&gt;This was a very, very interesting approach and what I found was that I got much further along the lines of the &quot;guts&quot; of an application simply because I never got discouraged by:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh Shite – I know this should look good but I'm too much of a hoser to make it look good; I guess I'll put it aside and go watch TV&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The downside to this is that I never bothered setting up the normal associations that you do when you write a migration; I simply thought about this application in terms of the example data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the users who would be using the system&lt;/li&gt;
  &lt;li&gt;the data objects that they would create&lt;/li&gt;
  &lt;li&gt;how the data objects would interact with each other&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the things that I noticed when I started filling in the basics like &quot;belongs_to :user&quot; was that I kept constantly jumping between the class I was working on and the schema file.  Finally it hit me – what I needed was a method that I could execute in the console that would tell me what classes had a user_id attribute.  And so I wrote a class called DataObject (for an ActiveRecord class which stores data) and a method .has_user_id.  What I was looking for was output that looked like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; DataObject.has_user_id
Initiative
Yes - has a user_id field
KeyResultOwner
Yes - has a user_id field
KeyResult
Yes - has a user_id field
ObjectiveOwner
Yes - has a user_id field
ObjectiveType
Objective
Yes - has a user_id field
OkrTeamMember
Yes - has a user_id field
OkrTeam
Yes - has a user_id field
OrganizationGroup
Organization
Quarter
ResponsibilityRole
State
Yes - has a user_id field
User
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the entirety of the DataObject class:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataObject&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Initiative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KeyResultOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KeyResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjectiveOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ObjectiveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Objective&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OkrTeamMember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OkrTeam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OrganizationGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Organization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Quarter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ResponsibilityRole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# DataObject.has_user_id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_user_id&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DataObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;inst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yes - has a user_id field&quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice the self.all class method returns a list of classes specific to my application.  These are the classes that actually make up the business logic.  I needed to NOT pull all classes in the application because I built this on top of a new framework, JumpStart Pro (see next section). JumpStart Pro has a bunch of its own classes for things like Credit Cards, Charges, etc.  I only wanted to focus on the classes that I implemented; hence the .all method.&lt;/p&gt;

&lt;p&gt;In order to use this, all I need to do is go into a console, which I &lt;strong&gt;always, always&lt;/strong&gt; have open anyway (Thanks Jared) and then type DataObject.has_user_id and I'll get a print out similar to the above list.  Using this I was able to much more easily move from class to class and add in my &lt;em&gt;belongs_to user&lt;/em&gt; relationships.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It took about 3 to 4 times longer to write this blog post than it did to write this class.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-gorails-jumpstart&quot;&gt;Sidebar: GoRails JumpStart&lt;/h2&gt;

&lt;p&gt;Given that my weakest skill is user interface, I chose, right from the start, to build this on top of &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;GoRails' JumpStart Pro&lt;/a&gt; product which is a framework for building Rails app and giving you a solid set of underpinnings for a SAAS app.  I've been ridiculously happy so far with JumpStart Pro.  Here's an example of the high quality user interface I've seen from it:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/okrsnow01_edited.png&quot; alt=&quot;okrsnow01_edited.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/okrsnow02_calendar.png&quot; alt=&quot;okrsnow02_calendar.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This last image, the drop down calendar, I did zero work to get that to appear.  All I did was change the field type from a text field to a date field:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%= form.label :date_end_at %&amp;gt;
    &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%= form.date_field :date_end_at, placeholder: &quot;When Do You Need to Complete This?&quot;, autofocus: true, class: &quot;form-control&quot; %&amp;gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I will fully admit that I don't actually know if this drop down comes from JumpStart Pro or from Rails 6 and the new form with style forms but, &lt;strong&gt;damn&lt;/strong&gt; is it sexy as hell to get a drop down calendar without ever doing a damn thing.  Here's what I said to my wife as I discovered this in the car on the way home from seeing Trans Siberian Orchestra:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Man that's sexy.  I think I'm more than a bit hard …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JumpStart Pro – Absolutely recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/12/28/how-do-you-know-what-activerecord-table-has-a-user-id-attribute.html</guid>
        
        <category>rails</category>
        
        <category>active_record</category>
        
        <category>metaprogramming</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When Your Brand New Windows PC Goes into a The Computer Restarted Unexpectedly Loop</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1083.jpeg&quot; alt=&quot;IMG_1083.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This blog post is for Max, my youngest son, so he can learn what I did to fix this problem.&lt;/p&gt;

&lt;p&gt;So my youngest son got a new Windows gaming PC for this Christmas from his Grandmother (thank you Nanny) and when he started it up, all he saw was this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1097.jpeg&quot; alt=&quot;IMG_1097.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The normal diagnostic steps of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pull the graphics card and use motherboard graphics&lt;/li&gt;
  &lt;li&gt;Check that the RAM is seated&lt;/li&gt;
  &lt;li&gt;Double check all cables are connected&lt;/li&gt;
  &lt;li&gt;Change the boot order options and make sure that the right boot device (SSD) is used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We ordered this from Best Buy and my suspicion is that someone had previously bought this computer and partially run thru Windows setup and failed.  Since the device is brand new, all we need to do is trick Windows into running through the setup process from scratch.&lt;/p&gt;

&lt;p&gt;Here's how I solved this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Press shift+F10 to get a command prompt.  Clap loudly for seeing a DOS prompt for the first time in ages.&lt;/li&gt;
  &lt;li&gt;Type regedit and press enter.&lt;/li&gt;
  &lt;li&gt;Navigate to this key: &lt;strong&gt;HKLM/SYSTEM/SETUP/STATUS/ChildCompletion&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click on setup.exe and change the value from 1 to 3.&lt;/li&gt;
  &lt;li&gt;Press ALT+F and select Exit from the File menu to exit RegEdit.&lt;/li&gt;
  &lt;li&gt;Exit out of the command prompt by typing exit and pressing ENTER.&lt;/li&gt;
  &lt;li&gt;Reboot the computer by clicking ok at the &quot;The Computer Restarted Unexpectedly…&quot; dialog box.&lt;/li&gt;
  &lt;li&gt;Run through the Windows setup process from scratch and all should be good.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thewindowsclub.com/computer-restarted-unexpectedly-encountered-unexpected-error&quot;&gt;TheWindowsClub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/windows/2019/12/25/when-your-brand-new-windows-pc-goes-into-a-the-computer-restarted-unexpectedly-loop.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/windows/2019/12/25/when-your-brand-new-windows-pc-goes-into-a-the-computer-restarted-unexpectedly-loop.html</guid>
        
        <category>windows</category>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Don't Beat Yourself Up - That's the World's Job</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1048.jpg&quot; alt=&quot;IMG_1048.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;Today is December 23rd and I am writing in the wee hours, that wonderfully still time when all is quiet in the world.  Between the early hour and the time of year, I've found that this always makes me thoughtful.&lt;/p&gt;

&lt;p&gt;Many of the people I know and care for are terribly hard on themselves.  They seem to feel that if they aren't perfect, they need to beat themselves up for that lack of perfection.  And I get being self critical – trust me, I really, really do but it simply isn't necessary, that's what the &lt;strong&gt;world&lt;/strong&gt; does for you.  There is no need to rake yourself over the coals; the world and your detractors (and we all have detractors) will do that for you.  Now, while I find Ernest Hemingway often problematic, this is something that he really understood.  I read his novel, a &lt;em&gt;Farewell to Arms&lt;/em&gt; over 30 years ago, and this quote has been floating about in my brain ever since:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“If people bring so much courage to this world the world has to kill them to break them, so of course it kills them. The world breaks every one and afterward many are strong at the broken places. But those that will not break it kills. It kills the very good and the very gentle and the very brave impartially. If you are none of these you can be sure it will kill you too but there will be no special hurry.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;― &lt;a href=&quot;https://en.wikipedia.org/wiki/Ernest_Hemingway&quot;&gt;Ernest Hemingway&lt;/a&gt;, &lt;a href=&quot;https://www.goodreads.com/work/quotes/4652599-a-farewell-to-arms&quot;&gt;A Farewell to Arms&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/philosophy/2019/12/23/don-t-beat-yourself-up-that-s-the-world-s-job.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/philosophy/2019/12/23/don-t-beat-yourself-up-that-s-the-world-s-job.html</guid>
        
        <category>philosophy</category>
        
        
        <category>philosophy</category>
        
      </item>
    
      <item>
        <title>Understanding OKRs</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1050.jpg&quot; alt=&quot;IMG_1050.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;(Photo Credit - &lt;a href=&quot;https://www.lisameece.com/blog&quot;&gt;Lisa Meece&lt;/a&gt;; Thank You)&lt;/p&gt;

&lt;p&gt;During last week's offsite, my boss let us know that he wanted to go down the &lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;OKR&lt;/a&gt; rabbit hole in 2020.  OKR stands for Objectives and  Key Results and is a management philosophy promoted by &lt;a href=&quot;https://en.wikipedia.org/wiki/John_Doerr&quot;&gt;John Doerr&lt;/a&gt; of &lt;a href=&quot;https://en.wikipedia.org/wiki/Kleiner_Perkins&quot;&gt;Kleiner Perkins&lt;/a&gt; who most famously got it internalized by Google with great success.  According to &lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Objectives and key results is a framework for defining and tracking objectives and their outcomes.  OKRs comprise an objective—a clearly defined goal—and one or more key results—specific measures used to track the achievement of that goal.  The goal of OKR is to define how to achieve objectives through concrete, specific and measurable actions.  Key results can be measured on a 0-100% scale or any numerical unit (e.g. dollar amount, %, items, etc.). Objectives should also be supported by initiatives, which are the plans and activities that help to achieve the objective and move forward the key results.&lt;/p&gt;

&lt;p&gt;Although the core idea of OKRs is that you have both Objectives and Key Results and that seems obvious, I've always found that examples give things clarity.  So here are some examples:&lt;/p&gt;

&lt;h2 id=&quot;objective&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Research and improve customer satisfaction&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Exceed Net Promoter Score (NPS) of over 8.0&lt;/li&gt;
  &lt;li&gt;Get 1000 survey responses to annual satisfaction survey&lt;/li&gt;
  &lt;li&gt;Conduct 50 phone interviews with top customers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-1&quot;&gt;Objective:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Improve internal employee engagement&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-1&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Conduct 3 monthly “Fun Friday” all-hands meetings with motivational speakers&lt;/li&gt;
  &lt;li&gt;Implement tracking system in 3 different teams&lt;/li&gt;
  &lt;li&gt;Reach weekly employee satisfaction score of at least 4.7 points&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-2&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Finish raising new capital for our growth needs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-2&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;E-mail and phone outreach to 100 VCs and seed funds&lt;/li&gt;
  &lt;li&gt;Get at least 30 second contact meetings or conference calls&lt;/li&gt;
  &lt;li&gt;Solicit at least 3 term sheets of our minimum required terms&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-3&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Simplify &amp;amp; clarify our product, messaging, presentation of things we do&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-3&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;25 on-site user-testing sessions to understand key product misunderstandings&lt;/li&gt;
  &lt;li&gt;10 tests of our recent infographics and slide decks for customer understanding&lt;/li&gt;
  &lt;li&gt;Get 1000 answers to an online user survey sent to all last quarter’s signups&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;objective-4&quot;&gt;Objective:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Grow Our Corporate Global Business&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-results-4&quot;&gt;Key Results:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Hit company global sales target of $100 Million in Sales&lt;/li&gt;
  &lt;li&gt;Achieve 100% year-to-year sales growth in the EMEA geography&lt;/li&gt;
  &lt;li&gt;Increase the company average deal size by 30% with upsells&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My thanks to the &lt;a href=&quot;https://blog.newsteer.com/okr-goals-practical-examples-for-companies-and-startups-a1d2fbb037c5&quot;&gt;Steer blog&lt;/a&gt; which published these examples.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/okr/2019/12/22/understanding-okrs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/okr/2019/12/22/understanding-okrs.html</guid>
        
        <category>okr</category>
        
        <category>startup</category>
        
        
        <category>okr</category>
        
      </item>
    
      <item>
        <title>How Do You Know the Charge Status of Your Apple Pencil</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0737.jpeg&quot; alt=&quot;IMG_0737.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm a new user to my Apple Pencil, the one with the magnet that charges on the top of the iPad.  I mean I've had it since I got an iPad Pro but I dropped it in my laptop bag and, well, never even remembered it existed.  A friend told me &quot;Use Your iPad with the Apple Pencil and Google Jamboard and its &lt;strong&gt;fantastic&lt;/strong&gt;&quot; (future blog post coming).  And I think that's a great idea but the first problem I found was that my Apple Pencil was dead, dead, dead.&lt;/p&gt;

&lt;p&gt;So the obvious question is how do you know that your Apple Pencil is charged?  I started with 9 to 5 Mac and &lt;a href=&quot;https://ww.9to5mac.com/2019/03/11/apple-pencil-battery/&quot;&gt;their instructions&lt;/a&gt; simply didn't work for me.&lt;/p&gt;

&lt;p&gt;What I discovered is that when you attach your Apple Pencil to your iPad with the magnet, it very quickly flashes the charge on the screen.  You don't need to do anything special to know this – just detach and re-attach.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ipad/2019/12/16/how-do-you-know-the-charge-status-of-your-apple-pencil.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ipad/2019/12/16/how-do-you-know-the-charge-status-of-your-apple-pencil.html</guid>
        
        <category>ipad</category>
        
        <category>apple_pencil</category>
        
        
        <category>ipad</category>
        
      </item>
    
      <item>
        <title>Ruby, ChartKick and chart.js versus Google Charts and the Y Axis Auto Sizing</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9948.jpeg&quot; alt=&quot;IMG_9948.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of people in the Open Source world, I rarely know actual people in the Open Source world – but I do know github usernames.  And one of those names that I truly respect is &lt;a href=&quot;https://github.com/ankane&quot;&gt;ankane&lt;/a&gt;.  I've rarely found a bit of code he wrote that I don't like or use.  And while I'm not a big open source creator, I'd like to think that I give back by writing documentation like this blog post.&lt;/p&gt;

&lt;p&gt;Today I'm talking about the &lt;a href=&quot;https://github.com/ankane/chartkick&quot;&gt;ChartKick&lt;/a&gt; library by ankane.  ChartKick is an easy way to build JavaScript charts with a single line of Ruby.  I've used ChartKick on and off for years but how it works has always been a bit of a mystery.  Hopefully this blog post de-mystifies it a bit.&lt;/p&gt;

&lt;h2 id=&quot;chartkick-can-use-different-graphing-engines&quot;&gt;ChartKick Can Use Different Graphing Engines&lt;/h2&gt;

&lt;p&gt;I have always used ChartKick in the past just with the default Google Charts engine.  Much to my surprise, ChartKick can use chart.js underneath.  This is surprising to me and &lt;strong&gt;utterly awesome&lt;/strong&gt;.  &lt;a href=&quot;https://www.ruby-forum.com/t/trying-to-change-chartkick-to-chart-js/251938&quot;&gt;Here's where I learned this&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-chartkick-with-chartjs&quot;&gt;Using ChartKick with chart.js&lt;/h3&gt;

&lt;p&gt;In application.js, you need both of these:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//= require Chart.bundle
//= require chartkick
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: This assumes that you aren't using yarn / webpacker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you change application.js, you need to restart your development server.&lt;/p&gt;

&lt;p&gt;Here's a picture of a graph using chart.js:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/chartkick_chart_js.png&quot; alt=&quot;chartkick_chart_js.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-chartkick-with-google-charts&quot;&gt;Using ChartKick with Google Charts&lt;/h3&gt;

&lt;p&gt;If you are using ChartKick with Google Charts then you need to remove the line below from application.js:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//= require Chart.bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then you need to add, into your layout or your html template:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= javascript_include_tag &quot;https://www.gstatic.com/charts/loader.js&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's a picture of a graph using Google Charts:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/chartkick_google_charts.png&quot; alt=&quot;chartkick_google_charts.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;y-axis-auto-sizing--setting-axis-minimums-dynamically&quot;&gt;Y Axis Auto Sizing / Setting Axis Minimums Dynamically&lt;/h2&gt;

&lt;p&gt;The Y axis on my graphs, for years, has always been zero.  I had a friend complain about this to me and a &lt;a href=&quot;https://chartkick.com/&quot;&gt;documentation&lt;/a&gt; grovel (ok I read it more closely than I ever had before) revealed this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;min defaults to 0 for charts with non-negative values. Use nil to let the charting library decide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;adding-a-bit-of-color-to-your-graph&quot;&gt;Adding a Bit of Color to Your Graph&lt;/h2&gt;

&lt;p&gt;I haven't used this in quite a while, so here's a reminder on how to use colors:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= line_chart data, colors: [&quot;#b00&quot;, &quot;#666&quot;] %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Thank you ankane!&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/12/13/ruby-chartkick-and-chart-js-versus-google-charts-and-the-y-axis-auto-sizing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/12/13/ruby-chartkick-and-chart-js-versus-google-charts-and-the-y-axis-auto-sizing.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>chartkick</category>
        
        <category>chartjs</category>
        
        <category>google_charts</category>
        
        <category>yaxis</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Using Xargs to Get Past Argument List Too Long</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9162.jpeg&quot; alt=&quot;IMG_9162.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a quick one.  I have about 25,000 files in a directory that I need to grep across.  I tried:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep '&quot;class&quot;:0' *.json | more
zsh: argument list too long: grep
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's a problem because when the argument list is too long, nothing can happen.  The solution here is a combination of find and xargs, specifically:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' | xargs grep '&quot;class&quot;:0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the output from this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./davidson-data-266118b4178f11ea80474c3275928de7.json:{&quot;count&quot;:3,&quot;hate_speech&quot;:3,&quot;offensive_speech&quot;:0,&quot;neither&quot;:0,&quot;class&quot;:0,&quot;tweet&quot;:&quot;\&quot;@JPantsdotcom @Todd__Kincannon @the__realtony I'm partial
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You should be able to use an approach like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find -name '*.json' -exec grep '&quot;class&quot;:0' 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but the embedded grep in find doesn't accept that and fails with this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find: illegal option -- n
usage: find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]
       find [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The closest that I can get to make this work is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' -exec grep 'class' {} +
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and that's not an exact match so, sigh.&lt;/p&gt;

&lt;p&gt;If we return to the original approach and add a -l option flag then we can list only filenames:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.json' | xargs grep -l '&quot;class&quot;:0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/833128/what-does-xargs-grep-do&quot;&gt;Stack Overflow on Xargs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6637882/how-can-i-use-grep-to-show-just-filenames-on-linux&quot;&gt;Stack Overflow on Grep&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/128559/solving-mv-argument-list-too-long&quot;&gt;Argument List Too Long&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 12 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/12/12/using-xargs-to-get-past-argument-list-too-long.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/12/12/using-xargs-to-get-past-argument-list-too-long.html</guid>
        
        <category>linux</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>The 12 Bugs of Christmas - A Software Developers' Version</title>
        <description>&lt;p&gt;This isn't mine but it was forwarded to me via a group chat and, in it, I found a deep, profound and abiding truth:&lt;/p&gt;

&lt;h3 id=&quot;for-the-first-bug-of-christmas-my-manager-said-to-me&quot;&gt;1.    For the first bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-second-bug-of-christmas-my-manager-said-to-me&quot;&gt;2.    For the second bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-third-bug-of-christmas-my-manager-said-to-me&quot;&gt;3.    For the third bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-fourth-bug-of-christmas-my-manager-said-to-me&quot;&gt;4.    For the fourth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-fifth-bug-of-christmas-my-manager-said-to-me&quot;&gt;5.    For the fifth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-sixth-bug-of-christmas-my-manager-said-to-me&quot;&gt;6.    For the sixth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-seventh-bug-of-christmas-my-manager-said-to-me&quot;&gt;7.    For the seventh bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-eighth-bug-of-christmas-my-manager-said-to-me&quot;&gt;8.    For the eighth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-ninth-bug-of-christmas-my-manager-said-to-me&quot;&gt;9.    For the ninth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-tenth-bug-of-christmas-my-manager-said-to-me&quot;&gt;10.  For the tenth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-eleventh-bug-of-christmas-my-manager-said-to-me&quot;&gt;11.  For the eleventh bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Say it's not supported&lt;/li&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-the-twelfth-bug-of-christmas-my-manager-said-to-me&quot;&gt;12.  For the twelfth bug of Christmas, my manager said to me:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Tell them it's a feature&lt;/li&gt;
  &lt;li&gt;Say it's not supported&lt;/li&gt;
  &lt;li&gt;Change the documentation&lt;/li&gt;
  &lt;li&gt;Blame it on the hardware&lt;/li&gt;
  &lt;li&gt;Find a way around it&lt;/li&gt;
  &lt;li&gt;Say they need an upgrade&lt;/li&gt;
  &lt;li&gt;Reinstall the software&lt;/li&gt;
  &lt;li&gt;Ask for a dump&lt;/li&gt;
  &lt;li&gt;Run with the debugger&lt;/li&gt;
  &lt;li&gt;Try to reproduce it&lt;/li&gt;
  &lt;li&gt;Ask them how they did it and&lt;/li&gt;
  &lt;li&gt;See if they can do it again.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/humor/2019/12/11/the-12-bugs-of-christmas-a-software-developers-version.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/humor/2019/12/11/the-12-bugs-of-christmas-a-software-developers-version.html</guid>
        
        <category>humor</category>
        
        <category>christmas</category>
        
        
        <category>humor</category>
        
      </item>
    
      <item>
        <title>Ruby to Python Translation Guide</title>
        <description>&lt;h2 id=&quot;last-update-12122019&quot;&gt;Last Update: 12/12/2019&lt;/h2&gt;

&lt;p&gt;I wrote this guide to different Ruby idioms and how to do them in Python.  Organization is alphabetical.  This will have to be a continually updated document as I keep finding holes in my Python knowledge and my prior practice of &quot;Learn it / Blog it&quot; simply doesn't put enough things into the same place.  I need a single, easily searchable place to store all this random &quot;how to do X cruft&quot;.&lt;/p&gt;

&lt;p&gt;This is written as headings which discuss the problem and then how it is done in Ruby and in Python and then, optionally, a Python context.  Hopefully this approach makes it useful to both ruby-ites and python-istas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: My day to day lingua franca is still Ruby and in a Rails style context where everything is autoloaded.  Python to me is a specialized tool for Data Science / Machine Learning.  I find that Python:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lacks the elegant simplicity of Ruby&lt;/li&gt;
  &lt;li&gt;Python syntax makes my eyes want to bleed, can we have an underscore character please, how about a colon or some more parentheses&lt;/li&gt;
  &lt;li&gt;Is developer hostile by default&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: These are opinions!  I am writing them after a craptastic work day so that and lack of sleep may be tilting my opinions more than a bit; I mean I'm right but still …  And please understand that I fundamentally respect that amazing work that Guido did but I find myself in Matz's camp by preference.  Still nothing else has the ecosystem that Python does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: If you disagree with the above, my twitter handle is fuzzygroup and my email is easily discoverable.  Let the fun begin …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 4&lt;/strong&gt;: This was initially written in late 2019 so the Python flavor / version is 3.7 using VirtualEnv on a Mac with pip3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 5&lt;/strong&gt;: If there's things you want to see here then actually do let me know.  This isn't a planned out document, it is more of a &quot;what made me feel stooopid in Python today&quot; type of thing.&lt;/p&gt;

&lt;h2 id=&quot;debugging&quot;&gt;Debugging&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-all-attributes-of-an-object&quot;&gt;Getting All Attributes of an Object&lt;/h2&gt;

&lt;p&gt;Most Ruby objects, at least in a Rails context, are generally ActiveRecord objects and respond to .attributes so:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attributes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;created_at&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;updated_at&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Write Daily&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;public_name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;options&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;user_id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;category_id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;has_habits&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;habit_count&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;shareable&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;master_plan&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;active&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python equivalent of this is is to reference the object's internal dict.  Below we have an object called message which is coming in from a streaming data solution called sse:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__dict__&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;all_awardings&quot;:[],&quot;approved_at_utc&quot;:null,&quot;ups&quot;:1,&quot;user_reports&quot;:[]}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'33288433929'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'retry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# There are four different top level things that can be called:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# despite the appearance, the attributes of data are NOT json buy just a string so this doesn't work:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'str'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'keys'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-all-methods-for-an-object&quot;&gt;Getting All Methods for an Object&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:[]=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:all?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:any?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:assert_valid_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:assoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chart_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# a crap ton of methods omitted for clarity&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Also and BETTER since it just shows methods on the class; not inherited methods:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                          &lt;span class=&quot;n&quot;&gt;active_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                   &lt;span class=&quot;n&quot;&gt;after_add_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;after_add_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;after_add_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;after_remove_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;after_remove_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;after_remove_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autosave_associated_records_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;n&quot;&gt;before_add_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;before_add_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;before_add_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;before_remove_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;before_remove_for_habits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;before_remove_for_habits?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                                    &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validate_associated_records_for_habits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'__class__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__delattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dict__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dir__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__doc__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__format__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init_subclass__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__le__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__lt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__module__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ne__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__new__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce_ex__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__repr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__setattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__sizeof__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__str__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__subclasshook__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__weakref__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'parse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'retry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sse_line_pattern'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sse_line_pattern&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(?P&amp;lt;name&amp;gt;[^:]*):?( ?(?P&amp;lt;value&amp;gt;.*))?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# object.__dict__ gets you an object's data while dir(object) gets you an object's methods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;See: &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html&quot;&gt;Me&lt;/a&gt;, &lt;a href=&quot;https://lerner.co.il/2014/10/14/python-attributes/&quot;&gt;Lerner&lt;/a&gt;, &lt;a href=&quot;https://medium.com/swlh/class-and-object-attributes-python-8191dcd1f4cf&quot;&gt;Swlh&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/questions/6886493/get-all-object-attributes-in-python&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;getting-all-keys-in-a-hash&quot;&gt;Getting All Keys in a Hash&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cat&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blepp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dict_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;json-parsing&quot;&gt;JSON Parsing&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;id&quot;: 12345, &quot;message&quot;: &quot;hello&quot;, &quot;array&quot;: [1,2,3,4]}'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;array&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ujson&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;JSON&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{&quot;id&quot;: 12345, &quot;message&quot;: &quot;hello&quot;, &quot;array&quot;: [1,2,3,4]}'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dict_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I will confess to dipping into a bit of a Ruby idiom here by importing ujson as JSON (all caps).  I find myself constantly making errors in python by calling my json variable json when that's actually an imported class / module.  This one change makes things a lot easier (at least for me).&lt;/p&gt;

&lt;h2 id=&quot;length--size-of-an-object&quot;&gt;Length / Size of an Object&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1826&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;quitting-the-console&quot;&gt;Quitting the console&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;redis&quot;&gt;Redis&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&amp;lt;Redis client v4.1.3 for redis://127.0.0.1:6379/0&amp;gt;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;string-interpolation&quot;&gt;String Interpolation&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Scott is a &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scott is a {skill}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;try-----safe-navigation-and-python-hashes&quot;&gt;Try / &amp;amp; - Safe Navigation and Python Hashes&lt;/h2&gt;

&lt;p&gt;A ruby hash returns nil if the key specified is missing:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RUBY_VERSION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;ruby-2.3.1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A python dict raises an exception:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/venv/bin/../lib/python3.7/os.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;678&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__getitem__&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RAILS_ENV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RUBY_VERSION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'ruby-2.3.1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The ruby way around this would be to use try or the safe navigation operator:&lt;/p&gt;

&lt;p&gt;https://stackoverflow.com/questions/46390057/from-ruby-to-python-is-there-an-equivalent-of-try&lt;/p&gt;

&lt;h2 id=&quot;the-blank-for-writing-the-next-entry&quot;&gt;The Blank for Writing the Next Entry&lt;/h2&gt;

&lt;p&gt;The ruby is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The python is:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/12/11/ruby-to-python-translation-guide.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/12/11/ruby-to-python-translation-guide.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>A Week of Whole 30 Meals From My Recipes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9141.jpeg&quot; alt=&quot;IMG_9141.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My eldest son needs to lose abut 15 pounds before he leaves for boot camp in the Marines.  So here is a week of Whole 30 Meals planned out for him.  Here are &lt;a href=&quot;IMG_9141.jpeg&quot;&gt;more details on Whole 30&lt;/a&gt; (scroll down about 1/2 way).&lt;/p&gt;

&lt;h2 id=&quot;monday&quot;&gt;Monday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: 3 &lt;a href=&quot;https://fuzzyblog.io/recipes/eggs/2017/03/07/squishy-eggs.html&quot;&gt;Squishy Eggs&lt;/a&gt;, Black Coffee&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Grilled Chicken Breast, Baked potato with Olive Oil (no dairy), Salad with homemade dressing&lt;/li&gt;
  &lt;li&gt;Snack: handful of cashews&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tuesday&quot;&gt;Tuesday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: 2 Fried Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Garlicky Pork Chops, &lt;a href=&quot;https://fuzzyblog.io/recipes/side_dish/2017/03/10/gluten-free-havilah-s-roasted-carrots-with-changes-by-scott.html&quot;&gt;Roasted Carrots&lt;/a&gt;, Salad&lt;/li&gt;
  &lt;li&gt;Snack: Mixed Nuts; no Peanuts&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wednesday&quot;&gt;Wednesday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Scrambled Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Burger patty, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Steak, Broccoli, Salad&lt;/li&gt;
  &lt;li&gt;Snack: Terra Chips&lt;/li&gt;
  &lt;li&gt;Sweet: Lara bar&lt;/li&gt;
  &lt;li&gt;Reward: Apple&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thursday&quot;&gt;Thursday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Omelet&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Burger, Hash Browns&lt;/li&gt;
  &lt;li&gt;Snack: Cashews, Mixed Nuts&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;friday&quot;&gt;Friday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Scrambled Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard boiled eggs, nuts, fruit&lt;/li&gt;
  &lt;li&gt;Dinner: Steak, Left Over Hash Browns, Sautéed Bell Peppers and Onions&lt;/li&gt;
  &lt;li&gt;Snack: Lara Bar&lt;/li&gt;
  &lt;li&gt;Sweet: Berries&lt;/li&gt;
  &lt;li&gt;Reward: Dates&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;saturday&quot;&gt;Saturday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Omelet&lt;/li&gt;
  &lt;li&gt;Lunch: Burgers Wrapped in Lettuce&lt;/li&gt;
  &lt;li&gt;Dinner: Left Over Steak, Mashed Potatoes Made with Chicken Broth&lt;/li&gt;
  &lt;li&gt;Snack: Cashews&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sunday&quot;&gt;Sunday&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Breakfast: Fried Eggs&lt;/li&gt;
  &lt;li&gt;Lunch: Hard Boiled Eggs, Salad&lt;/li&gt;
  &lt;li&gt;Dinner: Meat Loaf, Mashed Potatoes&lt;/li&gt;
  &lt;li&gt;Snack: Lara Bar&lt;/li&gt;
  &lt;li&gt;Sweet: Lara Bar&lt;/li&gt;
  &lt;li&gt;Reward: Berries&lt;/li&gt;
  &lt;li&gt;Beverage: LaCroix Water&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/change/2019/12/08/a-week-of-whole-30-meals-from-my-recipes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/change/2019/12/08/a-week-of-whole-30-meals-from-my-recipes.html</guid>
        
        <category>change</category>
        
        <category>weight_loss</category>
        
        <category>whole30</category>
        
        
        <category>change</category>
        
      </item>
    
      <item>
        <title>Dear Bootstrap Why Aren't My Tables Full Width</title>
        <description>&lt;p&gt;Perhaps I shouldn't have insomnia and then code into the wee hours because this is an exchange that I can see happening if only I could email Bootstrap in the style of Ann Landers …&lt;/p&gt;

&lt;p&gt;Dear Bootstrap,&lt;/p&gt;

&lt;p&gt;I was hoping that you could explain to me why my tables of data aren't full width.&lt;/p&gt;

&lt;p&gt;Here's an example which isn't full width:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/bootstrap_with_table.png&quot; alt=&quot;bootstrap_with_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here's an example which is:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/bootstrap_without_table.png&quot; alt=&quot;bootstrap_without_table.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The difference between the two bits of markup is:&lt;/p&gt;

&lt;p&gt;The non full width one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table table-condensed table-hover table-striped&quot; style=&quot;width:100%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The full width one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table-condensed table-hover table-striped&quot; style=&quot;width:100%&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's an example of what this looks like in full:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/table_full_width.png&quot; alt=&quot;table_full_width.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thank you.
Confused Web Developer that Struggles Mightily with CSS&lt;/p&gt;

&lt;p&gt;Dear Confused Web Developer that Struggles Mightily with CSS,&lt;/p&gt;

&lt;p&gt;I'd love to explain this to you but I also find the bootstrap table model confusing as heck.  What I can tell you is that, for reasons, I don't understand, adding table seems to have two effects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it improves the lines between the data&lt;/li&gt;
  &lt;li&gt;it sets a margin on the table to inset it from the left and right borders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, no, I can't tell you how to work around this but what I can tell you is this:&lt;/p&gt;

&lt;p&gt;When you want a table to span the full width then omit the table class and just use table-condensed.  And, yes, you're going to lose the nice lines; so sorry; nothing can be done here.&lt;/p&gt;

&lt;p&gt;And I'd direct you to my &lt;a href=&quot;https://getbootstrap.com/docs/4.0/content/tables/&quot;&gt;table documentation&lt;/a&gt; where you can find this discussed in full but there's simply no mention of it anywhere in there so I'd assume that even we don't understand this.&lt;/p&gt;

&lt;p&gt;My sincere apologies …&lt;/p&gt;

&lt;p&gt;Bootstrap 4, Your Friendly Neighborhood CSS Grid&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/12/07/dear-bootstrap-why-aren-t-my-tables-full-width.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/12/07/dear-bootstrap-why-aren-t-my-tables-full-width.html</guid>
        
        <category>bootstrap</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Scott's Approach to Weight Loss</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_4203.jpeg&quot; alt=&quot;IMG_4203.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;About two years ago, I lost 20 pounds.  I compared experiences recently with a friend who had lost a bunch of weight and our experiences were so different that I thought I'd write them down.  I'm also writing this down because my eldest son just enlisted in the Marines and he needs to drop weight before he goes to boot camp.&lt;/p&gt;

&lt;p&gt;Here's what worked for me:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Weigh Yourself Every Day&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Whole 30&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Zero App&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exercise At Least 3 times Per Week&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No Dining Out&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these is discussed below.&lt;/p&gt;

&lt;h2 id=&quot;weigh-yourself-every-day&quot;&gt;Weigh Yourself Every Day&lt;/h2&gt;

&lt;p&gt;I'm an engineer, not a weight loss person, but, to my way of thinking, if you're going to try and lose weight then you need a metric and that metric is &lt;strong&gt;your weight&lt;/strong&gt;.  I've now been weighing myself daily since 2017 and I can tell you that weighing daily really helps prevent you from gaining weight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If you need a way to track your weight on a daily basis, reach out to me.  I have a new product coming out that helps with this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: If you are going to weigh daily then you need to come up with a standard approach.  For me that is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Wake up.&lt;/li&gt;
  &lt;li&gt;Use the bathroom.&lt;/li&gt;
  &lt;li&gt;Weigh; always using the same scale.&lt;/li&gt;
  &lt;li&gt;Log my weight.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;whole-30&quot;&gt;Whole 30&lt;/h2&gt;

&lt;p&gt;I used the Whole 30 approach to diet.  This basically boils down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Whole Foods - simple proteins and vegetables&lt;/li&gt;
  &lt;li&gt;Nothing artificial; everything made from scratch right down to mayonnaise&lt;/li&gt;
  &lt;li&gt;No sugar at all including sugar, honey, maple syrup, etc.&lt;/li&gt;
  &lt;li&gt;No grains&lt;/li&gt;
  &lt;li&gt;No alcohol&lt;/li&gt;
  &lt;li&gt;No beans / legumes&lt;/li&gt;
  &lt;li&gt;No dairy (including milk, cheese, yogurt, butter)&lt;/li&gt;
  &lt;li&gt;No beverages other than water&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the quick list of what you can eat:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vegetables including potatoes (but not corn as that's a grain)&lt;/li&gt;
  &lt;li&gt;Fruits but in moderation&lt;/li&gt;
  &lt;li&gt;Unprocessed Meats&lt;/li&gt;
  &lt;li&gt;Seafood both fish and shellfish&lt;/li&gt;
  &lt;li&gt;Nuts and Seeds but not peanuts (legumes)&lt;/li&gt;
  &lt;li&gt;Olive Oil&lt;/li&gt;
  &lt;li&gt;Coffee (but black; no sugar, no dairy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a good reference to &lt;a href=&quot;https://www.thekitchn.com/what-you-can-and-cant-eat-on-whole30-239838&quot;&gt;Whole 30&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only sweet that I had on Whole 30 was Lara Bars (which are mostly made of cashews) and fruits / dates.  The only drink I had other than water was LaCroix sparkling waters.&lt;/p&gt;

&lt;h2 id=&quot;zero-app&quot;&gt;Zero App&lt;/h2&gt;

&lt;p&gt;One of the more interesting things I did was use an app called the Zero app:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apps.apple.com/us/app/zero-fasting-tracker/id1168348542&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.zerofasting.zero&amp;amp;hl=en_US&quot;&gt;Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of Zero app is that if you give your body more time to digest the food you consume then you will metabolize it better.  I focused on reducing my eating window to lunch and an early dinner (i.e. 5 or 6).  This reduced the window I ate in down to 17 to 18 hours.  And while this is initially hard, after the first few days, it actually isn't bad.&lt;/p&gt;

&lt;h2 id=&quot;exercise&quot;&gt;Exercise&lt;/h2&gt;

&lt;p&gt;I've never been a big exercise person but I did do 15 to 20 minutes on an elliptical 2 or 3 times per week.&lt;/p&gt;

&lt;h2 id=&quot;dining-out---just-say-no&quot;&gt;Dining Out - Just Say No!&lt;/h2&gt;

&lt;p&gt;I know that the U.S. has moved to a food culture that is largely based around dining outside the home / your personal kitchen.  If you're going to do Whole 30 then you pretty much can't dine out at all.  There is the rare occasion when you can find something simple like a piece of broiled fish or a steak but most restaurant dining is optimized towards flavor and that generally means copious amounts of butter / fat / sugar.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/change/2019/12/06/scott-s-approach-to-weight-loss.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/change/2019/12/06/scott-s-approach-to-weight-loss.html</guid>
        
        <category>change</category>
        
        <category>weight_loss</category>
        
        <category>whole30</category>
        
        
        <category>change</category>
        
      </item>
    
      <item>
        <title>Startup Learnings - What Taylor Williams Taught Me</title>
        <description>&lt;p&gt;&lt;img src=&quot;/blog/assets/IMG_0469.jpeg&quot; alt=&quot;IMG_0469.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Code Cat watches disapprovingly as I work …&lt;/p&gt;

&lt;p&gt;The bulk of my career has been spent at the &lt;strong&gt;small&lt;/strong&gt; scale of the startup universe – companies with 15 people or less; often a lot less; more than a few times, I've been the &lt;em&gt;only&lt;/em&gt; engineer. I have done three stints with companies at or near the three figure number of employees: Dataware, Mascot Network and Seas Education.  One of the characteristics of working at the small scale of startups is that what matters is &lt;em&gt;results&lt;/em&gt;.  How you do it generally doesn't matter – that you do it &lt;em&gt;does matter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And, perhaps unsurprisingly, this can lead to some bad things when it comes to &lt;em&gt;engineering processes&lt;/em&gt;.  To this point, I've actually been dubbed &quot;the anti process&quot; in at least one organization I spent some time at.  So keep that in mind as you read on …&lt;/p&gt;

&lt;p&gt;I'm actively working on an (unlaunched) side project and I noticed this today:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/500_pull_requests.png&quot; alt=&quot;500_pull_requests.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That's from the repo on my side project and it indicates that I've created &lt;em&gt;500&lt;/em&gt; pull requests (this was tied to issue #444 which only got merged this morning; the current issue number is 501.  Issue 444 was a major refactor that has been a long coming.&lt;/p&gt;

&lt;p&gt;I'd like to joke that aggressively using pull requests, even on an unlaunched, personal side project, is &quot;how Mother Johnson taught me to do open source&quot; but that would be an untruth.  This is a &lt;a href=&quot;https://fuzzyblog.io/blog/tag.html#learnings&quot;&gt;Startup Learnings&lt;/a&gt; post and I learned this from &lt;strong&gt;Taylor Williams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Taylor Williams is currently the head of software engineering for &lt;a href=&quot;https://www.seaseducation.com&quot;&gt;Seas Education&lt;/a&gt;, a SAAS product focused on record keeping for special education.  I worked for Seas for about 18 months during which time I focused on AWS infrastructure, deployment, Ansible and back end features.  When I came into Seas, Taylor was still a bit on the junior side but I watched him grow and develop as he took on a larger and larger role, culminating in a promotion where he took on leadership of all software engineering, across all product lines.&lt;/p&gt;

&lt;p&gt;What Taylor taught me was git discipline, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All development is done in feature branches tied to a ticket number&lt;/li&gt;
  &lt;li&gt;Feature branches should be atomic and only include changes specific to that ticket&lt;/li&gt;
  &lt;li&gt;The develop branch accepts changes from a feature branch once the tests pass&lt;/li&gt;
  &lt;li&gt;The master branch is always pristine and can be deployed at any time&lt;/li&gt;
  &lt;li&gt;Pull requests are how you merge your feature branch into develop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I actually believe in this process so thoroughly that I &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;documented it&lt;/a&gt; for anyone who works on my side project.  And I've brought it into my current consulting engagement.&lt;/p&gt;

&lt;p&gt;Now I've been using version control for a long time (I started with &lt;a href=&quot;https://en.wikipedia.org/wiki/PVCS&quot;&gt;PVCS&lt;/a&gt;) but I've &lt;strong&gt;never&lt;/strong&gt; had this kind of discipline before my time at Seas.  Taylor had no problem saying to me what amounted to &quot;Dude - you're doing it wrong; we do it this way.&quot;  And I'll admit that I didn't like hearing that because I'm a pretty senior technical guy and criticism can be hard.  But Taylor did it well and I listened and &lt;strong&gt;he was right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I've now brought over 7,000 lines of brand new code into the world using this approach so I think I've pretty firmly adopted it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ bundle exec rake stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1757 |   1155 |      28 |     136 |   4 |     6 |
| Helpers              |    490 |    382 |       0 |      49 |   0 |     5 |
| Jobs                 |      2 |      2 |       1 |       0 |   0 |     0 |
| Models               |   2980 |   1709 |      27 |     189 |   7 |     7 |
| Mailers              |      4 |      4 |       1 |       0 |   0 |     0 |
| Channels             |      8 |      8 |       2 |       0 |   0 |     0 |
| JavaScripts          |   4351 |   3599 |       0 |     183 |   0 |    17 |
| Libraries            |   1446 |    929 |       0 |       9 |   0 |   101 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |  11038 |   7788 |      59 |     566 |   9 |    11 |
+----------------------+--------+--------+---------+---------+-----+-------+
  Code LOC: 7788     Test LOC: 0     Code to Test Ratio: 1:0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There are tests; rspec tests don't show up here; my test ratio isn't great yet but it is a work in progress:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name '*.rb' | xargs wc -l
     115 ./spec_helper.rb
  ...
    1720 total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So thank you Taylor for breaking my &quot;anti process&quot; tendencies.  I am much, much happier with my code management practices now.&lt;/p&gt;

&lt;p&gt;And, in closing, I would be remiss in not thanking my former pairing partner, &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; for fixing some of the git mishaps that occurred on the way down this learning process.  Thanks Sean!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/12/04/startup-learnings-what-taylor-williams-taught-me.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/12/04/startup-learnings-what-taylor-williams-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>git</category>
        
        <category>taylor_williams</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>What is the President's Role in a Stage Zero Startup?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9167.jpeg&quot; alt=&quot;IMG_9167.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is another one of those &quot;Tales from the Past&quot; blog posts where something kicked off a memory.  In this case, I was at a conference and talking with someone who was President of a startup and they weren't quite sure what to do.  They had found themselves, at a very early stage, sidelined in their own venture and pigeon holed into a tiny portion of the business.  And, keep in mind, that they did have specialized domain knowledge of that portion but still …&lt;/p&gt;

&lt;p&gt;As I listened to them talk, I had a terribly blunt and not politically correct message for them.  They encouraged me to be direct and so, I'm going to be mildly offensive here (bear in mind that I was talking to a woman when I said this a bunch of years ago):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Strap your balls on and be the damn President&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I said that a bunch of years ago and while I find it more offensive today, I believe that it is still good advice.  But before we get to that, let's talk about the &quot;stages&quot; of a startup.&lt;/p&gt;

&lt;h2 id=&quot;the-stages-of-a-startup&quot;&gt;The Stages of a Startup&lt;/h2&gt;

&lt;p&gt;Startups exist at all types of &quot;stages&quot;. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stage Zero&lt;/li&gt;
  &lt;li&gt;Angel Funded&lt;/li&gt;
  &lt;li&gt;Seed Funded&lt;/li&gt;
  &lt;li&gt;Venture Funded&lt;/li&gt;
  &lt;li&gt;Pre IPO&lt;/li&gt;
  &lt;li&gt;Mature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every one of these stages is different but the President's role, in a Stage Zero startup is particularly important:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The President's role in a Stage Zero startup is very, very simple.  The President does whatever is needed to will the startup into existence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's a Scott Johnson quote; I said this.  And I can say it, with a high degree of authority, because I've done it multiple times in my life.  When I started my first software company, I was 19 and I dropped out of college to create hypertext linking software (this was 4 years before Tim Berners Lee created the world wide web).  When I say &quot;will it into existence&quot;, I know what I'm saying because when I did this, I wasn't a programmer or a software engineer; I simply wanted to create this product.  Creating that company, NTERGAID, was literally an act of will.&lt;/p&gt;

&lt;p&gt;And, despite all the pain that goes into a Stage Zero startup, one of my favorite stages in a startup is what I refer to as &lt;strong&gt;Stage Zero&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-stage-zero-for-a-startup&quot;&gt;What is Stage Zero for a Startup?&lt;/h2&gt;

&lt;p&gt;As I look at startups, Stage Zero is what you have – before you have anything.  Stage Zero can mean:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 guys around a placemat in a restaurant idly dreaming&lt;/li&gt;
  &lt;li&gt;A business plan that you haven't shown anyone&lt;/li&gt;
  &lt;li&gt;A team that isn't yet operating&lt;/li&gt;
  &lt;li&gt;A pile of code and a running website that isn't really a business yet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In essence, Stage Zero is what you have &lt;strong&gt;before you start&lt;/strong&gt;.  You don't have investors, you don't have customers, you don't have product-market fit and you generally don't even have a product.&lt;/p&gt;

&lt;h2 id=&quot;what-does-a-president-do-at-stage-zero&quot;&gt;What Does a President Do at Stage Zero?&lt;/h2&gt;

&lt;p&gt;When you come to a startup leadership position from a mature industry, you often have the idea that you have a specific tasks or tasks in front of you.  In a startup that simply isn't true.  Here's what a President does in a Stage Zero startup:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;They do whatever it takes to come to market.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An expression that I personally love is &lt;a href=&quot;https://en.wikipedia.org/wiki/Root_hog,_or_die&quot;&gt;Root, Hog or Die&lt;/a&gt; which, according to Wikipedia, is &quot;an idiomatic expression for self-reliance&quot;.  And that's the nature of being President of a startup, you have to be self reliant because there aren't the other people around to do things that exist in a mature organization.&lt;/p&gt;

&lt;p&gt;On any given morning in a startup, the President's tasks might include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Settling a dispute between engineering (ok; the one engineer you have hired) and &quot;product management&quot; (the one person who owns the product vision)&lt;/li&gt;
  &lt;li&gt;Editing copy on the website&lt;/li&gt;
  &lt;li&gt;Cleaning the bathroom&lt;/li&gt;
  &lt;li&gt;Arranging for food for the people that are staying late tonight&lt;/li&gt;
  &lt;li&gt;Worrying about funding and burn rate&lt;/li&gt;
  &lt;li&gt;Figuring out the go to market strategy&lt;/li&gt;
  &lt;li&gt;Negotiating strategic alliances&lt;/li&gt;
  &lt;li&gt;Having a conversation with a new hire about something uncomfortable like the fact that they smell and other staffers have complained (this actually happened to me)&lt;/li&gt;
  &lt;li&gt;Recruiting the next hire(s)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Getting a startup out of Stage Zero means solving a thousand, thousand problems both small and large.  And classical business training says that management is a specialized skill where you get to worry mostly about the big picture.  That simply isn't the case in a Stage Zero startup.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/12/03/what-is-the-president-s-role-in-a-stage-zero-startup.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/12/03/what-is-the-president-s-role-in-a-stage-zero-startup.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Starbase Indy / SBI Engineering Post Mortem for 2019</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9451.jpeg&quot; alt=&quot;IMG_9451.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This document is a &quot;post mortem&quot;.  I generally write these after any significant project I'm involved in ends.  The idea is to capture the good (What Worked), the bad (What Didn't Work) and the next (Changes for Next Year).  I am writing this as a public document on my personal blog so that it is accessible for next year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the very term SBI means nothing to you, dear reader, then just move on.  SBI is short for Starbase Indy, a local to Indianapolis, science fiction / star trek / STEM convention (con) held annually over Thanksgiving.  I headed up engineering for the con for 2019 when we deployed a new &quot;bridge&quot; (stage backdrop that looks like a starship bridge.  Here are some pictures for reference:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0443.jpeg&quot; alt=&quot;IMG_0443.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0407.jpeg&quot; alt=&quot;IMG_0407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0441-2.jpg&quot; alt=&quot;IMG_0441-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This last pic is courtesy of Samantha Waltz; Thank you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This document was written with assistance from my wife Shelley.  I could not have done this without her support and competent assistance.  Thank you.&lt;/p&gt;

&lt;h2 id=&quot;what-worked&quot;&gt;What Worked&lt;/h2&gt;

&lt;p&gt;Here's what worked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The new bridge looked amazing.&lt;/li&gt;
  &lt;li&gt;Attaching the bridge panels by zip ties was generally a huge success&lt;/li&gt;
  &lt;li&gt;Attaching the screens in front of the panels (as opposed to a cut thru, behind) was a success.  And it preserves our ability to upgrade / replace monitors if something happens to the current ones.&lt;/li&gt;
  &lt;li&gt;Applying gaffers tape to the intersection of the bridge panels was essential (thanks Dave).&lt;/li&gt;
  &lt;li&gt;The new decals for the bridge panels were lovely; thanks go out to Emily Grumble for design and implementation and Lillian Sams for the donation to fund them.&lt;/li&gt;
  &lt;li&gt;Joseph Campbell of &quot;Signs from the Emissary&quot; was a huge assistance in getting the bridge decals in place at the very last minute; thank you Joe!&lt;/li&gt;
  &lt;li&gt;Assembling the initial bridge components goes faster if you put them on their back.&lt;/li&gt;
  &lt;li&gt;Tear down was fast with a speed of 4 hours and 13 minutes from start to return of the U-Haul.&lt;/li&gt;
  &lt;li&gt;The 26 foot U-Haul truck is actually needed to transport everything.  Never rent smaller.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-didnt-work&quot;&gt;What Didn't Work&lt;/h2&gt;

&lt;p&gt;Here is what didn't work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The holes for attaching the bridge panels via zip ties aren't positioned well so getting them in in a few places kinda sucks; I doubt this can be fixed now but its annoying.&lt;/li&gt;
  &lt;li&gt;Knowing the order to attach the bridge panels in is key.  Our first attempt to assemble the panels was a complete fail.  Here is the right order: Keyboard Panels, Bottom Panels, Top Panels, Screen Panels (after the monitors have been affixed).&lt;/li&gt;
  &lt;li&gt;A 26 foot truck cannot be backed into the loading dock of the Indianapolis Wyndam East Ballroom.  Don't even try; just carry stuff down the ramp.&lt;/li&gt;
  &lt;li&gt;More people for the tear down would have been useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;changes-for-next-year&quot;&gt;Changes for Next Year&lt;/h2&gt;

&lt;p&gt;Here's what I'd change for next year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write assembly documentation / shoot assembly videos; only 1 person, for example, knew how to assemble the turbolift doors.&lt;/li&gt;
  &lt;li&gt;The holodeck arch is a disaster to assemble.  Either documentation or improvements are needed.  Having a set of videos that volunteers could watch before hand would be great.&lt;/li&gt;
  &lt;li&gt;The holodeck arch needs a better light diffuser than the piece of white butchers paper I shoved into it at the 11th hour.&lt;/li&gt;
  &lt;li&gt;I'd add black pinstripe tape to the vertical line where the zip ties go so we don't have to paint them furiously at the last minute.&lt;/li&gt;
  &lt;li&gt;We need to tell volunteers to bring work gloves.&lt;/li&gt;
  &lt;li&gt;Make public facebook events for setup and teardown to encourage participation.  Thank you Sooz for this idea.&lt;/li&gt;
  &lt;li&gt;A hand truck or dolly HAS TO GO TO THE STORAGE UNIT for load out / load in. We forgot this for load out and it was painful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank You's&lt;/h2&gt;

&lt;p&gt;In an epic management fail on my part, I do not have everyone's name to thank them but here's a try.  Thank you to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shelley Johnson&lt;/li&gt;
  &lt;li&gt;Timo Von Burkowski &quot;The Superstar At the Last Minute&quot;&lt;/li&gt;
  &lt;li&gt;Dave Mott&lt;/li&gt;
  &lt;li&gt;Johnny&lt;/li&gt;
  &lt;li&gt;Matt &quot;Dr. Picardo&quot;&lt;/li&gt;
  &lt;li&gt;Donna&lt;/li&gt;
  &lt;li&gt;Andy Sams&lt;/li&gt;
  &lt;li&gt;Chris Topher&lt;/li&gt;
  &lt;li&gt;Casey Huber&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My apologies to anyone I left out.  These are mostly the people who struck the set and did load out since my memory of setup is largely gone at this point.  If your name should be here and isn't then please reach out to me and I'll add it.&lt;/p&gt;

</description>
        <pubDate>Mon, 02 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/sbi/2019/12/02/starbase-indy-sbi-engineering-post-mortem-for-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sbi/2019/12/02/starbase-indy-sbi-engineering-post-mortem-for-2019.html</guid>
        
        <category>sbi</category>
        
        <category>con</category>
        
        
        <category>sbi</category>
        
      </item>
    
      <item>
        <title>Using a Cron Job to Run Rake Tasks Inside Your Docker Container</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9341.jpeg&quot; alt=&quot;IMG_9341.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despite cron being an age old *nix technology, it alway seems like  scheduling tasks is an annoying thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;https://crontab.guru/&quot;&gt;Cron&lt;/a&gt; is the standard *nix technology for running tasks on a recurring basis like &quot;every monday at 5 am execute this program&quot;.&lt;/p&gt;

&lt;p&gt;We are now doing things like running tasks within containers and that raises the question of where does cron exist:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;within the container?&lt;/li&gt;
  &lt;li&gt;at the OS level?&lt;/li&gt;
  &lt;li&gt;what about multiple instances of the container across different machines?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not going to try and address the bigger picture questions here like multiple instances but I can show you how to use cron at the OS level to drive a rake task within a container.&lt;/p&gt;

&lt;h2 id=&quot;how-do-you-run-something-within-in-a-container&quot;&gt;How Do You Run Something Within in a Container&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that you can easily execute a shell with in a container, from the outside, with this syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it CONTAINER_HASH /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The CONTAINER_HASH is the docker equivalent of a *nix pid (process identifier).&lt;/p&gt;

&lt;h2 id=&quot;how-to-run-a-rake-task&quot;&gt;How to Run a Rake Task&lt;/h2&gt;

&lt;p&gt;And if you can run a shell like /bin/bash within a container from the outside then, &lt;em&gt;drum roll please&lt;/em&gt;, you can easily run anything from outside including a Rake task.  And if you have that then you can easily schedule it.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it 8d76da4ab481  bundle exec rake data_source:update_or_initial_load --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The 8d76da4ab481, shown above, is an example of the CONTAINER_HASH.&lt;/p&gt;

&lt;h2 id=&quot;but-docker-container-hashes-change&quot;&gt;But Docker Container Hashes Change…&lt;/h2&gt;

&lt;p&gt;If you think about this a bit there is one real problem – that damn CONTAINER_HASH isn't consistent.  It changes every time the container is restarted.  The trick to making a cron job that runs your rake task is to use a shell script which pulls the container hash dynamically.  And to figure that you we are going to start with my &lt;a href=&quot;https://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html&quot;&gt;dockerbash blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the shell script from the dockerbash post:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You need to specify the name of the container you want to get into like:&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dockerbash police&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | grep &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; /bin/bash
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's create another shell script calling it, say, docker_datasource_update:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | grep police | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rake data_source:update_or_initial_load --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is for an application which has the word 'police' in its name hence the above grep for the word police.&lt;/p&gt;

&lt;p&gt;Let's say that this is now stored in /usr/local/bin/docker_datasource_update.  You then need to write a cron job to call it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# m h  dom mon dow   command
0 7 * * * /usr/local/bin/docker_datasource_update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Add the crontab above with &lt;strong&gt;crontab -e&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/29/using-a-cron-job-to-run-rake-tasks-inside-your-docker-container.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/29/using-a-cron-job-to-run-rake-tasks-inside-your-docker-container.html</guid>
        
        <category>docker</category>
        
        <category>rails</category>
        
        <category>rake</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>How to Win the Thanksgiving Meal War</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_0476.jpeg&quot; alt=&quot;IMG_0476.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I'm a software engineer by profession with a history of large scale project management and a focus on dependency management.  I'm also a food nerd so I take the holiday meal seriously; perhaps too damn seriously.  Apologies ???  But seriously, just one of these tips may make your holiday meal cooking easier.  See the second bulleted list for the tldr (&quot;too long; did not read&quot;).&lt;/p&gt;

&lt;p&gt;There's no question in my mind that cooking the Thanksgiving meal is the &lt;em&gt;World War II&lt;/em&gt; of holiday meals.  When you have other holidays there is a focus besides the food:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Christmas has presents&lt;/li&gt;
  &lt;li&gt;Easter has religious significance&lt;/li&gt;
  &lt;li&gt;Passover has religious significance&lt;/li&gt;
  &lt;li&gt;Fourth of July has patriotism and parades&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But Thanksgiving is a celebration that is about the food as it is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Harvest_festival&quot;&gt;harvest festival&lt;/a&gt;.  And with the propensity that people have for wanting their particular, favorite side dish, that only increases the focus on cooking.  And that's why, every year, I feel as if making the Thanksgiving meal is my &quot;go to war&quot; meal (and I don't mind that; it is my favorite meal to cook all year long).&lt;/p&gt;

&lt;p&gt;As I write this, I'm preparing to make my 16th consecutive Thanksgiving meal for my wife and children.  And, over, these many, many years, I have developed a number of techniques that make cooking the Thanksgiving meal much, much easier.&lt;/p&gt;

&lt;p&gt;Here are my recommendations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Print Out Recipes in Advance&lt;/li&gt;
  &lt;li&gt;Plan Your Heat Sources&lt;/li&gt;
  &lt;li&gt;The Longest Cooking Time is Your Biggest Constraint&lt;/li&gt;
  &lt;li&gt;Plan Your Timings&lt;/li&gt;
  &lt;li&gt;Plan Who Does What&lt;/li&gt;
  &lt;li&gt;Food Allergies and Practicality&lt;/li&gt;
  &lt;li&gt;Buy an Alexa and Use it for Timings&lt;/li&gt;
  &lt;li&gt;Do Prep Work on Tuesday / Wednesday&lt;/li&gt;
  &lt;li&gt;Wash Dishes Continuously&lt;/li&gt;
  &lt;li&gt;Set a Place for Each Thing You Are Cooking&lt;/li&gt;
  &lt;li&gt;Check the Microwave Before You Sit Down&lt;/li&gt;
  &lt;li&gt;Buy Extra Tupperware To Send Leftovers Away&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these is covered further below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I could easily have titled this article &quot;How an Engineer Cooks Thanksgiving&quot; or, even, &quot;How a Very, Very Nerdy Engineer with a Background in Project Management and Dependencies Cooks Thanksgiving&quot;.  Here's a picture of a cute cat to make up for the massive upcoming descent into food nerd-dom:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9444.jpeg&quot; alt=&quot;IMG_9444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;print-out-recipes-in-advance&quot;&gt;Print Out Recipes in Advance&lt;/h2&gt;

&lt;p&gt;If you buy into my assertion that Thanksgiving is the World War II of holiday cooking then recipes are your &lt;strong&gt;tactical maps&lt;/strong&gt;.  Your recipes guide your way through the holiday meal and as with maps, you want a &lt;strong&gt;printed copy&lt;/strong&gt;.  Yes a phone is great.  A laptop or tablet is even better.  But when the power goes out -or- the Internet goes offline, don't you want paper?  And do you really want gravy spilled on your screen?  Make a print out of every recipe you want to cook – &lt;strong&gt;before&lt;/strong&gt; you start cooking.&lt;/p&gt;

&lt;h2 id=&quot;plan-your-heat-sources&quot;&gt;Plan Your Heat Sources&lt;/h2&gt;

&lt;p&gt;Your primary constraint in cooking a big holiday meal is always, &lt;em&gt;always&lt;/em&gt;, &lt;strong&gt;always&lt;/strong&gt; the number of &lt;em&gt;heat sources&lt;/em&gt;.  If you think about it, most kitchens have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 oven&lt;/li&gt;
  &lt;li&gt;4 burners (and not all of them tend to work)&lt;/li&gt;
  &lt;li&gt;1 microwave&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider the problem of the turkey and the pies.  All of these require the oven and the turkey requires exclusive use of the oven for an extended period.  Understanding what heat sources you have and how long each dish using them for is important.  What I do is make a list of all the dishes with a plan for what heat source that each dish uses.  Here's a picture of what this looked like a few years ago:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: An outdoor grill can be used to keep food warm if needed.  And outdoor grills with side burner are an additional burner!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Reviewer Ariane Woods made the cogent observation &quot;I'll also add that smoking my turkey has been a game changer as it frees up an oven&quot;.  As someone who is a recovered member of the &quot;Cult of the Smoked Turkey&quot;, I can attest to the truth of this statement.  Another option in this vein is the (insanely dangerous) deep fried turkey.&lt;/p&gt;

&lt;h2 id=&quot;the-longest-cooking-time-is-your-biggest-constraint&quot;&gt;The Longest Cooking Time is Your Biggest Constraint&lt;/h2&gt;

&lt;p&gt;When I plan a big holiday meal, I always orient it around the &lt;strong&gt;single longest cooking time&lt;/strong&gt;.  And, for Thanksgiving, that's pretty simple – it is the turkey.  So I start with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Turkey - 4 Hours at 350 (or whatever)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I then use that to structure &lt;strong&gt;everything&lt;/strong&gt; so:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For a 2 pm meal, the turkey needs to start at 10 am.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And there are related dependencies:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gravy uses turkey drippings and takes roughly 15 minutes so that 10 am needs to become 9:45.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And, finally, pre-heating is a reality so you get:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Start preheating the oven at 9:30&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;plan-your-timings&quot;&gt;Plan Your Timings&lt;/h2&gt;

&lt;p&gt;With the exception of soups, stews and desserts that need to chill, the best food is always food that is finished cooking just when you are ready to eat it.  The problem here, is that given the constraints above on heat sources, you simply can't have all the dishes becoming ready at exactly the right time.  And this is ok – depending on the dish.  Here's an example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mashed potatoes pretty much don't degrade over time so they can be made almost whenever.&lt;/li&gt;
  &lt;li&gt;Gluten free gravy has a tendency to sometimes become close to solid after it sits for a long time so gluten free gravy is always the last thing I prepare&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plan-who-does-what&quot;&gt;Plan Who Does What&lt;/h2&gt;

&lt;p&gt;I don't know any adult who would disagree with the statement that &lt;em&gt;holidays are stressful&lt;/em&gt;.  One of the ways to manage the stress is to plan out who does what in the kitchen.  This way you can avoid the difficult relative who wants to help all over the place when they are actually only skilled at a few things.  I call this the &quot;No, Aunt Martha, I need you on whipped cream; that's what's on my schedule.&quot; school of thinking.&lt;/p&gt;

&lt;h2 id=&quot;the-master-spreadsheet&quot;&gt;The Master Spreadsheet&lt;/h2&gt;

&lt;p&gt;This year's Thanksgiving is now up to 12 people definite, a few people that may show up and over &lt;em&gt;insert large number here&lt;/em&gt; food dishes broken out into these categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appetizers&lt;/li&gt;
  &lt;li&gt;Protein&lt;/li&gt;
  &lt;li&gt;Sides&lt;/li&gt;
  &lt;li&gt;Libations&lt;/li&gt;
  &lt;li&gt;Breads&lt;/li&gt;
  &lt;li&gt;Desserts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd like to say that this doesn't require a spreadsheet to stay organized – but it does.  &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1up7YK4TyjXYO08rpmN1wId3YiuZUPplgw1y-RtCDtjc/edit?usp=sharing&quot;&gt;Enjoy the Madness&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;food-allergies-and-practicality&quot;&gt;Food Allergies and Practicality&lt;/h2&gt;

&lt;p&gt;If you have people in your life with food allergies such as gluten free / celiac, then, at a minimum, you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Understand the rules of what can touch what&lt;/li&gt;
  &lt;li&gt;Always have plenty of clean food handling implements&lt;/li&gt;
  &lt;li&gt;Know when to have clean butter (the most common contamination issue)&lt;/li&gt;
  &lt;li&gt;Use &lt;strong&gt;gravity&lt;/strong&gt; to help you – place bready things such as dinner rolls in the oven &lt;em&gt;below&lt;/em&gt; anything that might get contaminated as crumbs don't generally fall up&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;buy-an-alexa-and-use-it-for-timings&quot;&gt;Buy an Alexa and Use it for Timings&lt;/h2&gt;

&lt;p&gt;The single best thing I've done, in the past 5 years, to make cooking easier was to buy an Alexa.  When you are juggling multiple dishes, the ability to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alexa set a 30 minute timer named &quot;Pecan Pie&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;just makes everything so, so, so much easier.  If you don't have an Alexa in your kitchen before you make a holiday meal, you re really making your life harder.&lt;/p&gt;

&lt;h2 id=&quot;set-a-place-for-each-thing-you-cook&quot;&gt;Set a Place for Each Thing You Cook&lt;/h2&gt;

&lt;p&gt;This tip is stupid simple but it actually makes a difference.  When you are making a lot of different dishes (my Thanksgiving is embarrassingly large at 15 dishes; yes I could each different pie as a different dish), it is very, very helpful to &quot;set a place&quot; for each dish.  What I mean by this is you take a half sheet of paper, label it for the dish and then place all the ingredients for that dish on that half sheet of paper.  Here's a photo of how this looks:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I will admit that this uses a lot of physical space and you may see it as a pain in the neck.  The advantage of this is that you will never forget to cook something because there is a physical reminder that you simply can't ignore.  This means, for example, that Aunt Edna will get her beloved green bean casserole.&lt;/p&gt;

&lt;h2 id=&quot;check-the-microwave-before-you-sit-down&quot;&gt;Check the Microwave Before You Sit Down&lt;/h2&gt;

&lt;p&gt;The very last thing we cook every year is we put a can of corn in the microwave and put it on 1 minute.  We then scurry around like frenetic hobbits chanting &quot;Foods!  The Foods are coming&quot; and sit down at the table.  And we promptly forget about the damn corn.  Sigh.&lt;/p&gt;

&lt;h2 id=&quot;buy-extra-tupperware-to-send-leftovers-away&quot;&gt;Buy Extra Tupperware To Send Leftovers Away&lt;/h2&gt;

&lt;p&gt;When you make as much food as I do, one of the better tricks to avoid &quot;Fridge Capacity Crisis&quot; is to buy a bunch of extra Tupperware and then send people home with food i.e. &quot;Enjoyed the Mashed Potatoes, Great!  Here you go!&quot;. If you are really creative, you can make up mini meal plates for each guest and and them home with all of it.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/cooking/2019/11/27/how-to-win-the-thanksgiving-meal-war.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cooking/2019/11/27/how-to-win-the-thanksgiving-meal-war.html</guid>
        
        <category>cooking</category>
        
        <category>thanksgiving</category>
        
        <category>holiday</category>
        
        
        <category>cooking</category>
        
      </item>
    
      <item>
        <title>Using Eternal Terminal with OSX and AWS Including Ansible Support</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9163.jpeg&quot; alt=&quot;IMG_9163.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I know, I know – it is 2019 and we're not supposed to be SSH'ing into boxes – but, really, you're going to do it anyway.  And if you are going to ssh into boxes then, for heaven's sake, let's get rid of that stupidity that is your SSH terminal disconnecting whenever there is a simple blip in connectivity.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://eternalterminal.dev/&quot;&gt;Eternal Terminal&lt;/a&gt;, ET, is a mature Open Source project that purports to solve SSH disconnects.  I say &quot;purports&quot; because I have only just installed it and this blog post is my proof of concept to see how well it works.  I'm essentially SSH'd into some box or another roughly 10 to 12 hours a day, 5 to 7 days a week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can strike purports in the above paragraph.  I've now been using Eternal Terminal though a variety of network conditions including changing my wifi connection with long running processes and it works great. I do not understand the deviltry that drives this pretty damn amazing bit of software but I sure do like it.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;Here's what you need to do to use ET on a local OSX to remote AWS context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You need to install ET (client) on your OSX box.&lt;/li&gt;
  &lt;li&gt;You need to install ET (server) on your Linux server.&lt;/li&gt;
  &lt;li&gt;You need to start ET (server) on your Linux server.&lt;/li&gt;
  &lt;li&gt;You need to open port 2022 on your AWS security group.&lt;/li&gt;
  &lt;li&gt;You need to adjust your SSH login statements.&lt;/li&gt;
  &lt;li&gt;You may want to use an Ansible Playbook to install ET on your server.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;installing-et-on-osx&quot;&gt;Installing ET on OSX&lt;/h3&gt;

&lt;p&gt;Here's how to install ET on OSX:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install MisterTea/et/et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;installing-et-on-your-server&quot;&gt;Installing ET on your Server&lt;/h3&gt;

&lt;p&gt;Here's how to install ET on Ubuntu:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install -y software-properties-common
sudo add-apt-repository ppa:jgmath2000/et
sudo apt-get update
sudo apt-get install et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;starting-eternal-terminal-on-your-server&quot;&gt;Starting Eternal Terminal on Your Server&lt;/h3&gt;

&lt;p&gt;After installation, ET should start automatically.  You can check its status with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You should see something like this if ET is running:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;● et.service - Eternal Terminal
   Loaded: loaded (/lib/systemd/system/et.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2019-11-26 21:37:24 UTC; 22min ago
  Process: 6052 ExecStart=/usr/bin/etserver --daemon --cfgfile=/etc/et.cfg (code=exited, status=0/SUCCESS)
 Main PID: 6061 (etserver)
    Tasks: 10 (limit: 4915)
   CGroup: /system.slice/et.service
           └─6061 /usr/bin/etserver --daemon --cfgfile=/etc/et.cfg

Nov 26 21:37:23 ip-172-31-3-194 systemd[1]: Starting Eternal Terminal...
Nov 26 21:37:23 ip-172-31-3-194 systemd[1]: et.service: Can't open PID file /var/run/etserver.pid (yet?) after
Nov 26 21:37:24 ip-172-31-3-194 systemd[1]: Started Eternal Terminal.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;opening-port-2022-on-your-security-group&quot;&gt;Opening Port 2022 on Your Security Group&lt;/h3&gt;

&lt;p&gt;Eternal Terminal on the server relies on port 2022 being open.  This needs to be done at your AWS security group.  Here's how to do this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into console.aws.amazon.com in a browser.&lt;/li&gt;
  &lt;li&gt;Go into EC2 instances.&lt;/li&gt;
  &lt;li&gt;Open Security Groups from the sidebar.&lt;/li&gt;
  &lt;li&gt;Select the Inbound tab.&lt;/li&gt;
  &lt;li&gt;Click the Edit button.&lt;/li&gt;
  &lt;li&gt;Click the Add Rule button.&lt;/li&gt;
  &lt;li&gt;In the Port Range field enter &lt;strong&gt;2022&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In the source field, enter &lt;strong&gt;0.0.0.0/0&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Click the Save button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;changing-your-ssh-login-statement&quot;&gt;Changing Your SSH Login Statement&lt;/h3&gt;

&lt;p&gt;My normal ssh statement looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -i &quot;~/Downloads/adl_fuzzygroup.pem&quot; ubuntu@xx.yy.zz.aa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To use ET, you need to have a &quot;ssh statement&quot; like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;et ubuntu@xx.yy.zz.aa -i &quot;~/Downloads/adl_fuzzygroup.pem&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;an-ansible-playbook-to-automate-server-setup&quot;&gt;An Ansible Playbook to Automate Server Setup&lt;/h3&gt;

&lt;p&gt;If you have more than one server on AWS, you should be using a DevOps tool like Ansible to automate machine setup.  Here's a sample playbook:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---

- name: Configure servers for use with Eternal Terminal
  hosts: all
  become: true
  remote_user: ubuntu
  tasks:
    - name: Install system packages
      apt: pkg= state=latest install_recommends=no
      with_items:
        - software-properties-common

    - name: Add Ansible PPA
      apt_repository: repo=&quot;ppa:jgmath2000/et&quot; update_cache=no

    - name: Update APT cache
      apt: update_cache=yes

    - name: Install system packages
      apt: pkg= state=latest install_recommends=no
      with_items:
        - et
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save the above to playbook_install_et.yml and then run it with a statement like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-playbook -i inventories/inventory.txt playbook_install_et.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternalterminal.dev/&quot;&gt;Eternal Terminal Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MisterTea/EternalTerminal&quot;&gt;Github Eternal Terminal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=21640200&quot;&gt;Hacker News Discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/11/26/using-eternal-terminal-with-osx-and-aws-including-ansible-support.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/11/26/using-eternal-terminal-with-osx-and-aws-including-ansible-support.html</guid>
        
        <category>aws</category>
        
        <category>eternal_terminal</category>
        
        <category>osx</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>When You Forget Your Branch Name Use Git Reflog</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9456.jpeg&quot; alt=&quot;IMG_9456.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For my current side project, cmn, I'm using a version control model of issue branches as described &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;here&lt;/a&gt; back in June (about when I started this).  Basically the model is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The master branch is always pristine and always deployable.&lt;/li&gt;
  &lt;li&gt;The develop branch takes changes from issue branches and is then merged into master by a CI server.&lt;/li&gt;
  &lt;li&gt;Anything you work on, no matter how small, gets a github issue and goes thru a pull request approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've never been a real big fan of structured engineering approaches and my last boss, Taylor Williams, did a fantastic job of teaching us this and – &lt;strong&gt;he was right&lt;/strong&gt;.  Even on a small side project, there are definite benefits to solid, well defined workflow processes.&lt;/p&gt;

&lt;p&gt;One disadvantage when you work this way is that you end up with a &lt;strong&gt;lot of branches&lt;/strong&gt;.  And since branches tend to be named for the issue, it isn't always apparent the difference between say 444 and 445.  When branches are transitory such as &quot;fix this bug&quot;, that isn't a big deal.  But when a branch is longer lived, because it just can't be completed in a short period of time, you are likely to simply &lt;em&gt;forget&lt;/em&gt; the branch name.&lt;/p&gt;

&lt;p&gt;As an example, last Thursday night, I started work on a pretty complex enhancement and then a new bug came up Friday morning.  My response was to do an add / commit and then change back to develop and create a new issue and fix that bug.  And, somehow, between Friday morning and tonight, Monday night, the issue number has jumped by 30 issues (if you work this way then you make a lot of issues).  So I went to find the branch and I simply couldn't.  I was at 480 and I looked back at the Github Issues page and I thought it might have been 460 but that turned out not to be it.&lt;/p&gt;

&lt;p&gt;As I thought about it, I realized that I knew when I last worked on it, the preceding Thursday, and there had to be a way to to look at branches by date created.  A bit of &lt;a href=&quot;https://stackoverflow.com/questions/2255416/how-to-determine-when-a-git-branch-was-created&quot;&gt;Internet research&lt;/a&gt; led me to the &lt;strong&gt;git reflog&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git reflog --date=local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is an example of reflog's output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;e95bf81 HEAD@{Fri Nov 22 09:14:34 2019}: checkout: moving from 460 to develop
fdf7336 HEAD@{Fri Nov 22 09:13:09 2019}: commit: rollup commit
367d9bd HEAD@{Fri Nov 22 09:13:01 2019}: checkout: moving from 458 to 460
367d9bd HEAD@{Fri Nov 22 08:45:15 2019}: commit: rollup commit on habit buddy changes
e95bf81 HEAD@{Fri Nov 22 08:28:30 2019}: checkout: moving from develop to 458
e95bf81 HEAD@{Thu Nov 21 21:13:39 2019}: checkout: moving from 444 to develop
2a11c54 HEAD@{Thu Nov 21 21:13:17 2019}: commit: Rollup on multiple metrics; resume with derived metric
e95bf81 HEAD@{Thu Nov 21 10:12:54 2019}: checkout: moving from develop to 444
e95bf81 HEAD@{Wed Nov 20 14:42:30 2019}: pull origin develop: Fast-forward
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The work had been in the area of multiple metrics so this showed me that it was branch 444.  So a quick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git co 444
git merge develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;bought my branch up to date so I could resume working on it.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/11/25/when-you-forget-your-branch-name-use-git-reflog.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/11/25/when-you-forget-your-branch-name-use-git-reflog.html</guid>
        
        <category>git</category>
        
        <category>cmn</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Using Github Hub to Create an Issue and Streamline Your Branch Workflow</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9487.jpeg&quot; alt=&quot;IMG_9487.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My git workflow is pretty simple.  Here are the tasks and (where I do them):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an issue that logs what I'm working on  (github website)&lt;/li&gt;
  &lt;li&gt;Use the issue's id number to make a branch (command line)&lt;/li&gt;
  &lt;li&gt;Work on the branch (editor)&lt;/li&gt;
  &lt;li&gt;Add / Commit / Push to the Branch (command line)&lt;/li&gt;
  &lt;li&gt;Create a Pull Request (github website)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Github has a tool called &lt;a href=&quot;https://hub.github.com/&quot;&gt;Github Hub&lt;/a&gt; - &lt;a href=&quot;https://news.ycombinator.com/item?id=20372770&quot;&gt;Hacker News Discussion Thread&lt;/a&gt; -  which allows you to do more operations on the command line than the normal, canonical git actions (add / commit / push).  Henceforth I will be referring to this tool as &lt;strong&gt;hub&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installing-github-hub-on-osx&quot;&gt;Installing Github Hub on OSX&lt;/h2&gt;

&lt;p&gt;To install hub on OSX, you can use brew:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install hub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;if-you-cant-login&quot;&gt;If You Can't Login&lt;/h2&gt;

&lt;p&gt;My first usage of github hub was actually fairly crappy:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hub issue create -m &quot;Update Faq for Why Do Things Appear on the Dashboard&quot;
Error creating issue: Unauthorized (HTTP 401)
Bad credentials
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you hit this error then the first result is a &lt;a href=&quot;https://github.com/github/hub/issues/1067&quot;&gt;very long Github Issues&lt;/a&gt; page.  The long and the short of it is that you need to delete hub's config file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm ~/.config/hub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After this delete, any operation should cause hub to ask you to log in.  And, yes, hub does support Github's two factor authentication so there is that to contend with also.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you still can't use hub after deleting this file then you may have credentials defined in a shell config file like .zshrc or .bashrc.  Read the above linked issue for more.  You also might have better understanding by using the verbose option:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HUB_VERBOSE=1 hub issue create &quot;Update Faq for Why Do Things Appear on the Dashboard&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;and-creating-an-issue&quot;&gt;And Creating an Issue&lt;/h2&gt;

&lt;p&gt;Use the -m flag to create the issue with a title.  This avoids hub opening an editor (which is fine but slows down the process and using hub is to avoid the slowdown):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ hub issue create -m &quot;Automate Checking RSS Feeds&quot;
https://github.com/gochangeme/web_change_me_now/issues/465
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And there you have an issue number so now you can can just:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch 465
git co 465
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, yes, I suspect there is a compound command which creates a branch and changes into it in one operation.  I personally prefer to use github via &quot;atomic&quot; commands so if I make a mistake, I can more easily correct recover from it.&lt;/p&gt;

&lt;h2 id=&quot;heres-what-you-can-do-with-hub&quot;&gt;Here's What You Can Do With Hub&lt;/h2&gt;

&lt;p&gt;Here's what you can do with hub (from hub –help):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;api            Low-level GitHub API request interface
browse         Open a GitHub page in the default browser
ci-status      Show the status of GitHub checks for a commit
compare        Open a compare page on GitHub
create         Create this repository on GitHub and add GitHub as origin
delete         Delete a repository on GitHub
fork           Make a fork of a remote repository on GitHub and add as remote
issue          List or create GitHub issues
pr             List or checkout GitHub pull requests
pull-request   Open a pull request on GitHub
release        List or create GitHub releases
sync           Fetch git objects from upstream and update branches
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I can easily see myself using pull-request once I get comfortable with issue as I'm already seeing the workflow benefits to hub.  Thank you Gitub!&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/11/24/using-github-hub-to-create-an-issue-and-streamline-your-branch-workflow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/11/24/using-github-hub-to-create-an-issue-and-streamline-your-branch-workflow.html</guid>
        
        <category>git</category>
        
        <category>software_engineering</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Understanding Docker Multi Stage Builds - Installing Python and Ruby in the Same Dockerfile</title>
        <description>&lt;p&gt;Now that I've come up to speed on Python, I have an application in production that uses both Python and Ruby.  What it does isn't really important but getting it live posed an interesting deployment challenge due to the need to have both Python and Ruby concurrently.&lt;/p&gt;

&lt;p&gt;My initial attempt to make this was work was a native install using Python 3.7 and a fairly large set of Python dependencies on an Ubuntu 18.04 AWS instance.  Unfortunately I kept hitting issues where, well, things just went to hell.  This had me turn to Docker and my thinking was that I should be able to easily build a Dockerfile that supported both Python and Rails.  &lt;em&gt;chuckle&lt;/em&gt;.  Nothing in Docker is actually easy but I got there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reason I needed Python is I was building a &lt;a href=&quot;https://github.com/twintproject/twint&quot;&gt;Twitter&lt;/a&gt; related application and I needed to use the truly excellent Twint library / executable.&lt;/p&gt;

&lt;h2 id=&quot;python-dockerfile-attempt-1&quot;&gt;Python Dockerfile Attempt 1&lt;/h2&gt;

&lt;p&gt;I don't have a full record of this but I tried to pull in a traditional Python install using apt-get.  This worked fairly horribly for reasons that escape me.&lt;/p&gt;

&lt;h2 id=&quot;welcome-to-overlays-and-multiple-from-statements&quot;&gt;Welcome to Overlays and Multiple From Statements&lt;/h2&gt;

&lt;p&gt;My first attempt to make this work failed to work and it failed to really adopt the zen of Docker.  One of the very cool features is that you can build up a Docker container with bits from different containers by using &lt;strong&gt;multiple&lt;/strong&gt; from statements.  This lets you have something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y

FROM ubuntu:latest
FROM ruby:2.6.4-stretch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The term for this is a &lt;a href=&quot;https://dev.to/brpaz/using-docker-multi-stage-builds-during-development-35bc&quot;&gt;Docker Multi Stage Build&lt;/a&gt;.  The trick here is that the output from each FROM statement is logically isolated from each other.  The reason for this is actually pretty simple – standard directory structures.  Given that most *nix environments use similar top level structures like /opt, you simply can't combine things blindly – it needs to be an intentional choice using, &lt;strong&gt;drumroll&lt;/strong&gt;, &lt;strong&gt;copy&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Here's what this multi stage build stuff looked like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda
RUN pip install twint

# The Ruby Stuff Starts Here
FROM ubuntu:latest
FROM ruby:2.6.4-stretch

# This Is The Magic Here 
COPY --from=python /opt/conda/bin/twint /usr/bin
RUN mkdir -p /opt/conda/bin/
COPY --from=python /opt/conda /opt/conda/
COPY --from=python /opt/conda/bin/python /opt/conda/bin/python
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The last block of lines above show the process of copying from python (the FROM line at the top is named with the &quot;AS python&quot;) and there are two copy statements that were really necessary:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The twint executable needed to be copied to something in the path.  I chose /usr/bin.&lt;/li&gt;
  &lt;li&gt;Since the twint &quot;executable&quot; is written in python, the entire python supporting libraries needed to come with it.  Since this was located in /opt/conda originally and nothing in Ruby used that path, I could simply copy all of it from the python container over to the ruby container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I tried a few different ways to do the copy and I never narrowed it down to which copy statement was exactly needed.  Apologies.  I suspect it should be nothing but &quot;COPY –from=python /opt/conda /opt/conda/&quot; but Docker's documentation on COPY was less than helpful.&lt;/p&gt;

&lt;h2 id=&quot;figuring-out-where-twint-existed&quot;&gt;Figuring Out Where twint Existed&lt;/h2&gt;

&lt;p&gt;The section above is interesting but it relies on one specific bit of knowledge – where the heck that the Twint executable comes from.  And while I might know this for my local environment, I had no idea where it would be installed in a conda environment.  Fortunately the answer was actually pretty easy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a cut down version of this Dockerfile&lt;/li&gt;
  &lt;li&gt;Build it&lt;/li&gt;
  &lt;li&gt;Shell into it and then use ls and which to find things&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how I did this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/twint
touch ~/twint/Dockerfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Docker likes to build directories mostly so it was just easier to give it a directory of its own with a single Dockerfile in it.&lt;/p&gt;

&lt;p&gt;The next step was to edit the Dockerfile and add the following lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM ruby:2.6.5-ubuntu
FROM continuumio/miniconda3:latest

RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda

RUN pip install twint
# This trick keeps the container running so you can shell into it
RUN while true; do sleep 1000; done
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once I had this written, I could do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build twint
docker ps | grep twint
docker exec CONTAINER_HASH -it /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then I was able to use a combination of ls and which to find the twint binary and gather the information needed for the copy statements above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This technique of generating a small Dockerfile and using it for diagnostic purposes is pretty powerful.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;a-working-python-and-rails-dockerfile-with-twint-support-via-conda&quot;&gt;A Working Python and Rails Dockerfile with Twint Support via Conda&lt;/h2&gt;

&lt;p&gt;Here is how it all came together:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# All The Python Stuff
FROM continuumio/miniconda3:latest AS python
RUN apt-get update &amp;amp;&amp;amp; apt-get install build-essential python3-dev -y
RUN conda update -n base -c defaults conda
RUN pip install twint

# The Ruby Stuff Starts Here
FROM ubuntu:latest
FROM ruby:2.6.4-stretch

RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y git
RUN apt-get install -y ruby
RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev
RUN apt-get install -y nodejs

# This Is The Magic Here 
COPY --from=python /opt/conda/bin/twint /usr/bin
RUN mkdir -p /opt/conda/bin/
COPY --from=python /opt/conda /opt/conda/
COPY --from=python /opt/conda/bin/python /opt/conda/bin/python

RUN mkdir /app
WORKDIR /app

# Install yarn
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y apt-transport-https
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y yarn

COPY Gemfile Gemfile.lock ./
RUN bundle install --binstubs

ENV secret_key_base SOMEKEY

ENV RAILS_ENV production
ENV DB_NAME SOMETHING
ENV DB_USERNAME SOMEUSER
ENV DB_PASSWORD A_PASSWORD
ENV DB_HOST a_host

COPY . .

RUN bundle exec rake RAILS_ENV=production DATABASE_URL=mysql2://user:pass@127.0.0.1/dbname SECRET_TOKEN=dummytoken assets:precompile

CMD puma -C config/puma.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ubuntu-not-alpine&quot;&gt;Ubuntu Not Alpine&lt;/h2&gt;

&lt;p&gt;Yes, yes, yes, I know that I really should have used Alpine.  I started from Ubuntu because I know it well and the additional overhead of Ubuntu wasn't an issue for this product (a small internal application).&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/22/understanding-docker-overlays-multiple-from-statements.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/22/understanding-docker-overlays-multiple-from-statements.html</guid>
        
        <category>docker</category>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Making Your Jekyll Blog Searchable with HTML, JavaScript and Google</title>
        <description>&lt;p&gt;So yesterday someone said this to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know the problem with your blog – you write so much and its not searchable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Poppycock.  Balderdash.  Fizzle Sticks.  Ok. Maybe.  Yes there's not search box at the top of my blog but anything on the Internet that has a distinct domain name is actually easily searchable just by using Google.  For example, here's how you'd find anything I ever wrote about MySQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;site:fuzzyblog.io mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you copy and paste that into google then you're get a search of my site for anything I ever wrote about mysql.&lt;/p&gt;

&lt;p&gt;If we wanted to make this a &quot;feature&quot; of my blog then we would need to do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an HTML form which has a search box and a search button.&lt;/li&gt;
  &lt;li&gt;We'd need some JavaScript to handle assembling the query and sending it to Google.&lt;/li&gt;
  &lt;li&gt;We'd need to integrate it with Jekyll&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-1-a-basic-html-form&quot;&gt;Step 1: A Basic HTML Form&lt;/h2&gt;

&lt;p&gt;Here's a basic html form:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.com/search&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Search&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;do_search();&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-2-javascript&quot;&gt;Step 2: JavaScript&lt;/h2&gt;

&lt;p&gt;Here's the JavaScript:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;do_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;site:fuzzyblog.io &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.google.com/search?q=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this does is take the query in the search field and assign it to a variable.  It then merges it with the &quot;site:fuzzyblog.io&quot; bit of Google syntax.  And, yes, there might be an issue with multi word queries needing to be joined with the + character (that's how HTML rolls but Google is generally pretty flexible).  I'd test this now and rewrite the query but I'm in an aluminum tube at 35,000 feet without any access to Google (or most developer documentation). The final step is to set document.location to the google url for the search.  That forces the query to execute and positions the user on the Google results page.&lt;/p&gt;

&lt;h2 id=&quot;step-3-jekyll-integration&quot;&gt;Step 3: Jekyll Integration&lt;/h2&gt;

&lt;p&gt;In order to integrate this with Jekyll, we need to modify two files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;_includes/head.html&lt;/li&gt;
  &lt;li&gt;_layouts/default.html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The _includes directory holds html templates for the html HEAD element, the header of every page and the footer of every page.  The file head.html needed to be modified to include the JavaScript.&lt;/p&gt;

&lt;p&gt;The _layouts directory holds the html layout files used for content display so that's where the search form needs to be displayed.&lt;/p&gt;

&lt;h2 id=&quot;step-4-success&quot;&gt;Step 4: Success!&lt;/h2&gt;

&lt;p&gt;Here's how it looks without much work at all on usability:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/search.png&quot; alt=&quot;search.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is about as simple an approach to search as you can get:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Free&lt;/li&gt;
  &lt;li&gt;Google might put ads on the results&lt;/li&gt;
  &lt;li&gt;No control over search results presentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it is free, easy to understand and should work for almost anybody.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/11/22/making-your-jekyll-blog-searchable-with-html-javascript-and-google.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/11/22/making-your-jekyll-blog-searchable-with-html-javascript-and-google.html</guid>
        
        <category>search</category>
        
        <category>jekyll</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>If You Pair Program Buy Tuple Now</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9350.jpeg&quot; alt=&quot;IMG_9350.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I've written in the past, I am an unabashed fan of pair programming.  Pair programming is one of the few techniques that I can credibly point to that really, really, really improves software quality.  And since I'm a remote developer, I really, really need good pairing tools.  The unfortunate reality of pair programming is that there really aren't good tools for pairing – until Tuple.&lt;/p&gt;

&lt;p&gt;The current suite of tools for pairing include things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google Hangouts / Google Meet - slow, craptastic user interface&lt;/li&gt;
  &lt;li&gt;Skype - don't get me started; Microsoft gutted Skype and left it for dead in a alley&lt;/li&gt;
  &lt;li&gt;Slack - only available on paid slack; slow, uses a lot of CPU&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While there have been good tools for pairing in the past, notably ScreenHero and Apple Remote Desktop, none of these tools are available today.  ScreenHero got bought by Slack and &quot;integrated&quot; while Apple Remote Desktop, well, I seem to have been the only user who remembers it.&lt;/p&gt;

&lt;p&gt;The current tool I'm using is &lt;a href=&quot;https://tuple.app/&quot;&gt;Tuple&lt;/a&gt; and it is simply &lt;strong&gt;outstanding&lt;/strong&gt;.  Here are some of the reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It just works.  For pairing to be something that you just do on an ad hoc basis, the tool needs to be utterly unobtrusive.  Tuple is brilliantly in its minimalism.&lt;/li&gt;
  &lt;li&gt;It doesn't slow everything on the machine to a crawl.&lt;/li&gt;
  &lt;li&gt;The audio quality is fantastic.&lt;/li&gt;
  &lt;li&gt;It is fast.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the disadvantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is expensive; the model is a monthly fee.&lt;/li&gt;
  &lt;li&gt;It is OSX only.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/pair_programming/2019/11/22/if-you-pair-program-buy-tuple-now.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/pair_programming/2019/11/22/if-you-pair-program-buy-tuple-now.html</guid>
        
        <category>pair_programming</category>
        
        <category>software_engineering</category>
        
        
        <category>pair_programming</category>
        
      </item>
    
      <item>
        <title>Installing mysql2 Gem on OSX when Headers Can't Be Found</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9140.jpeg&quot; alt=&quot;IMG_9140.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're not a Rails user, on OSX, then just nope the heck out of reading this post.  This is some serious nerdery here.&lt;/p&gt;

&lt;p&gt;One of the single most frustrating things about the Rails ecosystem is when you can't get a bundle install operation to finish.  The bundle install, of course, is the process of getting the software tools, &quot;gems&quot;, identified in Gemfile to install.  When you can't get bundle install to finish, you are effectively entirely blocked from continuing with a project.  A friend hit a serious problem recently with bundle install and the mysql2 gem.  I gave some online help via chat and while they solved it without me, I volunteered to write it down so there's a decent explanation / write up.&lt;/p&gt;

&lt;p&gt;Here's the error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ld: library not found for -lssl
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My first suggestion was to try a &quot;brew install mariadb&quot; (mariadb is a fully compatible, &lt;strong&gt;better&lt;/strong&gt; version of MySQL, written by the creator of MySQL).  It turned out that mariadb was already installed.&lt;/p&gt;

&lt;p&gt;So this led me to this &lt;em&gt;blink&lt;/em&gt; and then I asked for &quot;paste me the whole disgustingly long error message on bundle install&quot;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing mysql2 0.5.2 with native extensions
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
/Users/foo/.rbenv/versions/2.6.3/bin/ruby -I
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/2.6.0 -r
./siteconf20191120-7300-1a2t7xt.rb extconf.rb
checking for rb_absint_size()... yes
checking for rb_absint_singlebit_p()... yes
checking for rb_wait_for_single_fd()... yes
-----
Using mysql_config at /usr/local/bin/mysql_config
-----
checking for mysql.h... yes
checking for errmsg.h... yes
checking for SSL_MODE_DISABLED in mysql.h... no
checking for MYSQL_OPT_SSL_ENFORCE in mysql.h... yes
checking for MYSQL.net.vio in mysql.h... no
checking for MYSQL.net.pvio in mysql.h... yes
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes
checking for my_bool in mysql.h... yes
-----
Don't know how to set rpath on your system, if MySQL libraries are not in path
mysql2 may not load
-----
-----
Setting libpath to /usr/local/Cellar/mariadb/10.4.10_1/lib
-----
creating Makefile

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
make &quot;DESTDIR=&quot; clean

current directory:
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2/ext/mysql2
make &quot;DESTDIR=&quot;
compiling client.c
client.c:140:1: warning: control may reach end of non-void function
[-Wreturn-type]
}
^
1 warning generated.
compiling infile.c
compiling mysql2_ext.c
compiling result.c
compiling statement.c
linking shared-object mysql2/mysql2.bundle
ld: library not found for -lssl
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1

make failed, exit code 2

Gem files will remain installed in
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/mysql2-0.5.2 for
inspection.
Results logged to
/Users/foo/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/extensions/x86_64-darwin-18/2.6.0/mysql2-0.5.2/gem_make.out

An error occurred while installing mysql2 (0.5.2), and Bundler cannot
continue.
Make sure that gem install mysql2 -v '0.5.2' --source 'https://rubygems.org/'
succeeds before bundling.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My comment was pretty that it simply can't find the libraries, almost certainly the header files for openssl.  This is actually a common install problem for gems.  Happily my friend found the &lt;a href=&quot;https://github.com/brianmario/mysql2/issues/795&quot;&gt;answer&lt;/a&gt; (and without me which is awesome).  Here is what turned out to be needed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This the kind of thing that differs across people's systems / environments so I get why it is an issue despite the mysql2 gem being what – a decade plus old?  But I wish that the build ecosystem for Rails better allowed for things like this because, well, when you can't bundle install, you effectively can't rails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: And I get the open source ethos that if I want this, I should fix it myself.  I'm also aware of how deep a rabbit hole that would be and I don't have the mental energy to even contemplate solving this. So, yeah, I'm going to whine but I'm also massively thankful for the mysql2 gem so thank you brianmario.  Appreciated.  At least I hopefully gave back a bit by explaining this well.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/21/installing-mysql2-gem-on-osx-when-headers-can-t-be-found.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/21/installing-mysql2-gem-on-osx-when-headers-can-t-be-found.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>mysql</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>dockerbash - Making docker exec -it Suck Less</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9169.jpeg&quot; alt=&quot;IMG_9169.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Docker is a container technology that allows you to package up a series of different technologies under (generally) a *nix style operating system.  As things deployed with Docker are generally deployed under a *nix style operating system, it isn't uncommon to want to open a shell into your Docker environment for debugging purposes.&lt;/p&gt;

&lt;p&gt;You can easily do this with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker exec -it CONTAINER_HASH /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The CONTAINER_HASH is a value like 311ab7fe0ea1.  This value is fetched from a docker ps command like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep police
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The term 'police' is just some bit of text that identifies the docker process that is running.&lt;/p&gt;

&lt;p&gt;Here's an example of this output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ docker ps | grep police
311ab7fe0ea1        img-captain-police-crawl:51         &quot;/bin/sh -c 'puma -C…&quot;   4 hours ago         Up 4 hours
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What I'd really like is a command like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dockerbash police
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and have that do the underlying work to generate the docker exec statement.  A little bit of bash scripting gave me this script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You need to specify the name of the container you want to get into like:&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dockerbash police&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps | grep &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | awk &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt; /bin/bash
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save the lines above as dockerbash and make it executable.  After that you can much more easily get a shell prompt inside your docker containers.&lt;/p&gt;

&lt;h2 id=&quot;bash-references&quot;&gt;Bash References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.andreafortuna.org/2018/07/02/bash-scripting-my-own-cheatsheet/&quot;&gt;Bash Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4651437/how-do-i-set-a-variable-to-the-output-of-a-command-in-bash&quot;&gt;How to Set a Variable in Bash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxhint.com/20_awk_examples/#a16&quot;&gt;How to Use Awk to Get the First Variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-does-dockerbash-live&quot;&gt;Where Does dockerbash Live?&lt;/h2&gt;

&lt;p&gt;You cannot store dockerbash in the project that you are deploying via Docker because it needs to exist &lt;strong&gt;on the&lt;/strong&gt; machine that runs your Docker containers, not within your Docker container.  My recommendation is that you have your DevOps tooling such as Ansible install this script.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/11/21/dockerbash-making-docker-exec-it-suck-less.html</guid>
        
        <category>docker</category>
        
        <category>bash</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>So You Have A Chance to Go Freelance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9359.jpeg&quot; alt=&quot;IMG_9359.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This blog post takes addresses a common problem for technical workers - you have been offered a full time freelance gig and you don't know whether or not to take it based on its value versus your current compensation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Traditionally I have done a crap ass job at making these kind of assessments.  I'm writing this post to hopefully do a better / more &quot;adult&quot; take at this.&lt;/p&gt;

&lt;h1 id=&quot;what-is-your-current-job-worth&quot;&gt;What is Your Current Job Worth?&lt;/h1&gt;

&lt;p&gt;Your current job's worth can be reduced to an equation as follows:&lt;/p&gt;

&lt;p&gt;Salary + Bonus + Vacation + Health Insurance = Total Package&lt;/p&gt;

&lt;p&gt;The real problem here is that valuing health care is effectively a shite show. Health care packages are never directly comparable and when you leave an employer, to some extent, you get what you get.&lt;/p&gt;

&lt;p&gt;This means that the equation become:&lt;/p&gt;

&lt;p&gt;Salary + Bonus + Vacation = Total Package&lt;/p&gt;

&lt;p&gt;Let's assume that you have this type of package:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Salary: $103,000.00&lt;/li&gt;
  &lt;li&gt;Bonus: $25.00 (yep; just laugh with me; some employers don't get it)&lt;/li&gt;
  &lt;li&gt;Total Compensation: $103,025.00&lt;/li&gt;
  &lt;li&gt;Vacation: 2 Weeks&lt;/li&gt;
  &lt;li&gt;Weeks Worked per Year: 50&lt;/li&gt;
  &lt;li&gt;Gross Salary Per Week: $2,060.50 (select 103025.00 / 50; 'coz sql is my favorite calculator)&lt;/li&gt;
  &lt;li&gt;Monthly Salary: &lt;strong&gt;$8,242.00&lt;/strong&gt; (select 2060.50 * 4; )&lt;/li&gt;
  &lt;li&gt;Hourly Salary: $51.5125 (select 8242.00 / 160;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let's say that you were offered a compensation package of $10,000 per month -or- $120,000 on an annualized basis.  The question then becomes is the difference between $10,000 per month and $8,242.00 per month sufficient to cover health care?  And of course there are lots and lots of other things but let's talk about health care to start.&lt;/p&gt;

&lt;h1 id=&quot;fully-loaded-cost---an-alternate-way-to-calculate-your-jobs-worth&quot;&gt;Fully Loaded Cost - An Alternate Way to Calculate Your Job's Worth&lt;/h1&gt;

&lt;p&gt;The example above really only deals with salary plus vacation but a full time job has a lot of other &quot;compensation&quot; things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;computer hardware&lt;/li&gt;
  &lt;li&gt;office space&lt;/li&gt;
  &lt;li&gt;sick days&lt;/li&gt;
  &lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The aggregate value of these non cash compensation items is what I have always referred to as the &quot;fully loaded cost&quot; of employing an engineer and my back of the envelope rule is that you need to allocate between 1.25 x salary to 1.5 x salary so that makes the original compensation package worth:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.25 * 103,000 = 128,750.00; hourly salary equivalent: $77.25&lt;/li&gt;
  &lt;li&gt;1.5 * 103,000 = 154,500.0; hourly salary equivalent: $64.375&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;hourly-rate---another-way-to-look-at-your-offer&quot;&gt;Hourly Rate - Another Way to Look at Your Offer&lt;/h1&gt;

&lt;p&gt;So the offer that we are looking at is for &quot;full time&quot; work at a rate of $10,000 per month or $120,000 per year.  Let's assume that you are working 50 weeks out of the year and you are working 40 hours per week.  That means that we are talking about 2,000 hours per year.  So the hourly rate then becomes:&lt;/p&gt;

&lt;p&gt;120,000 / 2000 = $60 / hour&lt;/p&gt;

&lt;p&gt;As a consultant, I would argue that rate is low.  My last consulting gig went out the door at $125 / hour.  Now, on the other hand, &lt;em&gt;bird in the hand versus bird in the bush&lt;/em&gt;.  This is for a long term project and guaranteed long term work really, really &lt;strong&gt;counts&lt;/strong&gt;.  I suspect that most consultants never come close to making $120,000 / year.&lt;/p&gt;

&lt;p&gt;The comparable hourly rates are listed above.&lt;/p&gt;

&lt;h1 id=&quot;health-care-overview&quot;&gt;Health Care Overview&lt;/h1&gt;

&lt;p&gt;The bulk of this next bit of this came from a good friend, Lisa Meece, the Chairwoman of the local &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Star Base Indy&lt;/a&gt; science fiction convention.  Lisa has been a freelance worker for over a decade now and actually understands health care in a way I don't.  Oh and if you're in the Indianapolis area, consider going to StarBase Indy this coming Thanksgiving:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I can guarantee it is a more fun time than your family weekend&lt;/li&gt;
  &lt;li&gt;There are Klingons to spare including the ever popular &lt;strong&gt;singing Klingon&lt;/strong&gt; aka &quot;&lt;a href=&quot;https://www.youtube.com/channel/UCkuSNmzNppTGu8Inx6e8ufQ&quot;&gt;The Klingon Pop Warrior&lt;/a&gt;&quot;; you haven't felt emotion until you've heard &lt;a href=&quot;https://www.youtube.com/watch?v=VHS9mgJfqSA&quot;&gt;Pat Benatar&lt;/a&gt; in the original Klingon&lt;/li&gt;
  &lt;li&gt;It is a damn good time&lt;/li&gt;
  &lt;li&gt;With my wife Shelley, I'm running Engineering for the con and I'd love to see you there&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;healthcaregov&quot;&gt;Healthcare.gov&lt;/h2&gt;

&lt;p&gt;So here goes for some stuff on health care that I didn't write:&lt;/p&gt;

&lt;p&gt;For insurance, your best bet is the marketplace at &lt;a href=&quot;http://www.healthcare.gov&quot;&gt;www.healthcare.gov&lt;/a&gt;. (when you leave your current job you'll also have an option for COBRA for the first 18 months - the clock runs out at that point for you as an employee). Your HR department should be able to tell you what that will cost you - but even with the concerted efforts being made to kill ACA it's probably still your most economical option for coverage.&lt;/p&gt;

&lt;p&gt;Leaving your current job (and therefore your current coverage) is what's called a &quot;qualifying event&quot; for new coverage. I believe that means you have 30 days from that time to elect coverage under the marketplace. If you wait longer than that you will need to wait until open enrollment, at which point coverage won't start until January, and you don't want that. (You've got 90 days to enroll in COBRA).&lt;/p&gt;

&lt;p&gt;The sucky thing is that the plans available now are not necessarily the plans that will be available for 2020, so you'll have to elect now and then elect again in October for next year.&lt;/p&gt;

&lt;p&gt;You'll want to pay attention to the covered physicians under each plan. This is something you should be able to tell by going to the insurer's website and looking up any physicians you want to be able to keep. That may be enough to make the decision around which plan (or at least which company) to select. Other factors are the premium / deductible / copays.&lt;/p&gt;

&lt;p&gt;And that was her take on health care.&lt;/p&gt;

&lt;h2 id=&quot;cobra&quot;&gt;Cobra&lt;/h2&gt;

&lt;p&gt;When I asked my current employer for Cobra numbers so I had something to go by, here's what they said:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Family Medical $1147.54&lt;/li&gt;
  &lt;li&gt;Family Dental $116.32&lt;/li&gt;
  &lt;li&gt;Family Vision $25.63&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes the monthly insurance premium: $1,289.49&lt;/p&gt;

&lt;h1 id=&quot;tax-implications&quot;&gt;Tax Implications&lt;/h1&gt;

&lt;p&gt;Clearly some portion of personal expenses could be written off if I was a consultant.  Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Computer&lt;/li&gt;
  &lt;li&gt;Home office&lt;/li&gt;
  &lt;li&gt;Internet (partial)&lt;/li&gt;
  &lt;li&gt;Cell phone (likely all)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks again to &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;Lisa Meece&lt;/a&gt; for contributing also to this bit.&lt;/p&gt;

&lt;h1 id=&quot;money-and-the-big-question---will-you-be-happier&quot;&gt;Money and The Big Question - Will You Be Happier?&lt;/h1&gt;

&lt;p&gt;So with the offer described above the previous monthly gross was: 8242.00 with insurance.  The new offer is $10,000 but you have to subtract $1,289.49 to arrive at: $8,710.51.  So technically there is a $500 bump in salary monthly but that is likely negligible given the loss of benefits.&lt;/p&gt;

&lt;p&gt;So if the numbers are roughly the same then, to me, the big question is would you actually be happier being freelance?  Or to paraphrase Shakespeare, &quot;&lt;em&gt;To freelance or not to freelance; that is the question&lt;/em&gt;&quot;.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/19/so-you-have-a-chance-to-go-freelance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/19/so-you-have-a-chance-to-go-freelance.html</guid>
        
        <category>freelance</category>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Do I Buy My Wife Flowers Tonight or Not</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9420a.jpeg&quot; alt=&quot;IMG_9420a.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of software developers, I can be pretty forgetful at times.  If you're in the industry, you know how it goes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You start working on a project and it is February&lt;/li&gt;
  &lt;li&gt;You look up and … it is May and&lt;/li&gt;
  &lt;li&gt;You don't remember all that much of your life between&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A good friend of mine refers to this as falling down a code hole (Thank you Mister Mott) and it really is a thing.  Some people's code holes are a few days long.  Other people's code holes can, in the case of a death march, last for months.&lt;/p&gt;

&lt;p&gt;A bunch of years ago, I came out of a code hole and realized that I couldn't remember when I had last bought my wife flowers (if your wife doesn't like flowers then substitute chocolates, wine, etc).  Any husband worth his salt knows what I mean – that little treat that says to the person you love that you remember their existence and they matter.  I regard that for my personal relationships, buying a woman flowers unexpectedly as akin to lubrication on a mechanical device; something that makes the underlying machine work better. Call if &quot;relationship lubrication&quot; if you will.&lt;/p&gt;

&lt;p&gt;After realizing this, I thought about how I could solve it – in a &lt;strong&gt;natural&lt;/strong&gt; fashion.  I didn't want to put it on a calendar; I didn't want it to be regular so I realized that I could tie it to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Something I did regularly&lt;/li&gt;
  &lt;li&gt;Make it quasi random&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I've an old school Unix guy (originally SunOS back in '89 on a Sun 3 running Qunitus Prolog), what I did was tie this to my shell startup routine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For non computer folks, a &quot;shell&quot; is a program you use to interface directly with the machine&lt;/li&gt;
  &lt;li&gt;A startup routine is a script which runs when the shell starts up&lt;/li&gt;
  &lt;li&gt;As a heavy terminal user, I open a shell 10 or 20 times a day so, over time, I adjusted the probabilities to reflect that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I did was write a &quot;throw of the dice routine&quot; that randomly tells me whether or not to buy flowers.  This can be as complex as you want it to be. I made the example below a little complex and tied in a &quot;on her birthday&quot; routine just in case.&lt;/p&gt;

&lt;p&gt;Here's what this looks like when the throw of the dice doesn't succeed:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/flowers_no.png&quot; alt=&quot;flowers_no.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's what this looks like when it does succeed:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/flowers_yes.png&quot; alt=&quot;flowers_yes.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's the code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/Users/sjohnson/.rvm/rubies/ruby-2.3.1/bin/ruby&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'date'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'flowers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wine'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'chocolates'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# raise this if you want to buy things less often; lower it for more&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;improbability_constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1968&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;improbability_constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;things_to_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sample&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You should buy &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;year&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Doofus - it is her birthday; buy at least: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing_to_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I call this from ~/.zshrc just by calling the ruby script directly.  The same trick works in ~/.bashrc.&lt;/p&gt;

&lt;p&gt;I should admit that a lot of times when this said &quot;Buy Flowers&quot;, I actually didn't – life can be messy and complex and I never intended it directly drive my behavior. What it did do, however, was make me much more aware of the need for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I haven't needed this now for a lot of years so below is a quick reproduction designed to select between flowers, wine, chocolates and a card.  Once I ran it for enough years, I internalized this type of activity as a habit.  And then I moved laptops one year and realized &quot;Heh.  I changed!&quot;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: I told my wife about this a few weeks ago and she laughed.  Oh gosh did she laugh …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3&lt;/strong&gt;: While my personal relationship involves a wife and husband, this tool can work regardless of the gender or configuration of your relationship.&lt;/p&gt;

</description>
        <pubDate>Tue, 19 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html</guid>
        
        <category>relationships</category>
        
        
        <category>relationships</category>
        
      </item>
    
      <item>
        <title>I'm Copying You Since You're So Effective</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9068.jpeg&quot; alt=&quot;IMG_9068.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A close friend recently said to me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I'm Copying You Since You're So Effective&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;with respect to how much I tend to get done and I thought I'd elaborate on this a bit since I suspect that why I'm effective isn't always apparent.  These aren't really in any order other than the order that I chose to finish them.  I suspect they are all pretty important.&lt;/p&gt;

&lt;h2 id=&quot;ten-reasons-why-i-think-im-effective&quot;&gt;Ten Reasons Why I Think I'm Effective&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Get Rid Of Anything That Pisses You Off&lt;/strong&gt;.  To the outside world, I'm a pretty chill person.  I try very, very hard to never lose my cool and there's a reason for that – I have a &lt;strong&gt;bad&lt;/strong&gt; temper.  One of the things I learned early on about myself is that getting upset &lt;strong&gt;ruins&lt;/strong&gt; my productivity.  And so what I do is when I find that something pisses me off, I get rid of it – by fixing it.  See my upcoming post on Url Soup for an example.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Time is The Only Thing You Have So Do the Math on Everything&lt;/strong&gt;.  I'm a father, a husband and a technologist and I started my first company when I was 19 – and I've pretty much been busy since I was 19.  This has always made me very, very aware of just how valuable anyone's time is.  I don't waste my time and I hate, hate, hate anything that wastes my time.  Just as an example, I used to &lt;strong&gt;loathe&lt;/strong&gt; configuring new laptops.  Setting up a new laptop, for a developer, is generally about a week long endeavor until I (or any developer I've ever watched) is really comfortable with it.  If you assume that a laptop lasts a developer 3 years and you have 30 years left in your career, that's &lt;strong&gt;10 weeks&lt;/strong&gt; of your life.  Once I did that math then I realized that my figuring out how to configure a laptop quickly and easily was seriously worthwhile and I did (and then I open sourced an &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;example&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Find People Smarter than You – And Copy Them&lt;/strong&gt;.  I'd love to tell you that it was my idea for how to configure a laptop automatically but it wasn't.  I stole this, shamelessly, from &lt;a href=&quot;https://twitter.com/geerlingguy&quot;&gt;Jeff Geerling&lt;/a&gt;; but I did (and do) &lt;a href=&quot;https://fuzzyblog.io/blog/mac/2017/07/31/configuring-your-mac-with-ansible-take-2.html&quot;&gt;credit him&lt;/a&gt;.  One thing I learned early on is that when you don't know what you are doing, finding people smarter than you in an area and copying / learning from them is wise.  I did this with Jim Kearny when I bought my first cell phone, I did this with Wolfram Arnold when I needed to learn TDD, I did this with Matt Mullenweg when I needed to learn logical isolation and SAAS apps and so on.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Messy Beats Perfect Every Damn Time&lt;/strong&gt;.  I write a lot of code and I'll confess something – my code is messy.  I fail at coding in all kinds of ways; my Cyclomatic complexity is too high, I use double quoted strings when single quoted are more efficient, I have too much conditional logic and so on.  And, in my opinion, that's ok because code is organic and it gets better over time – if it needs to get better.  A lot of code doesn't need to get better because most projects, even mine, simply won't succeed.  And if it isn't going to succeed then why make it perfect?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Be a Boy Scout&lt;/strong&gt;.  I doubt it will surprise people that not only was a I a Boy Scout but I was actually an Eagle Scout (and then I discovered girls and, well …).  One of the best things that scouting taught me was &quot;leave your campsite better than you found it&quot; and I've been doing that metaphorically ever since.  My perspective on coding is often pretty simple – I try to leave things better than I found them.  So, yes, I'm going to write messy code (see above) but I'm also going to make it better when I pass back through it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Minimize Discouragement&lt;/strong&gt;.  When doing anything, but particularly when you are starting something new, always try and minimize your discouragement.  There is nothing worse then putting a ton of effort into something and then, at the very end, realizing that you can't make it work.  As an example, I hooked a friend up recently with my &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;Macbook Ansible&lt;/a&gt; configuration repository that installs software on your machine and their first reaction was &quot;Well I don't need all this so I need to customize it&quot;. My response was &quot;Nope!  Find one thing it installs that you actually need and comment everything else out.  Then run it and see if it works at all&quot;.  It doesn't matter what you do with computers, making one thing work is always easier than N things.  This approach gives you a small win which you can then use to encourage yourself to get another win.  I got into the habit of this when I became a remote worker and I was always alone.  When you are always alone, you need to get in the habit of getting yourself wins and managing your own encouragement because there aren't co workers around to help with this.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do it the Same Way Personally and Professionally&lt;/strong&gt;.  This was a very, very hard one for me to master.  What I've found is that if I do something one way professionally then, well, you do it the same way personally.  A good example of that are software development practices with respect to git.  My last boss was an absolute perfectionist regarding branch driven development (you always develop in a branch; branches get merged to develop and then develop gets merged to master which then gets deployed).  And I've taken that model to heart and now I use it for all my side projects – and I've never been happier.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make Anything You Do Regularly Easier.&lt;/strong&gt;  I am a huge believer that if you do anything regularly (and I define regularly as 3 times or more in a short span of time) then you figure out how to make it easier – and you do that.  When you don't make things easier, you either waste time or you end up getting pissed off (see #1 above for how that affects me).  When you work with computers, most things can be made easier, even something as relationally complex as &quot;&lt;a href=&quot;https://fuzzyblog.io/blog/relationships/2019/11/19/do-i-buy-flowers-tonight-or-not.html&quot;&gt;Do I Buy My Wife Flowers This Week?&lt;/a&gt;&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tools Matter; Learn Them Well&lt;/strong&gt;.  I grew up in a hardware store and my favorite department was the tool aisle.  I grew to know the differences between an Estwing hammer and a True Value hammer and why an SK set of sockets was better than Master Mechanic.  When I moved over to computer work, I took that same love of tools with me.I've now been using the same editor since 2006; the same language since 2006.  I honestly don't think it really matters what tools you use but it does matter that you learn them well.  Steven Jobs used to call computes a &lt;a href=&quot;https://www.brainpickings.org/2011/12/21/steve-jobs-bicycle-for-the-mind-1990/&quot;&gt;bicycle for the mind&lt;/a&gt;.  Well if you're a software person, learning your tools well gives you a motorcycle for the brain.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Write It Down If You'll Ever Need It Again&lt;/strong&gt;.  If you've watched my &lt;a href=&quot;https://fuzzyblog.io/blog/&quot;&gt;voluminous output&lt;/a&gt;, you've started to realize that I'll write about anything.  And the reason for that is that writing things down helps &lt;strong&gt;me&lt;/strong&gt;.  I'm an IT professional that deals with large scale, complex systems.  When I learn something, invariably, I'm going to need to do it again.  If I take the time to write it down then not only have I documented it at least fairly well but I've also taken the time to really learn it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If I have a favorite one of all of these, it is the last one, write it down.  That has likely been the single most profound change in making me effective.  And I learned that from &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave Winer&lt;/a&gt;; Thanks Dave.&lt;/p&gt;

</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/18/i-m-copying-you-since-you-re-so-effective.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/18/i-m-copying-you-since-you-re-so-effective.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Adding Decimal Types to Rails Migrations</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9619.jpeg&quot; alt=&quot;IMG_9619.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like so many other things this falls into the category of &quot;I'll do it 100 more times before I die and I can never remember it so may as well blog it&quot;.  A migration adds a column to a table in a database managed by Rails.  In this case I had a table which needed to manage multiple types of data all front ended by an amount method that dynamically figures out why field to fetch back the data from.  This gave me a column structure like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;int_val (for integers)&lt;/li&gt;
  &lt;li&gt;float_val (for floats like a measurement)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I needed to add money as a value to this table.  Now, yes, I could simply store money in the float_val field but that's a bad practice to start doing because, well, rounding.  Even if it really doesn't matter in the app, it is a bad practice to train yourself on.&lt;/p&gt;

&lt;p&gt;From having done this in the past, I know I need a decimal of the format (something, 2).  This is referred to as the 'scale' and the 'precision' (the number of digits to the right of the decimal place).  So if we have decimal(8,2), that means you can store:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;123,456.78
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So your maximum value would be 999,999.99 (just under a million dollars; now say that in a &lt;a href=&quot;https://www.youtube.com/watch?v=l91ISfcuzDw&quot;&gt;Dr. Evil intonation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now writing a migration with precision and scale isn't hard but I always want to do this to allow for placing the column in the right place (it makes my tables 'near' and, yes, I'm just that nerdy).  Here's my migration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails g migration add_decimal_to_metrics
      invoke  active_record
      create    db/migrate/20191118100314_add_decimal_to_metrics.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddDecimalToMetrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:decimal_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:decimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;precision: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scale: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;after: :float_val&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5452653/datatype-decimal6-2&quot;&gt;Stack Overflow on Scale and Precision&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mitrev.net/rails/2015/04/19/rails-migration-generator-specifying-precision-and-scale/&quot;&gt;Mitrev on Migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/18/adding-decimal-types-to-rails-migrations.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/18/adding-decimal-types-to-rails-migrations.html</guid>
        
        <category>rails</category>
        
        <category>mysql</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Adding an Includes Clause to ActiveRecord and Watching the Joy Flow</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9986.jpeg&quot; alt=&quot;IMG_9986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've written in the past about watching your SQL queries stream by in the Rails console and how seeing, well, stupidity / things that look wrong can help guide you to things you need to find.  Here's an example I witnessed recently:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habit = Habit.find(2)
habit.total_this_month

Metric Load (2.5ms) SELECT metrics.date_created_at, metrics.int_val, metrics.float_val, metrics.metric_type_id FROM metrics WHERE metrics.habit_id = 2 AND (date_created_at &amp;gt;= '2019-11-01') AND (date_created_at &amp;lt;= '2019-11-30')
MetricType Load (3.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (38.1ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (17.0ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (40.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (2.7ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (1.3ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (3.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (5.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (252.9ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (11.2ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (7.4ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
MetricType Load (1.6ms) SELECT metric_types.* FROM metric_types WHERE metric_types.id = 1 LIMIT 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;According to the bug tracker where I logged, this it was logged 5 days ago (so on November 12).  And if you could the number of metric_type queries above, the total is 12.  This is date ordered stuff so it is pretty obvious that what's happening is that metric_type query is getting executed once per day.&lt;/p&gt;

&lt;p&gt;Here's the definition of the total_this_month method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_this_month&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first_date_of_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateCommon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last_date_of_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
  &lt;span class=&quot;n&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the total_from_date_to_date method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOTAL_FIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;gt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;lt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This type of issue is referred to as an &lt;a href=&quot;https://semaphoreci.com/blog/2017/08/09/faster-rails-eliminating-n-plus-one-queries.html&quot;&gt;N+1 query problem&lt;/a&gt; where each query leads to another query.  The solution here is to use the :includes option on the query to bring in the metric_types table as part of this.&lt;/p&gt;

&lt;p&gt;And here's the fix&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total_from_date_to_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOTAL_FIELDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;gt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at &amp;lt;= ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:metric_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Just adding a simple .includes(:metric_type) clause to the where statement fixes this and makes that data available to the underlying .compact.sum operation.  And, yes, to fix a performance problem this easily really does make the joy flow for a developer.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/18/adding-an-includes-clause-to-activerecord-and-watching-the-joy-flow.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/18/adding-an-includes-clause-to-activerecord-and-watching-the-joy-flow.html</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        <category>performance</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>The Ruby Safe Navigation Operator</title>
        <description>&lt;p&gt;So I recently moved to running my Ruby code thru &lt;a href=&quot;https://github.com/rubocop-hq/rubocop&quot;&gt;RuboCop&lt;/a&gt; prior to each submission courtesy of the magic that is &lt;a href=&quot;https://evilmartians.com/chronicles/lefthook-knock-your-teams-code-back-into-shape&quot;&gt;Lefthook&lt;/a&gt;.  I don't always fix everything that RuboCop detects but I tend to read thru the reports.  I'm using the &quot;Boy Scout&quot; approach to campsites, i.e. leave your campsite (code base) better than you found it, to at least make some of the changes each time.&lt;/p&gt;

&lt;p&gt;Note: To avoid the massive amount of errors that Rubocop detects via lefthook, I actually have the rubocop options in lefthook.yml commented out:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#     rubocop:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       tags: backend style&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       glob: &quot;*.rb&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       exclude: &quot;application.rb|routes.rb&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#       run: bundle exec rubocop --force-exclusion {all_files}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then I run the files individually using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rubocop -c .rubocop.yaml app/controllers/streaks_controller
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here was an interesting error that it just detected:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/controllers/streaks_controller.rb:43:7: C: Style/SafeNavigation: Use safe navigation (&amp;amp;.) instead of checking if an object exists before calling the method.
      s.activate if s
      ^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So what we have here is an ActiveRecord operation and then an if clause:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Streak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;streak_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The Safe Navigation operator, &amp;amp;, is designed to be a more concise approach to something like the try operator in that it avoids errors when a method is called on nil:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As its name reflects, the safe navigation operator allows us to safely call a method on a object that can be nil, in the same way as try! does in ActiveSupport. In that regard, if the object is not nil, it sends the method to the object, returning nil otherwise. &lt;a href=&quot;https://www.competa.com/blog/ruby-safe-navigation-operator-methods/&quot;&gt;Competa&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using the safe navigation operator, the above code snippet can be written as:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Streak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;streak_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is one of those cases where I like the clarity of my original approach but the safe navigation operator does shorten up a coding paradigm that is almost everywhere in Ruby code.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theguild.nl/5-reasons-not-to-use-safe-navigation-operators/&quot;&gt;Reasons to Not Use Safe Navigation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/&quot;&gt;More on the Safe Navigation Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 16 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/11/16/the-ruby-safe-navigation-operator.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/11/16/the-ruby-safe-navigation-operator.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Local Development Data for Rails from Your Production Site using Heroku</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9986.jpeg&quot; alt=&quot;IMG_9986.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the worst aspects of doing Rails development, although this is not limited to Rails in any way, is getting data to use for development work once your site starts getting users.  Yes I know that you should always have full test coverage and that local data shouldn't be necessary – &lt;strong&gt;but it absolutely is&lt;/strong&gt;.  There is always a class of errors that you simply can't diagnose with a set of data with which to work.&lt;/p&gt;

&lt;p&gt;The happy truth though is that you actually can pretty easily move data from production to development at will (at least as long as the database isn't too massive; when your site gets large it is a different matter).&lt;/p&gt;

&lt;h2 id=&quot;the-approach&quot;&gt;The Approach&lt;/h2&gt;

&lt;p&gt;The approach here is actually pretty simple.  My examples all center around using MySQL as a data store but any database that has solid import / export will work.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To start you should backup your local data just in case you need it back afterwards.&lt;/li&gt;
  &lt;li&gt;You then connect to your remote datastore and use mysqldump to export your data to a local data dump.&lt;/li&gt;
  &lt;li&gt;You then import this local data dump.&lt;/li&gt;
  &lt;li&gt;You debug your site using a much richer set of data.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;making-this-easy-with-a-rake-task&quot;&gt;Making this Easy with a Rake Task&lt;/h2&gt;

&lt;p&gt;Here's a rake task that I wrote that gives you a lot of tasks for dealing with your local / remote databases.  Drop this into lib/tasks and you can see the tasks it offers with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake -T | grep database
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:database&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# Generates a mysql load command&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development:mysql_load_data_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_load_data_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#username, password, database &lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' &amp;lt; lib/tasks/data/db_dumps/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Add the load file into the below command &quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  once you copy and paste it back into the terminal&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# generates a mysql command to get into the database&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development_mysql_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# generates a dump data command that puts the data into lib/tasks/data/db_dumps/&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:development:mysql_dump_data --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_dump_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_local_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt; lib/tasks/data/db_dumps/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.sql&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysqldump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:production&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_dump_data --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_dump_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;About to dump data in 10 seconds (or press CTRL+C) ....&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt; lib/tasks/data/db_dumps/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.sql&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysqldump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
      
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_load_data_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_load_data_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt; '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# bundle exec rake database:production:mysql_command --trace&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mysql_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_heroku_database_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_mysql_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -h &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -u&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_command&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# this is how heroku used to work a few months ago, now, not so much...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_heroku_database_params_classic&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capture3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^DB_/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_heroku_database_params&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;capture3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stdout_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^DATABASE_URL:/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# build up a hash of db_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# the database itself is stored as the path in the url but the / needs to be stripped&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_local_database_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;database_configuration&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;database&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_stdout_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/:\s+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;dumping-from-production-and-loading-to-development&quot;&gt;Dumping from Production and Loading to Development&lt;/h2&gt;

&lt;p&gt;Here's how to dump the data:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake database:production:mysql_dump_data --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's how to load this in:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake database:development:mysql_load_data_command --trace
** Invoke database:development:mysql_load_data_command (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute database:development:mysql_load_data_command
Add the load file into the below command
  once you copy and paste it back into the terminal
mysql -uroot -pADFD!@# change_me_now_development  &amp;lt; lib/tasks/data/db_dumps/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(note - I changed the password above).  And then you need to actually run this command with the correct database file that came from the dump:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uroot -pADFD!@# change_me_now_development  &amp;lt; lib/tasks/data/db_dumps/d3rbmdakuvgkjfkv_2019-11-16.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The database name you get from Heroku is very much a randomized string so don't expect it to be the normal Rails like &quot;_production&quot; style database name.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/16/getting-local-development-data-for-rails-from-your-production-site-using-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/16/getting-local-development-data-for-rails-from-your-production-site-using-heroku.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Updating to the Latest Ansible on Ubuntu</title>
        <description>&lt;p&gt;One of the tricky bits about Ansible is that new features in the &quot;language&quot; always require the latest version of Ansible itself.  And, while logical, this can easily bite you.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;s&quot;&gt;TASK [deploy_hate-language-modeling_systemd_start&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;just force systemd to re-execute itself (2.8 and above)] ***&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;fatal&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aws_master2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;FAILED! =&amp;gt; {&quot;changed&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;false, &quot;msg&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Unsupported&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(systemd)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;module:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;daemon_reexec&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Supported&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;include:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;daemon_reload,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;enabled,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;masked,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;no_block,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;state,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;user&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;    	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to retry, use&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--limit @/home/ubuntu/ansible/playbook_deploy_hate-language-modeling_master.retry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What that translates to is that Ansible itself doesn't know how to use the parameter &lt;strong&gt;daemon_reexec&lt;/strong&gt;.  And when you've been using an Ansible feature successfully and then it doesn't work on the server, that usually is a rock solid signal &quot;update ansible&quot;.&lt;/p&gt;

&lt;p&gt;Here's how to do this on Ubuntu:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt update
sudo apt install software-properties-common
sudo apt-add-repository --yes --update ppa:ansible/ansible
sudo apt install ansible
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 15 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2019/11/15/updating-to-the-latest-ansible-on-ubuntu.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2019/11/15/updating-to-the-latest-ansible-on-ubuntu.html</guid>
        
        <category>ansible</category>
        
        <category>ubuntu</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>A Redis Hello World in Ruby and Python</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9955.jpeg&quot; alt=&quot;IMG_9955.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A colleague just IM'd me and asked if I have a Hello World for redis and my thought was &quot;No but I can damn well blog one together quick as all get out&quot; so …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the word Redis means nothing to you then may I direct you to the &lt;a href=&quot;https://redis.io/topics/quickstart&quot;&gt;quick start&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;The thing to understand about Redis is that you can use it in two ways:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;As a simple key value store, a nosql database if you like.&lt;/li&gt;
  &lt;li&gt;As a data structure server.  I don't do this much but I am in absolute awe of people who have internalized the Redis data model sufficiently to do this.  The reason for bringing up this point, when I'm not going to cover it is that any developer ought to keep in mind the capabilities of their tools – and Redis is hugely capable.  And if you think that I'm full of crap with what Redis can do with you, may I direct you to &lt;a href=&quot;https://thoughtbot.com/blog/hyperloglogs-in-redis&quot;&gt;HyperLogLog&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hello-world-in-redis-using-ruby&quot;&gt;Hello World in Redis using Ruby&lt;/h2&gt;

&lt;p&gt;The canonical Hello World for redis is using it as a key value store.  Here's an example from Ruby:&lt;/p&gt;

&lt;p&gt;In Gemfile:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In console:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&amp;lt;Redis client v4.1.3 for redis://127.0.0.1:6379/0&amp;gt;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mykey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the explanation:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We bring in the Redis gem / class.&lt;/li&gt;
  &lt;li&gt;We create a Redis object.  By default Redis runs on localhost at port 6379.  Redis has a quite solid network architecture so you can have a distributed set of servers with the data fetched back from them.&lt;/li&gt;
  &lt;li&gt;The &quot;set&quot; command takes a name and a value and sets them into the underlying data store.&lt;/li&gt;
  &lt;li&gt;The &quot;get&quot; command takes just the name and fetches back the value.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hello-world-in-redis-using-python&quot;&gt;Hello World in Redis Using Python&lt;/h2&gt;

&lt;p&gt;And here is exactly the same example in Python:&lt;/p&gt;

&lt;p&gt;In requirements.txt:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In console:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mykey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you can see that pretty much the exact same explanation applies.  Redis uses a standard set of &quot;verbs&quot; that tend to be implemented similarly across languages.  Salvatore did a brilliant job on Redis and the simplicity of the verbs speaks to that.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/redis/redis-rb&quot;&gt;redis-rb on github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pypi.org/project/redis/&quot;&gt;pypi on redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 15 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2019/11/15/a-redis-hello-world.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2019/11/15/a-redis-hello-world.html</guid>
        
        <category>redis</category>
        
        <category>ruby</category>
        
        <category>python</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>A Warning About Git LFS and Large Machine Learning Models and Automated Deployments</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7930.jpeg&quot; alt=&quot;IMG_7930.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Github has a maximum size of 50 mb per file under management.  And that normally works just fine – until the age of machine learning.  Machine learning models are &lt;strong&gt;big&lt;/strong&gt;, staggeringly &lt;strong&gt;big&lt;/strong&gt;.  I'm currently working on a project where the underlying model is like 830 + mb.&lt;/p&gt;

&lt;p&gt;Now when you have large files, git has a facility called &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;&quot;Git LFS&quot; (large file support)&lt;/a&gt; and they purport that it is the solution but, well, it really, really isn't.  Here's what I just ran across (platform is Ubuntu 18 and Ansible):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I have a playbook that handles git clone / git update.&lt;/li&gt;
  &lt;li&gt;When you initially install, the git clone only brings down the non lfs files.&lt;/li&gt;
  &lt;li&gt;I then remembered the lfs issue and modified the playbook to install lfs and run the per repository installation command (cd into your repo directory and then &lt;strong&gt;git lfs install&lt;/strong&gt;).&lt;/li&gt;
  &lt;li&gt;The next stage in the playbook did a git pull and my expectation was that the pull would bring in the large model.  Unfortunately it did not so I had a real wtf moment.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I then logged into the machine manually and deleted the repo and cloned it manually.  And, voila, I got the full model coming down.&lt;/p&gt;

&lt;h2 id=&quot;before-git-lfs-install&quot;&gt;Before Git LFS Install&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hcs hate-language-modeling/
16K	0hate-language-modeling/
16K	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;after-git-lfs-install-using-manual-git-clone&quot;&gt;After Git LFS Install Using Manual Git Clone&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -hcs hate-language-modeling/
836M	hate-language-modeling/
836M	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Given the importance of automated deploys, this really makes me concerned about using git lfs moving forward.  Yes it is wonderful that I can run the per repository installation command and have it work even after the directory is installed but the git pull, after that command was run, should have brought down the entire model.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/machine_learning/2019/11/14/a-warning-about-git-lfs-and-large-machine-learning-models.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/machine_learning/2019/11/14/a-warning-about-git-lfs-and-large-machine-learning-models.html</guid>
        
        <category>machine_learning</category>
        
        <category>git</category>
        
        <category>git_lfs</category>
        
        
        <category>machine_learning</category>
        
      </item>
    
      <item>
        <title>Making a Streamlit Machine Learning App into a SystemD Service for Deployment via Ansible</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7931.jpeg&quot; alt=&quot;IMG_7931.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html&quot;&gt;documented recently&lt;/a&gt;, I've become quite the fan of &lt;a href=&quot;https://streamlit.io&quot;&gt;Streamlit&lt;/a&gt; for taking Machine Learning applications written in Python and making them easily available on the web.  Streamlit is a very cool toolkit for taking a Python Machine Learning app and adding a simple UI to it and then hosting it via a built in web server.  I haven't seen anything really like in the Ruby world and I'm quite impressed by its elegance and simplicity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Before you start down the path of implementing this the way I did, see the last section titled &quot;Note: &quot; after the Jenkins section.&lt;/p&gt;

&lt;p&gt;So we have a custom internal app using Streamlit and I am, at present, the only person who can deploy it.  That's, well, stupid.  Deployment always needs to be something that anyone on the technical team should be able to do.  This became increasingly obvious to me when I had to pull over, on Monday afternoon, and deploy fixes to it – in the first snow of the season.  And, yes, I've been a consultant for a lot of my career so I'm ok with this but it still is sub optimal.&lt;/p&gt;

&lt;p&gt;Here's what a deploy using Streamlit onto an Ubuntu server looks like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SSH into the box.&lt;/li&gt;
  &lt;li&gt;Change into the right directory.&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Do a ps auwwx&lt;/td&gt;
          &lt;td&gt;grep streamlit and grab the pid (process id).&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Do a kill pid.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git pull&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Source the python virtual environment with: &lt;strong&gt;source ./venv/bin/active&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Restart it with the syntax: &lt;strong&gt;nohup streamlit run dashboard.py&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of this should be able to be automated with &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;.  Well, let's make that most of it.  The flaw in the ointment is the last thing.  Apparently the only thing that Ansible can't automate is something with nohup.  Now I'm sure if I dug in enough I could either understand it find a way around it but a seemingly solid &lt;a href=&quot;https://stackoverflow.com/questions/53345184/how-can-i-run-nohup-command-in-ansible-playbook-task&quot;&gt;Stack Overflow post argues that the right approach is to use SystemD and services rather than nohup&lt;/a&gt; and that seems like a good idea actually.  Ansible can easily start and stop SystemD services so we can throw out the entire pid / kill stuff.&lt;/p&gt;

&lt;h2 id=&quot;a-shell-script-and-a-system-d-unit-file&quot;&gt;A Shell Script and a System D Unit File&lt;/h2&gt;

&lt;p&gt;I don't claim to be a SystemD advocate per se but it is now the current reigning standard so it is better to use it than fight against it (SystemD was pretty controversial within the Unix world).  The basics of SystemD are explained here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-unit_files&quot;&gt;RedHat Overview of SystemD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/&quot;&gt;Linode on SystemD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The core idea is that your program is a service which runs in the background and can be controlled thru a simple set of commands.  Our service is going to be called rundashboard, so our commands become:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sudo systemctl start rundashboard&lt;/li&gt;
  &lt;li&gt;sudo systemctl stop rundashboard&lt;/li&gt;
  &lt;li&gt;sudo systemctl status rundashboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's an example of the output of sudo systemctl status rundashboard&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status rundashboard
● rundashboard.service - Example systemd service.
   Loaded: loaded (/etc/systemd/system/rundashboard.service; dis
   Active: active (running) since Wed 2019-11-13 17:55:37 UTC; 5
 Main PID: 10449 (bash)
    Tasks: 6 (limit: 4915)
   CGroup: /system.slice/rundashboard.service
           ├─10449 /bin/bash /usr/bin/rundashboard.sh
           └─10459 /home/ubuntu/hate-language-modeling/venv/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From an implementation perspective we need to things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shell script which starts our service&lt;/li&gt;
  &lt;li&gt;A SystemD unit file which installs our service into the underlying Unix system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm not a SystemD expert so I'm absolutely certain that there are subtleties of SystemD that I'm overlooking.&lt;/p&gt;

&lt;h3 id=&quot;the-shell-script&quot;&gt;The Shell Script&lt;/h3&gt;

&lt;p&gt;Here's the shell script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/ubuntu/hate-language-modeling
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ./venv/bin/activate
nohup streamlit run dashboard.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-unit-file&quot;&gt;The SystemD Unit File&lt;/h3&gt;

&lt;p&gt;Here's the SystemD unit file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Run Streamlit Dashboard.

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;simple
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/bash /usr/bin/rundashboard.sh

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;installing-this&quot;&gt;Installing This&lt;/h3&gt;

&lt;p&gt;The shell script needs to be copied to to /usr/bin:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mv rundashboard.sh /usr/bin/rundashboard.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The unit file needs to be copied to /etc/systemd/system/ and set to 644 permissions:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp rundashboard.service /etc/systemd/system
sudo chmod 644 /etc/systemd/system/rundashboard.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;an-ansible-playbook-for-deploying-streamlit&quot;&gt;An Ansible Playbook for Deploying Streamlit&lt;/h2&gt;

&lt;p&gt;While there are lots of ways to use Ansible, I tend to follow a pretty standard approach:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;inventory file that defines the machines on which things are executing&lt;/li&gt;
  &lt;li&gt;playbook that defines the role to be run&lt;/li&gt;
  &lt;li&gt;role that lists out the tasks to be done&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;inventory-file&quot;&gt;Inventory File&lt;/h3&gt;

&lt;p&gt;Given that my specific machines have different IP addresses than yours, I've obfuscated them below.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;aws_box1 ansible_ssh_host=1.2.3.4  ansible_ssh_private_key=/Users/sjohnson/Downloads/adl_fuzzygroup.pem ansible_python_interpreter=/usr/bin/python3&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;aws_box2 ansible_ssh_host=5.6.7.8 ansible_ssh_private_key=/Users/sjohnson/Downloads/adl_fuzzygroup.pem ansible_python_interpreter=/usr/bin/python3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;playbook&quot;&gt;Playbook&lt;/h3&gt;

&lt;p&gt;Here's the playbook:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_git_clone&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_systemd_setup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_git_pull&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aws_box1&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;remote_user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy_hate-language-modeling_systemd_start&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deploy&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that this is split into four different sections.  The reason for this is that to handle the systemd stuff, the ansible role needs to run as root (the become: true) whereas the git pull / git clone needs to run as the ubuntu user.  And, yes, I know there is an ansible git module that is supposed to work.  And, this time, as &lt;strong&gt;every other&lt;/strong&gt; time I have tried to use it, I failed; hence the work around.&lt;/p&gt;

&lt;h3 id=&quot;the-git-clone-role&quot;&gt;The Git Clone Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Do a git clone if not already checked out&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone git@github.com:adl-tech/hate-language-modeling.git&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/bin/bash&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;creates&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/hate-language-modeling&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-role-setup-role&quot;&gt;The Systemd Role Setup Role&lt;/h3&gt;

&lt;p&gt;An Ansible role is basically a YAML representation of the state of the server that you are trying to achieve.  And, in this case, we need to upload some files into certain locations so we need a files directory which stores them.  Here is the structure of the role that you need to create in your filesystem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;roles/deploy_hate-language-modeling
├── files
│   ├── rundashboard.service
│   └── rundashboard.sh
└── tasks
    └── main.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's the role itself:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install the service&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files/rundashboard.service&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/systemd/system&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0644'&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install the shell script&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files/rundashboard.sh&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/usr/bin/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0755'&lt;/span&gt;
    
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Stop the service if is already running&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;systemd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rundashboard&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stopped&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-git-pull-role&quot;&gt;The Git Pull Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Do a git pull&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git pull origin dev&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/hate-language-modeling/&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-systemd-start-role&quot;&gt;The Systemd Start Role&lt;/h3&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;start the service&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;systemd&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rundashboard&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;started&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;running-all-this&quot;&gt;Running All This&lt;/h3&gt;

&lt;p&gt;If you've put all the pieces together correctly then you can run this as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ansible-playbook -i inventories/inventory.txt playbook_deploy_hate-language-modeling.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have to run my ansible-playbook with sudo due to messed up python installs on my personal MacBook.  That's a me thing / my mistake not an Ansible thing.&lt;/p&gt;

&lt;p&gt;When it runs you should see output like the following (depending on whether or not you have the delightful cowsay installed locally):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 __________________________________________________________
/ TASK [deploy_hate-language-modeling_git_clone : Do a git \
\ clone if not already checked out]                        /
 ----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _____________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : install \
\ the service]                                                /
 -------------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _____________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : install \
\ the shell script]                                           /
 -------------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 __________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_setup : Stop \
\ the service if is already running]                       /
 ----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 _________________________________________________________
/ TASK [deploy_hate-language-modeling_git_pull : Do a git \
\ pull]                                                   /
 ---------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [aws_box1]
 _________________
&amp;lt; PLAY [aws_box1] &amp;gt;
 -----------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

 ________________________
&amp;lt; TASK [Gathering Facts] &amp;gt;
 ------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

ok: [aws_box1]
 ___________________________________________________________
/ TASK [deploy_hate-language-modeling_systemd_start : start \
\ the service]                                              /
 -----------------------------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

changed: [aws_box1]
 ____________
&amp;lt; PLAY RECAP &amp;gt;
 ------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||

aws_box1                   : ok=10   changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


adl/antihate/ansible on ☁️  us-west-2 took 25s
❯
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;next-step-jenkins&quot;&gt;Next Step: Jenkins&lt;/h2&gt;

&lt;p&gt;Right now our application can be deployed by any developer who has:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a command line&lt;/li&gt;
  &lt;li&gt;ansible installed locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The real goal here is actually to make it so anyone on our team can deploy this.  And that means that we need a web based user interface that can be wrapped around the Ansible scripting.  In my next bit of writing on this topic, I'll walk thru Jenkins and how to do all that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This ended up being considerably more tricky than is addressed above.  My email is fuzzygroup at gmail.com and you are welcome to reach out to me if you want clarification.  I spent a lot of time writing this up and I can't put more time into it right now but if anyone really needs this, I'll make it a priority.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/11/13/making-a-streamlit-machine-learning-app-into-a-systemd-service.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/11/13/making-a-streamlit-machine-learning-app-into-a-systemd-service.html</guid>
        
        <category>python</category>
        
        <category>streamlit</category>
        
        <category>systemd</category>
        
        <category>linux</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Implementing Safe ActiveRecord Like Queries for Rails</title>
        <description>&lt;p&gt;In any SQL based database, a like query is generally an SQL injection attack waiting to happen because the underlying sql statement looks like this:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%foo%'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A 30 year old thank you goes out to InfoWorld and &lt;a href=&quot;https://www.amazon.com/Joe-Celkos-SQL-Smarties-Programming/dp/0123820227&quot;&gt;Joe Celko&lt;/a&gt; who beat into his reader's brains the concept of capitalizing SQL statements for better legibility.  Thank you Joe.&lt;/p&gt;

&lt;p&gt;A seemingly solid &lt;a href=&quot;https://stackoverflow.com/questions/26094430/safe-activerecord-like-query&quot;&gt;StackOverflow post&lt;/a&gt; gives this recommendation:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Please note that Model needs to be replaced with the name of your table.  Let's say that our table was named Metric and we have a normal simple_form object for Metric coming into our Rails app with a parameter named q and we have a real world Rails app with a limit clause and pagination.&lt;/p&gt;

&lt;p&gt;Here's how this would look:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@metrics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@q&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date_created_at desc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@q represents the incoming query&lt;/li&gt;
  &lt;li&gt;note represents the field in our Metrics table that we want to search agains&lt;/li&gt;
  &lt;li&gt;@metrics is the collection of data returned by the search and the where clause is &quot;note.matches(&quot;%#{@q}%&quot;)&quot; to find any instances of the term @q within the note field&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 11 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/11/implementing-safe-activerecord-like-queries.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/11/implementing-safe-activerecord-like-queries.html</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Changing Button Text on Simple Form Submit Buttons</title>
        <description>&lt;p&gt;This falls into the category of &quot;I'm old and can't remember this so must, must, must write it down&quot; because I keep losing &lt;a href=&quot;https://github.com/plataformatec/simple_form/issues/117&quot;&gt;this html page&lt;/a&gt;.  If you need to change the text on a submit button for a Rails form implemented with simple_form then use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= f.button :submit, 'Submit This Form', class: 'btn btn-primary' %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 11 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/11/changing-button-text-on-simple-form-submit-buttons.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/11/changing-button-text-on-simple-form-submit-buttons.html</guid>
        
        <category>rails</category>
        
        <category>simple_form</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Using CapRover on AWS</title>
        <description>&lt;p&gt;I am a Ruby on Rails guy and I &lt;strong&gt;censored&lt;/strong&gt; hate deploying Ruby stuff.  I've been deploying Rails stuff now since 2007 and, quite honestly, it sucked in 2007 and it sucks today.  The only way I've ever found Rails deployment to not suck is by using Heroku which is absolutely magical and wonderful – but expensive.  Now I've recently become hooked on Heroku and the ease of its Git push based deployment structure.  The problem is that I need more power / flexibility with respect to what I'm deploying and this has let me to the &lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover&lt;/a&gt; open source project.&lt;/p&gt;

&lt;p&gt;This project aims to give you a version of Heroku but running on your own hardware.  Given that I'm an AWS guy, I wanted to use CapRover on AWS EC2 instances.&lt;/p&gt;

&lt;h2 id=&quot;setup---1&quot;&gt;Setup - 1&lt;/h2&gt;

&lt;p&gt;I started by installing the CapRover software and here was the first problem that I hit:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
docker: Error response from daemon: driver failed programming external connectivity on endpoint quizzical_snyder (f72be52bf809d139cc012debeadb87b813e02e8fd2ada6fbba97d4503d624c43): Error starting userland proxy: listen tcp 0.0.0.0:80: bind: address already in use.
ERRO[0000] error waiting for container: context canceled
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The issue here is that one of these 3 ports is already in use.  And the easiest way to figure this out is to run a succession of netstat commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 3000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That returned nothing.  So onto the next one, 443:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 443
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Again this returned nothing, onto 80:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo netstat -pna | grep 80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      21331/nginx: master
tcp6       0      0 :::80                   :::*                    LISTEN      21331/nginx: master
unix  2      [ ACC ]     STREAM     LISTENING     16380    1/init               @ISCSIADM_ABSTRACT_NAMESPACE
unix  3      [ ]         STREAM     CONNECTED     22180    949/dockerd
unix  3      [ ]         STREAM     CONNECTED     38086    4225/python3
unix  2      [ ]         DGRAM                    18052    1010/systemd-logind
unix  3      [ ]         STREAM     CONNECTED     18081    954/dbus-daemon      /var/run/dbus/system_bus_socket
unix  3      [ ]         STREAM     CONNECTED     38087    4225/python3
unix  3      [ ]         STREAM     CONNECTED     18880    954/dbus-daemon
unix  3      [ ]         STREAM     CONNECTED     18080    1010/systemd-logind    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So the issue here is that I already have Nginx on this box listening on port 80.  This is clearly &lt;strong&gt;my issue&lt;/strong&gt; and related to my initial work on using Capistrano to partially deploy a Ruby app.&lt;/p&gt;

&lt;p&gt;I solved this by creating a new instance and working there.&lt;/p&gt;

&lt;h2 id=&quot;setup---2&quot;&gt;Setup - 2&lt;/h2&gt;

&lt;p&gt;I then installed docker using Snap and that led me to this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
docker: Error response from daemon: error while creating mount source path '/captain': mkdir /captain: read-only file system.
ERRO[0000] error waiting for container: context canceled    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I've now used Docker for a bunch of years and this led to the typical, crap ass Docker troubleshooting approach of roaming thru Google, looking for a github issue that explains things.  I found one from a &lt;a href=&quot;https://github.com/moby/moby/issues/34427&quot;&gt;January 19, 2019&lt;/a&gt; issue which said &quot;don't use the snap version of Docker&quot;.&lt;/p&gt;

&lt;h2 id=&quot;setup---3&quot;&gt;Setup - 3&lt;/h2&gt;

&lt;p&gt;I'm personally an apt-get fan and I don't even know what we have Snaps but they are the new hotness so I did try them out.  Apparently this is my bad.&lt;/p&gt;

&lt;p&gt;Ok then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;snap remove docker  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then I reinstalled docker using &lt;a href=&quot;https://phoenixnap.com/kb/how-to-install-docker-on-ubuntu-18-04&quot;&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get remove docker docker-engine docker.io
sudo apt install docker.io
sudo systemctl start docker
sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point you need to log out and log back in and then do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point docker should be cleanly installed.&lt;/p&gt;

&lt;p&gt;You probably want to be able to use docker without having to use sudo, so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo groupadd docker
usermod -a -G docker ubuntu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup---4&quot;&gt;Setup - 4&lt;/h2&gt;

&lt;p&gt;If you are using AWS then your next likely problem will be this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover

&amp;gt; caprover@0.0.0 start /usr/src/app
&amp;gt; node ./bin/www

Captain Starting ...
Installing Captain Service ...

 Installation of CapRover is starting...
For troubleshooting, please see: https://caprover.com/docs/troubleshooting.html

 &amp;gt;&amp;gt;&amp;gt; Checking System Compatibility &amp;lt;&amp;lt;&amp;lt;
   Docker Version passed.
   Ubuntu detected.
   X86 CPU detected.
   Total RAM 8363 MB

Are your trying to run CapRover on a local machine or a machine without public IP?
In that case, you need to add this to your installation command:
    -e MAIN_NODE_IP_ADDRESS='127.0.0.1'

Otherwise, if you are running CapRover on a VPS with public IP:
Your firewall may have been blocking an in-use port: 3000
A simple solution on Ubuntu systems is to run &quot;ufw disable&quot; (security risk)
Or [recommended] just allowing necessary ports:
ufw allow 80,443,3000,996,7946,4789,2377/tcp; ufw allow 7946,4789,2377/udp;

See docs for more details on how to fix firewall issues

Finally, if you are an advanced user, and you want to bypass this check (NOT RECOMMENDED),
you can append the docker command with an addition flag: -e BY_PASS_PROXY_CHECK='TRUE'

Installation failed.
Error: Port timed out: 3000
    at Timeout._onTimeout (/usr/src/app/built/utils/CaptainInstaller.js:136:20)
    at ontimeout (timers.js:436:11)
    at tryOnTimeout (timers.js:300:5)
    at listOnTimeout (timers.js:263:5)
    at Timer.processTimers (timers.js:223:10)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup---5&quot;&gt;Setup - 5&lt;/h2&gt;

&lt;p&gt;And this needs to be solved by adding to your AWS security group, a hole for port 3000.  Do this with the normal AWS user interface for security groups.  You should future proof yourself by allowing for by ipv4 and ipv6 addresses.&lt;/p&gt;

&lt;p&gt;Once this is done then you can run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover        
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And have it actually get CapRover up and running.  And, yes, I actually did a happy dance when this worked.  I might have been holding hands with the cat while I did this.  The cat was not amused.&lt;/p&gt;

&lt;h2 id=&quot;setup---6&quot;&gt;Setup - 6&lt;/h2&gt;

&lt;p&gt;At this point you need to install the local CapRover tooling to setup the server component.  So, on your own machine, do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g caprover    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caprover serversetup
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which walks you thru this process:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;------------
CapRover CLI has recently been refactored. Please report potential bugs here: https://github.com/caprover/caprover-cli/issues
------------

Setup CapRover machine on your server...

? have you already started CapRover container on your server? Yes
? IP address of your server: 18.216.143.180
? CapRover server root domain: cartazzi.com
? new CapRover password (min 8 characters): [hidden]
? enter new CapRover password again: [hidden]
? &quot;valid&quot; email address to get certificate and enable HTTPS: fuzzygroup@gmail.com
? CapRover machine name, with whom the login credentials are stored locally: captain-01

CapRover server setup completed: it is available as captain-01 at https://captain.cartazzi.com

For more details and docs see CapRover.com  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;setup---7&quot;&gt;Setup - 7&lt;/h2&gt;

&lt;p&gt;You will need an actual domain that you can bind to your ip address.  And you need to make sure that you assign *.domain.com (or whatever) to it.&lt;/p&gt;

&lt;p&gt;Since I'm an AWS guy, I went to the Route 53 domain manager and found an unused domain of mine, cartazzi.com and bound it to the ip address above.  I then added a *.cartazzi.com wildcard dns entry onto it.&lt;/p&gt;

&lt;h2 id=&quot;setup---8&quot;&gt;Setup - 8&lt;/h2&gt;

&lt;p&gt;Once all this is done then you can to: https://captain.cartazzi.com.  This gives you a web based ui where you can create an app that you can then use a heroku style push deploy to take your code live.  And all of this is magically hooked up to Lets Encrypt for proper https.&lt;/p&gt;

&lt;h2 id=&quot;setup---9&quot;&gt;Setup - 9&lt;/h2&gt;

&lt;p&gt;The magic of all this is tied to the Captain Definition file or captain-definition which is essentially a JSON formatted Dockerfile that defines how the application is built.  And this is where my Docker knowledge failed me.  Here's as far as I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat captain-definition
{
  &quot;schemaVersion&quot;: 2,
  &quot;dockerfileLines&quot;: [
	&quot;FROM ubuntu:latest&quot;,
  &quot;FROM ruby:2.6.5-stretch&quot;,
  &quot;RUN rm /etc/localtime&quot;,
	&quot;RUN echo 'Etc/UTC' &amp;gt; /etc/timezone&quot;,
	&quot;RUN ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime&quot;,
	&quot;RUN apt-get update&quot;,
	&quot;RUN apt-get install -y tzdata&quot;,
	&quot;RUN apt-get install -y git&quot;,
	&quot;RUN apt-get install -y ruby&quot;,
	&quot;RUN apt-get install -y postgresql&quot;,
	&quot;RUN apt-get install -y libpq-dev&quot;,
	&quot;RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev&quot;,
	&quot;RUN apt-get install -y nodejs&quot;,
	&quot;RUN mkdir -p /usr/src/app&quot;,
	&quot;WORKDIR /usr/src/app&quot;,
	&quot;RUN gem install bundler&quot;,
	&quot;ADD ./src/Gemfile /usr/src/app/&quot;,
	&quot;ADD ./src/Gemfile.lock /usr/src/app/&quot;,
	&quot;RUN bundle install&quot;,
	&quot;COPY ./src /usr/src/app&quot;,
	&quot;ENV RACK_ENV production&quot;,
	&quot;EXPOSE 80&quot;,
	&quot;CMD [\&quot;rackup\&quot;, \&quot;config.ru\&quot;, \&quot;--host\&quot;, \&quot;0.0.0.0\&quot;, \&quot;--port\&quot;, \&quot;80\&quot;]&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once you have written your captain-definition file, you deploy it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caprover deploy --default
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, alas, this dies with errors:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ caprover deploy --default


------------
CapRover CLI has recently been refactored. Please report potential bugs here: https://github.com/caprover/caprover-cli/issues
------------


Preparing deployment to CapRover...

Ensuring authentication...
Saving tar file to: &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/cts_home_page/temporary-captain-to-deploy.tar&quot;
Using last commit on &quot;caprover&quot;: 2541bb79b9c936a4f624823ddb8a7544a7a0cc42

Deploying cts-home-page to captain-01...

Uploading [====================] 100%  (ETA 0.0s)
Upload done.

This might take several minutes. PLEASE BE PATIENT...

⠸ Building your source code...
------------------------- Mon Nov 11 2019 04:30:15 GMT+0000 (Coordinated Universal Time)
⠇ Building your source code...
[[ TRUNCATED ]]
---&amp;gt; Using cache
---&amp;gt; e876ce01f153
Step 7/23 : RUN apt-get install -y tzdata

---&amp;gt; Using cache
---&amp;gt; b2527a3e63c8
Step 8/23 : RUN apt-get install -y git

---&amp;gt; Using cache
---&amp;gt; cba1d4e5691e
Step 9/23 : RUN apt-get install -y ruby

---&amp;gt; Using cache
---&amp;gt; a5aa1c013480
Step 10/23 : RUN apt-get install -y postgresql

---&amp;gt; Using cache
---&amp;gt; 6667fca6acaa
Step 11/23 : RUN apt-get install -y libpq-dev

---&amp;gt; Using cache
---&amp;gt; b2f1f9d578da
Step 12/23 : RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev

---&amp;gt; Using cache
---&amp;gt; 698c0e61c945
Step 13/23 : RUN apt-get install -y nodejs

---&amp;gt; Using cache
---&amp;gt; a9e2578c2dab
Step 14/23 : RUN mkdir -p /usr/src/app

---&amp;gt; Using cache
---&amp;gt; 30f161f073b3
Step 15/23 : WORKDIR /usr/src/app

---&amp;gt; Using cache
---&amp;gt; 241cfd1f23d4
Step 16/23 : RUN gem install bundler

---&amp;gt; Using cache
---&amp;gt; 1c3707fa9dc1
Step 17/23 : ADD ./src/Gemfile /usr/src/app/

{&quot;message&quot;:&quot;ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory&quot;}
ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory
Build has failed!
----------------------
Deploy failed!
Error: {&quot;message&quot;:&quot;ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory&quot;}
ADD failed: stat /var/lib/docker/tmp/docker-builder803139007/src/Gemfile: no such file or directory

Something bad happened. Cannot deploy cts-home-page at captain-01.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I am really, really impressed with CapRover and I intend to return to it.  While I didn't get everything working, what did work was &lt;strong&gt;impressive&lt;/strong&gt; and the fact that Rails doesn't deploy is mostly a documentation issue, not a failing, at all, of CapRover.  The issues I had with AWS are also documentation issues.&lt;/p&gt;

&lt;h2 id=&quot;take-2&quot;&gt;Take 2&lt;/h2&gt;

&lt;p&gt;I wrote the above a few hours ago, caught some sleep and then woke up and in the process of closing tabs about CapRover, I found out that you can use a standard Dockerfile by changing your captain-definition to:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;schemaVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dockerfilePath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./Dockerfile&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then here's a valid albeit simple Rails Dockerfile to run on an Ubuntu instance:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM ruby:2.6.5-ubuntu
FROM ubuntu:latest
FROM ruby:2.6.5-stretch

#RUN apk update &amp;amp;&amp;amp; apk add build-base nodejs mariadb-dev tzdata git libxml2-dev

RUN apt-get update
RUN apt-get install -y tzdata
RUN apt-get install -y git
RUN apt-get install -y ruby
RUN apt-get install -y build-essential patch ruby-dev zlib1g-dev liblzma-dev
RUN apt-get install -y nodejs

RUN mkdir /app
WORKDIR /app

COPY Gemfile Gemfile.lock ./
RUN bundle install --binstubs

COPY . .

# The ENV variables simply need to be set for Rails to correctly pre-compile
# your assets. They do not need to be populated by real values.
RUN bundle exec rake RAILS_ENV=production DATABASE_URL=mysql2://user:pass@127.0.0.1/dbname SECRET_TOKEN=dummytoken assets:precompile

CMD puma -C config/puma.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, let's run thru the deployment process once again, in full:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add the captain-definition file.&lt;/li&gt;
  &lt;li&gt;Add the Dockerfile&lt;/li&gt;
  &lt;li&gt;Do a git add .&lt;/li&gt;
  &lt;li&gt;Do a git commit -m &quot;updated captain stuff&quot;&lt;/li&gt;
  &lt;li&gt;Everything has to be added and committed (but not pushed) since CapRover reads from the local git repo.  If its not added and committed, CapRover won't see it (and they warn you about this but I don't feel the warning is strenuous enough).&lt;/li&gt;
  &lt;li&gt;If this is a new app for you then goto your equivalent url to http://captain.caprover.com and define a new app.&lt;/li&gt;
  &lt;li&gt;On the first time Do a caprover deploy and use the up and down arrows to select the machine and the app.&lt;/li&gt;
  &lt;li&gt;Watch the Docker stuff build.&lt;/li&gt;
  &lt;li&gt;Try to goto the final url and it is likely going to fail with a 502 gateway error.  In this case it is because your Rails app is running in development mode and thus puma is defaulting to 3000.  You can adjust this with the Container HTTP Port setting on your equivalent url to:  https://captain.cartazzi.com/#/apps/details/cts-home-page2&lt;/li&gt;
  &lt;li&gt;Try going again to the domain and it should come up.&lt;/li&gt;
  &lt;li&gt;The next time you deploy you should be use: &lt;strong&gt;caprover deploy –default&lt;/strong&gt; and have it simply remember all the deployment settings.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Here are some good links for CapRover:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/&quot;&gt;CapRover Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/get-started.html&quot;&gt;Getting Started Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover/blob/master/captain-sample-apps/&quot;&gt;CapRover Example Apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/troubleshooting.html&quot;&gt;CapRover Troubleshooting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/app-scaling-and-cluster.html#more-than-one-registry&quot;&gt;Scaling with CapRover&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@kindlysendme/i-found-this-tool-that-helps-you-migrate-your-apps-from-heroku-to-digitalocean-in-10min-and-save-ca097a6e0d72&quot;&gt;Medium Overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caprover.com/docs/captain-definition-file.html&quot;&gt;Captain Definition File&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover-cli/issues/8&quot;&gt;Github Issue About Rails App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/caprover/caprover/issues/324&quot;&gt;Another Github Issue About Rails App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://app.slack.com/client/TC283H40M/CC241KRK4&quot;&gt;Slack Forum about CapRover&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/caprover/2019/11/10/using-caprover-on-aws.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/caprover/2019/11/10/using-caprover-on-aws.html</guid>
        
        <category>caprover</category>
        
        <category>aws</category>
        
        
        <category>caprover</category>
        
      </item>
    
      <item>
        <title>Equity Allocation in Startups</title>
        <description>&lt;p&gt;Once upon a time, I was speaking with a company founder and they mentioned that they had a VP of Engineering to whom they have given a 1/3 stake in the company.  I &lt;strong&gt;immediately&lt;/strong&gt; commented that was too much and then said &quot;I'll write this down in a blog post&quot; – and then I never did.  Last night, oddly, I woke up from a deep sleep with the desire to write this down.  And that brings us to this post.&lt;/p&gt;

&lt;p&gt;Here's what I can remember from that conversation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Company Stage&lt;/strong&gt;: Pre Funding&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Company Type&lt;/strong&gt;: Medical&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Equity Split with the VP of Engineering&lt;/strong&gt;: 1/3&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Founder Title&lt;/strong&gt;: Yes&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Did VP of Engineering Put in Cash&lt;/strong&gt;: No&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;you-need-to-understand-this&quot;&gt;You Need to Understand This&lt;/h2&gt;

&lt;p&gt;One of the basic rules of the startup world is that on Day 1, you, the founder, own &lt;strong&gt;100%&lt;/strong&gt; of something that is worth absolutely &lt;strong&gt;nothing&lt;/strong&gt;.  The goal, by the end, is that you own a much smaller percentage of something actually worth something.  As an example, owning 10% of something worth $10 million is actually much, much better.&lt;/p&gt;

&lt;h2 id=&quot;the-basic-rules-of-thumb-for-equity-allocations&quot;&gt;The Basic Rules of Thumb for Equity Allocations&lt;/h2&gt;

&lt;p&gt;Here are my rules of thumb to use for equity allocation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The more risk you take, the more you get&lt;/li&gt;
  &lt;li&gt;The earlier you join, the more you get&lt;/li&gt;
  &lt;li&gt;Putting time in is one type of risk&lt;/li&gt;
  &lt;li&gt;Putting cash in is a greater type of risk&lt;/li&gt;
  &lt;li&gt;If you, the founder, give too much equity to someone else then you can be pushed out by simply having that other person align with the investor or investors&lt;/li&gt;
  &lt;li&gt;You only have 80% of the equity to play with - 20% generally goes to an ESOP (employee stock option plan)&lt;/li&gt;
  &lt;li&gt;Make damn sure that you give out options not stock and a long vesting schedule (incremental over say 4 years)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line is that equity, in whatever form, is a reward for taking risk.  And the earlier you are involved in a startup, the more risk there is.&lt;/p&gt;

&lt;h2 id=&quot;my-personal-experience-from-feedster&quot;&gt;My Personal Experience from Feedster&lt;/h2&gt;

&lt;p&gt;A long, long time ago, I founded a blog search engine named Feedster.  I merged with another RSS search engine shortly after coming to market to address some technical limitations in my architecture.  We did the typical nerd founder thing and simply split the equity down the middle and both took the Founder title.&lt;/p&gt;

&lt;p&gt;In retrospect that wasn't a fair allocation because I committed significantly more time to Feedster but it avoided a difficult conversation that I was simply not brave enough to have – and that was a mistake.&lt;/p&gt;

&lt;p&gt;Once we realized that blog search was actually a viable business, my first hire was a CEO to handle the operations and capital raise.  This CEO:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Came in after the technology was built&lt;/li&gt;
  &lt;li&gt;Came in after the site had traffic&lt;/li&gt;
  &lt;li&gt;Came in after growth was proven&lt;/li&gt;
  &lt;li&gt;Did not have to put in any personal money&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The equity allocation for that CEO, bear in mind that this was 16 years ago so my memory may be fuzzy was between 9% and 10%.  That CEO's advice to me is that if we filled other VP level slots, we'd be talking about between a 3% to 5% stake.&lt;/p&gt;

&lt;p&gt;If you contrast these numbers with the 1/3 equity split mentioned above, it is considerably less and the reason was that an awful lot of the risk had already been addressed (functional technology, working product, site with traffic, no capital investment, etc).&lt;/p&gt;

&lt;h2 id=&quot;disclaimers&quot;&gt;Disclaimers&lt;/h2&gt;

&lt;p&gt;There are two important disclaimers to understand here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I am not a lawyer (IANAL) and my focus is always on making great technology NOT on the best personal economic return.  This means that there are aspects of capital raising and equity allocation that I don't now and likely never will fully understand.&lt;/li&gt;
  &lt;li&gt;I should also note that equity allocation is a particularly sensitive topic for me because, even though I was the founder, I was forced out by the people I hired and then voted off the board.  And while I am over it (somewhat), had the equity allocations been handled differently, that might not have happened.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-should-this-founder-do&quot;&gt;What Should This Founder Do?&lt;/h2&gt;

&lt;p&gt;My advice to this founder is to get &lt;a href=&quot;https://www.amazon.com/That-Will-Never-Work-Netflix/dp/0316530204/&quot;&gt;Marc Randolph's book, That Will Never Work&lt;/a&gt;, about the founding of Netflix and read pages 180 to 189.   Marc Randolph was the founder of Netflix and the original CEO.  In these pages, Reed Hastings not only told Marc that he needed to step down as CEO and be replaced by Reed but that he needed to give a substantial portion of his equity to Reed in order for that privilege.&lt;/p&gt;

&lt;p&gt;After reading these pages, I think that the founder needs to talk with the VP of Engineering and negotiate the equity split down, the 1/3 is just too high.  Once upon a time, I would have said that once you make an agreement, you have to keep it at all costs.  What this book has illustrated to me is that if circumstances change, you actually can renegotiate even on a sensitive topic like equity allocation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Marc Randolph stayed with Netflix for years even after being replaced as CEO and losing equity in the process.  So even difficult discussions don't necessarily end relationships.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Lest you think that I'm pulling this information out of thin air, I did try and confirm my thoughts a bit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://avc.com/2011/04/how-to-allocate-founder-and-employee-equity/&quot;&gt;AVC on Equity Allocation&lt;/a&gt;; Honestly just read everything that Fred Wilson writes.&lt;/li&gt;
  &lt;li&gt;The Joel Spolsky answer that Fred Wilson is referencing above is offline but I managed to find it in the &lt;a href=&quot;https://web.archive.org/web/20110415170946/http://answers.onstartups.com/questions/6949/forming-a-new-software-startup-how-do-i-allocate-ownership-fairly/23326&quot;&gt;Internet Archive&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/lebret/equity-split-in-startups&quot;&gt;Google's Equity Allocation&lt;/a&gt;: Eric Schmidt, the former CEO of Sun, only got 5.4%; &lt;a href=&quot;https://en.wikipedia.org/wiki/Omid_Kordestani&quot;&gt;Omid Kordestani&lt;/a&gt;, VP of Sales I believe, only got 1.8%.  Both these individuals joined later so they weren't really founders but this illustrates the basic concept that the later you join, the less risk so the less equity.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cooleygo.com/how-to-allocate-stock-to-founders-early-team-members/&quot;&gt;CooleyGo on Equity Splits&lt;/a&gt;; this has a VP of Marketing getting 17% at a founder stage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;None of the numbers are exactly the same as the Feedster situation but that's normal.  Every startup is different.  As the founder of this company, they need to examine the risk that this VP of Engineering candidate is taking and assess whether or not a 1/3 stake is actually warranted (example - is the VP of Engineering writing the prototype that is used to raise capital).&lt;/p&gt;

&lt;p&gt;And you can always run a &lt;a href=&quot;https://www.google.com/search?q=startup+equity+allocation&amp;amp;oq=startup+equity+allocation&amp;amp;aqs=chrome..69i57j69i60.6023j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;google search for Startup Equity Allocation&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/11/10/equity-allocation-in-startups.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/11/10/equity-allocation-in-startups.html</guid>
        
        <category>startup</category>
        
        <category>equity</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Adding a Show / Hide Feature to Your Bootstrap 4 Divs</title>
        <description>&lt;p&gt;I know this is simple but I am JavaScript / CSS challenged so I'm writing it down because I've had continuous problems with it in the past and I know that this solution works for Bootstrap 4.&lt;/p&gt;

&lt;p&gt;Let's say that you have a div that you want hidden and only displayed by a button when you click it.  Here's the solution:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#feeds&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-default&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-toggle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Toggle Feeds&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;feeds&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    This div (feeds) is hidden by default.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's how this works:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add a div named &lt;em&gt;feeds&lt;/em&gt; around the content you want hidden.  This needs to have a class named &lt;em&gt;collapse&lt;/em&gt; added to it because its default display state is collapsed.&lt;/li&gt;
  &lt;li&gt;Add an A tag with an href of &quot;#feeds&quot;  above the content and a data-toggle named &lt;em&gt;collapse&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;When the user clicks the A tag then the a tag's data-toggle will be applied to the matching div.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thank you to this &lt;a href=&quot;https://stackoverflow.com/questions/23873005/hide-div-by-default-and-show-it-on-click-with-bootstrap&quot;&gt;Stack Overflow post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/11/10/adding-a-show-hide-feature-to-your-bootstrap-divs.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/11/10/adding-a-show-hide-feature-to-your-bootstrap-divs.html</guid>
        
        <category>bootstrap</category>
        
        <category>html</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Ruby Madness - Right Hand If Statements and Syntax Error, Unexpected end-of-input, Expecting End</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7793.jpeg&quot; alt=&quot;IMG_7793.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;The Eagle's Nest AirBnB Cabin on the Ohio River; One of my favorite places…&lt;/p&gt;

&lt;p&gt;Last night I was on a coding tear, that moment when the solution is just &lt;strong&gt;crystal&lt;/strong&gt; clear.  That situation where something you've struggled with for days / weeks / months and then it all comest together.&lt;/p&gt;

&lt;p&gt;The result of this was a whole bunch of code stuck in a single model and then this morning when I was ready to run it across the entire dataset, I got this crap:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -c app/models/habit.rb
app/models/habit.rb:592: syntax error, unexpected end-of-input, expecting end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I &lt;strong&gt;censored&lt;/strong&gt; hate this error.  Line 592 is the end of the class and that means that the ruby parser just blithely skipped to the end and really has no useful positional information for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're not familiar with ruby -c, it is a syntax checker that makes sure your file is parseable.  Think of it as a poor man's lint.&lt;/p&gt;

&lt;p&gt;My usual approach to finding this error is to cut our half the code in the file and then re-run the ruby -c process.  And then repeat that until you get this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -c app/models/habit.rb
Syntax OK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's how I ended up finding the error but the error was ridiculously subtle.&lt;/p&gt;

&lt;p&gt;Here's the error:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_feeds&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_feed?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's the corrected version of the method:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_feeds&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_feed?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;habits_with_feeds&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, this is subtle, so I'm going to just call it out.  The issue was this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habits_with_feeds &amp;lt;&amp;lt; habit if habit.has_feed?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;versus&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;habits_with_feeds &amp;lt;&amp;lt; if habit.has_feed?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Clearly, to the ruby parser, the lack of something being added to the array qualifies as a missing end.  Yeah I get that but damn.   I'm personally a huge fan of right hand if statements due to the reduction of 3 lines down to 1 but this is a case where they bit me &lt;strong&gt;hard&lt;/strong&gt;.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/11/07/ruby-madness-right-hand-if-statements-and-syntax-error-unexpected-end-of-input-expecting-end.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/11/07/ruby-madness-right-hand-if-statements-and-syntax-error-unexpected-end-of-input-expecting-end.html</guid>
        
        <category>ruby</category>
        
        <category>debugging</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Running Effective Agile Standup Meetings</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_1407.jpeg&quot; alt=&quot;IMG_1407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So my new gig has moved to doing daily agile standup meetings and while I've done these before, I don't think I've ever seen them done quite so consistently well.  And the credit for this goes to my boss, Dave Sifry, who is our lead facilitator.  We are a team of 8 people and, so far, we have brought them in at under the scheduled 15 minutes per meeting every time.&lt;/p&gt;

&lt;p&gt;Here are the techniques that we are using:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Start on time&lt;/strong&gt;.  If everyone isn't there, well, the meeting happens anyway.  Ideally, if the team lead isn't on time, the meeting happens anyway.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scheduled for 5 minutes after the hour&lt;/strong&gt;.  This allows people in other meetings to make it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A consistent Url&lt;/strong&gt;.  This is the one down side to Zoom - the meeting can't start if the leader isn't present.  If we used Google Meet then that wouldn't be an issue.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A simple format&lt;/strong&gt;.  A ridiculously simple, fast format:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Here's what I'm up to today&lt;/li&gt;
  &lt;li&gt;Here's what I'm stuck on.&lt;/li&gt;
  &lt;li&gt;How can I help anyone else?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I'm generally not a fan of meetings, agile stand ups, done this way, tend to bring developers into line.  Even if a developer isn't good with email - or good with text messages - normally they can handle &quot;show up at time X for 15 minutes every day&quot;.&lt;/p&gt;

&lt;p&gt;In closing, while I'm not a huge proponent of &lt;a href=&quot;https://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-agile-model.html&quot;&gt;heavy weight agile processes (think scrum / agile velocity)&lt;/a&gt;, I am really enjoying daily stand ups again.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/11/06/running-effective-agile-standup-meetings.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/11/06/running-effective-agile-standup-meetings.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Stupid Simple ActiveRecord Optimizations or Why Rails Console is Essential for Development</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9823.jpeg&quot; alt=&quot;IMG_9823.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ever since 2008 when my pairing partner at the time, Jared, pushed me to basically live in the Rails console, I've been heavily, heavily dependent on the console as an essential developer tool.  I just watched something that pointed out to me just why it is so damn important.&lt;/p&gt;

&lt;p&gt;Here's what I observed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.6.3 :057 &amp;gt; m.change_pct_today_over_goal?
  Goal Load (65.2ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
  Habit Load (0.4ms)  SELECT `habits`.* FROM `habits` WHERE `habits`.`id` = 39 LIMIT 1
  Goal Load (0.5ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
  Goal Load (30.2ms)  SELECT `goals`.* FROM `goals` WHERE `goals`.`habit_id` = 39 ORDER BY `goals`.`id` ASC LIMIT 1
true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I simply can't think that the fact that we're loading the goal from the database 3 times is an optimal use of computing resources.  So I dug into the code and here's what I saw:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# original&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_pct_today_over_goal?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first 3 lines in the method above walk database associations back to the goal.  The simple optimization is to store the goal in a local variable so it is only read once:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# rewritten&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_pct_today_over_goal?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;goal&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;amount&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual_amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amount_over_goal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now it is possible that with the right caching strategy server side, this change wouldn't be necessary but caching is always problem.  It is simply better to solve this without caching because not only will that speed things in production but it will also speed things in development.&lt;/p&gt;

&lt;p&gt;And, yes, this would have been obvious if I had been tailing log files but the beauty of Rails console is that all this information is present if you simply pay a small bit of attention.&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/05/stupid-simple-activerecord-optimizations-or-why-rails-console-is-essential-for-development.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/05/stupid-simple-activerecord-optimizations-or-why-rails-console-is-essential-for-development.html</guid>
        
        <category>rails</category>
        
        <category>active_record</category>
        
        <category>optimization</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Reading Files to Strings using Python and then Loading them to JSON</title>
        <description>&lt;p&gt;I know this is dirt simple but I'm writing it down because it is one of those simple things that I just forget constantly.&lt;/p&gt;

&lt;p&gt;In each of these cases, the output is to the str variable.&lt;/p&gt;

&lt;h2 id=&quot;using-a-with-block-to-auto-close-the-file&quot;&gt;Using a With Block to Auto Close the File&lt;/h2&gt;

&lt;p&gt;As a rubyist, I keep reading this as str is local to the with &quot;block&quot;. Of course python doesn't have blocks …&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;python-35-path-statement-one-liner&quot;&gt;Python 3.5 Path Statement One Liner&lt;/h2&gt;

&lt;p&gt;I really like this approach but pathlib always has to be imported.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;non-auto-closing-not-recommended&quot;&gt;Non Auto Closing Not Recommended&lt;/h2&gt;

&lt;p&gt;This is simple but leaves an open file hanging around.  Sigh.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;auto-closing-single-line&quot;&gt;Auto Closing Single Line&lt;/h2&gt;

&lt;p&gt;This is elegant but it buries the assignment variable in the middle of the line which feels wrong.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;loading-it-to-json&quot;&gt;Loading it to JSON&lt;/h2&gt;

&lt;p&gt;The json.loads statement takes a string in and converts it to a Python dict / hash so all you need to do is inline the string reading call from above and get an easy one liner (if you disregard the import lines).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jsons/gab_02.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8369219/how-to-read-a-text-file-into-a-string-variable-and-strip-newlines&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://realpython.com/python-json/&quot;&gt;Real Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/11/04/reading-files-to-strings-using-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/11/04/reading-files-to-strings-using-python.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Using Git Commits to Learn to Program Ruby on Rails</title>
        <description>&lt;p&gt;I've been actively working on a side project for the past several months and one of the people who has been helping out a bit around the edges wants to learn how to program Ruby on Rails.  Since this, like everything I always do, is a distributed, remote effort, an in person teaching effort just doesn't work.&lt;/p&gt;

&lt;p&gt;When they pushed back on the feature set I was making and said that it wouldn't work for them, I said &quot;Well that's fine, tell me what &lt;strong&gt;you&lt;/strong&gt; want&quot;.  And they responded with a detailed set of Agile User Stories.  I took a look at these and I realized that if I mapped them into Github issues (aka tickets) and then Github Pull Requests that this might be exactly the right tool to get this person past the learning hump.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Just to be clear, it doesn't matter what the side project is.  Yes it is live on the Internet but it is buggy as hell.  And this is a major new feature.  The whole point of this blog post is to talk about a new learning technique not &quot;Scott's (current) Crazy Side Project&quot;.&lt;/p&gt;

&lt;h2 id=&quot;learning-from-code-commits&quot;&gt;Learning from Code Commits&lt;/h2&gt;

&lt;p&gt;The hard part with learning any new development framework is making the leap from &quot;here's what I want&quot; (the story) to &quot;here's what to do to make that&quot; (the code and tooling steps).  Now if you use Github &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;how we do, with a simple branch based development model&lt;/a&gt;, where 1 issue maps to 1 branch, this means that you can actually look at a user story and then see all the changes.&lt;/p&gt;

&lt;p&gt;This is a weird enough learning concept that I'm going to illustrate this step by step.&lt;/p&gt;

&lt;h2 id=&quot;beginning-with-the-story&quot;&gt;Beginning With the Story&lt;/h2&gt;

&lt;p&gt;Let's start with the agile user story:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a user, I want a currency system (ChangeCoins - CC) that is awarded to me for doing stuff.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From a Rails perspective, what this means, is that we need a data model, persistently stored to the database that tracks something else.&lt;/p&gt;

&lt;h2 id=&quot;continuing-to-the-issue&quot;&gt;Continuing to the Issue&lt;/h2&gt;

&lt;p&gt;Let's look at the issue in question:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_01_issue.png&quot; alt=&quot;learning_rails_from_commits_01_issue.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few notes on the issue here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&quot;Needs to tie back to user_id, metric_id, habit_id&quot; - this indicates foreign key relationships back to other data models in the project&lt;/li&gt;
  &lt;li&gt;&quot;bundle exec **rails g model **ChangeCoin&quot; - this is a Rails generator command which scaffolds up a new data model and all associated files&lt;/li&gt;
  &lt;li&gt;&quot;mate db/migrate/20191101144038_create_change_coins.rb&quot; - this is just opening the migration (a migration is a set of DDL commands to create a table or change something in the database)&lt;/li&gt;
  &lt;li&gt;&quot;bundle exec r&lt;strong&gt;ake db:migrate&lt;/strong&gt;&quot; - this executes the migration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A big reason for the notes on the issue is that if I don't put notes into the issue, how would you know that there are commands like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rail g model&lt;/li&gt;
  &lt;li&gt;rake db:migrate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These commands don't exist in the pull request so they have to be manually documented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're going to use this approach then I strongly, strongly advise you to add a label to your issues so that all issues can be logically grouped together.  Even though you think &quot;Oh I'll just work on this one thing&quot;, something else will come up (I got 2 issues into Change Coins and then found 4 other bugs, each of which was its own issue).&lt;/p&gt;

&lt;h2 id=&quot;the-branch&quot;&gt;The Branch&lt;/h2&gt;

&lt;p&gt;Now we need to turn to the Github branch and the pull request.  A pull request is a set of changes that, for this project, represent what happened in the branch.&lt;/p&gt;

&lt;p&gt;Let's start with the changed files in this branch:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_02_overview.png&quot; alt=&quot;learning_rails_from_commits_02_overview.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This shows that 4 files changed.  Now of these four files, one was automatically generated by the system (schema.rb) and isn't ever touched by the user and the other (reward_spec.rb) is just a skeleton file at this point so neither of these files will be shown.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_03_model.png&quot; alt=&quot;learning_rails_from_commits_03_model.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a Rails model file.  The source code comments beginning with pound symbols organize the model and illustrate where required things should be placed.  This isn't a Rails convention, this is a &quot;Scott&quot; convention as I find it helps me avoid making mistakes.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/learning_rails_from_commits_04_migration.png&quot; alt=&quot;learning_rails_from_commits_04_migration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a Rails migration file.  It lays out the data model for the entire table that stores the rewards for the user.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This isn't a perfect approach to learning, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Issues need to map 1:1 to agile user stories&lt;/li&gt;
  &lt;li&gt;Commands aren't captured by the git commit so you have to manually update the issue to capture them&lt;/li&gt;
  &lt;li&gt;It is mildly challenging to go back into a closed issue and find the changes related to the pull request because the request doesn't automatically track to the issue number but instead to the git commit hash; this might be a problem with me and how I name the pull requests; tbd.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even with these problems, I think there might be something interesting here.  I'll keep you posted if any real learning occurs from this.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/11/03/using-git-commits-to-learn-to-program-ruby-on-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/11/03/using-git-commits-to-learn-to-program-ruby-on-rails.html</guid>
        
        <category>rails</category>
        
        <category>git</category>
        
        <category>learning</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Running a Team Retrospective Meeting</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9822.jpeg&quot; alt=&quot;IMG_9822.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am a member of an 8 person team that is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;part of a non profit&lt;/li&gt;
  &lt;li&gt;distributed all over the country&lt;/li&gt;
  &lt;li&gt;trying to get started on a new initiative and find our footing; we are about 1 year old (I've only been here for 2 months)&lt;/li&gt;
  &lt;li&gt;just had our first offsite&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the offsite I witnessed a fascinating exercises in doing a retrospective on the past year's work that my boss, Dave Sifry, orchestrated.  This is now my third time consulting for Dave Sifry and he and I have done this before but I never documented it so I wanted to write down how to was done.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-retrospective-meeting&quot;&gt;What is a Retrospective Meeting?&lt;/h2&gt;

&lt;p&gt;A retrospective is when a team looks back and tries to determine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What went well&lt;/li&gt;
  &lt;li&gt;What to improve&lt;/li&gt;
  &lt;li&gt;Possible questions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of this type of retrospective is that you're doing it in a lightweight, agile fashion where you aren't spending days or even a day on it.  You can literally review a year's worth of work in under an hour (I know this because we just did it).&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;Here's what you need to do this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shared Google Spreadsheet that breaks things down into columns you can vote on.  Here's the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1f7xKqs_1jUKae1aaKhnTG_uO_xddifL3OXnf4nX3sSQ/edit?usp=sharing&quot;&gt;template&lt;/a&gt; to use.&lt;/li&gt;
  &lt;li&gt;A timer; we used &quot;Visual Timer 2&quot; on an iPad which was awesome since it had great sounds but any count down timer would work.  The key here is that you want it to be highly visible to everyone on the team hence using it on an iPad not a phone.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1---what-went-well&quot;&gt;Step 1 - What Went Well&lt;/h2&gt;

&lt;p&gt;Here are the specific steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take the spreadsheet template and save it to a new name, something like &quot;Project Name - Time Period - Retrospective&quot;.  Our name was &lt;strong&gt;CTS 2019 Retrospective&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Post the link to the spreadsheet in your team's Slack channel or email or something that everyone gets.&lt;/li&gt;
  &lt;li&gt;Start the timer and announce something like &quot;Ok.  Starting now.  We have 15 minutes to document what went well; GO !&quot;&lt;/li&gt;
  &lt;li&gt;Have everyone open the spreadsheet and start typing in things that went well.  If someone is working in cell A2 then move to cell A3 (or A10 or whatever).  No one should overwrite anyone's work.&lt;/li&gt;
  &lt;li&gt;Announce &quot;When you are done, return your cursor to A1&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If your experience is anything like ours, what you are going to find is that an awful lot of interesting things are going to emerge.  For our group, one of the most interesting was that we operated without a leader for 8 months.  Since I have just joined, I had no idea of this.&lt;/p&gt;

&lt;h2 id=&quot;step-2---everyone-votes-on-what-went-well&quot;&gt;Step 2 - Everyone Votes on What Went Well&lt;/h2&gt;

&lt;p&gt;At this point we have a list of all the things that everyone thinks went well.  But it is just a list and this list can be long (we had maybe 25 items).  The trick now is to prioritize it and you can do this by letting people vote on the items.  Everyone can vote on any item (including the ones they contributed).&lt;/p&gt;

&lt;p&gt;Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set the timer to a lesser amount of time.  Maybe 10 minutes if you spent 15 minutes to write all the tasks.&lt;/li&gt;
  &lt;li&gt;Tell people &quot;Ok.  Now vote on things.  Right now there is nothing in each cell and that's fine.  If you want to vote on something then put a 1 where it here is nothing.  If there is a 1 then make it a 2 and so on&quot;.&lt;/li&gt;
  &lt;li&gt;Tell people to begin.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The next step is to sort this which requires using some of the better features in Google Sheets.  Here's what to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mark a block in the spreadsheet from A2 (the first &quot;what went well&quot;) down to the last column in the voting block for &quot;what went well&quot;.&lt;/li&gt;
  &lt;li&gt;From the Data menu, select the Sort Range command.&lt;/li&gt;
  &lt;li&gt;Change the sort column over to B as you want to sort these by the vote and then by Z to A.  This lets you sort by the descending value of the votes, from most popular to least popular.&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/retrospective_sort.png&quot; alt=&quot;retrospective_sort.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3---what-to-improve&quot;&gt;Step 3 - What to Improve&lt;/h2&gt;

&lt;p&gt;The next step is repeat steps 1 and 2 but on the &quot;What to Improve&quot; section.  Use the same timed model of listing and then voting.  Be very careful when you story that you select C2 down to Dwhatever otherwise you'll mess up the data you carefully arranged in step 2.&lt;/p&gt;

&lt;h2 id=&quot;step-4---discuss&quot;&gt;Step 4 - Discuss!&lt;/h2&gt;

&lt;p&gt;The final step in all this is to a group discussion.  This too should be time bounded, say 20 minutes and you should take notes in the Comments / Possible Questions columns.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I've now done this twice with Dave Sifry and both times it turned the normal process of a retrospective from something painful, lengthy and annoying into a less than hour meeting with a detailed, useful takeaway – the spreadsheet.  While in previous career incarnations, I have been dubbed &quot;The Antiprocess&quot;, any process that makes meetings better, imho, is beyond awesome.   Thank you Dave!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/11/01/running-a-team-retrospective-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/11/01/running-a-team-retrospective-meeting.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Running a Daily Agile Standup Meeting</title>
        <description>&lt;p&gt;Simple agile stand ups
Here's what I'm up to today
Here's what I'm stuck on
How can I help anyone else&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Nov 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2019/11/01/running-a-daily-agile-standup-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/11/01/running-a-daily-agile-standup-meeting.html</guid>
        
        
      </item>
    
      <item>
        <title>Running a P1, P2, P3 Team Prioritization Meeting</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9749.jpeg&quot; alt=&quot;IMG_9749.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Really is anything more scary than prioritization???; Picture taken at Pete's Dueling Piano Bar, Austin, TX; Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am a member of an 8 person team that is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;part of a non profit&lt;/li&gt;
  &lt;li&gt;distributed all over the country&lt;/li&gt;
  &lt;li&gt;trying to get started on a new initiative and find our footing; we are about 1 year old (I've only been here for 2 months)&lt;/li&gt;
  &lt;li&gt;just had our first offsite&lt;/li&gt;
  &lt;li&gt;juggling way too much work hence the need to prioritize&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the offsite I witnessed a fascinating exercises in setting priorities that my boss, Dave Sifry, orchestrated.  I haven't seen prioritization done quite this way in the past so I wanted to write down how this was done.  I also made one important contribution during the process&lt;/p&gt;

&lt;h2 id=&quot;step-1---terms&quot;&gt;Step 1 - Terms&lt;/h2&gt;

&lt;p&gt;There are three types of priorities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;P1 - something that you have to do the instant it comes up; drop everything and worry about it&lt;/li&gt;
  &lt;li&gt;P2 - something that you can do on the second day&lt;/li&gt;
  &lt;li&gt;P3 - something that can wait 3 days&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-2---list-what-you-do&quot;&gt;Step 2 - List What You Do&lt;/h2&gt;

&lt;p&gt;This was a simple process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Put all people in the same room with a shared note space (white board or easel size post it )&lt;/li&gt;
  &lt;li&gt;Designate a person to write all the things that you do&lt;/li&gt;
  &lt;li&gt;Time bound the exercise to say 20 minutes and try and make sure that each person's tasks are listed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 1&lt;/strong&gt;: Make sure that the person listing the priorities on the white board / easel size post it has decent hand writing.  Our initial writer was close to illegible so we had to rewrite them all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip 2&lt;/strong&gt;: Use a different color pen for each person's tasks&lt;/p&gt;

&lt;h2 id=&quot;step-3---apply-the-priorities&quot;&gt;Step 3 - Apply the Priorities&lt;/h2&gt;

&lt;p&gt;You then go through the tasks and write down P1, P2, P3 next to each task.  Inherently you are going to err on the side of P1 which brings us to My Contribution.&lt;/p&gt;

&lt;h2 id=&quot;my-contribution&quot;&gt;My Contribution&lt;/h2&gt;

&lt;p&gt;My contribution to this process was actually pretty simple.  I asked this question:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How many top level, P1, priorities can a team our size support?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My boss had a brilliant answer - &quot;maybe one per person, possibly less&quot;.&lt;/p&gt;

&lt;p&gt;I really wasn't trying to be a jerk; just trying to apply my normal engineering perspective to things.&lt;/p&gt;

&lt;p&gt;This limited us to &lt;strong&gt;6&lt;/strong&gt; or &lt;strong&gt;7&lt;/strong&gt; P1 priorities and that forced the work in Step 3 to be restructured and a bunch of items to move from P1 to P2 or P3.&lt;/p&gt;

&lt;p&gt;The really interesting outcome of this exercise was that my own work, Engineering, ended up being a &lt;strong&gt;P3&lt;/strong&gt; priority!  And the reason was simple – we are in early, early stages of the product life cycle and while what we are doing is interesting, it isn't yet anything exposed to the public so other things have to be the top priority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We are a non profit that does advocacy and public policy work so we have an obligation to be responsive to the public / deal with crisis events that come up somewhat regularly.&lt;/p&gt;

&lt;h2 id=&quot;step-4---document-it&quot;&gt;Step 4 - Document It&lt;/h2&gt;

&lt;p&gt;The final step is to take an incredibly messy working document and then distribute it across the team.  This could be done with Google Docs, Slack or some other mechanism.&lt;/p&gt;

</description>
        <pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/10/31/how-to-set-priorities-in-a-team-meeting.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/10/31/how-to-set-priorities-in-a-team-meeting.html</guid>
        
        <category>management</category>
        
        <category>startup</category>
        
        <category>offsite</category>
        
        <category>team</category>
        
        <category>meetings</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>How to Make Progress on a Side Project - Invert</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9755.jpeg&quot; alt=&quot;IMG_9755.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Because side projects are as ridiculous as someone doing push ups on top of a set of dueling pianos; Picture taken at Pete's Dueling Piano Bar, Austin, TX; Recommended&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Great Googly Moogly!  My current side project is almost 10K lines of code in total or at least 5k lines (and yes there are tests, rspec, I don't know why it says 0 lines of tests):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1161 |    767 |      23 |      95 |   4 |     6 |
| Helpers              |    267 |    207 |       0 |      36 |   0 |     3 |
| Jobs                 |      2 |      2 |       1 |       0 |   0 |     0 |
| Models               |   2151 |   1316 |      23 |     137 |   5 |     7 |
| Mailers              |      4 |      4 |       1 |       0 |   0 |     0 |
| Channels             |      8 |      8 |       2 |       0 |   0 |     0 |
| JavaScripts          |   4351 |   3599 |       0 |     183 |   0 |    17 |
| Libraries            |   1304 |    811 |       0 |       7 |   0 |   113 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |   9248 |   6714 |      50 |     458 |   9 |    12 |
+----------------------+--------+--------+---------+---------+-----+-------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's big for a side project and it is particularly big for something that hasn't actually launched yet.  When I was building this, I made a deliberate decision about how I approached this side project which dramatically &lt;strong&gt;increased&lt;/strong&gt; my productivity.&lt;/p&gt;

&lt;p&gt;My decision, right from day 1, was to &lt;strong&gt;Invert&lt;/strong&gt;.  Normally we think of a side project as something you do &lt;strong&gt;after&lt;/strong&gt; work so what I did was to do my side project as my &lt;strong&gt;first thing&lt;/strong&gt; every day I worked on it.&lt;/p&gt;

&lt;p&gt;Here's my thinking on this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A side project is something that a developer does for his or her or their self (pronoun, pronoun, pick a pronoun).&lt;/li&gt;
  &lt;li&gt;Self comes before work. For serious developers, those that build side projects, a side project is literally self care.&lt;/li&gt;
  &lt;li&gt;Thus do it first thing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What I have found is that if you wait until after the day is done, you are just plain tired.  Often you have all the best intentions of working on something but you simply don't get to it because, well, &lt;strong&gt;life&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now when you do it first thing, I don't mean that I'm putting in 8 hours on my side project and then a day of work.  Sometimes I might put in 15 minutes.  Sometimes an hour.  Rarely has it been more than that.&lt;/p&gt;

&lt;p&gt;Let's look at the metrics real quick:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;50 work weeks in a year&lt;/li&gt;
  &lt;li&gt;Let's say you are 60% successful in working on your side project 3 days out of the week&lt;/li&gt;
  &lt;li&gt;Let's say that you manage to put in 0.5 hours per day on it&lt;/li&gt;
  &lt;li&gt;That's 1.5 hours per week or 75 hours per year&lt;/li&gt;
  &lt;li&gt;In a modern development context, using a framework, 75 hours actually &lt;strong&gt;can&lt;/strong&gt; build something. Add in some weekend time and you might really have something.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 31 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/side_project/2019/10/31/how-to-make-progress-on-a-side-project-invert.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/side_project/2019/10/31/how-to-make-progress-on-a-side-project-invert.html</guid>
        
        <category>side_project</category>
        
        
        <category>side_project</category>
        
      </item>
    
      <item>
        <title>Essential Technology for a Team Offsite</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9771.jpeg&quot; alt=&quot;IMG_9771.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of wrapping up a team offsite even though I was ostensibly the lead technologist present, I was not actually prepared in terms of bringing the right technology with me to facilitate the team's needs.  The single worst omission was the lack of an HDMI cable without which, I saw three tech folk (me, other engineer #1, team coordinator) fail to be able to connect a Mac, an iPad and a Windows box to a Chrome Cast equipped TV.&lt;/p&gt;

&lt;p&gt;Here is my list of the technical stuff I will never again be without for a team meeting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A couple of USB sticks.  Even today in the age of Google Drive and DropBox, USB sticks can still be more convenient&lt;/li&gt;
  &lt;li&gt;An &lt;a href=&quot;https://www.amazon.com/Anker-PowerCore-13000-Portable-Charger/dp/B00Z9QVE4Q/ref=sr_1_5?keywords=anker+USB+battery&amp;amp;qid=1572475840&amp;amp;sr=8-5&quot;&gt;Anker USB battery&lt;/a&gt; just in case&lt;/li&gt;
  &lt;li&gt;2 lightning cables, at least one of which is 6 foot like this &lt;a href=&quot;https://www.amazon.com/gp/product/B0753R2TWC/&quot;&gt;Amazon cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 6' &lt;a href=&quot;https://www.amazon.com/gp/product/B076FPGWNZ/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;amp;psc=1&quot;&gt;USB type C cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 USB 2 cable&lt;/li&gt;
  &lt;li&gt;1 power strip with USB ports&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/Desktop-Outlet-Braided-Extension-Office/dp/B07HCVFH82/&quot;&gt;extension cord with USB ports&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 Verizon Mifi Hotspot able to share connectivity if WiFi fails&lt;/li&gt;
  &lt;li&gt;1 ChromeCast&lt;/li&gt;
  &lt;li&gt;1 &lt;a href=&quot;https://www.amazon.com/AmazonBasics-High-Speed-HDMI-Cable-1-Pack/dp/B014I8SSD0/&quot;&gt;6' HDMI Cable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;1 USB Speaker like a Beats Pill&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is roughly enough technology to support a team offsite of 6 to 8 people (imho).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I use a MacBook 2015 classic so I still have real ports.  If you are using newer MacBooks then you likely need dongles as well.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/offsite/2019/10/30/essential-technology-for-a-team-offsite.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/offsite/2019/10/30/essential-technology-for-a-team-offsite.html</guid>
        
        <category>offsite</category>
        
        <category>management</category>
        
        <category>startup</category>
        
        
        <category>offsite</category>
        
      </item>
    
      <item>
        <title>What Does Snark to our Alexas Teach Our Kids</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9621.jpeg&quot; alt=&quot;IMG_9621.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;You would think by now that I'd be wise enough to capture the speaker as well as the slide when I take a photo; alas not; &lt;em&gt;sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Last week I saw &lt;a href=&quot;https://en.wikipedia.org/wiki/Daniel_H._Wilson&quot;&gt;Daniel Wilson&lt;/a&gt; speak over at Butler University.  Daniel is the author of &lt;a href=&quot;https://en.wikipedia.org/wiki/Robopocalypse&quot;&gt;Robopocalypse&lt;/a&gt;, Robogenesis, &lt;a href=&quot;https://en.wikipedia.org/wiki/How_to_Survive_a_Robot_Uprising&quot;&gt;How to Survive a Robot Uprising&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Where%27s_My_Jetpack%3F&quot;&gt;Where's My Jetpack&lt;/a&gt; and many other good bits of science fiction.  There were two surprising things in his presentation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;He was funny.  As someone who has written some pretty dark stuff, I was astonished at just how funny he was.  &quot;I asked my fellow Carnegie Mellon robotics folks what they'd to if the robots rose up and they all said the same thing - 1) Go to a staircase and go up one step and 2) wait for it to run out of batteries&quot;.  And then, with input like that, he made a damn book out of it!  &lt;strong&gt;Respect&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;He was surprisingly gender aware which is what I really want to talk about here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This second point is the focus of this blog post.  He is raising small children and he and his wife are teaching them to be respectful to their Alexa and / or Google Home by saying &quot;please&quot; and &quot;thank you&quot; to it.  This is &lt;strong&gt;interesting&lt;/strong&gt;.  His basic point boils down to this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Digital assistants tend to have female voices (there's a reason for this but its irrelevant for now)&lt;/li&gt;
  &lt;li&gt;What does it teach his son (or daughter) if they regularly hear Dad saying &quot;Alexa Shut the F up!&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cursing at Alexa, for me, is a bit of a dirty pleasure.  And this is particularly true when it is is an early morning alarm and I don't want got get up.  But I am now painfully aware that maybe I shouldn't do this – what am I teaching my youngest about how to interact with female voices?  &lt;em&gt;Deep, Deep Sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And Thank You to Daniel Wilson for such an interesting, funny talk.  His writings are definitely &lt;strong&gt;recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sbi_logo.jpg&quot; alt=&quot;sbi_logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don't want to get get into the gender issues around why we use assistive voices that are female and imperative voices that are male.  That is a different issue entirely.  And thanks to Lisa Meece of &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Starbase Indy&lt;/a&gt; fame for pointing this out to me and illustrating it with examples, specifically of the New York City Subway system.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/gender/2019/10/28/what-does-snark-to-our-alexas-teach-our-kids.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/gender/2019/10/28/what-does-snark-to-our-alexas-teach-our-kids.html</guid>
        
        <category>gender</category>
        
        <category>alexa</category>
        
        <category>manners</category>
        
        
        <category>gender</category>
        
      </item>
    
      <item>
        <title>Calling Python Methods - Subtleties with and without Parens</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_bar.jpg&quot; alt=&quot;sifry_london_bar.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;p&gt;In the continuing saga of &quot;Once upon a time I did ruby exclusively, now I do python and ruby side by side and I keep being stupid&quot;, I have discovered something subtle and interesting about how python works internally.&lt;/p&gt;

&lt;p&gt;Let's start with a function definition in python:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;expert_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Anti Semitic Speech Expert&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expert_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_opinion_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;slurs&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;raw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;score&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;opinion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expert_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expert_name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expert_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expert_version&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first two lines are globals and all the next line does is construct a hash (ok dict if I have to talk python).  I then embedded this method in my service and ran it using Firefly so I could call into it across the network and I got this curious error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  File &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/firefly/app.py&quot;, line 170, in __call__
    result = self.function(**kwargs)
  File &quot;/Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py&quot;, line 107, in opinion
    new_opinion[&quot;raw&quot;] = json_results
TypeError: 'function' object does not support item assignment
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but new_opinion isn't a function – it is a dict – so what the heck is going on???&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you're an experienced Python wrangler, you already got it – I know, I know – I'm slow as hell at times particularly when it comes to syntax changes.&lt;/p&gt;

&lt;p&gt;In ruby you can call methods with or without parens and the issue here is I had this syntax:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;opinion_template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_opinion_template&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;instead of:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;opinion_template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_opinion_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I simply forgot to add the parens when I called make_opinion_template.  Sigh.  The way I ultimately found this was to use a pdb.set_trace() call and evaluate opinion_template in the debugger.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; /Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py(109)opinion()
-&amp;gt; new_opinion[&quot;raw&quot;] = json_results
(Pdb) new_opinion
&amp;lt;function make_opinion_template at 0x13e328ef0&amp;gt;
(Pdb) quit()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then, after the fix:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; /Users/sjohnson/Sync/fuzzygroup/adl/antihate/antihate_experts/expert_antisemitic_speech_service.py(109)opinion()
-&amp;gt; new_opinion[&quot;raw&quot;] = json_results
(Pdb) new_opinion
{'name': 'slurs', 'raw': None, 'score': None, 'opinion': None, 'expert_name': 'Anti Semitic Speech Expert', 'expert_version': 0.01}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Personally I would have thought this would have been syntactically invalid but when a compile check didn't find an error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m py_compile expert_antisemitic_speech_service.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I am forced to admit that this must be lexically correct for some reason that I'm too unskilled at python to understand.&lt;/p&gt;

&lt;p&gt;So, a short note to myself: &lt;strong&gt;Don't forget the parens when you call methods&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/28/calling-python-methods-subtleties-with-and-without-parens.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/28/calling-python-methods-subtleties-with-and-without-parens.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Improving Your Terminal Prompt with a Starship</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_sunrise.jpg&quot; alt=&quot;sifry_london_sunrise.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;p&gt;I have a lot of computer skills.  I can program in multiple languages, I can remember how to use Norton Utilities for DOS, I can remember how to use Sun OS, I can tell you about not HTML, not XML, not SGML but GML (which begat SGML which in turn begat HTML which in turn begat XML), etc.  One of those computer skills that I don't have is *nix shell scripting – I suck at Bash; I suck at Zshell, etc.  And *nix shell scripting is how you customize your Terminal prompt.&lt;/p&gt;

&lt;p&gt;Now I know this sounds like Nerd minutiae (and it is) but your Terminal prompt is this rich land of information (or it can be; normally mine isn't).  About 6 months ago, Sean Kennedy, my pairing partner in crime, got me to change over to Zshell from Bash and, in doing so, update my prompt.&lt;/p&gt;

&lt;p&gt;My prompt now looks like this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_zsh.png&quot; alt=&quot;prompt_zsh.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that's damn good.  I mean it tells me the git repo and everything.  That's awesome.&lt;/p&gt;

&lt;p&gt;But, and this is a big but – if you have to customize it with bash, we can do better.  The easy way to do better is to use &lt;a href=&quot;The cross-shell prompt for astronauts&quot;&gt;Starship&lt;/a&gt; aka &quot;The cross-shell prompt for astronauts&quot;.  This is a Rust powered prompt that is designed for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ease of use&lt;/li&gt;
  &lt;li&gt;cross platform compatibilty&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://starship.rs/config/&quot;&gt;customization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how to get going with it on OSX:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install it with HomeBrew:  &lt;strong&gt;brew install starship&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Add the following to the END  of ~/.zshrc: &lt;strong&gt;eval &quot;$(starship init zsh)&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Source it with: source ~/.zshrc&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the reasons the prompt is so damn important isn't your local box but when you're logged into remote boxes such as AWS EC2 instances.  I cannot say just how much I wish this had existed when I was maintaining a large cluster of EC2 instances that I used to log into daily.  Sigh.&lt;/p&gt;

&lt;p&gt;Here's how my prompt looks out of the box:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship.png&quot; alt=&quot;prompt_starship.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I haven't delved too deeply into customization but the fact that I can use emojis to display my terminal state including shrug for untracked fills me a deep and unending joy:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_configuration.png&quot; alt=&quot;prompt_starship_configuration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now if you're not a hard core developer nerd, and even then one that spends a lot of time in a terminal, the picture above likely looks like line noise.  Here's just some of what you learn from it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;current directory&lt;/li&gt;
  &lt;li&gt;git branch name&lt;/li&gt;
  &lt;li&gt;that the git branch isn't pushed yet&lt;/li&gt;
  &lt;li&gt;git status&lt;/li&gt;
  &lt;li&gt;ruby version&lt;/li&gt;
  &lt;li&gt;aws region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I tried the customization quickly and it worked flawlessly.  My git prompt now shrugs at me with indifference when I add new files to a project.  w00t!!!  I love me some snarky software…&lt;/p&gt;

&lt;p&gt;Here are two more pictures showing my prompt when I move to a different terminal window to work in Python (it shows the difference between Python 2 and 3 which is incredibly helpful):&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_python_2.png&quot; alt=&quot;prompt_starship_python_2.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/prompt_starship_python_3.png&quot; alt=&quot;prompt_starship_python_3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Starship.  Wow.  Just plain wow.  This one thing has done more to convince me to look into Rust than all the damn tutorials / blog posts I've ever seen.  Fricking outstanding.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sbi_logo.jpg&quot; alt=&quot;sbi_logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And since we're talking about Starships, if you are in the Midwest / Indiana area, I'd like to point out that &lt;strong&gt;Starbase Indy is coming up soon&lt;/strong&gt;.  I'm actually Head of Engineering for this fan run convention and I hope to see any local readers there.  Head over to &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;StarbaseIndy.org&lt;/a&gt; to buy your ticket today.  Starbase Indy happens over Thanksgiving weekend and it is the best way in Indiana to run away from difficult relatives!&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/terminal/2019/10/26/improving-your-terminal-prompt-with-a-starship.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/terminal/2019/10/26/improving-your-terminal-prompt-with-a-starship.html</guid>
        
        <category>zsh</category>
        
        <category>terminal</category>
        
        <category>prompt</category>
        
        <category>rust</category>
        
        <category>starship</category>
        
        
        <category>terminal</category>
        
      </item>
    
      <item>
        <title>Heroku Is Amazing or Fixing INSERT command denied to user (MySQL)</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/sifry_london_market.jpg&quot; alt=&quot;sifry_london_market.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;Photo courtesy of my boss and friend, Dave Sifry who is in London right now attending MozFest; lucky guy!&lt;/p&gt;

&lt;h2 id=&quot;part-1-heroku-rocks&quot;&gt;Part 1: Heroku Rocks&lt;/h2&gt;

&lt;p&gt;I've been using Heroku quite a lot recently:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It is currently running my side project&lt;/li&gt;
  &lt;li&gt;I built a trial project purely to confirm that I knew how to deploy onto Heroku and then deployed it in just an hour or two&lt;/li&gt;
  &lt;li&gt;I deployed a proof of concept app for my day gig onto it that's pretty substantial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall I've never had such a seamless deploy experience using Rails as I've had with Heroku.  And I when I say seamless, I mean &quot;you can build a Rails app and deploy it in just a few hours&quot;.  Twelve plus years of Rails and I've never had such an easy time deploying things.&lt;/p&gt;

&lt;p&gt;I was very, very skeptical of the Heroku git push style deployment for a long, long time and I have to admit:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was wrong!  Amazingly wrong!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have always come at deployment from a traditional, heavy weight model.  And to have deployment not really be an issue is just shocking.&lt;/p&gt;

&lt;p&gt;This isn't to say that Heroku is perfect, it isn't – but it is damn &lt;strong&gt;amazing&lt;/strong&gt;.  Recommended.&lt;/p&gt;

&lt;h2 id=&quot;part-2-this-is-how-cloud-computing-was-supposed-to-work&quot;&gt;Part 2: This is How Cloud Computing Was Supposed to Work&lt;/h2&gt;

&lt;p&gt;Now, with the laudatory statements aside, I did hit an interesting bug / issue in Heroku today.  I use Heroku with MySQL because, well, I've put terabytes of data into MySQL over the years and it has never let me down.  Today tho I got this weirdness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mysql -ua_user_name -pa_passowrd a_database --host=a.rds.host.amazon.com &amp;lt; lib/tasks/data/db_dumps/police_crawl_development_2019-10-25.sql
 
ERROR 1142 (42000) at line 40: INSERT command denied to user 'cbneustt0on66p30'@'208-70-45-211.bb.hrtc.net' for table 'ar_internal_metadata'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My first thought was that the database instance wasn't fully logically isolated from others and I used –ignore-table to not export ar_internal_metadata.  And, clearly, that was a stupid idea because it just failed on the next table.  I did some digging and ended up on an obscure Stack Overflow page which said something to the effect that &quot;Heroku limits your space, perhaps you just have had your insert permissions disabled because you are out of space&quot;.  So I logged into MySQL remotely and got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [q0seyczrkn0dptvs]&amp;gt; show grants;
+--------------------------------------------------------------------------------------------------+
| Grants for a_user@%                                                                              |
+--------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'cbneustt0on66p30'@'%'                                                     |
| GRANT SELECT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES,   |
| TRIGGER ON `something`.* TO 'a_user'@'%'                                                         |
  +------------------------------------------------------------------------------------------------+
2 rows in set (0.04 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Jinkies!  My insert permission is gone!  So I logged into the Heroku dashboard and upgraded the MySQL addin from the baseline - which only gives you 5 mb of data - to the $10 / month option which gives you a full gigabyte and then I re-ran my show grants query and got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [q0seyczrkn0dptvs]&amp;gt; show grants;
+------------------------------------------------------------------------+
| Grants for cbneustt0on66p30@%                                          |
+------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'cbneustt0on66p30'@'%'                           |
| GRANT ALL PRIVILEGES ON `q0seyczrkn0dptvs`.* TO 'cbneustt0on66p30'@'%' |
+------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When we talk about cloud computing, this is how it was supposed to work – you can get started easily and then buy facilities on the fly as you need them.  And I get that this is similar to AWS but AWS is selling a more raw level of service.  Heroku is tightly coupled into the tooling ecosystem so it just takes your application and makes it work.  With AWS I can still buy capacity dynamically but I have to work to make use of it.&lt;/p&gt;

&lt;p&gt;In closing, I can take some issue with the crappy nature of the error message and the fact that I had to google around to figure this out but their underlying way of handling it (just take away the INSERT permission when you don't have any more space) was just plain &lt;strong&gt;elegant&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Heroku&lt;/strong&gt;.  Absolutely, positively recommended.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/heroku/2019/10/25/heroku-is-amazing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/heroku/2019/10/25/heroku-is-amazing.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        <category>mysql</category>
        
        
        <category>heroku</category>
        
      </item>
    
      <item>
        <title>Using Python to Get an Object's Methods / Attributes Dynamically</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7530.jpeg&quot; alt=&quot;IMG_7530.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm a Ruby guy who is learning python and one of the ways that I learned Ruby was by working directly with code in a REPL.  Ever since &lt;a href=&quot;https://www.alloycode.com&quot;&gt;Jared&lt;/a&gt; beat this into my head over and over (and over; I'm slow at times), I've been addicted to Ruby techniques like:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_methods&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I was just trying to do this in Python to debug a broken AWS S3 boto example and came up with this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pdb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'_PY_TO_OP_NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__class__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__delattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dict__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__dir__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__doc__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__format__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__init_subclass__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__le__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__lt__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__module__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ne__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__new__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__reduce_ex__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__repr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__setattr__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__sizeof__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__str__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__subclasshook__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__weakref__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_cache'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_client_config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_convert_to_request_dict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_emit_api_params'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_endpoint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_exceptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_exceptions_factory'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_get_waiter_config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_load_exceptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_make_api_call'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_make_request'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_register_handlers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_request_signer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_response_parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_serializer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_service_model'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'abort_multipart_upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'can_paginate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'complete_multipart_upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'copy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'copy_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'create_bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'create_multipart_upload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_analytics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_encryption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_inventory_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_lifecycle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_metrics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_policy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_replication'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_bucket_website'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_object_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_objects'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'delete_public_access_block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'download_file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'download_fileobj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'exceptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'generate_presigned_post'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'generate_presigned_url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_accelerate_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_analytics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_encryption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_inventory_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_lifecycle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_lifecycle_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_location'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_logging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_metrics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_notification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_notification_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_policy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_policy_status'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_replication'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_request_payment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_versioning'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_bucket_website'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_legal_hold'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_lock_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_retention'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_object_torrent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_paginator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_public_access_block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'get_waiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'head_bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'head_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_bucket_analytics_configurations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_bucket_inventory_configurations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_bucket_metrics_configurations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_buckets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_multipart_uploads'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_object_versions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_objects'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_objects_v2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list_parts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'meta'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_accelerate_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_analytics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_encryption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_inventory_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_lifecycle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_lifecycle_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_logging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_metrics_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_notification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_notification_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_policy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_replication'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_request_payment'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_versioning'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_bucket_website'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_acl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_legal_hold'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_lock_configuration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_retention'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_object_tagging'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'put_public_access_block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'restore_object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'select_object_content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_fileobj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_part'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'upload_part_copy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'waiter_names'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# or &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;__dir__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__dir__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__doc__&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__eq__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__eq__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__format__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__format__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__ge__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__ge__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__getattr__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__getattr__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__getattribute__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__getattribute__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__gt__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__gt__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__hash__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__hash__'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_client_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x107296d50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_convert_to_request_dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_convert_to_request_dict&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_emit_api_params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_emit_api_params&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_endpoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;east&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amazonaws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_exceptions&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_exceptions_factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorfactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientExceptionsFactory&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1065e9e90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_get_waiter_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_get_waiter_config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_load_exceptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_load_exceptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_loader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Loader&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1066060d0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_make_api_call&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_make_api_call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_make_request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_make_request&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S3&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10728cf10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ... &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# A lot omitted; it was long&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So, apparently the dir() method when called on a object, reveals quite a bit about the internal workings of the object.  Nifty!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8595184/how-to-list-all-methods-for-an-object-in-ruby/8595216&quot;&gt;StackOverflow and Getting Method Dynamically in Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6886493/get-all-object-attributes-in-python&quot;&gt;StackOverflow and Getting Method Dynamically in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 24 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/24/using-python-to-get-an-object-s-methods-attributes-dynamically.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Three Ways to Count the Objects in an AWS S3 Bucket</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7776.jpeg&quot; alt=&quot;IMG_7776.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;AWS S3, &quot;simple storage service&quot;, is the classic AWS service.  It was the first to launch, the first one I ever used and, seemingly, lies at the very heart of almost everything AWS does.&lt;/p&gt;

&lt;p&gt;Given that S3 is essentially a filesystem, a logical thing is to be able to count the files in an S3 bucket.  Illustrated below are three ways.&lt;/p&gt;

&lt;h2 id=&quot;method-1-aws-s3-ls&quot;&gt;Method 1: aws s3 ls&lt;/h2&gt;

&lt;p&gt;S3 is fundamentally a filesystem and you can just call ls on it.  Yep – ls in the cloud.  &lt;strong&gt;blink&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3 ls s3://adl-ohi/ --recursive --summarize | grep &quot;Total Objects:&quot;
Total Objects: 444803
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;method-2-aws-s3api&quot;&gt;Method 2: aws s3api&lt;/h2&gt;

&lt;p&gt;And since S3 is a modern filesystem, it actually has an API that you can call. Yep – a json api.  &lt;strong&gt;blink&lt;/strong&gt; &lt;strong&gt;blink&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws s3api list-objects --bucket adl-ohi --output json --query &quot;[length(Contents[])]&quot;
[
    448444
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;method-3-a-python-example&quot;&gt;Method 3: A Python Example&lt;/h2&gt;

&lt;p&gt;Naturally you can just run code to do all this.  I started with an example from the Stack Overflow link below that was written for boto and upgraded it to boto3 (as still a Python novice, I feel pretty good about doing this successfully; I remember when Ruby went thru the same AWS v2 to v3 transition and it sucked there too).  I also learned how to dynamically introspect methods from Python objects as part of this debugging cycle.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/local/bin/python&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s3bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'total size:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f GB&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'total count:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totalCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which gives output like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 scratch/count_s3.py adl-ohi
total size:
0.298 GB
total count:
486468
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have a live upload happening on another machine so the numbers do change and that's actually fine.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2862617/how-can-i-tell-how-many-objects-ive-stored-in-an-s3-bucket&quot;&gt;Stack Overflow on This&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/30249069/listing-contents-of-a-bucket-with-boto3&quot;&gt;More Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.list_objects&quot;&gt;S3 Boto Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#client&quot;&gt;More S3 Boto Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 24 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/10/24/three-ways-to-count-the-objects-in-an-aws-s3-bucket.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/10/24/three-ways-to-count-the-objects-in-an-aws-s3-bucket.html</guid>
        
        <category>aws</category>
        
        <category>s3</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Thank You Thoughbot for Your Timezone Article</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8144.jpeg&quot; alt=&quot;IMG_8144.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've been doing Rails now since 2007 and Ruby since 2006.  And, despite having implemented timezone support, literally I don't know how many times, I have never felt good about my knowledge of timezones.&lt;/p&gt;

&lt;p&gt;I just implemented timezones again - for my latest side project - and this time I actually feel pretty good about.  The credit goes to &lt;a href=&quot;https://thoughtbot.com/blog/authors/elle-meredith&quot;&gt;Elle Meredith&lt;/a&gt; of &lt;a href=&quot;https://thoughtbot.com&quot;&gt;ThoughtBot&lt;/a&gt; for her &lt;a href=&quot;https://thoughtbot.com/blog/its-about-time-zones&quot;&gt;outstandingly good, utterly excellent, truly splendid blog post on the topic&lt;/a&gt;.  Not only did she write a fantastic post, she also included this critical information: &quot;July 23, 2015 UPDATED ON March 28, 2019&quot;.  That's awesome because it tells me that it likely applies to my current version of Rails.&lt;/p&gt;

&lt;p&gt;Finally she wrote these Don'ts and Do's:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DON’T USE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time.now&lt;/li&gt;
  &lt;li&gt;Date.today&lt;/li&gt;
  &lt;li&gt;Date.today.to_time&lt;/li&gt;
  &lt;li&gt;Time.parse(&quot;2015-07-04 17:05:37&quot;)&lt;/li&gt;
  &lt;li&gt;Time.strptime(string, &quot;%Y-%m-%dT%H:%M:%S%z&quot;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;DO USE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time.current&lt;/li&gt;
  &lt;li&gt;2.hours.ago&lt;/li&gt;
  &lt;li&gt;Time.zone.today&lt;/li&gt;
  &lt;li&gt;Date.current&lt;/li&gt;
  &lt;li&gt;1.day.from_now&lt;/li&gt;
  &lt;li&gt;Time.zone.parse(&quot;2015-07-04 17:05:37&quot;)&lt;/li&gt;
  &lt;li&gt;Time.strptime(string, &quot;%Y-%m-%dT%H:%M:%S%z&quot;).in_time_zone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As someone who could probably grep his Rails code bases and find many hundreds if not thousands of Date.today calls, yikes!&lt;/p&gt;

&lt;p&gt;One of the reasons that I'm so damn happy about this is 10 minutes ago I had a dashboard board that showed 0 data items for today.  I then moved from Date.today to Date.current and re-deployed and my dashboard now shows me the correct information.  Given that it is 9:05 EST and, thus, roughly 3 am UTC (i.e. the next day), this pretty conclusively provides that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the article was good&lt;/li&gt;
  &lt;li&gt;when the directions in the article are followed, they work&lt;/li&gt;
  &lt;li&gt;that I was an idiot to use Date.today for so many years&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you Elle!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: One of the reasons that I have so frequently used Date.today is that I do an inordinate amount of data processing using Rake tasks where there isn't the context of a currently logged in user.  I'm still not sure what to do in these cases but I now have the knowledge to noodle on it at least.&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/23/thank-you-thoughbot-for-your-timezone-article.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/23/thank-you-thoughbot-for-your-timezone-article.html</guid>
        
        <category>rails</category>
        
        <category>timezone</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Don't Want Controller Level Helpers, Controller Level Javascripts, Controller Level Stylesheets</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9602.jpeg&quot; alt=&quot;IMG_9602.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the better Rails tricks that my buddy Sean Kennedy taught me over the past year was just how configurable Rails is.  Yes Rails is opinionated – but Rails isn't an asshole about it – Rails is configurable as all heck.&lt;/p&gt;

&lt;p&gt;Let's take the issue of controller level helpers.  A helper script file is automatically generated when you create a controller so when you generate a controller named DataSource, you get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  police_crawl git:(master) ✗ rails g controller DataSource
      create  app/controllers/data_source_controller.rb
      invoke  erb
      create    app/views/data_source
      invoke  helper
      create    app/helpers/data_source_helper.rb
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/data_source.coffee
      invoke    scss
      create      app/assets/stylesheets/data_source.scss
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But helpers are actually problematic because helpers have a &lt;strong&gt;global&lt;/strong&gt; namespace.  What a global namespace means is that if you have def display_content in one helper and def display_content in a different helper, and you call the display_app/helpers/data_source_helper.rb, you actually get the display_dollars routine that was loaded &lt;strong&gt;last&lt;/strong&gt;.  And the fact that you have say:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/helpers/data_source_helper.rb
app/helpers/tweet_helper.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;creates the idea in the developers mind that you will get the display_content routine from the context where you call it (either the views for data_source or the views for tweet).  I understand exactly why Rails works this way but it is, well, bullshite.  Getting rid of helpers spread across multiple files absolutely helps make this clear to developers – that there can only, ever be one method named display_content.&lt;/p&gt;

&lt;p&gt;Happily Rails isn't an asshole – even where it has strong opinions – and you can make Rails work the way that you want.  The way you do it, in this case, is you add an initializer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/initializers/generators.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and here's the contents of the initializer:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;generators&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;orm&lt;/span&gt;             &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;template_engine&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:erb&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test_framework&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:rspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fixture: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stylesheets&lt;/span&gt;     &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;javascripts&lt;/span&gt;     &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;helper&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now when I do that same generation step, I get:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  police_crawl git:(master) ✗ rails g controller DataSources
      create  app/controllers/data_sources_controller.rb
      invoke  erb
      create    app/views/data_sources
      invoke  rspec
      create    spec/controllers/data_sources_controller_spec.rb
      invoke  assets
      invoke    coffee
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I switched it from DataSource controller to DataSources for proper restful style.&lt;/p&gt;

&lt;p&gt;There is one caveat here and that's the one thing to watch out for with initializers.  This first bit me, hard, way, way, way back in 2007 and it still bites me in the arse from time to time.  Initializers are one of the first things loaded in your Rails app and any syntax error, no matter how small, stops your Rails app from starting.  And may the Flying Spaghetti Monster save you if you start a deploy with an initializer that is syntactically invalid.  &lt;strong&gt;shudder&lt;/strong&gt;. You should see my post on git pre-commit hooks to avoid this (&lt;a href=&quot;https://fuzzyblog.io/blog/git/2014/08/29/the-importance-of-git-hooks.html&quot;&gt;2014 Post&lt;/a&gt; and my &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/09/17/tiny-rails-tip-don-t-let-byebug-into-production.html&quot;&gt;2019 Post&lt;/a&gt;).&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/23/so-you-don-t-want-controller-level-helpers-controller-level-javascripts-controller-level-stylesheets.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/23/so-you-don-t-want-controller-level-helpers-controller-level-javascripts-controller-level-stylesheets.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Turn Off Automatic Prompting for OSX Updates Because Catalina is Bad So Far</title>
        <description>&lt;p&gt;Between &lt;a href=&quot;http://morrick.me/archives/8599&quot;&gt;Riccardo Mori's&lt;/a&gt; piece on Catalina and &lt;a href=&quot;https://mjtsai.com/blog/2019/10/15/catalina-system-issues/&quot;&gt;Michael Tsai's excellent writings&lt;/a&gt;, I flat out don't want to update to Catalina.  But I'm also tired of Apple prompting (harassing) me to update.   Here's how to stop it&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Apple menu.&lt;/li&gt;
  &lt;li&gt;System Preferences&lt;/li&gt;
  &lt;li&gt;Software Update&lt;/li&gt;
  &lt;li&gt;Advanced&lt;/li&gt;
  &lt;li&gt;Turn off Check for Updates&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the first time I've ever turned these options off.  Normally I just say no to it until it is time to do an update; this time I don't have any clue when that might be.&lt;/p&gt;

&lt;p&gt;Note: Apple has changed this from 2017.  If you aren't running Mojave then &lt;a href=&quot;https://gadgets.ndtv.com/laptops/features/how-to-enable-or-disable-automatic-updates-on-mac-1681435&quot;&gt;this&lt;/a&gt; may help you.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/22/turn-off-automatic-prompting-for-osx-updates-because-catalina-is-bad-so-far.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/22/turn-off-automatic-prompting-for-osx-updates-because-catalina-is-bad-so-far.html</guid>
        
        <category>osx</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Getting Used to Heroku and Rails</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9604.jpeg&quot; alt=&quot;IMG_9604.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I remember using &lt;a href=&quot;https://www.heroku.com&quot;&gt;Heroku&lt;/a&gt; in its very infancy when it was mostly a web based user interface for authoring Rails apps.  I looked at it, thought &quot;why would you want to author code in a browser; that's dumb af&quot; and promptly moved on.  Now, more than a decade later, I find myself using Heroku daily for my latest side project – and absolutely loving it.  This blog post lays out some tips and tricks that I've learned.&lt;/p&gt;

&lt;p&gt;All of this assumes you have a Rails application and it is configured to use Heroku.  If you don't have the heroku executable then you can use brew on OSX to install it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew tap heroku/brew &amp;amp;&amp;amp; brew install heroku
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-help&quot;&gt;Getting Help&lt;/h2&gt;

&lt;p&gt;Just use the –help flag to the heroku command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;running-the-rails-console&quot;&gt;Running the Rails Console&lt;/h2&gt;

&lt;p&gt;To load up a Rails console for your project, change into the product directory and:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku run rails console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;accessing-your-sql-database&quot;&gt;Accessing Your SQL Database&lt;/h2&gt;

&lt;p&gt;Just use the host parameter of your sql database's client software and connect to it directly.  Here's an example from mine (details changed):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mysql -uUSERNAME -pPASSWORD DB_NAME --host=HOSTNAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Get the details of what to connect to with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku config | grep CLEARDB_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;running-migrations&quot;&gt;Running Migrations&lt;/h2&gt;

&lt;p&gt;Migrations should run automatically on deployment.  Apparently, however, that is not always true and they can be run manually with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku run rake --trace db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Thank you to the very first user of my new side project for finding this.  Hat Tip.&lt;/p&gt;

&lt;h2 id=&quot;tailing-your-logs&quot;&gt;Tailing Your Logs&lt;/h2&gt;

&lt;p&gt;Heroku only gives you access to the last 1500 lines of your logs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku logs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For access to more logging into then I strongly, strongly, strongly recommend &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/10/21/honeybadger-even-more-awesome-than-ever.html&quot;&gt;HoneyBadger&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;listing-all-time-zones-or-running-any-damn-rake-task&quot;&gt;Listing All Time Zones (or Running Any Damn Rake Task)&lt;/h2&gt;

&lt;p&gt;You can see your time zones or run any rake task with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku rake time:zones:all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;to-view-your-configuration&quot;&gt;To View Your Configuration&lt;/h2&gt;

&lt;p&gt;View configuration details with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; heroku config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;importing-your-development-data&quot;&gt;Importing Your Development Data&lt;/h2&gt;

&lt;p&gt;See this &lt;a href=&quot;https://fuzzyblog.io/blog/heroku/2019/10/16/importing-your-local-mysql-database-into-heroku.html&quot;&gt;blog post&lt;/a&gt; if you want to import your development data.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;This is a &lt;a href=&quot;https://devcenter.heroku.com/articles/getting-started-with-rails5&quot;&gt;good article&lt;/a&gt; on Heroku.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/22/getting-used-to-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/22/getting-used-to-heroku.html</guid>
        
        <category>rails</category>
        
        <category>heroku</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Configuring a Git Repo for CI / CD Style Pull Requests</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6579.jpeg&quot; alt=&quot;IMG_6579.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a lot of senior software folk, I have a particular set of beliefs about how you should use version control.  I wrote these down back in &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;June&lt;/a&gt; but they amount to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;develop in a branch named for an issue&lt;/li&gt;
  &lt;li&gt;a pull request is made at code push time&lt;/li&gt;
  &lt;li&gt;the pull request is required to be reviewed before it is accepted&lt;/li&gt;
  &lt;li&gt;the issue branch is merged into develop&lt;/li&gt;
  &lt;li&gt;develop is automatically merged into master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only master goes to production and you never touch develop directly.  I've used this particular approach to version control for a number of years now and it really works splendidly.  Kudos to favorite pairing partner, Sean Kennedy, for beating this into my head when I was resistant.  Respect!&lt;/p&gt;

&lt;p&gt;Now while I've used this for a long time, I've never actually set it up on Github; I always deferred to others to do the heavy lifting on this.  This blog post outlines what has to happen to repo in order to support this style of development.&lt;/p&gt;

&lt;h1 id=&quot;step-1---your-gitconfig-file&quot;&gt;Step 1 - Your .git/config File&lt;/h1&gt;

&lt;p&gt;When you start with your repo, look at the .git/config file.  Here's mine:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat .git/config
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true      
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is actually what we want it to look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true
[remote &quot;origin&quot;]
	url = git@github.com:gochangeme/web_change_me_now.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch &quot;master&quot;]
	remote = origin
	merge = refs/heads/master
[branch &quot;develop&quot;]
	remote = origin
	merge = refs/heads/develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So our first step is to add a remote &quot;origin&quot;.  This is done by going to github and creating a repo and then adding it to the existing git repo with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin https://github.com/fuzzygroup/feed_finder.git
git push -u origin master   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;step-2---adding-a-develop-branch&quot;&gt;Step 2 - Adding a develop Branch&lt;/h1&gt;

&lt;p&gt;Our next step is to add a develop branch.  This is first done locally with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch develop
git co develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You next need to make a change and do the add / commit / push dance.  This can be done just by making a one line change to the readme on the repo.  After you push with git push origin develop, you need to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to the settings page for the repo.&lt;/li&gt;
  &lt;li&gt;Click on Branches from the sidebar.&lt;/li&gt;
  &lt;li&gt;Select develop from the drop down list and then click update.&lt;/li&gt;
  &lt;li&gt;Select that you agree with the ramifications of the change from the pop up window.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;step-3---adding-branch-protection&quot;&gt;Step 3 - Adding Branch Protection&lt;/h1&gt;

&lt;p&gt;The next step is to add a Branch Protection Rule to the develop branch:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click &quot;Add Rule&quot; from the &quot;Branch protection rules&quot; section on the Branches tab.&lt;/li&gt;
  &lt;li&gt;In Branch name pattern enter &lt;strong&gt;develop&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select &quot;Require pull request reviews before merging&quot;.  (Note - even if you are a solo developer, you can still merge by using your Admin privileges check box on the pull request review screen; this is a small usability hiccup for your personal development but it keeps your git practice the same for work and home and that's invaluable; and if that isn't enough, it is how I develop every single day on my side projects)&lt;/li&gt;
  &lt;li&gt;Set the &quot;Require approving reviews&quot; drop down to 1.&lt;/li&gt;
  &lt;li&gt;Do NOT check off the &quot;Include administrators&quot; option or you won't be able to override the approval requirement on your personal repos.&lt;/li&gt;
  &lt;li&gt;Click Save Changes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you have completed the changes above, you want to work in a branch and then push to that branch.  I illustrate this below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  feed_finder git:(1-circle-ci) git push origin 1-circle-ci
Counting objects: 14, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (13/13), done.
Writing objects: 100% (14/14), 2.52 KiB | 0 bytes/s, done.
Total 14 (delta 10), reused 0 (delta 0)
remote: Resolving deltas: 100% (10/10), completed with 10 local objects.
remote:
remote: Create a pull request for '1-circle-ci' on GitHub by visiting:
remote:      https://github.com/fuzzygroup/feed_finder/pull/new/1-circle-ci
remote:
To github.com:fuzzygroup/feed_finder.git
 * [new branch]      1-circle-ci -&amp;gt; 1-circle-ci
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that Github now returns a url as part of the push.  This pull request needs to be approved at Github so after your push is done, follow the url onto Github and click the &lt;strong&gt;Create pull request&lt;/strong&gt; button:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/1_open_a_pull_request.png&quot; alt=&quot;1_open_a_pull_request.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the Create Pull Request button and you'll see the Merge Pull Request screen.  Click the &lt;strong&gt;Merge pull request&lt;/strong&gt; button.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/2_merge_pull_request.png&quot; alt=&quot;2_merge_pull_request.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now since you don't have another person on the project, you need to merge it yourself with your Administrator privileges by toggling the check box and then the &lt;strong&gt;Confirm merge&lt;/strong&gt; button:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/3_confirm_merge_pull_request.png&quot; alt=&quot;3_confirm_merge_pull_request.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This becomes your entire workflow for git:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Develop in a branch.&lt;/li&gt;
  &lt;li&gt;Push to the branch.&lt;/li&gt;
  &lt;li&gt;Create the pull request.&lt;/li&gt;
  &lt;li&gt;Merge the pull request.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After that the CI / CD software handles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;merging your branch into develop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if the merge succeeds then merging develop into master&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;deploying master (if you continue down this path; deploy won't be covered in this article)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-4---adding-ci--cd-with-circle-ci&quot;&gt;Step 4 - Adding CI / CD with Circle CI&lt;/h1&gt;

&lt;p&gt;The next step is to add CI / CD with Circle CI.  You want to go over to &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; and login with your Github credentials.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;At the project list, under your Github credentials, select the repo you want to build and click the Follow button.&lt;/li&gt;
  &lt;li&gt;On the next page CircleCI directs you to add a .circleci/config.yml file to your project.  This is a yml file that describes how to build your software and run your tests.  Below I have a sample one for my project, feed_finder, a Ruby on Rails app.  Obviously yours would differ.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Ruby CircleCI 2.0&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;circleci/ruby:2.5.1-node-browsers&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;circleci/mysql:8.0.4&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;--default-authentication-plugin=mysql_native_password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;testpass&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;feed_finder_test&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;testuser&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;testpass&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_HOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;127.0.0.1&quot;&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;~/repo&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;checkout&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Download and cache dependencies&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;restore_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1-dependencies-&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# fallback to using the latest cache if no exact match is found&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1-dependencies-&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install dependencies&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;bundle install --jobs=4 --retry=3 --path vendor/bundle&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;save_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./vendor/bundle&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1-dependencies-&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# Our primary container isn't MYSQL so run a sleep command until it's ready.&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Waiting for MySQL to be ready&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;for i in `seq 1 30`;&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;do&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;nc -z 127.0.0.1 3306 &amp;amp;&amp;amp; echo Success &amp;amp;&amp;amp; exit 0&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;echo -n .&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;sleep 1&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;done&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;echo Failed waiting for MySQL &amp;amp;&amp;amp; exit 1&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Database setup&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;RAILS_ENV=test bundle exec rake db:create&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;RAILS_ENV=test bundle exec rake db:schema:load&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# run tests&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run tests&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;mkdir /tmp/test-results&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;TEST_FILES=&quot;$(circleci tests glob &quot;spec/**/*_spec.rb&quot; | circleci tests split --split-by=timings)&quot;&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;bundle exec rspec --format progress \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;--format RspecJunitFormatter \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;--out /tmp/test-results/rspec.xml \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;--format progress \&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;$TEST_FILES&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# collect reports&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;store_test_results&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/test-results&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;store_artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/test-results&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test-results&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A lot of this is cribbed from &lt;a href=&quot;https://www.freecodecamp.org/news/first-steps-into-continuous-integration-with-circle-ci-emberjs-and-github-1e273ea62f0c/&quot;&gt;this article on Ember&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The next step is to go into the &lt;a href=&quot;https://github.com/marketplace/circleci&quot;&gt;Github Marketplace&lt;/a&gt; and add a Free CircleCI plan to your Github account.&lt;/li&gt;
  &lt;li&gt;Go into CircleCI and &lt;a href=&quot;https://circleci.com/vcs-authorize/&quot;&gt;authenticate with your Github credentials&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go to the Add Project section where you will see a list of all your GitHub repositories.&lt;/li&gt;
  &lt;li&gt;Click Setup Project on your repo.&lt;/li&gt;
  &lt;li&gt;Select Linux as the operating system and Ruby as the language (or whatever).&lt;/li&gt;
  &lt;li&gt;Click Start Building and watch it fly along.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This blog post is currently incomplete; I'm still finishing the CI / CD portion but I had to deploy it immediately to share with a coworker.&lt;/p&gt;

</description>
        <pubDate>Tue, 22 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/10/22/configuring-a-git-repo-for-ci-cd-style-pull-requests.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/10/22/configuring-a-git-repo-for-ci-cd-style-pull-requests.html</guid>
        
        <category>git</category>
        
        <category>software_engineering</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Working with Python and Firefly and Tensor Flow Machine Learning</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/firefly.jpg&quot; alt=&quot;firefly.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am currently working on a project using Python that process data via standard in and then renders an opinion on it to standard out.  This is called an &lt;strong&gt;expert&lt;/strong&gt; and there are many of them that pass their opinion on down a pipeline (the original input is actually json and each expert adds its opinion into the json).&lt;/p&gt;

&lt;p&gt;The problem that I've discovered is that &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;Tensor Flow&lt;/a&gt; is extremely slow to startup.  This means that that my quickly running command line model hit an execution wall just due to the startup time of the Tensor Flow libraries.  The solution was to break my command line program into two parts.  I started with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expert_white_supremacy_speech.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and that needs to become:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expert_white_supremacy_speech.py
expert_white_supremacy_speech_service.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &quot;_service.py&quot; version of this will be run via a Python library called &lt;a href=&quot;https://rorodata.github.io/firefly/&quot;&gt;Firefly&lt;/a&gt; which provides &quot;functions as a service&quot; that are exposed via a restful API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: In computer science speech, a program that runs in the background is called a daemon or a service.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Note&lt;/em&gt; 2*: Because I'm going to have a number of these experts, I already have conventions around naming and since I will likely end up moving the &quot;opinion&quot; portion of all of the experts into this &quot;function as a service&quot; paradigm.  That way my web interface, written in Rails, can also call into it thru a simple curl command.&lt;/p&gt;

&lt;p&gt;Firefly provides a persistently running daemon which should have all the libraries loaded one time.  This daemon is run with the following syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firefly base_script_name.method_name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So in my case I will be running it as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firefly expert_white_supremacy_speech_service.opinion
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The default for Firefly is to run on port 8000.  And this is where it gets interesting.  Because I'm going to have different experts that are all going to need to render opinions that are all coming from different routines, I went into firefly thinking &quot;Ok; run one instance on port 8000 for method x; run another instance on part 8001 for method y and so on&quot;.  The actually approach is to use a config file which maps multiple methods from as many python files as you have.&lt;/p&gt;

&lt;p&gt;Let's illustrate this with two python scripts, fibs.py and squares.py and a config file, config.yml.  Here's the contents of each:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# this is squares.py&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# this is fibs.py&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.001&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;plotti1234&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fib&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;fibs.fib&quot;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/square&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;squares.square&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The syntax on the yaml file for the function line is &quot;base_python_script_name.method&quot;.&lt;/p&gt;

&lt;p&gt;This means that my approach is going to be to run firefly with the config file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firefly -c config.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I can then run call the functions as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(venv) ➜  scratch git:(master) ✗ python3
Python 3.7.4 (v3.7.4:e09359112e, Jul  8 2019, 14:54:52)
[Clang 6.0 (clang-600.0.57)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import firefly
&amp;gt;&amp;gt;&amp;gt; client = firefly.Client(&quot;http://127.0.0.1:8000/&quot;,auth_token=&quot;plotti1234&quot;)
&amp;gt;&amp;gt;&amp;gt; client.square(n=2)
4

&amp;gt;&amp;gt;&amp;gt; client.fib(5)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/firefly/client.py&quot;, line 115, in wrapped
    raise FireflyError('Firefly functions only accept named arguments')
firefly.client.FireflyError: Firefly functions only accept named arguments

&amp;gt;&amp;gt;&amp;gt; client.fib(n=5)
8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I left the error (client.find(5)) in place because it illustrates that firefly only works with named arguments which wasn't obvious (at least to me).&lt;/p&gt;

&lt;p&gt;If you watch the logs on the firefly execution, you see something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(venv) ➜  scratch git:(master) ✗ firefly -c config.yml
2019-10-21 13:23:18 firefly [INFO] Starting Firefly...
http://127.0.0.1:8000/
2019-10-21 13:23:28 firefly [INFO] calling function square
127.0.0.1 - - [21/Oct/2019 13:23:28] &quot;POST /square HTTP/1.1&quot; 200 2
2019-10-21 13:23:32 firefly [INFO] calling function fib
127.0.0.1 - - [21/Oct/2019 13:23:32] &quot;POST /fib HTTP/1.1&quot; 200 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;performance&quot;&gt;Performance&lt;/h1&gt;

&lt;p&gt;In my initial implementation on my white_supremacy_speech expert, I'm getting a performance characteristic compatible with Tensor Flow execution assuming the libraries were already resident.  This means that my assumptions on how Firefly works were correct and this performance bottleneck has been addressed.  And that means that my plan on moving the guts of the other opinion tools into Firefly is solid.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Additional firefly features include the ability to run with gunicorn in place of the internal web server for better scalability via a higher number of workers.  Overall Firefly is a &lt;strong&gt;pretty damn impressive&lt;/strong&gt; piece of software.  While I still love my Ruby and my Rails, I am finding that the overall Python ecosystem has a lot of good tools.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.liip.ch/en/blog/machine-learning-as-a-service-with-firefly&quot;&gt;Thomas Eberman - gunicorn reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://firefly-python.readthedocs.io/en/latest/&quot;&gt;Read the Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rorodata/firefly&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/creating-and-deploying-a-python-machine-learning-service-a06c341f020f&quot;&gt;Medium Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/21/working-with-python-and-firefly-and-tensor-flow-machine-learning.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/21/working-with-python-and-firefly-and-tensor-flow-machine-learning.html</guid>
        
        <category>python</category>
        
        <category>firefly</category>
        
        <category>machine_learning</category>
        
        <category>tensor_flow</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>HoneyBadger - Even More Awesome than Ever</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9584.jpeg&quot; alt=&quot;IMG_9584.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My new side project is hosted on Heroku and while Heroku is delightfully easy to deploy projects to, it has a limit on log files of 1500 lines.  That's basically close to zero for even a tiny side project so I moved to using &lt;a href=&quot;https://www.honeybadger.io&quot;&gt;HoneyBadger&lt;/a&gt; for error handling.&lt;/p&gt;

&lt;p&gt;HoneyBadger is one of those tools that I've watched ever since it started and I've seen it become consistently better over the years.  I haven't used in a bit and I cannot state just how awesome the overall experience and how &lt;strong&gt;thoughtfully designed&lt;/strong&gt; every aspect of it was.&lt;/p&gt;

&lt;p&gt;Here are some of the features that were new to me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jira Integration (convert an exception to a Jira issue)&lt;/li&gt;
  &lt;li&gt;Delegated credit card support (allows a developer's boss to add the credit card without giving it to the developer)&lt;/li&gt;
  &lt;li&gt;25+ different integrations&lt;/li&gt;
  &lt;li&gt;Github Issue integration&lt;/li&gt;
  &lt;li&gt;Uptime monitoring&lt;/li&gt;
  &lt;li&gt;Support for a metric crap ton of languages including: Ruby, Javascript, Elixir, Go, NodeJS, Java, Python, PHP, Clojure, C#, Crystal, Haskell, Google Apps Scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Absolutely Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Oh and in contrast, I also looked at &lt;a href=&quot;https://www.timber.io&quot;&gt;Timber.io&lt;/a&gt; (logfile capture versus exception monitoring; two approaches to the same thing and Timber.io doesn't even work with Rails 6 so, well, NOPE!)&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/21/honeybadger-even-more-awesome-than-ever.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/21/honeybadger-even-more-awesome-than-ever.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Accessing Your Mac via SSH / Rsync and Making Mac Networking Work for SMB</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8668.jpeg&quot; alt=&quot;IMG_8668.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently had to back up one Mac to another Mac using rsync (which runs on top of SSH) and I discovered that you can't simply rsync / ssh from one Mac to another. And, yes, I know that this change happened years and years ago but I don't often go Mac to Mac (using I go Mac to Linux Server).&lt;/p&gt;

&lt;p&gt;Here's the trick:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure your Macs are both on the same wifi access point or ethernet network&lt;/li&gt;
  &lt;li&gt;Go into System Preferences&lt;/li&gt;
  &lt;li&gt;Go into Sharing&lt;/li&gt;
  &lt;li&gt;Turn on Remote Login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd also recommend that you Turn on File Sharing also but think about that a bit before you do so.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.booleanworld.com/access-mac-ssh-remote-login/&quot;&gt;Boolean World&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.macsales.com/45185-mac-101-learn-the-power-of-rsync-for-backup-remote-archive-systems/&quot;&gt;Mac Sales&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 20 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/20/accessing-your-mac-via-ssh-rsync-and-making-mac-networking-work-for-smb.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/20/accessing-your-mac-via-ssh-rsync-and-making-mac-networking-work-for-smb.html</guid>
        
        <category>OSX</category>
        
        <category>ssh</category>
        
        <category>rsync</category>
        
        
        <category>OSX</category>
        
      </item>
    
      <item>
        <title>Rails 6 and Markdown Rendering - An Abject Personal Failure</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9517.jpeg&quot; alt=&quot;IMG_9517.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I am not bitching here about the quality of Rails, High Voltage or any of the Markdown gems.  This is all open source software and I am delighted to have the abundance of free tools available to me.  And, trust me, I know that when people bitch, they should put on their big boy pants and contribute a pull request back to fix things.  And, if I had been capable of fixing this, I would have.  Alas I failed at fixing this.&lt;/p&gt;

&lt;p&gt;Since I am a software engineer, I am experienced at failure.  One of the absolutely soul diminishing aspects of being a software engineer that none of us talk about is that we &lt;strong&gt;fail&lt;/strong&gt;.  We fail &lt;strong&gt;a lot&lt;/strong&gt;.  Last night, for example, I spent about four hours in engaged in a soul crushing battle to get the High Voltage gem to work with Rails 6.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/thoughtbot/high_voltage&quot;&gt;High Voltage gem&lt;/a&gt; is a gem that lets you put a series of pages like about, support, faq, etc in a directory and it injects into your application a &quot;pseudo controller&quot; that handles the display.  And then, if you aren't running Rails 6, you can add a markdown gem like &lt;a href=&quot;https://github.com/chrisroberts/kramdown-rails&quot;&gt;kramdown-rails&lt;/a&gt; and then have a directory of files like about.md, faq.md and have these be part of your application.  High voltage, along with a markdown gem, makes static pages an absolute delight.&lt;/p&gt;

&lt;p&gt;And then came Rails 6.  I put an alpha release of a side project live last night and my buddy &lt;a href=&quot;https://nickjanetakis.com/blog/&quot;&gt;Nick Janetakis&lt;/a&gt; helpfully clicked on the Faq link only to get a 500 error.  &quot;Oh yeah I commented, I've got an &lt;a href=&quot;https://github.com/thoughtbot/high_voltage/issues/289&quot;&gt;issue&lt;/a&gt; open on this&quot;.  I checked the issue and even tho I reported it 24 days ago, it was lying fallow.&lt;/p&gt;

&lt;p&gt;I figured, well, it is 2:30 in the morning and I had a craptacular night, why not dig into a complicated technical issue?  I mean how hard can this be – it is just a pseudo controller, right?  Well that was the beginning of a multiple hour session of low level gem debugging complete with a full round of Tourette's style cursing that I'm not real proud of but at least no one else was around.&lt;/p&gt;

&lt;p&gt;Here are the branch names I created during this fiasco:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;markdown_bullshit_fucking_waste_of_time&lt;/li&gt;
  &lt;li&gt;294-anti-markdown&lt;/li&gt;
  &lt;li&gt;295-fuck-markdown-again&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here are some of the github issues I made:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;295-fuck-markdown-again&lt;/li&gt;
  &lt;li&gt;throw out fucking markdown insanity and rewrite pages into html erb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I'd like to point out that no matter how pissed I got, I still followed good engineering practices:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;all code was always in a branch so I could always revert&lt;/li&gt;
  &lt;li&gt;issues were created&lt;/li&gt;
  &lt;li&gt;pull requests were used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good engineering practices, when truly ingrained, when they are &lt;strong&gt;habits&lt;/strong&gt;, carry you through bad experiences.  Thank you Sean Kennedy for beating this into my head.  Appreciated.&lt;/p&gt;

&lt;h1 id=&quot;things-i-learned-debugging-and-otherwise&quot;&gt;Things I Learned, Debugging and Otherwise&lt;/h1&gt;

&lt;p&gt;Here are some of the things I learned:&lt;/p&gt;

&lt;p&gt;When you are doing gem debugging on osx and using TextMate, it is really, really helpful to open the gem in question with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle show high_voltage
mate /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/high_voltage-3.1.2 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This one, admittedly, I knew already but I always forget it when debugging gems.  This opens the gem in a TextMate window with the full file tree of the gem available so you can add byebug calls freely.&lt;/p&gt;

&lt;p&gt;After you add a byebug call to a gem, you &lt;strong&gt;have&lt;/strong&gt; to start and stop the development server.&lt;/p&gt;

&lt;p&gt;Not a one of the different markdown gems or techniques worked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrisroberts/kramdown-rails&quot;&gt;https://github.com/chrisroberts/kramdown-rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vmg/redcarpet&quot;&gt;https://github.com/vmg/redcarpet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ytbryan/emd&quot;&gt;https://github.com/ytbryan/emd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bloggie.io/@kinopyo/rails-render-markdown-views-and-partials&quot;&gt;https://bloggie.io/@kinopyo/rails-render-markdown-views-and-partials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4163560/how-can-i-automatically-render-partials-using-markdown-in-rails-3/10131299#10131299&quot;&gt;https://stackoverflow.com/questions/4163560/how-can-i-automatically-render-partials-using-markdown-in-rails-3/10131299#10131299&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/56715152/using-erb-in-markdown-with-redcarpet&quot;&gt;https://stackoverflow.com/questions/56715152/using-erb-in-markdown-with-redcarpet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rails 6 changed the render template call from 1 parameter to two parameter and I suspect that's at the heart of this.&lt;/p&gt;

&lt;p&gt;And there were a few other things I tried.  I got fairly close at the end but I kept getting Markdown issues and, ultimately, I felt it was wiser to just, well, &lt;strong&gt;stop&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;my-final-solution&quot;&gt;My Final Solution&lt;/h1&gt;

&lt;p&gt;I ended up using the techniques that &lt;a href=&quot;https://blog.teamtreehouse.com/static-pages-ruby-rails&quot;&gt;teamtreehouse&lt;/a&gt; advocated which amounted to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A simple pages controller&lt;/li&gt;
  &lt;li&gt;A cool routing trick&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And to make it easier for me, I added a dynamic index template which handles giving me a list of all static pages so I can easily review them. This was a dead simple (and mildy crappy) view but at this point I was about dead on my feet and I just wanted it done.  Here's the view syntax:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&amp;gt;
&amp;lt;ul&amp;gt;
  &amp;lt;% Dir.entries(File.join(Rails.root, &quot;app/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)).sort.each do |file| %&amp;gt;
    &amp;lt;% next if file =~ /^_/%&amp;gt;
    &amp;lt;% next if file == 'index.html.erb'%&amp;gt;
    &amp;lt;% next if file == '.'%&amp;gt;
    &amp;lt;% next if file == '..'%&amp;gt;
    &amp;lt;% filename = File.basename(file, &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)%&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;%=link_to(filename, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#{filename}&quot;)%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This could obviously be quite a bit better but this is one of those features that you write solely for yourself.  It isn't linked to from anywhere on the site and the only one using it should be me or people on the project.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;If you do this stuff long enough, you are bound to fail at things.  I mean a software engineer's entire day basically amounts to &quot;try stuff over and over and stop when it starts working&quot;. And, if you are lucky, then you get to take the time to make it better and maybe improve it.  An embarrassingly large amount of the time that first working bit gets shipped.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/19/rails-6-and-markdown-rendering-an-abject-failure.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/19/rails-6-and-markdown-rendering-an-abject-failure.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>An Observation on TensorFlow and PyTorch Startup Time</title>
        <description>&lt;p&gt;I'm in the process of designing a STANDARD IN processing system implemented in Python using some fairly simple data processing and now some PyTorch machine learning.  The shocking thing to me was just how slowly all the required PyTorch libraries load in Python.&lt;/p&gt;

&lt;p&gt;We have:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;transformers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BertTokenizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BertForSequenceClassification&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;as dependencies.  And when you evaluate that in in the console I can count up to 6 one thousand (MacBook Pro 2015) as it evaluates.  I suspect the big deal here comes from BertTokenizer, BertForSequenceClassification because that must wrap in TensorFlow.&lt;/p&gt;

&lt;p&gt;Yes, yes, yes I know that's not exactly scientific but this is a process that we were treating as a data processing pipeline with each new input launching the process.  That type of lag means that I need to abstract my PyTorch / TensorFlow stuff into a persistently running service to which my pipeline talks.  Sigh.&lt;/p&gt;

&lt;p&gt;Looks like I need to wrap it in &lt;a href=&quot;https://github.com/rorodata/firefly&quot;&gt;FireFly&lt;/a&gt;.  At least I like the name …&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/18/an-observation-on-pytorch-startup-time.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/18/an-observation-on-pytorch-startup-time.html</guid>
        
        <category>pytorch</category>
        
        <category>python</category>
        
        <category>tensorflow</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>You Don't Need Catalina to Give Your Laptop a Second Monitor</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9499.jpeg&quot; alt=&quot;IMG_9499.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The single best feature of Catalina that I was looking forward to was Sidecar, the ability to use an iPad as a second monitor.  So I was fairly crushed to discover that Apple has limited Sidecar to their new series of MacBooks.  This, imho, sucks green monkey chunks because a lot of hardcore developers have stuck with the older MacBooks due to the lack of ports, the significantly worse keyboard, the annoyingly large trackpad, etc.&lt;/p&gt;

&lt;p&gt;While I'm not one of developers who can't function without their second monitor, I do find a second monitor useful.  Happily there is &lt;a href=&quot;https://www.duetdisplay.com/&quot;&gt;Duet Display&lt;/a&gt; which is a $10 AppStore purchase that gives you a second monitor via your iPad.  Strongly, strongly recommended.&lt;/p&gt;

&lt;p&gt;Shown below I happily have a status memo on the left hand iPad with &lt;a href=&quot;https://ranchero.com/netnewswire/&quot;&gt;NetNewsWire&lt;/a&gt; peeking out above it  while I write this post in TextMate.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9510.jpeg&quot; alt=&quot;IMG_9510.jpeg&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/17/you-don-t-need-catalina-to-give-your-laptop-a-second-monitor.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/17/you-don-t-need-catalina-to-give-your-laptop-a-second-monitor.html</guid>
        
        <category>osx</category>
        
        <category>ipad</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Git Large File Support Silently Skips Over Checkouts When Git LFS Isn't Installed</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9503.jpeg&quot; alt=&quot;IMG_9503.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This error bit me and a coworker &lt;strong&gt;hard&lt;/strong&gt; yesterday and I haven't seen it well documented anywhere so I wanted to make this very, very clear.  When you have large files checked into git and you are using git-lfs (git large file support), if you don't have the git large file support extensions installed on the machine where you do the checkout, you get what appears to be a correct checkout but the large files end up being, well, not missing but simply placeholders.&lt;/p&gt;

&lt;p&gt;In our case we had a machine learning model using Bert and PyTorch and the model file, in models/bertASmodel.pt appeared to check out correctly but here was what we actually got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l models/
-rw-rw-r-- 1 ubuntu ubuntu 134 Oct 16 19:10 bertASmodel.pt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's a 134 byte machine learning model!  W00t!  &lt;strong&gt;Snark&lt;/strong&gt;. But when we look at it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat models/bertASmodel.pt

version https://git-lfs.github.com/spec/v1
oid sha256:de6988063e95c1775e0b84e256b2c58a5964845325c2263778cda4d33520f50a
size 438039816
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After we installed git lfs support, we get this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l models/
total 427780
-rw-rw-r-- 1 ubuntu ubuntu 438039816 Oct 17 18:19 bertASmodel.pt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's now 400 odd megs.&lt;/p&gt;

&lt;p&gt;If you need to install git lfs then the instructions are &lt;a href=&quot;https://github.com/git-lfs/git-lfs/wiki/Installation&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pytorch-errors-when-the-model-is-present-but-missing&quot;&gt;Pytorch Errors When The Model is Present but Missing&lt;/h2&gt;

&lt;p&gt;Now the really, really interesting thing here was the error that PyTorch came up with when the model file was just this 138 byte file.  Because the model file wasn't actually missing, it seems like PyTorch went a tiny bit insane:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UnpicklingError: invalid load key, 'v'.
File &quot;/home/ubuntu/.local/lib/python3.6/site-packages/streamlit/ScriptRunner.py&quot;, line 310, in _run_script exec(code, module.__dict__)
File &quot;/home/ubuntu/hate-language-modeling/dashboard.py&quot;, line 49, in &amp;lt;module&amp;gt; model = load_model(model_dir / 'bertASmodel.pt')
File &quot;/home/ubuntu/hate-language-modeling/dashboard.py&quot;, line 14, in load_model model = torch.load(filename, map_location=lambda storage, loc: storage)
File &quot;/home/ubuntu/.local/lib/python3.6/site-packages/torch/serialization.py&quot;, line 426, in load return _load(f, map_location, pickle_module, **pickle_load_args)
File &quot;/home/ubuntu/.local/lib/python3.6/site-packages/torch/serialization.py&quot;, line 603, in _load magic_number = pickle_module.load(f, **pickle_load_args)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now this might make sense to someone with better Python skills than I but to me this is fairly maddening.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/10/17/git-large-file-support-silently-fails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/10/17/git-large-file-support-silently-fails.html</guid>
        
        <category>git</category>
        
        <category>python</category>
        
        <category>pytorch</category>
        
        <category>streamlit</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>A Step by Step Guide to Running Streamlit, PyTorch and Bert on a Cheap AWS Instance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9507.jpeg&quot; alt=&quot;IMG_9507.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://streamlit.io/&quot;&gt;Streamlit&lt;/a&gt; is an ideal tool for taking machine learning prototypes and building quick and dirty web front ends to them.  Yesterday in about a half hour, I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Created an aws instance&lt;/li&gt;
  &lt;li&gt;Got python and pip onto the instance&lt;/li&gt;
  &lt;li&gt;Took a codebase managed by git and installed it&lt;/li&gt;
  &lt;li&gt;Got a small machine learning app up and running with &lt;a href=&quot;https://streamlit.io/&quot;&gt;PyTorch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of this blog post goes over the specifics because there were several gotcha's that might catch you (my instance was too small, then my instance had too little disc space and then git lfs reared up and bit me in the proverbial arse).&lt;/p&gt;

&lt;p&gt;This isn't written with the exact step by step process but more &quot;if you are moderately aws experienced then you'll understand the steps&quot;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an AWS Ubuntu 18.04 ec2 instance using the AWS ec2 dashboard.  Because building python and pytorch is actually large and slow, you need to have extra memory and disc space.  I used a t2.large and I doubled the disc space to 16 gigs.&lt;/li&gt;
  &lt;li&gt;When you create the instance make sure that you allow for 8501 as the open port for traffic since that is Streamlit's default.&lt;/li&gt;
  &lt;li&gt;Install git lfs support as documented &lt;a href=&quot;https://github.com/git-lfs/git-lfs/wiki/Installation&quot;&gt;here&lt;/a&gt; or see &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/10/17/git-large-file-support-silently-fails.html&quot;&gt;my blog post on this&lt;/a&gt; if you have models checked into Git.  This is generally two steps: &lt;strong&gt;sudo apt-get install git-lfs&lt;/strong&gt; and then &lt;strong&gt;git lfs install&lt;/strong&gt; in the repo directory (note that this is out of order in these directions since I don't know if you are using lfs).&lt;/li&gt;
  &lt;li&gt;Install your code with a git checkout.  If your codebase isn't public then you should generate ssh keys on the box and add the public key onto your repo (or make the repo public for the two seconds it takes to clone it and then make it private again).&lt;/li&gt;
  &lt;li&gt;Install python with: &lt;strong&gt;sudo apt install python3&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Install pip with: &lt;strong&gt;sudo apt install python3-pip&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Install your python dependencies with: &lt;strong&gt;pip3 install -r requirements.txt&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Run Streamlit in the background with the &amp;amp; operator after your python script or:  &lt;strong&gt;streamlit run dashboard.py &amp;amp;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This allows Streamlit to detach and run even after you log out.  After Streamlit starts up, it will give you the url that you can give out to let people test it.&lt;/p&gt;

&lt;p&gt;If you find the &amp;amp; trick doesn't work then instead start the process with nohup: &lt;strong&gt;nohup streamlit run dashboard.py&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I haven't yet put all of this into an Ansible playbook for installing Streamlit but I'm not far from doing that because this whole process, well, SUCKED!  &lt;em&gt;chuckle&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: More details on &lt;a href=&quot;https://www.tecmint.com/keep-remote-ssh-sessions-running-after-disconnection/&quot;&gt;running background processes&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/17/a-step-by-step-guide-to-running-streamlit-pytorch-and-bert-on-a-cheap-aws-instance.html</guid>
        
        <category>python</category>
        
        <category>streamlit</category>
        
        <category>pytorch</category>
        
        <category>aws</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Wading Back into RSS Nerdery After So Many Years</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9446.jpeg&quot; alt=&quot;IMG_9446.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is with no small amount of personal trepidation that I am writing this post.  One of the worst parts of creating Feedster was pointing out to skilled technical people, often people who have skills that I &lt;strong&gt;deeply, deeply&lt;/strong&gt; respect, where their feed was technically correct but &lt;strong&gt;less than useful&lt;/strong&gt; (admittedly imho).  Feeds, whether RSS or Atom, seem to breed vitriolic opinions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I very deliberately have not linked to the feed that I'm commenting on here.  I'd like to point out that technically this feed is correct, valid and there is nothing wrong with it.  What I'm giving here is my opinion on how the feed could be more useful in an specific context.&lt;/p&gt;

&lt;p&gt;For the first time in a very, very long time, I find myself once again using an aggregator (thanks Brent for making &lt;a href=&quot;https://ranchero.com/netnewswire/&quot;&gt;NetNewsWire&lt;/a&gt; not just Great but Amazing Again) and the process of organizing a collection of feeds exposed the importance of the &lt;strong&gt;title&lt;/strong&gt; element.&lt;/p&gt;

&lt;p&gt;Here's an example of how I have feeds grouped into a collection:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/feed_nerdery_01.png&quot; alt=&quot;feed_nerdery_01.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is my &quot;personal&quot; folder.  This is a small, small collection of people that either I know personally or that I feel I know personally because I have read them for so damn long.  The problem is that the title &quot;writing&quot; doesn't actually identify the source.  Here is the underlying xml:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/feed_nerdery_02.png&quot; alt=&quot;feed_nerdery_02.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now this isn't an issue if you visit them on the web since you can always see the domain name in the browser.  But if you have them in an aggregator then this becomes an issue.  And yes, NetNewsWire, is awesome enough that you can rename the feed in NetNewsWire so it isn't an issue for you but despite 19 years of using an aggregator, this still wasn't an automatic action for me; I got all the way thru writing this before I thought of even trying that.&lt;/p&gt;

&lt;p&gt;I saw this all the time back in the Feedster day when we were indexing RSS / Atom feeds directly.  You would have a result from a feed and our display of the source blog would just say writing.  When the blogosphere was all just people, this made search results worse.&lt;/p&gt;

&lt;p&gt;The bottom line here is that if you think people will be using your feed then it is worth making sure that your title is descriptive.  In this case, for example, I would argue that the site's name and then &quot;writing&quot; would be a lot better.&lt;/p&gt;

&lt;p&gt;But I also respect this person and this is nothing more than my opinion (and, yes, I so don't want YAFFW; yet another feed flame war).&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rss/2019/10/16/wading-back-into-rss-nerdery-after-so-many-years.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rss/2019/10/16/wading-back-into-rss-nerdery-after-so-many-years.html</guid>
        
        <category>rss</category>
        
        <category>atom</category>
        
        
        <category>rss</category>
        
      </item>
    
      <item>
        <title>Importing Your Local MySQL Database Into Heroku</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9407.jpeg&quot; alt=&quot;IMG_9407.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It never fails to amaze me how poorly documented certain basic things are.  The topic today is getting your development data for something using MySQL loaded into Heroku.  This shouldn't be hard but Google certainly doesn't make it clear.  And, to be honest, Heroku certainly doesn't make it clear.  As with many things, the answer was obvious, but with Heroku being such a closed platform and having its own import tools for Postgres, I would have thought there was something other than the standard.&lt;/p&gt;

&lt;h2 id=&quot;step-1---find-your-mysql-credentials-in-heroku&quot;&gt;Step 1 - Find Your MySQL Credentials in Heroku&lt;/h2&gt;

&lt;p&gt;You want to go to your MySQL dashboard in Heroku and find your:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Host&lt;/li&gt;
  &lt;li&gt;Username&lt;/li&gt;
  &lt;li&gt;Password&lt;/li&gt;
  &lt;li&gt;Database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your Heroku Dashboard for MySQL can be found &lt;a href=&quot;https://dashboard.jawsdb.com/mysql/dashboard&quot;&gt;here&lt;/a&gt;.  No, I don't know why it is called &quot;jawsdb&quot;; some kind of shark fetish perhaps …&lt;/p&gt;

&lt;h2 id=&quot;step-2---dump-your-database-locally&quot;&gt;Step 2 - Dump Your Database Locally&lt;/h2&gt;

&lt;p&gt;You need to dump your database locally with something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqldump -uroot -p$UIOUFEIRE change_me_now_development &amp;gt; ~/change_me_now_development.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-3---make-a-command-line-to-import&quot;&gt;Step 3 - Make a Command Line to Import&lt;/h2&gt;

&lt;p&gt;You can use a standard MySQL command line to import the database using the host parameter to comment to the Heroku hosted version over the Internet.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uYOUR_USERNAME -pYOUR_PASSWORD YOUR_DATABASE --host=YOUR_HOST &amp;lt; lib/tasks/data/db_dumps/change_me_now_development_2019-09-26.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Substitute the values you found in step 1 for the &lt;strong&gt;YOUR&lt;/strong&gt; information and, of course, update the file you are importing from.&lt;/p&gt;

&lt;h2 id=&quot;step-4---verify&quot;&gt;Step 4 - Verify&lt;/h2&gt;

&lt;p&gt;After any type of database import from development to production, you really, really, &lt;strong&gt;really&lt;/strong&gt; want to verify that all the data you sent in to the production database actually got in.  There are lots and lots of ways to do this but an easy way is to dump the data back and see if it is roughly the same size.  This can be done with the standard mysqldump tool:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqldump -uYOUR_USERNAME -pYOUR_PASSWORD YOUR_DATABASE --host=YOUR_HOST &amp;gt; lib/tasks/data/db_dumps/change_me_now_production_2019-10-16.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then a simple ls -l tells us the truth of all this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l lib/tasks/data/db_dumps/
total 1808
-rw-r--r--  1 sjohnson  staff  457221 Oct 16 09:37 change_me_now_development_2019-09-26.sql
-rw-r--r--  1 sjohnson  staff  457198 Oct 16 10:23 change_me_now_production_2019-10-16.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is a difference of only 23 bytes between the import and the export and that's good enough for me!&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/heroku/2019/10/16/importing-your-local-mysql-database-into-heroku.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/heroku/2019/10/16/importing-your-local-mysql-database-into-heroku.html</guid>
        
        <category>mysql</category>
        
        <category>heroku</category>
        
        
        <category>heroku</category>
        
      </item>
    
      <item>
        <title>AWS Security 101</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9492.jpg&quot; alt=&quot;IMG_9492.jpg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Me Speaking on AWS Security 101 at Indy AWS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A few weeks ago, I happened to find myself at the local &lt;a href=&quot;https://www.meetup.com/indypy/&quot;&gt;IndyPy meetup&lt;/a&gt; (Python) and they asked for a speaker on &quot;AWS Security 101&quot; and I volunteered.  Two weeks later I gave that presentation.  While I know they made a live stream, I'm not sure who has rights to it / where it lives so I recorded a version of this presentation early this morning from my office and put it on YouTube for my few loyal readers.  Enjoy!&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OT8V1vLzNdw&quot; title=&quot;AWS Security 101!&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/OT8V1vLzNdw/0.jpg&quot; alt=&quot;AWS Security 101&quot; /&gt;&lt;/a&gt;
&lt;!--
https://youtu.be/OT8V1vLzNdw
--&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2019/10/15/aws-security-101.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/10/15/aws-security-101.html</guid>
        
        
      </item>
    
      <item>
        <title>Time Machine Stuck On Preparing Backup</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9474.jpeg&quot; alt=&quot;IMG_9474.peg&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Disapproving cat finds Time Machine annoying&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Embarrassingly for a computer professional, I spent much of the past 12 months with a personal laptop that wasn't backed up.  And I don't mean &quot;I backed it up infrequently&quot;, I mean there was no backup – period.  I use OSX and Time Machine would simply churn on &quot;Preparing Backup&quot; for days on end – one time I even let it run for a full weekend – to no avail.&lt;/p&gt;

&lt;p&gt;I even followed all the &lt;a href=&quot;https://www.lifewire.com/troubleshoot-time-machine-stuck-on-preparing-backup-2259980&quot;&gt;LifeWire tips&lt;/a&gt; and still nothing.&lt;/p&gt;

&lt;p&gt;What solved it was finally almost running out of space and discovering that I had a single directory of files that contained almost 552 gigabytes of crawl data from my failed Udemy misadventure.  Sigh.  Deleting all that data magically made Time Machine work again.&lt;/p&gt;

</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/14/time-machine-stuck-on-preparing-backup.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/14/time-machine-stuck-on-preparing-backup.html</guid>
        
        <category>osx</category>
        
        <category>time_machine</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>More Thoughts on Python vs Ruby</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9476.jpeg&quot; alt=&quot;IMG_9476.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I've been grinding away at Python on a regular basis and I have a few  small observations on the continuing differences.&lt;/p&gt;

&lt;h2 id=&quot;python-methods-require-&quot;&gt;Python Methods Require ()&lt;/h2&gt;

&lt;p&gt;When you code in Ruby you are never quite sure if something is a method or a variable (or in an ActiveRecord context, an attribute).  In Python everything that is a method requires () – even if there are no arguments.  So this means that you type:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and not&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;unless, of course, you are using &lt;a href=&quot;https://ipython.org/&quot;&gt;iPython&lt;/a&gt; (the equivalent of IRB + awesome print) in which case it automagically adds the damn parentheses.&lt;/p&gt;

&lt;p&gt;The bottom line here is that Python makes it simpler than Ruby to know when something is a method instead of a variable.  Is that a good thing?  I'm really, really not sure; I can certainly see complexities in a meta programming context.&lt;/p&gt;

&lt;h2 id=&quot;string-interpolation&quot;&gt;String Interpolation&lt;/h2&gt;

&lt;p&gt;Ruby's #{} string interpolation is damn magical – it just works in every context where you use a string.  Apparently this is a very, very new concept to Python, having only arrived in Python 3.6:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Scott is a &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;skill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;beginner&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scott is a {skill}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is called a Python f string and only started working this way in 3.6 at least according to &lt;a href=&quot;https://stackoverflow.com/questions/4450592/is-there-a-python-equivalent-to-rubys-string-interpolation&quot;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pulling exactly from the Stack Overflow article, I learned this.&lt;/p&gt;

&lt;p&gt;&quot;Prior to 3.6, the closest you can get to this is:&quot;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Spongebob Squarepants&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Who lives in a Pineapple under the sea? &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(name)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;locals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&quot;The % operator can be used for string interpolation in Python. The first operand is the string to be interpolated, the second can have different types including a &quot;mapping&quot;, mapping field names to the values to be interpolated. Here I used the dictionary of local variables locals() to map the field name name to its value as a local variable.&quot;&lt;/p&gt;

&lt;h2 id=&quot;toowtdi-or-theres-only-one-way-to-do-it&quot;&gt;TOOWTDI or There's Only One Way to Do It&lt;/h2&gt;

&lt;p&gt;I've always known about &lt;a href=&quot;https://wiki.python.org/moin/TOOWTDI&quot;&gt;TOOWTDI being sort of the python philosophy&lt;/a&gt; and as I dive into Python, I'm finding that really not to be the case anymore (if it ever was).  I find this to be particularly true with respect to packaging and the third party ecosystem related to Python.&lt;/p&gt;

&lt;h2 id=&quot;a-pythonic-aside&quot;&gt;A Pythonic Aside&lt;/h2&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/aquaman.jpg&quot; alt=&quot;aquaman.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Python community is very big on the term &lt;a href=&quot;https://stackoverflow.com/questions/25011078/what-does-pythonic-mean&quot;&gt;Pythonic&lt;/a&gt; as a way to indicate that you are doing it the right, the &lt;strong&gt;pythonic&lt;/strong&gt; way.  My 18 year old son has been watching me learn Python (and picking up a few tips along the way) and he made the observation that the Python community saying Pythonic is like Aquaman in Batman the Brave and the Bold saying &lt;a href=&quot;&quot;&gt;Outrageous&lt;/a&gt;! (very end of the linked clip).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tc_C1JRclDY&quot; title=&quot;Outrageous!&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/tc_C1JRclDY/0.jpg&quot; alt=&quot;Outrageous&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/14/more-thoughts-on-python-vs-ruby.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/14/more-thoughts-on-python-vs-ruby.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Python vs Ruby / Subtracting Arrays of Strings</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/100_5217.jpg&quot; alt=&quot;100_5217.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I did a simple but fascinating thing yesterday – I wrote a routine in python and ruby to subtract the different elements between two lists (python) or arrays (ruby) and then return a random element between the two lists (arrays).&lt;/p&gt;

&lt;p&gt;Let's start with the Ruby because it is way, way simpler:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expert_2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expert_3.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expert_4.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;expert_2.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;expert_3.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;expert_4.py&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now here is the python:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_3.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_4.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expert_1.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;remaining_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experts_so_far&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remaining_experts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expert_3.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_2.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'expert_4.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The interesting thing here is what's going on with the python.  My initial understanding of the python failure was that subtraction failed because it was lists of strings.  That's actually not the case.  Here's the result of two lists of integers being subtracted:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsupported&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operand&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'list'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What's going on here with the python is that we are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;casting the lists to sets and then&lt;/li&gt;
  &lt;li&gt;subtracting the sets&lt;/li&gt;
  &lt;li&gt;and then casting it back to a list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The interesting thing here is that sets have unique memberships so:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_experts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From a rubyist's perspective here, the surprising things are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;that array subtraction isn't a built-in python thing; I mean what the f ..&lt;/li&gt;
  &lt;li&gt;the amount of casting that is going on&lt;/li&gt;
  &lt;li&gt;the fact that set() is what converted an array to a set instead of calling .to_set on the array (admittedly after you did a require 'set')&lt;/li&gt;
  &lt;li&gt;needing to print the result in Python instead of Ruby's default return&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruby-doc.org/stdlib-2.6.5/libdoc/set/rdoc/Set.html&quot;&gt;Ruby Sets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3462143/get-difference-between-two-lists&quot;&gt;Stack Overflow on Python List Subtraction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/534855/subtracting-2-lists-in-python&quot;&gt;Stack Overflow Again on List Subtraction&lt;/a&gt; (less helpful; more confusing)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/13/python-vs-ruby-subtracting-arrays-of-strings.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/13/python-vs-ruby-subtracting-arrays-of-strings.html</guid>
        
        <category>python</category>
        
        <category>ruby</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Wow - Google Custom Search Is Badly Broken</title>
        <description>&lt;p&gt;So I just happened to be over on ruby-doc.org and I did a search on for strfitme.  This was the astonishingly bad results:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/ruby-doc-strftime.png&quot; alt=&quot;ruby-doc-strftime.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;WHAT. THE. HELL??? The first result on ruby-doc.org for strftime is how to use strftime for python!!!  Now if you look closely here, what you will see is that the python entry is coming up as an &lt;strong&gt;ad&lt;/strong&gt;.  Let's look at this again - here is what you see when you are on a 13&quot; MacBook Pro with a Retina display:&lt;/p&gt;

&lt;p class=&quot;center center&quot;&gt;&lt;img src=&quot;/blog/assets/strftime_1.png&quot; alt=&quot;strftime_1.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Default Search Results&lt;/p&gt;

&lt;p class=&quot;center center&quot;&gt;&lt;img src=&quot;/blog/assets/strftime_1.png&quot; alt=&quot;strftime_1.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Search Results After you Scroll Down a Bit&lt;/p&gt;

&lt;p&gt;So here are the errors from a user interface perspective:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ads within the search results ARE NOT clearly labeled.  That's bullshite; I'm sorry but it is bullshite.  If the ads look just like actual search results then, well, it is confusing as hell.  I am a search professional and I got confused.&lt;/li&gt;
  &lt;li&gt;There are enough ads that the first search result is off screen entirely – on a decent size screen – think about how this looks on Mobile …&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The actual first search result is:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html&quot;&gt;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and that's ok but the better result is to the offset link:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html#method-i-strftime&quot;&gt;https://ruby-doc.org/stdlib-2.5.1/libdoc/date/rdoc/DateTime.html#method-i-strftime&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/10/11/wow-google-custom-search-is-badly-broken.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/10/11/wow-google-custom-search-is-badly-broken.html</guid>
        
        <category>search</category>
        
        <category>ruby</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>I'm Open Sourcing An Active Record Extension for find_or_create_by_attributes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9460.jpeg&quot; alt=&quot;IMG_9460.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;url&quot;&gt;Url&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fuzzygroup/ar_extension&quot;&gt;https://github.com/fuzzygroup/ar_extension&lt;/a&gt;
# Active Record Extension&lt;/p&gt;

&lt;p&gt;This is an active record extension which adds two class methods to any ActiveRecord model:&lt;/p&gt;

&lt;h2 id=&quot;foo&quot;&gt;foo&lt;/h2&gt;

&lt;p&gt;This simply displays the text &quot;Jam Baby Jam&quot; to prove that it is working&lt;/p&gt;

&lt;h2 id=&quot;findorcreatebyattributes&quot;&gt;find_or_create_by_attributes&lt;/h2&gt;

&lt;p&gt;This can be used to create find or create instances of a class based on a hash of params and one or more required attributes.  Let's say that we have a class called Site.  It can be invoked in two ways:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reddit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;protocol: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;domain: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reddit.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;url: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.reddit.com/&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create_by_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create_by_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reddit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;protocol: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_or_create_by_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;## Installation Instructions&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Copy config/initializers/extension.rb to config/initializers in your Rails app, the config directory.&lt;/li&gt;
  &lt;li&gt;Copy lib/active_record_extension.rb to lib in your Rails app.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sidebar&quot;&gt;Sidebar&lt;/h2&gt;

&lt;p&gt;This is really quite simple but I use it on almost every single project so I wanted to open source it so I can freely use it without worry about licensing.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/10/11/i-m-open-sourcing-an-active-record-extension-for-find-or-create-by-attributes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/10/11/i-m-open-sourcing-an-active-record-extension-for-find-or-create-by-attributes.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Never Underestimate Your Own Stupidity - A Jekyll CSS Issue</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9444.jpeg&quot; alt=&quot;IMG_9444.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For a long, long time, I've wanted the ability to center things, specifically images, in my blog posts.  I use a tool called Jekyll for blogging and the directions in the Github &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/3219&quot;&gt;Jekyll thread on this&lt;/a&gt; are pretty clear:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(https://education.github.com/assets/sdp-backpack&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;872&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4211&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;af&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;bac&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;aef&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;fbb&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a.png&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Github Developer Pack&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then put this in your CSS file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* To center images */
.center {
    text-align: center;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, as with many CSS things, I failed (miserably) at it the first few (dozen) times I tried to make this work.  Then, as generally happens, I got busy and simply forgot (well ignored in an embarrassed fashion) about it.&lt;/p&gt;

&lt;p&gt;Given that I've been busily taking pictures as of late, mostly, to put at the top of blog posts, I thought I'd take another pass at it.&lt;/p&gt;

&lt;p&gt;I started in my coding editor by trying to add the .center directive to my css file.  And I did so but it failed.  I then thought &quot;Hm… what if something else is overriding it&quot; and I looked at all my css files and I found this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/css_stupid.png&quot; alt=&quot;css_stupid.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What that says is take anything with a center attribute and &quot;center it&quot; and then the next directive says take anything with a center attribute and &quot;left align&quot; it.  Oof!.&lt;/p&gt;

&lt;p&gt;Yep.  I'm a bozo.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/css/2019/10/09/never-underestimate-your-own-stupidity-a-jekyll-css-issue.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/css/2019/10/09/never-underestimate-your-own-stupidity-a-jekyll-css-issue.html</guid>
        
        <category>css</category>
        
        <category>jekyll</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Google Calendar Tip - Custom Repeat</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9003.jpeg&quot; alt=&quot;IMG_9003.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the lovely, lovely things about your kids getting older, possibly the only damn thing, is that as they do, you and your spouse / significant other, have more time for each other.  In the case of my wife and I, we are finally trying to set a formal date night – every Tuesday night.&lt;/p&gt;

&lt;p&gt;The way that I wanted to do this was to structure it so that one week I plan it and the next week she plans it.  That way it isn't always my responsibility and isn't always her responsibility.&lt;/p&gt;

&lt;p&gt;Now this seems simple enough until you want to put it on your calendar because this isn't a simple &quot;Every Week Repeat&quot;.  What I want is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;week 1 - Shelley &amp;amp; Scott Date Night; Scott Plan&lt;/li&gt;
  &lt;li&gt;week 2 - Shelley &amp;amp; Scott Date Night; Shelley Plan&lt;/li&gt;
  &lt;li&gt;week 3 - Shelley &amp;amp; Scott Date Night; Scott Plan&lt;/li&gt;
  &lt;li&gt;week 4 - Shelley &amp;amp; Scott Date Night; Shelley Plan&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The trick here is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On the first week you create the event titled &quot;Shelley &amp;amp; Scott Date Night; Scott Plan&quot; with whatever time (I chose 7 pm to 11:30 pm)&lt;/li&gt;
  &lt;li&gt;Then you click More Options&lt;/li&gt;
  &lt;li&gt;Change Does Not Repeat to Custom&lt;/li&gt;
  &lt;li&gt;Set it to Repeat every 2 weeks&lt;/li&gt;
  &lt;li&gt;Add your spouse / significant other's email as a guest&lt;/li&gt;
  &lt;li&gt;Save the event&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that gives you this type of calendar entry!&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/google_calendar/2019/10/09/google-calendar-tip-custom-repeat.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/google_calendar/2019/10/09/google-calendar-tip-custom-repeat.html</guid>
        
        <category>google_calendar</category>
        
        
        <category>google_calendar</category>
        
      </item>
    
      <item>
        <title>And So I Decide to Release Some Ruby Code as Open Source</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9420.jpeg&quot; alt=&quot;IMG_9420.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I find myself today having to make an economic decision of sorts.  I am a consultant again and I find myself wanting to use some of the tools and libraries that I have developed &quot;internally&quot; for my current client.  This is a problem because, technically, I own the intellectual property on these tools.  And, to be clear, these aren't a big deal in terms of code – they are more utility players than they are something of huge merit.  Still, they are &lt;strong&gt;mine&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;One approach would be to try and figure out what they are worth and bill the client for the time to write them.  The problem with that is the license then flows to the client – and I don't want that.  I love my damn tools and I want to be able to use them myself.&lt;/p&gt;

&lt;p&gt;So the easiest approach here is to simply open source them, likely MIT license, and then put them on Github.  That way I can just pull them down and incorporate them into whatever I choose to use them on.  It is likely a crappy decision economically but a good decision overall.&lt;/p&gt;

&lt;p&gt;And, so, &lt;a href=&quot;https://github.com/fuzzygroup/sync-dot-rake&quot;&gt;sync.rake is open sourced&lt;/a&gt; (turns out I did this way, way back in April 2017 but I think I forgot to blog it).  &lt;strong&gt;Chuckle&lt;/strong&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/10/09/and-so-i-decide-to-release-some-ruby-code-as-open-source.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/10/09/and-so-i-decide-to-release-some-ruby-code-as-open-source.html</guid>
        
        <category>ruby</category>
        
        <category>consulting</category>
        
        <category>open_source</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Thoughts on Python and Elixir from a Rubyist's Perspective</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9415.jpeg&quot; alt=&quot;IMG_9415.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm about 4 weeks into the learning python stage and I could be fairly wrong about some of this.  I apologize for any stupidity but learning languages is a subtle process and I have found that writing things like this helps the process.&lt;/p&gt;

&lt;p&gt;Leaving a good job where you like the product, like the team and like your co-workers is a hard thing to navigate.  I recently did this and got this message today from my former boss:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How ru liking python? I’ve been thinking about spending some free time on it or elixir. Got your shirt ordered btw.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My response to him was that I liked Python and I'd send him some thoughts on Python / Elixir (since I did a solid dive into Elixir a few years ago).  And that's how this article came into being.&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;p&gt;In many ways Python and Ruby feel more than a bit like kissing cousins.  Both:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;are scripting languages&lt;/li&gt;
  &lt;li&gt;are object oriented&lt;/li&gt;
  &lt;li&gt;are useful in web contexts and in automation contexts&lt;/li&gt;
  &lt;li&gt;have frameworks although Ruby has the more successful (Rails)&lt;/li&gt;
  &lt;li&gt;use def to define methods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A fundamental difference between Ruby and Python is Python's approach of &quot;invisible semantics&quot;.  I am referring here to the use of indentation as a structural mechanism for formatting code – get your indentation wrong and your code doesn't work.  This is particularly a problem with copy and paste from online code sites / blogs.  I find that this as well as the use of the : to indicate the start of a control structure are the two constant mistakes I make.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;One of the things that I have found most irritating about python is that imported modules referenced in a main script are not available to &quot;sub scripts&quot; (i.e. other imported modules).  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat jsons/4chan_pol_has_slur.json | python3 expert_slurs.py --source=4chan
Template Expert
Traceback (most recent call last):
  File &quot;expert_slurs.py&quot;, line 87, in &amp;lt;module&amp;gt;
    main()
  File &quot;expert_slurs.py&quot;, line 65, in main
    json_str = common_expert.read_std_in_to_string()
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/common_expert.py&quot;, line 3, in read_std_in_to_string
    for line in sys.stdin:
NameError: name 'sys' is not defined
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Even though I have&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from sys import stdin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At the top of my expert_slurs.py file, it isn't available in common_expert.py (which comes &lt;strong&gt;after&lt;/strong&gt; the inclusion) and has to be imported again at the top of common_expert.py.&lt;/p&gt;

&lt;p&gt;Variables in a python method lack the block locality that they have in Ruby.  Coming from a ruby context, this is massively strange.  Apparently you can sort of achieve this by &lt;a href=&quot;https://stackoverflow.com/questions/6167923/block-scope-in-python&quot;&gt;defining functions within functions&lt;/a&gt; but, well, &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;elixir&quot;&gt;Elixir&lt;/h2&gt;

&lt;p&gt;I started looking at Elixir back in 2016 when I went to ElixirConf and I, well, fell in love.  Here was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a functional language&lt;/li&gt;
  &lt;li&gt;built on top of a real VM&lt;/li&gt;
  &lt;li&gt;compiled&lt;/li&gt;
  &lt;li&gt;responded in microseconds not milliseconds&lt;/li&gt;
  &lt;li&gt;had a kick butt performing framework&lt;/li&gt;
  &lt;li&gt;built by one of the former Rails core members&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall I left my exploration with Elixir just plain fundamentally impressed.  Now, that said, I never chose to do much with Elixir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I came in at the 1.3 about to be released version of Phoenix which took longer to finish than that expected and that cost me momentum&lt;/li&gt;
  &lt;li&gt;Pattern matching is at the heart of Elixir and it is hard to master&lt;/li&gt;
  &lt;li&gt;Most of what I build is web apps and when I looked into it there wasn't an equivalent to Devise or AuthLogic and I never wanted to write this so …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I took away from Elixir was a number of changes to my coding style in Ruby including a focus on class methods and an increased use of multiple return values.&lt;/p&gt;

&lt;h2 id=&quot;choosing-a-next-language&quot;&gt;Choosing a Next Language&lt;/h2&gt;

&lt;p&gt;One of the guidelines I use for choosing a next language is that it is always best to learn your next language by picking one with a fundamentally &lt;strong&gt;different orientation&lt;/strong&gt; than your last language.  So going from Ruby to Elixir is a big change because it means going from object-oriented to functional.  I find that going from Ruby to Python isn't a big change because the languages are just so similar.  In fact I have actually found that Python's many similarities to Ruby make it harder to grok the learning process.  Elixir is so clearly different from Ruby that the differences are easier to learn.&lt;/p&gt;

&lt;p&gt;So even though I would argue strongly that if you are a Rubyist, Elixir is the logical next step, there are two caveats:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you are doing data science work then you want to use Python.  I've been immersing myself in data science stuff and the Python ecosystem for data science is truly splendid.&lt;/li&gt;
  &lt;li&gt;If you are doing machine learning work then you want to use Python.  Again the Python ecosystem for machine learning is truly splendid.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 08 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/10/08/thoughts-on-python-and-elixir-from-a-rubyist-s-perspective.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/10/08/thoughts-on-python-and-elixir-from-a-rubyist-s-perspective.html</guid>
        
        <category>ruby</category>
        
        <category>python</category>
        
        <category>elixir</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>OSX Spotlight Does Math</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/spotlightmath.png&quot; alt=&quot;spotlightmath.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I've not been a fan of the OSX search feature, Spotlight, mostly because it ignores the concept of location – it shows you the results it finds but doesn't make it clear where it exists.  All too often I want to find something and then do what &lt;strong&gt;I want&lt;/strong&gt; with it (generally Terminal access).&lt;/p&gt;

&lt;p&gt;But this &lt;a href=&quot;https://news.ycombinator.com/item?id=21187253&quot;&gt;tip&lt;/a&gt; mildly redeems spotlight:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;i had been using spotlight for simple calculations for years, but i stumbled onto conversions (like &quot;528 in2 in sq ft&quot; or &quot;32c&quot;) only a couple months ago. if you don't specify to the units you want, it will still give you a most likely conversion unit with less common ones down below. it's super useful and quick!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;528 in2 in sq ft tells you 3.67 sq feet&lt;/li&gt;
  &lt;li&gt;32c tells you 89.6 degrees f&lt;/li&gt;
  &lt;li&gt;1.1m tells you 1.2 yards&lt;/li&gt;
  &lt;li&gt;3+12+3 tells you 18&lt;/li&gt;
  &lt;li&gt;3tbsp tells you 0.19 cups&lt;/li&gt;
  &lt;li&gt;2mi tells you 3.22 kilometers&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 08 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/10/08/osx-spotlight-does-math.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/10/08/osx-spotlight-does-math.html</guid>
        
        <category>osx</category>
        
        <category>spotlight</category>
        
        
        <category>OSX</category>
        
      </item>
    
      <item>
        <title>Making DevSecOps Easier - Ticket Squirrely Little Installation Steps NOW</title>
        <description>&lt;p&gt;Note: I'm writing this post for a friend who is doing machine learning for the U.S. DOD.  The DOD calls DevOps &quot;DevSecOps&quot; to emphasize the importance of security at all times.  Hence my use of the term DevSecOps when I don't normally.&lt;/p&gt;

&lt;p&gt;I recently wrote about using &lt;a href=&quot;https://fuzzyblog.io/blog/python/2019/10/04/get-it-right-spacy-get-it-right.html&quot;&gt;Spacy in python&lt;/a&gt; and the need for this squirrely little step to use Spacy's language detection:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I have spent a lot of years now dealing with deployment issues around complex code bases with lots and lots of dependencies and this time I'm going to give you the take away less right up front:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you have a development team dealing with any type of dependency that isn't covered by your language environment's package library (e.g. a Rails / Ruby Gemfile or Python's requirements.txt) then you &lt;strong&gt;NEED TO REQUIRE&lt;/strong&gt; your development team to create tickets (Jira or Github) whenever there is some kind of squirrely installation step.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is really, really, really important.  The reason for this is that when you try and get your code deployed into production, you will have long forgotten about something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And yes, this is one thing.  But as your project grows, one thing becomes two things.  And that becomes 5 things and then you're into 10 plus pretty quickly.  Getting people to write this stuff down as it comes up and ticket it under &quot;deployment&quot; means that you stand a much better chance of getting deployment done much more quickly when the time comes.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/devops/2019/10/04/making-devsecops-easier-ticket-squirrely-little-installation-steps-now.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/devops/2019/10/04/making-devsecops-easier-ticket-squirrely-little-installation-steps-now.html</guid>
        
        <category>devops</category>
        
        <category>devsecops</category>
        
        <category>python</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Get it Right Spacy, Get it Right</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9298.jpeg&quot; alt=&quot;IMG_9298.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm writing this at 4:53 am and I'm tired hence the humor.  No disrespect intended towards any of my pagan friends; I love you all; this is tongue in cheek.&lt;/p&gt;

&lt;p&gt;I fully admit to being a damn python noob but I can follow directions. I was attempting to use the &lt;a href=&quot;https://spacy.io/&quot;&gt;Spacy&lt;/a&gt; library to detect the language of a string of text.  I started from the &lt;a href=&quot;https://spacy.io/universe/project/spacy-langdetect&quot;&gt;example here&lt;/a&gt; as replicated below:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy_langdetect&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language_detector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'This is an english text.'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# sentence level language detection&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now before I even tried this, I updated my requirements.txt file with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spacy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that, not surprisingly, did not work.  Sigh.  I started with this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import spacy
&amp;gt;&amp;gt;&amp;gt; from spacy_langdetect import LanguageDetector
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
ModuleNotFoundError: No module named 'spacy_langdetect'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, not surprisingly, cursing followed.  Sadly my normal approach of:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go outside.&lt;/li&gt;
  &lt;li&gt;Start fire.&lt;/li&gt;
  &lt;li&gt;Take off clothes.&lt;/li&gt;
  &lt;li&gt;Dance naked in the firelight while chanting and praising the patron saint of Python &quot;The Great Guido&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;did not work.  In the absence of this working, I turned, disappointingly, to Google.  I discovered that there appeared to be a spacy-langdetect module so I added that to requirements.txt and did the pip dance:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, wow!  That too failed but this time I got a different error so progress!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; nlp = spacy.load(&quot;en&quot;)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/spacy/__init__.py&quot;, line 27, in load
    return util.load_model(name, **overrides)
  File &quot;/Users/sjohnson/fuzzygroup/adl/antihate/antihate_experts/venv/lib/python3.7/site-packages/spacy/util.py&quot;, line 171, in load_model
    raise IOError(Errors.E050.format(name=name))
OSError: [E050] Can't find model 'en'. It doesn't seem to be a shortcut link, a Python package or a valid path to a data directory.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So while I considered returning to the fire and, perhaps, sacrificing a goat, I couldn't find an app that delivered live goats on demand and, thus, more googling ensued.  This gave me the command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which automagically made the original snippet work.  Here it is again:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy_langdetect&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language_detector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'This is an english text.'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9999978582631465&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sentence level language detection&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;english&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9999968011919729&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's great but given that I did a &lt;strong&gt;nlp = spacy.load('en')&lt;/strong&gt; call initially, do I need to load a library for other languages?  Sigh.  Well the other night I was wandering around an Ikea and I found a book on &lt;a href=&quot;https://www.amazon.com/Kampen-Jonas-Froberg-Hardcover-Swedish/dp/9153435850/ref=sr_1_1?keywords=saab+froberg&amp;amp;qid=1570178612&amp;amp;sr=8-1&quot;&gt;Saab&lt;/a&gt; that I wanted to buy but when I looked on Amazon to find an english language version, all I found was the Swedish – but the Amazon description was in Swedish – so that was my source of a language other than English.  So I copied this text from the Amazon web page:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Initierat om Saabs dramatiska ödesår // Det var omöjligt. Dödsdömt. Men det gick. Det här är hela historien om Saabs årslånga kamp för överlevnad, en tempofylld reportagebok som bjuder på unika inblickar bakom kulisserna.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and I reran the last few lines of the code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Initierat om Saabs dramatiska ödesår // Det var omöjligt. Dödsdömt. Men det gick. Det här är hela historien om Saabs årslånga kamp för överlevnad, en tempofylld reportagebok som bjuder på unika inblickar bakom kulisserna.'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9999981443798187&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So it is pretty clear that Spacy really does work and that nlp = spacy.load('en') does more than just english.  It is unclear to me though if this perhaps is limited to only western language character sets so let's feed some Japanese into it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'日本語のキーボード'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;spacy_langdetect&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'en'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language_detector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# document level language detection. Think of it like average language of the document!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ja'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.999999998793732&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sentence level language detection&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'language'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ja'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.999999998793732&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In closing I have to say that Spacy works impressively well.  I remember writing these types of routines back in the mid 1990s and while we had the same capabilities, we did it all in C and it took a fair bit of work for Dataware's Advanced Search team of John Munson and Trey Jones to do this.  Now it is an open source routine.  Damn!&lt;/p&gt;

&lt;p&gt;My one real objection here is this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m spacy download en
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To my way of thinking this is should be encapsulated into the requirements.txt file.  Without that you need a whole different step in your deployment architecture to make sure that this special little bit of python gets executed AFTER your python environment is setup.  And Ansible will do that but it is definitely something that will bite you in the ass at least a few times before you get that right.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/10/04/get-it-right-spacy-get-it-right.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/10/04/get-it-right-spacy-get-it-right.html</guid>
        
        <category>python</category>
        
        <category>nlp</category>
        
        <category>spacy</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>OSX argument list too long; Sigh</title>
        <description>&lt;p&gt;The longer you do computing, the more you find that the same out issues come up.  I'm currently working on a machine with 16 gigs of RAM and a terabyte of SSD storage but when I list files in a directory, I still get &quot;argument list too long&quot;.  The problem here is that I have a series of directories that collectively have 552 gigs of data in them (a crawler I wrote either worked successfully or ran amok; your opinion may vary).&lt;/p&gt;

&lt;p&gt;I woke up this morning and realized that I couldn't move over to my machine the zst archive I needed since it was 15 gigs in size and I had only 24 gigs total (too close to my threshold for my taste).&lt;/p&gt;

&lt;p&gt;I ended up coming up with this command line snippet to address this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -maxdepth 1 -name &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -delete
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I had to change into each directory where these files existed and run it one by one.&lt;/p&gt;

&lt;p&gt;If I wanted to make this recursive then I could have started in the parent directory tree with this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name &lt;span class=&quot;s1&quot;&gt;'*.html'&lt;/span&gt; -exec rm -f &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;but that felt riskier…  Here's a relevant &lt;a href=&quot;https://stackoverflow.com/questions/11289551/argument-list-too-long-error-for-rm-cp-mv-commands&quot;&gt;Stack Overflow&lt;/a&gt; on this.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bash/2019/10/02/osx-argument-list-too-long-sigh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bash/2019/10/02/osx-argument-list-too-long-sigh.html</guid>
        
        <category>osx</category>
        
        <category>bash</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Understanding AWS S3 Limitations and Performance</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_6579.jpeg&quot; alt=&quot;IMG_6579.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm in the process of planning out a large scale system and one of the things I find myself worrying is obvious but still complex – &lt;strong&gt;storage&lt;/strong&gt;.  This is a data processing system where literally tens of millions of &quot;objects&quot; will be flowing thru the system and one of the design criteria is the need to take any &quot;object&quot; and re-process it from start to finish.  And, as this data is transitory in nature, this means that we need to be able to store the original inputs in the system on an ongoing basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: By &quot;object&quot; I mean something as simple as a comment or as complex as a social media post or a web page.&lt;/p&gt;

&lt;p&gt;Given that we have a massive quantity of objects, the question comes up as to how you store tens of millions of variable length objects.  The solution we have come to is to use the AWS S3 storage architecture but is S3 a valid choice?&lt;/p&gt;

&lt;p&gt;Here's the result of digging deeply into S3 as a storage solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;S3 divides storage into &quot;buckets&quot; (think directories although a bucket isn't quite a directory)&lt;/li&gt;
  &lt;li&gt;S3 supports an unlimited number of objects per bucket&lt;/li&gt;
  &lt;li&gt;S3 allows for a biggest object of 5 TB (not an issue for us; we're talking a few K per object)&lt;/li&gt;
  &lt;li&gt;S3 supports 3500 puts, posts or deletes per second per bucket&lt;/li&gt;
  &lt;li&gt;S3 supports 5000 get requests per second per bucket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At 3,500 posts (i.e. new object creations) per second, a single S3 bucket can support 3,500 * 3,600 new objects per hour or 12,600,000 (12.6 million).  Now that's a maximum and there are always reasons why maximums don't get achieved.&lt;/p&gt;

&lt;p&gt;The implication here is that if you have different types of content then you could always use multiple buckets, one per content type in order to achieve better overall throughput.&lt;/p&gt;

&lt;p&gt;Also for best performance on S3 operations although Amazon has reduced the need for name randomization (think use hashes for names) for best performance, this likely still makes a difference.&lt;/p&gt;

&lt;h2 id=&quot;more&quot;&gt;More&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://www.stitcher.com/podcast/amazon-web-services/aws-podcast/e/55957353?autoplay=true&quot;&gt;AWS Podcast #260&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html&quot;&gt;S3 and Metadata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2018/07/amazon-s3-announces-increased-request-rate-performance/?nc1=h_ls&amp;amp;source=post_page-----aff8e10ab51a----------------------&quot;&gt;AWS Performance and Name Randomization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Reference: &lt;a href=&quot;https://medium.com/faun/aws-s3-buckets-whats-in-a-name-aff8e10ab51a&quot;&gt;Naming S3 Objects&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: These performance numbers may have improved since my source is about a year old but I think they are still worthy numbers to benchmark with.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pro Tip&lt;/strong&gt;: There are also lots of other excellent S3 tidbits here including that S3 bucket names are really DNS names and while you can use dots (period) characters in S3 bucket names, you really shouldn't as you will hit issues with https (I don't fully understand that).&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 30 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/09/30/understanding-aws-s3-limitations-and-performance.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/09/30/understanding-aws-s3-limitations-and-performance.html</guid>
        
        <category>aws</category>
        
        <category>s3</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>iPython and Virtual Environments</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8780.jpeg&quot; alt=&quot;IMG_8780.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I've written before, I personally find virtual environments to be the &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html&quot;&gt;devil /  Satan's Step Child for programming&lt;/a&gt; but there's no other option so, well, &lt;a href=&quot;https://en.wikipedia.org/wiki/Fsck&quot;&gt;fsck&lt;/a&gt; ME.  Anyway this is now something I am wrestling with in terms of Python.&lt;/p&gt;

&lt;p&gt;My problem was this persnickety little prick of an error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/IPython/core/interactiveshell.py:931: 
UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install 
IPython inside the virtualenv.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This starts with at least one problem – what the hell is iPython.  Apparently iPython is &quot;interactive Python&quot;.  Now I don't really understand how Python or Python3 isn't interactive when both of them can load up a functional repl but, whatever.  Apparently iPython improves debugging or at least has some bit of color coding (so maybe think of it as ruby + &lt;a href=&quot;https://rubygems.org/gems/awesome_print/versions/1.8.0&quot;&gt;awesome_print&lt;/a&gt;).  So this error message means:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I'm in the virtual environment from VENV.&lt;/li&gt;
  &lt;li&gt;iPython is likely coming in from the system layer so I'm probably getting a Python 2.x instead of a Python 3.x.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A bunch of googles left me scratching my head until I found this &lt;a href=&quot;https://stackoverflow.com/questions/20327621/calling-ipython-from-a-virtualenv&quot;&gt;Stack Overflow page&lt;/a&gt; with about a half dozen approaches.  Hmmmph - this calls &lt;a href=&quot;https://wiki.python.org/moin/TOOWTDI&quot;&gt;TOOWTDI&lt;/a&gt; very much into question, imho.  And then that seemed to work and I wrote the first draft of this blog post.  And then it near immediately stopped working.  &lt;em&gt;grumble&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A spate of more googling occurred and I found this &lt;a href=&quot;https://coderwall.com/p/xdox9a/running-ipython-cleanly-inside-a-virtualenv&quot;&gt;alias approach&lt;/a&gt; – which seemed to work nicely.&lt;/p&gt;

&lt;p&gt;Here turned out to be the approach for fixing it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# edit your .bashrc or .zshrc (I use zsh)
vi ~/.zshrc

# add this alias statement
alias ipy=&quot;python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'&quot;

# make the alias active by sourcing it
source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You now need to use the ipy alias whenever you want iPython:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat jsons/reddit.json| ipy template_expert.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;While, I'm still not entirely sure why I need iPython but the cool kids seem to use it and the color coding and back traces are much better:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/without_ipython.png&quot; alt=&quot;without_ipython.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This is without iPython.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/with_ipython.png&quot; alt=&quot;with_ipython.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: This is with iPython.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm intrigued by the idea of &lt;a href=&quot;https://github.com/asdf-vm/asdf&quot;&gt;ASDF&lt;/a&gt; possibly fixing shell extension madness by at least making this uniform across languages.  Anyone tried this yet?  I need a single solution for at least Python and Ruby (and preferably Elixir / Rust).&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/27/ipython-and-virtual-environments.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/27/ipython-and-virtual-environments.html</guid>
        
        <category>python</category>
        
        <category>ipython</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>It Sucks When You Are the Answer</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_9069.jpeg&quot; alt=&quot;IMG_9069.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was struggling with Font Awesome recently and my buddy suggested I google for a &quot;good blog post that explains it&quot;.  I did and I got this:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/font_awesome_scott.png&quot; alt=&quot;font_awesome_scott.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Son Of A Bitch!  I am &lt;strong&gt;so not&lt;/strong&gt; the expert here.  But I kept digging and here's what I found:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into your &lt;a href=&quot;https://fontawesome.com/account&quot;&gt;font-awesome account&lt;/a&gt; and download stuff locally.&lt;/li&gt;
  &lt;li&gt;Read this &lt;a href=&quot;https://nicholasshirley.com/using-font-awesome-5-and-the-rails-asset-pipeline/&quot;&gt;blog post&lt;/a&gt; and then copy into your app/assets/javascripts folder fontawesome.js and light.js&lt;/li&gt;
  &lt;li&gt;Things magically start working!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There's an extra step if you are using Turbo Links.  Read the linked blog post.&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/26/it-sucks-when-you-are-the-answer.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/26/it-sucks-when-you-are-the-answer.html</guid>
        
        <category>rails</category>
        
        <category>font-awesome</category>
        
        <category>google</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Dear Drop Box You Suck</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_5541.jpeg&quot; alt=&quot;IMG_5541.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Manual synchronization is about this fun …&lt;/p&gt;

&lt;p&gt;Synchronization is one of those things that is fundamentally important and yet hard as hell to get right.  I've been in the computer industry for a long, long time now and I've only ever seen it done well a few times:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lotus Notes - say what you want about Notes, it got sync right=&lt;/li&gt;
  &lt;li&gt;Palm III - Hawkins nailed it&lt;/li&gt;
  &lt;li&gt;The Late, Lamented Dropbox of Yesteryear&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I say the &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt; of yesteryear because the Dropbox I use today, well, &lt;strong&gt;sucks slimy green toads&lt;/strong&gt;.  Here's what I found myself doing yesterday as I left the office to work somewhere else:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -p 192.168.1.25:/Users/sjohnson/fuzzygroup/adl/pol-hate-analysis/categorical.parquet .
scp -p 192.168.1.25:/Users/sjohnson/fuzzygroup/adl/pol-hate-analysis/read_categorical2.py .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep.  That's right.  I manually scp'd files from my big desktop down to my laptop to work on them when I went remote.  It was a miserable experience and it reminded me of what life used to be like – when Dropbox worked.  It used to be that I would simply work on files in my ~/Dropbox directory and I was assured that sync would magically get files from my desktop to my laptop in damn near real time.&lt;/p&gt;

&lt;p&gt;Here's what happens now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Files never sync reliably - each of my machines is at a different point in the sync process continually&lt;/li&gt;
  &lt;li&gt;Sync tries to sync files that haven't changed in 2 years – and not a few files; I've seen more than 500K files try and sync constantly&lt;/li&gt;
  &lt;li&gt;Dropbox uses &amp;gt; 90% of my CPU&lt;/li&gt;
  &lt;li&gt;I have one Dropbox account and I always have login issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I get that Dropbox feels the need to add new features to compete with Microsoft's OneDrive and GoogleDrive and Box.com and I don't begrudge them the ability to add new features.  What I want, however, is a working version of the features they originally promised me – machine to machine file synchronization.&lt;/p&gt;

&lt;p&gt;I'm sorry Dropbox but you simply suck.  And I'm currently looking at &lt;a href=&quot;https://syncthing.net/&quot;&gt;SyncThing&lt;/a&gt; as a replacement; no it isn't exactly the same but maybe it will at least work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I am a paid customer of Dropbox.  The product they provide even their paying customers simply doesn't work.  Or at least it doesn't work as it used to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: This isn't a complicated use case where I'm talking Mac to PC sync or something like that.  I'm simply saying &quot;Sync files in ~/Dropbox on Machine 1 to ~/Dropbox on Machine 2&quot;.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/sync/2019/09/25/dear-drop-box-you-suck.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/sync/2019/09/25/dear-drop-box-you-suck.html</guid>
        
        <category>drop_box</category>
        
        
        <category>sync</category>
        
      </item>
    
      <item>
        <title>The Python Equivalent of byebug is pdb.set_trace()</title>
        <description>&lt;p&gt;In ruby the debugger is invoked by adding the statement&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;wherever you want to debug your code.  This is preceded, of course, by a reference in Gemfile that brings in the byebug gem.&lt;/p&gt;

&lt;p&gt;The python equivalent of this is two fold:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;import the pdb (python debugger) gem&lt;/li&gt;
  &lt;li&gt;add the line pdb.set_trace() call where you want it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the color coded example:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pdb&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# lines of python code here&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That will launch the python debugger right before the line where the pdb.set_trace() call is inserted.  Here are some useful commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;s&lt;/strong&gt; key steps thru the code.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;n&lt;/strong&gt; key goes to the next line.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;q&lt;/strong&gt; key quits.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More on &lt;a href=&quot;https://docs.python.org/3/library/pdb.html&quot;&gt;Python Debugging&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/24/the-python-equivalent-of-byebug-is-pdb-set-trace.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/24/the-python-equivalent-of-byebug-is-pdb-set-trace.html</guid>
        
        <category>python</category>
        
        <category>debugging</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>How a Software Engineer Cuts Video Down to Size</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_7373.jpeg&quot; alt=&quot;IMG_7373.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Editing videos makes me feel this old …&lt;/p&gt;

&lt;p&gt;I can do a lot of things with a computer – a lot.  But one skill that has been eluding me since the mid 1990s is that of editing video.  I don't know what it is about non linear editing (NLE) but I just can't master it.  I recently had to help the &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;StarbaseIndy folks&lt;/a&gt; with some video editing and they asked me to trip a video clip from seconds 8 to 15 and I said &quot;Sure!&quot; and then began sweating.&lt;/p&gt;

&lt;p&gt;I started with ScreenFlow figuring that of course ScreenFlow can import an MP4 file – NOPE!.  Sigh.  I continued onto QuickTime which has a really easy to use Trim feature but while I was able to trim from the left of the video, trimming from the right seemed, well, sketchy.&lt;/p&gt;

&lt;p&gt;I finally thought to google for &quot;Command Line Video Cutter&quot; and found an excellent &lt;a href=&quot;https://askubuntu.com/questions/59383/extract-part-of-a-video-with-a-one-line-command&quot;&gt;Stack* forum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is what ended up being the command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg -ss 00:00:08 -i VID_20190717_214004.mp4 -t 00:00:07 -vcodec copy -acodec copy starbase_indy_cmd_line.mp4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Basically you tell it the starting point and then the duration.  And you'll get a great clip of someone saying something in Klingon about Starbase Indy!&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/video/2019/09/23/how-a-software-engineer-cuts-video-down-to-size.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/video/2019/09/23/how-a-software-engineer-cuts-video-down-to-size.html</guid>
        
        <category>video</category>
        
        <category>starbase_indy</category>
        
        
        <category>video</category>
        
      </item>
    
      <item>
        <title>An Idiot Rubyist's Guide to Messing About with Pandas Data Frames</title>
        <description>&lt;p&gt;I am an unabashed rubyist – I have spent since 2006 doing close to ruby exclusively (well as exclusively as you can in today's modern polyglot world).  And I now find myself in a machine learning, python world.  Today I had to tackle some ad hoc data analysis using a Parquet file created as part of an analysis of some 4chan data and, well, it was interesting.&lt;/p&gt;

&lt;p&gt;Let's start with the requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read a parquet file which had a categorical breakdown of some data&lt;/li&gt;
  &lt;li&gt;Figure out which of the data categories had more then 5 occurrences of what we were looking for&lt;/li&gt;
  &lt;li&gt;Generate a temporal breakdown by year&lt;/li&gt;
  &lt;li&gt;Do it in a way that even a Python noob can understand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's start with the basics of just reading the Parquet file into a data frame.  For rubyists, think of a dataframe as a spreadsheet that Python can read / write.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's the start of this.  And this is also where I moved from using a Python script to using Python directly in the console.  I did this by typing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that launched me into the interactive Python shell.  Think of this is irb or rails console – an interactive repl where you can write lines of code experimentally.&lt;/p&gt;

&lt;p&gt;The next step was to figure out how to get the temporal ranges.  This was done by leveraging Python datetime objects:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gave me a series of 5 data frames; one for each year.  The next step was to break this down by categories.  The categories we had were aligned to slurs within the data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;antiblack&lt;/li&gt;
  &lt;li&gt;antisemitic&lt;/li&gt;
  &lt;li&gt;homophobic&lt;/li&gt;
  &lt;li&gt;islamophobic&lt;/li&gt;
  &lt;li&gt;misogynistic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take the example of looking into the misogynistic data.  Here's what our script looks like then:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m_results2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gives a series of m_results201x data frames.  What we then want to do is get the data out of the data frame.  This can be done with the .describe() method.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;categorical.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m_results2014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2015&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2016&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;misogynistic &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misogynistic&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m_results2014&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_results2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gave us a series of results that look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;m_results2015.describe()
count    559.000000
mean       8.153846
std        9.398083
min        6.000000
25%        6.000000
50%        7.000000
75%        8.000000
max      210.000000
Name: misogynistic, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this is telling us is that for 2015 there were 559 occurrences with more than 5.&lt;/p&gt;

&lt;p&gt;The interesting things here are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;having to use () on all method calls, even ones that don't take arguments (very unruby-ish)&lt;/li&gt;
  &lt;li&gt;the process of starting with a spreadsheet (data frame) and then generating other data frames as we did the analysis&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/23/an-idiot-rubyist-s-guide-to-messing-about-with-pandas-data-frames.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/23/an-idiot-rubyist-s-guide-to-messing-about-with-pandas-data-frames.html</guid>
        
        <category>python</category>
        
        <category>data_science</category>
        
        <category>pandas</category>
        
        <category>data_frame</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>The Real Reason We Have Rake Tasks - Developers Make Mistakes</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8762.jpeg&quot; alt=&quot;IMG_8762.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you are a rails developer, you are likely aware of Rake tasks.  Rake tasks provide a very easy way to write a command line task that ties into your overall system.  And command line tools are really, really useful of course but I often think that Rake tasks were invented mainly as a way for developers to easily clean up errors they make.&lt;/p&gt;

&lt;p&gt;Here's an example:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I'm working on a system where I've heavily built in gamification in the form of earned badges in response to user metrics.&lt;/li&gt;
  &lt;li&gt;I recently added the ability to import your RSS feed as a way of tracking word counts (one of the metrics is the words you write).&lt;/li&gt;
  &lt;li&gt;Yesterday I triggered an RSS import for the first time and I discovered that, in one day, I earned 521 badges.&lt;/li&gt;
  &lt;li&gt;Gulp.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Clearly something has gone awry – majorly awry.  And the way that I tackle issues like this is, well, &lt;strong&gt;a rake task&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: If you're a newbie Rails person, rake tasks live in the directory lib/tasks and they have a syntax like that shown below (they begin with namespace and then there are a series of task lines; if the task references environment then the entire Rails environment is available to the rake task otherwise it is just plain old Ruby and none of the Rails niceties).&lt;/p&gt;

&lt;p&gt;My rake tasks are named two ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;functionally for what they do &quot;spider_app_store&quot;&lt;/li&gt;
  &lt;li&gt;tied to the data object that needs cleanup i.e. &quot;user_badge&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have three tables in question:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;badges&lt;/li&gt;
  &lt;li&gt;user_badges&lt;/li&gt;
  &lt;li&gt;metrics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a callback on metrics that calls add_user_badges and it is an after_create callback.  This routine takes the individual metric and passes it into the badge routine which has a rule which is dynamically evaluated.  And then the output of that rule, if it succeeds, is the creation of a user_badge.&lt;/p&gt;

&lt;p&gt;Let's start by looking at the metric in question:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select id, created_at, date_created_at, name, metric_type_id, user_id, habit_id, habit_type_id, int_val, url from metrics where id=1516\G
*************************** 1. row ***************************
             id: 1516
     created_at: 2009-12-14 00:00:00
date_created_at: 2009-12-14
           name: word_count
 metric_type_id: 1
        user_id: 1
       habit_id: 41
  habit_type_id: 11
        int_val: 107
            url: https://fuzzyblog.io/recipes/main_course/2009/12/14/bacon-salisbury-steak.html                
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Somehow this event, way back in 2009, triggered a badge creation on 9/19:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/user_badge.png&quot; alt=&quot;user_badge.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So now we need to look at the data driving that badge to figure this out:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from user_badges where id=550\G
*************************** 1. row ***************************
             id: 550
     created_at: 2019-09-19 19:49:21.346148
     updated_at: 2019-09-19 19:49:21.346148
date_created_at: NULL
        user_id: 1
       badge_id: 3
       habit_id: 41
        plan_id: 1
      metric_id: 1516
 custom_message: NULL
         active: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this shows us is that we have a disparity between the created_at date on the user_badge object and the metric.  So the fix is actually pretty damn simple.  Here's the creation code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;badge_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;metric_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;habit_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;plan_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plan_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;active: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UserBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and what it needs is this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;badge_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;metric_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;user_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;habit_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;plan_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;habit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plan_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;date_created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date_created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;active: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UserBadge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Are there better, cleaner ways to accomplish that?  I'm sure but that isn't the issue at this stage in an MVP.  At this stage we're going for clarity even if it isn't entirely DRY.&lt;/p&gt;

&lt;p&gt;But this blog post was actually about rake tasks and here's where we come back to that.  I have two options facing me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Delete the data and reload&lt;/li&gt;
  &lt;li&gt;Fix the data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I personally really enjoy writing rake tasks and one of the reasons is that I've always found that errors that occur once tend to occur multiple times.  And even i the exact error doesn't occur again, similar errors often do and then your one off rake task becomes something you can quickly and easily compose into an alternate fix routine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is why I tend to name my rake tasks for the data object they operate on; it makes finding them trivial.&lt;/p&gt;

&lt;p&gt;Here's the rake task to fix this bit of personal idiocy:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user_badge&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# bundle exec rake user_badge:fix_idiocy --trace&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:fix_idiocy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;username: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fuzzygroup'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_badges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;date_created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date_created_at&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user_badge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update_attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that I have a bundle exec execution line there as a comment.  Well, there's a reason for that.  I've been doing Rails with large scale live systems now since 2007 and I've seen the amazing quantity of data specific errors that can happen when you're in a:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;poorly funded&lt;/li&gt;
  &lt;li&gt;fast paced&lt;/li&gt;
  &lt;li&gt;get the job done&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;type startup.  Errors like these (getting the date wrong) tend to slip into even production systems and when a founder / CEO notices them in the wee hours of the night and you happen to be the on goal idiot, well, it is much easier to copy and paste in a commented out bundle exec execution line than it is to figure it out on the fly.  This is even more true when the rake task takes some number of command line arguments.&lt;/p&gt;

&lt;p&gt;So I ran this and it seemed to work but the real proof is whether or not the result makes sense.  Here's the look and feel before and after (focus on the habit column; you'll see that it goes from a succession of recipes to a more varied set of habits).&lt;/p&gt;

&lt;h2 class=&quot;center&quot; id=&quot;before&quot;&gt;Before&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/user_badges_before.png&quot; alt=&quot;user_badges_before.png&quot; /&gt;&lt;/p&gt;

&lt;h2 class=&quot;center&quot; id=&quot;after&quot;&gt;After&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/user_badges_after.png&quot; alt=&quot;user_badges_after.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;And there you have it – the real reason that rake tasks exist – developers make mistakes and rake tasks make fixing those mistakes really, really easy.&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/20/the-real-reason-we-have-rake-tasks-developers-make-mistakes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/20/the-real-reason-we-have-rake-tasks-developers-make-mistakes.html</guid>
        
        <category>rails</category>
        
        <category>rake</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Have to Make a Meta Schema</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8992.jpeg&quot; alt=&quot;IMG_8992.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I find myself, once again, needing to make a &quot;meta schema&quot;.  This is a database schema by which you map data from N external sources into a single repository.  The challenge here is that you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;define a set of tables into which incoming objects can be decomposed&lt;/li&gt;
  &lt;li&gt;define a set of common elements across all the different types of data&lt;/li&gt;
  &lt;li&gt;normalize all the data as it comes in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've done this a number of times in my career but I normally do it in the dark of the night and I don't talk about it (kidding).  I thought this time around though I might improve the process by actually formalizing it and documenting it.&lt;/p&gt;

&lt;p&gt;If you are going to make a meta schema, here is what you need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;examples of each of the different formats&lt;/li&gt;
  &lt;li&gt;a print out of at least one instance of each of the different formats&lt;/li&gt;
  &lt;li&gt;colored pens or markers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The way that I generally do this is I print out an example of each format type and I put them on a table side by side.  Then I start color coding elements within the format.  As I color code, what I have always found is that commonalities emerge.  For example in the screenshot below purple is about media elements.  And here's what you can see:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;one source has no media elements&lt;/li&gt;
  &lt;li&gt;one source has one media element&lt;/li&gt;
  &lt;li&gt;one source has multiple media elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And what that &lt;strong&gt;instantly&lt;/strong&gt; tells us is that media elements are going to be stored in a separate table in a has_many type relationship.&lt;/p&gt;

&lt;p&gt;The next step in all this is to figure out how each element from each source maps to the corresponding elements in the other sources.  For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;one source calls the content &quot;body&quot;&lt;/li&gt;
  &lt;li&gt;one source calls the content &quot;comment&quot;&lt;/li&gt;
  &lt;li&gt;one source calls the content &quot;message&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What this tells me that this is going to need to be a mapping rule that filters each of these types of content into a table and the right column.  I can't simply load these (or really any) columns directly.&lt;/p&gt;

&lt;p&gt;And that's the essence of building a meta schema – you take lots of samples of data and you look for commonalities.  And this is a process that I have always found flows better when it is done on paper rather than on screen.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/09/19/so-you-have-to-make-a-meta-schema.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/09/19/so-you-have-to-make-a-meta-schema.html</guid>
        
        <category>software_engineering</category>
        
        <category>schema</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Remote Management Tip - The Atta Person Email</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8735.jpeg&quot; alt=&quot;IMG_8735.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the better management techniques that I ever learned was what I now refer to as &quot;The Atta Person Email&quot;.  This is a general management technique but one that I find particularly good for remote / asynchronous work.&lt;/p&gt;

&lt;p&gt;In today's increasingly fast paced world, one of the very real management problems is simple – how do you &lt;strong&gt;remember&lt;/strong&gt; the good things that your staff (or co workers) did by the time that the annual / quarterly / six monthly review rolls around?  Honestly I have a hard time remembering July – and it is only September.  Six months ago was … March.  That's almost inconceivable to me.&lt;/p&gt;

&lt;p&gt;My solution for this is simple - whenever I encounter someone that does something above and beyond, I send an email to their manager.  If I am their manager then I cc myself on it and apply a Gmail label to it.  Then when review time comes around, well, I look in that folder and see what's there.&lt;/p&gt;

&lt;p&gt;The reason that this is a particularly good remote work management technique is that remote workers are regularly forgotten by management as they quietly work in the background just getting things done.  Unless a company has a real remote first culture, this common.  Establishing a practice of &lt;strong&gt;paying attention&lt;/strong&gt; and making sure that people get recognized for the good work that they do is just good management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I used to think of this as a &quot;Atta Boy&quot; email.  Given the paucity of non male software engineers that I've been able to hire in my life, I don't think that I'm wrong in my internal thinking but still – no excuse for that in 2019 so it is now a &quot;Atta Person&quot; email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: To really motivate your coworkers / staff, bcc them on these emails when they go out.  Even if their manager doesn't appreciate their hard work, I suspect that they will be happier knowing that you appreciated it.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/09/18/remote-management-tip-the-atta-person-note.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/09/18/remote-management-tip-the-atta-person-note.html</guid>
        
        <category>remote_work</category>
        
        <category>startup</category>
        
        <category>management</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Making Better Passwords from /dev/urandom</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8962.jpeg&quot; alt=&quot;IMG_8962.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently &lt;a href=&quot;https://fuzzyblog.io/blog/linux/2019/09/02/generating-a-good-password-from-the-command-line.html&quot;&gt;wrote something about passwords&lt;/a&gt; and a comment showed up about how what I wrote wasn't secure enough and the password should really be based on /dev/urandom instead of what amounts to microtime.  While I'm not terribly concerned here, they were right so here's an alternative:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /dev/urandom | base64 | head -c 12
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That will return a 12 character password.  Adjust the 12 to 8 if that's what you need for length.&lt;/p&gt;

&lt;p&gt;I pulled this technique from &lt;a href=&quot;https://serverfault.com/questions/283294/how-to-read-in-n-random-characters-from-dev-urandom&quot;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/2019/09/18/making-better-passwords-from-dev-urandom.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/2019/09/18/making-better-passwords-from-dev-urandom.html</guid>
        
        <category>linux</category>
        
        <category>password</category>
        
        <category>security</category>
        
        
      </item>
    
      <item>
        <title>Tiny Rails Tip - Don't Let byebug into Production using Git Hooks and precommit</title>
        <description>&lt;p class=&quot;center center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8940.jpeg&quot; alt=&quot;IMG_8940.jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Daddy - Can I haz a byebug?&lt;/p&gt;

&lt;p&gt;The Ruby gem byebug is the Ruby debugger and this is normally installed into your Gemfile in this way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :development, :test do
  gem 'awesome_print'
  gem 'byebug'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What that says in people speak is &quot;for the environments development and test, install the following gems&quot;.&lt;/p&gt;

&lt;p&gt;To use byebug, you simply put the byebug command into whatever bit of code you need to debug – controller, model, background job, view, etc.  But here's how most of us embed byebug:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  byebug
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, at some point, that is going to wend its way thru development, thru test, dodge past a code review and WHAM! arrive onto production – where things will quickly grind to a halt since the gem isn't available for production.&lt;/p&gt;

&lt;p&gt;There are two easy ways to solve this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;invoke byebug conditionally tied to the environment&lt;/li&gt;
  &lt;li&gt;prevent it from going into your commits via a git hook&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;method-1-invoke-byebug-conditionally&quot;&gt;Method 1: Invoke byebug Conditionally&lt;/h2&gt;

&lt;p&gt;One of the most elegant idioms in the Ruby world is the right hand if.  Here's how to apply it in this case:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;development?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is so damn superior to the alternative:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;development?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;test?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I know it is only two additional lines but you spend enough time in code and that additional &quot;visual cruft&quot; really comes to annoy.&lt;/p&gt;

&lt;h2 id=&quot;method-2-a-git-hook&quot;&gt;Method 2: A Git Hook&lt;/h2&gt;

&lt;p&gt;A git hook is a script file that is run automatically by git when an action happens like &lt;strong&gt;pre-commit&lt;/strong&gt;.  My personal favorite git hook is always pre-commit because that action prevents badness from getting into the repository.  A pre-commit script is simply an executable shell file which runs before the commit action and if it returns any output then the commit is halted.&lt;/p&gt;

&lt;p&gt;What is below is a ruby script which I've been using for ages and ages.  My former employee DV Suresh first wrote it for me and then I rewrote it from memory when I moved on from that position.  This script:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Checks for syntax errors&lt;/li&gt;
  &lt;li&gt;Looks for byebug calls without guard clauses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The byebug functionality is new and was written just for this blog post.  It doesn't seem to be dodgy but, well, late night coding and all that.&lt;/p&gt;

&lt;p&gt;Here's an example of the output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  web_change_me_now git:(247-badges) ✗ git add app/models/habit.rb
➜  web_change_me_now git:(247-badges) ✗ git commit -m &quot;revised habit.rb to check byebug&quot;
in .git/hooks/pre-commit
app/models/habit.rb:
  TODO: Add a guard clause to your byebug call
    byebug
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What just happened was I added a single file, a model.  The add will always happen cleanly since this is a pre-commit not a pre-add.  But when the commit happens, the code is checked for a naked byebug and the commit process is then halted and a todo note is generated.&lt;/p&gt;

&lt;p&gt;Here's the whole script:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# A hook script to verify that only syntactically valid ruby code is commited.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Called by git-commit with no arguments. The hook should&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# exit with non-zero status after issuing an appropriate message if&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# it wants to stop the commit.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Put this code into a file called &quot;pre-commit&quot; inside your .git/hooks&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# directory, and make sure it is executable (&quot;chmod +x .git/hooks/pre-commit&quot;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;in .git/hooks/pre-commit&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'open3'&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Open3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Set this to true if you want warnings to stop your commit&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stop_on_warnings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stop_on_errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$HOME/.rvm/rubies/ruby-2.6.3/bin/ruby&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;changed_ruby_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`git diff-index --name-only --cached HEAD`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/(.+\.(e?rb|task|rake|thor)|[Rr]akefile|[Tt]horfile)/&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Compilation check; designed to catch syntax errors&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed_ruby_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readable?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\.erb\z/&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Set trim mode to &quot;-&quot;, just as Rails does&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Replacing all &amp;lt;%= tags with &amp;lt;% for the syntax check&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;sed 's/&amp;lt;%=/&amp;lt;%/g' &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | erb -xT - | &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -wc&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -wc &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;popen3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/[0-9]+:\s+warning:/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_on_warnings&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/[0-9]+:\s+syntax error/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_on_errors&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# looking for byebug calls&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed_ruby_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readable?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\.erb\z/&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Set trim mode to &quot;-&quot;, just as Rails does&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Replacing all &amp;lt;%= tags with &amp;lt;% for the syntax check&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;sed 's/&amp;lt;%=/&amp;lt;%/g' &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | erb -xT - | &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler_ruby&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -wc&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#&quot;#{compiler_ruby} -wc #{file}&quot;&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;cat &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; | grep byebug&quot;&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;popen3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# this can't use stop_on_errors or stop_on_warnings because those are tied to &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#  the compiler and this is purely a grep check&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Rails.env.test\?/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Rails.env.development?/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/#byebug/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  TODO: Add a guard clause to your byebug call&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byebug_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no byebugs left in the code without guard clauses; All is happiness and light&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; 
  &lt;span class=&quot;vg&quot;&gt;$stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;problematic_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no syntax errors&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# All is well&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you want to use this then create a pre-commit file in your .git/hooks directory in your application and make it executable with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; chmod +x .git/hooks/pre-commit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The files in .git/hooks are NOT checked into your repo with a commit.  They need to be manually distributed to each team member (or that's how it was a few years ago at least; that may have changed.)&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/17/tiny-rails-tip-don-t-let-byebug-into-production.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/17/tiny-rails-tip-don-t-let-byebug-into-production.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>git</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Just Got Your First Mac and You Need Software</title>
        <description>&lt;h2 id=&quot;great-software&quot;&gt;Great Software&lt;/h2&gt;

&lt;p&gt;A good friend just go their first work Mac and I thought that it might be kind of me to write down tools that I use, some obvious, some less so.  Here's the way to understand this, this list is ordered by what I use the most at the top and descends from there.  And if I took the time to actually describe it then I really care about it as a tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: See the section below about Don't Install Software Manually before you start following links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate&lt;/a&gt; - I have been using this editor since its first release - and it is now more than a decade later and I still love it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iTerm, iTerm, iTerm&lt;/a&gt; - I live in iTerm.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt; - Run, don't walk and get yourself HomeBrew.  Think of it as apt-get for OSX and, well, that's what it is.  Absolutely recommended.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ranchero.com/netnewswire/&quot;&gt;NetNewsWire&lt;/a&gt; - If you aren't using a news aggregator then you should be.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mailplaneapp.com/&quot;&gt;MailPlane&lt;/a&gt; - this is a custom client app for Gmail and while I don't use it religiously, the ability to have both a custom client you can always command + tab to as well as N browser windows for email is really powerful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://flexibits.com/fantastical&quot;&gt;Fantastical&lt;/a&gt; - natural language parsing that creates calendar events is wonderful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.enpass.io/&quot;&gt;Enpass&lt;/a&gt; - the only password manager / digital wallet that has ever stuck for me.  I have no idea about its encryption / security but I can attest that it is damn usable.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.goofyapp.com/&quot;&gt;Goofy&lt;/a&gt; - a quite good Facebook Messenger IM client&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://flyingmeat.com/acorn/&quot;&gt;Acorn&lt;/a&gt; - an excellent image editor from my favorite named &lt;a href=&quot;https://flyingmeat.com/&quot;&gt;Mac Company&lt;/a&gt; of all time&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://panic.com/transmit/&quot;&gt;Transmit&lt;/a&gt; - the best FTP and S3 client that exists&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://eggerapps.at/postico/&quot;&gt;Postico&lt;/a&gt; - I'm not a Postgres guy really but I sometimes play one when MySQL isn't right for a project and when I do, well, I use Postico&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://magnet.crowdcafe.com/&quot;&gt;Magnet&lt;/a&gt; - Cool window manager&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eastgate.com/Tinderbox/&quot;&gt;TinderBox&lt;/a&gt; - If you do serious intellectual work and deal with note taking then TinderBox is your tool.  It is expensive, powerful and awesome.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wunderlist.com/mac/&quot;&gt;Wunderlist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;SublimeText&lt;/a&gt; - If I wasn't so firmly in the TextMate camp then I'd use this.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.literatureandlatte.com/scrivener/overview&quot;&gt;Scrivener&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;PyCharm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sublimemerge.com/&quot;&gt;Sublime Merge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fork.dev/&quot;&gt;Fork&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;SourceTree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.telestream.net/screenflow/&quot;&gt;ScreenFlow&lt;/a&gt; - I don't screencast all that often but when I do, I use ScreenFlow.&lt;/li&gt;
  &lt;li&gt;Pages / Numbers / Keynote - these are the standard Apple apps and they are generally good.&lt;/li&gt;
  &lt;li&gt;DropBox - kind of required but good lord does it suck as a tool.  WTF DropBox (today DropBox took 96% of my cpu and tried to sync 600K files)&lt;/li&gt;
  &lt;li&gt;VLC&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dont-install-software-manually&quot;&gt;Don't Install Software Manually&lt;/h2&gt;

&lt;p&gt;The other thing that I would strongly recommend is that your Mac can be easily provisioned using Ansible and I made my Ansible provisioning routine open source years ago.  It can be found on my &lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;Github&lt;/a&gt;.  I haven't set up a Mac from scratch now in years and automated provisioning on your own machine is wonderful - please note that you may have issues with this since it has been years since I've gotten a new Mac and I only update this when I need it.&lt;/p&gt;

&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;/h2&gt;

&lt;p&gt;Here are &lt;a href=&quot;https://fuzzyblog.io/blog/category.html#osx&quot;&gt;things I've written that are about OSX&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/09/16/so-you-just-got-your-first-mac-and-need-software.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/09/16/so-you-just-got-your-first-mac-and-need-software.html</guid>
        
        <category>osx</category>
        
        <category>mac</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>A Chrome Extension for Fixing Google Image Search</title>
        <description>&lt;p&gt;A bunch of years ago, Google made image search a lot less useful by removing the options for copying urls and downloading images.  I know these activities are problematic legally but this has always felt to me to be the height of stupidity – people are still going to copy urls and still going to download images – we are all just going to have to work harder to do it.  &lt;strong&gt;Grumble&lt;/strong&gt;.  Happily there is a Chrome Extension that makes this possible:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/view-image-download-image/kkdejhcahmppjoakalgdnnjpnmjlahhi?hl=en&quot;&gt;View Image&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/chrome/2019/09/16/a-chrome-extension-for-fixing-google-image-search.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/chrome/2019/09/16/a-chrome-extension-for-fixing-google-image-search.html</guid>
        
        <category>chrome</category>
        
        <category>chrome_extension</category>
        
        
        <category>chrome</category>
        
      </item>
    
      <item>
        <title>Implementing a Search System</title>
        <description>&lt;p&gt;I started selling software with a search engine back in 1988 in our first hypertext product, Black Magic.  Our first release had close to zero search features but NASA contracted with us to add search features to our second release since they were using our software as the online documentation for the NASP project.  And ever since then I have been pretty intimately involved with search:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We grew our initial search engine thru a bunch of release culminating in a CD-ROM grade search and retrieval system.&lt;/li&gt;
  &lt;li&gt;I worked for Dataware Technologies for 3.5 years building corporate Knowledge Management Systems which, sigh, were really collaborative document repositories based on the underlying &lt;a href=&quot;https://en.wikipedia.org/wiki/BRS/Search&quot;&gt;BRS engine&lt;/a&gt;; still available today&lt;/li&gt;
  &lt;li&gt;The metasearch engine I designed back in 1997 is still available today as &lt;a href=&quot;https://www.ixtent.com/en/products/opentext-discovery-suite&quot;&gt;The OpenText Federated Query Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I built the Feedster Blog / RSS Search Engine and took it from a few hundred blogs to over eighteen million (only to be thrown out by my own board but that's another story and, no, I'm not still bitter …)&lt;/li&gt;
  &lt;li&gt;Along the way I've used and analyzed most of the search tools out there from Folio Views to Verity to Guide to BRS to EPMS to InQuery   to Site Server to Lucene to ElasticSearch and more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's just posit that I know a few things about search, k?&lt;/p&gt;

&lt;p&gt;The topic of this post is how you, as an end user, implement a search system and along the way I'm going to make a few observations about search as an industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the key implementation point is at the end; apologizes for the digression into industry analysis, I've simply wanted to write this down for a damn long time.&lt;/p&gt;

&lt;h2 id=&quot;search-is-not-a-well-productized-thing&quot;&gt;Search Is Not a Well Productized &quot;Thing&quot;&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that search is &lt;strong&gt;not a well productized thing&lt;/strong&gt;.  Companies have been trying to build businesses off of search now since the mid 1960s and yet, with the exception of Google, there is &lt;strong&gt;no&lt;/strong&gt; general search vendor in the same way that there is a database vendor (Oracle).  And, to be really honest, I don't regard Google as a search vendor (they are an advertising company) because you can't really use Google for your own data.  Even the mighty Google, with literally billions of dollars, has chosen to &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Search_Appliance&quot;&gt;exit the model of selling search&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: My personal belief is that Google has chosen to exit the business of selling search is because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google's core relevancy ranking is tied to hyperlink analysis but that information doesn't exist within the firewall.&lt;/li&gt;
  &lt;li&gt;The business opportunity for selling search simply isn't all that good compared to the business of selling advertising on global web search.  Advertising is an 80 billion dollar a year business for Google; selling search software is a teeny, tiny fraction of that – even across all the search vendors.&lt;/li&gt;
  &lt;li&gt;Selling search means providing technical support and Google is not good at that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I say that search is not a well productized thing, I mean that search is inherently a customized thing, a business opportunity that needs to be specific to each set of documents / corpus that you want to index.  Literally everything from the set of stop words, word length, user interface, indexing frequency, relevancy ranking, document formats and more needs to be customizable for a search tool to work well.  That level of customization makes providing a horizontal search product that is generally useful damn near impossible.&lt;/p&gt;

&lt;h2 id=&quot;practical-tip-1-start-with-one-document&quot;&gt;Practical Tip 1: Start with One Document&lt;/h2&gt;

&lt;p&gt;With an understanding of why search is hard, here is the practical tip.  Implementing search, for anyone who isn't a damn expert, is very, very hard because what you are doing is generally working with headless, non-observable systems.&lt;/p&gt;

&lt;p&gt;A headless system is one that runs in the background, what is referred to as a daemon.  Search systems tend to have a number of headless tools (the indexer and the search engine).  The problem with headless systems is that you rarely know what is going on and that makes understanding what is happening sometimes damn near impossible.&lt;/p&gt;

&lt;p&gt;When you have systems that are damn near impossible to understand, I find that when you approach them with an experimentation basis, you are better off.  The two techniques that I have always found are best to use with search tools are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Start with one document&lt;/li&gt;
  &lt;li&gt;Instrument that Content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I say that you start with a single document, I mean just that.  One of the key things to understand with any search system is how it takes in or &lt;strong&gt;ingests&lt;/strong&gt; content.  For an internal search tool, this might be done with&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a crawler which starts at a web page and follows links&lt;/li&gt;
  &lt;li&gt;a document collection on a SharePoint server&lt;/li&gt;
  &lt;li&gt;a fileserver of documents&lt;/li&gt;
  &lt;li&gt;a manual set of documents&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because you don't really understand how content is ingested, I regard starting with a single document as a key part of the approach.  What you want to understand is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how content comes in&lt;/li&gt;
  &lt;li&gt;how long indexing takes&lt;/li&gt;
  &lt;li&gt;how frequently indexing happens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the best way to do this is reduce the variables in the process down to a single document.  What you do is create a document, give it to the search system and then see how long it takes for something to become searchable.  And then you change the document, by adding something unique to it, to see how long that change takes to become available.&lt;/p&gt;

&lt;h2 id=&quot;practical-tip-2-instrument-the-content-base&quot;&gt;Practical Tip 2: Instrument the Content Base&lt;/h2&gt;

&lt;p&gt;My second practical tip is really simple - you want to instrument the content base.  In computer parlance, instrumenting something means to make it observable / knowable.  When you build search systems and the number of documents expands dramatically, you are faced with the problem of &quot;how do you know that it works&quot;.  Let's say, for example, that you sell security systems and you have a set of documents, Microsoft Word, PowerPoint, Excel that all talk about your products.  And let's posit that, as a global vendor, you have say 10,000 documents.  If your search system was to fail to find something – would you ever know?  And the correct answer here is that, generally speaking, you wouldn't.&lt;/p&gt;

&lt;p&gt;Internal document collections suffer from the problem of being homogenous in nature – the documents are mostly the same.  And that means it is really hard to tell if something that should be returned for a given query actually was ever even indexed.  The easiest way around this is to instrument your content base by putting in some content that should only exist for you, the search administrator. It needs to be something that no one, other than you, will ever search for in the context of your corpus.  Here are some options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A favorite author's name - say Heinlein or Bujold&lt;/li&gt;
  &lt;li&gt;A favorite character's name that is distinctive as hell - Vorkosigan&lt;/li&gt;
  &lt;li&gt;If you have a set of initials that are consonants only, say LDM or BCG or JSJ, these tend to not be english language words (no vowels) so they are utterly unique.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make sure if you use the initials approach that your search engine is indexing 3 letter words.&lt;/p&gt;

&lt;p&gt;And what you do is create a single document, in each of the formats that you want to index, that contains your instrumentation content.  So if we are a search engine for an internal set of documents, we might make documents in the form:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pdf&lt;/li&gt;
  &lt;li&gt;word&lt;/li&gt;
  &lt;li&gt;excel&lt;/li&gt;
  &lt;li&gt;powerpoint&lt;/li&gt;
  &lt;li&gt;html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;that each have our specialized content.  You then let these be indexed - forever - as a &quot;control group&quot; on your search.  So if your specialized word was Vorkosigan, you should, for every search, have 5 results that come back, one per format.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I guess this violates the single document principle.  Sorry.&lt;/p&gt;

&lt;h2 id=&quot;sidebar-what-makes-up-a-search-tool&quot;&gt;Sidebar: What Makes Up a Search Tool&lt;/h2&gt;

&lt;p&gt;Generally speaking with search tools there are a few components:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;indexer&lt;/strong&gt; which takes content in and makes the index against which queries are done&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;query parser&lt;/strong&gt; which takes the query from the user and then pre-processes it before it goes to the search engine&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;search engine&lt;/strong&gt; which accepts a query and returns a list of results&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;relevancy ranker&lt;/strong&gt; which takes the list of results and orders them correctly; this is often internal to the engine but it doesn't have to be&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;user interface&lt;/strong&gt;, these days HTML into which a query is entered and the&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;admin tools&lt;/strong&gt; which generally range from ok to abysmal.  These are completely different&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;practical-tip-3-dont-bother-with-a-fielded-user-interface&quot;&gt;Practical Tip 3: Don't Bother with a Fielded User Interface&lt;/h2&gt;

&lt;p&gt;When you start to deploy search software, everyone always wants to play with the user interface and build a fielded user interface.  Don't; just don't.  Your users simply won't bother.  Google has created a global consciousness that search is a single field that magically gives you what you need.  This is the user interface that you want to implement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Under the hood and behind the scenes, the query that a search engine gets from a single field is often parsed and a fielded query is constructed which the search engine then runs.&lt;/p&gt;

&lt;p&gt;There are rare occasions where an actual fielded user interface is needed but this is an edge case that you only want to approach after users actually ask for it.  And, in my opinion, even if they ask for it, they won't often use it.&lt;/p&gt;

&lt;p&gt;If you really want to provide a fielded user interface, I would encourage you to simply document the query language that your search engine uses.  Almost all search engines have an actual query language right down to field operators.&lt;/p&gt;

&lt;h2 id=&quot;im-available--hire-me&quot;&gt;I'm Available / Hire Me&lt;/h2&gt;

&lt;p&gt;As with everything I write, if I'm writing it, it means that I'm available as an expert.  I am a consultant these days and I trade $$$ for time and expertise.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/search/2019/09/15/implementing-a-search-system.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/search/2019/09/15/implementing-a-search-system.html</guid>
        
        <category>search</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>It Is 2 AM and Postgres Won't Start - What Do You Do?</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8820.jpeg&quot; alt=&quot;IMG_8820.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I find myself awake, once again, in the wee hours and I went to work on my second side project; yeah, I know, I know.  So I started by writing a Rails migration and then when I went to execute it, I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
rake aborted!
PG::ConnectionBad: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket &quot;/tmp/.s.PGSQL.5432&quot;?
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/pg-1.1.4/lib/pg.rb:56:in `initialize'
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/pg-1.1.4/lib/pg.rb:56:in `new'
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/pg-1.1.4/lib/pg.rb:56:in `connect'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sigh.  This particular side project is built with &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Rails&lt;/a&gt; and Jumpstart Rails uses Postgres.  And while I have no particular object to Postgres, it isn't MySQL which is my &quot;comfort db&quot;.  So I guess I have to roll my metaphorical sleeves up (they are metaphorical sleeves because I'm writing this at 2:47 am in bed and, well, naked) and figure this out.  I could just try and go back to sleep but, nah….&lt;/p&gt;

&lt;p&gt;The first thing I try is to look at Procfile.dev:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat Procfile.dev

web: bundle exec rails server
webpack: bundle exec bin/webpack-dev-server
sidekiq: bundle exec sidekiq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is no reference to Postgres so maybe it just isn't running.  I rebooted two days ago (to the sound of much griping and cursing - but I digress) so I try and start Postgres using brew:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services start postgres
Service `postgresql` already started, use `brew services restart postgresql` to restart.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Fabulous.  So is it actually running or not:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps auwwx | grep postg
sjohnson         44631   0.0  0.0  4295688    856 s029  S+    2:51AM   0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn postg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That seems to argue that it isn't.  Maybe there's a lock file left behind so I should restart it instead:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services restart postgresql
Stopping `postgresql`... (might take a while)
==&amp;gt; Successfully stopped `postgresql` (label: homebrew.mxcl.postgresql)
==&amp;gt; Successfully started `postgresql` (label: homebrew.mxcl.postgresql)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So I check the process list again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps auwwx | grep postg
sjohnson         44859   0.0  0.0  4268040    784 s029  S+    2:52AM   0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn postg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This type of behavior with a &quot;headless&quot; process generally means that it is starting up, hitting an error condition and aborting – and failing to clean up its lock file (making brew think that its still running).  Sigh.&lt;/p&gt;

&lt;p&gt;Postgres is a background service which means that it is running behind the scenes and it is managed by brew.  So a little digging gave me brew services list:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew services list
Name          Status  User     Plist
dnsmasq       stopped
elasticsearch started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.elasticsearch.plist
mariadb       started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.mariadb.plist
mpd           stopped
postgresql    started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
rabbitmq      started sjohnson /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.rabbitmq.plist
redis         stopped
unbound       stopped
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A bunch of years ago, Apple decided to replace the venerable cron with its own XML based launcher and the data structure that runs it is called a plist.  So I can just look at that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /Users/sjohnson/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;
&amp;lt;plist version=&quot;1.0&quot;&amp;gt;
&amp;lt;dict&amp;gt;
  &amp;lt;key&amp;gt;KeepAlive&amp;lt;/key&amp;gt;
  &amp;lt;true/&amp;gt;
  &amp;lt;key&amp;gt;Label&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;homebrew.mxcl.postgresql&amp;lt;/string&amp;gt;
  &amp;lt;key&amp;gt;ProgramArguments&amp;lt;/key&amp;gt;
  &amp;lt;array&amp;gt;
    &amp;lt;string&amp;gt;/usr/local/opt/postgresql/bin/postgres&amp;lt;/string&amp;gt;
    &amp;lt;string&amp;gt;-D&amp;lt;/string&amp;gt;
    &amp;lt;string&amp;gt;/usr/local/var/postgres&amp;lt;/string&amp;gt;
  &amp;lt;/array&amp;gt;
  &amp;lt;key&amp;gt;RunAtLoad&amp;lt;/key&amp;gt;
  &amp;lt;true/&amp;gt;
  &amp;lt;key&amp;gt;WorkingDirectory&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;/usr/local&amp;lt;/string&amp;gt;
  &amp;lt;key&amp;gt;StandardOutPath&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;/usr/local/var/log/postgres.log&amp;lt;/string&amp;gt;
  &amp;lt;key&amp;gt;StandardErrorPath&amp;lt;/key&amp;gt;
  &amp;lt;string&amp;gt;/usr/local/var/log/postgres.log&amp;lt;/string&amp;gt;
&amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That log file at the end likely has the answer – log files always have the answer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f /usr/local/var/log/postgres.log
2019-09-14 02:58:16.850 EDT [45173] FATAL:  database files are incompatible with server
2019-09-14 02:58:16.850 EDT [45173] DETAIL:  The data directory was initialized by PostgreSQL version 9.6, which is not compatible with this version 11.4.
2019-09-14 02:58:26.985 EDT [45174] FATAL:  database files are incompatible with server
2019-09-14 02:58:26.985 EDT [45174] DETAIL:  The data directory was initialized by PostgreSQL version 9.6, which is not compatible with this version 11.4.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that says to me &quot;Google this little f* problem&quot; which takes me to a &lt;a href=&quot;https://olivierlacan.com/posts/migrating-homebrew-postgres-to-a-new-version/&quot;&gt;great postgres blog post&lt;/a&gt; which recommends that I run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew postgresql-upgrade-database
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that doesn't seem to work because I went from 9.6 to 11.something.or.other – too large a version leap.  But it does make a backup of my Postgres database and maybe that will help me – only it doesn't.&lt;/p&gt;

&lt;p&gt;And this is the point where I start to get sleepy and I'm going to cut to the chase with the solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Backup my old databases to another location to be safe&lt;/li&gt;
  &lt;li&gt;Re-initialize the postgres database with initdb (Thank you great postgres blog post)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here was all the jiggery pokery I had to endure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 3029  brew postgresql-upgrade-database
 3030  psql --version
 3031  ls -l /usr/local/var/postgres
 3032  ls -l /usr/local/var/postgres/postgres.old
 3033  brew services restart postgresql
 3034  ps auwwx | grep postg
 3035  tail -f /usr/local/var/log/postgres.log
 3036  cp /usr/local/var/postgres/postgres.old/postgresql.conf /usr/local/var/postgres/
 3037  brew services restart postgresql
 3038  tail -f /usr/local/var/log/postgres.log
 3039  chmod 0700 /usr/local/var/postgres
 3040  brew services restart postgresql
 3041  ps auwwx | grep postg
 3042  tail -f /usr/local/var/log/postgres.log
 3043  mkdir ~/old_postgres
 3044  rmdir ~/old_postgres
 3045  rmdir ~/old_postgres_databases
 3046  mkdir ~/old_postgres_databases
 3047  mv /usr/local/var/postgres/ ~/old_postgres_database
 3048  ls ~/old_postgres_database
 3049  initdb /usr/local/var/postgres/
➜  lauck git:(master) ✗ brew services start postgres
Service `postgresql` already started, use `brew services restart postgresql` to restart.
➜  lauck git:(master) ✗ brew services restart postgres
Stopping `postgresql`... (might take a while)
==&amp;gt; Successfully stopped `postgresql` (label: homebrew.mxcl.postgresql)
==&amp;gt; Successfully started `postgresql` (label: homebrew.mxcl.postgresql)
➜  lauck git:(master) ✗ ps auwwx | grep post
sjohnson         47737   0.0  0.0  4276124    552 s029  R+    3:14AM   0:00.01 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn post
sjohnson         47732   0.0  0.0  4480624   1620   ??  Ss    3:14AM   0:00.00 postgres: logical replication launcher
sjohnson         47731   0.0  0.0  4335492    856   ??  Ss    3:14AM   0:00.00 postgres: stats collector
sjohnson         47730   0.0  0.0  4480624   1844   ??  Ss    3:14AM   0:00.00 postgres: autovacuum launcher
sjohnson         47729   0.0  0.0  4480560    996   ??  Ss    3:14AM   0:00.00 postgres: walwriter
sjohnson         47728   0.0  0.0  4480560   1104   ??  Ss    3:14AM   0:00.00 postgres: background writer
sjohnson         47727   0.0  0.0  4480560    976   ??  Ss    3:14AM   0:00.00 postgres: checkpointer
sjohnson         47717   0.0  0.1  4480840  17796   ??  S     3:14AM   0:00.04 /usr/local/opt/postgresql/bin/postgres -D /usr/local/var/postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 14 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/postgres/2019/09/14/it-is-2-am-and-postgres-won-t-start-what-do-you-do.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/postgres/2019/09/14/it-is-2-am-and-postgres-won-t-start-what-do-you-do.html</guid>
        
        <category>postgres</category>
        
        <category>brew</category>
        
        <category>jumpstart</category>
        
        
        <category>postgres</category>
        
      </item>
    
      <item>
        <title>Writing Command Line Tools in Python - Enter Fire</title>
        <description>&lt;p&gt;One of the better ways to understand code is to figure out how exactly something runs.  And this can be done from the outside to the inside.&lt;/p&gt;

&lt;p&gt;So I'm starting with a command line that looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 pol.py timeline
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I open up the Python script and search for a def timeline and there isn't one.  Sigh.  The module Fire was mentioned to me during conversations with another developer so I do a quick code search for File and, at the very bottom, I find:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Fire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extract_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;timeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hatebase_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hatebase_regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proportions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hate_proportions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_urls&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;SystemExit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So we've got an if statement which is checking &lt;strong&gt;name&lt;/strong&gt; which I guess is some kind of python special thing because double __ are damn ugly so they must be special to make us notice them.  The colon seems to indicate that the next bit of code is attached to the if (I do know that it does; explaining it helps me at least).  And then we get to the Fire statement which is defining a dict, which I assume is a hash, so that the keyword timeline is mapped to 'hatebase_timeline' which is a method inside this.  And if nothing in the dict is matched, I assume that it falls thru to &quot;raise SystemExit&quot; which causes the program to terminate.&lt;/p&gt;

&lt;p&gt;The nice thing about Fire is that it seems to automagically handle things like the user giving the wrong input.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 pol.py foo
ERROR: Cannot find key: foo
Usage: pol.py &amp;lt;command&amp;gt;
  available commands:    extract | timeline | count | proportions | urls

For detailed information on this command, run:
  pol.py --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It also handles generating help quite nicely when you omit an argument:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 pol.py

NAME
    pol.py

SYNOPSIS
    pol.py COMMAND

COMMANDS
    COMMAND is one of the following:

... (I omitted the specific help)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To use fire, all you need to do is have an import statement (and a line in requirements.txt):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requirements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fire&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fire&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Python's Fire library comes from Google and is on &lt;a href=&quot;https://github.com/google/python-fire&quot;&gt;github&lt;/a&gt;.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;so-what-did-i-learn&quot;&gt;So What Did I Learn?&lt;/h2&gt;

&lt;p&gt;What I learned from this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A __ is something special in python&lt;/li&gt;
  &lt;li&gt;A : handles assigning code to a label or structure&lt;/li&gt;
  &lt;li&gt;Fire makes command line interfaces&lt;/li&gt;
  &lt;li&gt;The execution order of a python script is likely top down and, I suspect, that this wouldn't have worked if the if statement was at the top because the methods wouldn't have yet been in memory (I'm unclear on this final point)&lt;/li&gt;
  &lt;li&gt;There is an implicit C like concept of main only it is called &lt;strong&gt;main&lt;/strong&gt; and is simply code not inside a def structure&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 13 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/13/writing-command-line-tools-in-python-enter-fire.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/13/writing-command-line-tools-in-python-enter-fire.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Code - Data Versus Algorithms or There Is Always Another Way</title>
        <description>&lt;p&gt;I'm currently writing an active side project.  I describe active as something that I think about every single day and I've been at for several months.  It is still in stealth mode but at more than 4k lines of code, it is pretty damn real.  This is also the first thing I've ever built where gamification plays an important role.  One of the things that I need for the gamification is to know if a date is a holiday.  The date centric holidays are pretty easy – Date.new(this_year, 10, 31) for halloween, just for example.  But the stickler is thanksgiving – that 4th Thursday of the damn month.&lt;/p&gt;

&lt;p&gt;A simple Ruby solution is to construct a date range - Nov 1 and Nov 30 and then walk up, counting the Thursdays when you go.  And I'm certain there are better / more elegant ways but I'm not a whizbang date math kinda engineer.  But this is a method which gets called for every single metric that the system captures (for just a few months of data, there are over 700 metrics for my usage alone).  So I don't want that much iteration.  I looked at the &lt;a href=&quot;https://github.com/holidays/holidays&quot;&gt;Holidays gem&lt;/a&gt; and considered it but I only, for now, need simple holidays.&lt;/p&gt;

&lt;p&gt;And then it struck me – this is a side project, damn it.  The odds on any side project surviving for more than a year are low (although &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Job Hound&lt;/a&gt; has now beaten the odds at about 1.5 years old).  And Data is (generally) faster than code no matter how you cut it – so why not just hard code 5 years of Thanksgivings into the app.  I don't need a generalized solution that works for all time.  I just need a solution that is good enough to find out if there's a market for my side project.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateCommon&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# Todo - this bites me in the ass in 2024&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2021&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2021&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2021&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2022&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2022&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2022&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2023&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2023&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2023&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2023&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;day&lt;/span&gt;
  
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;holiday?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;year&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2019&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2019&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2020&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2020&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2021&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2021&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2022&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2022&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THANKSGIVING_2023&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BLACK_FRIDAY_2023&lt;/span&gt;    

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this gives me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  DateCommon.holiday?(self.created_at)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: by using created_at, I need to call this as part of an after_create or after_save since otherwise created_at wouldn't be set.&lt;/p&gt;

&lt;p&gt;Oh and as far as finding out when a particular Thanksgiving was, Google proved amply up to the task.  Just google for Thanksgiving 2024 and you'll see what I mean.  Sadly Google stops at 2024 which means my threshold of 5 years is probably about right.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/09/13/code-data-versus-algorithms-or-there-is-always-another-way.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/09/13/code-data-versus-algorithms-or-there-is-always-another-way.html</guid>
        
        <category>software_engineering</category>
        
        <category>ruby</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Data Science - Data Sets versus a Data Repository</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/IMG_8784.jpeg&quot; alt=&quot;IMG_8784.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have to begin this by stating definitively that I am not a Data Scientist myself (I don't have the math / statistics chops) but:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I've done data science work&lt;/li&gt;
  &lt;li&gt;I've managed data scientists where they were among my direct reports&lt;/li&gt;
  &lt;li&gt;I am a damn good software engineer with a ton of experience in data acquisition, data normalization (which are key data science issues)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I think I'm qualified to talk on these matters.&lt;/p&gt;

&lt;p&gt;I've spent much of the past few days dealing with issues around a large data set (100 million posts; 15 gigs stored in a compressed ZST file).  Even today when you start dealing with individual files that are larger than a few gigs, you actually have problems.  This 15 gig file had to be split into multiple 2 gig chunks to be distributed to me via our cloud storage tool  (&lt;a href=&quot;https://www.box.com/&quot;&gt;box.com&lt;/a&gt;; sidebar - how can you call yourself a storage company and have a limit of 2 gigs per file; I mean … WHAT ????).  And the confusion / issues around getting all 7 parts and then correctly joining them together cost me about a day of work due to download time and then multiple hour long runs getting interrupted because I thought I had a complete data set when I actually didn't.&lt;/p&gt;

&lt;p&gt;A data repository is a different thing from a data set.  A data repository is a database of the records that make up your data set that is accessed either by SQL or by a formal API.  Unlike a data set, a data repository represents a &quot;source of truth&quot;.  So while you might have Code Base XYZ and Bill might have a dataset of records he tests with and Beverly might have a different set of records that she tests with thus leading to different results, if Bill and Beverly tested against a data repository, they should get the same result.&lt;/p&gt;

&lt;p&gt;So thinking about these issues makes me want to state something dramatic like:  &quot;There shall always be a data repository; this bull crap around big archives is stupid and shall not be done&quot; but that's a short sighted approach that ignores how practical data science is often done.  An awful lot of data science is &lt;strong&gt;exploratory&lt;/strong&gt; in nature and involves going through data over and over.  And the simple nature of a local file is that it can always be browsed / explored faster than a network resource such as a data repository.  Also there are a &lt;a href=&quot;https://fuzzyblog.io/blog/data_science/2019/09/03/interesting-data-science-utilities.html&quot;&gt;variety of tools / pipelines&lt;/a&gt; that can be used with standard files that don't work with a repository style approach.&lt;/p&gt;

&lt;p&gt;And this makes me think that data sets exist alongside a data repository.  In fact I think the process is something like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Data is acquired and initially goes into a file based data set (maybe a zst file; maybe a directory of CSV files or something else).&lt;/li&gt;
  &lt;li&gt;At some point when the data is sufficiently valuable / verified / important then it is imported into a data repository so it becomes a central point of truth.&lt;/li&gt;
  &lt;li&gt;Down the road the data repository is used to generate one or more data sets for ongoing work.  One of the benefits of this is that you could dynamically generate different datasets like &quot;stuff in 2018&quot; versus &quot;stuff in 2017&quot; so you could see changes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How you distribute the data set files is something that still needs to be determined.  Obvious candidates include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;S3&lt;/li&gt;
  &lt;li&gt;FTP&lt;/li&gt;
  &lt;li&gt;Bittorrent&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 12 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/data_science/2019/09/12/data-science-data-sets-versus-a-data-repository.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/data_science/2019/09/12/data-science-data-sets-versus-a-data-repository.html</guid>
        
        <category>data_science</category>
        
        <category>python</category>
        
        
        <category>data_science</category>
        
      </item>
    
      <item>
        <title>Rails Tip - When in Doubt Bundle Exec</title>
        <description>&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/blog/assets/charlie_brown_lucy.jpg&quot; alt=&quot;charlie_brown_lucy.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently brought a newbie up into Rails the other day and their experience was that using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec command
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;automagically fixed everything.  They weren't wrong.  I've been doing this for years and years and my personal dev box is supposed to automagically pre-pend bundle exec where necessary and, even so, it is still sometimes necessary.&lt;/p&gt;

&lt;p&gt;Here's an example of the weirdness that bundle exec can fix:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  lauck git:(master) ✗ rails g model Project
Ignoring bcrypt-3.1.13 because its extensions are not built.  Try: gem pristine bcrypt --version 3.1.13
Ignoring bcrypt-3.1.12 because its extensions are not built.  Try: gem pristine bcrypt --version 3.1.12
Ignoring bindex-0.8.1 because its extensions are not built.  Try: gem pristine bindex --version 0.8.1
Ignoring bindex-0.7.0 because its extensions are not built.  Try: gem pristine bindex --version 0.7.0
Ignoring binding_of_caller-0.8.0 because its extensions are not built.  Try: gem pristine binding_of_caller --version 0.8.0
Ignoring bootsnap-1.4.5 because its extensions are not built.  Try: gem pristine bootsnap --version 1.4.5
Ignoring bootsnap-1.4.4 because its extensions are not built.  Try: gem pristine bootsnap --version 1.4.4
Ignoring byebug-11.0.1 because its extensions are not built.  Try: gem pristine byebug --version 11.0.1
Ignoring childprocess-1.0.1 because its extensions are not built.  Try: gem pristine childprocess --version 1.0.1
Ignoring debug_inspector-0.0.3 because its extensions are not built.  Try: gem pristine debug_inspector --version 0.0.3
Ignoring nokogiri-1.10.3 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.3
Ignoring nokogiri-1.10.4 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.4
Ignoring nokogiri-1.10.3 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.3
Ignoring nokogiri-1.10.4 because its extensions are not built.  Try: gem pristine nokogiri --version 1.10.4
/Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/app_loader.rb:52:in `block in exec_app': undefined method `match?' for /(APP|ENGINE)_PATH/:Regexp (NoMethodError)
Did you mean?  match
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/app_loader.rb:48:in `loop'
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/app_loader.rb:48:in `exec_app'
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/lib/rails/cli.rb:7:in `&amp;lt;top (required)&amp;gt;'
	from /System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:68:in `require'
	from /System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:68:in `require'
	from /Users/sjohnson/.rvm/gems/ruby-2.6.3/gems/railties-6.0.0/exe/rails:10:in `&amp;lt;top (required)&amp;gt;'
	from /usr/bin/rails:22:in `load'
	from /usr/bin/rails:22:in `&amp;lt;main&amp;gt;'

➜  lauck git:(master) ✗ which ruby
/Users/sjohnson/.rvm/rubies/ruby-2.6.3/bin/ruby
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then when bundle exec is used, we get the normal frothy Rails goodness:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  lauck git:(master) ✗ bundle exec rails g model Project
Running via Spring preloader in process 81386
      invoke  active_record
      create    db/migrate/20190911073916_create_projects.rb
      create    app/models/project.rb
      invoke    test_unit
      create      test/models/project_test.rb
      create      test/fixtures/projects.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are times when being a software developer feels a striking amount like being Charlie Brown when Lucy keeps taking the ball away.  Oy.&lt;/p&gt;

</description>
        <pubDate>Wed, 11 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/11/rails-tip-when-in-doubt-bundle-exec.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/11/rails-tip-when-in-doubt-bundle-exec.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Testing Sites on Mobile - Responsinator Rocks</title>
        <description>&lt;p&gt;Let's say that you are the webmaster of a fan run science fiction convention, say &lt;a href=&quot;https://www.starbaseindy.org&quot;&gt;Star Base Indy&lt;/a&gt;, and someone tells you &quot;Feature xyz doesn't work on mobile&quot; – what do you do?  You might dig up a phone but you could also try out Responsinator!&lt;/p&gt;

&lt;p&gt;Responsinator is a tool which lets you put in your own url and then view it as if it was a mobile site.  &lt;a href=&quot;https://www.responsinator.com/?url=https%3A%2F%2Fstarbaseindy.org&quot;&gt;Try it here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the description from the authors:&lt;/p&gt;

&lt;p&gt;&quot;Responsinator helps website makers quickly get an indication of how their responsive site will look on the most popular devices. It does not precisely replicate how it will look, for accurate testing always test on the real devices.&quot;&lt;/p&gt;

&lt;p&gt;Responsinator isn't perfect but it seems like a very cool, very easy way to get a feel for whether or not your site works on mobile (at least in terms of rendering / display).  &lt;strong&gt;Strongly Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Postscript&lt;/strong&gt;: There is even a &lt;a href=&quot;https://www.responsinator.com/about/&quot;&gt;bookmarklet&lt;/a&gt; that you can put in your browser toolbar to test whatever site you happen to be working on&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mobile/2019/09/10/testing-sites-on-mobile-responsinator-rocks.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mobile/2019/09/10/testing-sites-on-mobile-responsinator-rocks.html</guid>
        
        <category>webdev</category>
        
        <category>mobile</category>
        
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Questions to Ask During a Job Interview</title>
        <description>&lt;p&gt;I don't normally just blog links to stuff but this is actually pretty good.  It is a well written set of questions to ask during a job interview.  And there's a Hacker News discussion which also surfaces more than a few things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/viraptor/reverse-interview&quot;&gt;Job Interview Questions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20916749&quot;&gt;Hacker News Discussion of Job Interview Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My two favorites are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are you profitable?&lt;/li&gt;
  &lt;li&gt;If not, how long is your runway?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are considering working for a startup and you don't ask about their runway (i.e. how long can they operate before needing to raise the next round), well, you're a damn fool.  And I include myself in that assertion – because I haven't always asked that myself.&lt;/p&gt;

&lt;p&gt;The author also recommends an oldie but a goodie, &lt;a href=&quot;https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/&quot;&gt;The Joel Test&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/09/10/questions-to-ask-during-a-job-interview.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/09/10/questions-to-ask-during-a-job-interview.html</guid>
        
        <category>hiring</category>
        
        <category>jobhound</category>
        
        <category>interview</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Building a Python requirements.txt File</title>
        <description>&lt;p&gt;So one of my first tasks in my new job is getting a code base into readiness from its state as &quot;works on the original developer's laptop&quot;.  And, naturally, this process is hindered by the fact that it is a Python codebase and I'm a Ruby guy.  Still this is software development 101 – release management – and I do know how to do that.&lt;/p&gt;

&lt;p&gt;A python requirements.txt file is the equivalent of a Ruby Gemfile – an ASCII text file that identifies the libraries to load into an application.&lt;/p&gt;

&lt;p&gt;Here's an example of a Gemfile:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 6'
gem 'puma', '~&amp;gt; 3.11'
gem 'mysql2', '&amp;gt;= 0.4.4', '&amp;lt; 0.6.0'
gem 'bootsnap', '&amp;gt;= 1.1.0', require: false    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's a Python requirements.txt file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pygments==1.4
SQLAlchemy==0.7.1
South==0.7.3
amqplib==0.6.1
anyjson==0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The syntax is different but they are clearly the same type of thing – a package name and a version number.  The reason that the version number is important is that this locks a package down to a specific version number.  I'll write later why this is so damn important these days but for now please accept that it is (its a security thing).&lt;/p&gt;

&lt;p&gt;So the questions become:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you know what package names to put there?&lt;/li&gt;
  &lt;li&gt;How do you know what version number to use?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first one is easy – you look for lines at the start of your Python program that begin like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  import iso8601
  import ujson as json
  import zstandard as zstd
  import numpy as np
  
  -or-
  
  from fire import Fire
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Do I understand the difference between it beginning with &quot;from&quot; and &quot;import&quot;?  Nope.  Nor do I need to at this point.&lt;/p&gt;

&lt;p&gt;So my first entry in this requirements.txt file might be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstandard==9999
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My guess was that Python would either give me an error message that helped me or let me know what was going on when I gave a crazy version number.  This is done with a command line like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's what happened:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Collecting zstandard==9999 (from -r requirements.txt (line 17))
  ERROR: Could not find a version that satisfies the requirement zstandard==9999 
  (from -r requirements.txt (line 17)) (from versions: 0.0.1, 0.1, 0.2, 0.2.1, 0.2.2,
     0.3.0, 0.3.1, 0.3.2, 0.3.3, 0.4.0, 0.5.0, 0.5.1, 0.5.2, 0.6.0, 0.7.0, 0.8.0, 
     0.8.1, 0.8.2, 0.9.0, 0.9.1, 0.10.0, 0.10.1, 0.10.2, 0.11.0, 0.11.1)
ERROR: No matching distribution found for zstandard==9999 (from -r requirements.txt 
  (line 17))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that tells us that 0.11.1 is a valid version number so our requirements line becomes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstandard==0.11.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The final trick is to build this up one dependency at a time.  That way you resolve everything as you go instead of N conflicts all at once.&lt;/p&gt;

&lt;p&gt;In closing there are also some standard libraries that follow the same from / import calls but don't actually need to be in requirements.txt.  Here are some seeming examples:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import re 
from sys import stdin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My best advice here is play around with the 9999 trick and see if a version number appears.  If it does then put it in requirements.txt and if not, well, kill it since then it is likely a Python built in.&lt;/p&gt;

&lt;p&gt;And while I suspect there are more subtleties buried deep within Python's requirements.txt facility, this is a pretty good stopping place.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/10/building-a-python-requirements-txt-file.html</guid>
        
        <category>python</category>
        
        <category>requirements</category>
        
        <category>pip</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>A Universal Resume Tool</title>
        <description>&lt;p&gt;Ah insomnia.  I clearly should not be out on the Internet late at night – I should be sleeping but the result is a swath of Internet goodness that I've found and am now writing about.  This find is &quot;Universal Resume&quot; which is an NPM project to produce a good looking resume website for yourself.  &lt;a href=&quot;https://universal-resume.netlify.com/&quot;&gt;Here's an example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are the links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://universal-resume.netlify.com/&quot;&gt;Example&lt;/a&gt; – see what a resume looks like.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/WebPraktikos/universal-resume&quot;&gt;The Code&lt;/a&gt; – try it for yourself&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20923823&quot;&gt;See what others think&lt;/a&gt; – the Hacker News discussion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I'm not an NPM guy (or a JavaScript guy at all), I will admit that this looks better than my &lt;a href=&quot;https://fuzzyblog.io/blog/resume.html&quot;&gt;outdated online resume&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hm… Perhaps I should talk to this person about incorporating this into Job Hound as a resume hosting feature …&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/09/10/a-universal-resume-tool.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/09/10/a-universal-resume-tool.html</guid>
        
        <category>jobhound</category>
        
        <category>hiring</category>
        
        <category>job</category>
        
        <category>resume</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Working with ZSTD Files</title>
        <description>&lt;p&gt;I love open source developers but there are times when I question their damn naming practices.  I'm currently working with a giant data repository started as a &quot;Z Standard&quot; or &quot;zstd&quot; compressed file.  And while I know that means &quot;Z Standard&quot;, I can't help but look at it as &quot;Z std&quot;.  Oy.&lt;/p&gt;

&lt;p&gt;Anyway.  Zstd is a &lt;a href=&quot;https://github.com/facebook/zstd&quot;&gt;Facebook standard for data compression&lt;/a&gt; and it is strikingly effective.  I've got over 100 gigs of JSON encoded data stored in a 13.7 gig file.  Now I am aware that text compresses actually quite well but still 100 gigs in 13.7 gigs of space feels like &lt;strong&gt;wow&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;

&lt;p&gt;If you're on a Mac then brew, as always, is your very best friend:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install zstd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;useful-command-lines&quot;&gt;Useful Command Lines&lt;/h2&gt;

&lt;p&gt;Assume that pol.zst is the name of the archive and it is located in your current directory.&lt;/p&gt;

&lt;p&gt;Examining a handful of records:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | head -n100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;this dumps a stream of records out that are then fed into head which limits the quantity to 100.&lt;/p&gt;

&lt;p&gt;The zstd -c and -d options mean:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-c     : force write to standard output, even if it is the console
-d     : decompression
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Integrating the often useful jq (which just gets a single json element out):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | jq '.timestamp'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And like all good *nix pipelines, this is composable (this example would extract the first 1000 records and then reduce them to only the comment element from the json):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | head -n1000 | jq '.comment'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To count the total records in the zst file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd -cd pol.zst | wc -l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Happily help is also available with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zstd --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank You's&lt;/h2&gt;

&lt;p&gt;Kudos to Facebook for another great bit of Open Source contributed back to the world.  Also thanks to &lt;a href=&quot;https://grantrvd.github.io/&quot;&gt;Grant Vousden-Dishington&lt;/a&gt;, the contributor of these command lines. He's been doing Zstd for a while; I'm the noob here.&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/09/09/working-with-zst-files.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/09/09/working-with-zst-files.html</guid>
        
        <category>linux</category>
        
        <category>zstd</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Working Up to Bert - Installing TensorFlow for Python</title>
        <description>&lt;p&gt;I'm gearing myself up mentally for a bunch of upcoming machine learning worth using Bert / Roberta and that means getting my head around just working with Python as a tool.  So today's exercise is installing TensorFlow for Python since Bert / Roberta have TensorFlow as a dependency.&lt;/p&gt;

&lt;p&gt;I worked from the &lt;a href=&quot;https://www.tensorflow.org/install/pip&quot;&gt;official TensorFlow instructions using pip&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-1---validating-requirements&quot;&gt;Step 1 - Validating Requirements&lt;/h2&gt;

&lt;p&gt;Whenever you are on the cutting edge (and TensorFlow is cutting edge) then you generally need the latest tools so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 --version
Python 3.7.4

pip3 --version
pip 19.2.3 from /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip (python 3.7)

virtualenv --version
15.1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All of those are actually recent.  To translate these for myself and the one or two other rubyists out there:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;python3 is the Python language executable; think ruby&lt;/li&gt;
  &lt;li&gt;pip3 is the equivalent of bundler (and your Gemfile is named requirements.txt); but pip is also partial equivalent of the gem executable (as opposed to the gem itself)&lt;/li&gt;
  &lt;li&gt;virtualenv is the equivalent of rvm or rbenv&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don't have current versions of those then you might want to check out the &lt;a href=&quot;https://www.anaconda.com/distribution/&quot;&gt;Anaconda distribution of Python&lt;/a&gt; although some of my &lt;a href=&quot;https://eethomp.github.io&quot;&gt;python friends&lt;/a&gt; would curse mightily to hear me say that; I don't savvy the differences enough yet to know.&lt;/p&gt;

&lt;h2 id=&quot;create-a-virtual-environment&quot;&gt;Create a Virtual Environment&lt;/h2&gt;

&lt;p&gt;The next step is to create a virtual environment where you're planning to work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Given the quantity of terminal windows I survive in, the first thing I actually did was to load the nu shell in my terminal so I had a distinct environment to separate Python from my Ruby (&quot;You got python in my Ruby; No you got Ruby in my python&quot;; anyone out there get that old joke).  I also created and changed into a new directory where this will all be installed into since I wasn't sure exactly where / how the python virtual environment was going to work.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir ~/fuzzygroup/adl/tensorflow
cd ~/fuzzygroup/adl/tensorflow
virtualenv --system-site-packages -p python3 ./venv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this shows me is that virtualenv creates a single directory called &quot;venv&quot; in your current directory (presumably holding dependencies):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls
------+-----------+----------+-------+-------------+-------------+-------------
 name | type      | readonly | size  | created     | accessed    | modified
------+-----------+----------+-------+-------------+-------------+-------------
 venv | Directory |          | 224 B | an hour ago | an hour ago | an hour ago
------+-----------+----------+-------+-------------+-------------+-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and here's a look into venv itself:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls venv/
---+-------------------------+-----------+----------+-------+-------------+-------------+-------------
 # | name                    | type      | readonly | size  | created     | accessed    | modified
---+-------------------------+-----------+----------+-------+-------------+-------------+-------------
 0 | venv/.Python            | Symlink   |          | 56 B  | an hour ago | an hour ago | an hour ago
 1 | venv/bin                | Directory |          | 512 B | an hour ago | an hour ago | an hour ago
 2 | venv/include            | Directory |          | 96 B  | an hour ago | an hour ago | an hour ago
 3 | venv/lib                | Directory |          | 96 B  | an hour ago | an hour ago | an hour ago
 4 | venv/pip-selfcheck.json | File      |          | 61 B  | an hour ago | an hour ago | an hour ago
---+-------------------------+-----------+----------+-------+-------------+-------------+-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: And isn't the &lt;a href=&quot;https://www.jonathanturner.org/2019/08/introducing-nushell.html&quot;&gt;nu shell&lt;/a&gt; cool as hell?&lt;/p&gt;

&lt;p&gt;Once you have venv setup then you need to activate it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ./venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Ruby this would be done just by changing into the directory thru .ruby-version and .ruby-gemfile.&lt;/p&gt;

&lt;p&gt;The next step is to make sure that pip is upgraded:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install --upgrade pip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the Ruby world, this is equivalent to upgrading bundler.&lt;/p&gt;

&lt;p&gt;Run a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to see what's installed.&lt;/p&gt;

&lt;p&gt;In the Ruby world this would be 'gem list'.&lt;/p&gt;

&lt;p&gt;Now in the Ruby world where you automagically have your environment setup for you (and taken down) when you change in and out of directories, virtualenv requires you to manually deactivate:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Given my personal problems with &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html&quot;&gt;Shell Extension Madness&lt;/a&gt;, I'm not certain that being explicit about virtualenv activation / deactivation is all that bad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm a consultant and a serious ruby hobbyist so I have WAY more environments than is normal; I'm not saying that rbenv / rvm don't work in general, more specifically, that they don't always work for &lt;strong&gt;me&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;## Actually Installing TensorFlow&lt;/p&gt;

&lt;p&gt;And now, finally, we can actually install TensorFlow:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pip install --upgrade tensorflow
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This would be the equivalent of a gem install command without a Gemfile.&lt;/p&gt;

&lt;p&gt;To verify the installation we can pass a Python script into Python with the -c argument:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 -c &quot;import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Interestingly the TensorFlow docs had the above as just &quot;python -c&quot; despite referencing python3 earlier.  I thought perhaps that virtualenv aliased python3 to python but that seems not to be the case; bad on Google Documents; sigh.&lt;/p&gt;

&lt;p&gt;Here's what I got as a result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 -c &quot;import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))&quot;
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([(&quot;qint8&quot;, np.int8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([(&quot;quint8&quot;, np.uint8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([(&quot;qint16&quot;, np.int16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([(&quot;quint16&quot;, np.uint16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([(&quot;qint32&quot;, np.int32, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([(&quot;resource&quot;, np.ubyte, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([(&quot;qint8&quot;, np.int8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([(&quot;quint8&quot;, np.uint8, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([(&quot;qint16&quot;, np.int16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([(&quot;quint16&quot;, np.uint16, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([(&quot;qint32&quot;, np.int32, 1)])
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([(&quot;resource&quot;, np.ubyte, 1)])
Tensor(&quot;Sum:0&quot;, shape=(), dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This seems to be a bunch of deprecation warnings but the final output seems to be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Tensor(&quot;Sum:0&quot;, shape=(), dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I guess that's right… I mean it did some kind of math; I just don't understand it yet.  And they don't actually show what should happen.  Again bad on the Google documenters.&lt;/p&gt;

&lt;p&gt;So the next step here is to move onto the &lt;a href=&quot;https://www.tensorflow.org/tutorials&quot;&gt;tutorials&lt;/a&gt;…&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/09/working-up-to-bert-installing-tensorflow-for-python.html</guid>
        
        <category>python</category>
        
        <category>tensorflow</category>
        
        <category>pip</category>
        
        <category>virtualenv</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Becoming a Rails Developer - Bundle Install Completes; What's Next</title>
        <description>&lt;p&gt;I currently bootstrapping a friend into a Rails development cycle and here's their status:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;RbEnv is installed.&lt;/li&gt;
  &lt;li&gt;Ruby is installed.&lt;/li&gt;
  &lt;li&gt;Application is checked out.&lt;/li&gt;
  &lt;li&gt;Bundle Install has completed.&lt;/li&gt;
  &lt;li&gt;The database is created i.e. bundle exec rake db:create has completed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So from their parlance, &quot;the application compiles&quot; – but what now brown cow?&lt;/p&gt;

&lt;p&gt;The first thing you want to do is verify that things work.  I mean they should but how do you know?&lt;/p&gt;

&lt;p&gt;The first step is to run the test suite:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rspec spec
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That should execute and not show any errors.  If that succeeds then the next step in making sure your installation is complete is to run the Rails console and do something simple:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails c (and press enter and wait for it to load)
User.where(username: 'fuzzygroup') (and press enter)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this should do is launch the interactive rails console – a REPL, similar to what you get when you type python.  A REPL (read-evaluate-print-loop) is an interactive way to do development and manipulate the state of the system.  There are two different REPLs in the ruby world – there is &lt;strong&gt;irb&lt;/strong&gt; which is a REPL for the ruby language and then &lt;strong&gt;rails c&lt;/strong&gt; which is the ruby REPL but loaded with all the &quot;objects&quot; (really classes) for your application.&lt;/p&gt;

&lt;p&gt;The command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User.where(username: 'fuzzygroup')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;is a &quot;ActiveRecord&quot; statement which says &quot;Execute the User class and return any database objects with the username of 'fuzzygroup' drom the users table&quot;.  ActiveRecord is an ORM (object-relational mapper) that drives the database layer of Rails.  Unlike most ORMs, ActiveRecord actually works strikingly well.&lt;/p&gt;

&lt;p&gt;What you should get back from User.first at this point is basically [] and a response like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User Exists? (56.5ms)  SELECT 1 AS one FROM `users` WHERE `users`.`username` = 'fuzzygroup' LIMIT 1
[]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The default operation for ActiveRecord's where statement is to query the database and return a collection of objects (think array although its actually richer).  In this case there was no matching object so you just got back an empty array (like class).&lt;/p&gt;

&lt;p&gt;This brings us to an interesting ruby-ism which messes up a lot of people – the concept of the default return.  Here's an example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def multiply(x,y)
  x * y
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you executed this method with multiply(2,3) then you'd get back 6 even though there is no actual return statement.  Ruby operates by returning the last evaluated expression at the end of a statement and we can use that concept right now.  Back in the Rails console type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;result = _
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you'll get this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.6.3 :018 &amp;gt; result = _
  User Exists? (8.3ms)  SELECT 1 AS one FROM `users` WHERE `users`.`username` = 'fddd' LIMIT 1
[]
2.6.3 :019 &amp;gt; result.class
User::ActiveRecord_Relation &amp;lt; ActiveRecord::Relation
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the Rails console, the last result is always available as the special variable &lt;strong&gt;_&lt;/strong&gt;. And you can always look at an object's class with the .class method.&lt;/p&gt;

&lt;p&gt;To exit the Rails console, just type quit and press enter:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;quit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What you have now done is to validate that the Rails system itself works.  If you can bring up a Rails console and connect to the database thru ActiveRecord then pretty much 100% of Rails itself works (the connection to Redis is something else but we're not ready for that yet).&lt;/p&gt;

&lt;p&gt;And this brings up to the nasty truth about any Rails environment – without data to operate on, things, well, really suck.  This process of getting an initial set of development data to work on is referred to as &quot;seeding&quot;.  And there is both a default way to do this – and then the way that I do it.&lt;/p&gt;

&lt;p&gt;The default want to do this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:seed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that should load a series of YAML files which define the state of the objects in the system.  And while that works, I have always found that database seeding needs to be far more controllable and idempotent than a simple YAML loader.&lt;/p&gt;

&lt;p&gt;Note: Idempotence is a fancy computer term that means:&lt;/p&gt;

&lt;p&gt;Idempotence (UK: /ˌɪdɛmˈpoʊtəns/, US: /ˌaɪdəm-/) is the property of certain operations in mathematics and computer science whereby they can be applied multiple times without changing the result beyond the initial application.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Idempotence&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From a personal perspective, in this context, idempotence means that an object in the database should be created correctly when it doesn't exist &lt;strong&gt;and&lt;/strong&gt; that creation command should be able to be run again – and not have that object altered.  Here's an example - you want a user named fuzzygroup (yep that's me; it is short for me and my cats while also being a mild reference to fuzzy logic) to exist in the system.  And when you extend the database seeding routine to be more powerful, you don't want the work that was done incrementally using the user interface to be wiped out.&lt;/p&gt;

&lt;p&gt;Here's how I manage database seeding:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake seed:init --trace
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Yes you should do this now if you are working on one of my codebases; otherwise this won't do a damn thing.&lt;/p&gt;

&lt;p&gt;The command rake is a way to execute a set of ruby scripts that run from the command line. Rake is a creation of the late Jim Weirich, a wonderful rubyist, and &quot;rake tasks&quot; are a key part of the Rails infrastructure.  This command is saying: &quot;Run the seed namespace and call the init task within it.  Also give me a detailed trace of any errors&quot;.  Rake tasks live in this part of your rails codebase:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lib/tasks/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All Rails codebases have a standard directory structure and lib is a top level directory in the hierarchy.&lt;/p&gt;

&lt;p&gt;At the end of this you should have a database that is now correctly populated with a series of objects related to the problem domain you are solving.&lt;/p&gt;

&lt;p&gt;The next step is to launch the default Rails web server with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This runs Puma which is a ruby web server and you can navigate to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:3000/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;in Chrome or your default browser of choice and you should see a home page -or- a sign in page.  At this point you should dig into lib/tasks/user.rake and see if there are credentials to use (there are).&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/08/becoming-a-rails-developer-bundle-install-completes-what-s-next.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/08/becoming-a-rails-developer-bundle-install-completes-what-s-next.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Setting Up a Github Pages Jekyll Blog</title>
        <description>&lt;p&gt;I don't recommend that anyone blog the way I do.  Git and Jekyll are both fairly user hostile but I found myself having to do this the other day so i thought I'd document it at least for myself.&lt;/p&gt;

&lt;p&gt;Note the First: This assumes that you have a working local ruby installation and the Jekyll gem installed.&lt;/p&gt;

&lt;p&gt;Note the Second: These instructions are rough – there's a fair bit of jiggery / pokery going on here and I may have missed a step.  Dust off your Google Fu, sacrifice a goat and pray.  That's usually how I setup a new blog.&lt;/p&gt;

&lt;p&gt;Things in &lt;strong&gt;bold&lt;/strong&gt; or otherwise emphasized are what you type.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Do a &lt;strong&gt;jekyll new blogname&lt;/strong&gt; and create a new blog.  blogname is how this is going to appear online so get that name right.&lt;/li&gt;
  &lt;li&gt;Change into that directory.  I don't know what it is so the only help I can give you is &lt;strong&gt;cd&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In that directory, do a &lt;strong&gt;git init&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;On github create a new repository named blogname (in step 1).&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On your local machine, in that directory, do a:&lt;/p&gt;

    &lt;p&gt;git remote add origin git@github.com:fuzzygroup/blogname.git&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;bundle install&lt;/strong&gt; to setup all the code for your Jekyll blog.&lt;/li&gt;
  &lt;li&gt;Edit _config.yml and setup your metadata.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git add .&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git commit -m &quot;initial commit&quot;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git branch gh-pages&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git co gh-pages&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Do a &lt;strong&gt;git push origin gh-pages&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Try and view it on github. I know that's not very specific and I apologize; a bit rushed this morning.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/pages/&quot;&gt;https://help.github.com/pages/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/setting-up-your-github-pages-site-locally-with-jekyll&quot;&gt;https://help.github.com/en/articles/setting-up-your-github-pages-site-locally-with-jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 07 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jekyll/2019/09/07/setting-up-a-github-pages-jekyll-blog.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jekyll/2019/09/07/setting-up-a-github-pages-jekyll-blog.html</guid>
        
        <category>jekyll</category>
        
        <category>blogging</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>12 Practical Tips for Job Seekers</title>
        <description>&lt;p&gt;My last job search took sending out almost 100 job applications and during that process, I managed to collect a handful of practical tips that should be helpful to job seekers:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Regularly Check All Mail Not Just Inbox&lt;/li&gt;
  &lt;li&gt;Stack Overflow has an Inbox Also&lt;/li&gt;
  &lt;li&gt;Cover Letters Really, Really Matter&lt;/li&gt;
  &lt;li&gt;If You Do Homework Make a Screencast Demoing It&lt;/li&gt;
  &lt;li&gt;Interviews Matter Much, Much More to You Than to the Company&lt;/li&gt;
  &lt;li&gt;Find Out What Coding Test They Use&lt;/li&gt;
  &lt;li&gt;Always, Always Review the Call Details Before the Call&lt;/li&gt;
  &lt;li&gt;Never Tell Your Salary&lt;/li&gt;
  &lt;li&gt;You'll Never Know Why You Didn't Get It; Let It Go&lt;/li&gt;
  &lt;li&gt;Don't Ever Stop Sending Out Resumes; Not Over Until the Fat Person Hires You&lt;/li&gt;
  &lt;li&gt;The Older You Are, The Harder This Is&lt;/li&gt;
  &lt;li&gt;The Job Market Has Changed - It Is About Keeping Bad People Out Not Getting Good People In&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;regularly-check-all-mail-not-just-inbox&quot;&gt;1. Regularly Check All Mail Not Just Inbox&lt;/h1&gt;

&lt;p&gt;The simplest thing I learned was obvious but absolutely unapparent.  I've been a regular user of Gmail ever since I could get an account and like most Gmail users, I rely on the default Inbox view.  The thing to understand is that Inbox doesn't always get it right in a job context.  There are lots of places in the job hunt process where a program sends you an automated email and I've found that those automated emails often do NOT show up in Inbox.&lt;/p&gt;

&lt;p&gt;I've been faithfully using GMail since it came out and one of the things that really surprised me is the number of messages related to an ongoing job search that GMail happily filed away under &quot;All Messages&quot; and not in Inbox. Even when I had been actively in discussion with people at a given company, I would still find messages from the company showing up only in All Messages. This is hugely frustrating and it definitely cost me an interview or two until I started religiously checking All Mail every day.&lt;/p&gt;

&lt;h1 id=&quot;stack-overflow-has-an-inbox-too&quot;&gt;2. Stack Overflow Has an Inbox Too&lt;/h1&gt;

&lt;p&gt;This means that at least sometimes a job you reach out to via Stack Overflow will reply to you via your Stack Overflow.  And if you aren't monitoring that Inbox then you're going to miss the opportunity.&lt;/p&gt;

&lt;h1 id=&quot;cover-letters-really-really-matter&quot;&gt;3. Cover Letters Really, Really Matter&lt;/h1&gt;

&lt;p&gt;While cover letters nowadays aren't the old fashioned paper letter, they really do matter.  A cover letter gives you an additional opportunity to highlight your skills.  The cover letters I focus on most are the ones that at lease appear to be going to an actual human, say &quot;lisa@company.com&quot;.  The ones going to &quot;jobs@company.com&quot;, I worry less about.&lt;/p&gt;

&lt;h1 id=&quot;if-you-do-homework-make-a-screencast-demoing-it&quot;&gt;4. If You Do Homework Make a Screencast Demoing It&lt;/h1&gt;

&lt;p&gt;A lot of the companies now a days require you to do homework as a way of &quot;screening&quot; you for a job.  And while I think that's a bullshite tactic - just read the damn resume people - it is a real thing.  One of the best ways you can highlight your work is to make a screencast demonstrating it.  This not only showcases your ability to communicate but also addresses any issues that people might have with installing / testing your code.&lt;/p&gt;

&lt;h1 id=&quot;interviews-matter-much-much-more-to-you-than-to-the-company&quot;&gt;5. Interviews Matter Much, Much More to You Than to the Company&lt;/h1&gt;

&lt;p&gt;One thing to understand is that any one interview matters much, much more to you than to the company.  If you miss your interview then you are generally unlikely to get a second chance.  This means treat each interview carefully, put it on your calendar, etc.&lt;/p&gt;

&lt;h1 id=&quot;find-out-what-coding-test-they-use&quot;&gt;6. Find Out What Coding Test They Use&lt;/h1&gt;

&lt;p&gt;If the company assesses candidates with coding tests, again &lt;strong&gt;bullshite&lt;/strong&gt; then try and find out what coding test they use before you have to take it.  Coding tests are pretty widely documented and you can bone up specifically on say the &lt;a href=&quot;https://www.google.com/search?q=triplebyte+coding+test&quot;&gt;TripleByte coding test&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;always-always-review-the-call-details-before-the-call&quot;&gt;7. Always, Always Review the Call Details Before the Call&lt;/h1&gt;

&lt;p&gt;This one is obvious but important - always review your notes / the calendar appointment prior to the call.  When you are juggling a lot of interviews, it is easy to forget that job x requires a video call that uses client software y.&lt;/p&gt;

&lt;h1 id=&quot;never-tell-your-salary&quot;&gt;8. Never Tell Your Salary&lt;/h1&gt;

&lt;p&gt;One solid rule of thumb that I always follow is simple - &lt;strong&gt;never tell them your salary&lt;/strong&gt;.    I got this tip from Josh Doody of Fearless Salary Negotiation.  Josh makes the argument that hiring is inherently unfair - the company has all the information and you, the candidate has none.  Due to this information asymmetry, giving them your current salary only increases their advantage over you.  Also keep in mind that it is &lt;a href=&quot;https://www.shrm.org/resourcesandtools/legal-and-compliance/state-and-local-updates/pages/california-salary-history-ban-questions.aspx&quot;&gt;illegal for California companies&lt;/a&gt; to ask you your salary history.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Despite this being illegal in California, when a well known, venture funded California company asked me for my salary history and I cited this law, they said &quot;Well you're remote and in Indiana so we can ask you&quot;.  Needless to say I noped out of that possible job opportunity – yes what they said might have been legally valid but their HR department's ready willingness to play fast and loose with the law told me everything I wanted to know about that company.&lt;/p&gt;

&lt;h1 id=&quot;youll-never-know-why-you-didnt-get-it-let-it-go&quot;&gt;9. You'll Never Know Why You Didn't Get It; Let It Go&lt;/h1&gt;

&lt;p&gt;It has now been 2.5 years since I didn't get Job X (a Senior Software engineering slot at a leading Wedding technology company).  After passing the coding test, the coding project and being flown down for the onsite interview and absolutely nailing the whiteboard exercise, I didn't get it – and I was never told why.  You will never know why you don't get a particular job and you simply need to let it go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is a lot harder than it seems.  I still haven't let it go.&lt;/p&gt;

&lt;h1 id=&quot;dont-ever-stop-sending-out-resumes-not-over-until-an-hr-person-hires-you&quot;&gt;10. Don't Ever Stop Sending Out Resumes; Not Over Until an HR Person Hires You&lt;/h1&gt;

&lt;p&gt;Once you send out say 75 resumes and get maybe 5 interviews, you feel very much like &quot;why am I bothering?&quot;.  That's crap – there are jobs out there but sometimes you have to keep at it.  And at it.  And at it.  Etc.&lt;/p&gt;

&lt;h1 id=&quot;the-older-you-are-the-harder-this-is&quot;&gt;11. The Older You Are, The Harder This Is&lt;/h1&gt;

&lt;p&gt;If you work in technology, you will find that the older you are, the harder it gets to get a technical job.  I'm over 50 and I still write code every single day – and I'm good at it.  But I noticed a very different response from companies after I turned 50.  I didn't take the step of editing my resume so my age wasn't apparent but it is something I would likely do my next time out.&lt;/p&gt;

&lt;h1 id=&quot;the-job-market-has-changed---it-is-about-keeping-bad-people-out-not-getting-good-people-in&quot;&gt;12. The Job Market Has Changed - It Is About Keeping Bad People Out Not Getting Good People In&lt;/h1&gt;

&lt;p&gt;My final observation is that the HR goal is now to keep bad people out. This is a dramatic change from tech hiring in years past; it really has shifted to keeping people out not getting them in. And the corollary to this is that good people fall by the wayside – in droves.&lt;/p&gt;

&lt;p&gt;You need to keep this in mind when you are applying for jobs and really think hard about how you differentiate yourself.&lt;/p&gt;

&lt;h1 id=&quot;job-hound&quot;&gt;13. Job Hound&lt;/h1&gt;

&lt;p&gt;My final tip is a plug for one of my current side projects, &lt;a href=&quot;https://jobhound.io/&quot;&gt;JobHound&lt;/a&gt;.  JobHound makes the process of getting a tech job, well, suck less.  Its free and you can sign up today and use it anytime.&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/09/07/12-practical-tips-for-job-seekers.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/09/07/12-practical-tips-for-job-seekers.html</guid>
        
        <category>jobhound</category>
        
        <category>hiring</category>
        
        <category>job</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Moving to Zsh on OSX in 2019</title>
        <description>&lt;p&gt;Note: Before you follow these instructions, see Postscript at the end.&lt;/p&gt;

&lt;p&gt;I have a long and twisted relationship with &lt;em&gt;nix shells.  My computing history started on 8 bit boxes where the was close to no shell (just Basic) and then transitioned to DOS.  I moved to Unix initially in 88 (Sun 3s) and then went to Linux full time in '99 and OSX finally in 2005.  And despite all that, I still struggle with *nix shells; my prompt is never right, my shell scripting blows chunks, etc.  Sigh.  But the one thing I hate, hate, hate, *censored&lt;/em&gt; hate is that with Bash, my history is always screwed up.  I actually like Bash a bit but I am so damn tired of every Bash session on my machine having a different history and each terminal window racing in a Darwinian competition of &quot;let my history win!&quot;.&lt;/p&gt;

&lt;p&gt;Just to clarify, in a terminal your history is the list of commands that you executed.  And since the types of commands I issue can be frighteningly complex, I want access to all my previous commands - &lt;em&gt;period&lt;/em&gt;.  I'm absolutely binary on this issue, access to all your commands is a good thing.  And commands being lost is a bad thing; a &lt;em&gt;censored&lt;/em&gt;ing bad thing.&lt;/p&gt;

&lt;p&gt;My good friend Sean and regular pairing partner, Sean Kennedy, told me that Z-Shell solves this and, when I had an opportunity, I was ready for it.  Here's the short process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Close everything.&lt;/li&gt;
  &lt;li&gt;Install Mojave if you haven't (yes I'm antiquatedly retro in the speed by which I upgrade operating systems; sorry / not sorry).&lt;/li&gt;
  &lt;li&gt;Install Z Shell with Home Brew&lt;/li&gt;
  &lt;li&gt;Install Oh My Zsh which makes ZShell so much better&lt;/li&gt;
  &lt;li&gt;Execute a change shell command&lt;/li&gt;
  &lt;li&gt;Update Your .zshrc File&lt;/li&gt;
  &lt;li&gt;Log out and then in on your Mac.  Yes this shouldn't be necessary but #$(#$*# Apple.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Steps 3 forward are covered below.&lt;/p&gt;

&lt;h1 id=&quot;install-z-shell-with-home-brew&quot;&gt;3 - Install Z Shell with Home Brew&lt;/h1&gt;

&lt;p&gt;Execute this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install zsh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;install-oh-my-zsh&quot;&gt;4- Install Oh My Zsh&lt;/h1&gt;

&lt;p&gt;Execute this command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;change-your-shell&quot;&gt;5 - Change Your Shell&lt;/h1&gt;

&lt;p&gt;You may find that installing Oh My Zsh changes your shell.  If it doesn't then you need to do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh -s $(which zsh)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s &quot;$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme&quot; &quot;$ZSH_CUSTOM/themes/spaceship.zsh-theme&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;update-your-zshrc&quot;&gt;6 - Update Your .zshrc&lt;/h1&gt;

&lt;p&gt;The file .zshrc is your zsh configuration file.  Edit it as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open this file in an editor.&lt;/li&gt;
  &lt;li&gt;Comment out the robbyrussell theme line by prefixing it with a # character.&lt;/li&gt;
  &lt;li&gt;Add the following lines after the robbyrussell theme line (change the username csphere to your own).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are the changes to make:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Oh My Zsh
export SPACESHIP_GIT_SYMBOL=''
export SPACESHIP_PACKAGE_SYMBOL='package '
export SPACESHIP_NODE_SYMBOL='node '
export SPACESHIP_RUBY_SYMBOL='ruby '
export SPACESHIP_ELIXIR_SYMBOL='elixir '
export SPACESHIP_XCODE_SYMBOL='xcode '
export SPACESHIP_SWIFT_SYMBOL='swift '
export SPACESHIP_GOLANG_SYMBOL='go '
export SPACESHIP_PHP_SYMBOL='php '
export SPACESHIP_RUST_SYMBOL='rust '
export SPACESHIP_DOCKER_SYMBOL='docker '
export SPACESHIP_AWS_SYMBOL='aws '
export ZSH=/Users/csphere/.oh-my-zsh
ZSH_THEME=&quot;spaceship&quot;
ZSH_CUSTOM=~/.zsh-custom/
plugins=(
  git
)
source $ZSH/oh-my-zsh.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;a-slack-conversation-about-this&quot;&gt;A Slack Conversation About This&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scott.johnson [9:26 AM]
So I just tried to search my history and am I doing it right:

history | grep ssh
  69* ssh 172.31.21.29

that’s not showing the ssh line I got from you to get into jenkins which concerns me about the command line history.  Am I doing something wrong?

So I found it by looking in ~/.zsh_history

Sean Kennedy [9:32 AM]
edit your zsh history
err
edit your zshrc

scott.johnson [9:33 AM]
ok…

Sean Kennedy [9:33 AM]
```HISTFILE=~/.zsh_history
SAVEHIST=100000```
then source it
will probably need to source it in every active terminal

scott.johnson [9:33 AM]
thx man

Sean Kennedy [9:33 AM]
np
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;postscript&quot;&gt;Postscript&lt;/h1&gt;

&lt;p&gt;So I just tried to follow this exactly on a new machine and it both worked and didn’t work.  It worked in the terminal window where I started but it failed in any new window.  I think the issue amounted to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On OSX Mojave after a chsh operation you need to log out and log back in.  My guess is that this one thing fixes everything but just in case, follow the next steps.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I needed (perhaps) a bootstrap shell script called ~/sourcezsh.sh which has in it only three lines:&lt;/p&gt;

    &lt;p&gt;#!/bin/bash
  # adjust as needed
  export ZSH=/Users/sjohnson/.oh-my-zsh
  source $ZSH/oh-my-zsh.sh&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the event that this fails for you then here are the links which helped me sort it out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/362372/how-to-change-the-login-shell-on-mac-os-x-from-bash-to-zsh&quot;&gt;Stack Overflow on bash to ZSH&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/laptop/issues/447&quot;&gt;Thoughtbot Issues on Zsh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/issues/6405&quot;&gt;Robby Russell Issues on Zsh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/30840651/what-does-autoload-do-in-zsh&quot;&gt;AutoLoad and Zsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: I’d have solved this more definitively but my machine is rebuilding a 100gig archive of hate speech for data processing and, well, I simply can’t log in and out right now.  Sigh.&lt;/p&gt;

&lt;p&gt;And I wouldn't have posted this except that it mostly worked and I needed it myself to move forward.  Still I hate like hell that it is ambiguous.  Sorry.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rick.cogley.info/post/use-homebrew-zsh-instead-of-the-osx-default/&quot;&gt;Rick Cogley&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 06 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/shell/2019/09/06/moving-to-zsh-on-osx-in-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/shell/2019/09/06/moving-to-zsh-on-osx-in-2019.html</guid>
        
        <category>shell</category>
        
        <category>zsh</category>
        
        <category>osx</category>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>What to Do When an Engineer Leaves Your Organization</title>
        <description>&lt;p&gt;No one likes it when an employee leaves the company, let alone an engineer, let alone a senior engineer.  However, the reality is that employees leave companies all the time and the role of the company in this situation is really, really simple: &lt;strong&gt;protect itself&lt;/strong&gt;.  Once an employee leaves, the only rational choice of the company is to assume that the interests of the company and the employee are no longer aligned and to treat the departed employee as a security risk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is mildly AWS specific but there should be enough goodness in here for any organization.&lt;/p&gt;

&lt;p&gt;This is particularly acute when the engineer in question is a senior engineer as senior engineers tend to have &quot;the keys to the kingdom&quot;.  At the role I just left, I was responsible for deployment of our application which means I had access to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passwords&lt;/li&gt;
  &lt;li&gt;SSH Keys&lt;/li&gt;
  &lt;li&gt;API Keys&lt;/li&gt;
  &lt;li&gt;Close to every system we had accounts on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the advice I gave my former company about how to handle this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start by eliminating access to all github or bitbucket repos.  This preserves source code integrity and ensures that post leaving commit isn't snuck into a repo with some nefarious means.  This should be done before the engineer leaves the building.&lt;/li&gt;
  &lt;li&gt;Eliminate VPN Access.  This should be done before the engineer leaves the building.&lt;/li&gt;
  &lt;li&gt;Eliminate Gmail / Google Docs access.&lt;/li&gt;
  &lt;li&gt;Eliminate Slack Access (but bear in mind that this is a loss of institutional memory; &lt;a href=&quot;https://fuzzyblog.io/blog/startup/2019/07/20/employee-transitions-don-t-kill-your-organizational-memory.html&quot;&gt;see here&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;If all your AWS boxes are fronted thru a VPN then you can lessen the priority on this one.  Eliminate SSH access to all public boxes.  If you don't have a VPN then lock down SSH access almost immediately.  This requires going into the /home/username/.ssh/authorized_keys file for EVERY account and eliminating all ssh keys.  Do not simply check only the user's ~/.ssh/ directory because if the departing employee had admin access, he might have attached his public ssh key onto another account.  You should note that this is sometimes done by people as a deliberate, good faith, backdoor in the event of problems.  I've done this myself on problematic boxes.&lt;/li&gt;
  &lt;li&gt;Rotate your AWS credentials.  This should be done almost immediately after the engineer leaves.  Once you rotate them, they need to be refreshed on all boxes in the ~/.aws/credentials file.&lt;/li&gt;
  &lt;li&gt;Eliminate access to third party development tools such as &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;Data Dog&lt;/a&gt;, &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt;, &lt;a href=&quot;https://www.timber.io&quot;&gt;Timber.io&lt;/a&gt; or &lt;a href=&quot;https://www.honeybadger.com/&quot;&gt;HoneyBadger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Eliminate FTP Access.&lt;/li&gt;
  &lt;li&gt;Update every application level secret that is configured on your machine(s).  This means email api keys, twitter api keys, facebook keys and, well, * – any api key that your application uses really needs to be updated.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In closing, I will admit that this is an absolute pain in the arse.  In the application I worked on, we very diligently worked hard to make sure that all application level secrets where never stored under version control, conformed to the &lt;a href=&quot;https://12factor.net/&quot;&gt;12 Factor&lt;/a&gt; mandate but there are still 81 plus application secrets that really should be updated – and that is the work of probably 1 to 2 days at least.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/management/2019/09/05/what-to-do-when-an-engineer-leaves-your-organization.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/management/2019/09/05/what-to-do-when-an-engineer-leaves-your-organization.html</guid>
        
        <category>management</category>
        
        <category>hr</category>
        
        <category>startup</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Rails on Windows Resources</title>
        <description>&lt;p&gt;I took the time recently to help a friend get up and running with doing development on Rails under windows.  They were using the WSL i.e. Linux under Windows and it all proceeded mostly pretty smoothly.&lt;/p&gt;

&lt;p&gt;Here were the key resources that they used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gorails.com/setup/windows/10&quot;&gt;Chris Oliver's Go Rails on Windows&lt;/a&gt;. Highly Recommended&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nickjanetakis.com/blog/using-wsl-and-mobaxterm-to-create-a-linux-dev-environment-on-windows&quot;&gt;Nick Janetakis on Using WSL on Windows as a Dev Environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hanselman.com/blog/RubyOnRailsOnWindowsIsNotJustPossibleItsFabulousUsingWSL2AndVSCode.aspx&quot;&gt;Hanselman on Rails on Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/52487644/install-mariadb-in-windows-subsystem-linux-wsl&quot;&gt;Stack Overflow on MySQL on Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.findshank.com/2018/09/15/Install-mysql-on-wsl/&quot;&gt;FindShank on MySQL on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/09/05/rails-on-windows.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/09/05/rails-on-windows.html</guid>
        
        <category>rails</category>
        
        <category>windows</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>A Stupid Mac Performance Optimization for 2019</title>
        <description>&lt;p&gt;It is 2019 people, 2019.  And this is the stupidest performance optimization thing that I've seen in years.  I take screenshots quite a bit and I've recently noticed that it was taking a considerable amount of time from the point when I pressed the OSX screenshot key (command + shift + 4 and then enter) to the screenshot becoming available on the Desktop – something like 20 to 30 seconds.&lt;/p&gt;

&lt;p&gt;What I did this morning was create a single folder on the desktop called &quot;old&quot; and then I moved almost everything into &quot;old&quot;.  Then I took a screenshot and it appeared in almost real time.&lt;/p&gt;

&lt;p&gt;Now before you say &quot;Oh it is just Scott – he has a ton of things on his desktop&quot; – there were only 654 files on my Desktop.  And, sure, 654 sounds like a lot but this is 2019 and computers are &lt;strong&gt;FAST&lt;/strong&gt; so &lt;em&gt;WHAT THE HELL APPLE?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now I've seen this type of filesystem slowdown before but usually it is at the N thousands of files per folder (remember &quot;Desktop&quot; is just a folder):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/466521/how-many-files-can-i-put-in-a-directory&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://be-n.com/spw/you-can-list-a-million-files-in-a-directory-but-not-with-ls.html&quot;&gt;8 Million Files Per Directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And yes I am running Mojave and this is the new &lt;a href=&quot;https://en.wikipedia.org/wiki/Apple_File_System&quot;&gt;Apple File System&lt;/a&gt; on a 2015 Mac Pro with 16 gigs of ram.  There is no excuse for this kind of slow down.  Sigh.&lt;/p&gt;

&lt;p&gt;Oh yes and the Downloads folder gets faster when you move everything into a folder so this seems to be a generalized Apple File System issue.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mac/2019/09/05/a-stupid-mac-performance-optimization-for-2019.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mac/2019/09/05/a-stupid-mac-performance-optimization-for-2019.html</guid>
        
        <category>mac</category>
        
        <category>osx</category>
        
        
        <category>mac</category>
        
      </item>
    
      <item>
        <title>17 Years of Blogging</title>
        <description>&lt;p&gt;So I was looking up information on using the wc or Word Count command in *nix on &lt;a href=&quot;https://askubuntu.com/questions/351326/how-do-i-list-word-count-in-multiple-files&quot;&gt;Stack Overflow&lt;/a&gt; and it made me wonder how many words I've written in 17 years of on and off blogging.  A quick command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wc -w _posts/*

wc: _posts/_site: read: Is a directory
  543089 total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is one of those numbers which seems staggering but I recently saw that &lt;a href=&quot;https://www.russellbeattie.com/blog/&quot;&gt;Russell Beattie&lt;/a&gt; claimed over a million words over 15 years.  So it seems possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If I look at the number of posts using wc -l _posts/20*.md, I get a number that seems way, way too high so I'm not going to talk about number of posts at all.&lt;/p&gt;

&lt;p&gt;A bit of math:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 543089 / 17;
+-------------+
| 543089 / 17 |
+-------------+
|  31946.4118 |
+-------------+    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So that means 32,000 words per year.  If we assume 250 words per page then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 31946.4118 / 250;
+------------------+
| 31946.4118 / 250 |
+------------------+
|     127.78564720 |
+------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or about &lt;a href=&quot;https://en.wikipedia.org/wiki/Novella&quot;&gt;one novella&lt;/a&gt; a year.&lt;/p&gt;

&lt;p&gt;Now I took a pretty serious hiatus from blogging for about 8 years (2006 to 2014) in my post Feedster seclusion so that makes the years actually 17 - 8 or 9 and this changes the math a bit:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 543089 / 9;
+------------+
| 543089 / 9 |
+------------+
| 60343.2222 |
+------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; select 60343.2222 / 250;
 +------------------+
 | 60343.2222 / 250 |
 +------------------+
 |     241.37288880 |
 +------------------+ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we assume that there are 250 writing days in a year (i.e the weekdays) then we can look at words per day:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 543089 / (9*250); 
+------------------+
| 543089 / (9*250) |
+------------------+
|         241.3729 |
+------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's interesting – just about a page per day.  I am trying hard to build a writing habit these days and tracking my metrics much, much more closely.  Onward!&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/blogging/2019/09/05/17-years-of-blogging.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/blogging/2019/09/05/17-years-of-blogging.html</guid>
        
        <category>blogging</category>
        
        <category>linux</category>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Interesting Data Science Utilities</title>
        <description>&lt;p&gt;Hacker News had an &lt;a href=&quot;https://news.ycombinator.com/item?id=20848581&quot;&gt;excellent article on tools for large scale CSV / TSV / etc utilities&lt;/a&gt;.  If you do this type of work a lot / look at sizable amounts of raw data, I'd be strongly surprised if you didn't find a new tool here.  The things I'm looking at are visidata and octosql and gron.&lt;/p&gt;

&lt;p&gt;Here are some of the interesting takeaways on the tool front:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jmespath.org/&quot;&gt;http://jmespath.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/xsv&quot;&gt;https://github.com/BurntSushi/xsv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dinedal/textql&quot;&gt;https://github.com/dinedal/textql&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/n3mo/data-science&quot;&gt;https://github.com/n3mo/data-science&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.redox-os.org/redox-os/parallel&quot;&gt;https://gitlab.redox-os.org/redox-os/parallel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/willghatch/racket-rash&quot;&gt;https://github.com/willghatch/racket-rash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://visidata.org/&quot;&gt;https://visidata.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tomnomnom/gron&quot;&gt;https://github.com/tomnomnom/gron&lt;/a&gt; - JSON grep&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dflemstr/rq&quot;&gt;https://github.com/dflemstr/rq&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/datamash/]&quot;&gt;https://www.gnu.org/software/datamash/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johnkerl/miller&quot;&gt;https://github.com/johnkerl/miller&lt;/a&gt; (written in D)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mechatroner/RBQL&quot;&gt;https://github.com/mechatroner/RBQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/shellbound/jwalk/&quot;&gt;https://github.com/shellbound/jwalk/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.rdocumentation.org/packages/plyr/&quot;&gt;https://www.rdocumentation.org/packages/plyr/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/google/crush-tools&quot;&gt;https://github.com/google/crush-tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/python-mario/mario&quot;&gt;https://github.com/python-mario/mario&lt;/a&gt; (python for manipulation)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cube2222/octosql&quot;&gt;https://github.com/cube2222/octosql/&lt;/a&gt; (sql for manipulation)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dkogan/vnlog&quot;&gt;https://github.com/dkogan/vnlog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://csvkit.readthedocs.io/&quot;&gt;https://csvkit.readthedocs.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eBay/tsv-utils-dlang]&quot;&gt;https://github.com/eBay/tsv-utils-dlang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.redox-os.org/redox-os/parallel&quot;&gt;http://harelba.github.io/q/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BatchLabs/charlatan&quot;&gt;https://github.com/BatchLabs/charlatan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dinedal/textql&quot;&gt;https://github.com/dinedal/textql&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BurntSushi/xsv&quot;&gt;https://github.com/BurntSushi/xsv&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dbohdan/sqawk&quot;&gt;https://github.com/dbohdan/sqawk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/benbernard/RecordStream&quot;&gt;https://github.com/benbernard/RecordStream&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/noyesno/awka]&quot;&gt;https://github.com/noyesno/awka&lt;/a&gt; (awk)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 03 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/data_science/2019/09/03/interesting-data-science-utilities.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/data_science/2019/09/03/interesting-data-science-utilities.html</guid>
        
        <category>data_science</category>
        
        <category>machine_learning</category>
        
        
        <category>data_science</category>
        
      </item>
    
      <item>
        <title>Great Chrome Extensions - Tab Switcher and The Great Suspender</title>
        <description>&lt;p&gt;A buddy just turned me onto &lt;a href=&quot;https://chrome.google.com/webstore/detail/tab-switcher/gcilookdakgpccpbcjgnpaecofklimck?hl=en&quot;&gt;Tab Switcher&lt;/a&gt;, a tool that gives the ability to SEARCH THE TITLES OF YOUR TABS !!!!  How the hell doesn't this exist in Chrome already?&lt;/p&gt;

&lt;p&gt;Just install it and then press:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OSX: Control + Shift + K&lt;/li&gt;
  &lt;li&gt;Windows: Control + Shift + K&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you will get a window like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/tab_switcher.png&quot; alt=&quot;Tab Switcher&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And beyond Tab Switcher, &lt;a href=&quot;https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg&quot;&gt;The Great Suspender&lt;/a&gt; is absolutely fantastic.  The Great Suspender turns off open tabs that are taking up too much memory – it is like putting Chrome on a damn diet and it is wonderful.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/chrome/2019/09/03/great-chrome-extensions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/chrome/2019/09/03/great-chrome-extensions.html</guid>
        
        <category>chrome</category>
        
        <category>chrome_extension</category>
        
        
        <category>chrome</category>
        
      </item>
    
      <item>
        <title>Generating a Good Password from the Command Line</title>
        <description>&lt;p&gt;Note: There is a more secure technique here that is more poorly written up.&lt;/p&gt;

&lt;p&gt;I saw my pairing partner do this about six months ago and the elegance of it just struck me.  Here's the command line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date +%s | sha256sum | base64 | head -c 8 ; echo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let's break that down:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date +%s
1567406528
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The date + %s returns what I suspect is a unix epoch i.e. the number of seconds since a date in the 1970s.&lt;/p&gt;

&lt;p&gt;The sha256sum takes that epoch and then returns something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4d00bbff5a359a8619f48ade07860704b63a0287d80097dd041c6e538fa3ddb3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The base64 then takes that output and returns:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ODBmNGIwOGZiNzc2NjU5NThlMTk2ZjY3MGFmOWYxNjQ3NWViZWNkNjBjNDg5ODUyZDgwMDMzZmM2NTkzNjE5ZCAgLQo=
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The head -c 8 then takes 8 characters out of this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;YzMyMGQ4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The reason that the final output YzMyMGQ4 doesn't appear in the base64 example is that I keep re-running this command pipeline and date %s keeps changing since it is tied to microseconds.  And, yes, it took me a few moments to realize that.  &lt;em&gt;chuckle&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thank you Sean Kennedy for giving me another tool in the toolbox.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/09/02/generating-a-good-password-from-the-command-line.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/09/02/generating-a-good-password-from-the-command-line.html</guid>
        
        <category>linux</category>
        
        <category>password</category>
        
        <category>security</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Testing A Health Check Endpoint with Curl</title>
        <description>&lt;p&gt;Given the move to auto scaling architectures front ended by load balancers, it is increasingly important to build into your application what is called a &quot;health check&quot;.  This is nothing more than a known url that some external service can monitor to ensure that your application is &quot;up&quot;.  A health check does nothing more than return an HTTP 200 (and sometimes it returns a JSON representation).  Here's a simple Rails controller that I use for health checks:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class HealthController &amp;lt; ApplicationController
  def index
    results = {:status =&amp;gt; &quot;ok&quot;}
    respond_to do |format|
      format.html { render :status =&amp;gt; 200, :html =&amp;gt; &quot;ok&quot; and return }
      format.json { render :status =&amp;gt; 200, :json =&amp;gt; results.to_json and return }
    end
  end
  
  # additional site monitoring functionality normally goes here
  
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's how to test this with curl and get the headers you'd want to see:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -s -I https://foo.bar.something.com/health_check        
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The options have the following meaning:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-I, –head          Show document info only&lt;/li&gt;
  &lt;li&gt;-s, –silent        Silent mode (don't output anything)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The -s is silencing the normal curl output of what it fetched from the url.&lt;/p&gt;

&lt;p&gt;What you should see is something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/2 200
date: Thu, 29 Aug 2019 19:08:18 GMT
content-type: text/html
server: nginx/1.10.3 (Ubuntu)
x-frame-options: SAMEORIGIN
x-xss-protection: 1; mode=block
x-content-type-options: nosniff
set-cookie: _mkra_ctxt=3b46df998ac73a6cb44bbb8dc2a09918--200; path=/; max-age=5; HttpOnly; secure
cache-control: no-cache
x-request-id: 7158be3a-7990-4549-b780-fca5757069d3
x-runtime: 0.208121
strict-transport-security: max-age=15552000; includeSubDomains
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Here are some great curl references:
* &lt;a href=&quot;https://jvns.ca/blog/2019/08/27/curl-exercises/&quot;&gt;JVNS.CA - I can't recommend her work strongly enough&lt;/a&gt;
* &lt;a href=&quot;https://unix.stackexchange.com/questions/84814/health-check-of-web-page-using-curl&quot;&gt;Stack Exchange&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/curl/2019/09/01/testing-a-health-check-endpoint-with-curl.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/curl/2019/09/01/testing-a-health-check-endpoint-with-curl.html</guid>
        
        <category>curl</category>
        
        <category>serverless</category>
        
        
        <category>curl</category>
        
      </item>
    
      <item>
        <title>Software Engineering Management - Rules for Successful Employee Transitions</title>
        <description>&lt;p&gt;No matter how much you don't want them to, the simple fact is that employees leave your organization.  Here are some rules that I have found tend to make employee transitions more successful:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Don't try and get them to stay&lt;/li&gt;
  &lt;li&gt;Get them to be a consultant&lt;/li&gt;
  &lt;li&gt;Get them to write stuff down&lt;/li&gt;
  &lt;li&gt;Get them to make screencasts of their development / debugging process&lt;/li&gt;
  &lt;li&gt;Have them pair program with someone they don't normally do&lt;/li&gt;
  &lt;li&gt;Get their contact info&lt;/li&gt;
  &lt;li&gt;Stay in touch&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;dont-try-and-save-them&quot;&gt;Don't Try and Save Them&lt;/h1&gt;

&lt;p&gt;As a manager, when someone tells you they are about to leave, if they have been a good employee then your natural reaction is to try and save it, to convince them to stay.  Don't, Just &lt;strong&gt;don't&lt;/strong&gt;.  What 30 plus years of hiring technical people has shown me is that the decision to leave an organization is &lt;strong&gt;terribly hard&lt;/strong&gt; for technical professionals.  A big part of the reason for this is that if the technical person is any good, they tend to bond to their code base – even if it is a bad code base.  We don't make this decision lightly and once it is made, well, it tends to be done.  Of all the people I've tried to save, I think I succeeded once – and they left within the next six months anyway.&lt;/p&gt;

&lt;p&gt;Here is a good &lt;a href=&quot;https://hbr.org/2019/01/if-youre-about-to-take-a-new-job-should-you-consider-your-bosss-counteroffer&quot;&gt;Harvard Business Review article on Considering Your Boss's Counteroffer&lt;/a&gt; that talks about whether or not to try and convince people to stay.  Thanks to reader &lt;a href=&quot;https://www.starbaseindy.org/&quot;&gt;Lisa Meece of Starbase Indy&lt;/a&gt; fame for the contribution.&lt;/p&gt;

&lt;h1 id=&quot;consulting&quot;&gt;Consulting&lt;/h1&gt;

&lt;p&gt;Whenever I have a decent technical person leave my team, I always try to negotiate a consulting arrangement with them, right down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are you willing to consult for us?&lt;/li&gt;
  &lt;li&gt;How much time do you have for consulting?&lt;/li&gt;
  &lt;li&gt;What hourly rate will you charge me?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Employee transitions are a natural consequence of a free market economy and there should never be &lt;strong&gt;bad feelings&lt;/strong&gt; – these things simply happen.  If the person who is leaving is truly talented then why wouldn't you want them to consult for you?  This person is already:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trained&lt;/li&gt;
  &lt;li&gt;Trusted&lt;/li&gt;
  &lt;li&gt;Knowledgeable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The peculiar nature of software engineering is that certain individuals end up being domain experts and it can be hard to get a new person up to speed in their areas of expertise.  Having a consulting arrangement defined before someone leaves is a great way around this.&lt;/p&gt;

&lt;h1 id=&quot;write-stuff-down&quot;&gt;Write Stuff Down&lt;/h1&gt;

&lt;p&gt;We all know that engineers are generally horrible at adding comments / writing documentation.  Despite that, you want to allocate time for any departing engineer to write documentation / comment code.  My personal suggestion would be to run that engineer's code thru a complexity analyzer like Flay (this is a Ruby tool; look for anything that measures cyclomatic complexity for your particular language) and have them document the most complex bits.&lt;/p&gt;

&lt;h1 id=&quot;screencasts&quot;&gt;Screencasts&lt;/h1&gt;

&lt;p&gt;Writing documentation is a lengthy, time consuming process and most people leave on a two week notice period.  An alternative to documentation is to get them to record screen casts.  This can be done by simply starting a screen recorder software tool while they narrate whatever they are doing.  I personally have done this for a multiple day period and while the screencasts weren't great quality, they were adequate for internal use.&lt;/p&gt;

&lt;p&gt;Screencasts of their debugging / development processes, in particular, are very useful.&lt;/p&gt;

&lt;h1 id=&quot;pairing&quot;&gt;Pairing&lt;/h1&gt;

&lt;p&gt;As anyone who reads my stuff knows, I am a huge believer in pair programming.  A very useful training tool for people who are departing is to require them to pair program with someone who isn't their normal pairing partner.  This generally forces learning to occur.&lt;/p&gt;

&lt;h1 id=&quot;contact-info&quot;&gt;Contact Info&lt;/h1&gt;

&lt;p&gt;Even tho you might think that you have someone's current contact info, you always want to verify this.&lt;/p&gt;

&lt;h1 id=&quot;stay-in-touch&quot;&gt;Stay in Touch&lt;/h1&gt;

&lt;p&gt;People in high tech often have long careers.  I've had people that worked for me at one job, left, worked two or three places and then happened to work for me again – when I was actually at a new job.  Staying in touch with talented individuals is a very, very positive thing and highly recommended.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/09/01/software-engineering-management-rules-for-successful-employee-transitions.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/09/01/software-engineering-management-rules-for-successful-employee-transitions.html</guid>
        
        <category>software_engineering</category>
        
        <category>startup</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Remote Work 02 - Use Video Conferencing</title>
        <description>&lt;p&gt;This is the second in an N part series of short, succinct articles about Remote Work that I'll be writing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/category.html#remote-work&quot;&gt;All Remote Articles&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;faces-matter-so-use-video-conferencing&quot;&gt;Faces Matter So Use Video Conferencing&lt;/h2&gt;

&lt;p&gt;I know that the idea that your co-worker is a fellow human is &lt;strong&gt;obvious&lt;/strong&gt; but I actually think that it is fairly important.  When you are a remote worker, so much of what you do is relating to people through labels, an email address, an instant message handle or a username.  These text based labels are inherently dehumanizing and that makes it much, much easier to engage in bad types of online behavior – trolling, flaming, etc.&lt;/p&gt;

&lt;p&gt;The simplest way to humanize an online interaction is to simply see a real, live face – not a stylized avatar but an actual face and that's why I strongly recommend video conferencing as a key communications tool for remote work. Not only will video conferencing increase the overall &quot;humanity&quot; of your worker to work interaction but it will also clue you in to people's overall mood – because faces tend to inherently show emotions.  And if you are a manager of remote workers, knowing if they are happy on an overall basis (anyone can have a bad day) is a key management tool because, generally, happy workers are better workers.&lt;/p&gt;

&lt;h2 id=&quot;my-remote-work-background&quot;&gt;My Remote Work Background&lt;/h2&gt;

&lt;p&gt;In 1996 I started my first experience with remote work when I ran an engineering team with these characteristics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;25 people&lt;/li&gt;
  &lt;li&gt;5 locations (Massachusetts, Albany, Ohio, Colorado and Leiscester, UK)&lt;/li&gt;
  &lt;li&gt;3 time zones&lt;/li&gt;
  &lt;li&gt;A lead engineer who was remote&lt;/li&gt;
  &lt;li&gt;2 core engineering team members who came into the office so infrequently that they were officially characterized as Remote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And ever since then, I have either been remote myself or managed remote workers or both.  When I was lead developer of AppData, we took that to over $3.1 million in aggregate revenue with a fully remote development team.&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-02-use-video-conferencing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-02-use-video-conferencing.html</guid>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Remote Work 01 - Write It Down</title>
        <description>&lt;p&gt;This is the first in an N part series of short, succinct articles about Remote Work that I'll be writing.  I'm taking a new remote gig and I'm finding that codifying my thoughts on remote work is useful both for me and for people that I will likely end up managing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/category.html#remote-work&quot;&gt;All Remote Articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What I have found is that successful remote work cultures are ones of &lt;strong&gt;documentation&lt;/strong&gt; or as I would say &quot;Write It Down&quot;.  In a classical work environment, you can always pop your head over the cubicle and ask the person next door.  In a remote work environment, not only is that not an option but you are often working asynchronously from your co-workers so they may not even be awake when you need something.&lt;/p&gt;

&lt;p&gt;I don't personally care whether the writing mechanism is a blog, a wiki, a shared Google doc, or a paid Slack environment where messages are never deleted – it simply needs to be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Always Available&lt;/li&gt;
  &lt;li&gt;Persistent&lt;/li&gt;
  &lt;li&gt;Searchable&lt;/li&gt;
  &lt;li&gt;Linkable&lt;/li&gt;
  &lt;li&gt;Easy to Write In&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll write more about specific writing tools and how they function in a remote work environment over the next N articles.&lt;/p&gt;

&lt;p&gt;If you don't build a culture of documentation for your remote work environment, what you are going to find are subtle impedances to successful work.  People will constantly be scrambling for key information and there will be resulting task slippage.&lt;/p&gt;

&lt;h2 id=&quot;my-remote-work-background&quot;&gt;My Remote Work Background&lt;/h2&gt;

&lt;p&gt;In 1996 I started my first experience with remote work when I ran an engineering team with these characteristics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;25 people&lt;/li&gt;
  &lt;li&gt;5 locations (Massachusetts, Albany, Ohio, Colorado and Leiscester, UK)&lt;/li&gt;
  &lt;li&gt;3 time zones&lt;/li&gt;
  &lt;li&gt;A lead engineer who was remote&lt;/li&gt;
  &lt;li&gt;2 core engineering team members who came into the office so infrequently that they were officially characterized as Remote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And ever since then, I have either been remote myself or managed remote workers or both.  When I was lead developer of AppData, we took that to over $3.1 million in aggregate revenue with a fully remote development team.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-01-write-it-down.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/09/01/remote-work-01-write-it-down.html</guid>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Color Coding Your Gmail with Labels</title>
        <description>&lt;p&gt;Back in 2001 or 2002, I took a stab at making client side software once again with an Outlook Add In called Inbox Buddy. Developed by myself and my co-founder, Inbox Buddy acted to dynamically organize your Outlook Inbox.  The single best feature in Inbox Buddy was that it color coded your email based on observing your messaging patterns as well as a content analysis and a small training step.  It is now almost 20 years later and I am still missing Inbox Buddy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Inbox Buddy failed not because it was a bad product but because Outlook's plugin architecture at the time, well, sucked monkey chunks.  Also I made the foolish decision to target Outlook 2000 instead of subsequent releases which had a better approach to plugins. And then I started a &lt;a href=&quot;https://fuzzyblog.io/blog/category.html#feedster&quot;&gt;blog search engine&lt;/a&gt; and got really, really busy … Ah, well, live and learn.  Sigh.&lt;/p&gt;

&lt;p&gt;Color coding is an incredibly powerful tool for organizing information and one so damn simple that everyone misses it.  Recently I thought to google for &quot;Color Code&quot; Gmail and, surprise, surprise, this can be done &lt;a href=&quot;https://www.zdnet.com/article/gmail-quick-tip-use-color-coded-labels-to-add-organization-to-your-inbox/&quot;&gt;albeit manually&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found the Zdnet technique either confusing or not entirely accurate with the current version of Gmail so I wrote up my own description.&lt;/p&gt;

&lt;p&gt;The way that this works is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You create a label that represents the context of the mail you want to color (I have two, personal and ADL for my new gig at the ADL).&lt;/li&gt;
  &lt;li&gt;You set the color of the label.&lt;/li&gt;
  &lt;li&gt;You create a filter or filters that apply that label.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;step-1-create-a-label&quot;&gt;Step 1: Create a Label&lt;/h1&gt;

&lt;p&gt;Open Gmail and in the sidebar of labels, example the More link at the bottom of the sidebar.  Scroll all the way down and select the Create New Label option.&lt;/p&gt;

&lt;h1 id=&quot;step-2-color-the-label&quot;&gt;Step 2: Color the Label&lt;/h1&gt;

&lt;p&gt;Scroll to the label you just created and select the 3 vertical dots option to get a context menu about the label.  Select the Label Color option and then choose a color for the label.&lt;/p&gt;

&lt;h1 id=&quot;step-3-create-a-filter&quot;&gt;Step 3: Create a Filter&lt;/h1&gt;

&lt;p&gt;At the right hand top of Gmail there is a gear icon.  Select the Settings option from the menu.  From the Gmail Settings window, select Filters and Blocked Addresses option.  Scroll to the bottom and click Create a new filter.  Enter an email address or domain name in the From field (or write the filter however you like) and select Create filter.  On the second screen, select Apply the label and choose the label you just created.  You might also want to select the Never send it to spam option.  Finally you should generally always select the Apply to existing conversations option so the label is applied to all messages in your inbox.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/gmail/2019/09/01/color-coding-your-gmail-with-labels.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/gmail/2019/09/01/color-coding-your-gmail-with-labels.html</guid>
        
        <category>gmail</category>
        
        <category>email</category>
        
        <category>inbox_buddy</category>
        
        
        <category>gmail</category>
        
      </item>
    
      <item>
        <title>A Python and Data Science Tooling Vocabulary for a Rubyist</title>
        <description>&lt;p&gt;A Python and Data Science Tooling Vocabulary for a Rubyist&lt;/p&gt;

&lt;p&gt;I am unabashedly a Ruby guy.  I've now spent 13 years immersed in Ruby on a daily basis.  But a new consulting gig has me delving into Python both as a light implementer and as a likely remote manager of some Python folk in a Data Science / Machine Learning context.&lt;/p&gt;

&lt;p&gt;I wrote this as a regularly updated document so I have a place to stick new vocabulary items I learn.&lt;/p&gt;

&lt;p&gt;A lot of this is the names of libraries and tools because learning any language isn't just the language, it is the constellation of stuff that make it useful for a given task.  The focus here is clearly on scientific computing and machine learning.&lt;/p&gt;

&lt;p&gt;You should also likely see &lt;a href=&quot;https://www.pythonforbeginners.com/cheatsheet/python-glossary&quot;&gt;Python Glossary&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;a&quot;&gt;A&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Anaconda&lt;/strong&gt; - A packaged distribution of Python and R aimed at Data Science.  &lt;a href=&quot;https://www.anaconda.com/distribution/
#download-section&quot;&gt;More…&lt;/a&gt;.  Includes multiple bits of tooling such as Jupyter.
&lt;strong&gt;* Anaconda Cloud&lt;/strong&gt; - A platform for sharing notebooks and packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;b&quot;&gt;B&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Bert - Bert or Bidirectional Encoder Representation from Transformers is a state of the art (2018) language model for natural language processing (NLP).  Bert is based on a Google paper which shows that a language model which is bidirectionally trained can have a deeper sense of language context and flow than single-direction language models. &lt;a href=&quot;https://towardsdatascience.com/bert-explained-state-of-the-art-language-model-for-nlp-f8b21a9b6270&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bokeh&lt;/strong&gt; - Bokeh is an interactive visualization library that targets modern web browsers for presentation.  &lt;a href=&quot;https://bokeh.pydata.org/en/latest/index.html&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;c&quot;&gt;C&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Conda&lt;/strong&gt; - an open source package manager for &quot;any language&quot; but originally for Python.  &lt;a href=&quot;https://conda.io/en/latest/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;d&quot;&gt;D&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dask&lt;/strong&gt; - Dask is a flexible library for parallel computing in Python. Dask is composed of two parts: … “Big Data” collections like parallel arrays, dataframes, and lists that extend common interfaces like NumPy, Pandas, or Python iterators to larger-than-memory or distributed environments.  &lt;a href=&quot;https://dask.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DataShader&lt;/strong&gt; - Datashader is a graphics pipeline system for creating meaningful representations of large datasets quickly and flexibly. Datashader breaks the creation of images into a series of explicit steps that allow computations to be done on intermediate representations.  &lt;a href=&quot;http://datashader.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;e&quot;&gt;E&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Egg&lt;/strong&gt; - a Python component.  Think Ruby gem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;f&quot;&gt;F&lt;/h1&gt;

&lt;h1 id=&quot;g&quot;&gt;G&lt;/h1&gt;

&lt;h1 id=&quot;h&quot;&gt;H&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;**H20.ai **- H2O.ai is the creator of the leading open source machine learning and artificial intelligence platform trusted by hundreds of thousands of data scientists.  &lt;a href=&quot;https://www.h2o.ai/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Holoviews&lt;/strong&gt; - HoloViews is an open-source Python library designed to make data analysis and visualization seamless and simple.  &lt;a href=&quot;http://holoviews.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;i&quot;&gt;I&lt;/h1&gt;

&lt;h1 id=&quot;j&quot;&gt;J&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Jupyter Notebook&lt;/strong&gt; - The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more.  python3 -m pip install jupyter and then run it with: jupyter notebook&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;k&quot;&gt;K&lt;/h1&gt;

&lt;h1 id=&quot;l&quot;&gt;L&lt;/h1&gt;

&lt;h1 id=&quot;m&quot;&gt;M&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;MatPlotLib&lt;/strong&gt; - Matplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms. &lt;a href=&quot;https://matplotlib.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;n&quot;&gt;N&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Numba&lt;/strong&gt; - Numba is an open-source JIT compiler that translates a subset of Python and NumPy into fast machine code using LLVM.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Numba&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;NumPy - A standard numerical library for Python.  NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays.  &lt;a href=&quot;https://en.wikipedia.org/wiki/NumPy&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;o&quot;&gt;O&lt;/h1&gt;

&lt;h1 id=&quot;p&quot;&gt;P&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Pandas&lt;/strong&gt; - pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series.  &lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pip&lt;/strong&gt; - A Python package installer.  Example for python 3: python3 -m pip install –upgrade pip&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PyCharm&lt;/strong&gt; - an ide for Python from the JetBrains folk.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pythonic&lt;/strong&gt; - something that is done in a very Python like way.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PyTorch&lt;/strong&gt; - PyTorch is an open source machine learning library based on the Torch library, used for applications such as computer vision and natural language processing. It is primarily developed by Facebook's artificial intelligence research group. It is free and open-source software released under the Modified BSD license. &lt;a href=&quot;https://en.wikipedia.org/wiki/PyTorch&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;q&quot;&gt;Q&lt;/h1&gt;

&lt;h1 id=&quot;r&quot;&gt;R&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Repl&lt;/strong&gt; - This is short for Read Evaluate Print Loop and it is the result of what you get when you type python at your command prompt.  A repl gives you a place to type Python code you want executed. Type quit() to exit the Python repl – the () are required as quit is a method not a statement.  Think irb or &quot;rails c&quot;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Roberta&lt;/strong&gt; - A robustly optimized method for pretraining natural language processing (NLP) systems that improves on Bidirectional Encoder Representations from Transformers, or BERT, the self-supervised method released by Google in 2018. &lt;a href=&quot;https://ai.facebook.com/blog/roberta-an-optimized-method-for-pretraining-self-supervised-nlp-systems/&quot;&gt;More…&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;s&quot;&gt;S&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Scikit-learn&lt;/strong&gt; (formerly scikits.learn) is a free software machine learning library for the Python programming language.   It features various classification, regression and clustering algorithms including support vector machines, random forests, gradient boosting, k-means and DBSCAN, and is designed to interoperate with the Python numerical and scientific libraries NumPy and SciPy.&lt;a href=&quot;https://scikit-learn.org/stable/&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SciPy&lt;/strong&gt; - SciPy is a free and open-source Python library used for scientific computing and technical computing. &lt;a href=&quot;https://en.wikipedia.org/wiki/SciPy&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;t&quot;&gt;T&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt; - TensorFlow is a free and open-source software library for dataflow and differentiable programming across a range of tasks. It is a symbolic math library, and is also used for machine learning applications such as neural networks.[5] It is used for both research and production at Google.  &lt;a href=&quot;https://en.wikipedia.org/wiki/TensorFlow&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Torch&lt;/strong&gt; - Torch is an open-source machine learning library, a scientific computing framework, and a script language based on the Lua programming language.[3] It provides a wide range of algorithms for deep learning, and uses the scripting language LuaJIT, and an underlying C implementation. As of 2018, Torch is no longer in active development.[4] However, PyTorch is actively developed as of August 2019. &lt;a href=&quot;https://en.wikipedia.org/wiki/Torch_(machine_learning)&quot;&gt;More…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;u&quot;&gt;U&lt;/h1&gt;

&lt;h1 id=&quot;v&quot;&gt;V&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;VirtualEnv&lt;/strong&gt; - a virtual environment manager allowing you to have more than one Python on a machine.  Think RbEnv or RVM.  &lt;a href=&quot;https://www.geeksforgeeks.org/python-virtual-environment/&quot;&gt;More…&lt;/a&gt; pip install virtualenv&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;w&quot;&gt;W&lt;/h1&gt;

&lt;h1 id=&quot;x&quot;&gt;X&lt;/h1&gt;

&lt;h1 id=&quot;y&quot;&gt;Y&lt;/h1&gt;

&lt;h1 id=&quot;z&quot;&gt;Z&lt;/h1&gt;
</description>
        <pubDate>Sun, 01 Sep 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/python/2019/09/01/a-python-and-data-science-tooling-vocabulary-for-a-rubyist.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/python/2019/09/01/a-python-and-data-science-tooling-vocabulary-for-a-rubyist.html</guid>
        
        <category>python</category>
        
        <category>data_science</category>
        
        <category>machine_learning</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Fixing Ruby readline.bundle Image Not Found</title>
        <description>&lt;p&gt;I've seen a lot of ruby weirdness over the years but this one was new to me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) Metric#color reps should be green when the goal is increase_is_better = true and the change is +
   Failure/Error: byebug

   LoadError:
     dlopen(/Users/sjohnson/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/x86_64-darwin16/readline.bundle, 9): Library not loaded: /usr/local/opt/readline/lib/libreadline.7.dylib
       Referenced from: /Users/sjohnson/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/x86_64-darwin16/readline.bundle
       Reason: image not found - /Users/sjohnson/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/x86_64-darwin16/readline.bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The solution turned out to be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s /usr/local/opt/readline/lib/libreadline.8.0.dylib /usr/local/opt/readline/lib/libreadline.7.dylib
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Thank you to &lt;a href=&quot;https://gist.github.com/zulhfreelancer/47efc39584cb9f006da43c41c014e03a&quot;&gt;Zuhlfreelancer&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/08/30/fixing-ruby-readline-bundle-image-not-found.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/08/30/fixing-ruby-readline-bundle-image-not-found.html</guid>
        
        <category>ruby</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Getting Your First Tech Job</title>
        <description>&lt;p&gt;This blog post is what I call micro-focused.  A friend of a friend emailed me about his concerns about breaking into the tech field and rather than solve his issues on a 1:1 basis, I'm writing it here because I suspect this is useful to more people than just him (or her).&lt;/p&gt;

&lt;p&gt;Let's start with his email:&lt;/p&gt;

&lt;p&gt;Hope everything is going well. Have gotten real discouraged on the app project I had told you about. The initial meeting has been postponed twice, nothing on the books now either. The person I have been talking to about it just gives me the impression those in charge are real disorganized and this isn't exactly a high priority in their busy lives. So I am thinking just letting them come to me if they want but otherwise taking a passive approach. With that being said, I am taking 9 credit hours, all 400 level CS classes, this semester. The dream is to find some part time work in the IT field, but am trying to be cautious in how much I take on, have definitely over burdened myself in the past and it was horrible. So that's where I am at now. I was hoping you could give my some guidance on the whole process. I have been lucky and able to find work generically and by word of mouth, but am absolutely horrible with the normalized resume and application process. Not sure even where to start asking questions but I image you could provide some great guidance. As always I know you are a busy guy, but appreciate any time and help ya can give. Eager to hear back from ya!&lt;/p&gt;

&lt;p&gt;So let's begin with an understanding of the goal in high tech hiring:&lt;/p&gt;

&lt;p&gt;The goal is to keep bad people out.  This is a dramatic change from tech hiring in years past; it really has shifted to keeping people out not getting them in.  And the corollary to this is that good people fall by the wayside – in droves.&lt;/p&gt;

&lt;p&gt;That's the goal of high tech hiring circa 2019.  I don't care what any HR department tells you, the goal is simply risk avoidance.  No one wants to take a chance on a bad decision because bad people in an engineering context leave a terrifying legacy (sometime ask me in person about def run and I'll tell you a terrifying tale about someone I hired once for 1/2 day and how that broke deploy on our code base for 3 damn days; sigh).&lt;/p&gt;

&lt;p&gt;What you have to keep in mind is that if no one wants to take a chance then you really need to stand out, particularly to get past the f*cking wall that is automated resume scanners, keyword matchers, etc.  Getting a tech job these days is hard for anyone – hell the second to last time I was in the market for a job, I had to write &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Job Hound&lt;/a&gt; just to manage the damn process; sigh.&lt;/p&gt;

&lt;p&gt;Now, all that said, there are definitely things that you can do to stand out and here's what I would recommend to this individual:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Know what you want&lt;/strong&gt;.  There is no such thing as a &quot;IT Job&quot;; you might be a developer, you might be a tester, you might be QA, but figure out what you actually want to do because passion, trite as it sounds, is really, really important.  If what you want to do is Python based Data Science then write your resume for that – trust me there is a market for almost anything.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make Sure Your Resume Works&lt;/strong&gt;.  For my new gig, I trusted enough to let a friend take a swing at radically changing my resume and, what do you know, employment (ok consulting but still).  And &lt;a href=&quot;https://www.lisameece.com/&quot;&gt;my friend&lt;/a&gt; is now offering this as a service.  And to put my money where my mouth is, here's &lt;a href=&quot;https://fuzzyblog.io/blog/assets/jsjohnson_resume_2019.pdf&quot;&gt;my resume that they fixed&lt;/a&gt;; the end result was far more readable and far more scannable – and I got the job!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Network / Meetups&lt;/strong&gt;.  Getting hired via a resume over the transom is a suck ass process.  You will find things work much better if you network and while that sounds intimidating, there is an easy way – Meetup.  There are meetups in virtually every technology and if you go there you can find the people in your area who really care about what you do.  Let's say you are in the Indianapolis area and you care about Python and Data Science.  Well here is the search for &lt;a href=&quot;https://www.meetup.com/find/events/?allMeetups=false&amp;amp;keywords=python&amp;amp;radius=10&amp;amp;userFreeform=Indianapolis%2C+IN&amp;amp;mcId=z46226&amp;amp;mcName=Indianapolis%2C+IN&amp;amp;eventFilter=mysugg&quot;&gt;Python&lt;/a&gt; and here is the search for &lt;a href=&quot;https://www.meetup.com/find/events/?allMeetups=false&amp;amp;keywords=data+science&amp;amp;radius=10&amp;amp;userFreeform=Indianapolis%2C+IN&amp;amp;mcId=z46226&amp;amp;mcName=Indianapolis%2C+IN&amp;amp;eventFilter=mysugg&quot;&gt;Data Science&lt;/a&gt;.  And if you're intimidated going by yourself the first time, well, bring a friend.  Also if you think that &quot;I won't be accepted&quot;, well, keep in mind that Meetups do tend to be pretty inclusive and are often micro focused – there is even a &quot;La Femme Pythonista&quot; meetup here in Indianapolis.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Practice Coding Tests&lt;/strong&gt;.  It is pretty common nowadays for new people in particular to have to take coding tests.   This is a skill that you can practice like anything else.  Personally I'd start with &lt;a href=&quot;https://triplebyte.com/&quot;&gt;TripleByte&lt;/a&gt; but there are lots of them.  As a side note, I HATE coding tests and find them to be a crap ass metric that only tells an HR department that this person can pass (or cheat) a test but no one ever asks me …&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Read / Learn&lt;/strong&gt;.  If you are entering the tech world then a continuous focus on learning is highly recommended.  I follow tech news in two ways, I read &lt;a href=&quot;https://news.ycombinator.com&quot;&gt;Hacker News&lt;/a&gt; religiously for the big picture and then I follow &lt;a href=&quot;https://rubyweekly.com/&quot;&gt;Ruby Weekly&lt;/a&gt; for stuff about my environment of choice.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Side Project&lt;/strong&gt;.  As a noob, it is easy to hear &quot;start a side project&quot; but that is intimidating as hell.  A simpler approach is to approach someone with a side project and say &quot;Hey - can I help?&quot;.  As an example, JobHound is dying for some love and it is definitely a way to learn.  But there are literally tens of thousands of side projects that need some help.  And once you start helping on a side project that goes on your damn resume.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Github Profile&lt;/strong&gt;.  If you don't have a Github profile in 2019, run, don't walk and get one.  And then do something with it – write docs for some open source project, find a tool you can contribute to, etc.  One of the best guys I ever hired, I did so not for the code he wrote on Github but for the docs he contributed to Ruby.  No one writes docs and someone that does is a damn precious resource.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Answer Stack Overflow Questions&lt;/strong&gt;.  &lt;a href=&quot;https://www.stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt; is an absolutely precious resource and one that always needs help.  Find the question stream on your technology of choice and start answering.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Read Josh Doody&lt;/strong&gt;.  Josh Doody is the author of &lt;a href=&quot;https://fearlesssalarynegotiation.com/&quot;&gt;Fearless Salary Negotiation&lt;/a&gt; and Fearless is the single best book I've ever read on salary negotiation.  I recommended it to a friend recently who got a 38% boost in her comp when she changed jobs.  She then pushed me to follow it and I got a 45% boost in my comp.  I cannot recommend this book strongly enough.  Even if you don't negotiate on your first job (which you might not because you lack power, you want to know this for your future).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Research the Process&lt;/strong&gt;.  The &lt;a href=&quot;https://www.askamanager.org/&quot;&gt;Ask a Manager blog&lt;/a&gt; is a pretty great resource in terms of resumes, cover letters and the like, particularly for early career folk.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manage the Process&lt;/strong&gt;.  This last item is a plug for one of my current side projects, &lt;a href=&quot;https://jobhound.io/&quot;&gt;JobHound&lt;/a&gt;.  JobHound makes the process of getting a tech job, well, suck less.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In closing there are a lot of things that you can do to make yourself more marketable and I'm not saying that you have to (or even can) do all of them but there are definitely steps to take.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2019/08/29/getting-your-first-tech-job.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2019/08/29/getting-your-first-tech-job.html</guid>
        
        <category>jobhound</category>
        
        <category>hiring</category>
        
        <category>job</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Nushell Rocks - Go Yehuda Go</title>
        <description>&lt;p&gt;NuShell is a damn interesting approach to a shell.  Here's a description:&lt;/p&gt;

&lt;p&gt;&quot;Today, we’re introducing a new shell, written in Rust. It draws inspiration from the classic Unix philosophy of pipelines, the structured data approach of PowerShell, functional programming, systems programming, and more.&quot;&lt;/p&gt;

&lt;p&gt;Nu is written by Jonathan Turner, Yehuda Katz and more.  Given that I'm a rubyist, it is no surprise that I'm a Yehuda Katz fan (hence the reference to Yehuda in the title).  But this is Jonathan Turner's project.&lt;/p&gt;

&lt;p&gt;I had a bunch of issues getting running with Nu so I wrote up this blog post.&lt;br /&gt;
# Installing Nu&lt;/p&gt;

&lt;p&gt;In order to install Nu, you need the whole Rust environment and toolchain.  Additionally you need to make sure that you are using the nightly build of Rust.  I'm on OSX and this is what I did:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env
rustup default nightly
cargo install nu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Depending on the state of your OSX Mojave installation, you may need to run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;before your installation will complete (in this event, just re-run from the curl statement).&lt;/p&gt;

&lt;h1 id=&quot;running-nu&quot;&gt;Running Nu&lt;/h1&gt;

&lt;p&gt;Just call the nu executable:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's an example of what Nu looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls Desktop/| sort-by name | first 5

---+--------------------+------+----------+----------+--------------+-------------+-------------
 # | name               | type | readonly | size     | created      | accessed    | modified 
---+--------------------+------+----------+----------+--------------+-------------+-------------
 0 | Desktop/.DS_Store  | File |          | 92.2 KB  | 2 years ago  | 2 weeks ago | a day ago 
 1 | Desktop/.localized | File |          | &amp;lt;empty&amp;gt;  | 12 years ago | 2 years ago | 2 years ago 
 2 | Desktop/1.png      | File |          | 255.2 KB | 2 years ago  | 2 years ago | 2 years ago 
 3 | Desktop/2.png      | File |          | 269.7 KB | 2 years ago  | 2 years ago | 2 years ago 
 4 | Desktop/3.png      | File |          | 276.3 KB | 2 years ago  | 2 years ago | 2 years ago 
---+--------------------+------+----------+----------+--------------+-------------+-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And nu extends into even ps:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps | where cpu &amp;gt; 1 | sort-by cpu | first 5

---+-------+----------+------+--------------------------------------------------------------------------------------------------
 # | pid   | status   | cpu  | name 
---+-------+----------+------+--------------------------------------------------------------------------------------------------
 0 | 89054 | Runnable | 1.34 | /Applications/Firefox.app/Contents/MacOS/firefox 
 1 | 313   | Runnable | 2.45 | /System/Library/CoreServices/Finder.app/Contents/MacOS/Finder 
 2 | 766   | Runnable | 4.80 | /System/Library/PrivateFrameworks/PhotoLibraryPrivate.framework/Versions/A/Support/photolibraryd 
---+-------+----------+------+--------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;exiting-nu&quot;&gt;Exiting Nu&lt;/h1&gt;

&lt;p&gt;Press ctrl+c twice.&lt;/p&gt;

&lt;h1 id=&quot;example-commands&quot;&gt;Example Commands&lt;/h1&gt;

&lt;p&gt;Here are some interesting command examples:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls
ls | where size &amp;gt; 4kb
ls | where size &amp;gt; 1gb
ps | where cpu &amp;gt; 5
open file.json
ls | get name | echo $it
open https://www.jonathanturner.org/feed.xml
ls | sort-by size
ls | pick name size
ls | sort-by size | first 5
ls | sort-by size | first 5 | skip 2
ls | sort-by name
enter docs 
(this is changing into a directory and then you have a second embeded shell 
  which you can navigate between with n and p)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.nushell.sh/&quot;&gt;Website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jonathanturner.org/2019/08/introducing-nushell.html&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20783006&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.nushell.sh/en/&quot;&gt;The Nu Book&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rustup.rs/&quot;&gt;Rustup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nushell/nushell&quot;&gt;Nushell Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rust/comments/cukfnj/announcing_nushell_a_modern_shell_written_in_rust/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/rust-programming-by/9781788390637/e07dc768-de29-482e-804b-0274b4bef418.xhtml&quot;&gt;Rust Nightly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.nushell.sh/en/installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 27 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/nushell/2019/08/27/nushell-rocks-go-yehuda-go.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/nushell/2019/08/27/nushell-rocks-go-yehuda-go.html</guid>
        
        <category>nushell</category>
        
        <category>rust</category>
        
        
        <category>nushell</category>
        
      </item>
    
      <item>
        <title>Forensic Computing 3 - When Docker Breaks SSH</title>
        <description>&lt;p&gt;I've written a few of these now.  I term it &quot;forensic computing&quot; when I've been given a problem to solve that I really have no idea how to approach and it is just a damn mystery.  The problem here was that for my day job:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We are an AWS shop and all of this happens on AWS&lt;/li&gt;
  &lt;li&gt;We moved from OpenVPN as a VPN client to something called TunnelBlick&lt;/li&gt;
  &lt;li&gt;We lost the ability to ssh in - or ping - our Jenkins slave box.  Not any other box.  Even the Jenkins master box was fine.  This only affected the Jenkins slave box.&lt;/li&gt;
  &lt;li&gt;Of all the computers we own, only I had the ability to SSH in / ping the Jenkins slave box&lt;/li&gt;
  &lt;li&gt;Given that I'm a cranky, old engineer, of all the people we had, only I refused to install the new VPN client (in my defense; I saw that a number of people had problems with it and I &lt;em&gt;have&lt;/em&gt; to have VPN access at all time).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: I should note that even though I'm the one writing this up, our Director of Cloud Operations (ST) was instrumental to solving this and his assistance was greatly appreciated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2&lt;/strong&gt;: Yes the answer is in the title but keep reading, it gets interesting.&lt;/p&gt;

&lt;p&gt;So all I really knew as I started looking into this was that, somehow, the VPN was likely involved because this problem only started after the new VPN came into being.&lt;/p&gt;

&lt;h1 id=&quot;step-1-confirmation&quot;&gt;Step 1: Confirmation&lt;/h1&gt;

&lt;p&gt;The first step was to confirm that this problem still exists.  We did this by both of us pinging the Jenkins slave box. And sure enough:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: worked&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ST&lt;/strong&gt;: failed&lt;/p&gt;

&lt;p&gt;The fact that ping itself failed was very interesting because ping is such a core bit of Internet technology.  SSH can be mildly complicated but ping is &lt;strong&gt;simple&lt;/strong&gt;.  Ping should always work.  Always.&lt;/p&gt;

&lt;h1 id=&quot;step-2-firewall-settings&quot;&gt;Step 2: Firewall Settings&lt;/h1&gt;

&lt;p&gt;The next step was to take the obvious dive into firewall settings at the EC2 instance level and make sure that the Jenkins slave box had the same firewall settings as the Jenkins master box.  Not only were there the same firewall settings but they were in the same order.&lt;/p&gt;

&lt;p&gt;This left us with the conclusion that it was something about the actual box itself – but what???&lt;/p&gt;

&lt;h1 id=&quot;step-3-so-whats-different-about-the-jenkins-slave&quot;&gt;Step 3: So What's Different About the Jenkins Slave???&lt;/h1&gt;

&lt;p&gt;A brief description here of Jenkins is likely necessary as not everyone who reads my stuff is, &quot;Engineer Nerdy AF&quot;, which is the description of the (few) readers I generally have.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; is described as:: &quot;The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project.&quot;&lt;/p&gt;

&lt;p&gt;Jenkins is a big Java program that runs as both the Master node which controls everything and then as Slave nodes which do the actual work.&lt;/p&gt;

&lt;p&gt;So, for us, everyone could access the Jenkins Master box but only I could access the Jenkins Slave box.&lt;/p&gt;

&lt;p&gt;When you look at Linux networking issues, two key tools are UFW (another firewall) and iptables (how to handle packets / networking).  Here's the result of ufw:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw status verbose
Status: inactive
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This ruled out ufw as a source of the problems so it was onto iptables:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy DROP)
target     prot opt source               destination
DOCKER-USER  all  --  anywhere             anywhere
DOCKER-ISOLATION-STAGE-1  all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
DOCKER     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
DOCKER     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere
ACCEPT     all  --  anywhere             anywhere

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination

Chain DOCKER (2 references)
target     prot opt source               destination
ACCEPT     tcp  --  anywhere             ip-172-18-0-2.some-aws-region-8.compute.internal  tcp dpt:6379
ACCEPT     tcp  --  anywhere             ip-172-18-0-3.some-aws-region-8.compute.internal  tcp dpt:postgresql

Chain DOCKER-ISOLATION-STAGE-1 (1 references)
target     prot opt source               destination
DOCKER-ISOLATION-STAGE-2  all  --  anywhere             anywhere
DOCKER-ISOLATION-STAGE-2  all  --  anywhere             anywhere
RETURN     all  --  anywhere             anywhere

Chain DOCKER-ISOLATION-STAGE-2 (2 references)
target     prot opt source               destination
DROP       all  --  anywhere             anywhere
DROP       all  --  anywhere             anywhere
RETURN     all  --  anywhere             anywhere

Chain DOCKER-USER (1 references)
target     prot opt source               destination
RETURN     all  --  anywhere             anywhere
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this is where ST came fully into play – he looked at the iptables and almost immediately seized on the 172-18 address as a key issue.  Apparently this is part of how he has configured our VPN.  And since the 172-18 issue was tied to  &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;, we were on the hunt for how Docker might mess with networking that would break SSH.&lt;/p&gt;

&lt;h1 id=&quot;step-4-so-docker-&quot;&gt;Step 4: So Docker …&lt;/h1&gt;

&lt;p&gt;A good friend of mine is a &lt;a href=&quot;https://nickjanetakis.com/&quot;&gt;Docker instructor&lt;/a&gt; so I'm pretty familiar with Docker.  Here are some things about Docker:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker is always running so it is a candidate for interfering with stuff&lt;/li&gt;
  &lt;li&gt;Docker has pretty extensive networking facilities&lt;/li&gt;
  &lt;li&gt;Docker modifies existing system stuff like the Routes table&lt;/li&gt;
  &lt;li&gt;Docker can be a furball of complexity because Docker gives you a computer within your computer (virtualization) and that means it is actually an operating system at its core.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, technically, Docker could mess with SSH even if it feels absolutely bizarre for this to even be possible.&lt;/p&gt;

&lt;h1 id=&quot;step-5-proving-this&quot;&gt;Step 5: Proving This&lt;/h1&gt;

&lt;p&gt;The first step was for us to prove this and rather than mess with Docker configuration, the much easier approach was just to turn off Docker using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl stop docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And after that, we repeated the earlier ping test:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: worked&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ST&lt;/strong&gt;: worked&lt;/p&gt;

&lt;p&gt;And that told us that, Yes Virginia, Docker really can break SSH, DAMN IT!  At least for &lt;strong&gt;us&lt;/strong&gt; and how we do networking / VPN.&lt;/p&gt;

&lt;h1 id=&quot;step-6-addressing-this&quot;&gt;Step 6: Addressing This&lt;/h1&gt;

&lt;p&gt;So our basic thesis is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Docker starts up.&lt;/li&gt;
  &lt;li&gt;Docker grabs network addresses in the range of 172.18.&lt;/li&gt;
  &lt;li&gt;We use 172.18 ourselves in a VPN context.&lt;/li&gt;
  &lt;li&gt;This prevents the Jenkins slave box from being accessible via SSH or even ping.&lt;/li&gt;
  &lt;li&gt;We need to tell Docker NOT to use these addresses.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And with that thesis, we knew what was next – Google.  The research that we did and things we found are listed below under References.&lt;/p&gt;

&lt;h1 id=&quot;step-7-fixing-this-or-docker-is-a-dirty-lazy-teenager&quot;&gt;Step 7: Fixing This or Docker is a Dirty, Lazy Teenager&lt;/h1&gt;

&lt;p&gt;Our first thought was that the 172-18 network address specification was located in docker-compose.yml.  And, while we knew that existed, we had no idea where it was but a quick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo find / -name &quot;docker-compose.yml&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;revealed its location.  Groveling through it, though, proved to be a wash – no networking commands.  A similar trawl through files on the machine proved fruitless as there were no Dockerfile(s) telling us what was going on.&lt;/p&gt;

&lt;p&gt;Google, as always, delivered the answer.  We learned that the core Docker daemon (the background program governing all of Docker) itself can be customized with a file called daemon.json.  So we did this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /etc/docker/daemon.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and we discovered that by default, it simply isn't there.  Here's what we started with from the Internet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;bip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.1.5/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fixed-cidr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.1.5/25&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fixed-cidr-v6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2001:db8::/64&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;mtu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;default-gateway&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.20.1.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;default-gateway-v6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2001:db8:abcd::89&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.20.1.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.20.1.3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And here's what ended up working:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;default-address-pools&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.10.0.0/16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.11.0.0/16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And we were certain that we were &lt;strong&gt;right&lt;/strong&gt; and all would be good – only it didn't &lt;em&gt;censored&lt;/em&gt; work.  Now I have been using Docker on and off for a bunch of years and this experience made me remember my opinion of Docker's engineering practices.  Docker often seems to run engineering as if they are dirty, lazy teenagers.  Specifically Docker doesn't seem to clean up after itself (example - tickets stay open way too long; things are poorly documented, etc).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I am a parent to teenagers.  I can say this.&lt;/p&gt;

&lt;p&gt;So my suspicion was that Docker had modified something at the machine level and I needed to find out what that change was and delete it.  At this point, I'm going to cut to the chase now because this is way too long.  The short answer was a change was left behind by Docker in the routes table that needed to be deleted.  A quick look at routes gave us:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ip route show

default via 172.31.16.1 dev ens5 proto dhcp src 172.31.23.113 metric 100
10.10.0.0/24 dev docker0 proto kernel scope link src 10.10.0.1 linkdown
172.18.0.0/16 dev br-9942c98d99d1 proto kernel scope link src 172.18.0.1 linkdown
172.31.16.0/20 dev ens5 proto kernel scope link src 172.31.23.113
172.31.16.1 dev ens5 proto dhcp scope link src 172.31.23.113 metric 100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then it was just:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo route del -net 172.18.0.0/16
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With that and then a final Docker stop and start all this madness was done.  The final task was to then launch our test suite via Jenkins and watch it function correctly.&lt;/p&gt;

&lt;h1 id=&quot;but-what-about-verifying-the-fix&quot;&gt;But What About Verifying the Fix&lt;/h1&gt;

&lt;p&gt;I can't explain why the first time we turned Docker off, we were able to verify that it worked but yet there was a permanent route left in at the machine level.  My suspicion is some kind of edge case glitch but who knows.  I mean when you use teenager style engineering practices …&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;A robust thank you to our Director of Cloud Operations, ST, who was stellar at working this with me.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/community/IptablesHowTo&quot;&gt;IP Tables How To&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.poftut.com/delete-route-ubuntu-linux/&quot;&gt;Deleting Routes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vitux.com/how-to-view-the-network-routing-table-in-ubuntu/&quot;&gt;Viewing Routes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/42365336/how-to-stop-docker&quot;&gt;Stopping Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/restart/&quot;&gt;Restarting Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/v17.09/engine/userguide/networking/work-with-networks/&quot;&gt;Work with Network Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/tools-reference/tools/find-files-in-linux-using-the-command-line/&quot;&gt;Finding Files in Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sudo-bmitch.github.io/presentations/dc2019/tips-and-tricks-of-the-captains.html#p21&quot;&gt;Docker Presentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/dockerd/&quot;&gt;Daemon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/v17.09/engine/userguide/networking/default_network/custom-docker0/&quot;&gt;Customizing the Default Bridge Network&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 27 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2019/08/27/forensic-computing-3-when-docker-breaks-ssh.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2019/08/27/forensic-computing-3-when-docker-breaks-ssh.html</guid>
        
        <category>docker</category>
        
        <category>linux</category>
        
        <category>networking</category>
        
        <category>ssh</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>The Power of Why</title>
        <description>&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I wrote this as a section of an unfinished book about managing software engineers, &quot;Managing the Unmanageables&quot;, when you are &lt;strong&gt;not&lt;/strong&gt; a software engineer.  I keep copying it and pasting it to people so I thought it should just live here.&lt;/p&gt;

&lt;h1 id=&quot;applying-psychology-the-power-of-why&quot;&gt;Applying Psychology: The Power of Why&lt;/h1&gt;

&lt;p&gt;One of the powerful tools in your arsenal of management techniques for dealing with software engineers is three letters long — &lt;strong&gt;why&lt;/strong&gt;.  As a manager, even as a non technical person managing technical people, you always have the ability to ask &lt;strong&gt;why&lt;/strong&gt;.  I would argue that if you don’t ask why, at least some of the time, you’re not doing your job.  Understanding “why” is, after all, at the heart of management.
The power of why taps into four of these psychological vectors: pride in his work, poor social skills, the desire to not explain his or her self and the belief that they are smarter than you.  So let’s posit a dialog between you and a software engineer:&lt;/p&gt;

&lt;p&gt;Manager:  Bob — we need to get that download bug fixed today.  Its a big deal.
Bob: Well that’s actually pretty hard.  I’d need to &lt;em&gt;nerd level gobbledygook gook speak here&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A lot of times that’s where the dialog ends.  The software engineer throws up a wall and relies on you not understanding this.  Now let’s revisit that and add why to the mix:&lt;/p&gt;

&lt;p&gt;Manager:  Bob — we need to get that download bug fixed today.  Its a big deal.
Bob: Well that’s actually pretty hard.  I’d need to &lt;em&gt;nerd level gobbledygook gook speak here&lt;/em&gt;
Manager: That’s interesting and I don’t understand everything you just said but I do know that our product used to be able to download data and now it can’t.  Can you explain why?&lt;/p&gt;

&lt;p&gt;And this is the point where Bob either has to explain himself as a human being or do the work.  And, honestly, he’d rather do the work than talk to you.  Don’t take offense at this.  It is actually both what you and and to you advantage so its a good thing.  Bear in mind that Bob would rather talk to a computer than talk to you.  If he really wanted to talk to people, he’d have your job.  Finally if he really is smarter than you, or at least things he is, shouldn’t he be able to fix it?&lt;/p&gt;

&lt;p&gt;One thing to know about technical people — we hide behind our jargon because it gives a way to make difficult social interactions go away.  If I use words that you don’t understand then it naturally intimidates you because it makes you feel stupid and me feel superior.&lt;/p&gt;

&lt;p&gt;The power of why is a very real thing.  I cannot tell you the number of times that simply asking “why” has resulted in the engineer saying “Fine!  I’ll just fix it”.&lt;/p&gt;

&lt;p&gt;The other thing to understand about the power of why is that software can be intimidating as hell  even to the engineer who is working on it.  By forcing them to explain themselves, in a way that you can understand, you are inherently forcing them to work thru the issue at hand in their own head.  And, very often, you force them to realize where they went wrong.  Let me illustrate this with an anecdote.&lt;/p&gt;

&lt;p&gt;Once upon a time there was a software company that was making CD-ROM indexing software and an indexing operation just would not finish.  Finally I dragged the engineer in question over and made him watch how astonishingly, mind numbingly slow it was.  The very next day a 24 + hour process executed in 8 minutes.  What changed?  To this day I do not know.  All he said was “I was stupid[1]”.&lt;/p&gt;

&lt;p&gt;This second example tapped into the engineer’s belief that his code was “fast”.  By confronting him with the real world where his code was not fast, I forced him to either admit that his code was slow (which conflicted with his pride) or just fix it or, worse, explain himself.  And the normal thing happened — he fixed his code.  And, just so you know, the engineer was not me.  I was the lowly user in this case.&lt;/p&gt;

&lt;p&gt;[1] This actually operated on several emotional vectors — the desire to not have to explain himself coupled with pride in performance (every engineer thinks his or her code is fast).&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mtu/2019/08/26/the-power-of-why.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mtu/2019/08/26/the-power-of-why.html</guid>
        
        <category>software_engineering</category>
        
        <category>chapter_02</category>
        
        
        <category>mtu</category>
        
      </item>
    
      <item>
        <title>Jumpstart and GoRails Has Outstanding Tech Support - Go Chris Oliver Go - Recommended</title>
        <description>&lt;p&gt;Technical support gets a bad rap in the industry but there are time when technical support proves &lt;strong&gt;just how good a product or service can be&lt;/strong&gt; – and this is one of those times.&lt;/p&gt;

&lt;p&gt;I'm very much a Rails guy and I've been debating trying &lt;a href=&quot;https://jumpstartrails.com/&quot;&gt;Jumpstart Pro&lt;/a&gt; for some time.  I finally have a crappy little SAAS idea and this is likely the perfect time for me to try it – because I have written &lt;strong&gt;zero&lt;/strong&gt; code so far.  Now JumpStart is a paid product that amounts to a pre-build starting Rails app with all the necessary cruft for a SAAS app already built.  So it really only works when you are in a pure greenfield state.  So this is perfect for JumpStart Pro.&lt;/p&gt;

&lt;p&gt;But since it is a paid product, I wanted to try before I buy which made me try the &lt;a href=&quot;https://github.com/excid3/jumpstart&quot;&gt;free version on Git&lt;/a&gt;.  And that, well, that was a disaster.  I ended up with all kinds of issues, mostly related to railties and Rails 6.  If you've been around a while, you've seen this and, well, you know it sucks.  So after an hour of mucking about, I finally threw my hands up and said &quot;I'll just email Chris&quot;.  Now I am a paid subscriber to Chris' Rails Cast service, &lt;a href=&quot;https://gorails.com/&quot;&gt;GoRails&lt;/a&gt;, which, I will admit, does give me an advantage in talking to him.  I'm not an active user of the service but I do pay for it monthly.&lt;/p&gt;

&lt;p&gt;So I sent him an email around 3 in the morning on a Friday night and I had an answer back by 10:50 am on a Saturday:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hey Scott,

The free template has no shared code whatsoever with the Pro template. The Pro 
template is actually a pre-built Rails 6 app you clone because as you can see 
here the Rails generators are an absolute mess to maintain.

We built a bunch of classes with Tailwind to make it much more familiar to any 
Bootstrap users. It's pretty freeing once you get used to it.

It looks like it installed Devise 1.5.4 on your first error log. Devise is currently 
4.6.2 lol. That I'm sure is part of the issue. They updated the git to support 
Rails 6 a couple months ago, but haven't cut a release for it yet.

All stems from a stupid nuance in gem versioning. Devise is set to &amp;lt; 6.0 
and technically 6.0.0.rc2 is less than 6.0 final, so the current gem version 
worked, but not with the final release.

Just updated the template to use Devise from git for now. Works like a charm.

Chris
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Not only did he understand the issue but he perfectly explained it and fixed it.  And in just a few hours on a Saturday.  This is extraordinary support and, to me, it illustrates just how good JumpStart Pro likely is (and how good Go Rails is).  People don't take this much care with products that aren't good.&lt;/p&gt;

&lt;p&gt;So if you are in the startup business and you look at support as a cost center, you are flat out wrong at least some of the time.  In this case support was an absolute win and will get another copy of JumpStart Pro bought (I haven't done it yet because I'm headed out the door shortly; only reason).&lt;/p&gt;

&lt;p&gt;Chris Oliver, Go Rails and Jumpstart Pro – recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/08/17/jumpstart-and-gorails-has-outstanding-tech-support-go-chris-oliver-go-recommended.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/08/17/jumpstart-and-gorails-has-outstanding-tech-support-go-chris-oliver-go-recommended.html</guid>
        
        <category>rails</category>
        
        <category>jumpstart</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Installing Rails 2.6 on OSX and a Creating New Application</title>
        <description>&lt;p&gt;So Rails 2.6 has been released and I just went thru the normal update dance.  Here's how I handled upgrading my system.  Let's start with the basics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rvm&lt;/li&gt;
  &lt;li&gt;OSX Mojave&lt;/li&gt;
  &lt;li&gt;Ruby 2.5.1&lt;/li&gt;
  &lt;li&gt;MySQL (yeah, yeah I know; not apologizing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is what I did (you should know that I hit issues with older versions of Yarn and Node so I've included updating them as part of this):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Started a terminal session.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verified my ruby version:&lt;/p&gt;

    &lt;p&gt;ruby –version&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verified my rails version:&lt;/p&gt;

    &lt;p&gt;rails –version&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upgrade Yarn:&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;curl -o- -L https://yarnpkg.com/install.sh&lt;/td&gt;
          &lt;td&gt;bash&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can either start a new terminal to get your path exports correct (it is set on Terminal start) or simply do this:&lt;/p&gt;

    &lt;p&gt;export PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upgrade node:&lt;/p&gt;

    &lt;p&gt;brew upgrade node&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upgrade Ruby to 2.6.2 (not required but I figured why not):&lt;/p&gt;

    &lt;p&gt;rvm install 2.6.2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change to the new ruby:&lt;/p&gt;

    &lt;p&gt;rvm use ruby-2.6.2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generate a new application:&lt;/p&gt;

    &lt;p&gt;rails new lauck –database=mysql&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;If you got anxious and generated a new application prior to installing a new ruby then, you would need to update the Gemfile to reflect the Ruby version and bundle install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I've named this new test application after one of my favorite librarians.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://weblog.rubyonrails.org/2019/8/15/Rails-6-0-final-release/&quot;&gt;Rails 6 Announcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://edgeguides.rubyonrails.org/6_0_release_notes.html&quot;&gt;Rails 6 Release Notes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20717886&quot;&gt;Rails 6 on Hacker News&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/install/#mac-stable&quot;&gt;Installing Yarn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rvm.io/rvm/basics&quot;&gt;RVM Basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/grv19/installing-ruby-26-2dch&quot;&gt;Installing Ruby 2.6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://selleo.com/blog/how-to-upgrade-to-rails-6&quot;&gt;How to Upgrade to Rails 6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/08/17/installing-rails-2-6-on-osx-and-a-creating-new-application.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/08/17/installing-rails-2-6-on-osx-and-a-creating-new-application.html</guid>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Scopes are Elegant</title>
        <description>&lt;p&gt;This post is obvious to any advanced Rails user (hell even any middling Rails user) but I know there are some readers who aren't that sophisticated so here goes.&lt;/p&gt;

&lt;p&gt;A scope is a Rails database query that operates much like a class method only it is much, much simpler to define.  Here's a class method that finds the active elements in a table called habits:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def active
  Habit.where(active: true)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that's not bad but a Rails scope looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scope :active, -&amp;gt; { where(active: true) }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But the real benefit here is that scopes are &lt;strong&gt;chainable&lt;/strong&gt; so they can be inserted into an overall &quot;query pipeline&quot; where you can easily extend things.  In my case I had a site listing habits and I realized that habits needed a state of active (if it was true it should be displayed and if it was false then it shouldn't be).  Here was my initial view code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%plan.habits.each do |habit|%&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;%=link_to(habit.name, habit_path(habit))%&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once I had the scope defined then all I had to do was this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%plan.habits.active.each do |habit|%&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;%=link_to(habit.name, habit_path(habit))%&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And &lt;strong&gt;blammo&lt;/strong&gt; I had an active list of habits.&lt;/p&gt;

&lt;p&gt;Now let's carry the example further and let's say that you want a list of habits sorted by name. You can define a scope called ordered_by_name like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scope :order_by_name, -&amp;gt; { order(&quot;name ASC&quot;)}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and the scope into your view like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%plan.habits.active.order_by_name.each do |habit|%&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;%=link_to(habit.name, habit_path(habit))%&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And it will be sorted by name, easy peasy.  Now I've used scopes for &lt;strong&gt;years&lt;/strong&gt; (prior to their current syntax actually) but their elegance has never struck me in quite the same way.  Perhaps it is just Monday …&lt;/p&gt;

&lt;h2 id=&quot;more-on-rails-scopes&quot;&gt;More on Rails Scopes:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://api.rubyonrails.org/classes/ActiveRecord/Scoping/Named/ClassMethods.html&quot;&gt;api.rubyonrails.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.justinweiss.com/articles/should-you-use-scopes-or-class-methods/&quot;&gt;Scopes or Class Methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/le-wagon/what-are-named-scopes-and-how-to-use-them-rails-5-5a0444d8b759&quot;&gt;Named Scopes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 05 Aug 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/08/05/rails-scopes-are-elegant.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/08/05/rails-scopes-are-elegant.html</guid>
        
        <category>rails</category>
        
        <category>database</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Migration Tips and Tricks</title>
        <description>&lt;p&gt;A migration is the Rails facility which alters a database's structure.  Migrations are an essential aspect of all database development with Rails and they generally work quite well with the default command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-or-&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That command will cause Rails to execute all pending migrations.  A pending migration is one where the timestamp on the migration is &lt;strong&gt;not&lt;/strong&gt; stored in the table schema_migrations.&lt;/p&gt;

&lt;p&gt;The trick with migrations is understanding how to manipulate them, replay them, etc when they fail.&lt;/p&gt;

&lt;h2 id=&quot;the-hard-way---the-schemamigrations-table&quot;&gt;The Hard Way - The schema_migrations Table&lt;/h2&gt;

&lt;p&gt;Let's start with the hard way - manipulating schema_migrations table directly.  Let's say that you need to re-run the last 2 migrations.  Here's what you need to do:&lt;/p&gt;

&lt;p&gt;Start by getting the timestamps of the last two migrations.  You can do this with an ls -ltr db/migrations and pick them out of what might be a giant list of migrations (my current work project has 858 migrations) – and this can, well, &lt;strong&gt;suck&lt;/strong&gt;.  You can also be smart about it and use tail to get just the last few (default 8 on OSX) migrations.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -ltr db/migrate | tail
-rw-r--r--  1 sjohnson  staff   201 Jul 18 04:44 20190717234458_create_units.rb
-rw-r--r--  1 sjohnson  staff   120 Jul 18 04:44 20190717235922_add_unit_id_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   154 Jul 18 04:44 20190718000145_add_unit_id_to_habit_tasks.rb
-rw-r--r--@ 1 sjohnson  staff   129 Jul 18 04:44 20190718075945_add_unit_preferences_json_to_users.rb
-rw-r--r--@ 1 sjohnson  staff   154 Jul 18 04:44 20190718080511_add_unit_type_to_units.rb
-rw-r--r--@ 1 sjohnson  staff   131 Jul 18 09:28 20190718110444_fix_stupidity_with_float_val.rb
-rw-r--r--  1 sjohnson  staff   164 Jul 18 13:33 20190718133051_add_options_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   151 Jul 25 15:48 20190725100535_add_has_loggable_tasks_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   257 Jul 26 15:21 20190726191446_add_plan_id_to_habits.rb
-rw-r--r--@ 1 sjohnson  staff   523 Jul 27 03:29 20190726133807_create_plans.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you can delete from schema_migrations using a database console or by using ActiveRecord in the Rails console so either:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;delete from schema_migrations where version in (20190726133807, 20190726191446);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-or- in a Rails console:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ActiveRecord::Base.connection.execute(&quot;delete from schema_migrations where version in (20190726133807, 20190726191446)&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you would also need to undo any changes your migrations might have partially implemented.  If this was table creation then this is a relatively simple &quot;drop table foo&quot; statement but if it was an index creation or something harder, you need to selectively alter individual tables.  And even a hard core SQL guy like myself generally doesn't want to do that.  So let's look at the easier options.&lt;/p&gt;

&lt;h2 id=&quot;the-easy-way&quot;&gt;The Easy Way&lt;/h2&gt;

&lt;p&gt;Happily Rails provides some additional facilities for this allowing you to rollback the last migration or an individual migration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake db:rollback
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;gets rid of the last migration.  I do NOT, however, ever recommend that you do this.  I'm currently working on an active side project where pull requests are flowing and even when you might think that you know what the last migration &lt;strong&gt;you created&lt;/strong&gt; was, you may not realize that another developer slipped a migration in and &lt;em&gt;whammo&lt;/em&gt;, &quot;Houston we have a problem&quot;.&lt;/p&gt;

&lt;p&gt;My recommendation is to always specify the version with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake db:migrate:down VERSION=20190726133807
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is absolute and will only affect the migration in question.  Given that I'm a big damn fan of always understanding the state of my persistent storage, it isn't surprising that I recommend this.&lt;/p&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;All of this can be easily referenced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4352848/how-to-rollback-just-one-step-using-rake-dbmigrate/21119193&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://guides.rubyonrails.org/migrations.html#running-migrations&quot;&gt;Core Rails Docs on Migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 31 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/31/rails-migration-tips-and-tricks.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/31/rails-migration-tips-and-tricks.html</guid>
        
        <category>rails</category>
        
        <category>migration</category>
        
        <category>db</category>
        
        <category>database</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Nerd Humor - When You Blog in Bright Sunlight in a Convertible</title>
        <description>&lt;p&gt;Disclaimer: There is likely only one person on the planet who will find this funny.  Hi!&lt;/p&gt;

&lt;p&gt;So I found myself last night in a convertible with my wife driving and I thought to myself, &quot;I know; I'll write something&quot;.  And I began writing a screed on the use of the underlying Rails Migration commands that manipulate the state of your database.  Rails has a number of these commands that, after MORE THAN A DECADE of daily rails programming, I've never bothered to use.  I have known for a long time I need to master these and I finally have.&lt;/p&gt;

&lt;p&gt;I finish up that post this morning and go to find it and publish it and a git status shows me &lt;strong&gt;nothing&lt;/strong&gt;.  Gulp.  This just doesn't happen to me.  Scramble around looking for it – no love.  Confirm that it actually exists in my editor and I didn't just have a surreal &quot;out of keyboard&quot; experience – yep.  It is there.  And then it hits me – I have multiple blogs, one for nerd writing and one for recipes.  Yep:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  recipes git:(gh-pages) ✗ git commit -m &quot;updates to pickle&quot;
[gh-pages 0e34bce] updates to pickle
 1 file changed, 3 insertions(+), 1 deletion(-)
➜  recipes git:(gh-pages) git push origin gh-pages
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 568 bytes | 0 bytes/s, done.
Total 4 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
remote: 
remote: GitHub found 7 vulnerabilities on fuzzygroup/recipes's default branch (1 critical, 1 high, 4 moderate, 1 low). To find out more, visit:
remote:      https://github.com/fuzzygroup/recipes/network/alerts
remote: 
To github.com:fuzzygroup/recipes
   9fc96ec..0e34bce  gh-pages -&amp;gt; gh-pages
➜  recipes git:(gh-pages) jekyll post &quot;Rails Migration Tips and Tricks&quot;
New post created at _posts/2019-07-30-rails-migration-tips-and-tricks.md.
➜  recipes git:(gh-pages) ✗ mate _posts/2019-07-30-rails-migration-tips-and-tricks.md 
➜  recipes git:(gh-pages) ✗   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Moral of the story?  Don't tech blog where you food blog.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/humor/2019/07/31/nerd-humor-when-you-blog-in-bright-sunlight-in-a-convertible.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/humor/2019/07/31/nerd-humor-when-you-blog-in-bright-sunlight-in-a-convertible.html</guid>
        
        <category>humor</category>
        
        <category>blogging</category>
        
        
        <category>humor</category>
        
      </item>
    
      <item>
        <title>Patterns and Anti-Patterns</title>
        <description>&lt;p&gt;There times when I use terms so common to software engineering that I forget that there is a wide audience out there to whom these aren't native concepts.  That's my bad – using things before you define them is not a good thing.&lt;/p&gt;

&lt;p&gt;Earlier today I referenced &quot;&lt;a href=&quot;https://fuzzyblog.io/blog/anti_patterns/2019/07/26/development-anti-pattern-two-objects-with-almost-the-same-structure.html&quot;&gt;anti-patterns&lt;/a&gt;&quot; but failed to define it.  The idea of an anti-pattern is intimately tied to the idea of a pattern and let's let Wikipedia do the talking:&lt;/p&gt;

&lt;p&gt;&quot;In software engineering, a software design pattern is a general, reusable solution to a commonly occurring problem within a given context in software design. It is not a finished design that can be transformed directly into source or machine code. It is a description or template for how to solve a problem that can be used in many different situations. Design patterns are formalized best practices that the programmer can use to solve common problems when designing an application or system.&quot; &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_design_pattern&quot;&gt;Software Design Pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So if a pattern is a best practice, something that you do then an anti-pattern is the inverse – it is something that you &lt;strong&gt;do not do&lt;/strong&gt;.  I'll blog about another one soon – the going dark anti pattern.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/anti_patterns/2019/07/26/patterns-and-anti-patterns.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/anti_patterns/2019/07/26/patterns-and-anti-patterns.html</guid>
        
        <category>software_development</category>
        
        <category>anti_patterns</category>
        
        
        <category>anti_patterns</category>
        
      </item>
    
      <item>
        <title>Development Anti Pattern - Two Objects with Almost the Same Structure</title>
        <description>&lt;p&gt;One of the beautiful things about greenfield development, that joyous process of starting anew on something, is that it lets you see errors that you make much more cleanly.  And this is a combination of a few things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The Forest for the Trees.  In a big code base, any errors you make aren't that visible because they are drowned out by all the other bits of code.&lt;/li&gt;
  &lt;li&gt;Willingness to Get It Right.  When you start a new code base, it is like starting a new love affair – this time, you are going to get it &lt;strong&gt;right&lt;/strong&gt;.  This time, it will be &lt;strong&gt;different&lt;/strong&gt;.  So you are a bit more able to see errors then a lot more willing to rip apart something that is already working to make it right.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The specific example at hand is the anti pattern of two objects with almost the same structure.  Here's an example from my current side project:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;desc habits;
+-----------------+--------------+------+-----+---------+----------------+
| Field           | Type         | Null | Key | Default | Extra          |
+-----------------+--------------+------+-----+---------+----------------+
| id              | bigint(20)   | NO   | PRI | NULL    | auto_increment |
| created_at      | datetime     | NO   |     | NULL    |                |
| updated_at      | datetime     | NO   |     | NULL    |                |
| name            | varchar(255) | YES  | MUL | NULL    |                |
| hardness        | int(11)      | YES  |     | NULL    |                |
| frequency       | int(11)      | YES  |     | NULL    |                |
| economic_value  | int(11)      | YES  |     | NULL    |                |
| user_id         | int(11)      | YES  | MUL | NULL    |                |
| description     | text         | YES  |     | NULL    |                |
| shareable       | tinyint(1)   | YES  |     | NULL    |                |
| habit_type_id   | int(11)      | YES  | MUL | NULL    |                |
| master_habit_id | int(11)      | YES  | MUL | NULL    |                |
| unit_id         | int(11)      | YES  |     | NULL    |                |
| options         | text         | YES  |     | NULL    |                |
| has_tasks       | tinyint(1)   | YES  |     | 0       |                |
+-----------------+--------------+------+-----+---------+----------------+
15 rows in set (0.00 sec)

desc habit_tasks;
+----------------------------+--------------+------+-----+---------+----------------+
| Field                      | Type         | Null | Key | Default | Extra          |
+----------------------------+--------------+------+-----+---------+----------------+
| id                         | bigint(20)   | NO   | PRI | NULL    | auto_increment |
| created_at                 | datetime     | NO   |     | NULL    |                |
| updated_at                 | datetime     | NO   |     | NULL    |                |
| habit_id                   | int(11)      | YES  | MUL | NULL    |                |
| name                       | varchar(255) | YES  |     | NULL    |                |
| hardness                   | int(11)      | YES  |     | NULL    |                |
| frequency                  | int(11)      | YES  |     | NULL    |                |
| economic_value             | float        | YES  |     | NULL    |                |
| user_id                    | int(11)      | YES  |     | NULL    |                |
| metric_type_id             | int(11)      | YES  |     | NULL    |                |
| unit_id                    | int(11)      | YES  |     | NULL    |                |
| best_general_time_for_this | varchar(255) | YES  |     | NULL    |                |
| options                    | text         | YES  |     | NULL    |                |
+----------------------------+--------------+------+-----+---------+----------------+
13 rows in set (0.06 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These are pretty close to the same and they represent an attempt to give a 1 level hierarchy (the habit_task) onto the parent object (habit).&lt;/p&gt;

&lt;p&gt;And the simple answer here is that what I'm actually looking for are groups not a sub-object i.e. invent a group concept an then simply reduce all the habit_task objects to habits that are grouped together.  That achieves roughly 95% of what habit_tasks did and dramatically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;reduces code duplication (the same routine to calculate economic_value is used multiple places)&lt;/li&gt;
  &lt;li&gt;reduces complexity overall&lt;/li&gt;
  &lt;li&gt;gets rid of a huge wart in the display views where nesting is needed&lt;/li&gt;
  &lt;li&gt;improves performance by not having to constantly check if a habit has tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line here is that whenever you have two objects with almost the same structure, start asking yourself is that really the same damn object somehow.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/anti_patterns/2019/07/26/development-anti-pattern-two-objects-with-almost-the-same-structure.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/anti_patterns/2019/07/26/development-anti-pattern-two-objects-with-almost-the-same-structure.html</guid>
        
        <category>software_development</category>
        
        <category>anti_patterns</category>
        
        
        <category>anti_patterns</category>
        
      </item>
    
      <item>
        <title>A Bootstrap 4 Two Column Example that Just Works</title>
        <description>&lt;p&gt;I remain, alas, CSS Challenged.  I'm from an era where the height of HTML layout was tables and once upon a time I know all the tricks including images in the corners for that rounded corner effect.  But, as is all too often in technology, the tricks that once served you well – don't.&lt;/p&gt;

&lt;p&gt;Now we exist in a whole new world for layout i.e. CSS and for me that means &lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/introduction/&quot;&gt;bootstrap introduction&lt;/a&gt; or &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;bootstrap main page&lt;/a&gt;.  Bootstrap isn't perfect but I fully respect what it tries to do and the simple fact that, imho, Bootstrap made the Internet &lt;strong&gt;better&lt;/strong&gt;.  So when I want to make two columns and I naturally reach for a table tag, I need to come look this example up from &lt;a href=&quot;https://codepen.io/SitePoint/pen/WMYOxb&quot;&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;
  &amp;lt;div class=&quot;row header&quot;&amp;gt;
    &amp;lt;div class=&quot;col-xs-12 text-center&quot;&amp;gt;
      &amp;lt;h1&amp;gt;Bootstrap 4 2-Column Layout &amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;div class=&quot;col-sm-6 first-column&quot;&amp;gt;
      &amp;lt;p&amp;gt;This column takes the full height as its sibling column thanks to Flexbox&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-sm-6 second-column&quot;&amp;gt;
      &amp;lt;p&amp;gt;
        Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum 
      &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I'm not pretending that this is hard or not but the shift from tables to a css grid isn't exactly simple (or at least it isn't for me).&lt;/p&gt;

&lt;p&gt;I'm noting this particular example because I've tried several and this one just worked right out of the box.  The others should have – and maybe it was just my ham fisted approach – but this one did.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bootstrap/2019/07/26/a-bootstrap-4-two-column-example-that-just-works.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bootstrap/2019/07/26/a-bootstrap-4-two-column-example-that-just-works.html</guid>
        
        <category>boostrap</category>
        
        <category>css</category>
        
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Git Rebasing Old Migrations Easily When SourceTree Fails</title>
        <description>&lt;p&gt;So I've written before about schema.rb changes, SourceTree and migrations and the problem with git rebase before:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html&quot;&gt;Schema WTF Take 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/05/10/the-schema-wtf-moment-take-2-an-excursion-into-sourcetree.html&quot;&gt;Schema WTF Take 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I just hit this again and my normal pairing partner is offline and while he has the patience to deal with the crazy ass error messages from SourceTree, I do not.  Personally I think Atlassian (the maker of SourceTree) should simply be killed with fire while my pagan friends dance naked around a drum circle but hey – that's just me.&lt;/p&gt;

&lt;p&gt;Anyway my tooling has let me down.  And, yes I could learn the specific range level commit commands that SourceTree is generating behind the scenes but I think there's an easier way.  Here's what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Abort the git rebase with git rebase –abort&lt;/li&gt;
  &lt;li&gt;Change back into my develop branch which is now current.&lt;/li&gt;
  &lt;li&gt;Copy schema.rb to ~ i.e. cp db/schema.rb ~&lt;/li&gt;
  &lt;li&gt;Look at my pull request to identify the specific migration that I ran.&lt;/li&gt;
  &lt;li&gt;Roll back the specific migration with: rake db:migrate:down VERSION=20190610143443&lt;/li&gt;
  &lt;li&gt;Copy in the schema.rb from ~ i.e. cp ~/schema.rb db&lt;/li&gt;
  &lt;li&gt;Run the migration with bundle exec rake db:migrate&lt;/li&gt;
  &lt;li&gt;Do the git add / commit / push dance&lt;/li&gt;
  &lt;li&gt;Get someone to do the pull request review&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that, dear reader, should have worked swimmingly.  Alas, it did not.  And this was one of those software engineering cases where trying to understand something fully likely would have been a waste of time.  This change amounted to a few lines in a model, a migration to add an index and a small update to a spec file – I simply recreated the branch from the current develop as &quot;-a&quot; (on top of the original branch number) and then re-made the same damn changes.  Yeah that sucks but it worked.&lt;/p&gt;

&lt;p&gt;Today was definitely a day in the trenches.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/24/git-rebasing-old-migrations-easily-when-sourcetree-fails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/24/git-rebasing-old-migrations-easily-when-sourcetree-fails.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>migrations</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Bullshite rsync Subtleties</title>
        <description>&lt;p&gt;So yesterday or the day before &lt;a href=&quot;https://fuzzyblog.io/blog/osx/2019/07/22/backing-mac-to-mac-via-scp-rsync.html&quot;&gt;I blogged about rsync&lt;/a&gt; and how good it was.  And that's true but rsync is notoriously tricky and today I became very, very aware of rsync's trickiness.&lt;/p&gt;

&lt;p&gt;So my scenario was that I had an old MacBook Air which I was trying to get all the data off of since DropBox seemed to have an incomplete sync.  And I figured that if I just got all the files copied up to my big desktop then I could reformat the machine and give it to my wife as a replacement for her laptop on which the keyboard died.&lt;/p&gt;

&lt;p&gt;Note: Some of these things are perhaps known issues / not issues because I'm on OSX.  What I can say is that as a Mac user some of these things make no damn sense.&lt;/p&gt;

&lt;h1 id=&quot;problem-the-first---directory-names-with-spaces&quot;&gt;Problem the First - Directory Names with Spaces&lt;/h1&gt;

&lt;p&gt;So here was the first thing that I observed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Dropbox/&quot;Camera Uploads&quot;/ 192.168.1.25:/Users/sjohnson/backups/macbook_air/Dropbox/&quot;Camera Uploads&quot;
Password:
building file list ... done
created directory /Users/sjohnson/backups/macbook_air/Dropbox/Camera
./
.DS_Store
.dropbox
2017-07-03 05.30.42.jpg
2017-07-03 07.03.03.jpg
2017-07-09 08.54.25.jpg
2017-07-09 08.54.31.jpg
2017-07-09 11.09.16.jpg
2017-07-09 11.09.23.jpg
2017-07-10 18.48.37.jpg
2017-07-10 18.48.43.jpg
2017-07-10 18.48.47.mov
^Crsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52.200.1/rsync/rsync.c(244) [sender=2.6.9]'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So what you're seeing is that even tho the data came from &quot;Camera Uploads&quot;, it got moved to &quot;Camera&quot;.  The issue is obviously directory names with spaces.  And since I had started with an scp approach this meant that rsync was copying up data that it already had in place.  ARRGHH!&lt;/p&gt;

&lt;p&gt;And here's a second pass with a different approach to space encoded filenames:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Dropbox/&quot;Camera Uploads&quot;/ 192.168.1.25:/Users/sjohnson/backups/macbook_air/Dropbox/Camera\ Uploads/
Password:
building file list ... done
./
2017-07-14 18.09.19.jpg
2017-07-14 18.09.37.jpg
2017-07-14 18.09.39.jpg
2017-07-14 18.28.18.jpg
[A bunch of filenames omitted for brevity]
2017-07-30 09.27.13.jpg
2017-07-30 09.27.23.jpg
^Crsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52.200.1/rsync/rsync.c(244) [sender=2.6.9] 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Before the second pass:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ls -ltr Camera | wc -l
      15
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After the second pass&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ScottiMac:Dropbox sjohnson$ ls -ltr Camera | wc -l
      36
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So even after changing how I handled the destination filename, it still went to &quot;Camera&quot;.  Double ARGH.&lt;/p&gt;

&lt;p&gt;So what's the obvious workaround when rsync seems to entirely fsck up OSX filenames with spaces?  I'm sure there are other options but my approach was drop dead simple, rename each folder on source and destination from:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Camera Uploads
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Camera_Uploads
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and re-run the sync command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Dropbox/Camera_Uploads/ 192.168.1.25:/Users/sjohnson/backups/macbook_air/Dropbox/Camera_Uploads/
Password:
building file list ... done
.DS_Store

sent 18.87K bytes  received 1.64K bytes  8.21K bytes/sec
total size is 4.57G  speedup is 222553.34
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;problem-the-second---excluded-directories&quot;&gt;Problem the Second - Excluded Directories&lt;/h1&gt;

&lt;p&gt;My next issue was that I wanted to exclude the Library directory from the files being synced.  This would eliminate all the giant Docker files that are stored in Library (and Library mostly isn't needed since it is Application level stuff; not really user data).&lt;/p&gt;

&lt;p&gt;Here was my first attempt:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ rsync -avh --exclude '/Users/sjohnson/Library/' -e ssh ~ 192.168.1.25:/Users/sjohnson/backups/seas
Password:
building file list ... rsync: opendir &quot;/Users/sjohnson/Library/Application Support/CallHistoryTransactions&quot; failed: Operation not permitted (1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So that clearly failed.  Now I've long been aware that Apple has old versions of core open source tools like rsync, so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜ rsync --version
rsync  version 2.6.9  protocol version 29
Copyright (C) 1996-2006 by Andrew Tridgell, Wayne Davison, and others.
&amp;lt;http://rsync.samba.org/&amp;gt;
Capabilities: 64-bit files, socketpairs, hard links, symlinks, batchfiles,
              inplace, IPv6, 64-bit system inums, 64-bit internal inums

rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you
are welcome to redistribute it under certain conditions.  See the GNU
General Public Licence for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Clearly the 2006 copyright date is a problem.  This calls for brew!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install rsync
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, naturally, brew does &lt;a href=&quot;https://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html&quot;&gt;shell magic trickery&lt;/a&gt; that messed up for me.  Happily tho rsync is just an executable that I can fully path to (all brew executables always end up in /usr/local/bin):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/rsync --version
rsync  version 3.1.3  protocol version 31
Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.
Web site: http://rsync.samba.org/
Capabilities:
    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,
    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,
    append, ACLs, xattrs, iconv, symtimes, no prealloc, file-flags

rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you
are welcome to redistribute it under certain conditions.  See the GNU
General Public Licence for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and that still failed but here was the magic (and Virginia, yes, the error was &lt;strong&gt;all damn mine&lt;/strong&gt;, not the version of rsync):&lt;/p&gt;

&lt;p&gt;&quot;Excluding a specific directory is same as excluding a file, just pass the relative path to the directory to the –exclude option&quot; from &lt;a href=&quot;https://linuxize.com/post/how-to-exclude-files-and-directories-with-rsync/&quot;&gt;Rsync Exclusion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So that made my rsync command this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh --exclude 'Library/' -e ssh ~ 192.168.1.25:/Users/sjohnson/backups/seas
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that worked like a charm.  Sigh.  Always read the docs well if at all possible.&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/07/24/bullshite-rsync-subtleties.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/07/24/bullshite-rsync-subtleties.html</guid>
        
        <category>osx</category>
        
        <category>rsync</category>
        
        <category>mac</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Getting Around the Makara ActiveRecord Proxy</title>
        <description>&lt;p&gt;One of the key approaches to database scalability is the use of a replica server so that read only queries (i.e. SELECT queries) get shunted away from the master database.  When you use a framework based approach to development such as Rails, this is generally implemented as an ActiveRecord connector that sits between your SQL and the server on which it gets executed.  One such example is &lt;a href=&quot;https://github.com/taskrabbit/makara&quot;&gt;Makara&lt;/a&gt; from TaskRabbit.&lt;/p&gt;

&lt;p&gt;The problem here is that not all SELECT queries are created equally and not all select queries can run correctly on a replica.  I recently had the situation where a given query was complex enough (think 500+ lines of select query) that it could only execute on the replica server maybe 3 times out of 10 with a 45 plus second runtime.  I was assured by the query author that this would execute correctly on the production database.  And while I was absolutely dubious about this, I realized that there was literally no way to prove this without getting around Makara.&lt;/p&gt;

&lt;p&gt;I looked at Makara and like a lot of gems, I didn't find the documentation much to my liking (although I had a hint that if I got funky with it, it might work) but then I saw this little snippet:&lt;/p&gt;

&lt;p&gt;&quot;Calls inside a transaction will always be sent to the master (otherwise changes from within the transaction could not be read back on most transaction isolation levels)&quot;&lt;/p&gt;

&lt;p&gt;And that gave me this example (not the real sql; just something I had open in a db console):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;results = ActiveRecord::Base.transaction do 
  ActiveRecord::Base.connection.select_rows
  (&quot;
  select user_id, date_created_at, sum(int_val) from metrics where habit_id = 2 
  group by date_created_at order by date_created_at desc LIMIT 10;
  &quot;) 
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, sure enough, that worked.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/23/getting-around-the-makara-activerecord-proxy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/23/getting-around-the-makara-activerecord-proxy.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Need to Write</title>
        <description>&lt;p&gt;I'm a long time blogger and from time to time I get people asking me how I produce as many words as I do.  I know a few people looking to start writing projects and I thought I'd put together a few notes on the topic of how I'm productive.&lt;/p&gt;

&lt;h1 id=&quot;my-guidelines-for-writing-productively&quot;&gt;My Guidelines for Writing Productively&lt;/h1&gt;

&lt;p&gt;Here is the quick version of my writing guidelines:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Break the tyranny of the file&lt;/li&gt;
  &lt;li&gt;Write in smaller chunks - never chapters&lt;/li&gt;
  &lt;li&gt;Write don't format&lt;/li&gt;
  &lt;li&gt;Look into different writing tools&lt;/li&gt;
  &lt;li&gt;Realize that no one thing you write matters all that much&lt;/li&gt;
  &lt;li&gt;Measure your progress and improve on it&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;break-the-tyranny-of-the-file&quot;&gt;Break the Tyranny of the File&lt;/h2&gt;

&lt;p&gt;I haven't primarily written using a classical word processor software now since 1987 and I attribute most of my productivity to this one fact, specifically I think that I haven't had to think about files in almost 30 years.  I refer to this as &quot;breaking the tyranny of the file&quot;.  As stupid as it may sound, the need to decide how to name a file, where to locate a file, etc are all cognitive decisions that pull mental energy away from the actual writing process.  And lest you think that in 2019, files are simpler than ever, consider this dialog box from trying to close an unsaved document in Pages:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i.imgur.com/a/CYHtw37.png&quot;&gt;View Pic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm sorry but this doesn't make much sense even to me (the answer here is to click Delete; sigh).&lt;/p&gt;

&lt;p&gt;The easiest way for most people to break the tyranny of the file is to use a content management system like a blog where, yes, there are files but their creation and management is hidden.  As an example, here's how I create something in my blogging tool:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll post &quot;So You Need to Write&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-or- if I want to make a draft that isn't going to go live today:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll draft &quot;So You Need to Write&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that one command builds what I need and I can then open it in my editor.  I never have to worry about filename / location / etc.&lt;/p&gt;

&lt;h2 id=&quot;write-in-smaller-chunks---never-chapters&quot;&gt;Write in Smaller Chunks - Never Chapters&lt;/h2&gt;

&lt;p&gt;Along with breaking the tyranny of the file comes the idea of working in small chunks - think sections (or posts) not chapters.  The longer the thing that you are &quot;writing&quot; is, the harder it is to hold it all in your head at once.  If you can write a long work it at the section / post level and then composite it together at the end you will find that each section is easier to write.&lt;/p&gt;

&lt;p&gt;And if you are a software developer trying to write, consider this analogy.  At one time or another, we've all written functions that were longer than one screen.  Remember how hard it was to keep all of that function in your head.  Well, working at the section level is analogous.&lt;/p&gt;

&lt;h2 id=&quot;write-dont-format&quot;&gt;3. Write Don't Format&lt;/h2&gt;

&lt;p&gt;I view formatting as the absolute bane of writing.  Tools like Microsoft Word make formatting so seductive because you feel &quot;productive&quot; but, really, you aren't being productive when you are formatting, you are just &quot;twiddling&quot; with the content.  To me one of the worst advances in modern software for writing productivity is the full integration of formatting tools right into the writing process.  From my perspective, you write and then you format as a final step before output.&lt;/p&gt;

&lt;p&gt;Note: Structural formatting like headings, inline emphasis such as bold facing / italics are fine.  I'm more referring to the &quot;let's see what this looks like with a different font / margins / etc&quot; type of twiddling.&lt;/p&gt;

&lt;h2 id=&quot;look-into-different-writing-tools&quot;&gt;4. Look Into Different Writing Tools&lt;/h2&gt;

&lt;p&gt;To paraphrase McLuhan's famous &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/The_medium_is_the_message&quot;&gt;The Medium is the Message&lt;/a&gt;&quot;, I would argue that the tool alters the output.  If all you have ever used to write is Microsoft Word, well, there is a whole world out there of writing tools that will dramatically affect how you write.  I cover these in the next section and I would strongly, strongly argue that you at least explore different tools.&lt;/p&gt;

&lt;p&gt;Note: If you're addicted to some of the actually excellent tools inside Word such as the grammar checker then you can always do what I do and copy and paste a chunk of writing into Word, let the grammar checker give you changes and then move it back.  I do this regularly.&lt;/p&gt;

&lt;h2 id=&quot;realize-that-no-one-thing-you-write-matters-all-that-much&quot;&gt;5. Realize That No One Thing You Write Matters All That Much&lt;/h2&gt;

&lt;p&gt;When you write a lot, you come to realize that no one thing actually matters all that much.  I tend to view writing as a corpus – some bits are stronger than others and the value is in the totality.  I no longer fret about if a particular piece is perfect because I have accepted that some will be and some won't be.&lt;/p&gt;

&lt;h2 id=&quot;measure-your-progress-and-improve-on-it&quot;&gt;6. Measure Your Progress and Improve On It&lt;/h2&gt;

&lt;p&gt;One of the best changes I've made for being a productive writer in 2019 is that I now benchmark my progress and I use it to motivate myself.  Here's an example&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgur.com/a/IJF29FK&quot;&gt;View Pic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I should note that my numbers here are lower than they would normally be.  A big part of the reason for that is that I wrote the tooling driving the screenshot above (new product coming soon).&lt;/p&gt;

&lt;h1 id=&quot;writing-tools&quot;&gt;Writing Tools&lt;/h1&gt;

&lt;p&gt;For the purposes of being transparent, I will tell you what writing tools I use.  But, for the sake of kittens everywhere, DO NOT use what I use.  My tool choices would likely lead to incessant, Tourette's style cursing.  I use idiosyncratic tools because I've been doing this forever and I'm an uber nerd.  These work for me and likely don't work for you.&lt;/p&gt;

&lt;h2 id=&quot;my-personal-writing-tools&quot;&gt;My Personal Writing Tools&lt;/h2&gt;

&lt;p&gt;I use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate&lt;/a&gt; as an editor&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown&lt;/a&gt; as a drop dead simple content formatter&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; as a blogging tool&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fuzzygroup/blog&quot;&gt;Github&lt;/a&gt; for content management (and Jekyll is intimately tied to github)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup&quot;&gt;gist.github.com&lt;/a&gt; for generating temporary content versions that I can show people a quick draft.  &lt;a href=&quot;https://nickjanetakis.com/&quot;&gt;Nick Janetakis&lt;/a&gt; taught me this trick.  Thanks Nick!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com&quot;&gt;Google Docs&lt;/a&gt; if I need a way for people to edit something but Google Docs WILL NOT re-produce Markdown so it is a suck ass, bullcrap tool. Argh.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To repeat, do not try and use these tools the way I do.  After all, I modeled my writing process after the way I do software development right down to using git …&lt;/p&gt;

&lt;h3 id=&quot;a-note-about-github&quot;&gt;A Note About Github&lt;/h3&gt;

&lt;p&gt;I thought my comment about using Github / git for managing my writing was my being a typically overly nerdy developer and Mark Bernstein gave me some interesting feedback:&lt;/p&gt;

&lt;p&gt;&quot;This might actually be OK advice for writers; I liked the Pragmatic Programmer’s advice, back in the day, to keep all your writing in subversion.  It's possible that Time Machine obviates some of the need for this, but it's a good idea.&quot;&lt;/p&gt;

&lt;p&gt;If you are committed to using a plain ASCII format for writing such as MarkDown or HTML then Github / git might actually be something to consider.  Do bear in mind that Git is an industrial strength tool and &lt;a href=&quot;https://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html&quot;&gt;not always the easiest thing to use&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tools-you-should-consider&quot;&gt;Tools You Should Consider&lt;/h2&gt;

&lt;p&gt;Here are the writing tools that you should look at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.com/&quot;&gt;WordPress&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eastgate.com/Tinderbox/&quot;&gt;Tinderbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eastgate.com/storyspace/&quot;&gt;Storyspace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.literatureandlatte.com/scrivener/overview&quot;&gt;Scrivener&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wordpress&quot;&gt;WordPress&lt;/h3&gt;

&lt;p&gt;If you are looking to write daily and just build that skill then I strongly recommend that you blog.  I've been blogging now since 2002 and I was one of the authors on the &lt;a href=&quot;https://www.amazon.com/Essential-Blogging-Selecting-Doctorow-Paperback/dp/B00ME3RFYA/&quot;&gt;O'Reilly Essential Blogging book&lt;/a&gt; (by the way O'Reilly, I've never once gotten a royalty check – did no copies ever sell?).  Anyway, blogging is a drop dead simple way to write that incorporates a lot of my approaches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Break the tyranny of the file&lt;/li&gt;
  &lt;li&gt;Write in smaller chunks&lt;/li&gt;
  &lt;li&gt;Write Don't Format&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And if you're going to blog then WordPress is a damn fine way to do it.  And hosted WordPress is both easy and cheap; you don't need your own server.  Recommended.&lt;/p&gt;

&lt;h3 id=&quot;tinderbox--storyspace&quot;&gt;Tinderbox / Storyspace&lt;/h3&gt;

&lt;p&gt;I'm covering these tools together because they both come from the same creative mind and, to me, they are heavily interlinked (despite being different products).  Tinderbox and Storyspace are both more tools for thinking about / planning what you have to write than the writing itself.  Both tools are heavily oriented around graphical views of the structure of your writing.  And Tinderbox is specifically designed for note taking.&lt;/p&gt;

&lt;p&gt;Here is some commentary from the author:&lt;/p&gt;

&lt;p&gt;&quot;Storyspace 3 works seamlessly with Tinderbox, with which it shares files. Tinderbox is designed for making, visualizing, and analyzing notes, making it ideal for the early stages of ambitious projects. Storyspace is designed for writing and reading interlinked narrative; many writers will move freely between Tinderbox and Storyspace.&quot;&lt;/p&gt;

&lt;h3 id=&quot;scrivener&quot;&gt;Scrivener&lt;/h3&gt;

&lt;p&gt;Scrivener is the best thought-out tool I've seen for writing long form works (think books / novels) in a damn long time.   With a focus on structural views and working in small chunks, Scrivener addresses my top three concerns (tyranny of the file / smaller chunks / write don't format).  You have to be open to really learning a new tool to use Scrivener, but it is worth it.&lt;/p&gt;

&lt;h3 id=&quot;disclaimers&quot;&gt;Disclaimers&lt;/h3&gt;

&lt;p&gt;Matt Mullenweg, the founder of WordPress, is a friend and one of the coolest folks I know online.  But despite that bias, WordPress is still damn awesome.&lt;/p&gt;

&lt;p&gt;Tinderbox and Storyspace are both written by Mark Bernstein who is also a friend and has been doing this stuff even longer than I have.  I met Mark back in '87 when we both attended the first ACM Conference on Hypertext at University of North Carolina, Chapel Hill.  And while I have done a lot of different things career wise, Mark has focused exclusively on writing tools and brought a lot of good into the world that way.  I respect him greatly for this.&lt;/p&gt;

&lt;p&gt;Mark Bernstein read an early draft of this post and gave me a number of great changes.  Thank you Mark!&lt;/p&gt;

&lt;p&gt;All of the techniques above I have used extensively – for non fiction writing.  I have never tried them in a fiction context.  I suspect that they would work but I can't attest to that.&lt;/p&gt;

&lt;h1 id=&quot;in-closing&quot;&gt;In Closing&lt;/h1&gt;

&lt;p&gt;Someone I used to know once made a wonderful observation on how to be a successful writer.  It was short, succinct and beautiful in its clarity:&lt;/p&gt;

&lt;p&gt;“Fingers on keys; ass in chair”&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/writing/2019/07/22/so-you-need-to-write.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/writing/2019/07/22/so-you-need-to-write.html</guid>
        
        <category>writing</category>
        
        <category>blogging</category>
        
        <category>heinlein</category>
        
        
        <category>writing</category>
        
      </item>
    
      <item>
        <title>Backing Mac to Mac via scp / rsync</title>
        <description>&lt;p&gt;I found myself turning my old Macbook Air over to my wife to use when the cursed butterfly keyboard on her new MacBook died.  And even tho I had theoretically used Dropbox to sync my data with other machines, a quick check on this machine revealed something like 200 top level directories in ~/Dropbox while a check against my &quot;current&quot; machine revealed only 148 top level directories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHAT THE FERENGI Dropbox !!!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And that convinced me that I needed to run a backup on this machine before I turned it over to my wife.  Naturally I found that a Time Machine backup failed and, honestly, I found myself with little desire, inclination or will to fix Time Machine.&lt;/p&gt;

&lt;p&gt;This led me to attempt to backup this Mac via an scp command to my big desktop Mac which has plenty of free disc space.  So I used this shell command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp -p -r ~/Downloads/* 192.168.1.25:/Users/sjohnson/backups/macbook_air/Downloads/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;as a test command to backup the ~/Downloads directory from one machine to another.  And, annoyingly, I found that after only a few gigabytes, my scp would fail with a networking error.  After trying this again (and again and again), I came to the conclusion that I was fighting an untenable battle that felt a lot like a land war in Asia.  And this led me to Google which, rapidly, led me to rsync, a tool I love but which I never seem to think to use.  Here was the command I finally came up with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avh -e ssh Downloads/* 192.168.1.25:/Users/sjohnson/backups/macbook_air/Downloads/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In case you aren't aware, the benefit to &lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;rsync&lt;/a&gt; is that it will keep track of your progress to date and resume incomplete copies.&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/07/22/backing-mac-to-mac-via-scp-rsync.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/07/22/backing-mac-to-mac-via-scp-rsync.html</guid>
        
        <category>osx</category>
        
        <category>backup</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Employee Transitions - Don't Kill Your Organizational Memory</title>
        <description>&lt;p&gt;A lot of companies have moved to organizational chat systems like Slack or the late, unlamented HipChat.  And, from what I have seen, none of those companies have ever dealt with employee transitions in a remotely rational fashion.  Here's what generally happens:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Employee leaves.&lt;/li&gt;
  &lt;li&gt;Slack / HipChat / whatever chat account is promptly deleted.&lt;/li&gt;
  &lt;li&gt;I lose all access to ANY and ALL conversations with that previous employee forever.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What.  The.  &lt;a href=&quot;https://en.wikipedia.org/wiki/Fsck&quot;&gt;Fsck&lt;/a&gt;*?  This makes no actual sense.  Chat has become the organizational memory for what happens in a company.  Now let's move to an actual, specific example.  At my day job we just had a manager depart during a re-org.  These things happen and I really don't know the specifics.  What I do know is that this was my damn manager and he was directly involved in the project I'm on.  If I hadn't, &lt;strong&gt;painstakingly&lt;/strong&gt; copied every single slack message he and I ever had, all 20 odd plus pages of them, to a text file, I would have lost much of my knowledge of the project including important details like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Who at the client I was supposed to speak with&lt;/li&gt;
  &lt;li&gt;The API keys that define connectivity&lt;/li&gt;
  &lt;li&gt;The schedule&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I might have been able to remember the people at the client and I do have a vague memory of the schedule but a high entropy api key like this:&lt;/p&gt;

&lt;p&gt;afdjklfdsaj294u324,asdfmafrwae6435%1 (not the real api key; I'm annoyed but not an idiot)&lt;/p&gt;

&lt;p&gt;I'll never remember that.  And since I wasn't ready to use it yet, I just left it in my chat client for the time being.  Is this the right place for an API key?   Nope.  But in the real world, chat is often the communications mechanism for delivery of things like API keys.&lt;/p&gt;

&lt;h1 id=&quot;in-closing-email-versus-chat&quot;&gt;In Closing, Email versus Chat&lt;/h1&gt;

&lt;p&gt;It is always interesting to me that organizations would never delete emails that were sent to me from employees who have left (I just confirmed that I have every email ever from employees who quit).  So why is chat different?&lt;/p&gt;

&lt;p&gt;*Yes this is a slightly more polite, much, much more nerdy way of saying &quot;fuck&quot;.  It refers to the fsck utility which checks file system integrity and the fact that when you need to run fsck, you're first word is generally &quot;fuck&quot;.&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/07/20/employee-transitions-don-t-kill-your-organizational-memory.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/07/20/employee-transitions-don-t-kill-your-organizational-memory.html</guid>
        
        <category>startup</category>
        
        <category>hr</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Using redis-cli on An Encrypted AWS Redis Server</title>
        <description>&lt;p&gt;So I find myself needing to use &lt;a href=&quot;https://redis.io/topics/rediscli&quot;&gt;redis-cli&lt;/a&gt; to modify the keys on a running Redis instance to deal with a few &lt;a href=&quot;https://github.com/mperham/sidekiq/blob/master/Changes.md#413&quot;&gt;Sidekiq issues&lt;/a&gt;.  And, much to my surprise, I can't simply connect to it and make changes because I keep getting &lt;strong&gt;Error: Connection reset by peer&lt;/strong&gt; errors.  A bit of a deep dive taught me this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Our redis instance is encrypted both at rest and in transit&lt;/li&gt;
  &lt;li&gt;The way to do this is to connect to it via stunnel which builds a secure tunnel&lt;/li&gt;
  &lt;li&gt;You have to supply the password on the command line to redis-cli; this surprised me because it leaves the password in the shell history and that's fscking awful for security; grumble, grumble, grumble&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some references that I followed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html&quot;&gt;AWS Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://datanextsolutions.com/blog/how-to-fix-redis-cli-error-connection-reset-by-peer/&quot;&gt;Data Next Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the steps I followed:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I started by installing stunnnel.&lt;/li&gt;
  &lt;li&gt;I continued by building a mapping for stunnel to the redis server I wanted to mess with.  This required getting the redis server url from our application's settings.&lt;/li&gt;
  &lt;li&gt;Start the tunnel&lt;/li&gt;
  &lt;li&gt;Verify that the tunnel is running.&lt;/li&gt;
  &lt;li&gt;I connected to redis-cli passing the -a password option.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I was able to then verify that redis-cli works correctly by doing a simple set / get:&lt;/p&gt;

    &lt;p&gt;set a &quot;hello&quot;
get a&lt;/p&gt;

    &lt;p&gt;&quot;hello&quot;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And this positioned me for being able to run a redis-cli keys command.  Of course the keys routine I needed to run was error full but that's another story …&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/redis/2019/07/18/using-redis-cli-on-an-encrypted-aws-redis-server.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/redis/2019/07/18/using-redis-cli-on-an-encrypted-aws-redis-server.html</guid>
        
        <category>redis</category>
        
        <category>aws</category>
        
        
        <category>redis</category>
        
      </item>
    
      <item>
        <title>Adding Quick and Dirty JSON Serialization to Database Objects</title>
        <description>&lt;p&gt;So let's say that you're building a system where you need to configure things like measurements and you know that some people like pounds and some people like kilograms.  One option is to hard code a database structure where you have an attribute for each.  And while that works, there are always going to be some more measurement types in the world and this approach leads you to an endless array of sucking database column changes.&lt;/p&gt;

&lt;p&gt;Another approach is to add a text column to your database and store a JSON blob in it.  Rails actually makes this pretty easy with a migration and a declaration:&lt;/p&gt;

&lt;p&gt;Migration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AddUnitPreferencesJsonToUsers &amp;lt; ActiveRecord::Migration[5.2]
  def change
    add_column :users, :options, :text
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Declaration at the top of your class:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serialize :options, JSON
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will now add an options column to your table where you can store anything.  And since there is a serialize call, it will even act like an attribute so you can say something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user = User.first
user.options
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and get back:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;length&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;inches&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;weight&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;pounds&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;hours&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if you really, really like working on a REPL like I do then you can set this globally for all users with this snippet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;users = User.all
users.each do |user|
  user.options = options = { &quot;length&quot; =&amp;gt; &quot;inches&quot;, &quot;weight&quot; =&amp;gt; &quot;pounds&quot;, &quot;time&quot; =&amp;gt; &quot;hours&quot; }
  user.save
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Easy - no fuss, no muss, no need to write code in an editor for a one time, one off fix.&lt;/p&gt;

&lt;p&gt;And just to be clear, you can do a better job with this by really following the instructions.  Here's an &lt;a href=&quot;https://codeburst.io/json-serialized-columns-with-rails-a610a410fcdf&quot;&gt;example from CodeBurst&lt;/a&gt; which includes custom serializers.  Recommended&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/18/adding-quick-and-dirty-json-serialization-to-database-objects.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/18/adding-quick-and-dirty-json-serialization-to-database-objects.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Never Type Bundle Exec Again</title>
        <description>&lt;p&gt;The command prefix &quot;bundle exec&quot; is something that I've typed probably a thousand, thousand, thousand times.  The bundle exec prefix goes in front of so many damn Rails commands and while I've seen other developers alias it to &quot;be&quot;, that never felt right to me.  And now there's a workaround where I don't even have to type that thanks to the miracle of &lt;a href=&quot;https://en.wikipedia.org/wiki/Z_shell&quot;&gt;Z-Shell&lt;/a&gt; and &lt;a href=&quot;https://ohmyz.sh/&quot;&gt;Oh My Zsh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Edit your ~/.zshrc and add search for the word plugins and then change that line to this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins=(git bundler brew gem heroku)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then you and to do a source on it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then you can do this magic:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g migration add_frequency_and_economic_value_to_habits
  invoke  active_record
  create    db/migrate/20190717211807_add_frequency_and_economic_value_to_habits.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that makes my life better by 13 characters that I'm never going to have to type again.  Honest to the FSM, I'm mildly aroused right now …&lt;/p&gt;

&lt;p&gt;And thank you to &lt;a href=&quot;https://coderwall.com/p/weixga/no-more-bundle-exec-with-oh-my-zsh&quot;&gt;CoderWall&lt;/a&gt; for publishing this originally.&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/17/never-type-bundle-exec-again.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/17/never-type-bundle-exec-again.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Your Daily Remote Worker Management Tip</title>
        <description>&lt;p&gt;Dear Manager of a Remote Employee,&lt;/p&gt;

&lt;p&gt;My apologies in advance that this is bitter and salty like the code brewed coffee that I just swilled in a frazzle but I find myself at the end of my rope. And so I will give you a remote worker management tip.&lt;/p&gt;

&lt;p&gt;When a remote worker, particularly when it is an individual who has worked for you for more than a year, says &quot;we need to work on XYZ in person&quot;, it basically amounts to &quot;Oh my lord, we are so damn screwed&quot;.  AND YOU PAY ATTENTION TO IT AND ARRANGE IT.&lt;/p&gt;

&lt;p&gt;Sigh.&lt;/p&gt;

&lt;p&gt;Signed, 
Your Remote Worker&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/07/16/your-daily-remote-worker-management-tip.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/07/16/your-daily-remote-worker-management-tip.html</guid>
        
        <category>startup</category>
        
        <category>remote</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Getting Around Spotlight's Madness</title>
        <description>&lt;p&gt;Spotlight is the Apple / OSX search engine and I find it absolutely, blindingly maddening.  The way Spotlight seems to work, when you use it from the OSX search icon, is that it tells you what it found but not &lt;strong&gt;where&lt;/strong&gt; it found it.  And I get that filesystems are passe and we are supposed to be in a post file world, blah, blah, blah.  And I call bullshite on that.  I'm a professional software developer and knowing where things actually exist is actually fricking important.&lt;/p&gt;

&lt;p&gt;And here's how to do that with Spotlight – use mdfind directly.  mdfind is the underlying  command line executable that also executes spotlight searches.  Earlier today I was struggling to remember the name of a Ruby gem and all I knew was that it had &quot;icon&quot; in its name.  So here's what I did:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdfind icon -onlyin /Users/sjohnson/Dropbox/fuzzygroup/ | grep Gemfile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this command looked for the string of characters &quot;icon&quot; but only in the directory where I keep all of my many, many Rails projects.  And then I fed it thru a grep command to find only the references to Gemfile.  And this very quickly led me to &lt;a href=&quot;https://github.com/victorgama/identicon&quot;&gt;identicon&lt;/a&gt; which is a gem which builds &lt;a href=&quot;https://meta.stackexchange.com/questions/17443/how-is-the-default-user-avatar-generated&quot;&gt;Stack Overflow like abstract user avatars&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 16 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2019/07/16/getting-around-spotlight-s-madness.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2019/07/16/getting-around-spotlight-s-madness.html</guid>
        
        <category>osx</category>
        
        <category>spotlight</category>
        
        <category>mdfind</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Fixing ByeBug Madness</title>
        <description>&lt;p&gt;I learned an interesting and subtle trick today.  As is all too true lately, my pairing partner, &lt;a href=&quot;https://csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt;, gets the credit for this one.  I had the ruby debugger, byebug, embedded in a view context and I noticed that while this should have brought up a breakpoint, it way, way, way, way overstepped the break point and shot beyond, going into core Rails stuff.  And then Sean told me this trick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%# a = 1; byebug; b = 2; %&amp;gt;
&amp;lt;%= link_to &quot;Sign in with OAuth 2 provider&quot;, user_doorkeeper_omniauth_authorize_path, class: &quot;btn btn-primary&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Apparently byebug has a known issue with execution context and wrapping the byebug call inside two assignment statements gives it enough of an execution context for it to stop properly.&lt;/p&gt;

&lt;p&gt;And yes this is a sucky thing but all tools have issues and this one can be trivially worked around.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/07/16/fixing-byebug-madness.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/07/16/fixing-byebug-madness.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>When RbEnv, well, Won't RbEnv - Fixing Shell Extension Madness</title>
        <description>&lt;p&gt;If you have ever used Ruby's &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;, or &lt;a href=&quot;https://rvm.io/&quot;&gt;rvm&lt;/a&gt; or &lt;a href=&quot;https://virtualenv.pypa.io/en/latest/&quot;&gt;Python's virtual env&lt;/a&gt; or any of the different approaches to managing multiple editions of the same language binary on a machine, this post is for you.&lt;/p&gt;

&lt;p&gt;All of these tools tend to work the same way – they inject their own pathing in front of the system path so that the correct version of a binary gets called.  Here's an example from my development system when rbenv wasn't working:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which ruby
/usr/bin/ruby

ruby --version
ruby 2.3.7p456 (2018-03-28 revision 63024) [universal.x86_64-darwin18]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And when I made rbenv work, here's what I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which ruby
/Users/sjohnson/.rbenv/shims/ruby

ruby --version
ruby 2.6.2p47 (2019-03-13 revision 67232) [x86_64-darwin18]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Technically I should have been able to fix this issue by using this rbenv command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbenv local 2.6.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And if that didn't work then this should have:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbenv rehash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And either of those should have made things work by injecting into my path the correct values.  Sadly, albeit not surprisingly, it did not.  My personal development style seems to have a high entropy value and I suspect that's why but that's a different argument regarding excessive uptime, an abject refusal to reboot my machine, etc.&lt;/p&gt;

&lt;p&gt;Anyway here's the work around:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /to/my/development/directory
export PATH=/Users/sjohnson/.rbenv/shims:/Users/sjohnson/.rbenv/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My pairing partner &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; corrected this to be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And while he's almost certainly right, I haven't tested his version so both are here.  Pick and choose as you like.&lt;/p&gt;

&lt;p&gt;The bottom line here is that shell extensions – which is what rbenv, rvm and virtualenv actually are – are fragile.  And if you understand what's going on underneath them, fixing the issue actually is pretty simple.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/07/10/when-rbenv-well-won-t-rbenv-fixing-shell-extension-madness.html</guid>
        
        <category>ruby</category>
        
        <category>rbenv</category>
        
        <category>rails</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>RSpec - Uninitialized Constant Errors on Model Tests</title>
        <description>&lt;p&gt;This one is an easy one but still tripped me up.  I'm working on a project where generators on RSpec stub files are turned off (don't ask; disagreement about the utility of generators between two senior engineers and I lost) and I just got this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rspec spec/models/metric_type_spec.rb

An error occurred while loading ./spec/models/metric_type_spec.rb.
Failure/Error:
  RSpec.describe MetricType, type: :model do
    describe &quot;#val_col&quot; do
      it &quot;should return int_val for word_count&quot; do
        h = FactoryBot.create(:metric_type_word_count)
        expect(h.val_col).to eq :int_val
      end

      it &quot;should return float_val for weight&quot; do
        h = FactoryBot.create(:metric_type_weight)
        expect(h.val_col).to eq :float_val

NameError:
  uninitialized constant MetricType
# ./spec/models/metric_type_spec.rb:1:in `&amp;lt;top (required)&amp;gt;'
No examples found.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And the error turned out to be that this line was missing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require 'rails_helper'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That line is normally inserted by the generator but I built this spec file from scratch and just missed it.  I've stared at that line a thousand, thousand times over the years but I suspect I never realized that what it did was tell RSpec something like this:&lt;/p&gt;

&lt;p&gt;&quot;Read the Rails directory structure and autoload all classes in the directories below /app&quot;.  Doh!&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/07/10/rspec-uninitialized-constant-errors-on-model-tests.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/07/10/rspec-uninitialized-constant-errors-on-model-tests.html</guid>
        
        <category>rails</category>
        
        <category>rspec</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Bad Ansible Error Message - No handler was ready to authenticate</title>
        <description>&lt;p&gt;Of all the multitude of sins that software engineers wreak upon the world, I have a personal hatred for crappy error messages.  Crappy error messages are an unforgivable sin that condemn all the people that ever get the error message to waste inordinate amounts of time on thinking, tinkering, google and more.  Here is my command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python /etc/ansible/inventory/ec2.py --list    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this is doing is executing the Ansible ec2.py script which talks to AWS and returns a list of resources.  And here is today's favorite crappy error message:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Traceback (most recent call last):
  File &quot;/etc/ansible/inventory/ec2.py&quot;, line 1701, in &amp;lt;module&amp;gt;
    Ec2Inventory()
  File &quot;/etc/ansible/inventory/ec2.py&quot;, line 272, in __init__
    self.do_api_calls_update_cache()
  File &quot;/etc/ansible/inventory/ec2.py&quot;, line 539, in do_api_calls_update_cache
    self.get_instances_by_region(region)
  File &quot;/etc/ansible/inventory/ec2.py&quot;, line 593, in get_instances_by_region
    conn = self.connect(region)
  File &quot;/etc/ansible/inventory/ec2.py&quot;, line 557, in connect
    conn = self.connect_to_aws(ec2, region)
  File &quot;/etc/ansible/inventory/ec2.py&quot;, line 582, in connect_to_aws
    conn = module.connect_to_region(region, **connect_args)
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/ec2/__init__.py&quot;, line 66, in connect_to_region
    connection_cls=EC2Connection, **kw_params)
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/regioninfo.py&quot;, line 220, in connect
    return region.connect(**kw_params)
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/regioninfo.py&quot;, line 290, in connect
    return self.connection_cls(region=self, **kw_params)
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/ec2/connection.py&quot;, line 103, in __init__
    profile_name=profile_name)
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/connection.py&quot;, line 1100, in __init__
    provider=provider)
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/connection.py&quot;, line 569, in __init__
    host, config, self.provider, self._required_auth_capability())
  File &quot;/var/lib/jenkins/.local/lib/python2.7/site-packages/boto/auth.py&quot;, line 1021, in get_auth_handler
    'Check your credentials' % (len(names), str(names)))
boto.exception.NoAuthHandlerFound: No handler was ready to authenticate. 1 handlers were checked. ['HmacAuthV4Handler'] Check your credentials
jenkins@ip-172-31-19-205:/home/ubuntu$ sudo^C
jenkins@ip-172-31-19-205:/home/ubuntu$ mkdir ~/.aws
jenkins@ip-172-31-19-205:/home/ubuntu$ mkdir ~/.aws/credentials
jenkins@ip-172-31-19-205:/home/ubuntu$ rmdir ~/.aws/credentials
jenkins@ip-172-31-19-205:/home/ubuntu$ nano ~/.aws/credentials
jenkins@ip-172-31-19-205:/home/ubuntu$  python /etc/ansible/inventory/ec2.py --list
{
  &quot;_meta&quot;: {
    &quot;hostvars&quot;: {
      &quot;199.31.18.123&quot;: {
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The trick here was reading enough of it to find &quot;No handler was ready to authenticate.&quot;  I discovered this while setting up a new &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; server and the error was that Ansible's AWS credentials hadn't yet been copied up the server in the directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/jenkins/.aws/credentials
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once I put them there this problem went away (another problem came up immediately but one down and N thousand to go).&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2019/07/08/bad-ansible-error-message-no-handler-was-ready-to-authenticate.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2019/07/08/bad-ansible-error-message-no-handler-was-ready-to-authenticate.html</guid>
        
        <category>ansible</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Time Bounding</title>
        <description>&lt;p&gt;Time Bounding is one of those brilliant techniques that is so simple that you often don’t even think to use it.  The idea behind time bounding is simple — some things are only worth so much time.  Here’s an example of a ticket that I wrote not 5 minutes ago for one of my engineers:&lt;/p&gt;

&lt;p&gt;Hi, 
  I'd like to put at the bottom of the intranet a list of anyone’s most recent tickets.  Can you learn to use the lighthouse gem to get a list of a given user's tickets?&lt;/p&gt;

&lt;p&gt;This should be time bounded to no more than 60 minutes; it is just installing a gem, getting an API token and getting a list of tickets for a given user.&lt;/p&gt;

&lt;p&gt;And that’s time bounding.  You’ll also notice that I included a description of why I’m only allocating an hour to it — that this is a pretty simple conceptual task:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install a component&lt;/li&gt;
  &lt;li&gt;Get an API token (I.e. Look at a web page)&lt;/li&gt;
  &lt;li&gt;Figure out how to call the API&lt;/li&gt;
  &lt;li&gt;Get back an iterable chunk of data&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The reason for time bounding is that computing things tend to expand to fill all time available.  Engineers are perfectionists and if you don’t put a limit on things — at their start — you can often find that something you expected to take a few hours is now a few days.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Takeaway&lt;/em&gt;: The engineer assigned to this knocked it out in about twice the allocated time.  I added a little bit of polish so we ended up about 2.5x the initial 1 hour.  That’s not bad actually.  And the benefit is that everyone in the company can now see, in one place everyone’s tickets.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/07/02/time-bounding.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/07/02/time-bounding.html</guid>
        
        <category>mtum_chapter4</category>
        
        <category>startup</category>
        
        <category>mtum</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Programming versus Software Engineering or The Parable of Jim and Ed</title>
        <description>&lt;p&gt;Once upon a time there was an American software company on the fast track to going public in an exploding industry.  Let’s call them &lt;em&gt;D&lt;/em&gt;.  The VP of Engineering was a brilliant engineer named Jim.  Jim is one of those guys who, in a nerd discussion of “what’s your first computer,” always wins because he tells the tale of how he toggled in the boot loader on his KIM-1[1] until his fingers bled.  Jim was, and is, an engineer’s engineer.  All of D’s software was written either in straight C or C + assembly and shipping on DOS and Windows.&lt;/p&gt;

&lt;p&gt;Ed was a new hire, 2 years roughly out of school, who had just joined the company off a job doing AI programming[2] in Manhattan mostly using LISP.  As a new hire, Jim gave Ed a task which was fairly generic and didn’t require knowledge of D’s large code base: write a memory manager.  This was a very abstract task[3] and really required knowing your stuff at a pretty low level.  And while Ed, at the time, obviously wasn’t Jim’s equal, Ed was also damn smart.  He would later go on to a number of senior industry roles ultimately ending up at one of the industry’s largest and most successful companies (but that’s years and years later).  So Ed went off and works on this for about a month.  And he prints it ou[4]t and brings it to Jim for approval.&lt;/p&gt;

&lt;p&gt;Jim takes it, rifles thru the pages, thinks a bit and then says “Ok.  Explain it to me.”  Ed looks at him and says something to the effect of “Well I know it works but it’s now so complex enough that I can’t actually explain it”.  Jim hands it back to him and says “If you can’t explain it, it is not engineering.  Rewrite it.”  And Ed, to his credit, not only finished it faster than the first version but this version he could explain.&lt;/p&gt;

&lt;p&gt;To me that’s the very essence of programming versus software engineering.  Any idiot can be trained to be a programmer but a software engineer is something entirely different.  All engineering is about fully understood, repeatable processes.  And at the very of software engineering there is an element of professionalism and understanding exactly what’s going on.&lt;/p&gt;

&lt;p&gt;I’ve likely told this story to every single engineering team I’ve ever had.  And I’ve had times where I know that an engineer has gone off the reservation and is spiraling in the wrong direction but I felt that it provided this type of teachable moment.  I’m not, yet, the type of engineer that Jim is but one of these days I hope to be.&lt;/p&gt;

&lt;p&gt;￼
[1] Yes readers, before there were keyboards, there were toggle switches.  Think back to 1977 or so.&lt;/p&gt;

&lt;p&gt;[2] The timeframe here was the early 90s so Ed was doing this in the late 80s when AI was hot as the Internet has been since 1995 or so.&lt;/p&gt;

&lt;p&gt;[3] And still is.  Writing a memory manager, 25 years later, is still a damn hard thing.&lt;/p&gt;

&lt;p&gt;[4] Pre-internet guys, pre-internet.  Its what you did.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/07/02/programming-versus-software-engineering-or-the-parable-of-jim-and-ed.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/07/02/programming-versus-software-engineering-or-the-parable-of-jim-and-ed.html</guid>
        
        <category>mtum_chapter1</category>
        
        <category>startup</category>
        
        <category>mtum</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Understanding a Small Organization's Communications Model - Github Issues vs Google Docs vs Slack</title>
        <description>&lt;p&gt;It is not hyperbole to say that communications is the lifeblood of an organization, even a small organization.  And while there are many types of communications tools that you use in an organization, I find that there are three common types:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ticket Tools aka Github Issues or Jira or Trello&lt;/li&gt;
  &lt;li&gt;Documentation Tools such as Google Docs or Microsoft Word&lt;/li&gt;
  &lt;li&gt;Realtime Tools such as Slack or Gitter or Discord&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The obvious question becomes when to use what tool.&lt;/p&gt;

&lt;h1 id=&quot;ticketing-tools&quot;&gt;Ticketing Tools&lt;/h1&gt;

&lt;p&gt;A ticketing tool like Github Issues, Jira or Trello is really a communications message that amounts to &quot;Do this Task&quot;.  Most good ticketing tools allow you to communicate in a bunch of ways including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Do this task (the ticket itself)&lt;/li&gt;
  &lt;li&gt;Clarify it by attaching information to the ticket&lt;/li&gt;
  &lt;li&gt;Engage in back and forth with people via discussion on the ticket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Think of your tickets as an on going communications forum that is &lt;em&gt;task oriented&lt;/em&gt; and results in a deliverable.&lt;/p&gt;

&lt;h1 id=&quot;documentation-tools&quot;&gt;Documentation Tools&lt;/h1&gt;

&lt;p&gt;Back in the old days the only real communications tool was Microsoft Word and a Word document was the be all, end all.  Increasingly it now seems like a full writing environment like Word or Google Docs is what you use when you have to work something out conceptually.&lt;/p&gt;

&lt;h1 id=&quot;realtime-tools&quot;&gt;Realtime Tools&lt;/h1&gt;

&lt;p&gt;Both Slack and Discord are realtime discussion tools.  And what these tools do is give a way for 2 or more people to work out a problem and come to a consensus.  Slack discussions can transpire either synchronously or asynchronously and are a rich medium including attachments, polls, gifs, etc.&lt;/p&gt;

&lt;h1 id=&quot;and-theres-a-flow&quot;&gt;And There's a Flow&lt;/h1&gt;

&lt;p&gt;I wrote this originally because someone was asking me &quot;what tool do I use&quot; and I actually had problems parsing that statement.  To me this is a flow as much as anything.  I find that things might start in Slack, proceed into Google Docs and then into 1 or more Github Issues.  Alternatively you often see a Google Doc split into a half dozen Github Issues.&lt;/p&gt;

&lt;p&gt;At least from an engineering perspective, the output of all of these communications tools is one or more tickets that represent a unit of work to be done.&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-communications-model-github-issues-vs-google-docs-vs-slack.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-communications-model-github-issues-vs-google-docs-vs-slack.html</guid>
        
        <category>software_engineering</category>
        
        <category>startup</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Understanding a Small Organization's Agile Model</title>
        <description>&lt;p&gt;Agile is a an approach to software development that replaces traditional top down project management with a working style  that is characterized by the division of tasks into short phases of work and frequent reassessment and adaptation of plans.  This definition was provided courtesy of Google and I'm not certain as to its exact source.  Here is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Agile_software_development&quot;&gt;Wikipedia description of Agile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Agile is one of those things that most of us have some version of what it means in our heads but everyone seems to have a different set of working practices.  This is my version of agile for how I approach software development in a fast paced, greenfield context.  I have worked this way for about 20 years now and I have found that it is more than agile enough even though I deliberately ignore a lot of the agile concepts.&lt;/p&gt;

&lt;h1 id=&quot;its-all-about-the-ticket&quot;&gt;Its All About the Ticket&lt;/h1&gt;

&lt;p&gt;To me the essence of agile lies in small, fast based units of work.  And that unit of work is generally represented by a ticket whether written in Jira, Github Issues or something else.  The key skill here is decomposing big units of work into small, readily accomplishable chunks that can be done in succession (or in parallel) whether by one individual or several.&lt;/p&gt;

&lt;h1 id=&quot;rapid-regular-deploys&quot;&gt;Rapid, Regular Deploys&lt;/h1&gt;

&lt;p&gt;When you work in an agile context, it is essential that you deploy regularly as this is the only way for your developers to get the real world feedback about their code and whether or not it works.  In 2019 this should ideally be done by a CI server that simply takes submitted code and handles the deploy automatically.&lt;/p&gt;

&lt;h1 id=&quot;regular-refactors&quot;&gt;Regular Refactors&lt;/h1&gt;

&lt;p&gt;If you're going to do agile then one thing that you are inherently committing to is the idea of regular refactors.  Refactoring is the process of taking code that you have written, often recently having written and restructuring it as you understand the problem more deeply.  In an agile context when your understanding of the problem is constantly changing, one way you address this is by committing to refactoring.&lt;/p&gt;

&lt;h1 id=&quot;test-coverage&quot;&gt;Test Coverage&lt;/h1&gt;

&lt;p&gt;Test coverage on code is pretty much explicitly not an agile requirement but I personally find test coverage to be an essential agile tool.  One of the best ways to keep your speed up and be able to refactor regularly is to have test coverage that presents the speed at which you are trying to operate from becoming an issue.&lt;/p&gt;

&lt;h1 id=&quot;incremental-development-of-data-structures&quot;&gt;Incremental Development of Data Structures&lt;/h1&gt;

&lt;p&gt;A classic approach to development is that you start with the underlying data structures or database schema – and you plan it in full.  This is the very essence of &quot;anti-agile&quot; also known as waterfall development but it is still surprisingly comment – even among &quot;agile&quot; folks.  Now part of the reason for this is that many development environments don't lend themselves to incremental schema development but that isn't an excuse.  One of the best aspects of Ruby on Rails from an agile context is that the underlying Rails migration facilities handle incremental schema development pretty much flawlessly.&lt;/p&gt;

&lt;p&gt;Ideally from an agile schema you should be building the schema ticket by ticket as you develop.  And you should never be doing more schema development than is in the ticket (and I know that this gets violated all the time; including by myself).&lt;/p&gt;

&lt;h1 id=&quot;pair-programming-whenever-possible&quot;&gt;Pair Programming Whenever Possible&lt;/h1&gt;

&lt;p&gt;Pair Programming, apply two people to the same ticket at the same time, sharing a screen is still a controversial topic.  Some people take the perspective that it improves code quality.  Other people find that one of the people is loafing while only one person codes.  I find pair programming to be a wonderful agile tool in that it tends to improve code quality and keep developers on track&lt;/p&gt;

&lt;h1 id=&quot;what-i-dont-believe-in-about-agile&quot;&gt;What I Don't Believe In About Agile&lt;/h1&gt;

&lt;p&gt;Here are the things about &quot;agile&quot; that I don't really believe in at all:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cprime.com/resources/what-is-agile-what-is-scrum/&quot;&gt;Scrum / Scrum Master&lt;/a&gt;.  Generally speaking I don't believe in scrum / scrum master because I work in very small teams and I find that very small teams simply get stuff done and there isn't the need for a formal &quot;scrum master&quot;.  I also dislike the term &quot;master&quot; here for the same reason that I dislike &quot;master bedroom&quot;; it has bad connotations imho.  The definition from google for &lt;em&gt;scrum&lt;/em&gt; is &quot;a set of practices used in agile project management that emphasize daily communication and the flexible reassessment of plans that are carried out in short, iterative phases of work.&quot; and to me that's just simply agile.&lt;/li&gt;
  &lt;li&gt;Agile Velocity - I find this to be complete hogwash.  An agile velocity is a metric that is typically calculated by your ticketing system and reflects some sort of &quot;velocity&quot; related to ticket completion.  The reason that I don't find this to be a valid concept is that when you have small teams, a single crappy ticket can entirely pork your &quot;velocity&quot; and since this is a metric, managers tend to take it way too seriously.&lt;/li&gt;
  &lt;li&gt;Sprint - this one I kind of believe in, the idea of organizing your development around short lived goals and then executing on them.  I do get this but I find that when you have continuous deployment, the overall sprint concept is less relevant&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 28 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-agile-model.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/06/28/understanding-a-small-organization-s-agile-model.html</guid>
        
        <category>software_engineering</category>
        
        <category>startup</category>
        
        <category>agile</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Understanding a Small Organization's Git Development Model</title>
        <description>&lt;p&gt;I am actively working on a new codebase for a personal project and I thought it might be instructive to document how I am using Git.  The first thing to understand is that we are using Github at the Organization level which means, yep, paid Github.  Github is pricey but it is absolutely worth it.  Anyway …&lt;/p&gt;

&lt;p&gt;The development style we are using is what I would generally term branch based development.  This means that there are three branches / types of branches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master&lt;/li&gt;
  &lt;li&gt;develop&lt;/li&gt;
  &lt;li&gt;feature branches which are named for their GitHub issue number and then a short word or phrase i.e. 42-poros&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The master branch is ONLY for deployment and should always be kept pristine.  The assumption with any new code base in 2019 is that deployment can happen at any damn time and, ideally, should be automated.&lt;/p&gt;

&lt;p&gt;The develop branch is where development kind of happens.  Ideally you shouldn't work directly in develop but, well, shite happens.  And sometimes commits will happen directly on develop.&lt;/p&gt;

&lt;p&gt;Ideally all work happens in a feature branch and this brings us to the actual git commands that you will use daily.&lt;/p&gt;

&lt;h1 id=&quot;git-commands-i-actually-use-daily&quot;&gt;Git Commands I Actually Use Daily&lt;/h1&gt;

&lt;p&gt;Git is what I would refer to as the &quot;swiss army chainsaw&quot; of version control.  Git is astonishingly powerful and I intentionally use a limited subset of git commands because these commands are how I understand to use Git.  I deliberately use the atomic git commands i.e. create branch is separate (for me) from change into branch because I like to use Git this way; again this is how I understand it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git clone git@github.com:fuzzygroup/job_seeker_dashboard.git – pull down the remote repo into your local working directory&lt;/li&gt;
  &lt;li&gt;git checkout filepath – this checks out a single file from the repo and replaces the existing file EVEN IF THERE ARE LOCAL CHANGES&lt;/li&gt;
  &lt;li&gt;git branch 42-poros – this creates the local branch 42-poros&lt;/li&gt;
  &lt;li&gt;git co 42-poros – this changes into the local branch 42-poros&lt;/li&gt;
  &lt;li&gt;git status – this shows you your current status&lt;/li&gt;
  &lt;li&gt;git branch -d 42-poros – this deletes the branch 42-poros&lt;/li&gt;
  &lt;li&gt;git add . &amp;amp;&amp;amp; git commit -m &quot;rollup commit&quot; – this adds all local files and saves them with a commit message of &quot;rollup commit&quot;&lt;/li&gt;
  &lt;li&gt;git co develop &amp;amp;&amp;amp; git pull origin develop – this changes into the branch and updates develop&lt;/li&gt;
  &lt;li&gt;git rebase origin/develop – this rebases the code in your branch from the code in develop&lt;/li&gt;
  &lt;li&gt;git pull origin develop – this pulls the code in develop from the remote&lt;/li&gt;
  &lt;li&gt;git diff db/schema.rb – show me the differences in schema&lt;/li&gt;
  &lt;li&gt;git log – show me a log of the sequential commits&lt;/li&gt;
  &lt;li&gt;git log –oneline –graph – shows you the git structure&lt;/li&gt;
  &lt;li&gt;git reset HEAD~1 – remove the last 1 commit from git and place them back into the working tree&lt;/li&gt;
  &lt;li&gt;git reset HEAD~2 – remove the last 2 commits from git and place them back into the working tree&lt;/li&gt;
  &lt;li&gt;git stash – temporarily store the work you are currently doing in a local branch so you can change to another branch, do something and easily resume without an add / commit cycle&lt;/li&gt;
  &lt;li&gt;git stash pop – get back the work you stashed&lt;/li&gt;
  &lt;li&gt;git push origin 42-poros – this gives you a url you can use to create a pull request for your code to be reviewed&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;general-git-workflow&quot;&gt;General Git Workflow&lt;/h1&gt;

&lt;p&gt;Here is the general git workflow I use:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to GitHub issues and grab an issue&lt;/li&gt;
  &lt;li&gt;Do a &lt;em&gt;git status&lt;/em&gt; to make sure I don't have any work to commit.&lt;/li&gt;
  &lt;li&gt;Change into develop with &lt;em&gt;git co develop&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Pull from remote to make sure I'm up to date with: &lt;em&gt;git pull origin develop&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Create a branch with: &lt;em&gt;git branch 42-poros&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Change into the branch &lt;em&gt;git co 42-poros&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Do my work locally and when I'm ready, add with: &lt;em&gt;git add .&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Write my commit message with: &lt;em&gt;git commit -m &quot;a message that is hopefully better than this&quot;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Push my code to the server for review with: &lt;em&gt;git push origin 42-poros&lt;/em&gt;  This creates a url you can used to make a &quot;pull request&quot; that another person on the project can review.&lt;/li&gt;
  &lt;li&gt;Change back into develop and lather / rinse / repeat&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;# An Important Note&lt;/p&gt;

&lt;p&gt;When you get yourself into a git badness state.  STOP.  Don't flail foolishly; swallow your pride and &lt;em&gt;ask&lt;/em&gt; an expert.&lt;/p&gt;

&lt;p&gt;Also this article was helped with by the usual reviewer, my buddy &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt;.  Any errors are mine not his.  His git-fu is substantially greater than mine – he's my expert.  Thanks buddy!&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/git/2019/06/27/understanding-a-small-organization-s-git-development-model.html</guid>
        
        <category>software_engineering</category>
        
        <category>git</category>
        
        <category>github</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>If I Was a Science Fiction Author, I Would Read This</title>
        <description>&lt;p&gt;I'm not a science fiction writer.  Nor do I even play one on the Internet but I do know people who are.  Here are two fantastic books that I suspect could easy provide the &quot;science&quot; in your &quot;science fiction&quot;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/How-Absurd-Scientific-Real-World-Problems/dp/0525537090/ref=sr_1_1?crid=UQX5KJ82O5ML&amp;amp;keywords=randall+munroe&amp;amp;qid=1561645604&amp;amp;s=books&amp;amp;sprefix=randall+munr%2Caps%2C279&amp;amp;sr=1-1&quot;&gt;How To&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Thing-Explainer-Complicated-Stuff-Simple/dp/0544668251/ref=sr_1_2?crid=UQX5KJ82O5ML&amp;amp;keywords=randall+munroe&amp;amp;qid=1561645604&amp;amp;s=books&amp;amp;sprefix=randall+munr%2Caps%2C279&amp;amp;sr=1-2&quot;&gt;Thing Explainer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/What-If-Scientific-Hypothetical-Questions/dp/0544272994/ref=sr_1_3?crid=UQX5KJ82O5ML&amp;amp;keywords=randall+munroe&amp;amp;qid=1561645604&amp;amp;s=books&amp;amp;sprefix=randall+munr%2Caps%2C279&amp;amp;sr=1-3&quot;&gt;What If&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: How To isn't out yet.&lt;/p&gt;

&lt;p&gt;All of these books are by Randall Munroe of XKCD fame.  What a lot of people don't know is that Randall graduated from MIT and his science is what you'd expect from someone who pulled off graduating from MIT – &lt;strong&gt;excellent&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/writing/2019/06/26/if-i-was-a-science-fiction-author-i-would-read-this.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/writing/2019/06/26/if-i-was-a-science-fiction-author-i-would-read-this.html</guid>
        
        <category>writing</category>
        
        <category>sciencefiction</category>
        
        <category>sf</category>
        
        
        <category>writing</category>
        
      </item>
    
      <item>
        <title>Tools for Publishing an Ebook</title>
        <description>&lt;p&gt;I resisted John Gruber's Markdown for &lt;strong&gt;years&lt;/strong&gt;.  I always looked at it as &quot;Damn it.  I know HTML; why the f would I need that?&quot;.  And then I started blogging using Jekyll which really forced immersion and now I damn well adore Markdown.  Markdown is one of those rare technology standards that I can point to and say &quot;Yep.  It actually made my life &lt;em&gt;better&lt;/em&gt;&quot;.&lt;/p&gt;

&lt;p&gt;I've recently been thinking about building an ebook and I'm not willing to &lt;strong&gt;not use&lt;/strong&gt; Markdown as my writing format.  My formatting needs aren't large so, for me, Markdown is just fine for the writing portion of an ebook. The questions come about getting something else out of the markdown:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you generate the epub file?&lt;/li&gt;
  &lt;li&gt;How do you generate the pdf?&lt;/li&gt;
  &lt;li&gt;How do you get something into whatever format the kindle uses?&lt;/li&gt;
  &lt;li&gt;How do you get something into the kindle store?&lt;/li&gt;
  &lt;li&gt;How do you get something into the apple store?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I started my research from a Hacker News discussion on tools for &lt;a href=&quot;https://news.ycombinator.com/item?id=15433327&quot;&gt;ebook publishing&lt;/a&gt; which is a great place to start.  I've then done some additional research and I've summarized each of the tools.&lt;/p&gt;

&lt;h1 id=&quot;leanpub&quot;&gt;LeanPub&lt;/h1&gt;

&lt;p&gt;In the world of tech books, it seems like every few years there is a new company that I find myself regularly buying tech books from.  It used to be O'Reilly.  Then for a lot of years it was Pragmatic and, this year, it is LeanPub.  I have bought more technical books from LeanPub in 2017 than I have from Pragmatic and O'Reilly combined – in the past two years.   LeanPub takes in Markdown and creates book from this markup.&lt;/p&gt;

&lt;h1 id=&quot;gitbook&quot;&gt;Gitbook&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gitbook.com&quot;&gt;Gitbook&lt;/a&gt; is a tool for taking inputs from any of these formats and producing an ebook:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DocBook V5.x (.xml)&lt;/li&gt;
  &lt;li&gt;Word (.docx)&lt;/li&gt;
  &lt;li&gt;HTML (.html)&lt;/li&gt;
  &lt;li&gt;Open Document (.odt)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfortunately the lack of Markdown as an official input source means that Gitbook isn't an option and I find that disappointing.  Their &lt;a href=&quot;https://www.gitbook.com/pricing&quot;&gt;pricing model&lt;/a&gt; is actually reasonable, free for open source books and $7 / month for up to 5 private ebooks.  They also seem to have good collaboration tools which is obviously useful for the publishing / editing process.&lt;/p&gt;

&lt;h1 id=&quot;softcover&quot;&gt;Softcover&lt;/h1&gt;

&lt;p&gt;Softcover is a ruby based tool for creating ebooks created by Michael Hartl who is best known for creating documentation for the Ruby world.  Softcover is a Ruby gem which wraps around a large amount of open source and proprietary tools that are combined into a comprehensive ebook publishing tool.  Here's an example of the softcover check command which illustrates the different tools that Softcover relies on:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Checking Softcover dependencies...
Checking for LaTeX...         Missing
Checking for GhostScript...   Missing
Checking for ImageMagick...   Found
Checking for Node.js...       Found
Checking for PhantomJS...     Found
Checking for Inkscape...      Missing
Checking for Calibre...       Missing
Checking for KindleGen...     Missing
Checking for Java...          Found
Checking for zip...           Found
Checking for EpubCheck...     Missing
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Even with all the open source tooling that I use constantly, I did not have all of these installed and that was fairly surprising to me.  Happily Softcover does an excellent job of not only telling you what you don't have but also how to get it.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Missing dependencies:
  • LaTeX (http://latex-project.org/ftp.html)
      ∟ Huge download—start it now!
  • GhostScript (should come with LaTeX)
  • Inkscape (http://inkscape.org/)
  • Calibre (http://calibre-ebook.com/)
      ∟ Enable Calibre command-line tools (http://manual.calibre-ebook.com/generated/en/cli-index.html)
  • KindleGen (http://www.amazon.com/gp/feature.html?ie=UTF8&amp;amp;docId=1000765211)
      ∟ Put the kindlegen executable on your path, e.g., in /usr/local/bin
  • EpubCheck 4.0.1 (https://github.com/IDPF/epubcheck/releases/download/v4.0.1/epubcheck-4.0.1.zip)
      ∟ Unzip and place epubcheck-4.0.1/ in a directory on your path
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;About the only change I could make here would be to point out the brew installations for OSX are &lt;em&gt;brew install caskformula/caskformula/inkscape&lt;/em&gt; but given that not everyone uses brew, that's clearly an edge case.&lt;/p&gt;

&lt;h1 id=&quot;ulyssesapp&quot;&gt;UlyssesApp&lt;/h1&gt;

&lt;p&gt;UlyssesApp is actually interesting.  In a field of mostly open source tools or software as a service options, UlyssesApp is a client side Mac application for creating your electronic book.  I'm honestly not sure about UlyssesApp but I'm willing to look further into it.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ebook/2019/06/05/tools-for-publishing-an-ebook.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ebook/2019/06/05/tools-for-publishing-an-ebook.html</guid>
        
        <category>ebook</category>
        
        
        <category>ebook</category>
        
      </item>
    
      <item>
        <title>Software Can Always Be Better - An Amazon Example</title>
        <description>&lt;p&gt;One of the hardest things to grasp about software is that it can &lt;strong&gt;&lt;em&gt;always&lt;/em&gt;&lt;/strong&gt; be made better. Even a mature, established bit of software with literally tens upon tens of millions of users can still have fundamental issues.  We're in the tenth year of the iPhone and I've been using the Amazon app on my iPhone for at least 8 of those years.  And yet I can still pick up my iPhone, try something from the Amazon app and find a critical issue.&lt;/p&gt;

&lt;p&gt;The problem at hand was really, really simple - I just wanted to buy something.  I saw this &lt;a href=&quot;https://twitter.com/jkottke/status/811593510746984452&quot;&gt;tweet from Jason Kottke&lt;/a&gt; and that's a hilarious gift idea so I figured that I would buy 2, one for my wife and one for her friend (they are wine buddies).  So I picked up my iPhone and searched up the product.  I selected 2 and clicked the Buy Now with 1 Click button.&lt;/p&gt;

&lt;p&gt;So at this point I've told Amazon:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What I want&lt;/li&gt;
  &lt;li&gt;How many I want&lt;/li&gt;
  &lt;li&gt;That I want it now&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The interesting thing was that this time my Amazon app had some kind of a password glitch and couldn't process the transaction.  I did the login dance and ended up back at the product page.  My initial thought was &quot;Great! The order went through&quot; but then I realized that wasn't the case at all, I was just back on the product page.  I checked the Orders feature in the Amazon app and, sure enough, no order had been created.  Now wouldn't you think that in an application who's &lt;strong&gt;sole purpose&lt;/strong&gt; is to make transactions that in the event of a password problem that the order would somehow be persisted?  Password and authentication issues are a constant thing in all kinds of user centric systems.  And saving a user's input, particularly on mobile, where making input is hard should be damn near sacred.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/06/05/software-can-always-be-better-an-amazon-example.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/06/05/software-can-always-be-better-an-amazon-example.html</guid>
        
        <category>software_engineering</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Building My First Node App</title>
        <description>&lt;p&gt;As anyone who reads this blog knows, I am a Ruby / Rails guy.  Yes I flirt with other things from time to but but, at heart, I am a ruby guy and specifically of the Rails flavor.  Part of the reason for that is that I adore the set of choices that Rails as a whole makes for me. I look at other communities, say Python or Node, and I always think &quot;Man do I really want to figure out a collection of libraries for Task X, Task Y and Task Z and then figure out if they work together?&quot;.  I adore that Rails has put together a set of defaults that just plain work together.&lt;/p&gt;

&lt;p&gt;Now, that said, sometimes you do have to go farther afield than Rails and this week I found myself needing to put together a basic Node app for &lt;a href=&quot;http://fuzzyblog.io/blog/how_to_be_a_developer/2017/07/02/how-to-be-a-developer-001.html&quot;&gt;one of my students&lt;/a&gt; to run with.&lt;/p&gt;

&lt;h1 id=&quot;problem-description&quot;&gt;Problem Description&lt;/h1&gt;

&lt;p&gt;What I need to build is effectively a two page web site - a form which a nodejs backend which calls an API and then generates a page of results for the user.  It is effectively a specialized travel calculator.  This isn't very much but when you don't really know anything about a platform, even the tiniest thing can be problematic.&lt;/p&gt;

&lt;h1 id=&quot;things-i-read&quot;&gt;Things I Read&lt;/h1&gt;

&lt;p&gt;Here are the articles I looked at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[Hackathon Starter][https://github.com/sahat/hackathon-starter]&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.airpair.com/javascript/node-js-tutorial&quot;&gt;AirPair NodeJS Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[Building A Simple NodeJS API] (https://medium.freecodecamp.org/building-a-simple-node-js-api-in-under-30-minutes-a07ea9e390d2)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;a-starting-point&quot;&gt;A Starting Point&lt;/h1&gt;

&lt;p&gt;The best starting point I found was &lt;a href=&quot;https://github.com/sahat/hackathon-starter&quot;&gt;hackathon-starter&lt;/a&gt;.  It is absolutely more than necessary and needs to be cut back but what I got with this was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a modern looking starter app&lt;/li&gt;
  &lt;li&gt;done in an MVC style fashion&lt;/li&gt;
  &lt;li&gt;complete with CSS that doesn't suck&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;useful-commands&quot;&gt;Useful Commands&lt;/h1&gt;

&lt;p&gt;These were useful commands:&lt;/p&gt;

&lt;p&gt;To create a bare bones, basic Node app:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;npm init&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To install the nodemon package which lets changes be reloaded dynamically without restarting the app server:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;npm install nodemon -g&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/28517494/nodemon-not-found-in-npm&quot;&gt;Stack Overflow on Installing Nodemon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To run the app via nodemon:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;nodemon app.js&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that's about all I have time for right now but it is a real start on the process.  The next step is to write the application specific code.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/node/2019/06/05/building-my-first-node-app.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/node/2019/06/05/building-my-first-node-app.html</guid>
        
        <category>node</category>
        
        <category>javascrpt</category>
        
        
        <category>node</category>
        
      </item>
    
      <item>
        <title>Welcome to An Alexa House</title>
        <description>&lt;p&gt;Our house is largely powered by Amazon Alexa's devices.  I have even gone so far as to put them into our guest bedroom.  This blog post was written as something I put on the dresser for our first house guests using the room after I changed the lighting over to be Alexa powered.  Yep.  I've just written documentation for the guest room.  Deep Sigh.  On the positive side my house now has a very, very Star Trek feel to it.  This makes me happy.&lt;/p&gt;

&lt;p&gt;For people who don't know what an Alexa is, an Alexa is a voice based computing platform that allows you to issue voice commands that can do lots and lots of different things like play music, turn on lights, supply a romantic or dimmed light mood instead of using candles, set timers, etc.&lt;/p&gt;

&lt;p&gt;The next section is examples of what you can do in &lt;em&gt;our&lt;/em&gt; guest room with its Alexa.&lt;/p&gt;

&lt;h2 id=&quot;alexa-example-commands&quot;&gt;Alexa Example Commands&lt;/h2&gt;

&lt;h2 id=&quot;lighting&quot;&gt;Lighting&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Alexa turn on guest room&lt;/li&gt;
  &lt;li&gt;Alexa turn on guest room lights&lt;/li&gt;
  &lt;li&gt;Alexa turn off guest room lights&lt;/li&gt;
  &lt;li&gt;Alexa set guest room to Savanah Sunset&lt;/li&gt;
  &lt;li&gt;Alexa set guest room to arctic sunrise&lt;/li&gt;
  &lt;li&gt;Alexa turn on guest room&lt;/li&gt;
  &lt;li&gt;Alexa turn on savanah sunset&lt;/li&gt;
  &lt;li&gt;Alexa set guest room to green&lt;/li&gt;
  &lt;li&gt;Alexa set guest room to red
## Music&lt;/li&gt;
  &lt;li&gt;Alexa play Journey&lt;/li&gt;
  &lt;li&gt;Alexa play Frank Sinatra&lt;/li&gt;
  &lt;li&gt;Alexa play Raise Your Glass by Pink&lt;/li&gt;
  &lt;li&gt;Alexa play Christmas carols
## Clock and Time&lt;/li&gt;
  &lt;li&gt;Alexa what time is it&lt;/li&gt;
  &lt;li&gt;Alexa set a 10 minute timer&lt;/li&gt;
  &lt;li&gt;Alexa set a timer named check plex for new movies for 10 minutes&lt;/li&gt;
  &lt;li&gt;Alexa set a 7 am alarm&lt;/li&gt;
  &lt;li&gt;Alexa set an alarm for 7&lt;/li&gt;
  &lt;li&gt;Alexa set a 2 minute timer named brush my teeth
## General Life&lt;/li&gt;
  &lt;li&gt;Alexa what is 43 * 523 
## What Do I Wear&lt;/li&gt;
  &lt;li&gt;Alexa what is the weather&lt;/li&gt;
  &lt;li&gt;Alexa what temperature is it?
## For Fun&lt;/li&gt;
  &lt;li&gt;Alexa Play Akinator&lt;/li&gt;
  &lt;li&gt;Alexa tell me a joke&lt;/li&gt;
  &lt;li&gt;Alexa why did the chicken cross the road&lt;/li&gt;
  &lt;li&gt;Alexa Mordor thing shelley knows JSJ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And if you want to be kind of an funny jerk you can also say 
 * &lt;em&gt;Alexa turn off all lights&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This will turn off all lights in the entire house.  Boom!  Now this seems like an insane feature until you realize that your kids have never found a light they wouldn't prefer to leave on.  Deeper sigh.&lt;/p&gt;

&lt;h2 id=&quot;more-details-on-alexa&quot;&gt;More Details on Alexa&lt;/h2&gt;

&lt;p&gt;A single Alexa device costs about $50 and can replace your:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Alarm Clock&lt;/li&gt;
  &lt;li&gt;Radio&lt;/li&gt;
  &lt;li&gt;Weather Report&lt;/li&gt;
  &lt;li&gt;Stereo&lt;/li&gt;
  &lt;li&gt;Timer&lt;/li&gt;
  &lt;li&gt;Light Switch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use the following equipment in our guest room:
 * An &lt;a href=&quot;https://www.amazon.com/All-new-Echo-Dot-3rd-Gen/dp/B0792K2BK6/&quot;&gt;Alexa Echo Dot Third Generation&lt;/a&gt;. The new third generation, the one I actually linked to is a much better stereo replacement since the speaker was improved.&lt;br /&gt;
 * &lt;a href=&quot;https://www.amazon.com/Compatible-Kitchens-Space-Saving-Solution-Management/dp/B07JX5DNX5&quot;&gt;A Wall Mount&lt;/a&gt;
 * 2 Phillips HUE Color Changing Light Bulbs; the &lt;a href=&quot;https://www.amazon.com/Philips-Hue-Equivalent-Assistant-California/dp/B07DPYM57M/&quot;&gt;Starter Kit&lt;/a&gt; is usually the best deal.&lt;/p&gt;

&lt;p&gt;In terms of other smart home technologies, I've used X-10 and Iris and I am so, so, so much happier with Alexa.&lt;/p&gt;

&lt;h2 id=&quot;privacy&quot;&gt;Privacy&lt;/h2&gt;

&lt;p&gt;And, yes, I know the argument about not wanting Amazon to listen in on your home.  I don't believe that is a valid concern given that virtually every one reading this generally carries a cell phone that is already doing this (Hey Siri / Hello Google).  Scott McNealy pointed out the loss of our privacy back in the 90s.  This is not news.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer&lt;/em&gt;: Oh hell yes I'm an Amazon shareholder.  I'm also a proud user of as many AWS APIs as I can find.  Go buy an Alexa.  Hell please buy six or seven.  I have at least six of them.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/alexa/2019/06/04/welcome-to-an-alexa-house.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/alexa/2019/06/04/welcome-to-an-alexa-house.html</guid>
        
        <category>alexa</category>
        
        <category>amazon</category>
        
        
        <category>alexa</category>
        
      </item>
    
      <item>
        <title>So You Want to Start a Consulting Practice ...</title>
        <description>&lt;p&gt;I spent about a decade as a full time consultant focusing on high end Rails development services with an emphasis on big data.  And in that period I was actually quite successful both on the revenue and life flexibility front.  If you have any type of truly specialized expertise then consulting is a possible career path.  I know a number of folks with specialized expertise and I seem to find myself in the &quot;How do you consult?&quot; discussion regularly so here is a write up.&lt;/p&gt;

&lt;h1 id=&quot;understand-the-consulting-equation&quot;&gt;Understand the Consulting Equation&lt;/h1&gt;

&lt;p&gt;Here is the basic consulting equation:&lt;/p&gt;

&lt;p&gt;Consulting is An Equation Where You Trade Time for Dollars&lt;/p&gt;

&lt;p&gt;That's all consulting is.  It really is just that simple, you trade your time for dollars.  And whatever the consulting customer takes away from it is up to them.  If they don't follow your advice, it is on them, not you.  That's a tough thing to accept at times.&lt;/p&gt;

&lt;h1 id=&quot;be-brave-in-setting-your-hourly-rate&quot;&gt;Be Brave In Setting Your Hourly Rate&lt;/h1&gt;

&lt;p&gt;If you're going to trade time for dollars then you have to have an hourly rate and that hourly rate usually is pretty aggressive.  My general advice on setting your hourly rate is that you almost always need to be higher than you feel comfortable with.  The reason for this is that if you make it too low then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Customers won't treat you as seriously; a higher price sets a mental tone for the customer&lt;/li&gt;
  &lt;li&gt;It is easier to take your hourly rate down (i.e. give a customer a discount) then take it back up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the ways that I as a software engineer came to grips with my hourly rate is that I looked at the nature of the services I provide and I asked myself &quot;Am I any less talented than my $xyz / hour attorney?&quot;  And when I realized that I wasn't, well, I was much happier with charging a high hourly rate.&lt;/p&gt;

&lt;h1 id=&quot;charge-for-every-interaction&quot;&gt;Charge for Every Interaction&lt;/h1&gt;

&lt;p&gt;When I first started consulting I didn't keep track of the time that I spent texting or im'ing with customers.  I looked at it as &quot;well its just an im&quot;.  Nope!  And the answer to this again lay in my relationship with my attorney – I can't text him a question and not get billed for it so the same goes for my services.&lt;/p&gt;

&lt;h1 id=&quot;have-a-minimum-billing-increment&quot;&gt;Have a Minimum Billing Increment&lt;/h1&gt;

&lt;p&gt;Along with the concept of charging your customers even when they text you goes the idea of a minimum billing increment.  This can be anything you want it to be as long as you are ethical with it and disclose it to your customers (who will promptly forget about it, at least in my experience).  When I was billing $100 / hour, my minimum billing increment was 15 minutes or $25.  And I know this feels like a lot but if you don't aggressively manage your consulting relationships then your consulting relationships will manage &lt;em&gt;you&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;how-do-i-replace-my-existing-salary&quot;&gt;How Do I Replace My Existing Salary?&lt;/h1&gt;

&lt;p&gt;If you're going to replace your existing salary then the first thing you need to know is what your salary actually is.  And this sounds stupid, right?  I mean your salary is what they pay you on an annualized basis, right?  Actually if you are a full time consultant then your &quot;salary&quot; needs to cover the costs of what you currently get, which is salary + benefits.  Depending on the nature of the benefits you get from a job, the general rule of thumb is to multiply your salary by a percentage which covers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;equipment&lt;/li&gt;
  &lt;li&gt;vacation&lt;/li&gt;
  &lt;li&gt;health care&lt;/li&gt;
  &lt;li&gt;random other benefits&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The range on this is generally 1.2 to 2.0 times the salary.  For example if you are working at a lightly funded startup and there aren't a lot of benefits then you multiply your salary by 1.2.  And if you are working for a company with great benefits (think Google) then you multiply your salary by 2.0.  So if you are making $100,000 then you might need to replace this as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;120,000 (lightly funded startup)&lt;/li&gt;
  &lt;li&gt;200,000 (google)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;in order to have an equivalent standard of living.&lt;/p&gt;

&lt;h1 id=&quot;model-your-damn-numbers-well&quot;&gt;Model Your Damn Numbers Well&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1O6T1Qbk3cmHcarHu1t0JaIcWlcfLvLdv-ffrzvHobb4/&quot;&gt;Here is a Google Docs spreadsheet that models all of my normal assumptions for building a consulting practice&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;write-your-product-literature-early&quot;&gt;Write Your Product Literature Early&lt;/h1&gt;

&lt;p&gt;After the financial stuff, my normal advice for consultants is to write their product literature - a web site about themselves - early.  This should be roughly the second thing you do and once you make it, get feedback from people you respect.  Given that this is what people see before the hire you, it should be good.&lt;/p&gt;

&lt;h1 id=&quot;sell-your-time-in-blocks-that-can-be-pre-purchased&quot;&gt;Sell Your Time in Blocks that Can Be Pre-Purchased&lt;/h1&gt;

&lt;p&gt;One final thought is that for certain types of consulting it may be appropriate to sell your time in blocks that can be pre-purchased such as &quot;7 sessions for the price of 5&quot;.  Keep this in mind because you get the revenue up front and that pre-disposes the client to keep going with you.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/06/04/so-you-want-to-start-a-consulting-practice.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/06/04/so-you-want-to-start-a-consulting-practice.html</guid>
        
        <category>consulting</category>
        
        <category>startup</category>
        
        <category>marketing</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Sales, Marketing, Advertising and Public Relations</title>
        <description>&lt;p&gt;In undergrad I majored in Management but I took enough marketing classes that I can still summon &lt;a href=&quot;https://en.wikipedia.org/wiki/Positioning_(marketing)&quot;&gt;Ries and Trout&lt;/a&gt; on occasion.  Let's start with some basic definitions.&lt;/p&gt;

&lt;h1 id=&quot;sales-versus-marketing&quot;&gt;Sales Versus Marketing&lt;/h1&gt;

&lt;p&gt;The distinction between sales and marketing is pretty damn critical.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Marketing is the creation of demand for a product or service&lt;/li&gt;
  &lt;li&gt;Sales is the execution of strategies to fulfill that demand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What this means is that you do marketing BEFORE you do sales.  Marketing leads to sales; not vice versa.&lt;/p&gt;

&lt;h1 id=&quot;advertising-versus-public-relations&quot;&gt;Advertising versus Public Relations&lt;/h1&gt;

&lt;p&gt;Advertising and Public Relations are both elements of a marketing strategy in that, when executed well, &lt;em&gt;create&lt;/em&gt; demand.  Now the best description of the difference between advertising and public relations cast them in light of traditional, male-female relationships.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When &lt;em&gt;you&lt;/em&gt;, the male, tell a girl how good you are in bed, that is advertising.  It is inherently untrusted.&lt;/li&gt;
  &lt;li&gt;When another girl tells the girl you're interested in how good you are in bed, that's public relations.  It is generally trusted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rule of thumb is that if you have an advertising based strategy, you're going to have to have a lot more &quot;impressions&quot; or &quot;views&quot; of the advertising for it to have the same impact as public relations but public relations is more hands on / takes more work. Whereas with advertising you simply spend money.&lt;/p&gt;

</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/06/04/sales-marketing-advertising-and-public-relations.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/06/04/sales-marketing-advertising-and-public-relations.html</guid>
        
        <category>startup</category>
        
        <category>marketing</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Production of Cocktails at Scale for a Fan Run Event</title>
        <description>&lt;p&gt;I recently  had the opportunity to produce Jello Shots and pre-mixed cocktails for an event and I found the process surprisingly interesting – as so many things are actually interesting when you explore them.  The truly interesting thing for me was the parallel between efficient production of beverage things and the learnings I had in college in a manufacturing class.  Pretty much everything I learned regarding an efficient manufacturing workflow proved true.&lt;/p&gt;

&lt;p&gt;And I will admit that a big part of why I am writing this down is to document the assembly line process – for the next damn time …&lt;/p&gt;

&lt;h2 id=&quot;issue-taster-needed&quot;&gt;Issue: Taster Needed&lt;/h2&gt;

&lt;p&gt;I am not a drinker so all of this was done in conjunction with my Shiny wife, Shelley.  Many thanks to her since I could not have done this without her.  As with any type of cooking, tasting is crucial to the final product.  She nobly bore up to this challenge.&lt;/p&gt;

&lt;h2 id=&quot;this-is-chemistry--engineering-not-craft-cocktails&quot;&gt;This Is Chemistry / Engineering Not Craft Cocktails&lt;/h2&gt;

&lt;p&gt;One of the things that I realized when I began this was that this was essentially chemistry and engineering not craft cocktails.  While I made the joke online that I was making &quot;Small Batch Artisan Jello Shots&quot;, this was mostly for the lulz.  When you are producing 180 in a morning, well, you aren't artisan.&lt;/p&gt;

&lt;h2 id=&quot;inclusiveness&quot;&gt;Inclusiveness&lt;/h2&gt;

&lt;p&gt;Given that we are an inclusive organization, I found it necessary to also produce sugar free jello cocktails.  The crazy thing about sugar free jello is that while a standard jello packet is 3 ounces, the sugar free is about 0.3 ounces – small enough that you may actually think that the sugar free isn't sweetened.  Rest assured that is sweet.  It also apparently has a distinctly chemical after taste so your desire to taste them may vary.&lt;/p&gt;

&lt;h2 id=&quot;the-importance-of-the-assembly-line&quot;&gt;The Importance of the Assembly Line&lt;/h2&gt;

&lt;p&gt;The since most important thing is that this is an assembly line and you have to get that line and flow exactly correct.  Here is a picture of the final line:&lt;/p&gt;

&lt;h3 id=&quot;instructions&quot;&gt;Instructions&lt;/h3&gt;

&lt;p&gt;Here are the things you need:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The small solo cups, with lids, for making the shots.  Here's how to calculate what you need - each 3 oz pack of jello makes roughly 15 decently sized Jell-O shots.  So if you want to make 180 like I did that means 180 / 15 or 12 packs of jello. Some cups will break or not seal well so you want to have some extra.  Whatever you do, if you can avoid it, DO NOT buy multiple brands.  If you buy multiple brands then you will find that there are stacking issues due to there being size issues and that the list won't be interchangeable.  Here is the pro tip if you buy multiple brands – put the lids on the sheet tray with the shots.  &lt;a href=&quot;https://i.imgur.com/GyfB05El.jpg&quot;&gt;Crude Analytics such as it was&lt;/a&gt;.  &lt;a href=&quot;https://i.imgur.com/TS1wErUl.jpg&quot;&gt;Storing Lids with the Shots&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A sharpie marker for labeling S or SF (sugared or sugar free).&lt;/li&gt;
  &lt;li&gt;Flat sheet trays or rimmed cookie sheets; you will generally get about 15 to 17 shots per batch so you need sheets large enough for them.  &lt;a href=&quot;https://i.imgur.com/i8kaebgl.jpg&quot;&gt;Picture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A stand mixer with the whisk attachment&lt;/li&gt;
  &lt;li&gt;A large pot for boiling water&lt;/li&gt;
  &lt;li&gt;A large bowl for storing cold water; what I did was make a big bowl of ice water.&lt;/li&gt;
  &lt;li&gt;Jello of various colors&lt;/li&gt;
  &lt;li&gt;Vodka&lt;/li&gt;
  &lt;li&gt;A good 4 cup measuring cup preferably with a look down scale to make measuring easier.  Oxco is excellent.  You use this for the hot water.&lt;/li&gt;
  &lt;li&gt;A good two cup measuring cup for the cold water.  Again one with the look down scale.  And again Oxco.&lt;/li&gt;
  &lt;li&gt;A dipper for pouring from the boiling water into the 4 cup measuring cup; A one cup measuring cup is excellent for this.&lt;/li&gt;
  &lt;li&gt;A dipper for pouring from the cold water into the 2 cup measuring cup.  A one cup measuring cup is excellent for this.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the overall flow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Bring the water to a boil.&lt;/li&gt;
  &lt;li&gt;Make the ice water.&lt;/li&gt;
  &lt;li&gt;Add the Jello to the stand mixer with the whisk attachment.&lt;/li&gt;
  &lt;li&gt;Add the boiling water to the mixer and turn it on.&lt;/li&gt;
  &lt;li&gt;Add the cold water and turn it on.&lt;/li&gt;
  &lt;li&gt;Add the vodka and turn it on.&lt;/li&gt;
  &lt;li&gt;Fill a measuring cup with the mix.&lt;/li&gt;
  &lt;li&gt;Fill the Jell-O shots.&lt;/li&gt;
  &lt;li&gt;Chill the Jell-O shots.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are the specific instructions that you need to follow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Clear space in the fridge for as many trays as you plan to make.  In my case, since this was first time in a while, I had to scramble to make space since I didn't know how many sheets I would end up with.  Don't be me – do the math!  Or realize that you only own N sheet trays and that's the maximum amount of space you need to clear.&lt;/li&gt;
  &lt;li&gt;Add a 3 oz packet of jello to the bowl of the stand mixer and attach the whisk attachment.&lt;/li&gt;
  &lt;li&gt;Make a large bowl of ice water. Put your dipper next to it.  Put your four cup measuring cup next to it.&lt;/li&gt;
  &lt;li&gt;Start a large pot of water boiling.  Put your dipper next to it.  Put your two cup measuring cup next to it.  By the time the water boils the ice water will be cold.&lt;/li&gt;
  &lt;li&gt;Set the vodka next to the cold water.&lt;/li&gt;
  &lt;li&gt;Set out a sheet tray with 17 cups laid out on it.  Place the lids also on the sheet tray.&lt;/li&gt;
  &lt;li&gt;Use the dipper to add 2 cups of water to the 4 cup measuring cup.&lt;/li&gt;
  &lt;li&gt;Add 2 cups of hot water to the mixer and set it on low.  You want to mix it for 2 minutes and the easiest way to do this is to use an Alexa i.e. &quot;Alexa set a 2 minute timer&quot;.  Or just use your phone.&lt;/li&gt;
  &lt;li&gt;Use the cold water dipper to add 1/2 cup of cold water to the 2 cup measuring cup.&lt;/li&gt;
  &lt;li&gt;Add 1/2 cup of vodka to the 2 cup measuring cup.&lt;/li&gt;
  &lt;li&gt;Add the water plus vodka to the mixer and let it mix briefly.&lt;/li&gt;
  &lt;li&gt;Pour from the stand mixer bowl into the measuring cup you have with the best spout – for me this was the 4 cup oxco.  This is how you fill the individual Jell-O shots so pourability really, really matters.&lt;/li&gt;
  &lt;li&gt;Fill each cup 1/2 to 3/4 full.  If this is a sugar free tray and you are making both then label at least one lid so you know what is on the tray.&lt;/li&gt;
  &lt;li&gt;Move the tray to the fridge.  Repeat the process.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And here is the assembly line about to swing into action:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/yasnga2l.jpg&quot; alt=&quot;jello_shot_assembly_line&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;storage&quot;&gt;Storage&lt;/h2&gt;

&lt;p&gt;180 Jell-O shots can be stored in one medium and two small coolers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/hUvGLkFl.jpg&quot; alt=&quot;cooler&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;premix-cocktails&quot;&gt;Premix Cocktails&lt;/h2&gt;

&lt;p&gt;A pre-mix cocktail is when you make a large batch of cocktails for an event so you can simply fill a glass from a cooler instead of mixing them one at a time.&lt;/p&gt;

&lt;h3 id=&quot;premix-margaritas&quot;&gt;Premix Margaritas&lt;/h3&gt;

&lt;p&gt;My wife loves Margaritas and here is the individual recipe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 shot tequila&lt;/li&gt;
  &lt;li&gt;1 shot triple sec or other orange liquor (based on price generally)&lt;/li&gt;
  &lt;li&gt;1/2 shot lime juice, kroger brand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here is a recipe that fills a standard 1800 Tequila bottle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 1/2 cups lime juice&lt;/li&gt;
  &lt;li&gt;3 cups Tequila&lt;/li&gt;
  &lt;li&gt;3 cups Triple Sec&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This almost exactly fills the bottle and makes what I am told is a lovely Margarita.  I use 1800 bottles because they seal excellently and we have a number of empties (&quot;Dead Soldoier; Salute!&quot;).&lt;/p&gt;

&lt;p&gt;Here is the assembly line for premix margaritas.  Note the towel on the bar to capture drips and the left to right order of ingredients along with 1800 bottles to store the output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/EenxYc0l.jpg&quot; alt=&quot;premix_margaritas&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;premix-giggle-juice-aka-lemon-drop-martinis&quot;&gt;Premix Giggle Juice aka Lemon Drop Martinis&lt;/h3&gt;

&lt;p&gt;Another cocktail that I like to mix at scale are Lemon Drop Martinis aka &quot;Giggle Juice&quot;.  Here's the individual recipe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 oz vodka&lt;/li&gt;
  &lt;li&gt;1 oz simple syrup&lt;/li&gt;
  &lt;li&gt;1 1/2 tbsp lemon juice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The wrinkle in this recipe is figuring out that 1 1/2 tbsp lemon juice maps to 1 oz lemon juice.  So here's a recipe for 8 Lemon Drops (I can't remember of this fills an 1800 bottle or if it needed to be doubled to do that; experiment in the interests of Science!).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;16 oz vodka&lt;/li&gt;
  &lt;li&gt;8 oz simple syrup&lt;/li&gt;
  &lt;li&gt;8 oz lemon juice, Kroger brand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: Wash the 1800 bottle first to get rid of the tequila taste.&lt;/p&gt;

&lt;h2 id=&quot;premix-assembly-line&quot;&gt;Premix Assembly Line&lt;/h2&gt;

&lt;p&gt;Shown below is the premix assembly line for marg&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;p&gt;My thank you goes out to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shelley Johnson - Lead Taster, Encouragement and All the Love&lt;/li&gt;
  &lt;li&gt;Lisa Meese - Concept validation and Giggle Juice consumption&lt;/li&gt;
  &lt;li&gt;Lexi Taylor - Teaching me about sugar free jello shots&lt;/li&gt;
  &lt;li&gt;Tami Coxen - For illustrating the quality of craft cocktails when I briefly got my wife drinks from Tami once upon a time&lt;/li&gt;
  &lt;li&gt;Deanna Sjolander - For writing encouragement&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/cocktails/2019/06/04/production-of-cocktails-at-scale-for-a-fan-run-event.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/cocktails/2019/06/04/production-of-cocktails-at-scale-for-a-fan-run-event.html</guid>
        
        <category>cocktails</category>
        
        <category>event</category>
        
        
        <category>cocktails</category>
        
      </item>
    
      <item>
        <title>Zsh and RbEnv Madness</title>
        <description>&lt;p&gt;I'm a Mac user and I recently switched over from Bash to Zsh.  I then got massive weirdness when I switched from Terminal Window 1, Tab 1 to say Terminal Window 3, Tab 9 (yes I have a problem; I'm sure you have your own problems; now shoo!).  Specifically I would see that in the first Terminal Window, I would get the right version of Ruby and then in the second Terminal Window, I would get the &quot;system ruby&quot;.&lt;/p&gt;

&lt;p&gt;This requires a bit of an explanation for the less than Ruby familiar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All (or effectively all; go away you) *nix machines include a version of Ruby aka &quot;System Ruby&quot;&lt;/li&gt;
  &lt;li&gt;The system ruby is generally old and poorly maintained&lt;/li&gt;
  &lt;li&gt;The system ruby is rarely the version of Ruby your application will use&lt;/li&gt;
  &lt;li&gt;You need a &quot;Ruby Version Manager&quot; to set the version of Ruby you need for your application.  Two of the leading contenders are RVM and RbEnv.&lt;/li&gt;
  &lt;li&gt;Both RVM and RbEnv work by shell level fuckery.  Sorry for the swearing but this is how they get under the environment and essentially insert a version of an executable before your standard path.  I also think of both of these as &quot;Dancing Bear&quot; software – its not how well they dance but that they dance at all.&lt;/li&gt;
  &lt;li&gt;On a directory where you want to use a specific version of ruby you have to create a file called .ruby-version which contains a value like 2.5.1.  This tells RVM or RbEnv to load that version of Ruby when you enter this directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given my allusion to how many terminals and terminal tabs I might have open at any one time, you may have already figured out my issue – it was my own damn fault.&lt;/p&gt;

&lt;p&gt;The issue was this - if you ever have one terminal reporting a different version from another and both have the .ruby-version file contents then it HAS to be an issue of sourcing .zshrc.  There is likely no other way that this error can occur.  And, sure enough, I realized that this was my first time in this directory since I had changed over from Bash to Zsh.  Here are the suspect lines from .zshrc:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rbenv
export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;
eval &quot;$(rbenv init -)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These lines add the current path before the system path and then evaluate the rbenv init function.  And this causes any calls for ruby, irb, bundle, gem, etc to go from the right place and not from system ruby.&lt;/p&gt;

&lt;p&gt;The solution was to go thru every Terminal Window and Terminal Tab and execute:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note 1: This same type of thing exists for Python (virtual env) and many other languages.  And it is always the same type of fuckery.&lt;/p&gt;

&lt;p&gt;Note 2: As always kudos to my pairing partner, &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt;, who helping with this.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ruby/2019/06/03/zsh-and-rbenv-madness.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ruby/2019/06/03/zsh-and-rbenv-madness.html</guid>
        
        <category>ruby</category>
        
        <category>zsh</category>
        
        <category>rbenv </category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>The Most Horrible, Awful Aspect of Startups and Remote Employees</title>
        <description>&lt;p&gt;I'm a firm believer in remote work – I have spent the past 20 years as a remote employee for many different organizations and there's no way that you could ever convince me that remote work isn't the best way to structure an engineering organization.  Now, that said, there is one horrible, awful aspect of remote workers for startups – the damn state.&lt;/p&gt;

&lt;p&gt;Any U.S. startup is generally structured as a C, an LLC or a sub chapter S corporation. And that gives the company the correct legal structure to operate as a business.  The problem is that while the company is a federal level entity, employment is fundamentally a state level thing.  And every damn state has some screwy accounting, legal or training thing that will reach out and smack you in the ass – hard.  I've seen this repeatedly and I've even heard my accountant say things like &quot;Damn Boston; I hate Massachusetts&quot;.&lt;/p&gt;

&lt;p&gt;Let's say that you have a startup with three founding employees who live in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Indiana&lt;/li&gt;
  &lt;li&gt;Maryland&lt;/li&gt;
  &lt;li&gt;Oklahoma&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is three sets of state level paperwork with which you have to comply.  And even if you use a payroll company like PayChex, I guarantee that there will be some level of state paperwork that you, the founder, will be find annoying / incomprehensible / ass maddening.&lt;/p&gt;

&lt;p&gt;I have read that Stripe is trying to make creating startups easier with the &lt;a href=&quot;https://stripe.com/atlas&quot;&gt;Stripe Atlas&lt;/a&gt; program and I hope so but I am honestly dubious.&lt;/p&gt;

&lt;p&gt;Bah!  States!  A pox upon them.  Begone!&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/remote_work/2019/06/03/the-most-horrible-awful-aspect-of-startups-and-remote-employees.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/remote_work/2019/06/03/the-most-horrible-awful-aspect-of-startups-and-remote-employees.html</guid>
        
        <category>remote</category>
        
        <category>startup</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Tabaholics of the Chrome World Unite for the Great Suspender!</title>
        <description>&lt;p&gt;My wife thinks I have a problem.  She thinks that my approach to computing with respect to web browsers should be accompanied by a disclaimer like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Me: Hi I'm Scott and I have a problem.
Support Group: Hi Scott!!!

Me: I'm a **muted voice** *tabaholic*
Support Group: Oh no!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now from a rationalization perspective, I view urls on the Internet as pieces of paper.  And so if I have a browser window open with 30 tabs, well, that's just 30 sheets of paper, right?  And my computer can certainly handle 30 pieces of paper, right?&lt;/p&gt;

&lt;p&gt;But if I have 10 browser windows open, each with 30 tabs, that's 300 pieces of paper.  And that's just Chrome.  What about Safari, Chromium, FireFox, etc.  Perhaps I do have a problem…&lt;/p&gt;

&lt;p&gt;The issue, as with a big fraction of most computer issues, is memory.  From a technical perspective although the HTML that makes up a web page is generally tiny, web pages are frighteningly complex data representations and they are actually pretty damn big.  I regularly see Chrome hitting 11 plus gigs of memory usage (on a 16 gig box).&lt;/p&gt;

&lt;p&gt;And this brings us to, wait for it, &lt;em&gt;The Great Suspender&lt;/em&gt;.  The Great Suspender is a Chrome extension that automatically suspends tabs that haven't been active recently (yes this period is configurable).  This essentially kills the memory footprint for tabs you have open but aren't using.  It took my Chrome memory usage from 11 gigs down to a fraction of that.  I can't recommend The Great Suspender strongly enough.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg?hl=en&quot;&gt;View The Great Suspender on the Chrome Extension Store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kudos and thanks to my good buddy &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; who clued me into this.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/chrome/2019/06/03/tabaholics-of-the-chrome-world-unite-for-the-great-suspender.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/chrome/2019/06/03/tabaholics-of-the-chrome-world-unite-for-the-great-suspender.html</guid>
        
        <category>chrome</category>
        
        <category>browser</category>
        
        
        <category>chrome</category>
        
      </item>
    
      <item>
        <title>Road Warrior 2019 Edition</title>
        <description>&lt;p&gt;It has been an age and a half since I did the road warrior gig.  Due to some family health issues with respect to elder care, I suspect that I'm going to travel quite a bit in 2019.  Here are some of the things that I've learned about doing the Road Warrior as of late:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Disease&lt;/em&gt;.  Don't ever touch the tray table and seat pocket.  I commented to a friend at the FDA about how I always seem to get sick on planes and I blamed the air.  Her response was that the air is just fine but that the seat pockets and tray tables are &quot;Mos Eisley for germs&quot; (ok I may have rewritten her description to make it more cool but that's my take on it).  My reaction was to stop touching them entirely – and I no longer get sick after flights.  I no longer get drinks on board; I bring a resealable water bottle with me so I don't have to worry about a drink needing a place to rest.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;iPads Rule&lt;/em&gt;.  An iPad is a hell of a computing device for lightweight computing – if you add a keyboard.  I use a Belkin Ultimate Keyboard for my old school iPad Air and it works great (using it now, lightly balanced on my knees).  Given the airline's move to minimal levels of personal space, a smaller computing device than a traditional laptop is highly desirable.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Netflix Downloads&lt;/em&gt;.  Whether or not you like Netflix shows, I don't think you can dispute that Netflix's Download feature works brilliantly.  Before I ever board a plane, I always download something.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;USB Battery&lt;/em&gt;. I use an Anker PowerCore 10000 and its the first USB battery I've ever had luck with.  Happily they come in multiple colors so if you travel with your wife or kid, you know who owns what.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Cables&lt;/em&gt;.  I travel with a lightning cable for each iOS device which means iPad, iPhone and AirPods.  I used to travel with less but this lets everything charge at once.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Food&lt;/em&gt;.  Always, always stuff something to eat in your bag.  My personal preference is to buy a chocolate croissant at the StarBucks before I leave but that isn't always available so I make sure to have nuts, granola bar, etc.  You never know when your flight will be delayed and you will find yourself in a cess pool of an airport and all food with be closed.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 03 Jun 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2019/06/03/road-warrior-2019-edition.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2019/06/03/road-warrior-2019-edition.html</guid>
        
        <category>road_warrior</category>
        
        <category>startup</category>
        
        <category>travel</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Summer Games - An Overview for Noobs by a Noob</title>
        <description>&lt;p&gt;by Wagner the Impaler&lt;/p&gt;

&lt;p&gt;I just returned from 5 days at Summer Games with my wife and we found the experience unbelievably outstanding. I am writing this overview to decompress from Summer Games and avoid the intense con drop from this event.&lt;/p&gt;

&lt;p&gt;It should be noted that although I have written some criticisms of Summer Games in this document, I absolutely loved the experience. Summer Games 2019, for me, was magical and I would describe it as one of the best weekends of my adult life.&lt;/p&gt;

&lt;h2 id=&quot;what-is-barfleet&quot;&gt;What is Barfleet?&lt;/h2&gt;

&lt;p&gt;Barfleet is a social organization that is really a LARP on the theme of &quot;Starfleet exists and we throw the parties in Ten Forward&quot;. Barfleet exists to throw parties that enhance the fan run con experience.&lt;/p&gt;

&lt;p&gt;One of the really interesting things about Barfleet is that you can’t just join Barfleet – membership is only by sponsorship.  A member of a certain rank has to vouch for you and basically say “this person isn’t toxic” and be willing to take responsibility for your actions.  This level of accountability makes everyone feel comfortable and free.  For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you drink too much then someone will take care of you&lt;/li&gt;
  &lt;li&gt;If something triggers you then someone will talk it out&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And since Barfleet is a non profit organization, it needs to hold an annual meeting and why not hold it at a camping trip?&lt;/p&gt;

&lt;h2 id=&quot;what-is-summer-games&quot;&gt;What is Summer Games?&lt;/h2&gt;

&lt;p&gt;At its heart Summer Games is just a camping trip – for adults – although I would more describe it as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a 5 day experience in lightweight communal living&lt;/li&gt;
  &lt;li&gt;a giant party with 175 of your closest friends&lt;/li&gt;
  &lt;li&gt;a safe, consent-based environment where fleet is your family and will take care of you&lt;/li&gt;
  &lt;li&gt;an inclusive environment right down to people knowing your dietary restrictions and making sure that your medical needs and religious beliefs are respected (I helped with breakfast and watched this first hand)&lt;/li&gt;
  &lt;li&gt;a place where you can not only use an authentic Japanese Katana to battle frisbees (DiscHack) but also find a martial artist who would offer to restore your Katana to pristine condition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DiscHack pointed out to me the difference between Barfleet and the real world.  After playing DiscHack, someone walked up to me, the member DeadPool, and first asked to see my sword and then offered to restore it.  &lt;em&gt;Blink&lt;/em&gt;.  When do you find people this talented and random in the real world?  Disclaimer - I took the gold in DiscHack where my fleet name was spontaneously amended from Wagner to Wagner the Impaler.&lt;/p&gt;

&lt;p&gt;At Summer Games you are likely to encounter alcohol, sex, nudity and more all in a consent-driven, safe environment. This is not your grandparents camping trip.&lt;/p&gt;

&lt;h2 id=&quot;give-back-dont-take&quot;&gt;Give Back Don't Take&lt;/h2&gt;

&lt;p&gt;One of the very different aspects of Summer Games is that it truly is communal living. This runs counter to all of our normal cultural programming. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Food is very often shared (I brought 180 jello shots to give out; someone else gave me a homemade apple pie and fresh plum jam; thank you anonymous wonderful person),&lt;/li&gt;
  &lt;li&gt;If you need help - just ask; someone will have salt, pepper, a beer, whatever&lt;/li&gt;
  &lt;li&gt;If you have help to give - give it (for people without a wagon, I moved a ton of totes)&lt;/li&gt;
  &lt;li&gt;One of the best parts of Summer Games, if not the best, is the communal living. Planning your time as an exercise in communal living is smart as hell. Example - if you are bringing a camp stove, another person in your camp doesn't need one, right?&lt;/li&gt;
  &lt;li&gt;Fire can be a shared resource; I kept the campfire alive part of the last night because I knew someone would want to use it and that's how I got great, great S'mores&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;your-fleet-name&quot;&gt;Your Fleet Name&lt;/h2&gt;

&lt;p&gt;Throughout this document you will see references to people but not their actual name.  Instead you will find “fleet names”.  Examples are Shiny, Nymph, Wagner, etc.  The reason for this is that Barfleet is an environment where the personal wheels sometimes come off and having an abstraction layer (the fleet name) between yourself and the real world can be useful.&lt;/p&gt;

&lt;h2 id=&quot;planning-your-summer-games-adventure&quot;&gt;Planning Your Summer Games Adventure&lt;/h2&gt;

&lt;p&gt;When you have kids, getting out of town without them is a huge, huge deal – child care had to be arranged, food had to be prepped, etc.  Our planning process was the single worst mistake I made. I had my list of tasks and my wife had her own list of tasks. Because there was no single view, we each had a different perspective on what needed to be done and that led to conflict.  Remember – there can be only one list!&lt;/p&gt;

&lt;p&gt;Finally when you plan for Summer Games, you really may want to take a day off on the return side of the trip.  Summer Games is fairly intense and all the happy people with jobs that I know are taking it easy today.  Me?  I’m a noob and I’m at my day job – grumble, grumble, grumble.&lt;/p&gt;

&lt;h2 id=&quot;hail-hydrate&quot;&gt;Hail Hydrate&lt;/h2&gt;

&lt;p&gt;One of the more perplexing aspects of Barfleet for a noob are the constant calls for “Hail Hydrate”.  This means nothing more than “it’s time to drink some water”. This is simply valid advice whenever you are outside in the hot sun and it is particularly valid when you are playing games all day in summer heat.  And while there is always water available at Barfleet events, a good idea is either a Camelbak or portable water container.  Remember there’s no dehydration in Barfleet (apologies to the Nymph).&lt;/p&gt;

&lt;h2 id=&quot;this-is-glamping-not-camping&quot;&gt;This is Glamping Not Camping&lt;/h2&gt;

&lt;p&gt;I grew up camping and I thought Summer Games was camping – no. Summer Games is glamping (Glamour Camping). When your context for camping is minimizing weight, it is hard to adapt your brain to camping with electricity (kudos to Ignitable Shot Therapy for running a functional electrical grid; thanks!), air mattresses, ready access to a Walmart and tents big enough to park a motorcycle in. And yes there is one attendee who sleeps in an authentic yurt.&lt;/p&gt;

&lt;p&gt;The underlying inverted camping assumption driving glamping is that weight doesn't matter but volume does (since glamping uses cars for travel to the camping location and wagons for travel within the camp site). A car can only hold so much volume but even a prius can haul a crap ton of weight.&lt;/p&gt;

&lt;h3 id=&quot;this-is-tote-based-camping&quot;&gt;This is Tote Based Camping&lt;/h3&gt;

&lt;p&gt;The best way I found to wrap my head around the model of Summer Games is by thinking of it as &quot;Tote Based Camping&quot;. Totes are plastic storage containers that all your gear goes in. You get your totes to your campsite with a camping wagon. I found that you could effectively get by with the following categories of totes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clothing (one tote for all clothing and bathroom stuff for each 2 people in your campsite; most of your clothing will actually go unused)&lt;/li&gt;
  &lt;li&gt;Kitchen Gear / Camping Gear.&lt;/li&gt;
  &lt;li&gt;Food.&lt;/li&gt;
  &lt;li&gt;Misc / Entertainment.&lt;/li&gt;
  &lt;li&gt;Booze. This is Barfleet!  It should be noted that there is a full bar at SummerGames.  I chose to bring alcohol so that it could be in our campsite but this actually wasn’t needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;your-camping-wagon&quot;&gt;Your Camping Wagon&lt;/h3&gt;

&lt;p&gt;You need a folding camping wagon or a folding camping hand truck. This needs to be big enough to move one or more totes and you need bungee cords on it so that when the wagon falls over you don't dump your wife's (or boyfriend's) clothes in the dirt. My second biggest Summer Games mistake was not realizing the need for a wagon and thankfully my Shiny wife saved me by purchasing one.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pro Tip&lt;/em&gt;: Wagons can be enhanced and customized. Creativity is important.&lt;/p&gt;

&lt;h3 id=&quot;tote-1---clothing&quot;&gt;Tote 1 - Clothing&lt;/h3&gt;

&lt;p&gt;Here's what you need at a minimum for each person in the clothing tote (assuming you are staying for the full 5 days, Thursday to Monday; adjust based on days on the ground):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;10 pairs of underwear (you get wet and muddy)&lt;/li&gt;
  &lt;li&gt;10 pairs of socks if you wear such things; I don't&lt;/li&gt;
  &lt;li&gt;4 pairs of shorts&lt;/li&gt;
  &lt;li&gt;5 t shirts&lt;/li&gt;
  &lt;li&gt;2 jackets&lt;/li&gt;
  &lt;li&gt;Shoes (see below)&lt;/li&gt;
  &lt;li&gt;1 pair of jeans or pants&lt;/li&gt;
  &lt;li&gt;Pajama Pants / Sweats because at times it can be cold&lt;/li&gt;
  &lt;li&gt;Dresses / Skirts / Kilts for the evening dance party as per your preference&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tote-2---kitchen-gear--camping-gear&quot;&gt;Tote 2 - Kitchen Gear / Camping Gear&lt;/h3&gt;

&lt;p&gt;This is the heaviest of the totes. I'm a pretty serious cook so my needs are likely stronger than yours. Here's what goes in ours:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Propane Torch for fire starting even in the damn rain&lt;/li&gt;
  &lt;li&gt;Extra tarps if you have them&lt;/li&gt;
  &lt;li&gt;Paper Coffee Cups&lt;/li&gt;
  &lt;li&gt;Red Solo Cups&lt;/li&gt;
  &lt;li&gt;Classic Boy Scout Mess Kit&lt;/li&gt;
  &lt;li&gt;Small Propane Stove&lt;/li&gt;
  &lt;li&gt;Trash Bags - you need these for daily use and for hauling out dirty clothes / stuff at the end.  You need at least one for each day.&lt;/li&gt;
  &lt;li&gt;Citronella Candles&lt;/li&gt;
  &lt;li&gt;Plastic Knives and Forks and Spoons&lt;/li&gt;
  &lt;li&gt;Paper Towels&lt;/li&gt;
  &lt;li&gt;AeroPress Coffee Maker&lt;/li&gt;
  &lt;li&gt;Extra pocket knives for giving to someone; I lost my first one before I left the house when another car in our caravan was missing one&lt;/li&gt;
  &lt;li&gt;Toilet paper in case the bathrooms run out; just a roll or two for personal use&lt;/li&gt;
  &lt;li&gt;Paper Plates&lt;/li&gt;
  &lt;li&gt;Kitchen Tongs&lt;/li&gt;
  &lt;li&gt;Spatula&lt;/li&gt;
  &lt;li&gt;Plunge Whisk&lt;/li&gt;
  &lt;li&gt;Cooking Skewers&lt;/li&gt;
  &lt;li&gt;Long Matches&lt;/li&gt;
  &lt;li&gt;Canola Oil cooking spray both pump and aerosol (for a flamethrower in case the zombies attack)&lt;/li&gt;
  &lt;li&gt;Thick Leather gloves for pulling things off hot fires&lt;/li&gt;
  &lt;li&gt;Flashlight - Camping Lantern (a lantern is a flashlight with a handle and a base). It stands up on its own and can be hung as well.&lt;/li&gt;
  &lt;li&gt;Flashlight - Head Lamp&lt;/li&gt;
  &lt;li&gt;Flashlight - Small, personal, pocketable&lt;/li&gt;
  &lt;li&gt;Flashlight - Large enough to blind a zombie&lt;/li&gt;
  &lt;li&gt;Sunscreen&lt;/li&gt;
  &lt;li&gt;Duct Tape&lt;/li&gt;
  &lt;li&gt;Double A and Triple A batteries (LED lights last so much longer than older styles that this may be personal paranoia)&lt;/li&gt;
  &lt;li&gt;Kitchen Knives&lt;/li&gt;
  &lt;li&gt;Frying Pan&lt;/li&gt;
  &lt;li&gt;Tin Foil&lt;/li&gt;
  &lt;li&gt;Pot Holder&lt;/li&gt;
  &lt;li&gt;Measuring spoons&lt;/li&gt;
  &lt;li&gt;Kitchen shears&lt;/li&gt;
  &lt;li&gt;Light Sticks&lt;/li&gt;
  &lt;li&gt;Butane lighter stick&lt;/li&gt;
  &lt;li&gt;Sharpie&lt;/li&gt;
  &lt;li&gt;Rope for an ad hoc popup / tent level sun shield to reduce the damn heat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pro Tip&lt;/em&gt;: The best trick I came up with for this tote was that I could upgrade my old crappy kitchen gear to Summer Games stuff by moving it to the camping gear tote and giving my wife nice new kitchen gear.  This may actually be cheating…&lt;/p&gt;

&lt;h3 id=&quot;tote-3---food&quot;&gt;Tote 3 - Food&lt;/h3&gt;

&lt;p&gt;Bring food for the requisite number of days. Food is very dietary specific so it's hard to describe. For example my wife has Celiac so our food issues are quite different from yours. You can put all the non perishable food in a single tote. Here are the baseline items that will always be in our food tote:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Granola Bars - 3 boxes - for quick energy&lt;/li&gt;
  &lt;li&gt;Coffee&lt;/li&gt;
  &lt;li&gt;English Breakfast Tea&lt;/li&gt;
  &lt;li&gt;Tortillas, Corn and Flour&lt;/li&gt;
  &lt;li&gt;Summer Sausage&lt;/li&gt;
  &lt;li&gt;Nuts&lt;/li&gt;
  &lt;li&gt;Crackers&lt;/li&gt;
  &lt;li&gt;Canned beans - because camping and eating beans just feels authentic; I favor Bush's Southern Style White Beans but your preference obviously&lt;/li&gt;
  &lt;li&gt;Tuna, 2 cans&lt;/li&gt;
  &lt;li&gt;An onion or two&lt;/li&gt;
  &lt;li&gt;Bread&lt;/li&gt;
  &lt;li&gt;Salt&lt;/li&gt;
  &lt;li&gt;Pepper&lt;/li&gt;
  &lt;li&gt;Crushed Red Pepper&lt;/li&gt;
  &lt;li&gt;Jalapenos because spicy&lt;/li&gt;
  &lt;li&gt;Olives&lt;/li&gt;
  &lt;li&gt;Marshmallows&lt;/li&gt;
  &lt;li&gt;Graham Crackers&lt;/li&gt;
  &lt;li&gt;Ketchup&lt;/li&gt;
  &lt;li&gt;Mustard&lt;/li&gt;
  &lt;li&gt;Chocolate Bars, fully sealed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Funny Games Moment&lt;/strong&gt;: Chocolate bars melt in summer heat and ours actually did.  Then, in a true fleet moment, the phrase &lt;em&gt;Chocolate Bukkake&lt;/em&gt; was immediately coined by Ignitable Shot Therapy. A joke was made that we could find someone in camp with this fetish and and then they spoke up …&lt;/p&gt;

&lt;h4 id=&quot;sidebar-ultimate-smores&quot;&gt;Sidebar: Ultimate S'mores&lt;/h4&gt;

&lt;p&gt;On the last night around the campfire, Adorable Cannon Fodder shared outstandingly excellent S'Mores with me, honestly the best I’ve ever eaten. Thank you! Here is her recipe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chocolate Graham Crackers&lt;/li&gt;
  &lt;li&gt;Square Marshmallows&lt;/li&gt;
  &lt;li&gt;Double Stuff Oreos&lt;/li&gt;
  &lt;li&gt;Hershey's Bar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;She also had the coolest wagon of all complete with hand sanitizer dispenser.&lt;/p&gt;

&lt;h3 id=&quot;tote-4---misc--entertainment&quot;&gt;Tote 4 - Misc / Entertainment.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Power strip and 20’ Extension Cord – if you get an electric tent.&lt;/li&gt;
  &lt;li&gt;USB Batteries for phone charging&lt;/li&gt;
  &lt;li&gt;USB Laser lights for tent coolness; a single USB battery can drive these for multiple nights&lt;/li&gt;
  &lt;li&gt;Two editions of Flux card game, Firefly and Drinking&lt;/li&gt;
  &lt;li&gt;FoxTail LED edition for night time catch&lt;/li&gt;
  &lt;li&gt;Frisbee&lt;/li&gt;
  &lt;li&gt;Wireties assortment&lt;/li&gt;
  &lt;li&gt;Popup Trash Can&lt;/li&gt;
  &lt;li&gt;Extra Sunglasses&lt;/li&gt;
  &lt;li&gt;Nespresso Machine / Milk Steamer (Coffee is Life).  Again if you get an electric tent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tote-5---booze&quot;&gt;Tote 5 - Booze&lt;/h3&gt;

&lt;p&gt;This can be beer, wine, spirits, mixers, bar tools, etc. This varies for every person.&lt;/p&gt;

&lt;h3 id=&quot;cooler&quot;&gt;Cooler&lt;/h3&gt;

&lt;p&gt;For food you also need to have a cooler to hold the cold stuff. There are two included meals at Summer Games (Friday dinner; taco night and Sunday breakfast; pancakes, eggs, bacon, goetta). You need a cooler to hold whatever other perishable items you want to eat. This varies per person but here are the essentials that HAVE to be in our cooler:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Butter&lt;/li&gt;
  &lt;li&gt;Sea Salt Caramel Milk for Coffee; this is the coffee creamer of the gods; available from Kroger&lt;/li&gt;
  &lt;li&gt;Half and Half; this is the coffee creamer for mere mortals&lt;/li&gt;
  &lt;li&gt;Proteins&lt;/li&gt;
  &lt;li&gt;Cheese&lt;/li&gt;
  &lt;li&gt;Smoked Salmon&lt;/li&gt;
  &lt;li&gt;Hard Boiled Eggs&lt;/li&gt;
  &lt;li&gt;Eggs cracked into a tupperware and beaten for scrambling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;big-items&quot;&gt;Big Items&lt;/h2&gt;

&lt;p&gt;A camp site is basically a small bit of land where you live for N days while you try and enjoy yourself. Given that you may be rained on, invite friend over to your campsite, etc, the big things actually matter.  Again since this is glamping not camping, weight doesn’t matter but volume does.  For example, our tent was heavy as hell but it had 3 rooms which meant we had a lot of space when it rained.&lt;/p&gt;

&lt;h3 id=&quot;do-i-tent&quot;&gt;Do I Tent?&lt;/h3&gt;

&lt;p&gt;Even though Summer Games is a camping trip and tents are kind of a thing, you do not have to stay in a tent, there are cabins and bunk houses.  These accommodate people with medical needs like CPAP machines, people without tents / equipment and people who just want to sleep in a real bed.&lt;/p&gt;

&lt;h3 id=&quot;tent&quot;&gt;Tent&lt;/h3&gt;

&lt;p&gt;A tent needs to be big enough that if you were stuck inside it for N days of rain you would truthfully still be able to say &quot;that was fun&quot;. This varies per person.&lt;/p&gt;

&lt;h3 id=&quot;camping-table&quot;&gt;Camping Table&lt;/h3&gt;

&lt;p&gt;A camping table is a simple plastic table, sometimes folding, sometimes not that gives a decent workspace in camp. Unlike the Boy Scout camping I grew up with where you never had a place to work, a camping table solves this.&lt;/p&gt;

&lt;h3 id=&quot;camping-chairs&quot;&gt;Camping Chairs&lt;/h3&gt;

&lt;p&gt;Folding camping chairs make it happy to sit down and talk with people. You should have least the number of chairs as you have people on your trip plus a few.&lt;/p&gt;

&lt;h3 id=&quot;heat-source&quot;&gt;Heat Source&lt;/h3&gt;

&lt;p&gt;You need a heat source that you can cluster around because cooking over wood or charcoal is fun. We wanted a fire pit but my wife found the &lt;a href=&quot;https://www.amazon.com/Char-Griller-2-2424-Table-Charcoal-Grill/dp/B003HFFVJK/&quot;&gt;Char Griller Table Top Charcoal Grill&lt;/a&gt; and everyone was very impressed by it. Even Ignitable Shot Therapy, Summer Games Fire Demigod, thought it was a great idea.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.shopify.com/s/files/1/1960/2909/products/22424_1_STUDIO_Front.jpg?v=1557240466&quot; alt=&quot;grill&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;popup&quot;&gt;Popup&lt;/h3&gt;

&lt;p&gt;A popup is just that, a popup canopy which goes over your camping table and chairs to shield you from the rain. There will be times when you are sitting under your popup while water runs underneath you and are still having a damn great time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.leaderaccessories.com/public/uploads/goods/image/goods_img/e26f6981bd07d97ea6b26098a9d09089_thumb.jpg&quot; alt=&quot;popup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: The best trick I saw at Summer Games was the person who pitched a pop up over their tent.  That one trick likely trimmed 10 degrees from the heat in their tent.&lt;/p&gt;

&lt;h2 id=&quot;vital---your-pocket-knife&quot;&gt;Vital - Your Pocket Knife&lt;/h2&gt;

&lt;p&gt;Ever since 9/11 I no longer carry a pocket knife everywhere I go but going camping one time pointed out to me just how important a pocket knife can be. I used mine constantly. Your choice will vary best on preference. I used a Smith and Wesson Special Tactical and it worked brilliantly.&lt;/p&gt;

&lt;h2 id=&quot;disconcerting-aspects&quot;&gt;Disconcerting Aspects&lt;/h2&gt;

&lt;p&gt;There were a few disconcerting aspects to Summer Games, specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Connectivity. We use AT&amp;amp;T and there was next to no signal. I was personally glad to be disconnected but we had a kid crisis on the way to Summer Games and having to drive to the Walmart to talk to your kid, well, sucks. This is apparently fixable if you use T-Mobile as a provider since that one provider works at Summer Games. Perhaps a &lt;a href=&quot;https://support.t-mobile.com/docs/DOC-36974&quot;&gt;mobile hotspot linked to T-Mobile&lt;/a&gt; would work.&lt;/li&gt;
  &lt;li&gt;Bathrooms. Oy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;useful-advice-for-the-noob&quot;&gt;Useful Advice for the Noob&lt;/h2&gt;

&lt;p&gt;Here are a series of bullet points that address different things where I had specific issues.  Some of these are repeats from above and the fact that they are repeated indicates their importance.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Totes&lt;/em&gt; - Get these totes from &lt;a href=&quot;[https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/27-gallon-black-storage-tote/27gblkyw/p-1459474982373.htm](https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/27-gallon-black-storage-tote/27gblkyw/p-1459474982373.htm)&quot;&gt;Menards&lt;/a&gt;. They have the advantage of being easily made raccoon proof. There is a stripper raccoon named Cinnamon that roams the campsite.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Trash&lt;/em&gt; - Your trash needs to go up every single night. You cannot leave food around.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Bathrooms&lt;/em&gt; - The water will go on and off every single day. This is not a big deal and it will be fine. The port-a-potties on site are not as scary as you think they will be.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Car Bag&lt;/em&gt; - Pack a car bag with emergency clothing for when you get soaked. Make CERTAIN to leave this bag in the car or when your tent gets flooded you will lose your last dry clothes. My wife used the car bag to find a clean shirt on the way home when her clothing was uncomfortable.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Tent&lt;/em&gt; - Whatever you do get a tent with a functional door such as the &lt;a href=&quot;https://www.coleman.com/tenaya-lake-6p-fast-pitch-cabin-with-cabinets/2000018142.html?cgid=coleman-tentsandshelters#pmax=5%2C000.00&amp;amp;prefn1=numberOfSleepers&amp;amp;pmin=250.00&amp;amp;prefv1=4-Person%7C6-Person&amp;amp;start=1&quot;&gt;Coleman Tenaya&lt;/a&gt;. You will go in and out of your tent a huge number of times and a door is a dramatic improvement in quality of life. Trust me.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Air Mattress&lt;/em&gt;. You need a decent air mattress. You want one with a built in inflater which has Never Flat technology or you will end up adding air in the middle of the night while cursing life, the universe and your choices. It should be noted that this option only works if you have an electric campsite or if you have a UPS plugged into your air mattress.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Zip Up&lt;/em&gt;. Keep your tent zipped at all times or get used to bugs going in and out. I had a spider run over my face on the last night. Disconcerting to say the least.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Tent Pull&lt;/em&gt;.  Attach a lighted pull to your tent zipper. Thanks to NerdOn for this tip using a glow in the dark LED &quot;ice cube&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Stake down your tent&lt;/em&gt;. A tent with an external frame is largely self supporting so you may not choose to stake it down. This can lead to issues with your tent floating away. &lt;a href=&quot;https://www.walmart.com/ip/Universal-Camping-Steel-Tent-Stakes-Heavy-Duty-Replacement-Pegs/890381996&quot;&gt;[These are the best tent stakes I've ever used](https://www.walmart.com/ip/Universal-Camping-Steel-Tent-Stakes-Heavy-Duty-Replacement-Pegs/890381996)&lt;/a&gt;. Thank you Han Solo Cup for loaning them to me when I needed them!&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Shoes&lt;/em&gt;.  You will need more shoes than you think. Camping is absolutely miserable when you don't have decent footwear.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Label your crap&lt;/em&gt;.  Lots and lots of things look identical; it makes it easier when you know that say this green chair is really yours.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Your Damn Car&lt;/em&gt;. If you get really hot and you need a place to sleep or make love, well, go to your car with your sleeping bag and teenager it&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Your Car Keys&lt;/em&gt;. Attach your car keys to your belt with a carabiner and keep them in a known place other than that. Losing your car keys means you can't go home and that's a big deal.  I never lose anything and I lost stuff at Summer Games.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Cheap Wedding Ring&lt;/em&gt;. My wife and I went to Amazon for cheap wedding rings (think $10 for titanium) instead of wearing our good stuff.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Cheap Watch&lt;/em&gt;. You lose track of time camping and a cheap watch helps keep you connected to the real.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;

&lt;p&gt;There are other documents on Summer Games on Facebook that you should read, specifically packing lists.  I read them but still wrote this one because I didn’t feel that the packing lists gave me a feel for the “Zen of Summer Games”; the packing lists had the how but not the why.&lt;/p&gt;

&lt;h2 id=&quot;recovering-from-summer-games&quot;&gt;Recovering from Summer Games&lt;/h2&gt;

&lt;p&gt;Among people who go to science fiction cons, there is the phrase Con Drop:&lt;/p&gt;

&lt;p&gt;Con Drop is a physiological reaction that often has emotional or psychological symptoms. Essentially, it's the endorphins and other happy chemicals your body has been spewing out the last 3-5 days drying up. It's the crash after the high. Con Drop generally happens two to four days after the end of the convention.  &lt;a href=&quot;http://speculativechic.com/2017/05/11/convention-life-con-prep-con-crud-con-drop/&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I would add that Summer Games isn’t a normal con – it is an event dialed up to 11 in every damn way.  This makes the con drop even worse.  So just as you feel wonderful during Summer Games, I can assure you that you will feel pretty damn bad afterwards – I know because I am living it right damn now.  Here are some suggestions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take the day off from work after Summer Games.  I didn’t do that and I profoundly regret it.&lt;/li&gt;
  &lt;li&gt;Aggressively practice self care – if you like movies then watch movies; if you like to read comics then get out a run and devour it; if you like ice cream, buy the gallon container.&lt;/li&gt;
  &lt;li&gt;Sleep as much as possible.  This has been the biggest issue for me.  I went from sleeping two to three hours a night at Summer Games to sleeping … three to four hours a night at home.&lt;/li&gt;
  &lt;li&gt;Eat well if you can.  At Summer Games you aren’t really eating a balanced meal.  Better nutrition is helpful.  The one exception to this is that I’ve found that sugar helps.&lt;/li&gt;
  &lt;li&gt;Help someone else.  I’ve always found that when times are bad, helping someone out makes them better.  Honestly that’s why I wrote this document – it got me past the worst of the con drop.  So find a friend suffering from this and get together with them; feed them dinner, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And you know what?  Summer Games was absolutely, unquestionably worth it.&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;p&gt;This document was reviewed and edited by Shiny, Nymph, Dr. Shake  N Bake, Uisge T'Ango Foxtrot and D’zzy L’zzy.  Thank you for turning these somewhat incoherent scribblings into actual prose.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/barfleet/2019/05/30/summer-games-an-overview-for-noobs-by-a-noob.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/barfleet/2019/05/30/summer-games-an-overview-for-noobs-by-a-noob.html</guid>
        
        <category>barfleet</category>
        
        
        <category>barfleet</category>
        
      </item>
    
      <item>
        <title>And Now for Something New</title>
        <description>&lt;p&gt;Io, Io, its off to code I go.  From bit to byte I build my stack. Io, Io its off to code I go….&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd development_project_path
rails new slumgullion --database=mysql   --skip-spring --skip-listen --skip-test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then a shift to &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2017/02/26/setting-up-rails-with-rspec-from-the-start.html&quot;&gt;RSpec&lt;/a&gt;.  And then a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd slumgullion
# mate is my source code editor
# edit Gemfile (core package file for external components aka gems)
mate Gemfile
# Change gemfile version number to 5.2.3
# Follow directions in blog post above
bundle update
mate config/database.yml
#update database configuration file with development credentials
bundle exec rails db:create
bundle exec rails g controller Dashboard
# set the default route
mate config/routes.rb
# write a trivial def index i.e. def index end
mate app/controllers/dashboard_controller.rb
# start the server
bundle exec rails s -p3000
# open in chrome this url 
http://localhost:3000/
# get errors; remember to create a blank index template to force html rendering
touch app/views/dashboard/index.html.erb
# mate app/views/dashboard/index.html.erb
# get a blank page without any errors
# get it into version control
git add . 
git commit -m &quot;Canonical initial commit message&quot;
# goto git and create a private repo
# add the origin
# initial push
# create first branch paralleling first ticket id
git branch feature/1
git co feature/1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now its time for real work.  I personally believe that Rails development is always, always, always, always, always, always best done with N terminal windows where the beginning of them is as follows: Server, Database Terminal, Rails Console, General Command Line usage (add / commit / run tests / etc).  Your opinion may differ but that's how I roll – keep all your tooling available at the same time.  And yes it is a Zorkian experience where you can be lost in a twisty maze of terminal windows all alike.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# onto Bootstrap configuration for some appearance
mate Gemfile
# add bootsnap
# add bootstrap-saas
# stop server with command + c / ctrl c
bundle update
# port 3000 is default so omit
bundle exec rails s 
# start second terminal tab - db window
# cd development root
cd slumgullion
# start third terminal tab - console window
# cd development root
cd slumgullion
bundle exec rails c
# start fourth terminal window
cd slumgullion
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Realize that after N late nights, even with examples you wrote yourself using Bootstrap, you do not know how to setup Bootstrap from scratch so sacrifice a small goat in the dark of the night whilst chanting around a firepit.  When that fails to produce results, grumble and then resume with Google while chanting &lt;a href=&quot;https://medium.freecodecamp.org/add-bootstrap-to-your-ruby-on-rails-project-8d76d70d0e3b&quot;&gt;Save Me FreeCodeCamp.  Save Me FreeCodeCamp&lt;/a&gt;.  And like magic you channel this set of commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git mv app/assets/stylesheets/application.css app/assets/stylesheets/application.scss
# fix application.scss like url above directs
mate app/assets/stylesheets/application.scss
# fix application.js like url above directs
mate app/assets/javascripts/application.js
mate app/views/application.html.erb
# add a jumbotron element to see if bootstrap works
mate app/views/dashboard/index.html.erb
# restart server as per above
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Success !&lt;/p&gt;

&lt;p&gt;With thanks to Pete Jenney / Dataware for giving me the basis to make up that lyrical riff.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/slumgullion/2019/05/21/and-now-for-something-new.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/slumgullion/2019/05/21/and-now-for-something-new.html</guid>
        
        <category>rails</category>
        
        <category>slumgullion</category>
        
        
        <category>slumgullion</category>
        
      </item>
    
      <item>
        <title>Using Ansible ec2.py Directly</title>
        <description>&lt;p&gt;This is a shorty but it is incredibly useful when you need to diagnose &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; weirdness.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; I know this is obvious but when you have used Ansible and AWS extensively, you get used to ec2.py just being a component to Ansible and you don’t even think about calling it directly.&lt;/p&gt;

&lt;p&gt;We recently had a situation where all of our Ansible driven deploys were failing.  And the reason for this wasn’t easy to diagnose because all of our deploys were wrapped up in fairly complex shell logic.  What helped us sort it out was breaking the underlying Ansible execution pipeline apart and calling &lt;a href=&quot;https://github.com/ansible/ansible/blob/devel/contrib/inventory/ec2.py&quot;&gt;ec2.py&lt;/a&gt; directly.  ec2.py is the open source bit that talks to an AWS environment and returns a massive data structure that represents the &quot;inventory&quot; of servers, volumes, network connections, etc.&lt;/p&gt;

&lt;p&gt;Here’s the way to call ec2.py directly&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AWS_ACCESS_KEY_ID=some_access_key AWS_SECRET_ACCESS_KEY=some_secret_key /etc/ansible/inventory/ec2.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As long as your ec2.py is executable (and it damn well should be), this will return the normal giant JSON hash of data that represents your AWS environment.  And if it doesn't return a giant JSON hash, well, then you know you have a problem.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2019/05/18/using-ansible-ec2-py-directly.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2019/05/18/using-ansible-ec2-py-directly.html</guid>
        
        <category>ansible</category>
        
        <category>devops</category>
        
        <category>python</category>
        
        <category>aws</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Camel Camel Camel - A Way to Get Amazon Stuff Cheaper</title>
        <description>&lt;p&gt;The vast breadth of things on the Internet never fails to amaze me.  And when I discover something new, I find that writing about it helps me internalize them.  &lt;a href=&quot;https://www.camelcamelcamel.com&quot;&gt;Camel Camel Camel&lt;/a&gt;, hence forth referred to as Camel^3, is one that I am absolutely late to the party  on but I thought that someone out there might not know about it.&lt;/p&gt;

&lt;p&gt;Camel^3 is an Amazon price watcher that lets you supply either an Amazon link or simply a search term as well as a price target.  Camel^3 will then persistently monitor that product and alert you when the price drops.  The advantage to this is that even though you think that Amazon’s prices are fixed, they are actually fairly variable and when you have a &lt;strong&gt;non immediate&lt;/strong&gt; purchase need, Camel^3 gets you what you need at a cheaper price.&lt;/p&gt;

&lt;p&gt;In my case I’m currently lusting after a &lt;a href=&quot;https://www.amazon.com/Synology-bay-DiskStation-DS218j-Diskless/dp/B076G6YKWZ/ref=sr_1_3?keywords=Synology&amp;amp;qid=1558199113&amp;amp;s=gateway&amp;amp;sr=8-3&quot;&gt;Synology NAS Disc array&lt;/a&gt; which presently has a price of $175.  So I added it to my Camel^3 page with a price target of $130.  And since this is going to require drives with it, I can also set up Camel^3 price watches on &lt;a href=&quot;https://www.amazon.com/Red-Pro-10TB-Hard-Drive/dp/B072F422FW/ref=sr_1_fkmrnull_3?keywords=western+digital+raid+red+10tb&amp;amp;qid=1558199233&amp;amp;s=gateway&amp;amp;sr=8-3-fkmrnull&quot;&gt;Western Digital RED Raid Drives&lt;/a&gt;.    So if my price watches get fulfilled between the disc array and the drives, I should save about $200.&lt;/p&gt;

&lt;p&gt;Camel^3 makes money by you returning to their page and using their affiliate links to Amazon.  There doesn’t seem to be any privacy violations, advertising or any other crap as all too often there are.  Oh and massive props to Camel^3 for allowing use of its service without even creating an account and password.  That’s hugely awesome.&lt;/p&gt;

&lt;p&gt;Strongly Recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/amazon/2019/05/18/camel-camel-camel-a-way-to-get-amazon-stuff-cheaper.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/amazon/2019/05/18/camel-camel-camel-a-way-to-get-amazon-stuff-cheaper.html</guid>
        
        <category>amazon</category>
        
        
        <category>amazon</category>
        
      </item>
    
      <item>
        <title>A Mobile First Blogging Strategy</title>
        <description>&lt;p&gt;Not that anyone’s watching but if they were, they would notice that I’ve started blogging again both here and on my &lt;a href=&quot;https://www.fuzzyblog.io/recipes&quot;&gt;recipes&lt;/a&gt; site.  There were a few things that really made the difference in my starting again but the biggest was realizing that I could actually employ mobile devices in my blogging strategy.&lt;/p&gt;

&lt;p&gt;The interesting thing here is that I made zero changes in my blogging tool.  I'm still using Jekyll hosted on Github Pages.  These changes were purely in how I approached content.  You could use this with Jekyll, WordPress or any blogging tool.&lt;/p&gt;

&lt;p&gt;Here's what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The biggest change was my adoption of Apple Notes as a core text editor.  Yes it isn't perfect by any means but the fact that Apple Notes is a standard thing across my iPhone, my iPad and my OSX laptops means that I have a simple way to always create a blog post no matter where I am.  The Sync on Apple Notes seems to be flawless and it is fast enough that I now use Apple Notes as a &quot;paste buffer&quot; between my boxes.&lt;/li&gt;
  &lt;li&gt;I &lt;a href=&quot;https://www.howtogeek.com/344310/how-to-turn-off-smart-punctuation-on-your-iphone-and-ipad/&quot;&gt;turned off Smart Punctuation&lt;/a&gt; on all my iOS devices so I don't have issues with a curly quote in a MarkDown file.&lt;/li&gt;
  &lt;li&gt;I turned off Smart Punctuation on my OSX device also, Apple Menu, System Preferences, Keyboard, Text, uncheck Use Smart Quotes and Dashes.&lt;/li&gt;
  &lt;li&gt;I copied into my Apple Notes Blogging folder a markdown template for how I like to create a post.  When I need to start something I just copy it in at the top of the post.&lt;/li&gt;
  &lt;li&gt;I added a Belkin keyboard to my iPad converting it from a tablet to a lightweight, long lasting laptop.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And this is what my blogging strategy now looks like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into notes, wherever I am, in whatever computing device I have handy.&lt;/li&gt;
  &lt;li&gt;Open my template post and copy all of it.&lt;/li&gt;
  &lt;li&gt;Create a new note and paste in my template.&lt;/li&gt;
  &lt;li&gt;Write.  Lather / Rinse / Repeat as needed.&lt;/li&gt;
  &lt;li&gt;When I’m ready to publish, go to my actual laptop and copy the title off the post.  Then I execute a “jekyll post (paste in title)” and press enter.&lt;/li&gt;
  &lt;li&gt;I go back into the note and copy all of it with command + a, command + c&lt;/li&gt;
  &lt;li&gt;I open the resulting post in my MarkDown editor of choice, TextMate.&lt;/li&gt;
  &lt;li&gt;I paste in the text and make any residual edits / adjustments.&lt;/li&gt;
  &lt;li&gt;If I don’t have the Jekyll Server running, I start it with jekyll s to generate the correct feed and such.&lt;/li&gt;
  &lt;li&gt;In the command line, I do a git add / commit / push cycle. I also wrapped this into a shell command so I can just type ./postentries.sh &quot;some description of what i'm posting&quot; and have all of this handled for me (including step 9).&lt;/li&gt;
  &lt;li&gt;And then everything is online almost instantly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Writing this out does make it seem convoluted but it is actually pretty damn seamless and the ability to use any computing device I have at hand for content creation makes it &lt;em&gt;wonderful&lt;/em&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 18 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/blogging/2019/05/18/a-mobile-first-blogging-strategy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/blogging/2019/05/18/a-mobile-first-blogging-strategy.html</guid>
        
        <category>blogging</category>
        
        <category>writing</category>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>When libreadline Goes Whack</title>
        <description>&lt;p&gt;Well shite.  I’ve seen this before and I just plain hate it.  This is the last error you want to get on a Friday afternoon after five.  Taking the time to fix it now generally means that your computer won’t boot on a Monday due to something going wrong in the fixing process and you forgetting what you did.&lt;/p&gt;

&lt;p&gt;Every single time libreadline goes to hell, it is always a pain. Here’s how I fixed it this time.&lt;/p&gt;

&lt;h2 id=&quot;the-environment--context&quot;&gt;The Environment / Context&lt;/h2&gt;

&lt;p&gt;I'm running a MacBook on OSX (Sierra; yes I'm a luddite on OS upgrades) with &lt;a href=&quot;https://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt; 1.7.0.&lt;/p&gt;

&lt;h2 id=&quot;the-error&quot;&gt;The Error&lt;/h2&gt;

&lt;p&gt;Here is the error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dyld: Library not loaded: /usr/local/opt/readline/lib/libreadline.7.dylib
Referenced from: /usr/local/Cellar/postgresql@9.5/9.5.12/bin/psql
Reason: image not found
sh: line 1: 36440 Abort trap: 6           
/usr/local/Cellar/postgresql@9.5/9.5.12/bin/psql seasthree_test /Users/sjohnson/fuzzygroup/seas/cas-seas3-attain-admin/spec/fixtures/schools.sql```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;libreadline is a core library used by almost any open source tool that ends up reading input from the standard in.  In this case I'm trying to feed a sql file into the pg (postgres) executable.&lt;/p&gt;

&lt;p&gt;This is one of those errors that I've seen a dozen or so times and I always fix it with some crazy combination of jiggery-pokery / goat sacrificing.  This time I thought I'd document it for, well, the next damn time.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;The answer appears, courtesy of Google via a &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/issues/5799&quot;&gt;Github Issue&lt;/a&gt;, appears to be an update of bash.  Sigh.  While I love the power of command shells, I truly, truly hate messing with them.&lt;/p&gt;

&lt;p&gt;Here's the process I followed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That upgrades HomeBrew to the latest.  I then check the process again to see if it has magically gone away and no such luck.  The next step is to upgrade bash itself:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade bash 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On an OSX box there is the version of bash that comes with the system and then there is the bash that comes from HomeBrew.  The reason you upgrade bash is that what Apple ships is woefully obsolete:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash --version
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin16)
Copyright (C) 2007 Free Software Foundation, Inc.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Bash after it has been upgraded is now north of version 5.&lt;/p&gt;

&lt;p&gt;The way that you make your new bash usable is that you first have to add it to /etc/shells by editing this file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/shells
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This prompts you for your password.  Then at the very end of the file you need to add this line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After adding this line, do the CTRL+W and then CTRL+Q dance to exit the editor.  That essentially tells OSX &quot;Ok this is a valid shell that someone can now tell us they want to use&quot;.  The next step is to use the chsh command to make this permanent.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chsh -s /usr/local/bin/bash $USER
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Much of what I know about changing an OSX shell comes from this &lt;a href=&quot;https://apple.stackexchange.com/questions/224511/how-to-use-bash-as-default-shell&quot;&gt;Stack Exchange post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At this point you have set your system up to use the new shell but it won't take effect until you restart your terminal.  Given that I use iTerm and I have about 70 terminals open at any point, restarting a terminal is a big deal.  But what I can do is validate this by using the Apple Terminal.  So I start up Apple Terminal and do a:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo $BASH_VERSION
5.0.7(1)-release
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, unfortunately, I still get the error when I try again.  Sigh.  At this point with the new Bash in place, I'm able to try:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade libreadline
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that begins the process.  Now since libreadline is used by almost everyone that HomeBrew has installed for me, it is a long, long process.  I can watch it upgrade Postgres, Maple, etc.  When it is finally done, I try again only to find that my pg executable isn't there anymore.  This takes a moment of thought but I realize that it is simply moved since the previous directory included a version number.  When I finally reconstruct a path to the correct version of pg, it now executes flawlessly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/Cellar/postgresql@9.5/9.5.15/bin/psq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Success!  And, in closing, yes I do actually know that I shouldn't have to specify the exact pathing.  A big part of homebrew's advantage is that this isn't needed.  But for some reason, on this particular box, it is needed.  And I've just never bothered to figure out why.&lt;/p&gt;
</description>
        <pubDate>Sat, 11 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/brew/2019/05/11/when-libreadline-goes-whack.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/brew/2019/05/11/when-libreadline-goes-whack.html</guid>
        
        <category>brew</category>
        
        <category>osx</category>
        
        <category>libreadline</category>
        
        
        <category>brew</category>
        
      </item>
    
      <item>
        <title>The Schema WTF Moment Take 2 - An Excursion into SourceTree</title>
        <description>&lt;p&gt;I recently wrote about the &lt;a href=&quot;https://fuzzyblog.io/blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html&quot;&gt;Rails Schema WTF&lt;/a&gt; moment, that moment when you’re making changes to your system and you have issues with what to commit.  The problem I wrote about there was what happens when you get a migration from another developer.  This time I’m writing about what to do when you create a migration.&lt;/p&gt;

&lt;p&gt;The primary idea here isn’t much different from what I wrote about the other day but the core idea is the same — you only want to commit to version control the changes to the schema.rb file that your migration caused.  Let’s start with a sample migration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AddUniqueIndexToThingss &amp;lt; ActiveRecord::Migration[5.0]
  def up
    execute &quot;CREATE UNIQUE INDEX unique_index_things_on_id ON public.things USING btree (id, project_id) where deleted_at is null;&quot;
  end

  def down
    execute &quot;drop index unique_index_things_on_id&quot;
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you think thru this migration, it is going to introduce two changes to schema.rb:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A new date stamp on the schema.rb file will be listed at the top&lt;/li&gt;
  &lt;li&gt;A single line for the index creation will be added&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So conceptually what you want to do is do a git add and commit of only these things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The migration file itself&lt;/li&gt;
  &lt;li&gt;The date stamp line&lt;/li&gt;
  &lt;li&gt;The index creation line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And therein lies the problem because while Git is a fantastic tool, from the command line, you never want to have to commit a range of lines because it is just plain ugly.  Even after a decade plus of using git from the command line, I don’t know how to do that.&lt;/p&gt;

&lt;p&gt;And this brings us to SourceTree.  SourceTree is a Git user interface which makes this particular task actually easy.  Here are the steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run SourceTree.&lt;/li&gt;
  &lt;li&gt;If SourceTree doesn’t open the right git project automatically, navigate to the correct project with File menu, Open command.&lt;/li&gt;
  &lt;li&gt;You should set your view to &lt;em&gt;Flat list (single column)&lt;/em&gt; and also &lt;em&gt;Split view staging&lt;/em&gt; if it isn’t that way.  This is done with the hamburger icon to the right of &lt;em&gt;Pending Files, sorted by path&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;In the panel on the lower left, select the checkbox next to the migration itself.  This will move the migration file up to the Staged Files area.  This is equivalent to a &lt;em&gt;git add&lt;/em&gt; operation.&lt;/li&gt;
  &lt;li&gt;In the panel on the lower left click on the schema file.  This gives you a text view of the whole schema file on the right.  Start by finding BOTH lines for the date stamp (one will be red and one will be green).  Select BOTH of these and click the &lt;em&gt;Stage lines&lt;/em&gt; button.  This is equivalent to a git add command for only these lines.&lt;/li&gt;
  &lt;li&gt;In the text view of the whole schema file, scroll down until you find the exact changes from your migration.  In this case we are looking for an index creation line on the things table.  This line was an addition to your schema.rb file so it should be in green.  When you find it, select that line (or lines), highlighting them, and then click &lt;em&gt;Stage lines&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;In the left most bottom pane, right click the overall schema.rb file and click &quot;Reset&quot; from the context menu.&lt;/li&gt;
  &lt;li&gt;Press Command + Shift + C and write a commit message and then click the Commit message.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;thank-you&quot;&gt;Thank You&lt;/h2&gt;

&lt;p&gt;As always, thank you &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; for teaching me this particular trick and also for editing this post for clarity.  Appreciated.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/05/10/the-schema-wtf-moment-take-2-an-excursion-into-sourcetree.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/05/10/the-schema-wtf-moment-take-2-an-excursion-into-sourcetree.html</guid>
        
        <category>rails</category>
        
        <category>db</category>
        
        <category>schema</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>So You Want to Delete Temp Files - An Excursion into Software Engineering Suckitude</title>
        <description>&lt;p&gt;So today was a day of epic software engineering failure.  Let's consider, just for a second, this string of commit messages:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;feature/ATT-1551-f - And goodbye ... it all goes away like the bad dream that it was
feature/ATT-1551-e - It is called a constant; sigh; oh and an entire rewrite
feature/ATT-1551-d - And let's go again - there are still hours in the day to get this wrong ...
feature/ATT-1551-c - hopefully, possibly the last iteration on this humiliating bit of work
feature/ATT-1551-b - Argggh !!!!
feature/ATT-1551-a - Debugging hooks for understanding this bit of madness
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any experienced engineer can read between the lines of that level of &lt;em&gt;gallows humor&lt;/em&gt; in these commit messages and know, I mean &lt;em&gt;know&lt;/em&gt;, what's coming.  This whole blog post is an illustration of how something that is drop dead simple can really, really bite you in the ass.  And you can take away from this either a smug feeling of &quot;I'm smarter than that&quot; or you are raising a glass to me somewhere and saying &quot;you poor damn bastard, there, there&quot;.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;This all started with the git branch &lt;em&gt;feature/ATT-1551&lt;/em&gt; which added a feature to our architecture which cleaned up straggling temp files that had been left behind by a variety of different processes that generated data locally that was then queued up to S3.  Yes, yes, yes I know fix the cause not the symptom but that was out of the scope of the defined work; you know the drill.&lt;/p&gt;

&lt;p&gt;We are a Rails application and I made the decision to implement this as a Capistrano post deploy hook that executed a Capistrano rake task.  That was, unbeknownst to me, my &lt;em&gt;first&lt;/em&gt; mistake.  The specification on the ticket said that the need was to clean up any files in shared/tmp that were older than 10 days.  My initial pass on this ended up being about maybe 25 lines of ruby implemented in lib/capistrano/tasks/tmp_files.rake.&lt;/p&gt;

&lt;h2 id=&quot;and-heres-where-it-all-began&quot;&gt;And Here's Where It All Began&lt;/h2&gt;

&lt;p&gt;My code went thru the pull review process just fine until there was a comment that said something to the effect of &quot;Wouldn't it be better if the 10 days was not fixed in the code but could be adjustable from outside so we didn't have to redeploy if we needed a different amount of days&quot;.  That sounds logical, right?  The pull request discussion thread diverged between passing in a parameter or using an environment variable and it ultimately converged on an environment variable because a parameter didn't work since this was already buried inside an Ansible based deploy engine that executed a Capistrano task (that then called a post deploy hook).  So with that decision, the descent into madness truly began.  And if my description of Ansible spawning Capistrano spawning a post deploy hook feels virtually Cthulian to you, well, &lt;em&gt;yep&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidebar:&lt;/em&gt; I'd love to tell you that all of this was easily resolved but that wouldn't be fun, now would it?  Instead, while the initial code was written by me, getting this actually debugged and solved took two senior software engineers most of a day. And it is an excellent illustration of just how complex even something simple can be in today's world.  The second engineer got pulled in right about here, after the pull review process centered around environment variables.&lt;/p&gt;

&lt;h2 id=&quot;nothing-is-actually-simple-anymore&quot;&gt;Nothing is Actually Simple Anymore&lt;/h2&gt;

&lt;p&gt;We have a file of environment variables that are automatically defined by our application using the &lt;a href=&quot;https://github.com/laserlemon/figaro&quot;&gt;Figaro gem&lt;/a&gt;.  Normally I'm not an environment var fan but this really works well so I followed our normal process for this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go into our Ansible stack&lt;/li&gt;
  &lt;li&gt;Decrypt the environment variable files (these are YAML files and that becomes relevant later on)&lt;/li&gt;
  &lt;li&gt;Add the new variable to each of our environments (production, training, staging)&lt;/li&gt;
  &lt;li&gt;Encrypt the environment variables&lt;/li&gt;
  &lt;li&gt;Move the environment variable files up to our Jenkins deployment box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason for the convoluted process is that we don't have these files as part of our Capistrano deployment since they expose serious credentials.  Instead our Ansible wrapper around the deployment handles moving these up and in place.  And this uses Ansible's transparent encrypting / decrypting as well.&lt;/p&gt;

&lt;p&gt;After a few go arounds of &quot;what should this variable be named&quot;, I added to our Ansible stack two shell files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;decrypt_all.sh&lt;/li&gt;
  &lt;li&gt;encrypt_all.sh&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So at least that makes this process suck less given that each command line for this is about 112 characters long and I have to do it three times every single time.  I try and follow a boy scout's approach to code where you leave things better than you found them whenever possible.  And this did make things better.&lt;/p&gt;

&lt;h2 id=&quot;using-the-environment-variables&quot;&gt;Using the Environment Variables&lt;/h2&gt;

&lt;p&gt;Once this was done, that led to modifying the code to pull the value out of the environment variable.  Now this should have been nothing more than reading ENV['DELETE_TMP_FILE_DAYS'] for the value TRUE, couldn't be easier, right?  Ha!  &lt;em&gt;Shudder&lt;/em&gt;. Given that this was implemented as a Capistrano post deploy hook, getting any bit of this tested boiled down to this process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new branch for every single debugging attempt (because we have to go thru a pull review process)&lt;/li&gt;
  &lt;li&gt;Write code&lt;/li&gt;
  &lt;li&gt;Git commit / add / push&lt;/li&gt;
  &lt;li&gt;Go thru pull review process&lt;/li&gt;
  &lt;li&gt;Deploy&lt;/li&gt;
  &lt;li&gt;Wait thru a roughly 11 minute deploy cycle for something to fail&lt;/li&gt;
  &lt;li&gt;Read logs to analyze failure&lt;/li&gt;
  &lt;li&gt;Lather / Rinse / Repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that this is a post deploy hook executed Rake task there is no way to debug this easily.  Yes you can check the code.  And you can execute it manually in Rails console but that's not quite the same as it actually running in the environment … or is it?&lt;/p&gt;

&lt;h2 id=&quot;cutting-to-the-chase-or-11-steps-into-madness&quot;&gt;Cutting to the Chase Or 11 Steps Into Madness&lt;/h2&gt;

&lt;p&gt;This is getting kind of long already so I'm going to cut to the chase and bullet point the issues as we hit them:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The first issue was that we kept defaulting to the if / else case where our environment variable wasn't being set.  And since I was casting this to a constant for safety (remember this code deletes files on a file system so it is wise to be damn careful with it), this meant that the constant kept failing a defined? check.  We had put in a raise &quot;Constant not defined&quot; unless defined?(CONSTANT_NAME) check before anything got deleted as a safe guard and that one line of code entirely saved us.  Kudos to my coding partner, &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt;, for that.&lt;/li&gt;
  &lt;li&gt;This first issue ultimately ended up being tied to recognizing that a Capistrano post deploy hook &lt;em&gt;DOES NOT RUN UNDER RAILS&lt;/em&gt;!  And that means that anything loaded by a Rails initializer isn't available — meaning the Figaro gem never executed so the values in our environment variable file weren't even being seen.  But since our environment variable file syntax was read from using ENV['VARIABLE_NAME'] we weren't getting failures due to ENV not existing (ENV always exists, even in an IRB environment).  We would just get a nil value instead of the expected string value of TRUE or FALSE.&lt;/li&gt;
  &lt;li&gt;Figuring out that we weren't in a Rails environment was one of those face palm moments — you've seen the meme, the one with Picard.  I'm more than a bit embarrassed to point out how long that took so we're just going to move on past that issue.&lt;/li&gt;
  &lt;li&gt;Once we recognized that Figaro wasn't available and that we would never get a value for our environment variable key, it wasn't hard to write our own YAML reading routine.  That went thru a deploy cycle and we were fairly certain that it would be solved any minute now — what a crock!&lt;/li&gt;
  &lt;li&gt;What we found was that even though our YAML file had a structure of KEY_NAME=TRUE, we weren't getting back TRUE, we were getting back true.  So, of course, our if test which matched on 'TRUE' would fail.&lt;/li&gt;
  &lt;li&gt;At this point we started testing using the IRB (remember you aren't using Rails) console and YAML parsing.  And this led us to realize that YAML has automatic type coercion for a range of possible true / false values. The first clue was when my editor showed color coding on the YAML value we had, but not when we changed it to something odd like &quot;ASDF&quot;.  And we ultimately found the &lt;a href=&quot;https://yaml.org/type/bool.html&quot;&gt;YAML spec&lt;/a&gt; which takes about booleans.  Who even knew there was a spec for YAML???  Any of these in a YAML file will automatically get coerced into a boolean: &lt;em&gt;y, Y, yes, Yes, YES, n, N, no, No, NO, true, True, TRUE, false, False, FALSE, on, On, ON, off, Off, OFF&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;I don't know about any other developer but to hell with that noise!  I changed our value from TRUE to 1.  And because I wasn't sure if that would come to me as a value or a string, I ended up with a logical check like this: [1,&quot;1&quot;].include?(ENV['DELETE_TMP_FILE_DAYS']).&lt;/li&gt;
  &lt;li&gt;The next hurdle was that we realized that it was ambiguous where we should be looking for the YAML file.  The backtrace indicated that the YAML file should be found on the box where Capistrano was executing but logically because the post deploy hook executes each node being deployed, it should be on that machine.  And given that there was an 11 minute minimum cycle time per attempt to figure this out, we simply said to heck with it and tested for each directory and read from whichever existed.  And don't even bring up the fact that the exception Ruby throws on an invalid directory isn't Errno::ENOENT but instead a system call exception.  Sheesh.&lt;/li&gt;
  &lt;li&gt;Once we finally got past nothing more than the boolean test of whether or not to run this (remember that's all we've been trying to do so far, isolate a boolean from inside the code base to an environment variable), we found the code failing entirely.  And this time the failure was weird and unclear.  It had the feeling that Capistrano itself was swallowing at least one exception.  Doing a read of the code line by line made is realize that the date time math was using a Rails-ism, 10.days.  And, remember, we aren't in Rails now (even though this is a Rails app), this is a Capistrano post deploy hook so we are really running an an IRB context without ActiveSupport.&lt;/li&gt;
  &lt;li&gt;And that brought in the need to treat this not as logical days but instead as old school Unix epoch math.  So it become a matter of comparing a File.ctime(path_to_file).to_i (for the epoch conversion) against Time.now.to_i - (10 * 86400).  My pairing partner wanted to bring in ActiveSupport for the clarity of the 10.days expression but I was having none of that, ActiveSupport is a beast.&lt;/li&gt;
  &lt;li&gt;With each of these changes, we would make the code better and better, each time and we were finally at a point where the code was actually what even I would call good.  It was well structured, well written and clean.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sidebar-what-about-test-coverage&quot;&gt;Sidebar: What About Test Coverage&lt;/h2&gt;

&lt;p&gt;Someone out there reading this is pounding their desk and shouting &quot;YOU SHOULDA WRITTEN TESTS DUMB ASS!!!&quot;.  Now normally I would agree with you but there are a few problems with that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rake tasks aren't well testable; God bless Jim Weirich but rake tasks have always been an aside to testing&lt;/li&gt;
  &lt;li&gt;There isn't, to my knowledge, a way to test a rake task that is executing under Capistrano and isn't actually part of Rails&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-that-brings-us-to-the-final-solution&quot;&gt;And that Brings Us to The Final Solution&lt;/h2&gt;

&lt;p&gt;And with the code finally rewritten and being actually implemented in a very service object pattern, my co worker said &quot;WAIT!  Why are we doing this as a Capistrano post deploy hook anyway?  Why isn't this just a CRON job calling a rake task&quot;  This led to a discussion of the issues around CRON and &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;RbEnv&lt;/a&gt; and the need for the DevOps around getting a CRON job installed on N boxes.  And then he said the magic incantation: &quot;Why don't we just use &lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; for this and execute it regularly via &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt;?&quot;  Ansible is an outstandingly good DevOps environment and one that I actually taught him.  My initial argument to him against Ansible was because this was fundamentally an imperative task and Ansible was declarative.  His counter was why not just use Ansible to solve this via a &lt;a href=&quot;https://fuzzyblog.io/blog/linux/2019/05/09/linux-tip-find-all-files-older-than-10-days-and-delete-them.html&quot;&gt;bash shell expression&lt;/a&gt;.  I thought about it for a few, and, son of a bitch, he was right.  In about 40 minutes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We tossed out all of the Ruby&lt;/li&gt;
  &lt;li&gt;We tossed out the entire Capistrano post deploy task&lt;/li&gt;
  &lt;li&gt;We tossed out the invocation of the call back (ok I remembered this right now as I wrote this section of the blog post)&lt;/li&gt;
  &lt;li&gt;We spun up an Ansible Playbook and Role that executed a shell one liner and had it running on a dozen plus boxes.  This included researching and testing how to do this with shell.&lt;/li&gt;
  &lt;li&gt;We defined a Jenkins scheduled task that ran this every 7 days at an off time using a simple CRON syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the before / after on the final Ansible implementation showing the change in our disc space utilization:&lt;/p&gt;

&lt;h3 id=&quot;before&quot;&gt;BEFORE&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok: [194.55.22.38] =&amp;gt;
  msg: 'Actual free disc space: 5.3G'
ok: [194.55.19.230] =&amp;gt;
  msg: 'Actual free disc space: 5.6G'
ok: [194.55.23.18] =&amp;gt;
  msg: 'Actual free disc space: 5.6G'
ok: [194.55.23.10] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.30.164] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.20.214] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.30.119] =&amp;gt;
  msg: 'Actual free disc space: 8.2G'
ok: [194.55.29.248] =&amp;gt;
  msg: 'Actual free disc space: 8.7G'
ok: [194.55.26.185] =&amp;gt;
  msg: 'Actual free disc space: 6.7G'
ok: [194.55.24.235] =&amp;gt;
  msg: 'Actual free disc space: 6.6G'
ok: [194.55.30.37] =&amp;gt;
  msg: 'Actual free disc space: 2.3G'
ok: [194.55.31.216] =&amp;gt;
  msg: 'Actual free disc space: 2.4G'
ok: [194.55.29.170] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.29.107] =&amp;gt;
  msg: 'Actual free disc space: 11G'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;after&quot;&gt;AFTER&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok: [194.55.22.38] =&amp;gt;
  msg: 'Actual free disc space: 5.3G'
ok: [194.55.19.230] =&amp;gt;
  msg: 'Actual free disc space: 5.8G'
ok: [194.55.23.18] =&amp;gt;
  msg: 'Actual free disc space: 5.8G'
ok: [194.55.23.10] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.30.164] =&amp;gt;
  msg: 'Actual free disc space: 8.5G'
ok: [194.55.20.214] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.30.119] =&amp;gt;
  msg: 'Actual free disc space: 8.3G'
ok: [194.55.29.248] =&amp;gt;
  msg: 'Actual free disc space: 8.7G'
ok: [194.55.26.185] =&amp;gt;
  msg: 'Actual free disc space: 6.7G'
ok: [194.55.24.235] =&amp;gt;
  msg: 'Actual free disc space: 6.6G'
ok: [194.55.30.37] =&amp;gt;
  msg: 'Actual free disc space: 7.2G'
ok: [194.55.31.216] =&amp;gt;
  msg: 'Actual free disc space: 7.0G'
ok: [194.55.29.170] =&amp;gt;
  msg: 'Actual free disc space: 11G'
ok: [194.55.29.107] =&amp;gt;
  msg: 'Actual free disc space: 11G'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll notice that boxes 194.55.30.37 and 194.55.31.216 went from 2 odd gigs of free disc space to 7 odd gigs of disc space.  That's a huge win.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The hardest part about debugging anything is when your mental model doesn't match what's actually going on under the hood.  The actual epiphany moment was when I realized that this wasn't running under Rails itself.  After that things started to fall into place.&lt;/p&gt;

&lt;h2 id=&quot;thank-yous&quot;&gt;Thank Yous&lt;/h2&gt;

&lt;p&gt;A big shout out to &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt; who did a fantastic job debugging this with me and came up with a great final solution.  Kudos also to various friends who im'd with me over the course of the day and provided moral support on an extremely frustrating day.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/software_engineering/2019/05/09/so-you-want-to-delete-temp-files-an-excursion-into-software-engineering-suckitude.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/software_engineering/2019/05/09/so-you-want-to-delete-temp-files-an-excursion-into-software-engineering-suckitude.html</guid>
        
        <category>software_engineering</category>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Rails, Migrations, Multiple Developers and the Schema WTF Moment</title>
        <description>&lt;p&gt;I’ve been doing Rails now since 2007.  However for much of that time I was a project lead and one of the tasks that I reserved for myself was &lt;em&gt;all&lt;/em&gt; schema changes.  One of the benefits of that was that because I did all the primary schema changes, I rarely, if ever, had schema conflicts.  I am now on a project where, while I am a Senior Software Engineer, I am not the lead and the schema changes are done by everyone on the team, all the time.&lt;/p&gt;

&lt;p&gt;The consequence of this is that while Rails should handle any schema conflicts correctly, well, &lt;em&gt;should&lt;/em&gt; is the operative term.  In practice we have found that depending on how you do your git pull and git branching, you often (like every damn branch you make) end up with a schema conflict.  And since our schema file is enormous (think over 3,000 lines in schema.rb), figuring this out can be brutal.  This moment where you realized that your schema is borked is what I call the &lt;em&gt;Schema WTF Moment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;While I’ve struggled with this for a while and never found a decent solution, today, I was speaking with another senior guy (my buddy &lt;a href=&quot;https;//csphere.github.io/&quot;&gt;Sean Kennedy&lt;/a&gt;) and he very cogently explained the issue in a way that made sense.  This is my write up of his description.  He described it thusly:&lt;/p&gt;

&lt;p&gt;“If you do a git pull, you should already have the latest schema, affected by any migrations that came in via the pull, but your database tables may not be updated. So, you do need to run the migrations after pulling, but this will often change db/schema.rb. If all you've done is pull and migrate, there's no reason you should be responsible for committing any of the resultant schema changes as they don't technically belong to you, and they may end up being extraneous/incorrect, so resetting the schema diff makes the most sense.”&lt;/p&gt;

&lt;p&gt;To help you understand our approach to git, we use:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;All work is done in a branch.&lt;/li&gt;
  &lt;li&gt;All branches are created from develop.&lt;/li&gt;
  &lt;li&gt;Once a branch is approved, it is merged into develop.&lt;/li&gt;
  &lt;li&gt;The develop branch is automatically deployed to staging with every merge.&lt;/li&gt;
  &lt;li&gt;A production deploy automatically merges develop into master.&lt;/li&gt;
  &lt;li&gt;The master branch is only deployed to production.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is my step by step version of what to do before beginning a branch.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Switch your code base over to the develop branch.&lt;/li&gt;
  &lt;li&gt;Pull the latest code.&lt;/li&gt;
  &lt;li&gt;Run bundle exec rake db:migrate.  This updates your schema.rb file locally but you want to throw these changes away before beginning any work.&lt;/li&gt;
  &lt;li&gt;Do a git checkout db/schema.rb to throw away the changes&lt;/li&gt;
  &lt;li&gt;Create your new branch.&lt;/li&gt;
  &lt;li&gt;Change to your new branch and begin work&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 09 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2019/05/09/rails-migrations-multiple-developers-and-the-schema-wtf-moment.html</guid>
        
        <category>rails</category>
        
        <category>schema</category>
        
        <category>migration</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Linux Tip - Find All Files Older than 10 Days and Delete Them</title>
        <description>&lt;p&gt;It is easy to forget at times just how powerful simple Linux shell commands here.  Here’s one I used recently that finds all files in a single directory that are older than 25 days and deletes them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find /apps/foo/shared/tmp/ -mtime +25 -maxdepth 1 -exec rm {} \;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The -mtime param takes a number of days.  The maxdepth takes the number of directories below this to look (1 means the specified directory).  The exec takes the list of files produced and runs rm on each of them.  For reference, this was discovered from &lt;a href=&quot;https://serverfault.com/questions/122824/linux-using-find-to-locate-files-older-than-date/122854#122854&quot;&gt;ServerFault&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just in case you’re curious, I tested this on a system with more than 11,000 files in a single directory and it executed flawlessly — no problems at all and it cleaned up more than 5 gigs of disc space.&lt;/p&gt;

&lt;p&gt;And you don’t just have to delete files of course.  If you wanted to say find all the files older than 25 days and list them out with the date and time stamp then you could use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find /apps/cas-seas3/shared/tmp/ -mtime +10 -maxdepth 1 -exec ls -al {} \;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This was how we debugged this courtesy of a &lt;a href=&quot;https://stackoverflow.com/questions/20893022/how-to-display-modified-date-time-with-find-command/20893429#20893429&quot;&gt;Stack Overflow post&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/linux/2019/05/09/linux-tip-find-all-files-older-than-10-days-and-delete-them.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/linux/2019/05/09/linux-tip-find-all-files-older-than-10-days-and-delete-them.html</guid>
        
        <category>linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>So You Get Ideas In the Car And Don't Want to Die</title>
        <description>&lt;p&gt;One of my very best friends has a great saying “There’s no dying in xyz” and I firmly agree with her. The topic today is “I get ideas in the car and I forget them / I don’t want to die trying to write them down”.  A friend recently referenced this and this is my approach to this.  I also have a teenage son who is working on his license.  And while I will tell him &quot;phone in glove box while driving&quot;, I'm also realistic enough to know that he might not follow that.  And perhaps this will help him also.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The safest approach is to use your phone's voice recorder.  But the key thing is to move the voice recorder app to your home screen.  It can't be buried on the fifth page of icons.&lt;/li&gt;
  &lt;li&gt;Put your phone's notepad on your home page.  And then trigger voice to text when you get in the car.  This way if you don't talk, it doesn't type anything.  But it can sit there, waiting patiently for you.&lt;/li&gt;
  &lt;li&gt;Get a phone mount which attaches to your car's dash.  I used to think these things were absolute crap – until someone made me get one and then it was like &quot;how the hell did I live without this?&quot;.  Happily the &lt;a href=&quot;https://www.amazon.com/dp/B00WP2A39E?ref=ppx_pop_mob_ap_share&quot;&gt;simplest, cheapest phone mount&lt;/a&gt; I've seen is also fantastic.  Even if you're not actually typing, you'd be surprised at how much this can help you.&lt;/li&gt;
  &lt;li&gt;Put a pen and paper in the car.  Technology sometimes fails.  Or we're on a call and we can't switch contexts to use an app.  Often just a jotted down keyword or two is sufficient to capture the memory.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 08 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/phone/2019/05/08/so-you-get-ideas-in-the-car-and-don-t-want-to-die.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/phone/2019/05/08/so-you-get-ideas-in-the-car-and-don-t-want-to-die.html</guid>
        
        <category>phone</category>
        
        <category>writing</category>
        
        
        <category>phone</category>
        
      </item>
    
      <item>
        <title>HTTPS And Your Custom Domain on Github Pages</title>
        <description>&lt;p&gt;Github for sometime now has supported https for *.github.io (aka GitHub pages).  And they have allowed it for custom domains as well.  However I was never able to figure this out until yesterday.  Here was the magic process and well as some references.&lt;/p&gt;

&lt;p&gt;My issue was that I had three “sites” hosted on GitHub pages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fuzzyblog.io/&quot;&gt;http://www.fuzzyblog.io/&lt;/a&gt; - my personal home page and resume&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fuzzyblog.io/blog/&quot;&gt;http://www.fuzzyblog.io/blog/&lt;/a&gt; - my blog&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fuzzyblog.io/recipes/&quot;&gt;http://www.fuzzyblog.io/recipes/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tend to look at my online presence mostly as my blog / recipes.  I had actually forgotten that the root personal home page site even existed.  And the issues preventing me from having https working amounted to this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Changing the A records on my DNS provider (Amazon’s Route 53)&lt;/li&gt;
  &lt;li&gt;Waiting 24 hours for a certificate to be generated&lt;/li&gt;
  &lt;li&gt;Clicking the Enforce Https option on the GitHub Settings for the repo that drives fuzzyblog.io.  This has to be done first&lt;/li&gt;
  &lt;li&gt;Clicking the Enforce Https option on the GitHub Settings for all other GitHub Pages repos (for me this was blog and recipes)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you can’t remember which git repo drives your GitHub Pages, look in the directory and file .git/config. It will be right there; look for a url / .git filename.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In case you were wondering why you want https, there are lots of reasons but the best is that it should give your content at least a small boost in page rank.&lt;/p&gt;

&lt;h2 id=&quot;recommended-reading&quot;&gt;Recommended Reading&lt;/h2&gt;

&lt;p&gt;Here are the recommended tech notes from Github on all this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/about-supported-custom-domains&quot;&gt;Supported Custom Domains&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/adding-or-removing-a-custom-domain-for-your-github-pages-site&quot;&gt;Adding Custom Domains&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/troubleshooting-custom-domains#https-errors&quot;&gt;Troubleshooting Custom Domains&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.blog/2018-05-01-github-pages-custom-domains-https/&quot;&gt;Press Release&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/https/2019/05/07/https-and-your-custom-domain-on-github-pages.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/https/2019/05/07/https-and-your-custom-domain-on-github-pages.html</guid>
        
        <category>https</category>
        
        <category>blogging</category>
        
        <category>GitHub</category>
        
        <category>git</category>
        
        
        <category>https</category>
        
      </item>
    
      <item>
        <title>Managing An Attack of Hives</title>
        <description>&lt;p&gt;&lt;em&gt;Disclaimer:&lt;/em&gt; I am not a doctor.  I am not a nurse.  I do not even play a doctor or a nurse on the Internet.  But I have been unlucky enough to suffer from poison ivy on N (N rounds up pretty high; it involves the number of fingers on both hands) occasions so I know a lot about suffering through itchiness.  And I’ve had hives myself.&lt;/p&gt;

&lt;p&gt;I recently watched a dear, dear friend come down with hives out of the clear blue.  One day they were fine and the next day there were “an itchy, splotchy mess”.  Hives are one of those things that generally are an allergic reaction that you never quite understand.  They come over you, your life sucks beyond belief and then they go away.  As another friend would say, “How Rude!”.&lt;/p&gt;

&lt;p&gt;We ultimately figured out a good way to help deal with the itchiness but it took about a day so I thought I’d write down some tips and recommendations.  I know this is not the sort of content I usually produce but it made at least one person’s life better so …&lt;/p&gt;

&lt;h2 id=&quot;managing-hives-or-poison-ivy&quot;&gt;Managing Hives or Poison Ivy&lt;/h2&gt;

&lt;p&gt;Here are some techniques for managing hives or poison ivy:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cool water; never hot.  Getting under a hot shower with an itchy condition actually feels good but it is a complete mistake. It seems to reactivate the underlying cause.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Benadryl-Ultratabs-Antihistamine-Allergy-Diphenhydramine/dp/B001F1DV72/ref=sr_1_2_sspa?keywords=benedryl&amp;amp;qid=1556977968&amp;amp;s=gateway&amp;amp;sr=8-2-spons&amp;amp;psc=1&quot;&gt;Benedryl&lt;/a&gt;.  If you’re looking for a medicine and don’t mind the associated drowsiness, Benedryl really does help.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Aveeno-Soothing-Treatment-Itchy-Irritated/dp/B000UEAARO/ref=sr_1_1?crid=3GVFYJIK6BNCE&amp;amp;keywords=aveeno+oatmeal+bath&amp;amp;qid=1556977411&amp;amp;s=gateway&amp;amp;sprefix=aveeno+ot%2Caps%2C138&amp;amp;sr=8-1&quot;&gt;Colloidal Oatmeal Bath&lt;/a&gt;.  If you have the ability to soak in a tub, a cool tub filled with the Aveeno Oatmeal works well.  Or you can make your &lt;a href=&quot;https://www.verywellfamily.com/how-to-make-your-own-oatmeal-bath-289466&quot;&gt;own&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Benadryl-Relief-Spray-Extra-Strength/dp/B00MHYLOMA/ref=sr_1_1_sspa?crid=FG56ZRO8EATG&amp;amp;keywords=spray+benedryl&amp;amp;qid=1556977467&amp;amp;s=gateway&amp;amp;sprefix=spray+bene%2Caps%2C139&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;smid=ASEVS99O6FS73&quot;&gt;Spray Benadryl&lt;/a&gt;.  This is a topical spray and while it makes you sticky, it provides solid relief.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Gold-Bond-Ultimate-Eczema-Protectant/dp/B00GIHMOGW/ref=sr_1_5?keywords=gold+bond+eczema+ultimate+relief&amp;amp;qid=1556979092&amp;amp;s=gateway&amp;amp;sr=8-5&quot;&gt;Gold Bond Ultimate Eczema Relief&lt;/a&gt;.  This is a colloidal oatmeal lotion and it has specific ingredients (since its an eczema solution) to “deal with the itches”.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/ZANFEL-Poison-Ivy-Sumac-Wash/dp/B000GCPWUU/ref=sr_1_1_sspa?keywords=zanfel&amp;amp;qid=1556977531&amp;amp;s=gateway&amp;amp;sr=8-1-spons&amp;amp;smid=A188ED3JB77RWM&amp;amp;th=1&quot;&gt;Zanfel&lt;/a&gt;.  I listed this last but it is ABSOLUTELY THE BEST THING EVER for hives or poison ivy.  It is ridiculously expensive ($50 for a tube in downtown Chicago) but it is completely worth it.  Follow the directions exactly and it provides fantastic relief.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of the recommendations above, #6, Zanfel, is the best.  You won’t want to spend the money but it really is worth it. #5 also comes very, very highly recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 04 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/health/2019/05/04/managing-an-attack-of-hives.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/health/2019/05/04/managing-an-attack-of-hives.html</guid>
        
        <category>health</category>
        
        <category>hives</category>
        
        
        <category>health</category>
        
      </item>
    
      <item>
        <title>Getting AWS Costs Under Control</title>
        <description>&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; AWS is an abbreviation for Amazon Web Services, the Amazon cloud computing platform.&lt;/p&gt;

&lt;p&gt;I am presently responsible for a monthly AWS budget that is running about $20,000 per month.  And that is up from about $11,000 per month only eight months ago.  I was recently tasked with bringing that down through &lt;em&gt;reserved instances&lt;/em&gt; and I thought that writing up the learnings from doing a deep dive into reserved instances and AWS Cost Control was worth writing up.  Even though I’ve worked with AWS now since 2008, I found the results of my research pretty damn surprising.&lt;/p&gt;

&lt;p&gt;I should note that when I say “responsible”, I mean that I have technical / implementation responsibility in my role as a Senior Software Engineer. I’m not actually a cost control / accounting person in any way.&lt;/p&gt;

&lt;h2 id=&quot;what-are-reserved-instances&quot;&gt;What are Reserved Instances&lt;/h2&gt;

&lt;p&gt;The first thing to understand is that Reserved Instances are poorly named, very poorly named.  Reserved instances are nothing more than &lt;em&gt;coupons&lt;/em&gt; for the use of an instance of the type of the coupon.  You actually aren’t reserving a specific instance but instead saying to Amazon “Ok I’ll buy this much of instance type X”.  And it is important to understand that reserved instances aren’t a simple volume discount.  They are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Massively complex and confusing&lt;/li&gt;
  &lt;li&gt;Expensive, requiring an up front payment to get the maximum discount&lt;/li&gt;
  &lt;li&gt;Available in multiple flavors such as convertible and non convertible&lt;/li&gt;
  &lt;li&gt;Complex enough that after researching them in depth you will want to drink and drink heavily&lt;/li&gt;
  &lt;li&gt;Such a big deal that there actually is a secondary market where you can resell and purchase reserved instances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I looked into how much reserved instances could save us, I generally found between a 15% to 20% savings with our current approach to things.  Given our current spending rate, that could easily amount to nearly $40,000 per year.   And while that’s nothing to sneer at, my research into reserved instances told me to keep digging.&lt;/p&gt;

&lt;p&gt;The most interesting thing about reserved instances with respect  to AWS cost control is that universally the recommendation I found was this: &lt;em&gt;Don’t start with reserved instances&lt;/em&gt;.  Even though reserved instances directly reduce your costs, you should never start with reserved instances.  And that brings us to the next section, AWS Cost Control Strategy.
￼
## AWS Cost Control Strategy&lt;/p&gt;

&lt;p&gt;After a considerable amount of research, I came up with the following approach for reducing AWS costs. Please note that where I say “we”, you should substitute your own organization.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We need to designate someone as the person responsible for managing / monitoring AWS costs.  Right now, for example, we have a quarter of a million dollar budgetary line item that &lt;em&gt;no one&lt;/em&gt; is responsible for.  This isn’t a technical problem; this is an accounting problem.&lt;/li&gt;
  &lt;li&gt;We need to correctly tag all instances by name, by product family, by application and more so that there is the metadata to properly examine and drill into costs using the AWS or third party accounting tools.&lt;/li&gt;
  &lt;li&gt;We need to implement a lights on / lights off strategy where you turn off resources when they aren’t in use.  As an example, our staging and training environments clusters of machines only need to be available some of the time (staging needs to be available Mon - Friday, 9 to 6 EST; training needs to be available only when specifically scheduled).  Right now all those environments are powered up and available 24x7x365.  Admittedly these aren’t as many boxes as our production environment but if you don’t have something turned on, you’re not paying for it.&lt;/li&gt;
  &lt;li&gt;We need to implement a Right Sizing strategy where we dig into machine utilization and figure out if we’re actually using the correctly sized instances or if we are over spending by using machines that are too large.&lt;/li&gt;
  &lt;li&gt;We should only implement reserved instances when &lt;em&gt;all&lt;/em&gt; of the above steps are implemented.  Otherwise you are over buying capacity that you likely don’t need.  Also it is not widely understood that you can buy reserved instances not only for your EC2 boxes but also for your RDS boxes; keep that firmly in mind when you plan your reserved instance purchases.&lt;/li&gt;
  &lt;li&gt;Finally we need to realize that AWS Cost Management is a task you need to do regularly whether that is monthly, quarterly or annually.  It needs to be not only someone’s actual job (or portion of their job) but as an activity, it needs to be done consistently.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;tools-and-recommended-reading&quot;&gt;Tools and Recommended Reading&lt;/h2&gt;

&lt;p&gt;Here are some tools to investigate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/solutions/instance-scheduler/&quot;&gt;AWS Instance Scheduler&lt;/a&gt; - This is a code based tool to configure turn on / turn off of your cloud instances&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.parkmycloud.com&quot;&gt;Park My Cloud&lt;/a&gt; - This is a tool which can turn on / off your cloud instances automatically with an easy user interface&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cloudhealthtech.com&quot;&gt;CloudHealth&lt;/a&gt; - this is an AWS management and analytics tool with specific features for reserved instance analysis&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cloudability.com&quot;&gt;CloudAbility&lt;/a&gt; - this is an AWS management and analytics tool with specific features for reserved instance analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The CloudAbility and CloudHealth tools are seriously pricey, they are generally priced as a percentage of your AWS bill, but they have outstanding analytics features and the ability  to analyze your reserved instance needs more powerfully than the built in AWS tools for this.&lt;/p&gt;

&lt;p&gt;Here are some of the better research materials to investigate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3jhKM1rgpEw&quot;&gt;AWS Cost Optimization Levers, Tools and Strategies&lt;/a&gt;.  This is an excellent video from the AWS Australia branch.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=L5rlqaC6uNs&quot;&gt;Saving at Scale with Reserved Instances by Cloudability&lt;/a&gt;.  This is also excellent and it illustrates two key points - a) that reserved instances can actually increase your bill and b) that you really need to have someone responsible for AWS cost control on an ongoing basis&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://get.cloudability.com/rs/064-CAC-529/images/the-complete-guide-to-saving-with-aws-reserved-instances-ebook.pdf&quot;&gt;Reserved Instance Ebook&lt;/a&gt;.  A great read.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 May 2019 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2019/05/04/getting-aws-costs-under-control.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2019/05/04/getting-aws-costs-under-control.html</guid>
        
        <category>aws</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>New Job Hound Feature - Create Cover Letters More Easily</title>
        <description>&lt;p&gt;When you are a product creator, there is something wonderful about building a product that people are really using and implementing a new feature that you &lt;strong&gt;know&lt;/strong&gt; will make their lives easier.  I am very, very please to announce the new Job Hound feature Cover Letters More Easily.  Yes I know that's an absolutely crap name but it does describe what this does.  Let me walk you through how this works.&lt;/p&gt;

&lt;p&gt;At the heart of Job Hound is an underlying database of the jobs you apply for and how successful you are with them.  Success is measured by your interactions with the job and Job Hound understands that the type of interaction that you have matters.  Every job has a number of status fields like &quot;got_hr_screen&quot; or &quot;passed_technical_interview&quot;.  As each job gains additional status fields, the underlying &quot;score&quot; associated with how successful you are &lt;em&gt;for this job&lt;/em&gt; grows.  And that is how Job Hound can do things like generate a report of cover letters organized by most successful to least successful.&lt;/p&gt;

&lt;p&gt;Let's walk through the cover letter creation process as it has been and then let's walk through it with the new features.&lt;/p&gt;

&lt;h2 id=&quot;before&quot;&gt;Before&lt;/h2&gt;

&lt;p&gt;If you want to create a cover letter, you start at your list of Jobs to Apply For:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jobhound.io/assets/cover_letter_all_jobs.png&quot; alt=&quot;cover_letter_all_jobs.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let's say that you want to apply for the Eezy job so you click on it giving you the details of the job:&lt;/p&gt;

&lt;p&gt;The obvious next step is to click on the Add Cover Letter button:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jobhound.io/assets/cover_letter_eezy.png&quot; alt=&quot;https://jobhound.io/assets/cover_letter_eezy.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking that Add Cover Letter button takes you into the Cover Letter writer where you can see the job description but you start with a totally blank screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jobhound.io/assets/cover_letter_blank.png&quot; alt=&quot;https://jobhound.io/assets/cover_letter_blank.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Job Description above is something that Job Hound always tries to provide so that you can write your cover letter to respond to the requirements of the job.&lt;/p&gt;

&lt;p&gt;Writing anything from a blank state is always harder than starting from a template so let's see how this has been improved.&lt;/p&gt;

&lt;h2 id=&quot;with-the-new-feature&quot;&gt;With the New Feature&lt;/h2&gt;

&lt;p&gt;With the new feature you can start creating your cover letter for a job you want to apply for by going to the Successful Cover Letter report (click Report in the menu bar):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jobhound.io/assets/cover_letter_all_reports.png&quot; alt=&quot;https://jobhound.io/assets/cover_letter_all_reports.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select the Successful Cover Letters report from the links and you'll see the report of all your cover letters organized from most successful to least successful.  In this case we want to use the Wedding Wire cover letter as a template for the job we want to apply to – Eezy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jobhound.io/assets/cover_letter_select_from_report.png&quot; alt=&quot;https://jobhound.io/assets/cover_letter_select_from_report.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just select the Eezy job from the drop down list (yes I realize now that I didn't show Eezy in the drop down; apologies; it is there) and click the Create Cover Letter from this button.  That will take you to the Cover Letter Writer with the selected template loaded in.  You can now adjust the the cover letter for your new job.  You'll notice an alert message at the top that reminds you to make adjustments like the company name and job title.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jobhound.io/assets/cover_letter_create_from_template.png&quot; alt=&quot;https://jobhound.io/assets/cover_letter_create_from_template.pngg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now you can easily start from your list of cover letters, choose the one that works best for the job you want to apply to and instantly create a new cover letter from it.  Enjoy!&lt;/p&gt;

</description>
        <pubDate>Thu, 03 May 2018 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2018/05/03/new-job-hound-feature-cover-letters-from-templates.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2018/05/03/new-job-hound-feature-cover-letters-from-templates.html</guid>
        
        <category>jobhound</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Anatomy of an Accidental Product Launch with Metrics - Day 1</title>
        <description>&lt;p&gt;I'm a software engineer and I am decidedly &lt;strong&gt;not&lt;/strong&gt; a marketing guy (I play one on the Internet from time to time but I really just write code).  I recently launched a side project, &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Job Hound&lt;/a&gt;, that had an unexpectedly successful first day and I thought documenting it might help someone out there (and certainly help me; that's usually why I blog anything; it helps me understand things).&lt;/p&gt;

&lt;h1 id=&quot;what-is-job-hound&quot;&gt;What is Job Hound?&lt;/h1&gt;

&lt;p&gt;Job Hound is a tool that I wrote recently as a way to &quot;make getting a tech job suck less&quot;.  I recently went out to get a full time gig and I found the process &lt;a href=&quot;http://fuzzyblog.io/blog/jobhound/2018/04/24/ten-things-i-learned-from-a-job-hunt-for-a-senior-engineering-role.html&quot;&gt;just so plain awful&lt;/a&gt; so I wrote software as a way to put myself in control of it.  After finding it incredibly useful for my own needs, and then showing it a few friends to positive feedback, I figured that I'd throw it on a cheap Digital Ocean box and see what happened.&lt;/p&gt;

&lt;h1 id=&quot;timing-for-metrics&quot;&gt;Timing for Metrics&lt;/h1&gt;

&lt;p&gt;I'm writing this after the first 16 hours the product was live.  All marketing activities were done around 8 am EST.  There's a bit in the Metrics section that gives the numbers after a full 24 hours but this was initially written at the 16 hour mark and then published a few days later.&lt;/p&gt;

&lt;h1 id=&quot;my-launch-plan&quot;&gt;My Launch &quot;Plan&quot;&lt;/h1&gt;

&lt;p&gt;Last week an article on &lt;a href=&quot;https://work.qz.com/1254663/job-interviews-for-programmers-now-often-come-with-days-of-unpaid-homework/&quot;&gt;Quartz talking about the rise in homework for job seekers&lt;/a&gt; took off on &lt;a href=&quot;https://news.ycombinator.com/item?id=16874015&quot;&gt;Hacker News&lt;/a&gt; with 989 comments.&lt;/p&gt;

&lt;p&gt;Here was my launch plan:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My friend &lt;a href=&quot;https://nickjanetakis.com/blog/&quot;&gt;Nick&lt;/a&gt;&lt;/strong&gt;:  You should document your story on your struggle to find a job and then post it on Hacker News&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: Ok.&lt;/p&gt;

&lt;p&gt;Honestly there wasn't more to it than that.  This isn't a humblebrag by any means.  Someone I respect suggested it and, well, that is how it started.&lt;/p&gt;

&lt;p&gt;I had about 500 words of a very crufty blog post in draft form right in my coding editor so I polished that up from 5 am to 7 am and that became my &lt;a href=&quot;http://fuzzyblog.io/blog/jobhound/2018/04/24/ten-things-i-learned-from-a-job-hunt-for-a-senior-engineering-role.html&quot;&gt;Ten Things I Learned from a Job Hunt for a Senior Engineering Role&lt;/a&gt; blog post.  I also submitted it to &lt;a href=&quot;https://news.ycombinator.com/item?id=16912546#16913834&quot;&gt;Hacker News&lt;/a&gt; where over the course of the next 16 hours, it got 638 comments.&lt;/p&gt;

&lt;p&gt;I should point out that this is the first thing I've ever submitted to Hacker News that has gotten &lt;strong&gt;any&lt;/strong&gt; traction at all.&lt;/p&gt;

&lt;p&gt;I did tweet my blog post on &lt;a href=&quot;https://twiiter.com/fuzzygroup/&quot;&gt;my personal twitter&lt;/a&gt; and I also made a Job Hound specific tweet and then pinned the Job Hound tweet so it stayed at the top of my twitter feed.&lt;/p&gt;

&lt;p&gt;I honestly never even thought to put my blog post on Facebook.  I did that 24 hours later so I don't have any metrics on that.&lt;/p&gt;

&lt;p&gt;My final launch action, one I had no hope for at all, was that I also tossed Job Hound up on &lt;a href=&quot;https://www.producthunt.com/posts/job-hound&quot;&gt;Product Hunt&lt;/a&gt; where it got 56 up votes during roughly the same period (it may have been on Product Hunt 1 day longer; the whole day is kind of a blur right now).&lt;/p&gt;

&lt;h1 id=&quot;fine-tuning&quot;&gt;Fine Tuning&lt;/h1&gt;

&lt;p&gt;I did relatively little tuning of the content.  My buddy Nick suggested that I emphasize the free nature of Job Hound in the blog post and that I add the Product Hunt link into the blog post.  Both of these were good ideas and done around 2 pm EST.&lt;/p&gt;

&lt;h1 id=&quot;the-metrics&quot;&gt;The Metrics&lt;/h1&gt;

&lt;p&gt;Since roughly 8 am this morning (sixteen hours so far), Job Hound has had:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;204 user accounts created (email / password)&lt;/li&gt;
  &lt;li&gt;98 jobs added&lt;/li&gt;
  &lt;li&gt;An average of 0.48 jobs per user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After a full 24 hours, the numbers were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;236 user accounts created (email / password)&lt;/li&gt;
  &lt;li&gt;119 jobs added&lt;/li&gt;
  &lt;li&gt;An average of 0.50 jobs per user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In terms of social media metrics, I started the day with 163 twitter followers and I ended it a full 24 hours later with 187.&lt;/p&gt;

&lt;p&gt;Are these numbers good?  I think that absolutely depends on your perspective.  For a side project that I publicly launched with absolutely zero planning – I'm absolutely delighted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Followup after 4 days&lt;/strong&gt;: The numbers have continued to steadily grow and I've gotten quite a few emails, linked in messages, tweets and other feedback that all indicates to me that I have hit on something.  My plan is that keep working Job Hound as a side project and just making it better and better.  Maybe something comes of this; maybe not but helping people get jobs is a &lt;strong&gt;good&lt;/strong&gt; thing.&lt;/p&gt;

&lt;h1 id=&quot;other&quot;&gt;Other&lt;/h1&gt;

&lt;p&gt;I received a number of emails and messages via LinkedIn and I tried to respond to everyone on the same day.  I've always found that talking to users is the best damn marketing you can do.  This is the root of the &lt;a href=&quot;https://www.jobhound.io/pages/thank_you&quot;&gt;Job Hound Thank You&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;You're probably wondering &quot;what about the web traffic?&quot;  I'm sorry to say that my Google Analytics skills just aren't all that good so I haven't been able to dig into them with any success as of yet.  I'm sure the data is there but I'm too brain dead to figure it out.&lt;/p&gt;

&lt;h1 id=&quot;conclusion---content-does-work&quot;&gt;Conclusion - Content Does Work&lt;/h1&gt;

&lt;p&gt;I think my overall conclusions from all this are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating content on the Internet as a marketing tool really does work but the content has to have value of its own.  You can't simply shill your product; embed it in something that is interesting all on its own.&lt;/li&gt;
  &lt;li&gt;Telling a personal story works.&lt;/li&gt;
  &lt;li&gt;Lucky is better than smart.  I was extremely lucky in getting coverage from Hacker News.&lt;/li&gt;
  &lt;li&gt;Timing matters.  I was lucky to be able to ride a wave of hiring interest from the Quartz article.  This didn't occur to me and it took the pushing of a good friend for me to put this out.  Thanks Nick.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 27 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2018/04/27/anatomy-of-an-accidental-product-launch-with-metrics-day-1.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2018/04/27/anatomy-of-an-accidental-product-launch-with-metrics-day-1.html</guid>
        
        <category>jobhound</category>
        
        <category>startup</category>
        
        <category>metrics</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Ten Things I Learned from a Job Hunt for a Senior Engineering Role</title>
        <description>&lt;p&gt;I recently went on a search for a new full time gig and I learned that today's job search is &lt;strong&gt;not&lt;/strong&gt; what it used to be.  Here's the quick summary of what I learned:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The job search takes much, much longer than it used to.&lt;/li&gt;
  &lt;li&gt;No one believes that anyone can actually code.&lt;/li&gt;
  &lt;li&gt;Coding Tests Can Trip Up Even Good Engineers&lt;/li&gt;
  &lt;li&gt;Extensive homework is now normal.&lt;/li&gt;
  &lt;li&gt;Every company's &quot;process&quot; is different&lt;/li&gt;
  &lt;li&gt;Outsourced hiring &quot;services&quot; are very much in vogue&lt;/li&gt;
  &lt;li&gt;Companies Really Want to Know Your Salary; Don't tell Them&lt;/li&gt;
  &lt;li&gt;Interviews Matter Much, Much More to You Than to the Company&lt;/li&gt;
  &lt;li&gt;Age discrimination really exists.&lt;/li&gt;
  &lt;li&gt;You'll never really know why you weren't hired.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In terms of full disclosure, at the end of this article, I'm going to pitch you on a &lt;a href=&quot;https://www.jobhound.io&quot;&gt;new tool&lt;/a&gt; I built for managing your personal job hunt, but don't worry, it's &lt;strong&gt;free&lt;/strong&gt; to use.  I found the job hunt process so &lt;strong&gt;absolutely distasteful&lt;/strong&gt; that the only way I could get through it was to actually create some software based on what I learned.&lt;/p&gt;

&lt;h1 id=&quot;who-am-i&quot;&gt;Who Am I?&lt;/h1&gt;

&lt;p&gt;Here's just a bit about myself so you can understand my job search.  I'm a senior software guy who's still writing code after all these years.  My platform is generally Ruby / Rails and my &lt;a href=&quot;http://fuzzyblog.io/blog/resume.html&quot;&gt;resume&lt;/a&gt; is here in case you care.  I've been a consultant for the last few years and I wanted to get back to a full time gig in a senior engineering role.&lt;/p&gt;

&lt;p&gt;Here are the stats from my job search:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Total Jobs Applied For: &lt;strong&gt;82&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Total Jobs Where You Got an HR Interview	&lt;strong&gt;25&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Total Jobs Where You Got a Technical Interview:	&lt;strong&gt;15&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Total Jobs Where You Got an Onsite Interview: &lt;strong&gt;2&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Total Job Offers: &lt;strong&gt;1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;number-1-it-takes-longer-than-ever-to-get-hired&quot;&gt;Number 1: It Takes Longer than Ever to Get Hired&lt;/h1&gt;

&lt;p&gt;I've been in high tech a long time and other than the few really bad times, the general rule in high tech hiring has been &quot;fill an engineering slot as fast as possible&quot;.  The industry may talk a good game about culture fit but other than a few firms, it always has been about quickly putting bodies in seats.  That is absolutely no longer the case.  HR departments now seem to be focused on:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Initially getting a large number of candidates to review as the first step (and nothing, even when you seem to be a perfect requirement match, happens until they get that large group of candidates).&lt;/li&gt;
  &lt;li&gt;Marching the entire group of candidates, step by step, through their entire process.&lt;/li&gt;
  &lt;li&gt;Putting as many barriers in place before hiring anyone.  I discuss this more below under process.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Just so you're aware, the HR departments will not own up to the process taking longer than ever.  They will spin you a song and a dance about how quickly things are going to progress and it just isn't true.  My two observations in this area are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Companies today, despite what they might say, are pickier about candidates than ever&lt;/li&gt;
  &lt;li&gt;Companies are less willing to hire than I've ever seen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One helpful thing I did during my job hunt was track everything so I actually had dates all along.  Here's an example of what I commonly saw.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2/5 was my initial application to Company W&lt;/li&gt;
  &lt;li&gt;3/1 was when I completed my homework project&lt;/li&gt;
  &lt;li&gt;3/2 was when I got scheduled for an onsite interview&lt;/li&gt;
  &lt;li&gt;3/23 was when I found out that I didn't get it (two weeks after my onsite)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's almost two months start to finish!  And today that job remains on the company's web site – they still haven't hired anyone.&lt;/p&gt;

&lt;h1 id=&quot;number-2-no-one-believes-anyone-can-actually-code&quot;&gt;Number 2: No One Believes Anyone Can Actually Code&lt;/h1&gt;

&lt;p&gt;The general thing that I saw from everyone that I talked to is that no one actually believes that anyone can code.  At every stage in the interview process, you're going to need to &lt;strong&gt;prove&lt;/strong&gt; that your resume isn't a lie and that you can actually do what you say you can.  I find this ludicrous because it is like interviewing an attorney and then saying to him &quot;Please prove that you can cite a Supreme Court precedent&quot;.  When did an entire industry of people get pre-judged as lying?   Don't we exist in a country where the default assumption is innocence not guilt?&lt;/p&gt;

&lt;h1 id=&quot;number-3-coding-tests-can-trip-up-even-good-engineers&quot;&gt;Number 3: Coding Tests Can Trip Up Even Good Engineers&lt;/h1&gt;

&lt;p&gt;An extremely common thing that you're going to find as part of a job search are coding tests and I'd urge you NOT to take them lightly.  These coding tests tend to bear &lt;strong&gt;no resemblance&lt;/strong&gt; to anything you'll do in the work place and even good engineers can get tripped up by them.  I found that part way through my job search I had to buckle down, hit the books and start practicing on different coding tests to get my scores up.  Once upon a time I would have said that any engineer should be able to pass a coding test but that's just not true.  The longer you are in industry, I would argue the less likely you may be to pass a coding test.  I suspect I could have done much better on a coding test fresh out of college when my &quot;test taking skills&quot; were actually something I used.  Now?  The last test I passed was for a driver's license.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You should note that since most tests come from an outsourced service like Codility, you can google for practice questions, sample exams and more.  And I'd strongly encourage you to do that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Don't underestimate coding tests at all.  I did and it was to my disadvantage.  You really, really need to practice.&lt;/p&gt;

&lt;h1 id=&quot;number-4-extensive-homework-is-now-normal&quot;&gt;Number 4: Extensive Homework is Now Normal&lt;/h1&gt;

&lt;p&gt;As a hiring manager, I've given homework assignments to weed out candidates from the pack but I always kept it reasonable, just a few hours in length.  I've now regularly seen homework assignments ranging from 8 hours to &quot;spend a week on this and really show us what you can do&quot;.  Over on &lt;a href=&quot;https://work.qz.com/1254663/job-interviews-for-programmers-now-often-come-with-days-of-unpaid-homework/&quot;&gt;QZ&lt;/a&gt; there is an excellent article about this along with &lt;a href=&quot;https://news.ycombinator.com/item?id=16874015&quot;&gt;984 comments on Hacker News&lt;/a&gt;.  And yes that's a huge amount of comments on any one topic since the current amount of comments on the top 30 items on Hacker News is &lt;strong&gt;53&lt;/strong&gt; comments.&lt;/p&gt;

&lt;p&gt;You should be aware that your coding submission will be judged all kinds of ways, often unfairly.  For one application I built, I was told &quot;you didn't allow for proper performance given a 500x increase in data&quot;. This came after being specifically told &quot;use no technologies other than the database itself&quot; (it was a search application). And what good engineer allows for an arbitrary 500x increase?  That is massive, unnecessary over engineering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; One thing that I did do to stand out from the crowd for almost all my homework assignments was to record a screencast talking through my work and illustrating what I thought were the best points.  I had several interviewers tell me that &quot;thank you; I've never seen that before&quot;.  This gets the interviewer past any issues with getting code installed / setup, etc.&lt;/p&gt;

&lt;p&gt;I should comment that even though I don't like the trend towards homework, I vastly prefer it to coding tests.  You shouldn't think, however, that just because you passed the homework assignment, you won't face a whiteboard challenge - every place I did a home assignment for, I also got a whiteboard challenge, sometimes multiple ones.&lt;/p&gt;

&lt;h1 id=&quot;number-5-every-companys-process-is-different&quot;&gt;Number 5: Every Company's Process Is Different&lt;/h1&gt;

&lt;p&gt;It used to be that getting a coding job boiled down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Send in resume&lt;/li&gt;
  &lt;li&gt;HR Screen&lt;/li&gt;
  &lt;li&gt;Technical Interview&lt;/li&gt;
  &lt;li&gt;Team Interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was a pretty standard process and I saw (and hired) a lot of people with this approach.  Apparently though times change and now the &quot;process&quot; is all over the map.  One of the most useful things I learned to ask companies early on was &quot;Please explain your hiring process to me&quot; and then I wrote it down for each company.  This let me know &quot;for company X, the process is&quot;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HR Screen&lt;/li&gt;
  &lt;li&gt;Coding Test&lt;/li&gt;
  &lt;li&gt;Coding Project&lt;/li&gt;
  &lt;li&gt;Technical Interview&lt;/li&gt;
  &lt;li&gt;Pair Programming&lt;/li&gt;
  &lt;li&gt;Technical Interview with the Team&lt;/li&gt;
  &lt;li&gt;Onsite Interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What you're going to find is that while there are common elements (currently homework) in the hiring process, everyone's process is different.  If you know what a company cares about then you can start to get ready before it happens.  For example, if you know in advance that you have a coding test in front of you, this lets you know that you may need to study.  If an HR person says to me &quot;Oh and we administer a coding test&quot; then my first response is &quot;I've taken a bunch of those, which one do you use?&quot;.&lt;/p&gt;

&lt;h1 id=&quot;number-6-outsourced-hiring-assessment-services-are-very-much-in-vogue&quot;&gt;Number 6: Outsourced Hiring Assessment Services Are Very Much in Vogue&lt;/h1&gt;

&lt;p&gt;One thing that really surprised me was how many companies rely on outsourced hiring services.  I saw this all over the place from companies that sent me a link to a coding test, often &lt;a href=&quot;https://www.codility.com/&quot;&gt;Codility&lt;/a&gt;, to &quot;personality assessment&quot; tools, often &lt;a href=&quot;www.predictiveindex.com&quot;&gt;Predictive Index&lt;/a&gt;.  I suppose this is the natural evolution of SAAS companies into the hiring space.  When I was recruiting, in years past, my HR department always strongly warned me against administering coding tests on the grounds of legal issues / fairness.  Now that these are outsourced, I suspect that HR departments aren't concerned at all about legal issues since they come from a vendor not themselves.&lt;/p&gt;

&lt;p&gt;One thing that you'll find is that these outsourced assessment services are being stuck into the hiring process at &lt;strong&gt;ANY&lt;/strong&gt; point in the process.  I've seen things ranging from HR screen to initial technical interview to coding test to send in a resume and get a personality test fired back at you before you ever talk to a human being.&lt;/p&gt;

&lt;h1 id=&quot;number-7-companies-really-want-to-know-your-salary-dont-tell-them&quot;&gt;Number 7: Companies Really Want to Know Your Salary; Don't tell Them&lt;/h1&gt;

&lt;p&gt;Before I started my job search, I was lucky enough to read Josh Doody's fabulous book &lt;a href=&quot;https://fearlesssalarynegotiation.com/&quot;&gt;Fearless Salary Negotiation&lt;/a&gt; and the best thing I got from it was &quot;Never disclose your current salary or expectations&quot;.  I never disclosed it but I found HR people absolutely relentless on this point.  I finally said to one California company &quot;You do realize that legally you can't ask me that&quot; and they shamelessly replied &quot;Yes I can; you aren't in California&quot;.  And you'll find that there are web forms which require you to fill it in (I always put in a minimal, crazy number like 1234).&lt;/p&gt;

&lt;p&gt;Oh and if you haven't read Josh's book then I strongly encourage you to do so.  It is a short but fantastic read.  &lt;a href=&quot;https://www.amazon.com/Fearless-Salary-Negotiation-step-step/dp/0692568689/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1524566767&amp;amp;sr=1-1&amp;amp;keywords=fearless+salary+negotiation&quot;&gt;Here's an Amazon link&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;number-8-interviews-matter-much-much-more-to-you-than-to-the-company&quot;&gt;Number 8: Interviews Matter Much, Much More to You Than to the Company&lt;/h1&gt;

&lt;p&gt;Unfortunately it is entirely true that any given interview matters far more &lt;strong&gt;to you&lt;/strong&gt; than it does &lt;strong&gt;to the company&lt;/strong&gt; that is interviewing you.  Any candidate has only a relatively small number of jobs they can even apply for where as the company has all of the Internet applying (this is particularly true if the company is any good).  I couldn't even count how many interviews companies missed, were late on, etc.&lt;/p&gt;

&lt;h1 id=&quot;number-9-age-discrimination-is-real&quot;&gt;Number 9: Age Discrimination is Real&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I recently turned 50 and I'm still a hands on engineer who writes code just about every single day.&lt;/p&gt;

&lt;p&gt;One very surprising thing to me was just how much I discovered that age discrimination in high tech hiring is real.  There were all too many times when jobs that I was an absolute perfect match for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I never got an interview at all&lt;/li&gt;
  &lt;li&gt;I was mysteriously ghosted midway though the process&lt;/li&gt;
  &lt;li&gt;I got all the way to the end, nailed everything perfectly and then never found out why I didn't get it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is one of those things that you never can prove and no one will ever own up to I do think that is very, very real.&lt;/p&gt;

&lt;h1 id=&quot;number-10-youll-never-really-know-why-you-werent-hired&quot;&gt;Number 10: You'll Never Really Know Why You Weren't Hired&lt;/h1&gt;

&lt;p&gt;I know that there are lots of actually good reasons why companies don't want to tell you why you weren't hired but this remains my single biggest issue with today's job hunt.  I can understand that you can't tell everyone why they didn't get hired but when you get to the end point and pass all these hurdles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HR Screen&lt;/li&gt;
  &lt;li&gt;Coding Test&lt;/li&gt;
  &lt;li&gt;Coding Project&lt;/li&gt;
  &lt;li&gt;Technical Interview&lt;/li&gt;
  &lt;li&gt;Pair Programming&lt;/li&gt;
  &lt;li&gt;Technical Interview with the Team&lt;/li&gt;
  &lt;li&gt;Onsite Interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You would think that more information than &quot;We all really liked you but we went in a different direction&quot; could be said.  I saw this repeatedly on jobs that I got all the way to the end point on.  How is a candidate ever supposed to improve themselves when the company will not tell you why you didn't get the job?&lt;/p&gt;

&lt;h1 id=&quot;and-heres-the-pitch-for-job-hound&quot;&gt;And Here's the Pitch for Job Hound&lt;/h1&gt;

&lt;p&gt;The end result of all this was that while I did end up with a full time job, I also ended up creating a new &lt;strong&gt;free&lt;/strong&gt; product, &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Job Hound&lt;/a&gt; to make applying for tech jobs (generally programming) easier.  Job Hound is a job application tracking system and it puts the job application firmly in charge of the process.  I built it because after I had applied for about 15 jobs, I had no idea where I was in the process and I couldn't give my wife a decent answer about my progress because I simply had no idea.  Job Hound isn't a SAAS product, it is 100% free and I'd encourage you to check it out.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jobhound.io&quot;&gt;My new free product is Job Hound: Make applying for tech jobs suck less!  Sign Up Today.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also here is &lt;a href=&quot;https://www.producthunt.com/posts/job-hound&quot;&gt;Job Hound on Product Hunt&lt;/a&gt; in case you want to toss me an upvote.  Thanks in advance.&lt;/p&gt;

&lt;h1 id=&quot;conclusion-and-what-this-means-for-the-industry-and-the-job-seeker&quot;&gt;Conclusion and What this Means for the Industry and the Job Seeker&lt;/h1&gt;

&lt;p&gt;I wouldn't underestimate these changes to the hiring process and their impact on the industry as a whole.  Here's how I see things changing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Decreased job mobility&lt;/strong&gt;.  If jobs are harder to get then engineers will be less willing to change roles than they have been in the past.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lower salaries&lt;/strong&gt;.  Generally speaking the easiest way to get a raise as an engineer is to leave your job.  If jobs are harder to get then less people will leave and that will drive salaries down.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Less Cross Pollination of Ideas&lt;/strong&gt;.  While companies may not like job mobility, I would argue that on the whole it has been good for high tech in general.  By engineers moving freely across companies, we've seen a great dissemination of engineering techniques and approaches.  If engineers lose job mobility then that will absolutely change.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given how high tech has been such a tool for job creation over the past few decades, I really don't like the implication of these trends but I do see them as very, very real.&lt;/p&gt;

</description>
        <pubDate>Tue, 24 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jobhound/2018/04/24/ten-things-i-learned-from-a-job-hunt-for-a-senior-engineering-role.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jobhound/2018/04/24/ten-things-i-learned-from-a-job-hunt-for-a-senior-engineering-role.html</guid>
        
        <category>jobhound</category>
        
        <category>jobs</category>
        
        
        <category>jobhound</category>
        
      </item>
    
      <item>
        <title>Using Elastic Search and Rails for a Compound Query with Text Strings and User ID</title>
        <description>&lt;p&gt;I'm writing this blog post, my first in quite a while, because I recently had to implement &lt;a href=&quot;https://github.com/elastic/elasticsearch-rails&quot;&gt;ElasticSearch for Rails&lt;/a&gt; for a &lt;a href=&quot;https://www.jobhound.io&quot;&gt;new application I'm building&lt;/a&gt; and I find life in the Elastic world a bit different than I had expected.  If you're an Elastic Search veteran then you should definitely move along because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This is fairly basic&lt;/li&gt;
  &lt;li&gt;I'm writing this mostly to cement this in my own brain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Curiously I found very few examples about how to do this type of compound query in Rails and that's also part of my motivation for writing it.  The closest example I found was in a &lt;a href=&quot;https://stackoverflow.com/questions/19381199/how-to-perform-elasticsearch-query-on-records-from-only-a-certain-user-rails-ti/49900343#49900343&quot;&gt;four year old Stack Overflow post&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-problem-everyone-should-see-only-their-own-data&quot;&gt;The Problem: Everyone Should See Only Their Own Data&lt;/h1&gt;

&lt;p&gt;I have a series of ActiveRecord models that I want to be able to search using Elastic Search.  This can easily be done with this code fragment:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Job.search_user(params[:q])
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Given that I was initially the only user on this code base, I didn't even notice the issue until I thought about deployment.  At which point there was the obligatory light bulb / I'm an idiot moment.  The problem here is that this code searches everyone's jobs, not just the jobs that &lt;strong&gt;you&lt;/strong&gt; created.  Now since every bit of data encompasses a user_id attribute, this should boil down to two problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Getting user_id into the index&lt;/li&gt;
  &lt;li&gt;Constructing a JSON query for ElasticSearch to execute&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;sidebar-but-what-about-searchkick&quot;&gt;Sidebar: But What About SearchKick&lt;/h1&gt;

&lt;p&gt;I'm sure a number of people are shouting out &quot;Use &lt;a href=&quot;https://github.com/ankane/searchkick&quot;&gt;SearchKick&lt;/a&gt; (dummy)&quot; but whenever I tried to use SearchKick, I got odd errors and I eventually just pulled it from Gemfile.  Given that I'm a long time believer in Ankane's ChartKick, I'm sure it is me but I still couldn't make use of it.&lt;/p&gt;

&lt;h1 id=&quot;step-1-getting-userid-into-the-index&quot;&gt;Step 1: Getting user_id into the Index&lt;/h1&gt;

&lt;p&gt;I've opted to setup each of my searchable models as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;include Elasticsearch::Model
include Elasticsearch::Model::Callbacks

settings do
  mappings dynamic: false do
    indexes :company^5, type: :text, analyzer: :english
    indexes :title^5, type: :text, analyzer: :english
    indexes :why_rejected, type: :text, analyzer: :english
    indexes :location, type: :text, analyzer: :english
    indexes :name, type: :text, analyzer: :english
    indexes :domain, type: :text, analyzer: :english
    indexes :created_at, type: :date
    indexes :user_id, type: :text
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The :title^5 bumps the ranking of search results in the title or company attributes by a factor of 5.&lt;/p&gt;

&lt;h1 id=&quot;step-2-constructing-the-json-query&quot;&gt;Step 2: Constructing the JSON query&lt;/h1&gt;

&lt;p&gt;I ended up with a class method on each of my searchable objects like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def self.search_user(query, user)
  self.search({
    query: {
      bool: {
        must: [
        {
          multi_match: {
            query: query,
            fields: [:company, :title, :description, :name]
          }
        },
        {
          match: {
            user_id: user.id.to_s
          }
        }]
      }
    }
  })
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I can call this from my search controller like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@jobs = Job.search_user(params[:q], current_user)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and get results bound only to the logged in user – exactly what I was looking for.&lt;/p&gt;

&lt;h1 id=&quot;step-3-re-indexing-everything&quot;&gt;Step 3: Re-indexing Everything&lt;/h1&gt;

&lt;p&gt;After making changes to your settings / mappings, you need to re-index everything.  I handle this with a simple rake task like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;namespace :search do
  # bundle exec rake search:index_all --trace
  task :index_all =&amp;gt; :environment do
    klasses = [Job, Note, CoverLetter, Task]
    klasses.each do |klass|
      klass.send(:import, :force =&amp;gt; true)
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This re-indexes every model in full.  You don't always need this but it is very convenient to have for development when you're playing with schema changes and the like.&lt;/p&gt;

&lt;h1 id=&quot;recommended-reading&quot;&gt;Recommended Reading&lt;/h1&gt;

&lt;p&gt;I made heavy use of &lt;a href=&quot;https://iridakos.com/tutorials/2017/12/03/elasticsearch-and-rails-tutorial.html&quot;&gt;Iridakos's excellent tutorial&lt;/a&gt; and I recommend you do too.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2018/04/19/using-elastic-search-and-rails-for-a-compound-query-with-text-strings-and-user-id.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2018/04/19/using-elastic-search-and-rails-for-a-compound-query-with-text-strings-and-user-id.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>elastic_search</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Converting from FactoryGirl to FactoryBot</title>
        <description>&lt;p&gt;This blog post talks about the renaming of FactoryGirl to FactoryBoy  and the necessary refactoring that you have to do to a current Rails app to support it.  The official guide to converting your Rails from &lt;a href=&quot;https://github.com/thoughtbot/factory_bot/blob/4-9-0-stable/UPGRADE_FROM_FACTORY_GIRL.md&quot;&gt;FactoryGirl to FactoryBot&lt;/a&gt; is here.  Their solution is a search and replace approach and while that works, I wanted to go thru this step by step.&lt;/p&gt;

&lt;h2 id=&quot;step-0-update-your-gemfile&quot;&gt;Step 0: Update Your Gemfile&lt;/h2&gt;

&lt;p&gt;You need to change your Gemfile from FactoryGirl to FactoryBot:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;factory_bot_rails&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-1-specsupportfactorygirlrb&quot;&gt;Step 1: spec/support/factory_girl.rb&lt;/h2&gt;

&lt;p&gt;This file needs to be renamed from spec/support/factory_girl.rb to spec/support/factory_bot.rb and then the contents changed to reflect it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RSpec.configure do |config|
  config.include FactoryBot::Syntax::Methods
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-2-specrailshelperrb&quot;&gt;Step 2: spec/rails_helper.rb&lt;/h2&gt;

&lt;p&gt;Depending on your RSpec configuration you may not need to adjust this file.  In my case I was using FactoryGirl to create an @user variable so I had to adjust this as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@user = FactoryBot.create(:user, options)    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-3-specfactoriesrb&quot;&gt;Step 3: spec/factories/*.rb&lt;/h2&gt;

&lt;p&gt;Each of your factories needs to be rewritten to call FactoryBot not FactoryGirl so you'll have a structure something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FactoryBot.define do
  factory :user do
    email { Faker::Internet.email }
    username Faker::Name.first_name.downcase
    password &quot;Sample:1&quot;
    password_confirmation &quot;Sample:1&quot;
    first_name Faker::Name.first_name
    last_name Faker::Name.last_name
    active true
    confirmed true
  end
end    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-4-your-actual-spec-files&quot;&gt;Step 4: Your Actual Spec Files&lt;/h2&gt;

&lt;p&gt;In each of your spec files, you'll need to change calls from FactoryGirl.create to FactoryBot.create like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@job = FactoryBot.create(:job, :user_id =&amp;gt; User.first.id)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-5-also-check-specspechelperrb&quot;&gt;Step 5: Also Check spec/spec_helper.rb&lt;/h2&gt;

&lt;p&gt;You should also check spec/spec_helper.rb as this is a common place where you may have located some Factory* type of stuff.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall this was a simpler conversion than I had expected.  Admittedly this was done in a relatively small &lt;a href=&quot;https://www.jobhound.io&quot;&gt;Rails MVP&lt;/a&gt; but it really was pretty painless.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2018/04/19/converting-from-factorygirl-to-factorybot.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2018/04/19/converting-from-factorygirl-to-factorybot.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>testing</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Enabling Github Security Alerts on Your Private Repositories</title>
        <description>&lt;p&gt;Github recently announced that they would be providing &lt;a href=&quot;https://github.com/blog/2470-introducing-security-alerts-on-github&quot;&gt;security alerts for github repositories&lt;/a&gt;.  These alerts let you know when a dependency that you're relying on has a critical vulnerability.  Given the importance of security, this is an excellent idea.  Thank you Github!  These alerts are turned on automatically for public repositories but they require you to opt in for your private repositories.  And while this isn't hard, Github doesn't make it clear exactly how to set this option for your private repositories.  I just spent an hour or so turning this on for all my private repositories and here's the step by step approach:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://www.github.com&quot;&gt;github&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Login if you're not logged in.&lt;/li&gt;
  &lt;li&gt;Navigate to your dashboard.&lt;/li&gt;
  &lt;li&gt;Go to your repositories list by clicking on the repositories link in the header.&lt;/li&gt;
  &lt;li&gt;Select a private repository by clicking on it.&lt;/li&gt;
  &lt;li&gt;Select the Settings link.&lt;/li&gt;
  &lt;li&gt;Scroll down to &lt;strong&gt;Data services&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Turn on &quot;Allow Github to perform read-only analysis of this repository&quot;.&lt;/li&gt;
  &lt;li&gt;Turn on Dependency graph.&lt;/li&gt;
  &lt;li&gt;Turn on Vulnerability alerts.  You should note that Github saves the status of each of these via ajax as you check them off so there's no Save button you need to click.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you need to navigate back to repositories and turn this on for any other private repositories that you have. Given the number of private Rails apps I have repositories for, I'm really, really glad I turned this on.&lt;/p&gt;

&lt;p&gt;Note: Its unclear exactly how long it takes to build the Dependency graph and for the Vulnerability alert scan to be completed.  I don't think it is immediate so you might want to keep an eye on the home page for your repos over the next few days.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io/blog/github/2017/11/17/enabling-github-security-alerts-on-your-private-repositories.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/github/2017/11/17/enabling-github-security-alerts-on-your-private-repositories.html</guid>
        
        <category>github</category>
        
        <category>git</category>
        
        <category>security</category>
        
        <category>rails</category>
        
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Forensic Computing 2 - Kernel Panics and Kexts</title>
        <description>&lt;p&gt;As I've noted in &lt;a href=&quot;http://fuzzyblog.io/blog/text/2017/10/08/forensic-computing-1-finding-textmate-untitled-documents.html&quot;&gt;other places&lt;/a&gt;, my Mac crashes a lot.  For some time now I've just sort of accepted this as a consequence of how I do things.  I'm a software developer and I tend to push the limits of everything.  Part of the reason that I accept it is that my computing usage is more than a bit non standard and I suspect that I'm running up against nothing more than resource limits.  Just as an example, at the start of my day, my terminal count looks something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps auwwx | grep bash | wc -l
      50
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That's at the start of my computing day (I open a lot of terminals and generally leave them running).  Just as a side note, my desktop Hackintosh, with double the RAM, also running OSX is pretty much rock solid so I tend to view this as a resource issue.  But what if it is not?  What if this is a solvable software issue?&lt;/p&gt;

&lt;h1 id=&quot;analyzing-kernel-panics&quot;&gt;Analyzing Kernel Panics&lt;/h1&gt;

&lt;p&gt;In order to figure this out, I took a number of my kernel panics and put them online as gists:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup/ab3a4c81edb3fa80910e25fc12e49993&quot;&gt;October 8th&lt;/a&gt;.  Yes this one happened while I was writing this all down.  Damn it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup/97bc867094294a2b724f5860d04d09ab&quot;&gt;October 7th&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup/30ee32761f72d55d1fe8b870dbdc04af&quot;&gt;September 30th&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fuzzygroup/137e695b9ed5cc2d2ebcda8c983616a4&quot;&gt;August 27&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[September 11](https://gist.github.com/fuzzygroup/5e41b8ccdcdf6c8bf95bbe002aa158&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I've been reading these crash by crash, I always attributed it to randomness since there was no consistent application that seemed to cause the crash (WindowServer was the most common but by no means the sole thing).  But there is a lot of information in these reports and the application when it crashed perhaps isn't the only thing I should be caring about.&lt;/p&gt;

&lt;p&gt;I noticed one interesting thing in going thru the above kernel panics (oh and by the way, you can find many of these logs in /Library/Logs/DiagnosticReports/).  They are all named something like Kernel_2017-09-16-132730_FuzzygroupMacbookPro2016.panic.  &lt;a href=&quot;https://support.apple.com/en-us/TS3742&quot;&gt;Thanks Apple&lt;/a&gt;.  What I noticed was that the kext (Kernel Extension) that always is last loaded is com.github.kbfuse.filesystems.kbfuse which belongs to KeyBase.  This is a part of &lt;a href=&quot;https://keybase.io/&quot;&gt;Keybase&lt;/a&gt; which is a very cool crypto app.  This extension is apparently part of the new &lt;a href=&quot;https://keybase.io/docs/kbfs&quot;&gt;Keybase Filesystem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A kext is a kernel extension and that basically means &quot;code that extends the lowest level of the operating system (the kernel)&quot;.  Fuse is a toolkit that lets you write filesystems in user space and what I do remember about the Fuse project is that I've seen a lot of flakiness / crashes over the years from Fuse related stuff.&lt;/p&gt;

&lt;p&gt;A quick google for the term &lt;a href=&quot;https://www.google.com/search?tbs=li:1&amp;amp;q=osx+fuse+kernel+panic&quot;&gt;osx kernel panic fuse&lt;/a&gt; gave me 49,100 results so I'm not the only one thinking this.  Googling instead for (com.github.kbfuse.filesystems.kbfuse)[https://www.google.com/search?tbs=li:1&amp;amp;q=com.github.kbfuse.filesystems.kbfuse] took me to the github page for the &lt;a href=&quot;https://github.com/keybase/client/tree/master/osx/Fuse&quot;&gt;keybase fuse project&lt;/a&gt; where I found the following uninstallation directions:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Check for any mounts (if there are you need to umount)
mount -t kbfuse

sudo kextunload -b com.github.kbfuse.filesystems.kbfuse
sudo rm -rf /Library/Filesystems/kbfuse.fs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;what-next&quot;&gt;What Next?&lt;/h1&gt;

&lt;p&gt;I've done these steps and now I need to just wait and see if my system stability improves.  I also deleted the Keybase application entirely because its unclear to me what happens to Keybase if I delete a kext that it is using.&lt;/p&gt;

&lt;p&gt;In closing, I'd like to add that I am not the only person who is reporting an issue with this kext and kernel panics.  Here's an &lt;a href=&quot;https://github.com/keybase/client/issues/5190&quot;&gt;open Github thread&lt;/a&gt; on it.&lt;/p&gt;

&lt;h1 id=&quot;update&quot;&gt;Update&lt;/h1&gt;

&lt;p&gt;As of 24 hours later, my Mac has crashed two more times so the kext apparently had nothing to do with it, alas.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Oct 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2017/10/08/forensic-computing-2-kernel-panics-and-kexts.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2017/10/08/forensic-computing-2-kernel-panics-and-kexts.html</guid>
        
        <category>osx</category>
        
        <category>kernel_panics</category>
        
        <category>kexts</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Forensic Computing 1 - Finding TextMate Untitled Documents</title>
        <description>&lt;p&gt;So my Mac crashed again last night.  This is now roughly a two to three times per week occurrence.  Once upon a time I would have sworn like a sailor about this but I now, sadly, accept it.  If you're curious about OSX crashes and kernel panics, I dig into &lt;a href=&quot;http://fuzzyblog.io/blog/osx/2017/10/08/forensic-computing-2-kernel-panics-and-kexts.html&quot;&gt;them here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://macromates.com/&quot;&gt;TextMate&lt;/a&gt; is the programming editor and writing tool I use and normally after a crash, it automatically opens all the documents I previously had open.  And when I say &quot;all&quot;, I mean everything, even the things that weren't ever formally saved i.e. &quot;untitled 107&quot;, &quot;untitled 132&quot;, etc.  Because TextMate doesn't force met to assign a file, I'm able to treat TextMate windows as virtual pieces of paper, virtual post-its if you will and just drop stuff into them.  I only bother to save a file when I actually need to make it long term persistent.  And an awful lot of the time, that never happens.  Sometimes these the contents of these windows flows into a &lt;a href=&quot;https://gist.github.com/&quot;&gt;gist&lt;/a&gt; which then gets emailed to someone.&lt;/p&gt;

&lt;p&gt;Now this bizarre &quot;don't bother to save the file&quot; approach is well and good until it &lt;strong&gt;breaks&lt;/strong&gt;.  Last night, just before my machine crashed, I know for a fact that I was in &lt;strong&gt;untitled 30&lt;/strong&gt;.  But when I restarted my machine, I noticed that untitled 30 wasn't in my Window list:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/textmate_window_list.png&quot; alt=&quot;/blog/textmate_window_list.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This literally sent a chill down my spine – if untitled 30 isn't present then:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Where did it go?&lt;/li&gt;
  &lt;li&gt;How often has this happened?&lt;/li&gt;
  &lt;li&gt;What other untitled xyz files have I unknowingly lost?&lt;/li&gt;
  &lt;li&gt;Where on the blankety, blank computer is untitled 30 stored so I can bloody well find it?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Questions 1 and 2 simply cannot be answered but questions 3 and 4 are actually answerable.  If I can simply find out where TextMate stores its untitled files then I can browse the directory and find them.  I should also then be able to find untitled 30.&lt;/p&gt;

&lt;h1 id=&quot;step-1-google&quot;&gt;Step 1: Google&lt;/h1&gt;

&lt;p&gt;Whenever you are trying to understand something like this Google is generally your first place to look.  Unfortunately these googles didn't really yield anything:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/search?tbs=li:1&amp;amp;q=where+does+textmate+store+untitled+files&quot;&gt;where does textmate store untitled files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/search?tbs=li:1&amp;amp;q=where+does+textmate+store+untitled+files&quot;&gt;textmate untitled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-2-spotlight&quot;&gt;Step 2: Spotlight&lt;/h1&gt;

&lt;p&gt;OSX's Spotlight, the system level search engine was next.  This too yielded nothing, squat, &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=bupkus&quot;&gt;bupkus&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;step-3-alfred&quot;&gt;Step 3: Alfred&lt;/h1&gt;

&lt;p&gt;The filename search engine in &lt;a href=&quot;https://www.alfredapp.com/&quot;&gt;Alfred&lt;/a&gt; which you trigger with your Alfred hotkey plus the keyword open and then what you want to search yielded nothing.&lt;/p&gt;

&lt;h1 id=&quot;step-4-mdfind&quot;&gt;Step 4: mdfind&lt;/h1&gt;

&lt;p&gt;Another way to use Spotlight is to trigger the mdfind utility from the command line and look for the filename untitled 30 directly by typing:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mdfind &quot;untitled&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The output of mdfind is a list of filenames.  But, unfortunately, mdfind isn't, by default, for filenames which means that it finds the word untitled in the &lt;em&gt;body of documents&lt;/em&gt; where as we want it in the filename itself. Just to be sure we can feed the mdfind's output thru grep to winnow it down:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;mdfind untitled&lt;/td&gt;
        &lt;td&gt;grep untitled&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a -name option to mdfind but that also returned nothing:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mdfind -name untitled&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Cool as Hell Sidenote&lt;/strong&gt;: In looking up &lt;a href=&quot;http://osxdaily.com/2017/08/24/find-all-screenshots-mac/&quot;&gt;details on mdfind&lt;/a&gt;, I found this very, very cool command line:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mdfind kMDItemIsScreenCapture:1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What that does is find every screenshot you've taken on your Mac.  And I don't mean files named &quot;Screen Shot xyz&quot; but any screenshot you've ever taken, even ones you've moved to other directories, renamed, etc.  Wow.&lt;/p&gt;

&lt;h1 id=&quot;step-5-look-elsewhere&quot;&gt;Step 5: Look Elsewhere&lt;/h1&gt;

&lt;p&gt;Now the absence of results in Steps 2, 3 and 4 gave me a strong indication that what I was looking for wasn't in an indexed location and that gave me a clue.  Spotlight  and mdfind are both generally looking in the files for the user but NOT in the application level files.  OSX has a key directory structure for users that generally isn't indexed:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/Users/sjohnson/Library/Application Support/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I know for a fact there is a TextMate directory below it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/Users/sjohnson/Library/Application Support/TextMate/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What I didn't know was what was below the TextMate directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l &quot;/Users/sjohnson/Library/Application Support/TextMate/&quot;
total 6488
drwxr-xr-x   10 sjohnson  staff   340B Jan  1  2017 Bundles/
-rw-r--r--    1 sjohnson  staff   732K Oct  8 05:40 ClipboardHistory.db
-rw-r--r--    1 sjohnson  staff    32K Oct  8 05:40 ClipboardHistory.db-shm
-rw-r--r--    1 sjohnson  staff   1.7M Oct  8 07:12 ClipboardHistory.db-wal
-rw-r--r--    1 sjohnson  staff   1.1K Sep 30 08:46 Global.tmProperties
drwxr-xr-x    5 sjohnson  staff   170B Oct  7 06:31 Managed/
-rw-r--r--    1 sjohnson  staff   688K Oct  8 05:51 RecentProjects.db
drwxr-xr-x    4 sjohnson  staff   136B Nov 20  2016 Ruby/
drwxr-xr-x  156 sjohnson  staff   5.2K Oct  8 07:12 Session/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And, yep, &lt;strong&gt;bingo&lt;/strong&gt;, &lt;em&gt;Session/&lt;/em&gt;.  A quick look there showed me all my untitled documents including:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l /Users/sjohnson/Library/Application\ Support/TextMate/Session/untitled\ 30*

-rw-r--r--@ 1 sjohnson  staff   5.3K Sep 13 04:23 /Users/sjohnson/Library/Application Support/TextMate/Session/untitled 30.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now that I have a path I can just type open &quot;/Users/sjohnson/Library/Application\ Support/TextMate/Session&quot; and get a Finder window of all my untitled documents like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/text_mate_session.png&quot; alt=&quot;text_mate_session.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Oct 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/text/2017/10/08/forensic-computing-1-finding-textmate-untitled-documents.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/text/2017/10/08/forensic-computing-1-finding-textmate-untitled-documents.html</guid>
        
        <category>textmate</category>
        
        <category>computer_forensics</category>
        
        
        <category>text</category>
        
      </item>
    
      <item>
        <title>The Game Nanny Story Or When Life Gives You Lemons</title>
        <description>&lt;p&gt;I have built a lot of products in my career:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;search engines&lt;/li&gt;
  &lt;li&gt;blogging tools&lt;/li&gt;
  &lt;li&gt;podcasting tools&lt;/li&gt;
  &lt;li&gt;online learning systems&lt;/li&gt;
  &lt;li&gt;hypertext authoring tools&lt;/li&gt;
  &lt;li&gt;email marketing aka spamming tools&lt;/li&gt;
  &lt;li&gt;Even a web UI to calculate radiation doses for prostate cancer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But the one thing that I've stayed resolutely way from is &lt;em&gt;gaming&lt;/em&gt;.  And, despite that, three days ago, I launched a product named &lt;strong&gt;Game Nanny&lt;/strong&gt; so what happened?&lt;/p&gt;

&lt;p&gt;The short answer is &lt;strong&gt;life happened&lt;/strong&gt; or as I refer to it with my wife, &lt;em&gt;When Life Gives You Lemons&lt;/em&gt;.  Here's a snippet from the home page that tells the tale:&lt;/p&gt;

&lt;div style=&quot;margin-left: 50px; margin-right: 50px; background-color: #f6f8fa; padding: 16px;overflow: auto;font-size: 85%;line-height: 1.45;background-color: #f6f8fa;border-radius: 3px;&quot;&gt; 
&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;My name is Scott and I'm a parent, I bet a lot like you. I recently discovered that one of my children has been using my credit card to purchase things in the XBox store -- a lot of things. That $347.82 bill I mentioned above, well, that's true -- and it was just the tip of the iceberg.&lt;/p&gt;

&lt;p&gt;I'm also a software developer and I'll admit that while I realized immediately that I had a parenting problem, this was also an opportunity -- and the very next morning I started building Game Nanny.&lt;/p&gt;

&lt;p&gt;As parents, even if we don't like video games, we should admit that our kids love them -- but they can be addictive and lead to crazy bad behavior. I'm not the first parent to be surprised by his kid's gaming spending and I won't be the last.&lt;/p&gt;

&lt;p&gt;Use Game Nanny to take control of your kid's XBox bad habits. Don't be surprised again!&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;And that's the honest to god truth as how Game Nanny came into being.  To summarize:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I saw my kid had made a mistake (and, yes, a big one)&lt;/li&gt;
  &lt;li&gt;I realized that this wasn't just a parenting problem, that it was an opportunity&lt;/li&gt;
  &lt;li&gt;That realization took about all of a minute.&lt;/li&gt;
  &lt;li&gt;After that first minute, I had a pretty good idea of what the product was&lt;/li&gt;
  &lt;li&gt;Two weeks later I had a functional product&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line for anyone that either perceives themself to be an entrepreneur or wants to be is that when life gives you a problem, you can look at as just that.  Or you can look at your problem as &quot;Is there an opportunity here?&quot; and then, if you think the answer is &quot;Yes&quot; then build a business around it.&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Oct 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/startup/2017/10/06/the-game-nanny-story-or-when-life-gives-you-lemons.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/startup/2017/10/06/the-game-nanny-story-or-when-life-gives-you-lemons.html</guid>
        
        <category>game_nanny</category>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Self Hosting a Jekyll Site</title>
        <description>&lt;p&gt;I've been a blogger since 2002 and over the years there have been a lot of different blogging tools: Radio, WordPress, Serendipity, Movable Type, TypePad, b2, etc.  After a long, on and off hiatus, I made the decision in 2016 to get serious about blogging again and at that point I committed to &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.  The reason was really the simplicity of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Having all my blog posts in a filesystem, not a database, was a transformative and wonderful experience&lt;/li&gt;
  &lt;li&gt;Being able to use my coding editor to jot down a simple blog post was a big, big deal&lt;/li&gt;
  &lt;li&gt;Having all my blog posts run thru github, a tool I use not just daily but generally hourly&lt;/li&gt;
  &lt;li&gt;The ease of use of Github Pages which magically hosts a blog for you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, for the past almost 2 years, this has been a great decision.  My blog, &lt;a href=&quot;http://www.fuzzyblog.io/blog/&quot;&gt;FuzzyBlog&lt;/a&gt;, has been an essential tool for writing and just personal documentation.  Basically whenever I have to learn something, I try and write it down and that's a model which works great for me.&lt;/p&gt;

&lt;p&gt;I recently needed, however, to make a product specific blog, &lt;a href=&quot;https://blog.gamenanny.io&quot;&gt;blog.gamenanny.io&lt;/a&gt;, for my new &lt;a href=&quot;https://www.gamenanny.io/&quot;&gt;Game Nanny&lt;/a&gt; product and I discovered that I just couldn't use Github Pages for this at all.  Github Pages creates a single blog tied to your github username and, well, I only have one github username.  This meant that I had to get into self hosting my Jekyll blog or changing from Jekyll to something else.  I chose the self hosting route and there in lies a how to tale.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Like most things on the Internet, there must be a way around this limitation but I haven't found it yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: My friend &lt;a href=&quot;https://www.twitter.com/stevegrossi&quot;&gt;Steve Grossi&lt;/a&gt; told me that you can get around this apparent &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;Github limitation&lt;/a&gt;. I'm not entirely certain that I understand it but I'm glad to have it as an option. Thx Steve!&lt;/p&gt;

&lt;h1 id=&quot;understanding-jekylls-output&quot;&gt;Understanding Jekyll's Output&lt;/h1&gt;

&lt;p&gt;The key thing to understand about Jekyll is that, at its heart, it is a static site generator.  What this means is that when you type:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;jekyll serve&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;jekyll build&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;it creates a set of static files that represent your site based on the markdown documents in _posts and your _config.yml configuration file.  Self hosting a Jekyll site basically amounts to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Creating a jekyll site.&lt;/li&gt;
  &lt;li&gt;Creating content in that Jekyll site.&lt;/li&gt;
  &lt;li&gt;Running jekyll build or jekyll serve to create the static site files.&lt;/li&gt;
  &lt;li&gt;Getting the files in _site to a public server (rsync).&lt;/li&gt;
  &lt;li&gt;Having a web server on a public box that can serve the files generated by Jekyll.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The rest of this blog post walks you through all these steps.  I'm a big, big believer in AWS so that's what I used but any public web host will work.&lt;/p&gt;

&lt;h1 id=&quot;creating-a-jekyll-site&quot;&gt;Creating a Jekyll Site&lt;/h1&gt;

&lt;p&gt;This can be done with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;jekyll new site_name&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I used:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;jekyll new game_nanny_blog&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm not going to cover Jekyll details like theme configuration much although I have a set of references at the end.  Jekyll theme configuration is to me, well, a &lt;strong&gt;black art&lt;/strong&gt; that best resembles a &lt;em&gt;pagan ritual&lt;/em&gt; (do it at in the dark of night, naked, chanting and so on).  I just use the default minima theme and generally hope I can get away with it.&lt;/p&gt;

&lt;p&gt;Basic configuration can be done by modifying _config.yml in your Jekyll root directory.  Advanced configuration, well, it can be tedious.&lt;/p&gt;

&lt;h1 id=&quot;configuring-your-server&quot;&gt;Configuring Your Server&lt;/h1&gt;

&lt;p&gt;All you need to self host a jekyll blog is a dead simple web server like Nginx.  Although I've mostly been doing Docker for executable software for sometime now, it just felt simpler to go old school on this.&lt;/p&gt;

&lt;p&gt;Install nginx with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install nginx&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You may need to edit the main configuration file with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo vi /etc/nginx/nginx.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I found the defaults are pretty basic but your details may vary.  And you'd also need to create a config file specifically for your main blog with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo vi /etc/nginx/conf.d/blog.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here's what I have in my blog.conf file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
  listen 3301;
  server_name blog.gamenanny.io;
  root /home/ubuntu/gamenannyblog/_site;

  expires 30s;
  add_header Cache-Control public;
  add_header ETag &quot;&quot;;

  error_page 404 /404.html;
  error_page 500 /500.html;

  location  ~ ^/assets/ {
    expires max;
  }

  location ~ /\. {
    return 404;
    access_log off;
    log_not_found off;
  }

  location = /favicon.ico {
    try_files /favicon.ico =204;
    access_log off;
    log_not_found off;
  }

  location / {
    try_files $uri $uri.html $uri/ =404;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The main changes that I made in blog.conf are these:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen 3301;
server_name blog.gamenanny.io;
root /home/ubuntu/gamenannyblog/_site;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Each of these is explained as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;listen 3301;&lt;/strong&gt; The reason for that is that I have multiple sites on this one AWS instance and my AWS Elastic Load Balancer will be responsible for translation data on port 3301 to an port 80 request on blog.gamenanny.io.  I use a standard set of port mappings on everything I build (*00 is always the main site, *01 is always the blog, *05 is always the ecommerce)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;server_name server_name blog.gamenanny.io;&lt;/strong&gt; This configures the site's domain name.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;root /home/ubuntu/gamenannyblog/_site;&lt;/strong&gt; This sets the root directory to serve the site's data from.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;aws-specifics&quot;&gt;AWS Specifics&lt;/h1&gt;

&lt;p&gt;I'm deploying to a basic AWS EC2 instance and here is a quick overview of what I needed to do.  Please note that these are the very broad strokes as I was quite rushed when I did it:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add blog.gamenanny.io to my Route 53 domain settings.&lt;/li&gt;
  &lt;li&gt;Add a target group to the ELB for the blog.&lt;/li&gt;
  &lt;li&gt;Add a listener rule to the ELB for the blog.&lt;/li&gt;
  &lt;li&gt;Connect the listener rule to the target group.  Until you do this there will be a 503 error and that's what always reminds me to couple the two.&lt;/li&gt;
  &lt;li&gt;Create a directory on your file system where the content can reside.  I did this with:&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;mkdir /home/ubuntu/gamenannyblog/_site&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The _site corresponds to Jekyll's _site directory where it generates all data.&lt;/p&gt;

&lt;h1 id=&quot;deployment&quot;&gt;Deployment&lt;/h1&gt;

&lt;p&gt;In order to handle deployment, I wrote a small shell script. deploy3.sh, which invokes jekyll build and then rsync's the content to the server.  I've now spent almost two years using Jekyll with Github pages and my one comment about the git push to get my content live is that &lt;strong&gt;it is slow&lt;/strong&gt;.  I was absolutely shocked just how fast invoking jekyll build and then rsync was.  Here's my deploy3.sh script:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build
rsync -avr --rsh&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ssh'&lt;/span&gt; --delete-after --delete-excluded _site/ ubuntu@52.14.179.50:/home/ubuntu/gamenannyblog/_site
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This level of speed is just plain awesome.&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;This is actually the first time I've ever successfully used Nginx; previously I was a straight up, old school Apache guy.  My buddy &lt;a href=&quot;http://www.nickjanetakis.com&quot;&gt;Nick&lt;/a&gt; did my Nginx configuration in about 2 shakes of time (read that as &quot;really, really, really quick&quot;).  Thanks Nick!&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nginx.com/resources/wiki/&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Customizing Minima&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/themes/&quot;&gt;Customizing Jekyll Themes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/deployment-methods/&quot;&gt;Jekyll Deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;Jekyll RSync Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sgeos.github.io/jekyll/disqus/2016/02/14/adding-disqus-to-a-jekyll-blog.html&quot;&gt;Adding Disqus to Your Jekyll Blog&lt;/a&gt; Disclaimer - this was a total fail for me and I found the documentation horrid but Disqus has always failed for me so perhaps it is just me.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 06 Oct 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/jekyll/2017/10/06/self-hosting-a-jekyll-site.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/jekyll/2017/10/06/self-hosting-a-jekyll-site.html</guid>
        
        <category>jekyll</category>
        
        <category>blogging</category>
        
        <category>startup</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Using Chrome Driver with Docker, Rails and Selenium on AWS</title>
        <description>&lt;p&gt;I've done a lot of crawling in my professional career and I mean a &lt;strong&gt;lot&lt;/strong&gt;.  The recent trend towards JavaScript based sites, however, has wreaked havoc on my traditional approach of low level html parsing.  For a new product I'm launching, I recently had to make the switch to using &lt;a href=&quot;https://github.com/SeleniumHQ/&quot;&gt;Selenium&lt;/a&gt; for crawling.  Selenium, commonly known as a testing tool, can be used in an embedded fashion where you use code like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;browser = Selenium::WebDriver.for :chrome
browser.get &quot;https://www.google.com&quot;
html = browser.page_source
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's a rough equivalent in Mechanize:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;agent = Mechanize.new
page = agent.get(&quot;https://www.google.com&quot;)
html = page.body
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Although the lines of code look similar to something like &lt;a href=&quot;https://github.com/sparklemotion/mechanize&quot;&gt;Mechanize&lt;/a&gt; this is actually an entirely different approach because underneath it all is a full browser including JavaScript which lets something like a page which sends its data down in a JavaScript array and then uses JavaScript to display it actually render and return back to you parseable html.&lt;/p&gt;

&lt;h1 id=&quot;doing-this-server-side&quot;&gt;Doing this Server Side&lt;/h1&gt;

&lt;p&gt;If you're going to use Selenium for a server side crawling process then what you actually needs is called ChromeDriver which is the embedded chrome executable that represents a browser.  One approach is to locally install ChromeDriver on each of your compute nodes but the better approach is to Dockerize everything and run ChromeDriver as a container.  Here are the steps to do just that.&lt;/p&gt;

&lt;h2 id=&quot;add-chromedriver-to-your-docker-compose-file&quot;&gt;Add ChromeDriver to Your Docker Compose File&lt;/h2&gt;

&lt;p&gt;You'll likely need to implement both Step 1 and Step 2.&lt;/p&gt;

&lt;h3 id=&quot;step-1&quot;&gt;Step 1&lt;/h3&gt;

&lt;p&gt;Here's what you'll need for docker-compose.yml or docker-compose.production.yml:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chromedriver:
  image: 'robcherry/docker-chromedriver'
  ports: 
    - 4444:4444
  restart: on-failure
  shm_size: 1G    
  environment:
    - CHROMEDRIVER_WHITELISTED_IPS=&quot;&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-2&quot;&gt;Step 2&lt;/h3&gt;

&lt;p&gt;A docker container is dramatically lighter than a full computer and you'll find that Chrome will start.  The specific error you are likely to hit is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Selenium::WebDriver::Error::UnknownError: unknown error: Chrome failed to start: crashed&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you discover this you need to change your daemon.json file (normally located in /etc/docker/daemon.json) to have a larger shm_size like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat daemon.json
{
  &quot;default-shm-size&quot;:&quot;2g&quot;,
  &quot;storage-driver&quot;: &quot;overlay2&quot;,
  &quot;log-driver&quot;: &quot;json-file&quot;,
  &quot;log-opts&quot;: {
    &quot;max-size&quot;: &quot;10m&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yes I'm aware that I use 1G in the first example and 2g in the second.  This is how I currently have it working and I'm leaving it alone until I play with it more.  I suspect you could sync these but I don't know that definitively.&lt;/p&gt;

&lt;h3 id=&quot;step-3&quot;&gt;Step 3&lt;/h3&gt;

&lt;p&gt;The next error you are likely to hit is one of these two, possibly both:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Net::ReadTimeout during browser launch&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;UnknownError: session deleted because of page crash from tab crashed&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The solution to each of these is how you invoke the core browser object.  Here's what I used:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;browser = Selenium::WebDriver.for :chrome, url: &quot;http://chromedriver:4444&quot;, :prefs =&amp;gt; {:password_manager_enable =&amp;gt; false, :credentials_enable_service =&amp;gt; false}, :switches =&amp;gt; [&quot;disable-infobars&quot;, &quot;no-sandbox&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;security-issues&quot;&gt;Security Issues&lt;/h1&gt;

&lt;p&gt;Here's an interesting security note:&lt;/p&gt;

&lt;p&gt;Note: ChromeDriver restricts access to local connections by default. To allow external connections, you can pass in a custom CHROMEDRIVER_WHITELISTED_IPS environment variable. By default, this is set to 127.0.0.1, but this can by any comma separated list of IP addresses. Setting the value as empty will allow all remote connections.&lt;/p&gt;

&lt;p&gt;AWS security groups really save you on this one.  By setting CHROMEDRIVER_WHITELISTED_IPS=&quot;&quot;, I am able to use ChromeDriver from any other container but nothing else can execute them.  An embedded browser like Selenium is akin to an open proxy so you do not want that.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/robcherry/docker-chromedriver/&quot;&gt;Docker Chrome Driver&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings&quot;&gt;Ruby and Selenium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/ziadoz/3e8ab7e944d02fe872c3454d17af31a5&quot;&gt;Installing Chrome Driver Locally on Ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium/issues/198&quot;&gt;Net::ReadTimeout during browser launch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://intoli.com/blog/running-selenium-with-headless-chrome/&quot;&gt;Running Selenium on Headless Chrome&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/run/#ipc-settings-ipc&quot;&gt;Setting Docker Shm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elgalu/docker-selenium&quot;&gt;Docker and Selenium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/zalando/zalenium#run-it&quot;&gt;Zalenium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elgalu/docker-selenium/issues/20#issuecomment-133011186&quot;&gt;Docker and Selenium and Shm / Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;Kudos and thanks to &lt;a href=&quot;http://www.nickjanetakis.com/&quot;&gt;Nick my Docker buddy&lt;/a&gt;.  He teaches Docker professionally and really knows his stuff.  I probably could have slogged through this but his help turned what would have been a man day into a quick one hour pairing session.  Appreciated.&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/09/30/using-chrome-driver-with-docker-rails-and-selenium-on-aws.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/09/30/using-chrome-driver-with-docker-rails-and-selenium-on-aws.html</guid>
        
        <category>docker</category>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>selenium</category>
        
        <category>aws</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Creating an HTTPS Site on AWS with a .IO Domain</title>
        <description>&lt;p&gt;I recently registered my first .io domain using an all AWS stack (Route 53, EC2, Elastic Load Balancer or ELB, Amazon Certificate Manager or ACM) and I found the process mildly odd – to the degree that I know that it will either bite me again or it will bite someone else.  Either way I thought that it would be best to fully document the process.&lt;/p&gt;

&lt;p&gt;The site I'm building has login and as such https is important for this site.  Although I could have used &lt;a href=&quot;https://nickjanetakis.com/blog/lets-encrypt-vs-cloudflare-for-https&quot;&gt;Let's Encrypt or CloudFlare&lt;/a&gt; for the https, if you're using https on AWS then there's a good chance that you are using an ELB and ACM as they make SSL brilliantly simple.  In all my years of deploying SSL, it has never been as simple as using this AWS stack and I sincerely recommend it.  The oddness occurred when I had to bind the .io domain into the certificate itself.  This process requires an email authentication to the owner of the domain to ensure that no one compromised your AWS credentials.  When you are using a normal .com or .net domain and you do this, Amazon sends the email to the email address on the domain registration itself, easy peasy.  When you are using a .io account, the email is NOT sent to the email address on the domain registration but it is instead sent to all of these:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;administrator@your_domain.io&lt;/li&gt;
  &lt;li&gt;hostmaster@your_domain.io&lt;/li&gt;
  &lt;li&gt;postmaster@your_domain.io&lt;/li&gt;
  &lt;li&gt;webmaster@your_domain.io&lt;/li&gt;
  &lt;li&gt;admin@your_domain.io&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Amazon's credit, they do kind of disclose this in the ACM documentation &lt;a href=&quot;http://docs.aws.amazon.com/acm/latest/userguide/troubleshoot-iodomains.html&quot;&gt;here&lt;/a&gt;. Here's the relevant passage:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ACM does, however, send validation email to the following five common system addresses where your_domain is the domain name you entered when you initially requested a certificate and .io is the top level domain.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;(see above)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;To receive validation mail for an .IO domain, make sure that you have one of the preceding five email accounts enabled. If you do not, you will not receive validation email and you will not be issued an ACM certificate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The problem here is that like a lot of us, probably most of us, I don't have a mail server running on my .io domain so there's nothing to receive the email (so I can respond to it).  Now I could have set up a mail server but a much, much easier approach is to use &lt;a href=&quot;http://improvmx.com/&quot;&gt;ImprovMX&lt;/a&gt; which promises &quot;Free painless email forwarding for your domains&quot; and it really, really delivers.  Within only a few minutes, I had my ACM mailing and I was off to the races.  With any luck, I will even launch my new site later this week.&lt;/p&gt;

&lt;p&gt;ImprovMX is strongly, strongly recommended.&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank You&lt;/h1&gt;

&lt;p&gt;As always, I resolved this with my favorite pairing buddy, &lt;a href=&quot;http://www.nickjanetakis.com&quot;&gt;Nick Janetakis&lt;/a&gt;.  He does Docker stuff and is very, very talented.  He is also a Let's Encrypt expert.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2017/09/30/creating-an-https-site-on-aws-with-a-io-domain.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2017/09/30/creating-an-https-site-on-aws-with-a-io-domain.html</guid>
        
        <category>aws</category>
        
        <category>io</category>
        
        <category>https</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Rails, AuthLogic, CSRF, 422 and session_store.rb</title>
        <description>&lt;p&gt;When you're a professional developer, you come to recognize a category of problems that I refer to as &quot;Pair Programming Required&quot;.  These are those mysterious failures where you know damn well that something should work but &lt;em&gt;nothing&lt;/em&gt; and I repeat &lt;strong&gt;&lt;em&gt;nothing&lt;/em&gt;&lt;/strong&gt; works.  In this situation, you really want to bring another set of eyes to bear on the problem.&lt;/p&gt;

&lt;p&gt;I'm in the process of bringing a new Rails powered application online and I discovered around 3:53 am this morning that login, which works perfectly in development, completely fails in production with the wonderfully helpful error message:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rails 5 ActionController::InvalidAuthenticityToken error&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I dug into it, I saw that was a CSRF error and, oddly, I was getting a 422 error message returned to me.&lt;/p&gt;

&lt;p&gt;The mystery of all this was that this wasn't new login code – it was code that I've been using in another application for months and it has been flawless.&lt;/p&gt;

&lt;p&gt;Here are just a few of the things that I tried to address this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Switch from Rails 5.1.x back to 5.0.x&lt;/li&gt;
  &lt;li&gt;Investigate the prepend: true approach to protect_from_forgery (&lt;a href=&quot;http://www.stackoverflow.com/questions/38331496&quot;&gt;StackOverflow&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Rewrite most of application_controller.rb&lt;/li&gt;
  &lt;li&gt;Massively hack around in the guts of AuthLogic&lt;/li&gt;
  &lt;li&gt;Google&lt;/li&gt;
  &lt;li&gt;Stack Overflow&lt;/li&gt;
  &lt;li&gt;Run production locally&lt;/li&gt;
  &lt;li&gt;change, deploy, test, change again, Lather, Rinse Repeat N times where N is &amp;gt; 10 and less than 50&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once I exhausted all these possibilities, I reached out to a &lt;a href=&quot;http://www.nickjanetakis.com/&quot;&gt;friend&lt;/a&gt; and he and I paired on it.  And that's where the power of pair programming really illustrated itself.  We fairly quickly discovered that the issue was that session_store.rb didn't match the production domain.  I find it unbelievable that the error message wasn't actually useful but since I've been guilty of that sin more than a few times, well, karma I guess.&lt;/p&gt;

&lt;p&gt;Documented here for the next time that I hit this (in the spirit of being a good Internet citizen, I did add it to the Stack Overflow as well).&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/09/25/rails-authlogic-csrf-422-and-session-store-rb.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/09/25/rails-authlogic-csrf-422-and-session-store-rb.html</guid>
        
        <category>rails</category>
        
        <category>authlogic</category>
        
        <category>csrf</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Docker Won't Install Libxml</title>
        <description>&lt;p&gt;One of the most vexing situations in any type of development is when something that you swear you've done literally hundreds of times fails to work – at all.  It always turns out to be that what you're doing is 99.995% the same as something previous – and .005% different.  Last night I went to do a docker-compose build on a new application using my standard stack of Ruby, Rails, Mechanize and the like and I got this, well, crap:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[24/1918]
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

   current directory: /usr/local/bundle/gems/libxml-ruby-3.0.0/ext/libxml
/usr/local/bin/ruby -r ./siteconf20170920-5-mpa6ar.rb extconf.rb
checking for libxml/xmlversion.h in
/opt/include/libxml2,/opt/local/include/libxml2,/usr/local/include/libxml2,/usr/include/libxml2...
no
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.

Provided configuration options:
       --with-opt-dir
       --without-opt-dir
       --with-opt-include
       --without-opt-include=${opt-dir}/include
       --with-opt-lib
       --without-opt-lib=${opt-dir}/lib
       --with-make-prog
       --without-make-prog
       --srcdir=.
       --curdir
       --ruby=/usr/local/bin/$(RUBY_BASE_NAME)
       --with-xml2-config
       --without-xml2-config
       --with-xml2-dir
       --without-xml2-dir
       --with-xml2-include
       --without-xml2-include=${xml2-dir}/include
       --with-xml2-lib
       --without-xml2-lib=${xml2-dir}/lib
extconf failure: need libxml2.

   Install the library or try one of the following options to extconf.rb:

     --with-xml2-config=/path/to/xml2-config
     --with-xml2-dir=/path/to/libxml2
     --with-xml2-lib=/path/to/libxml2/lib
     --with-xml2-include=/path/to/libxml2/include


To see why this extension failed to compile, please check the mkmf.log which can
be found here:

/usr/local/bundle/extensions/x86_64-linux/2.3.0-static/libxml-ruby-3.0.0/mkmf.log
I can't get to the mkmf.log file since that's I think done with a container since its clearly linux not osx.
No clue why this is happening since I use this same damn gem everwhere
There was also this info

Gem files will remain installed in /usr/local/bundle/gems/libxml-ruby-3.0.0 for
inspection.
Results logged to
/usr/local/bundle/extensions/x86_64-linux/2.3.0-static/libxml-ruby-3.0.0/gem_make.out

An error occurred while installing libxml-ruby (3.0.0), and Bundler cannot
continue.
Make sure that `gem install libxml-ruby -v '3.0.0'` succeeds before bundling.
ERROR: Service 'web' failed to build: The command '/bin/sh -c bundle install --binstubs' returned a non-zero code: 5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;One of the major reasons I got into Docker in the first place was to get away from this kind of crap!  Gem builds, particularly where libxml is involved, well, suck.  I spent close to two hours last night tweaking things, updating libraries and such and it was a complete and utter failure.  I even installed Docker on a brand new dev machine and got the exact same result.&lt;/p&gt;

&lt;h1 id=&quot;the-solution&quot;&gt;The Solution&lt;/h1&gt;

&lt;p&gt;This morning I revisited it using the Google query &lt;a href=&quot;https://www.google.com/search?q=docker+won%27t+install+libxml&amp;amp;ie=utf-8&amp;amp;oe=utf-8&quot;&gt;docker won't install libxml&lt;/a&gt; and found this &lt;a href=&quot;https://github.com/docker-library/php/issues/315&quot;&gt;Github Issue&lt;/a&gt; where they suggest adding libxml2-dev to your Dockerfile.  Thus this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;RUN apk update &amp;amp;&amp;amp; apk add build-base nodejs mariadb-dev tzdata git&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;becomes&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;RUN apk update &amp;amp;&amp;amp; apk add build-base nodejs mariadb-dev tzdata git libxml2-dev&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was hugely surprising to me because according to github, I haven't touched my Dockerfile in &lt;strong&gt;4 months&lt;/strong&gt; ever since my &lt;a href=&quot;https://diveintodocker.com/&quot;&gt;Docker buddy and guru, Nick&lt;/a&gt;, helped me set it up.  My docker-compose file, however, was just modified 22 days ago. As docker-compose has become ever more important in the Docker world, the basic Dockerfile is something you touch less and less – apparently until something bites you in the proverbial arse.&lt;/p&gt;

&lt;h1 id=&quot;and-heres-why-this-happened&quot;&gt;And Here's Why this Happened&lt;/h1&gt;

&lt;p&gt;My normal use of libxml, for the past decade or so, is always tied straight to Ruby's &lt;a href=&quot;https://github.com/sparklemotion/mechanize&quot;&gt;Mechanize gem&lt;/a&gt; which I've had running correctly under Docker for the past six months.  And that's why this was so, so surprising to me.  The mistake that I made was that earlier today I had added &lt;a href=&quot;https://github.com/twilio/twilio-ruby&quot;&gt;twilio-ruby&lt;/a&gt; to my Gemfile and apparently twilio-ruby has different nokogiri dependencies than Mechanize which caused the Dockerfile to need libxml2-dev.  Digging into the twilio-ruby issues, I found &lt;a href=&quot;https://github.com/twilio/twilio-ruby/issues/315&quot;&gt;this issue&lt;/a&gt; which seems to address it.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;My buddy Nick, mentioned above, &lt;a href=&quot;https://nickjanetakis.com/blog/docker-tip-9-installing-popular-packages-on-alpine&quot;&gt;talks about this on his blog&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/09/21/docker-won-t-install-libxml.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/09/21/docker-won-t-install-libxml.html</guid>
        
        <category>docker</category>
        
        <category>rails</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Analyzing iPhone X, iPhone 8 and iPhone 8 Plus</title>
        <description>&lt;p&gt;I am not an Apple blogger – I leave that to people like &lt;a href=&quot;https://www.daringfireball.net&quot;&gt;Daring Fireball&lt;/a&gt; but I am an avid Apple user.  Between my wife and two sons, all of us have at least one Mac, iPad or iPhone.  I wrote this piece to analyze the differences between the new iPhones and help analyze how to spend what ultimately will be quite a bit of money.&lt;/p&gt;

&lt;p&gt;Note: This is all sourced from the web; my thanks to all the wonderful coverage cited below.  Particular kudos to Quincy Larson for his salient &lt;a href=&quot;https://medium.freecodecamp.org/why-you-should-never-unlock-your-phone-with-your-face-79c07772a28&quot;&gt;FaceID analysis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;understanding-your-personal-phone-usage&quot;&gt;Understanding Your Personal Phone Usage&lt;/h1&gt;

&lt;p&gt;I think the key to deciding whether or not to upgrade is to understand your personal phone usage and then if the new phones offer &lt;em&gt;you&lt;/em&gt; a benefit.  You &lt;em&gt;don't have&lt;/em&gt; to upgrade.  Let me repeat that – you &lt;strong&gt;don't have&lt;/strong&gt; to upgrade.  Personally I am still running a 128 gig iPhone 6.  I never made the leap to the 7 because I use the smaller phone form factor and the camera was mostly unchanged from the 6 to the 7.  Given the importance of the camera to people's daily lives, I was delighted to see all the camera updates in the iPhone X - it is now the same camera as the 6 plus / 7 plus but in the smaller phone's form factor (ok the X is a little bit larger but I would deem it insignificant).&lt;/p&gt;

&lt;p&gt;My iPhone usage pattern is simple: it goes &lt;strong&gt;everywhere&lt;/strong&gt; I go.  I carry it constantly and the only place I don't take it is swimming. I've carried it with me when I was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;working on a roof&lt;/li&gt;
  &lt;li&gt;cutting down trees&lt;/li&gt;
  &lt;li&gt;fishing&lt;/li&gt;
  &lt;li&gt;working out&lt;/li&gt;
  &lt;li&gt;cooking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In aggregate, I use my phone more than any other computing device.  I compute less with it than I do a laptop but I use it more (if that makes sense).&lt;/p&gt;

&lt;p&gt;Since I am using an iPhone 6 still, this means that I am now two cycles removed from current.  Consequently my battery life is such that I have to recharge during the day even when I'm not using the GPS, I'm constantly running out of space, the screen is scratched (no clue how that happened).  I am thus in the market for a new phone.&lt;/p&gt;

&lt;h1 id=&quot;new-phones-summarized&quot;&gt;New Phones Summarized&lt;/h1&gt;

&lt;p&gt;There are three new phones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-8/specs/&quot;&gt;iPhone 8&lt;/a&gt; (similar to the current 7).  $699.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/specs/&quot;&gt;iPhone 8 Plus&lt;/a&gt; (similar to the current 7 plus).  $799.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/specs/&quot;&gt;iPhone X&lt;/a&gt; (the new phone).  $999.  Slightly bigger physically than the current iPhone 6 / 7 base model but NOT at all as large as the plus model.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The iPhone X is the new hotness with an all new form factor, better camera, &lt;strong&gt;no home button&lt;/strong&gt; and an OLED screen.  Both the iPhone X and iPhone 8 offer wireless charging although Apple's own wireless charging mat will not ship until &quot;2018&quot;.  Given the AirPod shipping delays this is concerning.  Technically any Qi compatible charging mat can be used but my suspicion is that Apple's will somehow be better / faster (otherwise why the delay).&lt;/p&gt;

&lt;h1 id=&quot;key-stats&quot;&gt;Key Stats&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;iPhone X is available for pre-order on October 27 w/ launch on November 3&lt;/li&gt;
  &lt;li&gt;iPhone X is available in 256 and 64 gig capacities&lt;/li&gt;
  &lt;li&gt;iPhone X has the &lt;strong&gt;same camera&lt;/strong&gt; as on the 7 Plus.&lt;/li&gt;
  &lt;li&gt;iPhone X has no home button and no TouchID.&lt;/li&gt;
  &lt;li&gt;iPhone X claims 2 hours longer battery life than the iPhone 7.&lt;/li&gt;
  &lt;li&gt;Animoji is exclusive to the iPhone X&lt;/li&gt;
  &lt;li&gt;iPhone 8 is available for pre-order on September 15th with launch on September 22&lt;/li&gt;
  &lt;li&gt;iPhone 8 and iPhone 8 Plus offer 12 MP cameras but the 8 Plus also has a telephoto lens.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the &lt;a href=&quot;https://www.apple.com/iphone/compare/&quot;&gt;Compare page&lt;/a&gt; for more.&lt;/p&gt;

&lt;h1 id=&quot;qualms-and-a-decision&quot;&gt;Qualms and a Decision&lt;/h1&gt;

&lt;p&gt;My biggest issue with the iPhone X is the lack of the home button and TouchID.  This is a fundamental change to the iPhone interface and one that greatly concerns me.  &lt;a href=&quot;https://medium.freecodecamp.org/why-you-should-never-unlock-your-phone-with-your-face-79c07772a28&quot;&gt;Quincy Larson&lt;/a&gt; raises some excellent points on why you shouldn't unlock with your face.  Personally I find the need to unlock your phone while driving (GPS, play a podcast, etc) and the new FaceID feature disturbing to say the least.  As the parent of a driving age teenager, I will not be eager to see him get anything with FaceID.  Thankfully the device cost alone will prevent that but in a few years …&lt;/p&gt;

&lt;p&gt;Based on the analysis that I've done so far, I'm likely to upgrade to the iPhone X and do it through Apple's monthly plan.  From what I've read, this amounts to about a $12 and change difference over the baseline 7 model and while I don't like the $999 price, I don't think that's too much for something that I use constantly and travels with me literally everywhere I go that isn't a swimming pool.&lt;/p&gt;

&lt;p&gt;The tipping point that pushed me over the edge to the new iPhone X was the new camera features being available in the iPhone X's smaller form factor.  Had iPhone X had the same camera as the iPhone 7 then I likely wouldn't have upgraded at all.  And had the iPhone 7 had the new camera as the iPhone X or 7 Plus, I likely would have decided to stay with the traditional home button design and not risked learning the new gestures.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;Here are some excellent breakdowns:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone/compare/&quot;&gt;Apple iPhone Compare Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/&quot;&gt;Apple iPhone X Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-8/&quot;&gt;Apple iPhone 8 Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/apple-watch-series-3/&quot;&gt;Apple Watch Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/specs/&quot;&gt;iPhone X Tech Specs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-8/specs/&quot;&gt;iPhone 8 Tech Specs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arstechnica.com/gadgets/2017/09/hands-on-with-the-iphone-x-oled-and-hdr-outshine-everything-else/&quot;&gt;Ars Technica Hands On on the iPhone X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arstechnica.com/gadgets/2017/09/apples-radically-different-smartphone-is-called-the-iphone-x/&quot;&gt;Ars Technica on the iPhone X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theverge.com/2017/9/12/16287932/apple-iphone-8-plus-photos-video-hands-on&quot;&gt;iPhone 8 and 8 Plus from The Verge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theverge.com/2017/9/12/16291244/new-iphone-x-photos-video-hands-on&quot;&gt;iPhone X from the Verge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.macrumors.com/roundup/iphone-x/&quot;&gt;MacRumors on iPhone X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.macrumors.com/roundup/iphone-8/&quot;&gt;MacRumors on iPhone 8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=15229317&quot;&gt;Apple Watch Discussion on Hacker News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 13 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/iphone/2017/09/13/analyzing-iphone-x-iphone-7-and-iphone-7-plus.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/iphone/2017/09/13/analyzing-iphone-x-iphone-7-and-iphone-7-plus.html</guid>
        
        <category>iphone</category>
        
        <category>apple</category>
        
        
        <category>iphone</category>
        
      </item>
    
      <item>
        <title>Remembering Jerry Pournelle</title>
        <description>&lt;p&gt;There were three main dimensions to how I grew up:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reading.&lt;/li&gt;
  &lt;li&gt;Computing.&lt;/li&gt;
  &lt;li&gt;Entrepreneurship.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Jerry_Pournelle&quot;&gt;Jerry Pournelle&lt;/a&gt; dramatically affected each of these for me.  Here's how:&lt;/p&gt;

&lt;h1 id=&quot;reading&quot;&gt;Reading&lt;/h1&gt;

&lt;p&gt;If you strip everything else away from me, at my core, I am a reader, specifically of the science fiction variety – and this goes all the way back to my childhood.  I've been reading as long as I can remember and it pretty much always has been science fiction.  I got started early with the Heinlein juveniles and it wasn't a far leap from Heinlein to Jerry Pournelle.  I still remember when the librarians let me move from the kids section of the library to the adult section and that's where I found him - King David's Spaceship, West of Honor, Lucifer's Hammer, Oath of Fealty and more.  And I can remember devouring Jerry's work in Analog both under his name and under &quot;Wade Curtis&quot; when I started buying back issues and I remember having &lt;a href=&quot;https://www.abebooks.com/book-search/author/curtis-wade-pournelle-jerry/&quot;&gt;this one&lt;/a&gt; in my collection.&lt;/p&gt;

&lt;p&gt;A good author, whether fact or fiction, imparts something to his readers far beyond the story and what Jerry Pournelle gave to me was a deep appreciation for engineering and just plain &lt;em&gt;rationality&lt;/em&gt;.  Thanks Jerry!&lt;/p&gt;

&lt;h1 id=&quot;computing&quot;&gt;Computing&lt;/h1&gt;

&lt;p&gt;Right along side reading for me was computing which I discovered in the 7th grade in Wilton, Connecticut at the school's computer lab (a selection of TRS-80 Model 1s).  A trip to the local Walden Books made me aware of Byte Magazine way back in April 82 with this issues:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://fiu-assets-2-syitaetz61hl2sa.stackpathdns.com/static/use-media-items/25/24048/full-971x1298/56703a87/198204.jpeg?resolution=0&quot; alt=&quot;byte magazine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That issue is still in my office and as I write this it is on my desk; I've owned it since I was 14 years old.&lt;/p&gt;

&lt;p&gt;And if I'm being honest, well, I understood about 1 word in 20, mostly the adjectives but what I did find actually not only readable but just plain joyful was &lt;em&gt;Chaos Manor&lt;/em&gt;, Jerry Pournelle's column.  From that point forward, I read Byte for Jerry's column and he was the person who gave me a deep love for computing in general and software in specific.  I can remember hours upon hours in my college library devouring back issues of Byte Magazine once I found their periodicals section.&lt;/p&gt;

&lt;p&gt;Finally I became aware of hypertext from things written in Byte Magazine – and my first startup was a hypertext company.  If not for Jerry addicting me to Byte Magazine, I might never have known about it and my whole life would have been different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you didn't read Jerry back in the day then you don't understand what a colossus Jerry was in small computing.  Computing was deeply different in those days, a much smaller community and if you were influential, well, you were important.  This was a man who knew everyone – Bill Gates, Marvin Minsky, Steve Wozniak and more.  According to Jerry, Byte Magazine paid him $10,000 per month to write that column and that's a fair bit of $$$ even today – back in the early 80s, that was a king's ransom just to write a monthly computer column.&lt;/p&gt;

&lt;h1 id=&quot;entrepreneurship&quot;&gt;Entrepreneurship&lt;/h1&gt;

&lt;p&gt;I started my first company, a software firm building hypertext tools, when I was 19 and the very first copy of software I ever sent to a reviewer was sent to Jerry Pournelle.  He didn't cover it then and it took repeated copies that we kept sending him until November 26, 1990 when he did give us some coverage in his &lt;a href=&quot;https://books.google.com/books?id=u1AEAAAAMBAJ&amp;amp;pg=PA64&amp;amp;lpg=PA64&amp;amp;dq=%22jerry+pournelle%22+%22ntergaid%22&amp;amp;source=bl&amp;amp;ots=pDFl9rznro&amp;amp;sig=wHE-VXmUd2h64RPIIYSYmvcs2Rs&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0ahUKEwjGjdCY55zWAhUJ5oMKHeZPCHoQ6AEIJjAA#v=onepage&amp;amp;q=%22jerry%20pournelle%22%20%22ntergaid%22&amp;amp;f=false&quot;&gt;Infoworld column&lt;/a&gt;. A huge amount of what I know about the software business, specifically about writing good documentation, providing good technical support and just plain listening to customers, I learned from Jerry and his long tales of Zeke, the S100 bus and more.  Jerry wrote about computing from the user's perspective and he gave a large number of us a deep appreciation for the user.&lt;/p&gt;

&lt;h1 id=&quot;rediscovering-jerry-pournelle-through-twit&quot;&gt;Rediscovering Jerry Pournelle Through Twit&lt;/h1&gt;

&lt;p&gt;Despite the deep impact that Jerry Pournelle has had on my life, I haven't thought much about Jerry for a long time now – Byte is long gone and the pace of his fiction output has decreased and his Chaos Manor column on the web didn't resonate for me in the same way as his print column.  But thanks to Leo Laporte's excellent TWIT show on YouTube, I have been able to discover him all over again:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=S7j3IG4h42Y&quot;&gt;Twit 90&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_5UVunOiXCk&quot;&gt;Twit 95&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some amazing stories here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In Twit 90, he talks about making nitroglycerin at age 12&lt;/li&gt;
  &lt;li&gt;In Twit 95, he talks about the act of god that led him into freelance writing and then discussing the probability of it with Marvin Minsky (Minsky created Lisp and founded the MIT AI lab)&lt;/li&gt;
  &lt;li&gt;In Twit 95, we talks about Robert Heinlein and the problem with being a best selling author, no one has the guts to edit you: &quot;Time Enough or Love – there are three good novels there, shouldn't they be three good novels?&quot; (loose paraphrase but it is pretty close)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Twit 90, Jerry describes his Byte writing as &quot;I wrote the Field and Stream column&quot; and that analogy instantly brought all of his computing writing into focus for me since I actually grew up hunting &lt;strong&gt;and&lt;/strong&gt; reading Field and Stream.&lt;/p&gt;

&lt;p&gt;Thank you very, very much Leo for doing these interviews, listening to you talk with Jerry for a few hours means a huge amount to me.&lt;/p&gt;

&lt;p&gt;Goodbye Jerry, you'll be missed but your influence is still alive and well.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/personal/2017/09/11/remembering-jerry-pournelle.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/personal/2017/09/11/remembering-jerry-pournelle.html</guid>
        
        <category>personal</category>
        
        <category>scifi</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>SAAS Business Best Practices from Jonathan Siegel</title>
        <description>&lt;p&gt;Jonathan Siegel wrote &lt;a href=&quot;https://www.amazon.com/dp/B071NGMJPN&quot;&gt;The San Francisco Fallacy&lt;/a&gt; which is my favorite startup book of the year.  I liked it well enough that I'm in the middle of a second read and its one of the books I packed for an upcoming trip to Disney World.  Jonathan was &lt;a href=&quot;http://okdork.com/buying-a-business-jonathan-siegel/&quot;&gt;recently interviewed by Noah Kagan for Ok Dork&lt;/a&gt; and while all of it was excellent, there was one brief shining moment where it felt like the sun had opened up and ideas were literally shining down.  Here's a recap of the best practices that he identified for a SAAS business:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Testing their adwords.&lt;/li&gt;
  &lt;li&gt;Doing landing page testing.&lt;/li&gt;
  &lt;li&gt;Sending out newsletters.&lt;/li&gt;
  &lt;li&gt;Blogging regularly.&lt;/li&gt;
  &lt;li&gt;Forming partnerships.&lt;/li&gt;
  &lt;li&gt;Going to events.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5 minute callbacks whenever they get a new lead on the website&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Try six times to reach every new inbound lead&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Numbers 7 and 8 are new to me and ones that I definitely want to try.  Much of this interview was covering how he buys a business and the money statement of this was &quot;If they team is already doing all these then I would never buy this company&quot; because these techniques are how he adds value to the business and increases revenue.&lt;/p&gt;

&lt;p&gt;All of this was covered around the 24 minute mark.  If you're an entrepreneur, I'd highly recommend listening to this podcast.  Noah's stuff is always great but this particular episode was golden.  There's also a great segment on how he identifies people to hire and why he doesn't hire A players.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/saas/2017/09/06/saas-business-best-practices-from-jonathan-siegel.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/saas/2017/09/06/saas-business-best-practices-from-jonathan-siegel.html</guid>
        
        <category>saas</category>
        
        <category>marketing</category>
        
        <category>best_practices</category>
        
        <category>business</category>
        
        
        <category>saas</category>
        
      </item>
    
      <item>
        <title>Reclaiming Docker Disc Space on OSX</title>
        <description>&lt;p&gt;A few nights ago, after a truly horrible night's sleep complete with my first ever incidence of acid reflux, I woke to find my Mac nattering at me about being &lt;strong&gt;out of disc space&lt;/strong&gt;.  And by out of disc space I mean that I was down to about 3 gigs out of a terabyte sized SSD.  Yikes!&lt;/p&gt;

&lt;p&gt;Taking a look at the normal culprits yielded no surprise increases and I can distinctly recall having in excess of 30 gigs just a day or two ago.  Given all the &lt;a href=&quot;http://fuzzyblog.io/blog/docker/2017/08/30/running-out-of-disc-space-with-docker.html&quot;&gt;server side problems with respect to Docker and disc space&lt;/a&gt; that I have written about previously, I had a strong hunch that somehow Docker was involved.&lt;/p&gt;

&lt;h1 id=&quot;logs&quot;&gt;Logs&lt;/h1&gt;

&lt;p&gt;My first thought was that perhaps Docker logs are huge.  On OSX, Docker logs are stored here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But a quick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;09:41 $ du -shc ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log
 20K	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log
 20K	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nope – clearly 20K isn't anything for disc space usage.&lt;/p&gt;

&lt;h1 id=&quot;containers&quot;&gt;Containers&lt;/h1&gt;

&lt;p&gt;My next thought was that perhaps Docker has some massive backing store for containers.  I did a bunch of searches and ran across this &lt;a href=&quot;https://forums.docker.com/t/consistently-out-of-disk-space-in-docker-beta/9438/67&quot;&gt;Docker thread&lt;/a&gt; and then &lt;a href=&quot;https://forums.docker.com/t/consistently-out-of-disk-space-in-docker-beta/9438/36&quot;&gt;another thread&lt;/a&gt;, both of which pointed me to the Docker.qcow2 file.&lt;/p&gt;

&lt;p&gt;Here's what a du -shc showed me on this file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 57G	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 57G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;futile-attempts-to-reclaim-space&quot;&gt;Futile Attempts to Reclaim Space&lt;/h1&gt;

&lt;p&gt;I tried the normal things like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker system prune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And when that failed, I tried a bash based approach:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;item &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker ps -aq&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;docker stop &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;
docker rm &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

for &lt;/span&gt;item &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker images --filter &lt;span class=&quot;nv&quot;&gt;dangling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -q&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;docker rmi &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But even after both of these, I still had:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 57G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;my-solution&quot;&gt;My Solution&lt;/h1&gt;

&lt;p&gt;Here was the approach that I used:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Quit Docker for Mac entirely.&lt;/li&gt;
  &lt;li&gt;rm /Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2&lt;/li&gt;
  &lt;li&gt;As best as I can tell this is actually safe because containers can always be rebuilt.&lt;/li&gt;
  &lt;li&gt;Restart Docker&lt;/li&gt;
  &lt;li&gt;Verify space usage:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
  1.3G total&lt;/p&gt;

&lt;p&gt;I then built a container and then reverified disc space usage.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
1.3G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then built some more containers and then checked disc space usage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.0G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then started my overall &quot;build all containers&quot; shell script and tracked progress as it went:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.0G	total

09:58 $ du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.1G	total

du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.4G    total

du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
5.4G    total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By the time all containers were built:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
7.2G    /Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now, several days later and even more deploys, it has increased again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
8.2G	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
8.2G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;read-more&quot;&gt;Read More&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.docker.com/t/consistently-out-of-disk-space-in-docker-beta/9438/67&quot;&gt;Great Docker Thread about Disc Space Usage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.docker.com/t/where-does-docker-keep-images-containers-so-i-can-better-track-my-disk-usage/8370&quot;&gt;Docker Thread about Disc Space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 06 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/09/06/reclaiming-docker-disc-space-on-osx.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/09/06/reclaiming-docker-disc-space-on-osx.html</guid>
        
        <category>docker</category>
        
        <category>osx</category>
        
        <category>mac</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Notes on Upgrading to Rails 5.1</title>
        <description>&lt;p&gt;So this morning I upgraded the suite of Rails apps (7 in total) that make up the product that I've been building from Rails 5.0.2 to 5.1.3.  I took my usual, slow as a turtle, approach to doing this upgrade (5.1.4 has now reached RC1 status which means that 1 release behind is uite stable by now).  The main change driving my desire to upgrade was the improved low level connection handling in ActiveRecord which should make developing multi-tenant applications better.&lt;/p&gt;

&lt;p&gt;Here are a few notes on upgrading to Rails 5.1.&lt;/p&gt;

&lt;h1 id=&quot;the-lines-to-change-in-gemfile&quot;&gt;The Lines to Change in Gemfile&lt;/h1&gt;

&lt;p&gt;Previously I had:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 5.0.2'
gem 'puma', '~&amp;gt; 3.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which I changed to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 5.1.3'
gem 'puma', '~&amp;gt; 3.10'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The reason for the Puma update turned out to be unneeded but it is a core part of my stack so it is likely good to upgrade.&lt;/p&gt;

&lt;h1 id=&quot;useful-links&quot;&gt;Useful Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://edgeguides.rubyonrails.org/5_1_release_notes.html&quot;&gt;Rails 5.1 Readme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/puma/versions/3.4.0&quot;&gt;Ruby Gems on Puma&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/rails/versions/5.0.0&quot;&gt;Ruby Gems on Rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;dont-be-afraid-to-delete-gemfilelock-and-re-bundle&quot;&gt;Don't Be Afraid to Delete Gemfile.lock and Re Bundle&lt;/h1&gt;

&lt;p&gt;Out of my seven apps, all built on top of the same version of Rails, two had problems with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle update rails puma&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These two applications had issues with the font-awesome-rails gem and railties.  Rather than try and monkey around with them, I simply did a:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;git rm Gemfile.lock&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then a:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that fixed everything.&lt;/p&gt;

&lt;h1 id=&quot;puma-now-needs-a-space-before-the-port&quot;&gt;Puma Now Needs a Space Before the Port&lt;/h1&gt;

&lt;p&gt;Right after my Rails update and before I did the Puma update, I got this bit of joy when I started my server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3203
=&amp;gt; Booting Puma
=&amp;gt; Rails 5.1.3 application starting in development on http://localhost:3203
=&amp;gt; Run `rails server -h` for more startup options
Puma starting in single mode...
* Version 3.10.0 (ruby 2.3.1-p112), codename: Russell's Teapot
* Min threads: 2, max threads: 2
* Environment: development
* Listening on tcp://
Exiting
/Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:270:in `initialize': getaddrinfo: nodename nor servname provided, or not known (SocketError)
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:270:in `new'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:270:in `add_tcp_listener'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:105:in `block in parse'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:88:in `each'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:88:in `parse'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/runner.rb:144:in `load_and_bind'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/single.rb:87:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/launcher.rb:183:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/rack/handler/puma.rb:69:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/rack-2.0.3/lib/rack/server.rb:297:in `start'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:44:in `start'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:131:in `block in perform'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:126:in `tap'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:126:in `perform'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/command/base.rb:63:in `perform'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/command.rb:44:in `invoke'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands.rb:16:in `&amp;lt;top (required)&amp;gt;'
        from /Users/sjohnson/Dropbox/fuzzygroup/hyde/seira_watch/seira_admin/bin/rails:9:in `require'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This turned out to be a change somewhere in Rails where a space is now needed between the -p and the port number, so this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec rails s -p3203&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;needs to be:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec rails s -p 3203&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was covered in this &lt;a href=&quot;https://github.com/rails/rails/issues/28971&quot;&gt;Github Issue&lt;/a&gt;. Supposedly the latest version of Puma restores the previous functionality where a space isn't needed but I have &lt;strong&gt;NOT&lt;/strong&gt; found that to be so.  The solution was to simply accept that a space after -p is required.  Technically I could have not upgraded Puma but it feels like running the current version of is always a good thing.&lt;/p&gt;

&lt;h1 id=&quot;middleware-now-needs-a-class-constant-not-a-string&quot;&gt;Middleware Now Needs a Class Constant Not a String&lt;/h1&gt;

&lt;p&gt;What I am building uses a multi-tenant approach based on the &lt;a href=&quot;https://github.com/influitive/apartment&quot;&gt;Apartment gem&lt;/a&gt; and this requires an initializer that specifies a middleware layer.  Prior to Rails 5.1, this was done as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails.application.config.middleware.use 'Apartment::Elevators::Subdomain'
(in config/initializers/apartment.rb)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When I first started my application using Rails 5.1, I got this unpleasant result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bundle exec rails s -p 3210
=&amp;gt; Booting Puma
=&amp;gt; Rails 5.1.3 application starting in development on http://localhost:3210
=&amp;gt; Run `rails server -h` for more startup options
Exiting
/Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:35:in `build': undefined method `new' for &quot;Apartment::Elevators::Subdomain&quot;:String (NoMethodError)
Did you mean?  next
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `block in build'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `each'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `inject'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `build'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/engine.rb:508:in `block in app'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/engine.rb:504:in `synchronize'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/engine.rb:504:in `app'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/application/finisher.rb:45:in `block in &amp;lt;module
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Apparently middleware layers that used to take a string now need a class constant so this needs to be rewritten as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails.application.config.middleware.use Apartment::Elevators::Subdomain
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is discussed in this &lt;a href=&quot;https://github.com/rails/rails/issues/28946&quot;&gt;Rails Issue&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;skipbeforefilter-is-now-skipbeforeaction&quot;&gt;skip_before_filter Is Now skip_before_action&lt;/h1&gt;

&lt;p&gt;Although I was able to start my application correctly in development mode with a still in place skip_before_filter, when I tried it in production, I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=&amp;gt; Run `rails server -h` for more startup options
Exiting
/Users/sjohnson/Dropbox/fuzzygroup/hyde/seira_watch/seira_watch_web_app/app/controllers/api_controller.rb:3:in   `&amp;lt;class:ApiController&amp;gt;': undefined method `skip_before_filter' for ApiController:Class (NoMethodError)
Did you mean?  skip_before_action
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This was an easy change but it is still something that could easily trip you up.  Obviously I have been seeing the deprecation warnings for some time now and it is my bad for not having made these changes.&lt;/p&gt;

&lt;h1 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h1&gt;

&lt;p&gt;While mildly annoying these are relatively small issues htat I was able to work around quite cleanly.  The total time to upgrade 7 Rails apps from 5.0.2 to 5.1 was less than an hour in total even including the research and deploy time.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;public-service-announcement&quot;&gt;Public Service Announcement&lt;/h1&gt;

&lt;p&gt;If you haven't upgraded your Ruby Gems executable, you likely should.  &lt;a href=&quot;https://www.ruby-lang.org/en/news/2017/08/29/multiple-vulnerabilities-in-rubygems/&quot;&gt;More details are here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/09/01/notes-on-upgrading-to-rails-5-1.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/09/01/notes-on-upgrading-to-rails-5-1.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>puma</category>
        
        <category>apartment</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Running out of Disc Space with Docker</title>
        <description>&lt;p&gt;I've now been exploring &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; for almost a year now and using it daily for five months or so.  And, as I get ever closer to shipping a product that runs using containers for everything, I have been continually hitting issues regarding running out of disc space.&lt;/p&gt;

&lt;h1 id=&quot;understanding-the-problem&quot;&gt;Understanding The Problem&lt;/h1&gt;

&lt;p&gt;The platform I have been using is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker Community Edition, Docker version 17.06.0-ce, build 02c1d87&lt;/li&gt;
  &lt;li&gt;AWS EC2 instances including ELB&lt;/li&gt;
  &lt;li&gt;No use of Kubernetes or the AWS ECS&lt;/li&gt;
  &lt;li&gt;Ubuntu Linux&lt;/li&gt;
  &lt;li&gt;Docker Hub for image hosting&lt;/li&gt;
  &lt;li&gt;Rails / Ruby as an application language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I have experienced is constant growth in disc space usage ultimately ending up in 0 bytes of free disc space and subsequent failure conditions in most of my containers.&lt;/p&gt;

&lt;h1 id=&quot;docker-on-linux-basics&quot;&gt;Docker on Linux Basics&lt;/h1&gt;

&lt;p&gt;On Ubuntu and most Linux platforms that I understand, the core Docker installation of your data is stored in /var/lib/docker and then a collection of subdirectories.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l /var/lib/docker
total 44
drwx------ 21 root root  4096 Aug 30 01:17 containers
drwx------  3 root root  4096 Aug 30 01:10 image
drwxr-x---  3 root root  4096 Aug 30 01:10 network
drwx------ 85 root root 12288 Aug 30 01:17 overlay2
drwx------  4 root root  4096 Aug 30 01:10 plugins
drwx------  2 root root  4096 Aug 30 01:10 swarm
drwx------  2 root root  4096 Aug 30 01:16 tmp
drwx------  2 root root  4096 Aug 30 01:10 trust
drwx------ 12 root root  4096 Aug 30 03:01 volumes
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are two interesting directories here: containers and overlay2.  You should note that on a default docker installation the overlay2 directory would be named aufs.  The directories overlay2 and aufs are different filesystems that Docker can use to store your containers, volumes, etc.  The default Docker filesystem is called aufs and it is the oldest Docker filesystem.  The overlay2 filesystem is newer and seems to have some dramatic advantages.&lt;/p&gt;

&lt;p&gt;I am currently involved in what is termed &lt;em&gt;green field&lt;/em&gt; software development – this is a development term related to creating a brand new product i.e. everything is a green field waiting to be plowed.  One of the characteristics of green field development is a &lt;strong&gt;lot&lt;/strong&gt; of deploys.  As I initially looked into this problem, its characteristics seemed to map directly to the number of deploys – more deploys meant more disc space used.  When you see this type of situation, it tends to argue that the underlying issue is somehow tied to garbage collection.  My research and analysis of this led me to think that the issue was somehow tied to issues in the Docker aufs filesystem and I switched my installation from aufs to overlay2 and thought it was resolved.&lt;/p&gt;

&lt;p&gt;Last night I started getting alerts that my production server was again almost out of disc space (thank you &lt;a href=&quot;https://github.com/arnaudsj/monit&quot;&gt;Monit!&lt;/a&gt;).  Now the interesting thing is that between when I thought this was resolved and last night, I &lt;strong&gt;have not been deploying at all&lt;/strong&gt;.  Over the past 5 days, I have been involved in an intense refactor of my new product's two core &lt;a href=&quot;https://en.wikipedia.org/wiki/God_object&quot;&gt;god objects&lt;/a&gt; - course.rb and teacher.rb.  In software development parlance, a god object is an object that knows too much or does too much and it is regarded as an &lt;a href=&quot;https://en.wikipedia.org/wiki/Anti-pattern&quot;&gt;anti pattern&lt;/a&gt;.  When you do this type of refactoring, it tends to shut down everything since it breaks, well, &lt;strong&gt;everything&lt;/strong&gt;.  Seeing that I was again running out of disc space – while I wasn't deploying – argued that my working theory was just plain &lt;strong&gt;wrong&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My next step was to ssh into the box (yes, even with a containerized architecture, there are still servers and sshing in is still a thing) and look into /var/lib/docker once again.  My general tool for this was the command du -shc *  which translates to &quot;show me the disc space usage at a summary level and translate it to human style (i.e. k / megs / gigs)&quot;.  Here's an example of my command flow:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo su - 
cd /var/lib/docker
du -shc * 

du -shc *
10G	containers
11M	image
140K	network
3.4G	overlay2
20K	plugins
4.0K	swarm
4.0K	tmp
4.0K	trust
3.3M	volumes
13.5G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I started to wonder what could possibly be in the containers directory with a size of &lt;strong&gt;10G&lt;/strong&gt; so I changed into that directory and I found an anomaly, a single file, 6.2 gigs in size, like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;586e6e0b559281785d023097518ed9303e15db66eee04173792856ff7b2da528-json.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When I looked at that file, it was a log file showing the log output from the underlying crawler at the coder of the product I have been building.  And with this one discovery, the problem came into focus:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;While there may have been issues related to a constant ongoing deploy process, the core underlying issue seems to be disc usage due to log file build up.&lt;/li&gt;
  &lt;li&gt;Docker makes it very hard to see the underlying problem since there doesn't seem to be a &quot;where is my damn disc space going&quot; type of command.  Update: Try using &quot;docker system df&quot; to visualize docker disc space usage.  I only found this late in the writing process on this post.  The docker system df command doesn't specifically report log file space usage which I suspect would illuminate this problem.&lt;/li&gt;
  &lt;li&gt;Logs appear to be persistent over time and not reclaimed as you deploy.  My suspicion is that logs are only reset when you stop the Docker daemon (and sometimes not even then).&lt;/li&gt;
  &lt;li&gt;Traditional log management like log rotate won't work unless you restart the Docker daemon.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: I wonder how many people that have struggled with this issue have actually had log file growth issues not actual Docker problems?  Most of the unresolved Docker / Moby issues below don't explore the logs possibility.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It should be noted that I'm not logging to files from within my application code and I'm using the log to standard out approach from the &lt;a href=&quot;https://github.com/nickjj/orats&quot;&gt;Orats gem&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;fixing-this-problem-once-and-for-all&quot;&gt;Fixing this Problem Once and For All&lt;/h1&gt;

&lt;p&gt;Here are the steps that I took to address this problem:&lt;/p&gt;

&lt;h2 id=&quot;step-1-stop-the-docker-daemon&quot;&gt;Step 1: Stop the Docker Daemon&lt;/h2&gt;

&lt;p&gt;The first step is shutting down Docker itself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo service docker stop&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;step-2-delete-varlibdocker&quot;&gt;Step 2: Delete /var/lib/docker&lt;/h2&gt;

&lt;p&gt;The next step appears drastic and it is.  If you have important data in your Docker system then you're going to lose it at this stage but when I attempted to do this piecemeal, I got bizarre deployment errors related to missing containers and even redeploying did not fix it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo su
umount /var/lib/docker/overlay2
cd /var/lib/docker
rm -rf * 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This blows away everything in your Docker installation.  The second command line is only necessary if you have already switched your system to overlay2 as I had.&lt;/p&gt;

&lt;h2 id=&quot;step-3-switch-from-aufs-to-overlay2-and-add-log-limits-to-docker-config&quot;&gt;Step 3: Switch from aufs to overlay2 and Add Log Limits to Docker Config&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Full use of the overlay2 driver is covered &lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver/#configure-docker-with-the-overlay-or-overlay2-storage-driver&quot;&gt;here&lt;/a&gt; and should probably be read before you make this switch.  Not everyone can make use of overlay2.&lt;/p&gt;

&lt;p&gt;The core docker config file is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/etc/docker/daemon.json&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should edit this file and make it look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;storage-driver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;overlay2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;log-driver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;json-file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;log-opts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;max-size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;100m&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I'm honestly not 100% certain that switching from aufs to overlay2 is absolutely required but it was a part of the overall solution and does seem to have benefits so I left it in here although I suspect that the logging is clearly the biggest win here.&lt;/p&gt;

&lt;h2 id=&quot;step-4-restart-docker-daemon&quot;&gt;Step 4: Restart Docker Daemon&lt;/h2&gt;

&lt;p&gt;Start Docker up again:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo service docker start&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;step-5-add-logging-limits-to-your-compose-files&quot;&gt;Step 5: Add Logging Limits to Your Compose Files&lt;/h2&gt;

&lt;p&gt;On your local machine where you do your development, you need to set the logging options on a per container basis to your docker-compose file.  The lines to add are to each service are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;logging:
  options:
    max-size: 50m
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here's an example in the context of a full container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;services:
  redis:
    image: 'redis:3.2-alpine'
    ports:
      - '6379'
    volumes:
      - 'redis:/var/lib/redis/data'
    restart: on-failure
    logging:
      options:
        max-size: 50m
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Theoretically I could have ignored this at a per container level and just relied on the log management defined in /etc/docker/daemon.json but when you have a system level config file, that often gets changed and not checked into version control, belt &lt;strong&gt;and&lt;/strong&gt; suspenders is better.  Setting this at the application level and the system level should ensure that I don't get bit by this again.  This will also protect your local dev box from unlimited log growth which could otherwise be a problem since your local dev box isn't configured by the same /etc/docker/daemon.json file.&lt;/p&gt;

&lt;h2 id=&quot;add-cron-jobs-for-removing-unused-stuff-periodically&quot;&gt;Add Cron Jobs for Removing Unused Stuff Periodically&lt;/h2&gt;

&lt;p&gt;I added cron jobs to my underlying instance for cleaning up after dangling containers and volumes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#Ansible: docker rmi images
1 1 * * * docker rmi -f $(docker images -a -q -f dangling=true)
#Ansible: docker volume rm
1 3 * * * docker volume rm -f $(docker volume ls -q -f dangling=true)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The #Ansible comment indicates that these were added by Ansible as part of my machine provisioning script (Step 8 below is now also part of that same script).&lt;/p&gt;

&lt;h2 id=&quot;step-7-get-etcdockerdaemonjson-into-ansible--version-control&quot;&gt;Step 7: Get /etc/docker/daemon.json into Ansible / Version Control&lt;/h2&gt;

&lt;p&gt;However you configure a new instance, you should make sure that your modified daemon.json file from Step 3 is part of that process or you'll find that setting up a new machine has this same problem.&lt;/p&gt;

&lt;h2 id=&quot;step-8-redeploy-everything&quot;&gt;Step 8: Redeploy Everything&lt;/h2&gt;

&lt;p&gt;The final step is to re-deploy everything as all containers, volumes, etc have been deleted earlier in the process.  Hopefully you will find that your disc space usage comes under control.&lt;/p&gt;

&lt;h1 id=&quot;sidebar-1-docker-system-df&quot;&gt;Sidebar 1: docker system df&lt;/h1&gt;

&lt;p&gt;As I was finishing this post, I found the command docker system df which shows you the space docker uses.  Here's an example from my local dev box:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FuzzygroupMacbookPro2016% docker system df
TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE
Images              671                 67                  40.59GB             24.07GB (59%)
Containers          84                  5                   742.2MB             718MB (96%)
Local Volumes       41                  22                  634.5MB             1.553kB (0%)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;sidebar-2-docker-system-prune&quot;&gt;Sidebar 2: docker system prune&lt;/h1&gt;

&lt;p&gt;The command docker system prune reclaims dangling images and stopped containers.  Here's an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FuzzygroupMacbookPro2016% docker system prune
WARNING! This will remove:
        - all stopped containers
        - all networks not used by at least one container
        - all dangling images
        - all build cache
Are you sure you want to continue? [y/N] y
Deleted Containers:
4fc625609ac8f86f8d8f9076a8e75d5ccb31c1e871ed6f4589b79de2721af02c
... (A long, long list of containers was here)
Total reclaimed space: 28.72GB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The interesting thing here is that before I ran this I had 46 gigs of free space on my local dev box and after I ran this, I still had 46 gigs free.  I don't know why Docker states that it reclaimed space when it doesn't.&lt;/p&gt;

&lt;p&gt;Note: I'm not the only person who can't reclaim this space.&lt;/p&gt;

&lt;h1 id=&quot;what-to-learn-from-this&quot;&gt;What to Learn from This&lt;/h1&gt;

&lt;p&gt;I would argue that the big takeaway from this isn't actually the specific Docker commands, useful as they are, but the observation that disc space growth wasn't tied to deploys but instead to system operation.  Realizing this changed how I approached the problem.  When you build complex systems, learning how to observe them and then correlating that with what you are doing to the system is a key technique.&lt;/p&gt;

&lt;h1 id=&quot;thank-yous&quot;&gt;Thank Yous&lt;/h1&gt;

&lt;p&gt;Most of what I know about Docker, I learned from the courses of &lt;a href=&quot;https://diveintodocker.com/&quot;&gt;Nick Janetakis&lt;/a&gt;.  He is a friend and he pitched in greatly on the analysis and resolution of this.  Thanks man!&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.idetailaid.co.uk/docker-using-up-all-your-disk-space-dont-forget-to-clean-up-after-docker/&quot;&gt;Interesting Blog Post about Cleaning Up After Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/search?tbs=li:1&amp;amp;q=how+much+space+are+my+docker+logs+taking&quot;&gt;Docker Logs on Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moby/moby/issues/3804&quot;&gt;Docker Disc Space Quotas and aufs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thehftguy.com/2016/11/01/docker-in-production-an-history-of-failure/&quot;&gt;Docker in Production a History of Failure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12872304&quot;&gt;Docker in Production a History of Failure&lt;/a&gt; (search for overlay2)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moby/moby/issues/22207&quot;&gt;Docker not Cleaning Up tmp Files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moby/moby/issues/29486&quot;&gt;Docker Orphaned Diffs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver/&quot;&gt;Using Overlay2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/stanislavb/6634fc35b3d1655201a93d2dd2c3a366&quot;&gt;A seemingly good shell script for cleaning up after Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 30 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/08/30/running-out-of-disc-space-with-docker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/08/30/running-out-of-disc-space-with-docker.html</guid>
        
        <category>docker</category>
        
        <category>aufs</category>
        
        <category>disc_space</category>
        
        <category>bloat</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>When Gems Won't Install - The mkmf.log Problem</title>
        <description>&lt;p&gt;Computing is rich enough and deep enough as a profession that you can spent literally over a decade at something and still learn new things.  And, as frustrating as this is, I find that one of the best parts.   Personally I've been using Ruby now since 2006 and one of the things that is absolutely bedeviling is when a gem won't install.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upfront Disclaimer&lt;/strong&gt;: This problem was one of my own making but it proved to be an interesting exercise as I waited for someone to arrive for a meeting.  Far better than simply surfing the web or playing on my phone.&lt;/p&gt;

&lt;p&gt;I was trying to get the &lt;a href=&quot;https://github.com/feedbin/feedbin&quot;&gt;FeedBin&lt;/a&gt; aggregator to install so I did the usual open source Rails dance:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fork it&lt;/li&gt;
  &lt;li&gt;clone it&lt;/li&gt;
  &lt;li&gt;bundle install&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, WHAM, this gave me the wonderfulness below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

    current directory: /Users/sjohnson/.rvm/gems/ruby-2.3.1@feedbin/gems/nio4r-2.1.0/ext/nio4r
/Users/sjohnson/.rvm/rubies/ruby-2.3.1/bin/ruby -r ./siteconf20170828-91881-jc70x3.rb extconf.rb
--with-cflags=-std=c99
checking for unistd.h... *** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nothing like an abstractly referenced log file &lt;strong&gt;WITHOUT A FULL PATH&lt;/strong&gt; to be completely unhelpful.  I've been seeing references to mkmf.log about as long as Gems have been in common usage and I've never understood exactly where that persnickety file was located.  Normally a quick Google or Stack Overflow gives me the answer but this time those just weren't helpful.  What I did &lt;a href=&quot;https://stackoverflow.com/questions/20379274/when-a-gem-fails-where-do-i-find-the-mkmf-log-file&quot;&gt;discover&lt;/a&gt; was that the mkmf.log file is bundled with the gem where it is built.  Given that I use RVM, the example was to look in a path like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/.rvm/gems/ruby-1.9.3-p194/gems/some-cool-gem-name/ext/mkmf.log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I started with this find command:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;find ~/.rvm -name mkmf.log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and that produced a huge number of results, 995 to be specific (a decade or more of hacking Ruby stuff will do that).&lt;/p&gt;

&lt;p&gt;This took me into adding a grep to the end:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;find ~/.rvm -name mkmf.log&lt;/td&gt;
        &lt;td&gt;grep nio4r&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;which still gave me a full page of output so I added feedbin as a secondary grep:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;find ~/.rvm -name mkmf.log&lt;/td&gt;
        &lt;td&gt;grep nio4r&lt;/td&gt;
        &lt;td&gt;grep feedbin&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;which finally produced:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/Users/sjohnson/.rvm/gems/ruby-2.3.1@feedbin/extensions/x86_64-darwin-15/2.3.0/nio4r-2.1.0/mkmf.log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Digging into that file revealed this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun: error: active developer path (&quot;/Applications/Xcode.app/Contents/Developer&quot;) does not exist, use `xcode-select --switch path/to/Xcode.app` to specify the Xcode that you wish to use for command line developer tools (or see `man xcode-select`)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So somehow XCode is missing and I'm certain that's my fault (this isn't my primary dev box so perhaps it got deleted at some point to save disc space).&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/08/28/when-gems-won-t-install-the-mkmf-log-problem.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/08/28/when-gems-won-t-install-the-mkmf-log-problem.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>gems</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails, Apartment, Tenancy and Sidekiq</title>
        <description>&lt;h1 id=&quot;tldr&quot;&gt;TLDR&lt;/h1&gt;

&lt;p&gt;This is a long one.  If you need the quick answer on how to solve Apartment-Sidekiq errors then scroll down to the section titled &lt;strong&gt;Correctly Implementing Sidekiq with Apartment&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;thanks&quot;&gt;Thanks&lt;/h1&gt;

&lt;p&gt;This blog post is dedicated to three people / things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My good friend &lt;a href=&quot;https://www.nickjanetakis.com&quot;&gt;Nick Janetakis&lt;/a&gt; who helped me debug these issues&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mikeperham.com&quot;&gt;Mike Perham&lt;/a&gt;, the author of &lt;a href=&quot;https://www.contribsys.com&quot;&gt;Sidekiq&lt;/a&gt;, whose candor about Apartment-Sidekiq helped point the way&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://influitive.com/&quot;&gt;Influitive&lt;/a&gt; team at the Apartment gem; great work guys, thank you&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;Tenancy in database application development refers to using a separate storage system (think a partition within a database) or a whole separate database per &quot;user&quot; (note that user might mean a group of people).  The idea behind tenancy is to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Isolate one user from another; this tends to provide a much more secure approach&lt;/li&gt;
  &lt;li&gt;Isolate storage so that the capacity needs of one user don't affect other users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tenancy is something that we don't often think about but examples of it abound on the Internet.  The best known example is Wordpress.com where every user's data is stored in a separate database.&lt;/p&gt;

&lt;p&gt;I've been developing a new product for sometime now and I went into it knowing that if I was successful, storage was going to be a huge issue.  When I first developed &lt;a href=&quot;https://web.archive.org/web/20100610030143/http://www.appdata.com:80/&quot;&gt;AppData&lt;/a&gt; I had no idea that I was beginning a near [decade long]*https://web.archive.org/web/20160905051931/http://www.appdata.com/ cycle of struggling with storage.  As with all engineers, I was determined to at least not hit the same errors (better to make different ones) so I knew that I needed a tenancy solution for my development platform, Rails, and that led me to the &lt;a href=&quot;https://github.com/influitive/apartment&quot;&gt;Apartment gem&lt;/a&gt;.  Apartment views tenancy as a problem of managing the underlying database connection so that when you goto foo.app.com, foo generally represents the underlying database or &quot;tenant&quot;.&lt;/p&gt;

&lt;h1 id=&quot;enter-sidekiq-enter-tenancy-problems&quot;&gt;Enter Sidekiq; Enter Tenancy Problems&lt;/h1&gt;

&lt;p&gt;When you develop a web application you are quickly going to discover the need for asynchronous processing.  This is a fancy term that could be defined as &quot;don't make the user wait while a long running operation completes&quot;.  Let's consider the very simple case of sending an email with account details once a user signs up.  Sending that email might be instantaneous or the email server might have problems and might take a few seconds.  By handling this operation asynchronously, the email is send by a separate process and control to the user returns instantly.  In the Rails world the leading technology for this is an open source tool called Sidekiq and Sidekiq is a fantastic bit of code.  It runs as a background daemon coupled to your application through Redis and its multi threading scalably handles all kinds of asynchronous needs.  In the past I've used it to handle email deliveries, data imports, whole site crawling and more.&lt;/p&gt;

&lt;p&gt;The problem I've been struggling with for sometime now is handling back data imports.  My new product has a cool feature – you sign up and the back history for your account is imported from a central data archive.  I wanted to avoid the problems with a data tool where data builds over time.  My goal was for people to sign up and then be instantly product, not productive after a week of data acquisition, at which point they might have stopped caring due to the waiting.  This was clearly a job for Sidekiq but how could that work since the underlying database connection changed for every single user?&lt;/p&gt;

&lt;p&gt;My tenancy solution was a Ruby gem called Apartment and there is actually an extension gem called &lt;a href=&quot;https://github.com/influitive/apartment-sidekiq&quot;&gt;Apartment-Sidekiq&lt;/a&gt;.  What apartment sidekiq purports to do is push into the redis stream a reference to the tenant and then patch sidekiq so that every time it processes the redis data it will connect to the right tenant.  The problem here is that this seems to only sort of work.  For the past two weeks or so my asynchronous code has worked – but with errors.  Sometime I would see 1 error related to tenancy when a back data import was processed and sometimes I would see 26 errors per import.&lt;/p&gt;

&lt;h2 id=&quot;the-solution---dont-use-apartment-sidekiq&quot;&gt;The Solution - Don't Use Apartment Sidekiq&lt;/h2&gt;

&lt;p&gt;This problem was on my radar for quite a while and then I finally said &quot;Ok I can't ship until this is addressed&quot; and I've been working it for the past two days.  Understanding the solution came from this &lt;a href=&quot;https://github.com/mperham/sidekiq/issues/3005&quot;&gt;Github Issue&lt;/a&gt;.  The key bit of wisdom is here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Just as a side note, passing the tenant as a job argument is a hack. The correct way to implement a cross-cutting concern (like tenant) is with client and server middleware. You just need to copy and configure the two bits of code &lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/tree/master/lib/apartment/sidekiq/middleware&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you work with an open source project like Sidekiq, understanding who the people involved are is key because it tells you who to trust.  I've now used Sidekiq for years and years and I trust Mike implicitly when it comes to these matters.  When Mike Perham, the author of Sidekiq, describes something as a &lt;strong&gt;hack&lt;/strong&gt;, well, that tells me there might be real issues.&lt;/p&gt;

&lt;p&gt;I looked at the related &lt;a href=&quot;https://stackoverflow.com/questions/41229392/why-is-apartment-sidekiq-not-finding-the-tenant/41471241#41471241&quot;&gt;Stack Overflow&lt;/a&gt; but no where did I have a problem with my environment and that also didn't mesh which Mikes comment about passing the tenant as a job argument.  Sorting through all kinds of tenancy issues took me different places:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/10&quot;&gt;Possible Version Conflicts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/12#ref-pullrequest-190952852&quot;&gt;Maybe It is Rails 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/11&quot;&gt;More Perham Commentary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the More Perham Commentary, I found this bit of wisdom:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;@andrba the intention cannot be done safely. You need to explicitly switch and cleanup any connections. I hate that callback and wish I'd never implemented it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When something like the &lt;em&gt;underlying callback&lt;/em&gt; on which Apartment-Sidekiq is described in this way it made me realize, &quot;Hm… this isn't going to work, is it&quot;.&lt;/p&gt;

&lt;h2 id=&quot;correctly-implementing-sidekiq-with-apartment&quot;&gt;Correctly Implementing Sidekiq with Apartment&lt;/h2&gt;

&lt;p&gt;Once I accepted that I couldn't use the Apartment-Sidekiq gem, the solution was pretty obvious:&lt;/p&gt;

&lt;h3 id=&quot;step-1-remove-apartment-sidekiq-from-gemfile&quot;&gt;Step 1: Remove Apartment-Sidekiq from Gemfile&lt;/h3&gt;

&lt;p&gt;This was pretty easy - just delete one line and then run bundle install.&lt;/p&gt;

&lt;h3 id=&quot;step-2-pass-the-current-tenant-in-my-calls-to-the-sidekiq-worker&quot;&gt;Step 2: Pass the Current Tenant in my Calls to the Sidekiq Worker&lt;/h3&gt;

&lt;p&gt;Most of my import routines are after_create calls that look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;after_create :import_back_history_sidekiq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This method looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def import_back_history_sidekiq
  InstructorImportBackHistoryWorker.perform_async(self.id, Apartment::Tenant.current)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are two parameters here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;self.id - Sidekiq is oriented around passing low level primitives not full blown ActiveRecord objects so you pass an id reference to the object you want to do an asynchronous call on and then you reload it in the Sidekiq context.&lt;/li&gt;
  &lt;li&gt;Apartment::Tenant.current - This is a string that represents the name of the current tenant.  We need to know this because the real solution to this entire problem is to switch to the right tenant in our Sidekiq worker code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-3-switching-to-the-right-tenant&quot;&gt;Step 3: Switching to the Right Tenant&lt;/h3&gt;

&lt;p&gt;Here's what the underlying Sidekiq worker class looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class InstructorImportBackHistoryWorker
  include Sidekiq::Worker

  def perform(id, tenant)
    Apartment::Tenant.switch!(tenant)
    instructor = Instructor.where(id: id).first
    if instructor
      instructor.import_back_history
    else
      # Some error handling code goes here
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All this does is invoke Apartment::Tenant.switch!(tenant) at the start of the asynchronous processing and that ensures that the correct tenant is used.  After that the import proceeds as normal.  The reason that I have a wrapper approach (import_back_history versus import_back_history_sidekiq) is that I have cases where I use these calls in batch process routines where I don't invoke Sidekiq.&lt;/p&gt;

&lt;p&gt;Using this approach to managing tenancy and Sidekiq, I went from multiple tenancy connection errors tracked thru &lt;a href=&quot;http://fuzzyblog.io/blog/aws/2017/08/11/using-errbit-to-host-your-own-error-tracker-on-aws-for-rails-apps.html&quot;&gt;Errbit&lt;/a&gt; to zero errors.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/41229392/why-is-apartment-sidekiq-not-finding-the-tenant&quot;&gt;Apartment-Sidekiq Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/11&quot;&gt;Long Error Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/08/21/rails-apartment-tenancy-and-sidekiq.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/08/21/rails-apartment-tenancy-and-sidekiq.html</guid>
        
        <category>rails</category>
        
        <category>apartment</category>
        
        <category>tenancy</category>
        
        <category>multi_tenant</category>
        
        <category>sidekiq</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Marketing 101 - Ride the Wave If You Can</title>
        <description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I haven't written a Marketing 101 piece since 2003 but a friend recently pointed out that even &lt;a href=&quot;http://fuzzyblog.io/blog/tag.html#marketing101&quot;&gt;my old ones&lt;/a&gt; were pretty good so I'm giving it a shot.&lt;/p&gt;

&lt;p&gt;One of the more difficult things in marketing to grasp is the idea of a &lt;em&gt;wave&lt;/em&gt;.  I don't know if there's a better term for this but wave is how I've been thinking of this for the better part of two decades now.  A wave is an underlying meme or movement that resonates at the industry or even society level and I think the best way to illustrate this is with an example.  My first company, founded in 1987, was a hypertext authoring system (think FrontPage with an integrated browser but back in the DOS days).  There was a small burst of interest in all things hyper* due to Apple's HyperCard but that pretty much subsided by late 1988 / early 1999.  And then, over the next few years the industry shifted, in a huge way, to &lt;strong&gt;multimedia&lt;/strong&gt;.  Multimedia became a huge wave – and we shifted our product features slightly and our marketing dramatically to ride the multimedia wave:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We added a small handful of features for controlling digital video discs&lt;/li&gt;
  &lt;li&gt;We went to multimedia centric trade shows&lt;/li&gt;
  &lt;li&gt;We adopted the multimedia term and related iconography to all our product literature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We saw our fortunes increase in parallel with multimedia – there is truth in the old aphorism, &lt;em&gt;a rising tide lifts all boats&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When you are a teeny, tiny startup, one of the best things that you can do is to &lt;em&gt;ride the wave&lt;/em&gt; when there is a wave.  I've been consulting recently with an up and coming online education product and my strongest advice to them has been to position their product as a &lt;em&gt;STEM learning tool&lt;/em&gt;. STEM is the current term in vogue for &lt;em&gt;science, technology, engineering and mathematics&lt;/em&gt; education.&lt;/p&gt;

&lt;p&gt;When you're a pure technical person, the idea of riding a wave can at times be disturbing.  Technical founders tend to think of their product solely in the context where the original idea.  And, when that wasn't the wave, repositioning the product in terms of a wave can feel a bit like being a &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=carpet%20bagger&quot;&gt;carpet bagger&lt;/a&gt;.  I'm here to tell you, both as a technical person and a marketer, that this just is &lt;strong&gt;not&lt;/strong&gt; the case.  Waves are often large in nature – what was multimedia after all – and as long as the product is credible in terms of the wave, repositioning can actually benefit both you and the product's customers:&lt;/p&gt;

&lt;p&gt;For you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You get to tap into a market that is growing faster that normal&lt;/li&gt;
  &lt;li&gt;You get access to a set of focused marketing events such as trade shows that are wave focused&lt;/li&gt;
  &lt;li&gt;You get access to a smaller but more focused group of customers&lt;/li&gt;
  &lt;li&gt;Customers are often willing to spend more due to funding specific to the wave (new budgets, grants, etc)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the customer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The customer gets a more specific product&lt;/li&gt;
  &lt;li&gt;The customer gets the benefit of at least some wave specific features&lt;/li&gt;
  &lt;li&gt;The customer gets the benefit of a company focusing very specifically on their needs&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 17 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/marketing/2017/08/17/marketing-101-ride-the-wave-if-you-can.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/marketing/2017/08/17/marketing-101-ride-the-wave-if-you-can.html</guid>
        
        <category>marketing101</category>
        
        <category>marketing</category>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>10 Steps to Debugging Containerized Applications</title>
        <description>&lt;p&gt;I've recently been building a new product using Rails based on an approach that I call &lt;em&gt;Breaking the Monolith&lt;/em&gt;.  Rather than build a traditional Rails monolith, I use multiple microservices / small Rails applications and deploy them all with Docker into a distributed system.  The hardest part about distributed systems is always &lt;strong&gt;debugging&lt;/strong&gt; and I've written this guide as a step by step approach for how to go from a misbehaving application right down to a malfunctioning container – this is the actual process that I follow.&lt;/p&gt;

&lt;p&gt;All of this is being done on Ubuntu under AWS but the debugging process applies to any *nix type environment or Platform as a Service (PAAS).&lt;/p&gt;

&lt;h1 id=&quot;disclaimer-but-you-dont-ssh-into-containers&quot;&gt;Disclaimer: But You Don't SSH into Containers…&lt;/h1&gt;

&lt;p&gt;A lot of the examples below are based around SSH'ing into a server and diagnosing the error in context.  I've seen a lot of things since the advent of containers that seemingly want you to believe, that in this brave new world, you just don't SSH in anymore.  Now, perhaps I am doing things wrong, but I have not found that to be the case at all.  It may be that once I am out of active development that I will no longer be SSH'ing into servers but, for now, SSH is still a dear old friend.&lt;/p&gt;

&lt;h1 id=&quot;failure-context---504-gateway-error&quot;&gt;01: Failure Context - 504 Gateway Error&lt;/h1&gt;

&lt;p&gt;The general system for a failure on this application seems to be a 504 Gateway Error which basically means that the application load balancer (ALB) isn't receiving output back from one of the HTTP subsystems.&lt;/p&gt;

&lt;h1 id=&quot;check-the-url-in-development-after-a-server-restart&quot;&gt;02.  Check the Url in Development after a Server Restart&lt;/h1&gt;

&lt;p&gt;Every single time you do a deploy with Docker, your entire Gem stack along with any initializers is rebuilt and that means that a stack level change that you made in development but failed to catch can break everything.  So the first diagnosis step is to stop the development server and make sure that things come back up correctly.  Each of my applications runs on a different port so I can't give a single example here – do the ctrl+c on Puma and then restart it and check the status.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you don't have a simple health check for your application then I would strongly recommend it.  Here's a &lt;a href=&quot;https://gist.github.com/fuzzygroup/7dec79f94deac117ce591598243f596a&quot;&gt;simple gist showing a /health url&lt;/a&gt; for a Rails application.&lt;/p&gt;

&lt;p&gt;If your Rails app is running on say port 3200 then you can just do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://localhost:3200/health
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and you should see:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;test-the-health-check-logged-into-the-server&quot;&gt;03: Test the Health Check Logged into the Server&lt;/h1&gt;

&lt;p&gt;Once you've verified that things are correct in development, the next step is to log into the server and run the same curl test on the server where the failure is occurring.  In order to make this type of debugging extremely simple for me, I run all my applications server side on exactly the same port structure that I do in development.  Even http services like the main web site run on their development port since I can let the load balancer handle translation back to 80.  Having a deployment environment that mirrors development is a huge conceptual boon. Assuming our same 3200 port example, we would:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://localhost:3200/health
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and you should see:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the failure is happening solely within the same subsystem then this usually is sufficient to reveal the problem.&lt;/p&gt;

&lt;h1 id=&quot;check-the-application-docker-logs&quot;&gt;04: Check the Application Docker Logs&lt;/h1&gt;

&lt;p&gt;The next step is the application level Docker logs.  My deployer engine, Dockerano, generates a per application shell script which generates logs for the &quot;main&quot; container called dshell so I see something like this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./dlogs

web_1        | 2017-08-11T21:51:59.474344180Z /app/config/initializers/constants_global.rb:6: warning: previous definition of REAL_SKYPE was here
web_1        | 2017-08-11T21:51:59.474348492Z /app/config/initializers/constants_system.rb:6: warning: already initialized constant STATUS_OK
web_1        | 2017-08-11T21:51:59.474352887Z /app/config/initializers/constants_global.rb:7: warning: previous definition of STATUS_OK was here
web_1        | 2017-08-11T21:51:59.474356555Z /app/config/initializers/constants_system.rb:7: warning: already initialized constant HYDE_API_KEY
web_1        | 2017-08-11T21:51:59.474360577Z /app/config/initializers/constants_global.rb:8: warning: previous definition of HYDE_API_KEY was here
web_1        | 2017-08-11T21:51:59.783745567Z /app/config/initializers/seira_servers.rb:1: warning: already initialized constant HYDE_API_KEY
web_1        | 2017-08-11T21:51:59.783780705Z /app/config/initializers/constants_system.rb:7: warning: previous definition of HYDE_API_KEY was here
web_1        | 2017-08-11T21:52:00.421398929Z /app/app/controllers/home_controller.rb:124: warning: key :course is duplicated and overwritten on line 129
web_1        | 2017-08-11T21:52:00.421438372Z /app/app/controllers/home_controller.rb:147: warning: key :course is duplicated and overwritten on line 153
web_1        | 2017-08-11T21:52:01.118340090Z * Listening on tcp://0.0.0.0:3210
web_1        | 2017-08-11T21:52:01.118720653Z Use Ctrl-C to stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this is doing under the hood is a simple:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
docker-compose -f docker-compose.production.yml logs -f -t web
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;check-the-free-disc-space&quot;&gt;05: Check the Free Disc Space&lt;/h1&gt;

&lt;p&gt;As with anything, ever, resource consumption can always be an issue and our normal OS tools include df:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            3.9G     0  3.9G 0% /dev
tmpfs           799M   83M  716M11% /run
/dev/xvda1       16G  7.0G  8.5G46% /
tmpfs           3.9G  7.0M  3.9G 1% /dev/shm
tmpfs           5.0M     0  5.0M 0% /run/lock
tmpfs           3.9G     0  3.9G 0% /sys/fs/cgroup
tmpfs           799M     0  799M 0% /run/user/1000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I spent a lot of time on this project trying desperately to use T2.micro instances because, well, they're cheap and, at best, it was a false economy.  Severe bloat within the Docker AUFS filesystem found me continually running out of disc space after multiple deploys even though my containers were actually tiny.  This is a &lt;a href=&quot;https://github.com/moby/moby/issues/22207&quot;&gt;known Docker Moby issue&lt;/a&gt; that has been open for over a year and a half now and is still &lt;strong&gt;unassigned&lt;/strong&gt; to anyone.&lt;/p&gt;

&lt;p&gt;In order to avoid this bug, I ended up moving from multiple T2.micro instances to a single m4.large instance and then doubling the underlying storage from 8 gigs to 16.  And, when I did that, a lot of my issues just magically disappeared.  Being cheap truly was a false economy here because I ended up with fewer instances and not only did my reliability go up but my bill went down.&lt;/p&gt;

&lt;h1 id=&quot;check-the-cpu-usage-and-ram-usage&quot;&gt;06: Check the CPU Usage and Ram Usage&lt;/h1&gt;

&lt;p&gt;If you don't have htop installed on all your instances then you really, really should.  htop kicks the absolute snot out of classic top.  Install it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install htop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then invoke it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;htop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point you can easily see the underlying machine load, etc.&lt;/p&gt;

&lt;h1 id=&quot;look-at-individual-container-status&quot;&gt;07: Look at Individual Container Status&lt;/h1&gt;

&lt;p&gt;If you're having an issue with a given application then you want to look at all the containers for that application.  The easiest way is to grep by name.  Let's say that your underlying application is called seirawatchwebapp:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep seirawatchwebapp
23c1b98a2add        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec clock...&quot;   11 hours ago        Restarting (10) 9 seconds ago                              seirawatchwebapp_clockwork_1
6eb89122ee73        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec sidek...&quot;   11 hours ago        Up 11 hours                                                seirawatchwebapp_sidekiq_1
36f49f07273f        fuzzygroup/seirawatchwebapp_web   &quot;/bin/sh -c 'puma ...&quot;   11 hours ago        Up 11 hours                     0.0.0.0:3210-&amp;gt;3210/tcp     seirawatchwebapp_web_1
49d72363de84        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   11 hours ago        Up 11 hours                     0.0.0.0:32820-&amp;gt;6379/tcp    seirawatchwebapp_redis_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The thing to be concerned about here is 23c1b98a2add and the reason is that it generally shouldn't be continuously restarting which is what this view shows.&lt;/p&gt;

&lt;h1 id=&quot;application-level-logs---timberio&quot;&gt;08: Application Level logs - Timber.io&lt;/h1&gt;

&lt;p&gt;I've recently started using &lt;a href=&quot;https://www.timber.io&quot;&gt;Timber.io&lt;/a&gt; which is a cross application logging environment and I've been very, very happy with it.  If you haven't looked at Timber.io for your Rails development, I'd recommend it.  Even the free tier is actually quite useful.&lt;/p&gt;

&lt;p&gt;Timber.io is a full web app rather than a command line tool so you need to log into the Timber service and then select your application where you want to view the logs.&lt;/p&gt;

&lt;h1 id=&quot;check-your-error-logger&quot;&gt;09: Check Your Error Logger&lt;/h1&gt;

&lt;p&gt;If you aren't running a dedicated error tracker, whether HoneyBadger, BugSnag or Errbit, you really, really should.&lt;/p&gt;

&lt;h1 id=&quot;the-answer-check-all-your-containers&quot;&gt;10: The Answer: Check All Your Containers&lt;/h1&gt;

&lt;p&gt;What I'm building is a multi-container system, a distributed system in truth, with formal APIs between each of the components and what this means is that a container failure in subsystem X can affect subsystem Y or subsystem Z without it being clear as to why.  The trouble with this type of debugging is getting a high enough level view to understand it as a whole.&lt;/p&gt;

&lt;p&gt;The easiest way to do this on a single machine is to use the &lt;strong&gt;docker stats&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stats

CONTAINER           CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
b17d34bf7268        0.01%               207.6MiB / 7.795GiB   2.60%               1.1MB / 1.53MB      20.5kB / 7.68MB     23
5c5460a763b1        0.00%               210.4MiB / 7.795GiB   2.64%               3.62MB / 900kB      1.18MB / 0B         4
ec28ede65792        0.06%               133.4MiB / 7.795GiB   1.67%               12.9MB / 16.9MB     0B / 0B             9
bb5839c2a6a7        0.00%               130.9MiB / 7.795GiB   1.64%               1.13MB / 1.61MB     86kB / 16.6MB       13
5e78dbc9489e        0.09%               6.215MiB / 7.795GiB   0.08%               16.9MB / 12.9MB     69.6kB / 434kB      3
2d5b14feb009        0.03%               119.3MiB / 7.795GiB   1.49%               8.48MB / 15.4MB     0B / 0B             7
13d42ed0ba35        0.01%               120.7MiB / 7.795GiB   1.51%               2.51MB / 3.88MB     401kB / 37.7MB      12
3fbd80153022        0.08%               6.219MiB / 7.795GiB   0.08%               15.4MB / 8.46MB     24.6kB / 434kB      3
c520fc5504f1        --                  -- / --               --                  --                  --                  --
26ee413fab7f        0.01%               116.2MiB / 7.795GiB   1.46%               1.23MB / 1.62MB     77.8kB / 16.7MB     11
1ab35bf6514c        0.07%               6.219MiB / 7.795GiB   0.08%               85.3kB / 0B         127kB / 0B          3
ac1462fccc60        0.00%               106.1MiB / 7.795GiB   1.33%               1.14MB / 1.37MB     172kB / 7.92MB      10
422787e2d5ab        0.12%               16.15MiB / 7.795GiB   0.20%               75.9MB / 52MB       754kB / 425MB       3
b19bb9629925        0.00%               235.6MiB / 7.795GiB   2.95%               93.4MB / 116MB      508kB / 8.19kB      3
79f484ac7c89        0.18%               388MiB / 7.795GiB     4.86%               6.35GB / 25.4GB     5.24MB / 12.3kB     15
e34789eed4cc        0.00%               108.5MiB / 7.795GiB   1.36%               22.2kB / 17.7kB     0B / 0B             4
6f0cd03996a3        0.12%               116.4MiB / 7.795GiB   1.46%               6.33MB / 13MB       45.1kB / 0B         6
4d8486ff6046        0.23%               344.9MiB / 7.795GiB   4.32%               1.17MB / 1.69MB     1.16MB / 16.7MB     28
4d978af45ff2        0.16%               6.219MiB / 7.795GiB   0.08%               13MB / 6.34MB       102kB / 442kB       3
533d96fc2ce1        0.24%               120.7MiB / 7.795GiB   1.51%               9.18MB / 16.7MB     258kB / 0B          6
6b60a945bff7        0.01%               188.3MiB / 7.795GiB   2.36%               14.5MB / 4.69MB     2.03MB / 0B         10
9c2e8ec55a06        0.10%               6.215MiB / 7.795GiB   0.08%               16.7MB / 9.17MB     369kB / 475kB       3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The curious thing here is that one container, c520fc5504f1, is showing – for CPU % and all other metrics.  Let's zoom in on that one.  Personally I find the view above to be more granular than needed and missing the application specific details that I need so my deployer generates a dstats shell script which does this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./dstats 
CONTAINER                      CPU %               MEM USAGE / LIMIT     CONTAINER ID
seirawatchshop_sidekiq_1       --                  -- / --               c520fc5504f1321d44078ea3df8a2f1ffc9147d0cb117564e913596eda76db32
seirawatchshop_web_1           0.01%               91.61MiB / 7.795GiB   cc24d6bcc576cc1ce0c7d04ba8af6b51a1b7599fbbfdcf0c1cb98bd1553e1224
seirawatchshop_redis_1         0.09%               6.215MiB / 7.795GiB   796829845da6dd5f5f63b7449ce3c95581e386e691626344b5b59010b088311d
seirasearch_web_1              0.47%               207.6MiB / 7.795GiB   b17d34bf72689e75f6332f387f964e1e3f2803c3cf544d3bb7de6d7b501c2a38
seirawatchwebapp_clockwork_1   0.01%               210.4MiB / 7.795GiB   5c5460a763b11f4347a0dc806cc7ff5b1314220a9d93ed55f729d4853c1d094f
seirawatchwebapp_sidekiq_1     0.32%               133.4MiB / 7.795GiB   ec28ede65792d435c7b3042909925a17c79182e820dfa16964be151b07241c07
seirawatchwebapp_web_1         0.00%               131MiB / 7.795GiB     bb5839c2a6a7e87e694baa84d1f7b102c54aebde6991203da14836fa60006742
seirawatchwebapp_redis_1       0.14%               6.215MiB / 7.795GiB   5e78dbc9489ecd3b050715b0aa1fe002cebb4636a858e17f93da56f5736aae2d
seirawatchsite_sidekiq_1       0.10%               119.3MiB / 7.795GiB   2d5b14feb009aa4eaf72cde6969bb271a6c81d6cd196a9648a5c64184ffab242
seirawatchsite_web_1           0.02%               121.1MiB / 7.795GiB   13d42ed0ba35bd56ffa0977fde429759f4713ec8e58ae0715e273d040a7a276c
seirawatchsite_redis_1         0.10%               6.219MiB / 7.795GiB   3fbd801530227940730abe8197b24d3e24d52edf9bdfb4145d30e3ae40399418
seirawebappapi_web_1           0.00%               106.1MiB / 7.795GiB   ac1462fccc60a569d86ce0a0b7939a66af42ae07328a261265d90bcc6928c372
seiracrawler_redis_1           0.15%               16.15MiB / 7.795GiB   422787e2d5ab64647fd67a0c9c25af2a8ecdbb7ce3ab0a6bc7ca16ededb5a93b
seiracrawler_rake_1            0.01%               236.5MiB / 7.795GiB   b19bb96299253434c9ea94f4e1c9640b255e5f359c3af7060acd49a6070ffc01
seiracrawler_sidekiq_1         0.14%               400MiB / 7.795GiB     79f484ac7c8958742dc744da0404652ff100a9e299080014a4d64b5b78ea000c
seiraadmin_clockwork_1         0.01%               108.5MiB / 7.795GiB   e34789eed4cc4a6bf7173ef3f278033799272e116f3f670ceb0754b521065b0d
seiraadmin_sidekiq_1           0.08%               116.4MiB / 7.795GiB   6f0cd03996a3414ee7bc0c3fb76adb542d06e3c1c0f7fa1fe108f156a9d9ac0f
seiraadmin_web_1               0.25%               121.3MiB / 7.795GiB   4d8486ff604656515f0e0e433b99486cf91131ce4a93b82701aa42ef77015155
seiraadmin_redis_1             0.11%               6.219MiB / 7.795GiB   4d978af45ff2db55c08212e404264422a39f4ee4fa4b6656b149a37df65bf147
shouldigem_sidekiq_1           0.06%               120.7MiB / 7.795GiB   533d96fc2ce1fb492faa477dfd171e370a30c107becce00e5a52d56bfe3b2622
shouldigem_web_1               0.10%               187.1MiB / 7.795GiB   6b60a945bff74748f3c447ff7b57f75ef12518758c79e75bd587d59531771f3e
shouldigem_redis_1             0.09%               6.215MiB / 7.795GiB   9c2e8ec55a066d382d0ee0ceadfb3e061196127f6b334e16b73e43551ee4f435
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note 1: Source for dstats is &lt;a href=&quot;https://gist.github.com/fuzzygroup/b4293b4a7d15a9d8ea88a50ddb2ab3f0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note 2: If you're curious about how to configure the output of docker stats then see &lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/stats/#formatting&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I then docker ps and grep either with the name or the process id, I will see the same container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep seirawatchshop_sidekiq_1
631359e0cec8        fuzzygroup/seirawatchshop_web     &quot;bundle exec sidek...&quot;   10 hours ago        Restarting (1) 46 seconds ago                             seirawatchshop_sidekiq_1

docker ps | grep 631359e0cec8
631359e0cec8        fuzzygroup/seirawatchshop_web     &quot;bundle exec sidek...&quot;   9 hours ago         Restarting (1) 26 seconds ago                             seirawatchshop_sidekiq_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once we have this then we can get just the logs on this one container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker logs 631359e0cec8

Error connecting to Redis on 127.0.0.1:6379 (Errno::ECONNREFUSED)
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:345:in `rescue in establish_connection'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:331:in `establish_connection'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:101:in `block in connect'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:293:in `with_reconnect'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:100:in `connect'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:364:in `ensure_connected'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:221:in `block in process'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:306:in `logging'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:220:in `process'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:120:in `call'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:251:in `block in info'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:58:in `block in synchronize'
/usr/local/lib/ruby/2.3.0/monitor.rb:214:in `mon_synchronize'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:58:in `synchronize'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:250:in `info'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:113:in `block in redis_info'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:95:in `block in redis'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:64:in `block (2 levels) in with'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:63:in `handle_interrupt'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:63:in `block in with'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:60:in `handle_interrupt'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:60:in `with'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:92:in `redis'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:106:in `redis_info'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq/cli.rb:71:in `run'
/usr/local/bundle/gems/sidekiq-4.2.7/bin/sidekiq:12:in `&amp;lt;top (required)&amp;gt;'
/usr/local/bundle/bin/sidekiq:22:in `load'
/usr/local/bundle/bin/sidekiq:22:in `&amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So what's going on here is clearly at the Sidekiq stack layer and it is some type of connection to the underlying containerized Redis instance.  Once we know that, troubleshooting this should actually be pretty simple; it eventually turned out to be a missing pair of files - config/sidekiq.yml.erb and config/initializers/sidekiq.rb that had been overlooked in my initial configuration.&lt;/p&gt;

&lt;p&gt;Just as a sidebar, a docker ps -a is also sometimes useful:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps -a
CONTAINER ID        IMAGE                             COMMAND                  CREATED             STATUS                          PORTS       NAMES
b17d34bf7268        fuzzygroup/seirasearch_web        &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3230-&amp;gt;3230/tcp    seirasearch_web_1
5c5460a763b1        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec clock...&quot;   9 hours ago         Up 9 hours       seirawatchwebapp_clockwork_1
ec28ede65792        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seirawatchwebapp_sidekiq_1
bb5839c2a6a7        fuzzygroup/seirawatchwebapp_web   &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3210-&amp;gt;3210/tcp    seirawatchwebapp_web_1
5e78dbc9489e        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32779-&amp;gt;6379/tcp   seirawatchwebapp_redis_1
2d5b14feb009        fuzzygroup/seirawatchsite_web     &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seirawatchsite_sidekiq_1
13d42ed0ba35        fuzzygroup/seirawatchsite_web     &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3200-&amp;gt;3200/tcp    seirawatchsite_web_1
3fbd80153022        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32777-&amp;gt;6379/tcp   seirawatchsite_redis_1
631359e0cec8        fuzzygroup/seirawatchshop_web     &quot;bundle exec sidek...&quot;   9 hours ago         Restarting (1) 58 seconds ago       seirawatchshop_sidekiq_1
26ee413fab7f        fuzzygroup/seirawatchshop_web     &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3205-&amp;gt;3205/tcp    seirawatchshop_web_1
1ab35bf6514c        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32775-&amp;gt;6379/tcp   seirawatchshop_redis_1
ac1462fccc60        fuzzygroup/seirawebappapi_web     &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3220-&amp;gt;3220/tcp    seirawebappapi_web_1
422787e2d5ab        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32774-&amp;gt;6379/tcp   seiracrawler_redis_1
b19bb9629925        fuzzygroup/seiracrawler_rake      &quot;bundle exec clock...&quot;   9 hours ago         Up 9 hours       seiracrawler_rake_1
79f484ac7c89        fuzzygroup/seiracrawler_rake      &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seiracrawler_sidekiq_1
e34789eed4cc        fuzzygroup/seiraadmin_web         &quot;bundle exec clock...&quot;   9 hours ago         Up 9 hours       seiraadmin_clockwork_1
6f0cd03996a3        fuzzygroup/seiraadmin_web         &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seiraadmin_sidekiq_1
4d8486ff6046        fuzzygroup/seiraadmin_web         &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3203-&amp;gt;3203/tcp    seiraadmin_web_1
4d978af45ff2        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32773-&amp;gt;6379/tcp   seiraadmin_redis_1
533d96fc2ce1        fuzzygroup/shouldigem_web         &quot;bundle exec sidek...&quot;   10 hours ago        Up 10 hours       shouldigem_sidekiq_1
6b60a945bff7        fuzzygroup/shouldigem_web         &quot;/bin/sh -c 'puma ...&quot;   10 hours ago        Up 10 hours                     0.0.0.0:3500-&amp;gt;3500/tcp    shouldigem_web_1
9c2e8ec55a06        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   10 hours ago        Up 10 hours                     0.0.0.0:32770-&amp;gt;6379/tcp   shouldigem_redis_1
6c2b013947d1        google/cadvisor:latest            &quot;/usr/bin/cadvisor...&quot;   11 hours ago        Exited (137) 11 hours ago       cadvisor2
34e1edbad906        google/cadvisor:latest            &quot;/usr/bin/cadvisor...&quot;   11 hours ago        Created       cadvisor1
8478172d0f2b        google/cadvisor:latest            &quot;/usr/bin/cadvisor...&quot;   11 hours ago        Exited (137) 11 hours ago       cadvisor
5b5c1709c1af        errbit/errbit:latest              &quot;bundle exec puma ...&quot;   3 days ago          Exited (0) 10 hours ago       errbit_errbit_1
ac91a943e789        mongo:3.2                         &quot;docker-entrypoint...&quot;   3 days ago          Exited (0) 10 hours ago       errbit_mongo_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;go-nuclear---restart-the-docker-daemon&quot;&gt;11: Go Nuclear - Restart the Docker Daemon&lt;/h1&gt;

&lt;p&gt;The absolute nuclear approach here is to simply restart the &lt;a href=&quot;https://docs.docker.com/engine/admin/&quot;&gt;docker daemon&lt;/a&gt; itself.  On Ubuntu, this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service docker restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I'm not going to go so far as to say that you don't have to, rarely, restart the docker daemon but it is just that – &lt;strong&gt;rare&lt;/strong&gt;.  Your problems are far, far, far more likely to be application side errors, even when it looks like Docker is at fault.  I've mistakenly pointed the finger at Docker too many times – and I was &lt;strong&gt;wrong&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;pitch-for-a-friend-learn-from-nick&quot;&gt;Pitch for a Friend: Learn from Nick&lt;/h1&gt;

&lt;p&gt;All my Docker knowledge came from Nick Janetakis’ &lt;a href=&quot;https://diveintodocker.com/&quot;&gt;Dive into Docker&lt;/a&gt; course and he does a great job teaching about Docker. He also kibitzed with me on this debugging process although he never saw the final draft before it went live.  Any errors are mine not his.  Strongly recommended.&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/08/15/10-steps-to-debugging-containerized-rails-applications.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/08/15/10-steps-to-debugging-containerized-rails-applications.html</guid>
        
        <category>docker</category>
        
        <category>debugging</category>
        
        <category>rails</category>
        
        <category>monolith</category>
        
        <category>aws</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Fundamental Usability Problems with Medium</title>
        <description>&lt;p&gt;Yesterday I was at the movies with my son and during the endless roll of trailers, promos and advertisements, I was terribly, terribly bored so I dropped into the Medium app and saw something that I &lt;strong&gt;knew&lt;/strong&gt; I wanted to read in more depth so I hearted it (by hearted I mean I clicked on the heart icon on the toolbar and watched it change color).  I figured that would be enough to find it later.  I also remembered a little bit about it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;author: james altschuler&lt;/li&gt;
  &lt;li&gt;keywords: hedge fund marriage thestreet.com&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just to cut to the chase, here's the &lt;a href=&quot;https://medium.com/the-mission/step-by-step-guide-to-make-10-million-and-then-totally-blow-it-a9283b6de90c&quot;&gt;exact article&lt;/a&gt; but the process by which I found something that I had:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;already read&lt;/li&gt;
  &lt;li&gt;that I had hearted as a favorite&lt;/li&gt;
  &lt;li&gt;that I knew had certain keywords&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;was an absolute usability failure and one that I just don't understand.&lt;/p&gt;

&lt;h1 id=&quot;usability-failure-1---where-are-my-hearted-things&quot;&gt;Usability Failure #1 - Where Are My Hearted Things?&lt;/h1&gt;

&lt;p&gt;The next day I went to Medium in my laptop's browser and signed in and I &lt;strong&gt;could not&lt;/strong&gt; find the things I liked.  So I looked again, nope.  My next thought was ok maybe these are just stored in the Medium app on my phone – nope I couldn't find anything there either.  This led me back to my laptop's browser where I finally googled it and found a &lt;a href=&quot;https://www.quora.com/How-do-I-find-a-list-of-all-the-articles-I-recommended-on-Medium&quot;&gt;Quora post&lt;/a&gt; that talked about it but their solution was no longer part of the Medium user interface.  They also pointed out that you could goto http://medium.com/@user/has-recommended and find your posts.  I typed in the correct url for me: &lt;a href=&quot;http://medium.com/@fuzzygroup/has-recommended&quot;&gt;http://medium.com/@fuzzygroup/has-recommended&lt;/a&gt; and that actually did work but the question remains:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Medium has serious founders, serious money, serious talent – how can this be a problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I never did find a way to get back to my hearted items on my phone.&lt;/p&gt;

&lt;h1 id=&quot;usability-failure-2---search&quot;&gt;Usability Failure #2 - Search&lt;/h1&gt;

&lt;p&gt;When I couldn't find the article I &lt;strong&gt;knew&lt;/strong&gt; was there, I turned to search as the next obvious way to find it.  Here was my process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;So I started with a search for &lt;a href=&quot;https://medium.com/search?q=james%20altschuler&quot;&gt;james altschuler&lt;/a&gt; and that gave zero hits.&lt;/li&gt;
  &lt;li&gt;Then I continued with a search for &lt;a href=&quot;https://medium.com/search?q=thestreet.com&quot;&gt;thestreet.com&lt;/a&gt; and that gave me hits but not the article I knew I had read.  Now I have no problem with a spelling error on altschuler but &quot;thestreet.com&quot; – &lt;strong&gt;nope&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;I then proceeded to search for &lt;a href=&quot;https://medium.com/search?q=hedge%20fund&quot;&gt;hedge fund&lt;/a&gt; and again the article that I wanted wasn't there.&lt;/li&gt;
  &lt;li&gt;Ok I'll accept that there are lots and lots of articles about hedge funds but how many &lt;a href=&quot;https://medium.com/search?q=hedge%20fund%20marriage&quot;&gt;hedge fund articles talk about the collapse of his marriage&lt;/a&gt; - that must work, right?  Nope.  That three word query brings back just a &lt;a href=&quot;https://medium.com/thinkprogress/hedge-fund-manager-runs-anti-gay-attack-ad-against-liz-cheney-2e851c82b758&quot;&gt;single article&lt;/a&gt;.  Interestingly Google finds &lt;a href=&quot;https://www.google.com/search?biw=1313&amp;amp;bih=646&amp;amp;q=site%3Amedium.com+%22hedge+fund%22+%22marriage%22&amp;amp;oq=site%3Amedium.com+%22hedge+fund%22+%22marriage%22&amp;amp;gs_l=psy-ab.3...34964.39387.0.39831.4.4.0.0.0.0.62.207.4.4.0....0...1.1.64.psy-ab..0.0.0.FNpHjvAPKsM&quot;&gt;360 things&lt;/a&gt; on medium that contain hedge fund and marriage and the post I was looking for was on the second page.  I ran the google search with &quot;hedge fund&quot; and &quot;marriage&quot; to force all the terms to be in there as well as to treat &quot;hedge fund&quot; as a string.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;how-did-i-finally-find-it&quot;&gt;How Did I Finally Find It?&lt;/h1&gt;

&lt;p&gt;I finally ended up giving up on Medium's user interface and its search engine and using my incorrect version of the author's name and &lt;a href=&quot;https://www.google.com/search?q=site%3Amedium.com%20james%20altschuler&quot;&gt;Google found the right author as the very first result&lt;/a&gt;.  I then scrolled down and found &lt;a href=&quot;https://medium.com/the-mission/step-by-step-guide-to-make-10-million-and-then-totally-blow-it-a9283b6de90c&quot;&gt;the article&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;By any Silicon Valley standards, Medium is a real thing:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Medium_(website)&quot;&gt;5 years old&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Incredible Founder - Blogger and Twitter were Ev's prior companies&lt;/li&gt;
  &lt;li&gt;Huge $$$ - More than &lt;a href=&quot;https://techcrunch.com/2016/04/21/medium-series-c/&quot;&gt;$107 Million&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Has north of &lt;a href=&quot;https://www.quora.com/How-many-employees-does-Medium-have-What-do-they-do&quot;&gt;167 employees&lt;/a&gt; as of November 2015&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is very, very hard for me to understand this level of usability failure at a company with these type of metrics.  I can, perhaps, excuse the user interface to hearted items as being a redesign where something got lost in the shuffle.  But the search failure is deeply, deeply troubling.  If you're in the content business then search is a &lt;strong&gt;requirement&lt;/strong&gt; not an option and a search algorithm that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;deals with misspellings&lt;/li&gt;
  &lt;li&gt;takes into account user input such as hearts / likes&lt;/li&gt;
  &lt;li&gt;actually finds the damn keywords the user puts in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;should not be a problem in 2017.  I'm spent my career in search in retrieval and we were solving these types of issue back in the early 90s if not sooner.  I just can't fathom exactly what Medium is doing but they would likely be better served at this point by just embedding google instead of whatever search tool they've&lt;/p&gt;

&lt;h1 id=&quot;obligatory-advertisement-for-myself&quot;&gt;Obligatory Advertisement for Myself&lt;/h1&gt;

&lt;p&gt;If you have search and retrieval needs, I've spent a long time working on these kinds of issues and I'm always happy to talk to potential clients.  My contact details are on &lt;a href=&quot;http://fuzzyblog.io/blog/resume.html&quot;&gt;my resume&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/medium/2017/08/14/the-problem-with-medium.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/medium/2017/08/14/the-problem-with-medium.html</guid>
        
        <category>medium</category>
        
        <category>blogging</category>
        
        
        <category>medium</category>
        
      </item>
    
      <item>
        <title>When Font Awesome Won't Render in Production on Rails 5.x</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://fontawesome.io/&quot;&gt;Font Awesome&lt;/a&gt; is one of those staggeringly good open source projects that you don't realize just how good it is until you use it – and then it goes away.  The degree of &lt;em&gt;polish&lt;/em&gt; and &lt;em&gt;finish&lt;/em&gt; that an easy to use, inline icon adds to a project honestly just astounds me.  That's why, when I moved some code to production recently, and Font Awesome failed to render, well, I was &lt;strong&gt;beyond frustrated&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My current production platform is Rails 5.x and this is how I got past that particular hellish little bit of the Rails asset pipeline.  The context is that I've been developing with Font Awesome for over 8 months now and I even spent the $$$ to back their &lt;a href=&quot;https://www.kickstarter.com/projects/232193852/font-awesome-5/comments&quot;&gt;KickStarter&lt;/a&gt; since Font Awesome is just that, well, &lt;strong&gt;awesome&lt;/strong&gt; and I've been viewing their icons daily for 8 months – until I deployed at which point they vanished.&lt;/p&gt;

&lt;p&gt;On digging into this problem, I found a lot of discussion and suggestions in the &lt;a href=&quot;https://stackoverflow.com/questions/17904949/rails-app-not-serving-assets-in-production-environment&quot;&gt;normal &lt;/a&gt; &lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/issues/5559&quot;&gt;places&lt;/a&gt; but I never found this solution.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Diagnose the problem by looking at the Chrome JavaScript console and seeing if you get a 404 error related to missing font files such as &lt;em&gt;fontawesome-webfont.woff2&lt;/em&gt;.  That's the issue that this solution tackles.&lt;/li&gt;
  &lt;li&gt;Use the font-awesome-rails gem in Gemfile: &lt;strong&gt;gem &quot;font-awesome-rails&quot;&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In your application.css.scss file you should have an import directive at or near the top like @import &quot;font-awesome&quot;;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In config/environments/production.rb, you need a series of asset compilation directives like these:&lt;/p&gt;

    &lt;p&gt;# Do not fallback to assets pipeline if a precompiled asset is missed.
 config.assets.compile = false
 # font_awesome additions
 config.serve_static_assets = true
 config.assets.compress = true
 config.assets.compile = true
 config.assets.digest = true&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;before-and-after&quot;&gt;Before and After&lt;/h1&gt;

&lt;p&gt;Here's the obligatory before and after screenshots:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/font_awesome_broken.png&quot; alt=&quot;font_awesome_broken.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/font_awesome_working.png&quot; alt=&quot;font_awesome_broken.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The working screenshot has slightly different data in it since this was written over a series of days while this issue was researched.&lt;/p&gt;

&lt;h1 id=&quot;honest-disclaimer&quot;&gt;Honest Disclaimer&lt;/h1&gt;

&lt;p&gt;I've now been using Rails since 2007 and Ruby since 2006 (and HTML since 93) which means that I so thoroughly precede the asset pipeline that it honestly makes me laugh.  In all honesty, I really don't understand the asset pipeline particularly well so if this advice is technically wrong, I &lt;strong&gt;apologize&lt;/strong&gt;.  What I can tell you is that this advice took a Rails 5 system where Font Awesome worked in development but failed in production and made it work in production – but when you don't understand the low level details, well, it makes you &lt;em&gt;uncomfortable&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/08/12/when-font-awesome-won-t-render-in-production-on-rails-5-x.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/08/12/when-font-awesome-won-t-render-in-production-on-rails-5-x.html</guid>
        
        <category>rails</category>
        
        <category>font_awesome</category>
        
        <category>asset_pipeline</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Using Errbit To Host Your own Error Tracker on AWS for Rails Apps</title>
        <description>&lt;p&gt;In this tutorial, I walk you through using &lt;a href=&quot;https://github.com/errbit/errbit&quot;&gt;the Errbit project&lt;/a&gt;, an open source error tracker to host your own error tracker.  Errbit is a competitor to &lt;a href=&quot;http://www.honeybadger.io&quot;&gt;HoneyBadger&lt;/a&gt;, &lt;a href=&quot;http://www.bugsnagcom/&quot;&gt;BugSnag&lt;/a&gt;, &lt;a href=&quot;http://www.airbrake.io&quot;&gt;AirBrake&lt;/a&gt; and other similar hosted error tracking tools that generally cost $29 to $49 / month or more.  Using Errbit means you only pay for infrastructure capacity and end up with a solution you can maintain yourself.&lt;/p&gt;

&lt;p&gt;I've written about HoneyBadger &lt;a href=&quot;http://fuzzyblog.io/blog/containers/2016/08/26/in-the-world-of-containers-honeybadger-will-reign-supreme-bye-bye-airbrake.html&quot;&gt;previously&lt;/a&gt; and it really is an excellent, excellent tool but I'm cheap and I wanted to experiment with an open source project that I've known about for years and never had the opportunity.  Although Errbit really is excellent, I found the getting started documentation lacking hence this post.&lt;/p&gt;

&lt;p&gt;I initially tried to get this running on Heroku but that resulted in what I termed &lt;a href=&quot;http://fuzzyblog.io/blog/fail/2017/08/08/utter-and-complete-heroku-fail.html&quot;&gt;Heroku Fail&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;step-1-getting-it-running-locally-using-docker&quot;&gt;Step 1: Getting it Running Locally Using Docker&lt;/h1&gt;

&lt;p&gt;Errbit is a modern Rails app and it requires:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rails&lt;/li&gt;
  &lt;li&gt;Mongo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The easiest way to get this running locally is to just pull down the docker-compose.yml file from the github repo and use docker-compose to run it.  If you don't have Docker installed then you need to &lt;a href=&quot;http://www.docker.com/&quot;&gt;install it now&lt;/a&gt; for development and on your server for production use.  After that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir errbit
cd errbit
wget https://github.com/errbit/errbit/blob/master/docker-compose.yml
docker-compose up 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once that is running, in a separate terminal window you need to bootstrap the installation and generate an admin user.  Do that with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; docker-compose exec errbit bundle exec rake errbit:bootstrap
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The default errbit port is 8080 and you can access it by going to http://localhost:8080 where you can use the credentials you generated by bootstrapping it to log in.&lt;/p&gt;

&lt;p&gt;Once you've logged in, you need to add your app by clicking on the Add a new App button and then setting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;app name&lt;/li&gt;
  &lt;li&gt;github repo&lt;/li&gt;
  &lt;li&gt;issue tracker&lt;/li&gt;
  &lt;li&gt;notification service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this is done, Errbit will generate you instructions for what to add to your Gemfile and what to configure in the errbit.rb initializer.  Generally this looks something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Require the airbrake gem in your App.
# ---------------------------------------------
#
# Ruby - In your Gemfile
# gem 'airbrake', '~&amp;gt; 5.0'
#
# Then add the following to config/initializers/errbit.rb
# -------------------------------------------------------

Airbrake.configure do |config|
  config.host = 'http://localhost:8080'
  config.project_id = 1 # required, but any positive integer works
  config.project_key = '2020e526a09c78462f0f9d45010efc6c'

  # Uncomment for Rails apps
  # config.environment = Rails.env
  # config.ignore_environments = %w(development test)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you want to test Errbit's integration then you can use this rake task:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake airbrake:test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once you've confirmed that this works, you can proceed to Step 2 and move it a server.&lt;/p&gt;

&lt;h1 id=&quot;step-2-moving-it-to-a-server&quot;&gt;Step 2: Moving it to a Server&lt;/h1&gt;

&lt;p&gt;Installing Errbit on a docker enabled server really is exactly the same as you did above.  Here's the quick recap:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into your server.&lt;/li&gt;
  &lt;li&gt;Make an errbit directory where you want it.&lt;/li&gt;
  &lt;li&gt;wget https://raw.githubusercontent.com/errbit/errbit/master/docker-compose.yml&lt;/li&gt;
  &lt;li&gt;Run &lt;strong&gt;docker-compose up&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;In another terminal window, run &lt;strong&gt;docker-compose exec errbit bundle exec rake errbit:bootstrap&lt;/strong&gt; and make note of the credentials.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point you have an http service running errbit on port 8080 which your AWS security group likely isn't configured for and that brings us to step 3.&lt;/p&gt;

&lt;h1 id=&quot;step-3-aws-configuration&quot;&gt;Step 3: AWS Configuration&lt;/h1&gt;

&lt;p&gt;Our goal in this step is to configure a domain name like errbit.foo.com where foo.com is your base domain name.  I'm assuming that you are using the standard AWS tools including Route 53 for DNS and an ALB for load balancing.  Here are the things we need to do to make this work on AWS:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a dns name for it.&lt;/li&gt;
  &lt;li&gt;Open a security group port for it.&lt;/li&gt;
  &lt;li&gt;Add it to our load balancer.&lt;/li&gt;
  &lt;li&gt;Add it to our monitoring tool&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;creating-a-dns-name-for-it&quot;&gt;Creating a DNS Name for It&lt;/h2&gt;

&lt;p&gt;Here are the steps to follow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into AWS console for Route 53.&lt;/li&gt;
  &lt;li&gt;Select your main domain name, the &quot;foo.com&quot; from above.&lt;/li&gt;
  &lt;li&gt;Select Create Record Set.&lt;/li&gt;
  &lt;li&gt;In the name field enter errbit and then choose that it is type A and that it is an alias.&lt;/li&gt;
  &lt;li&gt;In the alias target select your load balancer.&lt;/li&gt;
  &lt;li&gt;Click the Create button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This has created the domain name errbit.foo.com and assigned it to your load balanced AWS stack.&lt;/p&gt;

&lt;h2 id=&quot;opening-a-security-group-port&quot;&gt;Opening a Security Group Port&lt;/h2&gt;

&lt;p&gt;Your AWS security group is really nothing more than a firewall and to let traffic through you need to expose a hole for the port 8080.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into the AWS console for EC2 instances.&lt;/li&gt;
  &lt;li&gt;Select Security Groups from the left hand pane.&lt;/li&gt;
  &lt;li&gt;Click the Inbound tab and then click the Edit button.&lt;/li&gt;
  &lt;li&gt;Scroll all the way down to the bottom and click Add Rule.&lt;/li&gt;
  &lt;li&gt;Enter 8080 into the Port Range field as a custom TCP rule accessible to everywhere and then click the Save button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;adding-errbit-to-your-aws-alb-load-balancer&quot;&gt;Adding Errbit to Your AWS ALB Load Balancer&lt;/h2&gt;

&lt;p&gt;At this point we just need to add Errbit to our AWS load balancer.  Please note that if you aren't using a load balancer then at this point you would actually be done but since I have one, I should go through all the way to the end.&lt;/p&gt;

&lt;p&gt;The first step is to define a Target Group for your load balancer.  This allows you to map a service on a given port to an AWS instance.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into the AWS console for EC2 instances.&lt;/li&gt;
  &lt;li&gt;Select Target Groups from the left hand pane.&lt;/li&gt;
  &lt;li&gt;Click the Create Target Group button.&lt;/li&gt;
  &lt;li&gt;Enter errbit as the Target group name and specify /robots.txt as the health check path and then click Create.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have a Target Group then you need to add an actual Target for the group to serve traffic to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select the errbit Target Group in the list of target groups on the top.&lt;/li&gt;
  &lt;li&gt;Select the Targets tab on the bottom.&lt;/li&gt;
  &lt;li&gt;Click the Edit button.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: This next step is confusing so please pay attention.  You are now adding from a list on the bottom of the screen to a list on the top and then saving your work with a button on the bottom.  Honestly this is kind of a &lt;em&gt;shite show&lt;/em&gt; as far as UI design goes but it does work; it is just tricky and unintuitive.&lt;/li&gt;
  &lt;li&gt;Select your instance where errbit is installed from the list of instances on the bottom and then check its box on the far left.  Enter 8080 in the port field and then click the Add to registered button.&lt;/li&gt;
  &lt;li&gt;Now click the Save button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You now have both a target group and a target which means you can now create a load balancer rule to process the traffic.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go into the AWS console for EC2 instances.&lt;/li&gt;
  &lt;li&gt;Select Load Balancers from the left hand pane&lt;/li&gt;
  &lt;li&gt;Select your load balancer from the list of load balancers at the top.&lt;/li&gt;
  &lt;li&gt;Select Listeners from the bottom grouping of tabs.&lt;/li&gt;
  &lt;li&gt;Out of the box, Errbit only supports http not https so on the http listener select View/edit rules.&lt;/li&gt;
  &lt;li&gt;Select the + icon to add a rule.&lt;/li&gt;
  &lt;li&gt;At the top of the load balancer select the Insert Rule link.&lt;/li&gt;
  &lt;li&gt;Add errbit.foo.com (make sure you specify your correct base domain) to the Host field in the &lt;strong&gt;IF&lt;/strong&gt; section of the rule.&lt;/li&gt;
  &lt;li&gt;Select your target group from the Forward to section of the &lt;strong&gt;THEN&lt;/strong&gt; section of the rule.&lt;/li&gt;
  &lt;li&gt;Click the Save button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;At this point you should goto your url, something like http://errbit.foo.com/ and you should get a login screen where you can use the credentials you generated earlier.&lt;/p&gt;

&lt;p&gt;Your first tasks now need to be:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add yourself as a user so your email address is supported for notifications (note I still need to configure email sending and that will happen but likely in a later blog post).&lt;/li&gt;
  &lt;li&gt;Add any other team members.&lt;/li&gt;
  &lt;li&gt;You need to add all of your applications to Errbit and then configure your applications accordingly.&lt;/li&gt;
  &lt;li&gt;Use the Rake task above to test each of your applications and verify that they are connected to errbit.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;if-you-need-to-learn-docker&quot;&gt;If You Need to Learn Docker&lt;/h1&gt;

&lt;p&gt;All my Docker knowledge came from &lt;a href=&quot;https://diveintodocker.com/&quot;&gt;Nick Janetakis' Dive into Docker course&lt;/a&gt; and he does a great job teaching about Docker.  Strongly recommended.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2017/08/11/using-errbit-to-host-your-own-error-tracker-on-aws-for-rails-apps.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2017/08/11/using-errbit-to-host-your-own-error-tracker-on-aws-for-rails-apps.html</guid>
        
        <category>rails</category>
        
        <category>aws</category>
        
        <category>errbit</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Referencing Images in Rails 5 CSS Stylesheets</title>
        <description>&lt;p&gt;I recently had the issue where I switched the images in my stylesheet from an absolute url on someone else's domain to a relative path indicating a file in my /app/assets/images directory and that worked fine – until I deployed and then my image disappeared.  It took a few iterations to figure it out and here's the trick:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Make sure you are using the sass-rails gem which provides the necessary helpers.&lt;/li&gt;
  &lt;li&gt;For an image located in /app/assets/images/intro-bg.jpg, assuming that it is a CSS background image, you want to reference it as background: url(asset_path(&quot;intro-bg.jpg&quot;)).&lt;/li&gt;
  &lt;li&gt;You need to rename your stylesheet with a .scss extension so it is fed through the preprocessor.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a &lt;a href=&quot;https://stackoverflow.com/questions/15257555/how-to-reference-images-in-css-within-rails-4&quot;&gt;Stack Overflow&lt;/a&gt; on this but please note that the highest answer was actually wrong (at least for me).&lt;/p&gt;

&lt;p&gt;You should also note that, in my opinion, the asset pipeline is tricky and I no longer trust anything in it until I've deployed to production and tested it myself.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/08/09/referencing-images-in-rails-5-stylesheets.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/08/09/referencing-images-in-rails-5-stylesheets.html</guid>
        
        <category>rails</category>
        
        <category>CSS</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Expanding an AWS Instance Volume</title>
        <description>&lt;p&gt;One of the true promises of cloud computing is freeing you from resource limits.  In an ideal world you'd be able to easily example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ram&lt;/li&gt;
  &lt;li&gt;storage&lt;/li&gt;
  &lt;li&gt;networking&lt;/li&gt;
  &lt;li&gt;cpu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And while this is somewhat true, the reality is always a bit trickier.  I've had a new project underway for a while and I've been plagued by constant disc space issues.  And while this is a multi container project, my core /var/lib/docker/containers directory is only 1.1 gigs according to a du -sh /var/lib/docker/containers and /var/lib/docker/volumes is only 288K but my /var/lib/docker/aufs directory is 14 + gigs.  Despite diving deeply into the &lt;a href=&quot;https://github.com/spotify/docker-gc&quot;&gt;spotify-gc project&lt;/a&gt; and the &lt;a href=&quot;https://github.com/moby/issues/22207&quot;&gt;open issue on Moby&lt;/a&gt;, none of these actually solved the issue.&lt;/p&gt;

&lt;p&gt;So it was time to just suck it up and add more disc space – even though I am an admitted cheap bastard and this bothers the hell out of me.  I've done this in the past and while it wasn't &lt;a href=&quot;http://fuzzyblog.io/blog/aws/2016/11/26/fear-and-loathing-in-awsville-or-adventures-in-partition-resizing.html&quot;&gt;as bad as the last time&lt;/a&gt;, it still wasn't obvious.&lt;/p&gt;

&lt;h1 id=&quot;how-to-expand-your-aws-volume-on-a-running-instance&quot;&gt;How to Expand Your AWS Volume on a Running Instance&lt;/h1&gt;

&lt;p&gt;I've broken this into two stages.  Here is stage 1 - using the web UI.  &lt;strong&gt;Keep in mind that you are going to need to do a reboot at the end and that means some level of downtime so plan this out accordingly.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start at your dashboard on &lt;a href=&quot;http://console.aws.amazon.com&quot;&gt;console.aws.amazon.com&lt;/a&gt; or however you log in and go into the EC2 section.&lt;/li&gt;
  &lt;li&gt;Select volumes on the left hand sidebar.&lt;/li&gt;
  &lt;li&gt;Select the instance.&lt;/li&gt;
  &lt;li&gt;From the actions drop down select Modify Volume.&lt;/li&gt;
  &lt;li&gt;Change the disc space to whatever you want and click ok.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This starts the process of AWS reallocating your disc.  If you're on Linux you now need to proceed to stage two:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into your box.&lt;/li&gt;
  &lt;li&gt;Run a df -h and see if the new space shows up.  It almost certainly won't but you can always try.&lt;/li&gt;
  &lt;li&gt;Run a lsblk to list your blog devices and you need to note the one that your system is using.  The default is /dev/xvda1&lt;/li&gt;
  &lt;li&gt;Run a sudo resize2fs /dev/xvda1&lt;/li&gt;
  &lt;li&gt;Reboot the box with /sbin/reboot&lt;/li&gt;
  &lt;li&gt;Wait the appropriate amount of time and ssh in again.  Re-run df -h and you should see the new space.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;commentary&quot;&gt;Commentary&lt;/h1&gt;

&lt;p&gt;As a computer scientist I entirely understand why you have to reboot.  But as a consumer of cloud services it feels to me like we should be past this at this stage of the using cloud services.  All of my AWS experience is generally using Ubuntu and if Amazon was to tell me that this wasn't necessary on the AWS Linux, well, that alone would be enough to make me switch distros.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;p&gt;Here are two useful links that dig into this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html?icmpid=docs_ec2_console&quot;&gt;EC2 Console Notes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux&quot;&gt;Linux Recognizing the Resized Space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 09 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2017/08/09/expanding-an-aws-instance-volume.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2017/08/09/expanding-an-aws-instance-volume.html</guid>
        
        <category>aws</category>
        
        <category>docker</category>
        
        <category>aufs</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Utter and Complete Heroku Fail</title>
        <description>&lt;p&gt;So this morning I wanted to get a self hosted version of the &lt;a href=&quot;https://github.com/errbit/errbit&quot;&gt;Errbit&lt;/a&gt; project running.  This is an equivalent to BugSnag, Airbrake, HoneyBadger – a tool for tracking errors in live apps.  The inspiration for this was &lt;a href=&quot;http://developeronfire.com/podcast/episode-258-jeff-atwood-sharing-the-house&quot;&gt;Jeff Atwood's Developer on Fire interview&lt;/a&gt; where he advised three things:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Jeff's top 3 tips for delivering more value:

1. Measure performance all the time - Know how long every unit of work in your app is taking
2. Have user friendly error handling for both the end user and the developer built into your application
2. Have a place where people can go to discuss your software
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I'm close to releasing something and #2 has been on my list for sometime so I was pretty damn motivated to finally address this. And I've wanted to try Errbit for literally years and years so I turned to their &lt;a href=&quot;https://github.com/errbit/errbit/blob/master/docs/deployment/heroku.md&quot;&gt;deployment&lt;/a&gt; page where they, quote clearly, offered Heroku as an option and recommended it as the easiest way to start.  Awesome – right?  Unfortunately I found nothing but complete and total fail.  Here's what happened:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I created an account.  This is normal and worked well.&lt;/li&gt;
  &lt;li&gt;I had to verify my password via email.  Again normal and worked well.&lt;/li&gt;
  &lt;li&gt;I returned to the &lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/errbit/errbit/tree/master&quot;&gt;automatic app creation&lt;/a&gt; where it now told me I had to enter a credit card.  I did.&lt;/li&gt;
  &lt;li&gt;Installation failed and wouldn't tell me why &quot;App creation failed.  Please ensure you have valid values in the above form field&quot; – they were all there.&lt;/li&gt;
  &lt;li&gt;Installation failed and it told me to that I needed to enter a credit card – which I did.  But I can do that dance again.&lt;/li&gt;
  &lt;li&gt;I then get &quot;the account foo@bar.com is not permitted to install the sendgrid add-on at this time.  If you believe this is an error please contact support and reference ID 56fda43c-8abb-4378-a320-079bec73f142&quot; (note I did give heroku my correct email).&lt;/li&gt;
  &lt;li&gt;I attempted to put in my own SMTP server but I'm told the same thing about sendgrid even though I put in a &lt;a href=&quot;http://www.sparkpost.com&quot;&gt;sparkpost&lt;/a&gt; domain.&lt;/li&gt;
  &lt;li&gt;There is no link to support in this context.  Shouldn't this have been automatically linked in place?&lt;/li&gt;
  &lt;li&gt;I find the support button at the bottom of the page (disclaimer - it wasn't all that far away) which takes me to help.heroku.com.&lt;/li&gt;
  &lt;li&gt;On help.heroku.com I can find no way to actually create a ticket to enter the ID they gave me.  See Screenshot 1 below.&lt;/li&gt;
  &lt;li&gt;There is a &lt;a href=&quot;https://help.heroku.com/tickets&quot;&gt;Ticket history&lt;/a&gt; button which also doesn't give me a way to create a ticket.  See Screenshot 2 below.&lt;/li&gt;
  &lt;li&gt;At this point I've given up in disgust and I'll figure out how to do this on Docker and my own AWS instance.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;This is a failure on so many damn levels that it is absurd:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Having to enter my credit card twice.&lt;/li&gt;
  &lt;li&gt;Not allowing an authenticated, validated, paying user to use a baseline feature.&lt;/li&gt;
  &lt;li&gt;Not allowing a way around the failure (use of another smtp resource).&lt;/li&gt;
  &lt;li&gt;Not making support easy.&lt;/li&gt;
  &lt;li&gt;Not even allowing me to create a ticket AS THEY TOLD ME TO.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The utter and complete pity of this is that Heroku allowing me to easily run a github repo would have been beautiful.  Here is the beautiful simplicity of the Errbit deploy to Heroku url:&lt;/p&gt;

&lt;p&gt;https://heroku.com/deploy?template=https://github.com/errbit/errbit/tree/master&lt;/p&gt;

&lt;p&gt;That is fantastic – I do not think it could be any simpler than that.  And, if it had worked, I can easily see myself doing this fairly often.  Now?  I suspect I'll be deleting my Heroku account shortly and walking away forever.  And that's a crying shame.&lt;/p&gt;

&lt;h1 id=&quot;screenshot-1&quot;&gt;Screenshot 1&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/herokufail1.png&quot; alt=&quot;herokufail1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So where would I even create a ticket?&lt;/p&gt;

&lt;h1 id=&quot;screenshot-2&quot;&gt;Screenshot 2&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/herokufail2.png&quot; alt=&quot;herokufail2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So where would I even create a ticket?&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/fail/2017/08/08/utter-and-complete-heroku-fail.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/fail/2017/08/08/utter-and-complete-heroku-fail.html</guid>
        
        <category>heroku</category>
        
        <category>fail</category>
        
        <category>rails</category>
        
        
        <category>fail</category>
        
      </item>
    
      <item>
        <title>Adding AutoSave on Focus Lost to TextMate 2</title>
        <description>&lt;p&gt;I've looked this up and set this on every single mac I've used since I switched to &lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate 2&lt;/a&gt; so I guess it is time to finally write it down for myself:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open a command prompt.&lt;/li&gt;
  &lt;li&gt;Edit the file ~/Library/Application Support/TextMate/Global.tmProperties&lt;/li&gt;
  &lt;li&gt;Add the line saveOnBlur = true in the top region before the square bracket sections.&lt;/li&gt;
  &lt;li&gt;Save and Exit&lt;/li&gt;
  &lt;li&gt;Relaunch and it should be there.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 07 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/textmate/2017/08/07/adding-autosave-on-focus-lost-to-textmate-2.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/textmate/2017/08/07/adding-autosave-on-focus-lost-to-textmate-2.html</guid>
        
        <category>textmate</category>
        
        
        <category>textmate</category>
        
      </item>
    
      <item>
        <title>A Bash Function for the 2 AM Blind Deploy</title>
        <description>&lt;p&gt;I'm doing a lot more bash scripting these days – ever since I opted to write my new deployer, dockerano, in Bash.  Tackling something significant in Bash has absolutely forced me, 20 years plus after I started using it, to finally start to understand it.  By no means do I feel that I have a good handle on Bash – I'm still heavily reliant on &lt;a href=&quot;http://fuzzyblog.io/blog/bash/2017/07/17/improving-your-bash-scripting-with-shellcheck.html&quot;&gt;ShellCheck&lt;/a&gt; but I can actually do things with Bash that I feel somewhat confident about.&lt;/p&gt;

&lt;p&gt;Here's a bash function that I extended this morning to add OSX specific audio output after a deploy.  The problem at hand is what I call the &quot;2 AM sleep blind deploy&quot;.  We all know what this is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You get a downtime alert on a service&lt;/li&gt;
  &lt;li&gt;You blearily struggle out of bed at 2 am and fix the code&lt;/li&gt;
  &lt;li&gt;You deploy it and you want to get back to bed as soon as possible&lt;/li&gt;
  &lt;li&gt;Something goes wrong with the deploy and you get alerted again just &lt;strong&gt;after&lt;/strong&gt; you get back in bed&lt;/li&gt;
  &lt;li&gt;Lather, rinse, repeat until it is either fixed or morning comes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm getting close to release on my much obliquely referenced new product and so deploy issues are now first and foremost in my mind. My task for this morning was to add audio output to my deployer &lt;strong&gt;when&lt;/strong&gt; there is a failure.  Here's what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My first task was to recognize that this only ever had to run on OSX as I develop and deploy from OSX.&lt;/li&gt;
  &lt;li&gt;There were two options - afplay and say.  The &lt;strong&gt;afplay&lt;/strong&gt; utility plays any media file from the command line and that's good but a loud noise alone won't tell me &lt;em&gt;what&lt;/em&gt; is down just that &lt;em&gt;something&lt;/em&gt; is down.  And while this works well – once upon a time, I used to trigger Billy Idol's White Wedding whenever something was down – this time I wanted something a bit more nuanced and information rich.  I could also use the osx command &lt;strong&gt;say&lt;/strong&gt; to speak anything including the url which is failing.  Here is a &lt;a href=&quot;https://superuser.com/questions/298201/how-can-i-play-a-sound-from-the-command-line-in-mac-os-x&quot;&gt;Stack Overflow&lt;/a&gt; on the options.&lt;/li&gt;
  &lt;li&gt;An sample of this is &quot;say http://foo.com/ is down&quot; which will be played thru the speaker.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;My new tech stack is 7 different services each of which provides a simple health check api but since the obviously differ for each service, I needed a way to store this on a per service basis which I opted to do with a .dockerano_post_deploy_check_urls file in the root directory of each project.  This file can store as many urls as are needed and it will be looped over by the bash script.  Given that most of the site needs to work in both http and https and with www and non www variants, I didn't want a single check url.  If you allow for both https and http and non www and www variants, that amounts to 4 urls:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://foo.com/health&lt;/li&gt;
  &lt;li&gt;http://www.foo.com/health&lt;/li&gt;
  &lt;li&gt;https://foo.com/health&lt;/li&gt;
  &lt;li&gt;https://www.foo.com/health&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, yes, this may be overkill but it is all too easy for almost anything to break so I would argue that the right thing to do is be aggressive in your testing.&lt;/p&gt;

&lt;p&gt;Here's the bash function I wrote for this with the addition of say:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function verify_site_is_up_after_post_deploy() {
  sleep 5
  IFS=$'\n' read -d '' -r -a site_urls &amp;lt; .dockerano_post_deploy_check_urls  
  
  for site_url in &quot;${site_urls[@]}&quot;; do
    echo &quot;  Processing url: $site_url&quot;
    if curl --output /dev/null --silent --head --fail &quot;$site_url&quot;; then
      status_message_good &quot;$url exists; deploy worked&quot;
    else
      status_message_bad &quot;$url DOES NOT EXIST; DEPLOY FAILURE!!!!&quot;
      say &quot;$url is DOWN!&quot;
    fi

  done
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I adapted the code above based on this  &lt;a href=&quot;https://unix.stackexchange.com/questions/148985/how-to-get-a-response-from-any-url&quot;&gt;source&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bash/2017/08/06/a-bash-function-for-the-2-am-blind-deploy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bash/2017/08/06/a-bash-function-for-the-2-am-blind-deploy.html</guid>
        
        <category>devops</category>
        
        <category>deploy</category>
        
        <category>bash</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>Monitoring Free Disc Space On AWS Instances with Monit, Ansible and SparkPost</title>
        <description>&lt;p&gt;There are lots and lots of things that can go wrong with an AWS instance but I have always found that the single most common problem is nothing more than running out of disc space – log files fill up, too many things get deployed, etc.  And with low end AWS instances being only 8 gigs of free disc space, well, this is bound to happen.&lt;/p&gt;

&lt;p&gt;The expensive solution is simple – buy more disc space – but I'm &lt;strong&gt;cheap&lt;/strong&gt; and that means that the real solution is &lt;strong&gt;monitoring&lt;/strong&gt; and &lt;strong&gt;alerting&lt;/strong&gt;.  Here's what this means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You need a way to configure monitoring, &lt;strong&gt;automatically&lt;/strong&gt;, on &lt;strong&gt;not&lt;/strong&gt; just one server but &lt;strong&gt;all&lt;/strong&gt; servers you have.  We'll use &lt;a href=&quot;http://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt; for this.&lt;/li&gt;
  &lt;li&gt;You need a monitoring daemon, a piece of software which looks for error conditions and sends email when they occur.  We'll use &lt;a href=&quot;https://github.com/arnaudsj/monit&quot;&gt;monit&lt;/a&gt; for this.&lt;/li&gt;
  &lt;li&gt;You need an email server to send the messages through.  We'll use &lt;a href=&quot;http://www.sparkpost.com/&quot;&gt;SparkPost&lt;/a&gt; for this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-1-installation-of-monit-with-ansible&quot;&gt;Step 1: Installation of Monit with Ansible&lt;/h1&gt;

&lt;p&gt;Ansible, which I've &lt;a href=&quot;http://fuzzyblog.io/blog/category.html#ansible&quot;&gt;written a lot about&lt;/a&gt;, is a configuration tool for servers, your laptop, etc – essentially any device that you want to configure can be managed by Ansible.&lt;/p&gt;

&lt;p&gt;Here is a basic Ansible role which installs monit along with a configuration file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
- name: install monit
  apt: pkg=monit state=present
  
- name: copy config file
  template: src=roles/install_monit/files/monit.rc dest=/etc/monit/monitrc
  
- name: start monit
  service: name=monit state=started
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The lines above would go in a file roles/install_monit/tasks/main.yml.  You could then call that from a playbook with nothing more than:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- { role: install_monit, tags: monit}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As long as all your AWS instances are listed in an inventory file then this will install monit on all boxes, copy up the configuration file and then restart the service.&lt;/p&gt;

&lt;h1 id=&quot;step-2-monit-configuration&quot;&gt;Step 2: Monit Configuration&lt;/h1&gt;

&lt;p&gt;We do need a simple Monit configuration file to tell it about our email server, credentials and the monitoring rules.  Monit is very powerful and can monitor for all kinds of issues but I'm only going to configure free disc space checking.  Where you see things in UPPERCASE then you need to configure them for your settings.&lt;/p&gt;

&lt;p&gt;This configuration file will be installed into /etc/monit/monitrc by your Ansible playbook.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set daemon 120 with start delay 60

  set mailserver smtp.sparkpostmail.com  port 587 username &quot;SMTP_Injection&quot; password &quot;PASSWORD&quot; using tlsv1 with timeout 30 seconds

  set alert YOURADDRESS@YOURSERVER.COM
  
mail-format {
    From: noreply@YOURSERVER.COM
    Subject: MONIT ERROR !!! [$HOST] $EVENT $SERVICE
    Message: $DESCRIPTION
             $DATE
}

check filesystem &quot;root&quot; with path /dev/xvda1
  if space usage &amp;gt; 90% for 8 cycles then alert
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's it.  Here is the english language explanation of the Monit configuration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set the daemon to monitor every 2 minutes (120 seconds) with a delay of 60 seconds for checking on startup&lt;/li&gt;
  &lt;li&gt;Set the mail server to be sparkpost on 587 with the SMTP_Injection username and a password&lt;/li&gt;
  &lt;li&gt;Set the alerting email address&lt;/li&gt;
  &lt;li&gt;Set the format for the alerting email including subject and description&lt;/li&gt;
  &lt;li&gt;check the filesystem device and then alert if the space usage is more than 90% for 8 cycles&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-3-email-configuration&quot;&gt;Step 3: Email Configuration&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sparkpost.com&quot;&gt;SparkPost&lt;/a&gt; is a provider of email sending services and they have an incredibly generous free plan with up to 10,000 emails per month for free.  And while I could have used SES or another email service, I've had wonderful success using SparkPost to power my Rails ActionMailer routines so I just reused the same email credentials for Monit and it worked like a charm.  Here's what you need to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To get a SparkPost account, sign up &lt;a href=&quot;https://app.sparkpost.com/account/credentials&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go to your &lt;a href=&quot;https://app.sparkpost.com/account/credentials&quot;&gt;dashboard&lt;/a&gt; to get an API key&lt;/li&gt;
  &lt;li&gt;You do need to goto &lt;a href=&quot;https://app.sparkpost.com/account/sending-domains&quot;&gt;Sending Domains&lt;/a&gt; and configure the domains that you are sending from and then you need to add the DKIM settings to your DNS provider to prove that you own the domain in question.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;If you put these three pieces together then you will have an Ansible playbook that you can deploy onto all your servers that monitors for free disc space and alerts you via email.  Down the road you could easily enhance the monit script with other things that need monitoring such as http services, CPU load and more.&lt;/p&gt;

&lt;h1 id=&quot;useful-references&quot;&gt;Useful References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/akabos/3897117&quot;&gt;Akabos Gist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.artchang.com/post/37424851210/monitor-memcached-with-monit-and-alert-with-g&quot;&gt;Art Chang&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/arnaudsj/monit&quot;&gt;Monit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 02 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2017/08/02/monitoring-free-disc-space-on-aws-instances-with-monit-ansible-and-sparkpost.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2017/08/02/monitoring-free-disc-space-on-aws-instances-with-monit-ansible-and-sparkpost.html</guid>
        
        <category>aws</category>
        
        <category>ansible</category>
        
        <category>monit</category>
        
        <category>SparkPost</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Hacks for When Ansible Galaxy Isn't Working</title>
        <description>&lt;p&gt;As of late I have manually bootstrapped a handful of machines into production using a text file with some command lines.  Yes this is a crap ass way to do it but one of the key things, Docker, is a damn pain in the ass to install.  Here's what I was using as the command lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;
sudo apt-get update
sudo apt-get install docker-ce
sudo apt install docker-compose
sudo groupadd docker
sudo usermod -aG docker $USER
sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Even for me that's damn ugly – so it is clearly time for &lt;a href=&quot;http://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;.  Ansible is a machine provisioning tool that lets you reduce commands like the above to something short, sweet and idempotent.  For this particular thing I wanted to use &lt;a href=&quot;https://nickjanetakis.com/blog/automate-installing-docker-and-docker-compose-with-ansible&quot;&gt;Nick Janetakis' Ansible Galaxy role&lt;/a&gt; to make installing this trivial.  Specifically I wanted what his blog post promises:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- { role: nickjj.docker, tags docker}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which is all you need to setup Docker.  And that's actually what I got but I hit a few snags hence the workaround.&lt;/p&gt;

&lt;p&gt;The problem that I hit was that his ansible galaxy role has some kind of version control conflict so that the version that gets installed when you type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-galaxy install nickjj.docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;is actually the version from November 2016, not the current 17.xx version.  What I needed was the master version of the Github repo not the older tagged version.  A bit of googling and some interactions with Nick told me just clone it directly into my own project as a work around.  Here's how I did that:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Change into the right directory
cd ~/me/fuzzygroup/hyde/seira_watch/ansible/roles

git clone git@github.com:nickjj/ansible-docker.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This created an ansible-docker folder in my roles directory and all that I needed to make it work was to change the nickjj.docker reference to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- { role: ansible-docker, tags docker}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nick also helpfully pointed out that I could have also cloned to tmp and then renamed to nickjj-docker before copying it over and that would have worked just fine tool.  Thanks Nick!&lt;/p&gt;

&lt;p&gt;Note 1: Another workaround supposedly would be to make a requirements.yml file and specify the branch there but I'm less certain on how to do that.&lt;/p&gt;

&lt;p&gt;Note 2: I talked about this same type of problem &lt;a href=&quot;http://fuzzyblog.io/blog/ansible/2016/10/09/ansible-quickie-fixing-a-poorly-designed-galaxy-role.html&quot;&gt;once before&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2017/08/01/hacks-for-when-ansible-galaxy-isn-t-working.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2017/08/01/hacks-for-when-ansible-galaxy-isn-t-working.html</guid>
        
        <category>ansible</category>
        
        <category>ansible-galaxy</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Configuring Your Mac with Ansible Take 2</title>
        <description>&lt;p&gt;The last new Mac I setup was back in &lt;a href=&quot;http://fuzzyblog.io/blog/osx/2016/11/20/ansible-for-configuring-your-mac-so-much-better.html&quot;&gt;2016, November 20&lt;/a&gt; and to do that I used ansible which was a wonderful experience.  Rather than groveling for software to install, shell hacks, etc, my ansible routine handled all of those crappy tasks and it was brilliant.  I can't claim any originality here – lots of people other than me have done this.  In specific I drew inspiration from &lt;a href=&quot;https://twitter.com/geerlingguy&quot;&gt;Jeff Geerling's&lt;/a&gt; ansible Macbook Pro repository.  He and I did it differently (his ansible skills are better than mine) but the end result was much the same – a functional machine with minimal manual work.&lt;/p&gt;

&lt;p&gt;I recently wrote about &lt;a href=&quot;http://fuzzyblog.io/blog/osx/2017/07/19/why-i-haven-t-switched-away-from-osx.html&quot;&gt;my lack of system stability&lt;/a&gt; and figured that it was time to address it.  My thesis for some time has been that most of my errors are somehow related to lack of RAM so moving to a bigger box made sense.  Over the weekend I converted my Linux Intel NUC over to an OSX Hackintosh and used an updated version of the same playbook to handle configuration.  This means that I'm now working on a 32 gigs of RAM development box.  It is unclear if this will work out long term or not but it is an interesting experiment.  Of course since its a Hackintosh there are certain bits of weirdness like the fact that audio doesn't work at all at present.  Ah well…&lt;/p&gt;

&lt;h1 id=&quot;what-to-do-when-you-just-installed-osx&quot;&gt;What to Do When You Just Installed OSX&lt;/h1&gt;

&lt;p&gt;Here are the steps to follow for a brand new Mac when you don't have any tooling installed yet:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install the command line tools: xcode-select –install&lt;/li&gt;
  &lt;li&gt;Install pip: easy_install –user pip&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get pip into the path with:&lt;/p&gt;

    &lt;p&gt;$ printf 'if [ -f ~/.bashrc ]; then\n  source ~/.bashrc\nfi\n' » $HOME/.profile
$ printf 'export PATH=$PATH:$HOME/Library/Python/2.7/bin\n' » $HOME/.bashrc
$ source $HOME/.profile&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Install ansible: pip install –user –upgrade ansible&lt;/li&gt;
  &lt;li&gt;Create the global dir: sudo mkdir /etc/ansible&lt;/li&gt;
  &lt;li&gt;Copy in a configuration file: sudo curl -L https://raw.githubusercontent.com/ansible/ansible/devel/examples/ansible.cfg -o /etc/ansible/ansible.cfg&lt;/li&gt;
  &lt;li&gt;Verify it works with: ansible localhost -m ping&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A good reference is the Binary Nature link below.&lt;/p&gt;

&lt;h1 id=&quot;useful-links&quot;&gt;Useful Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/geerlingguy/mac-dev-playbook&quot;&gt;Jeff Geerling's Github Mac Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[Vandenbrad.org on how to configure the OSX Dock]https://blog.vandenbrand.org/2016/01/04/how-to-automate-your-mac-os-x-setup-with-ansible/&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fuzzygroup/ansible-macbook-pro&quot;&gt;My Github Repo for Macbook Configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tonymacx86.com/&quot;&gt;TonyMacx86&lt;/a&gt; - The definitive OSX Hackintosh Resource&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ansible.com/&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://binarynature.blogspot.com/2016/01/install-ansible-on-os-x-el-capitan_30.html&quot;&gt;Binary Nature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 31 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/mac/2017/07/31/configuring-your-mac-with-ansible-take-2.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/mac/2017/07/31/configuring-your-mac-with-ansible-take-2.html</guid>
        
        <category>mac</category>
        
        <category>ansible</category>
        
        <category>hackintosh</category>
        
        
        <category>mac</category>
        
      </item>
    
      <item>
        <title>Rails and Address Already In Use - Bind Error</title>
        <description>&lt;p&gt;Lately I've seen this error come up quite a few times:&lt;/p&gt;

&lt;p&gt;/Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch_web_app_api/gems/puma-3.9.1/lib/puma/binder.rb:269:in `initialize': Address already in use - bind(2) for &quot;::1&quot; port 3220 (Errno::EADDRINUSE)&lt;/p&gt;

&lt;p&gt;I'm running a fairly complex stack that mirrors an 8 micro service application where things are expected to be on certain points in development so having port 3220 not working means that one of my APIs isn't available – and that's &lt;strong&gt;unacceptable&lt;/strong&gt;.  So I dug into it a bit and with the help of &lt;a href=&quot;https://stackoverflow.com/questions/10261477/tcpserver-error-address-already-in-use-bind2&quot;&gt;this StackOverflow&lt;/a&gt;, I found the answer was to locate the offending process and then kill it dead:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;lsof -wni tcp:3220&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That gives the process id or PID and then you can just kill it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;kill -9 12345 (or whatever)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 29 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/07/29/rails-and-address-already-in-use-bind-error.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/07/29/rails-and-address-already-in-use-bind-error.html</guid>
        
        <category>rails</category>
        
        <category>sysadmin</category>
        
        <category>bind</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Why I Haven't Switched Away from OSX</title>
        <description>&lt;p&gt;I'm writing this at 4:12 am sitting next to a machine with 11:50 hours of uptime.  The machine I'm using is an old OSX Macbook Air running OSX El Capitan 10.11.6 and the machine with less than 12 hours of uptime is running Sierra 10.12.5 and is a new (6 months old) Macbook Pro 13, the last one of the old generation before Apple foolishly messed around with the keyboard travel and layout on the new generation.  Yesterday my wife was driving and I was in the car drafting blog entries for a new, very focused blog I want to launch.  We were on flat dead empty and she stopped at a gas station so I got out to pump the fuel.  I came back to that worst of all experiences – my laptop had rebooted spontaneously and was sitting at the login prompt.  &lt;em&gt;Groan&lt;/em&gt;.  Even worse there was no system report this time so I don't even know what pathetic excuse for a piece of software screwed up (again).  So I'm just left wondering.  But since this happens so frequently, I found a &lt;a href=&quot;https://gist.github.com/fuzzygroup/a4589f50665fd62f9ded74d54cd77e74&quot;&gt;crash report from about a week ago&lt;/a&gt; when my box had an uptime of 94000 seconds (yes that's just one day).&lt;/p&gt;

&lt;p&gt;My old friend &lt;a href=&quot;https://gene-callahan.blogspot.com/&quot;&gt;Gene Callahan&lt;/a&gt;, the man who two decades ago taught me Awk and pattern matching, skills that have subsequently defined much of my technical career, asked me recently why don't I switch to something stable and answering that is a challenge but I think I'm finally ready to address that.  Here's the tldr with a deep discussion on each below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lack of Faith in the Alternatives&lt;/li&gt;
  &lt;li&gt;Textmate, Textmate, Textmate&lt;/li&gt;
  &lt;li&gt;iTerm2&lt;/li&gt;
  &lt;li&gt;My Phone&lt;/li&gt;
  &lt;li&gt;My Pictures / My Data&lt;/li&gt;
  &lt;li&gt;Time Machine&lt;/li&gt;
  &lt;li&gt;Apple Hardware is Simply Beautiful&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gene was asking me this, I suspect, because I wrote &lt;a href=&quot;http://fuzzyblog.io/blog/tag.html#postmac&quot;&gt;a series of Postmac&lt;/a&gt; blog posts at the end of 2016 into 2017 and then I simply stopped.  I was &lt;a href=&quot;http://fuzzyblog.io/blog/postmac/2016/11/05/life-in-a-postmac-world.html&quot;&gt;very serious&lt;/a&gt; about this initially and then I went dark on the topic and this digs into that.&lt;/p&gt;

&lt;h1 id=&quot;disclaimer-im-a-power-user&quot;&gt;Disclaimer: I'm a Power User&lt;/h1&gt;

&lt;p&gt;It should be noted that I'm a power user and a software developer.  I mostly use a terminal and an editor.  My recent list of &quot;5 Apps I use Everyday&quot; on &lt;a href=&quot;iTerm, TextMate, Enpass, Ruby, Git&quot;&gt;Hacker News&lt;/a&gt; was iTerm, TextMate, Enpass, Ruby, Git – just one of those was a GUI app (a password manager).  What I develop are mostly Rails apps with a smattering of straight ruby and, lately, some JavaScript / Node for a &lt;a href=&quot;http://fuzzyblog.io/blog/how_to_be_a_developer/2017/07/02/how-to-be-a-developer-001.html&quot;&gt;course I'm teaching / mentoring&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now the way I develop Rails apps is optimized for developer productivity so I start every project by opening a succession of terminal windows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Web Server Tail&lt;/li&gt;
  &lt;li&gt;Database window&lt;/li&gt;
  &lt;li&gt;Rails Console&lt;/li&gt;
  &lt;li&gt;Command Line&lt;/li&gt;
  &lt;li&gt;Remote Command Line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By keeping all the resources for whatever I need to do always active, I minimize cognitive overhead due to switching time / &quot;ok do I want to drop out of console to check the log file; is that worth it?&quot;.&lt;/p&gt;

&lt;p&gt;I have the definition of these set in a &lt;a href=&quot;https://github.com/tmuxinator/tmuxinator&quot;&gt;Tmuxinator&lt;/a&gt; profile so when I want to work on project xyz, I just tell the command line &quot;tmuxinator seira_watch_web_app&quot; and all the terminals for that project spring into existence (and it is wonderful to not have to think about 'ok what port do I need the web server on').  Right now I have 97 profiles setup for Tmuxinator.&lt;/p&gt;

&lt;p&gt;You're probably thinking well – 5 terminal windows, how is that a power user?  &lt;em&gt;Chuckle&lt;/em&gt;, you should know play the opening bars of &lt;em&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1tj2zJ2Wvg&quot;&gt;welcome to the jungle&lt;/a&gt;&lt;/em&gt; in your head.  I've made the technical focus for 2017 learning how to do Rails development in a distributed, &lt;strong&gt;non monolithic&lt;/strong&gt; fashion so that means your traditional Rails monolith has now been decomposed into N separate Rails projects with formal APIs between them and that you generally need all parts live concurrently.  In my case that generally amounts to 8 separate projects, each with at least 5 terminal windows so my 5 terminal windows is now 5 * 8 or 40 plus terminal windows just to work on one side project – and that doesn't include consulting work, side, side projects, etc.  Generally speaking I run about 100 to 200 separate bash sessions.  The reason why I know about things like &lt;a href=&quot;http://fuzzyblog.io/blog/unix/2016/11/23/pkill-rocks.html&quot;&gt;pkill&lt;/a&gt; is from trying to tease out just one terminal session from the sea of them that I normally am swamped by.&lt;/p&gt;

&lt;p&gt;Now I'm sure that 100 terminal sessions sounds like absolute madness but it actually isn't all bad.  The terminal ITerm2 is actually pretty damn good and I manage it through a combination of tooling (&lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot;&gt;Tmux&lt;/a&gt; / Tmuxinator) and convention (terminal 2 is my core software development window; terminal 3 is blogging and so on).&lt;/p&gt;

&lt;p&gt;So if you add 100 plus terminal windows to a browser or three each running say 50 plus tabs, I have very, very serious memory needs.  Apple's persistent inability / lack of desire to ship a laptop with more than 16 gigs of RAM is something I find absolutely maddening.&lt;/p&gt;

&lt;p&gt;But for all of my bitching about stability and investigating alternatives, 8 months since I first wrote about &quot;postmac&quot;, I'm still here using OSX every single day so what went wrong?&lt;/p&gt;

&lt;h1 id=&quot;lack-of-faith--everything-crashes&quot;&gt;Lack of Faith / Everything Crashes&lt;/h1&gt;

&lt;p&gt;I'm now 49 years old and I have an appalling lack of faith in software quality – or as I like to describe it &quot;everything crashes&quot;.  This past November I bought an Intel NUC for the purposes of just running Ubuntu and experimenting with desktop linux to see if it was an alternative.  I went with Ubuntu 16 and used Ubuntu Mate as the closest linux experience to OSX that I could find (and yes I flirted heavily with &lt;a href=&quot;http://www.hongkiat.com/blog/elementary-os-luna/&quot;&gt;Elementary&lt;/a&gt; but it wasn't stable).  And you know what I found out, while Ubuntu didn't crash as hard as OSX, I still lost the networking stack about every week.  And a machine without networking, well in 2016 / 2017, that's not much of a computer.  And the only way I ever found to get this fixed was a full system restart.  Now I'm sure that if I had dug into it enough, I could have found a way to restart the network stack but I never found it.  Oh and this was an Intel NUC with twice the ram of my OSX that I was using under far less demanding circumstances.&lt;/p&gt;

&lt;p&gt;Honestly the experience of trying to switch off OSX onto Ubuntu and finding that Ubuntu wasn't stable, at least when used in a GUI context, was absolutely disheartening, so much so that that box sites on my desk and every time my eye falls on it, I get more than a little sad.  I run ubuntu linux boxes 24x7x365 with well over a &lt;em&gt;full year&lt;/em&gt; of uptime so the network stack on my personal Ubuntu box failing after less than a week (and failing consistently) puzzles me.  My suspicion is that this somehow related to a full GUI running on top of Ubuntu itself.&lt;/p&gt;

&lt;p&gt;So, honestly, everything crashes and if you're going to run a full computing stack, with a GUI, browser and everything else, I no longer think that there is such a thing as stability – at least not if you're a power user like myself and really pushing the limits of the machine.  And yes that's a crap ass attitude but it is what a lifetime of being a power user has reduced me to; sigh.&lt;/p&gt;

&lt;h1 id=&quot;if-everything-crashes-then-resume-quality-is-key&quot;&gt;If Everything Crashes then Resume Quality is Key&lt;/h1&gt;

&lt;p&gt;So if you assume that everything crashes then the quality of resume is key.  And this is something where I found a dramatic difference between Ubuntu and OSX.  Sure Ubuntu didn't hard crash but if I have to restart the machine to get networking running again, well, it might as well have.  While I remain pissed that my machine crashes regularly (I'm averaging about once per week now), I will state that Apple / the application vendors have finally managed to make this suck less.  Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;iTerm2 remembers every window and tab's position so all I have to do is relaunch Tmuxinator with a profile; since tab names are persistent (I'm glaring at you Apple Terminal), the name tells me what profile to launch&lt;/li&gt;
  &lt;li&gt;My editor, covered next, restores bloody everything&lt;/li&gt;
  &lt;li&gt;Apple generally relaunches every application I had going&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So while its not perfect, resume quality is far, far better than I have ever had it before.  Even the core browsers I rely on, Chrome, Firefox and Safari actually get window / tab restoration mostly correct.&lt;/p&gt;

&lt;h1 id=&quot;textmate-textmate-textmate&quot;&gt;Textmate, Textmate, Textmate&lt;/h1&gt;

&lt;p&gt;The very first editor I used once I switched fulltime to OSX from Windows / Linux (both on ThinkPad hardware) back in 2006 was &lt;a href=&quot;https://macromates.com/&quot;&gt;TextMate&lt;/a&gt; and I'm still using it.  I've written hundreds of thousands of lines of code in it and while the world has mostly moved on, I still find it to be the single best editor I've ever used.  Sure its old and a wee bit clunky but it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Has restore implemented perfectly (even &quot;unsaved&quot; files are restored after a crash allowing you to treat it as a virtual scratch pad; once you drop things into a new window they never go away unless you choose kill them)&lt;/li&gt;
  &lt;li&gt;Has extensions specific to Ruby / Rails&lt;/li&gt;
  &lt;li&gt;Has extensions for almost anything&lt;/li&gt;
  &lt;li&gt;Fast enough&lt;/li&gt;
  &lt;li&gt;Great syntax highlighting&lt;/li&gt;
  &lt;li&gt;Macro facility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I used to laugh at engineers who were so closely tied to a particular editor and think &quot;I'll never be that&quot;; karma is a bitch. But, seriously, an editor is what I spend maybe 90% + of my time in so having one that I love really matters and that is actually a switching cost.&lt;/p&gt;

&lt;p&gt;When I attempted to using Ubuntu on the NUC, I used &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime&lt;/a&gt;, &lt;a href=&quot;http://www.atom.io&quot;&gt;Atom&lt;/a&gt; and &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;.  Sublime never felt right and I just can't get past the performance / memory bloat of anything written using Electron (as beautiful as VS Code is). I should note that Visual Studio Code is actually awesome and Microsoft has done amazing work on it.&lt;/p&gt;

&lt;p&gt;But I still love my TextMate.&lt;/p&gt;

&lt;h1 id=&quot;iterm2&quot;&gt;iTerm2&lt;/h1&gt;

&lt;p&gt;While iTerm2 takes some crap for not always fixing bugs, being sometimes &lt;a href=&quot;https://danluu.com/term-latency/&quot;&gt;slow&lt;/a&gt; and a few other failings, I personally find it awesome.  Once again the ability to resume after a crash looms large.  Oddly if I choose to install updates, it can't resume anything so I rarely choose to update it.  Similarly its resumption doesn't work if you exit so if I have to shut it down, well, I use Activity Monitor to kill it and then it brings back all my terminals perfectly.  I wish I could accept the updates but, honestly, decent resume is so wonderful that I can live without them.&lt;/p&gt;

&lt;p&gt;iTerm2 has Tmux integration and decent multi pane support that could theoretically save me from having to be so reliant on Tmuxinator but I've explored it being really happy with Tmux / Tmuxinator.&lt;/p&gt;

&lt;h1 id=&quot;my-iphone--phone-integration&quot;&gt;My iPhone / Phone Integration&lt;/h1&gt;

&lt;p&gt;This one is an absolute killer.  I'm an iPhone user and the integration that Apple has put together is fairly compelling.  Specifically if my wife or kids text me, I can just reply using my laptop and not have to struggle with my fat fingers on a small phone screen.  That one feature is huge for me and after WhatsApp has completely stopped working for me since early 2017, I'm back to using SMS for texting with my family so this is huge.  I used to get around this with a dedicated WhatsApp app on OSX (which I think exist on other platforms).  Given that mobile isn't going to any less important, integration is key and I find it hard to believe that I could ever have a better experience with an iPhone on non Apple hardware.&lt;/p&gt;

&lt;h1 id=&quot;my-pictures--my-data&quot;&gt;My Pictures / My Data&lt;/h1&gt;

&lt;p&gt;Moving between systems is always a lossy operation – you're going to lose something whether it is a much loved app or data that doesn't convert correctly or something else.  Given that I have a decade plus worth of files on OSX, I'm going to lose stuff when I move and just the prospect of that is daunting.&lt;/p&gt;

&lt;h1 id=&quot;one-device&quot;&gt;One Device&lt;/h1&gt;

&lt;p&gt;I used to have a work laptop for coding and then a personal computer for &quot;my data&quot;.  Ever since I switched to OSX, I've had only one device to worry about and that's pretty damn wonderful.  Given that I use an iPhone, if I was to switch away from OSX for my daily coding, I'm likely still going to have OSX in life and that ruins the one device strategy.&lt;/p&gt;

&lt;h1 id=&quot;time-machine&quot;&gt;Time Machine&lt;/h1&gt;

&lt;p&gt;If you weren't a hardcore Mac person when Time Machine shipped you likely don't remember how rarely, if ever, most of us backed up.  I keep one machine constantly backed up with Time Machine and I actually trust it.  I've had only one back up issue with Time Machine since I started using it and that includes reformatting a machine that had every family photo on it ever and Time Machine brought back every drop of data.  Sure there are other backup solutions on other platforms but I &lt;strong&gt;know&lt;/strong&gt; that Time Machine works and that level of trust is pretty important.&lt;/p&gt;

&lt;h1 id=&quot;apple-hardware-is-simply-beautiful-and-lasts&quot;&gt;Apple Hardware is Simply Beautiful and Lasts&lt;/h1&gt;

&lt;p&gt;If you're a PC guy then you may not understand the hardware quality of an Apple box.  While I have lots and lots of issues with Apple at times, I have to admit that their hardware is simply &lt;strong&gt;beautiful&lt;/strong&gt; – and it &lt;strong&gt;lasts&lt;/strong&gt;.  My first 15&quot; Macbook pro, that old 2010 model, it still runs daily as the family Plex server hooked up to like 9 gigs of storage and runs pretty much like a champ.  My 2012 Macbook Pro?  Its still around and working perfectly.  So while the software has issues, the physical hardware is beautiful and durable.  If you're going to use something on a daily basis then it being beautiful isn't a bad thing – I spent a lot of years using Dell and Toshiba hardware and the build quality just sucked.  I used to know that when I heard rattling in my Toshiba's it meant that a screw had come out (again) and that the machine would die shortly thereafter.  Overall the hardware side of my Macs haven't let me down.&lt;/p&gt;

&lt;h1 id=&quot;closing-thoughts-on-software-quality&quot;&gt;Closing Thoughts on Software Quality&lt;/h1&gt;

&lt;p&gt;I should note that software quality problems are rampant in the industry.  Just as an example, if I prematurely abort a test run on RSpec with ctrl+c, well, I lose the cursor in the terminal – and there is nothing I can do to get it back, not clear, not ctrl+k, etc.  I just have to shut down that terminal session.  So it isn't just OSX or the GUI on Ubuntu, it is everywhere and it is a damn pity.&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/osx/2017/07/19/why-i-haven-t-switched-away-from-osx.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/osx/2017/07/19/why-i-haven-t-switched-away-from-osx.html</guid>
        
        <category>osx</category>
        
        <category>linux</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Improving Your Bash Scripting with shellcheck</title>
        <description>&lt;p&gt;I know to the outside world it often appears that a &quot;developer&quot; or &quot;software engineer&quot; knows everything when it comes to &quot;coding&quot; but the reality is that most of us are fairly specialized and we have both strengths and weaknesses.  My personal weaknesses include Bash scripting and current front end technologies (JavaScript, CSS).  Now, even when you have weaknesses, you can still improve them and I'm currently working hard on my Bash skills.  The project at hand is that I'm writing a custom deployer for a stack of software related to a new SAAS app I'm building.&lt;/p&gt;

&lt;p&gt;Bash is one of those technologies that most of us know a little but that small amount of knowledge often prevents you from really learning – you, instead, google about a bit and put some crap into a file with a .sh extension (or that you add an executable bit to and a shebang line) and you think &quot;I know bash&quot;.&lt;/p&gt;

&lt;p&gt;I recently found a tool that dramatically improved my shell scripting and, well, is really what enabled me to write a deployer for Rails apps under Docker using bash.  The tool is called &lt;a href=&quot;https://github.com/koalaman/shellcheck&quot;&gt;shellcheck&lt;/a&gt; and it is a linting tool for bash scripts.&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;Here's how to install it on OSX:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew install shellcheck&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;tutorial-and-examples&quot;&gt;Tutorial and Examples&lt;/h1&gt;

&lt;p&gt;ShellCheck is ridiculously easy to use:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;shellcheck filename &lt;ENTER&gt;&lt;/ENTER&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obviously press ENTER not type it and this will analyze your bash script and give you feedback.  Here are some examples and the errors it found for me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip-10-19-48-2% shellcheck deploy.sh

In deploy.sh line 40:
for host in &quot;${hosts[@]}&quot;; do
^-- SC1009: The mentioned parser error was in this for loop.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This was a problem in overall parsing of the shell script; &lt;a href=&quot;https://github.com/koalaman/shellcheck/wiki/SC1009&quot;&gt;more details&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In deploy.sh line 42:
  for file in &quot;${files[@]}&quot;; do
  ^-- SC1073: Couldn't parse this for loop.
                             ^-- SC1061: Couldn't find 'done' for this 'do'.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here I was missing the done terminator for the loop.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In deploy.sh line 6:
  cmd_output=$(eval $1)
                    ^-- SC2086: Double quote to prevent globbing and word splitting.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Technically I should have been using double quotes around the variable to prevent any issues with globbing / splitting.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;In deploy.sh line 31:
files=(&quot;.env&quot;, &quot;.env.production&quot;, &quot;dockerstats&quot;, &quot;docker-compose.production.yml&quot;)
      ^-- SC2054: Use spaces, not commas, to separate array elements.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I'm a Ruby guy so my natural array syntax has commas between elements.  Here ShellCheck is pointing out that I just need to have spaces between them.&lt;/p&gt;

&lt;h1 id=&quot;more-details--some-good-bash-stuff&quot;&gt;More Details / Some Good Bash Stuff&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;ShellCheck home page: &lt;a href=&quot;https://github.com/koalaman/shellcheck&quot;&gt;https://github.com/koalaman/shellcheck&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hacker News on getting better at bash: &lt;a href=&quot;https://news.ycombinator.com/item?id=14634964&quot;&gt;https://news.ycombinator.com/item?id=14634964&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mywiki.wooledge.org/BashGuide&quot;&gt;Bash Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mywiki.wooledge.org/BashFAQ&quot;&gt;Bash FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 17 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/bash/2017/07/17/improving-your-bash-scripting-with-shellcheck.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/bash/2017/07/17/improving-your-bash-scripting-with-shellcheck.html</guid>
        
        <category>bash</category>
        
        <category>shellcheck</category>
        
        
        <category>bash</category>
        
      </item>
    
      <item>
        <title>JavaScript and CSS Magic for the Rails Front End Challenged using Zoom.js for Image Zooming</title>
        <description>&lt;p&gt;I am, as I have often written, front end challenged.  I grew up on the Internet writing HTML long before JavaScript and CSS and there's that old aphorism about old dogs, new tricks… Happily, the people in my nerd life, offer to teach me a trick or two from time to time and, well, &lt;a href=&quot;https://www.nickjanetakis.com/blog/&quot;&gt;Nick&lt;/a&gt; came thru for me this morning so I thought I'd write it all down.&lt;/p&gt;

&lt;p&gt;The problem at hand was a landing page for a SAAS app with screenshots where it was hard to read the text in the screenshots (think a dense, information packed dashboard).  Nick said to me &quot;those should be zoomable; just &lt;a href=&quot;http://github.com/fat/zoom.js&quot;&gt;zoom.js&lt;/a&gt;&quot;.  I made my usual grumbles about being front end challenged but then realized that I was basically being a &lt;strong&gt;winer&lt;/strong&gt; – and I hate winers, so to work!&lt;/p&gt;

&lt;p&gt;Zoom.js is a combination of CSS and JavaScript that makes an image clickable as a zoomable overlay onto the current page.  It is basically the same as &lt;a href=&quot;https://medium.design/image-zoom-on-medium-24d146fc0c20&quot;&gt;Medium.com&lt;/a&gt;'s image zooming which is a brilliant implementation (thank you Brad Birdsall and the whole Medium team).  And thanks to Github user &lt;a href=&quot;http://www.github.com/fat/&quot;&gt;fat&lt;/a&gt; who actually did the hard work on this.&lt;/p&gt;

&lt;p&gt;It should be noted that Zoom.js is jQuery based which means that it won't work off the bat in Rails 5.1 without the gem 'jquery-rails' line being present in Gemfile.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; I recognize that some of this isn't perfect.  Specifically this library is clearly packaged to be installed by gulp in an automated fashion but I've never had a lot of luck with gulp hence the use below of wget / curl.&lt;/p&gt;

&lt;h1 id=&quot;how-to-add-zoomjs-to-a-rails-application&quot;&gt;How to Add zoom.js to a Rails Application&lt;/h1&gt;

&lt;p&gt;Please note that jQuery has been a core Rails dependency for years and years so steps 1 and 2 likely aren't needed for you.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add jquery to your Rails app if it isn't present.  Add jquery-rails to Gemfile:
&amp;gt; gem 'jquery-rails'&lt;/li&gt;
  &lt;li&gt;Require jquery in your application.js:
&amp;gt; //= require juery&lt;/li&gt;
  &lt;li&gt;Add the data-action=&amp;gt;&quot;zoom&quot; to your image_tag calls for any images you want to be zoomable like this:
&amp;gt; &amp;lt;%=image_tag(&quot;screenshot_dashboard.png&quot;, :class =&amp;gt; &quot;img-responsive&quot;, :alt =&amp;gt; &quot;a dashboard view&quot;, &quot;data-action&quot; =&amp;gt; &quot;zoom&quot;)%&amp;gt;&lt;/li&gt;
  &lt;li&gt;In your terminal, change into the app/assets/stylesheets directory:
&amp;gt; cd app/assets/stylesheets&lt;/li&gt;
  &lt;li&gt;Do a wget or curl on the url for the css.  I got this url by navigating the source tree down to zoom.css and then viewing the file and clicking the raw view:
&amp;gt; wget https://raw.githubusercontent.com/fat/zoom.js/master/css/zoom.css&lt;/li&gt;
  &lt;li&gt;Do a wget or curl on the url for the js.  I got this url by navigating the source tree down to zoom.js and then viewing the file and clicking the raw view:
&amp;gt; https://raw.githubusercontent.com/fat/zoom.js/master/js/zoom.js&lt;/li&gt;
  &lt;li&gt;Add the css and js to your application layout, application.html.erb, with two lines like these (obviously you need to add angle braces around them; my blogging tool eats the text if I show them, alas):&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;link href=&quot;assets/zoom.css&quot; rel=&quot;stylesheet&quot;&lt;/p&gt;

&lt;p&gt;script src=&quot;assets/zoom.js&quot;&lt;/p&gt;

</description>
        <pubDate>Sat, 08 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/rails/2017/07/08/javascript-and-css-magic-for-the-rails-front-end-challenged.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/rails/2017/07/08/javascript-and-css-magic-for-the-rails-front-end-challenged.html</guid>
        
        <category>rails</category>
        
        <category>javascript</category>
        
        <category>css</category>
        
        <category>images</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>How To Be A Developer 001 - Commit</title>
        <description>&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;

&lt;p&gt;I've taken on a new project recently.  I'm helping teach some local (Indianapolis) homeless youth basic software engineering using the web developer curriculum from &lt;a href=&quot;http://www.freecodecamp.com&quot;&gt;Free Code Camp&lt;/a&gt;.  Initially I'm teaching two students and we're working out of the &lt;a href=&quot;https://outreachindiana.org/&quot;&gt;Outreach Indiana&lt;/a&gt; facility in downtown Indianapolis.  Outreach Indiana is a fantastic charity that truly does good work.&lt;/p&gt;

&lt;p&gt;I thought I'd write a series of essays on How to Be a Developer that reflect some of the things I've learned over a career working in high tech.  While I am a fan of what Free Code Camp does, I thought some practical, hands on advice might add some value for my students.  I've structured these as a series of single topic narratives arranged numerically.&lt;/p&gt;

&lt;h1 id=&quot;lesson-001---commit&quot;&gt;Lesson 001 - Commit&lt;/h1&gt;

&lt;p&gt;The topic for my first lesson is that to be a developer you need to &lt;strong&gt;commit&lt;/strong&gt;.  Now I don't mean a &lt;em&gt;git commit&lt;/em&gt; (more on that in #19), what I mean is that the nature of being a developer is &lt;strong&gt;committing to solving problems&lt;/strong&gt;.  I'm going to give you an example of a problem I solved just three days ago:&lt;/p&gt;

&lt;p&gt;Broken:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker-compose -f docker-compose.production.yml exec web bundle exec rake db:migrate&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Working:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker-compose -f docker-compose.production.yml exec -T web bundle exec rake db:migrate&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What these commands do doesn't really matter but the only difference between these two commands is a small &lt;strong&gt;-T&lt;/strong&gt; flag that only discovered after troubleshooting an obscure Ansible to Docker error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Traceback (most recent call last):\n  File \&quot;/usr/bin/docker-compose\&quot;, line 9, in 
&amp;lt;module&amp;gt;\n    load_entry_point('docker-compose==1.8.0', 
'console_scripts', 'docker-compose')()
File \&quot;/usr/lib/python2.7/dist-packages/compose/cli/main.py\&quot;, 
line 61, in main
command()
File \&quot;/usr/lib/python2.7/dist-packages/compose/cli/main.py\&quot;, line 113, 
in perform_command handler(command, command_options)
File \&quot;/usr/lib/python2.7/dist-packages/compose/cli/main.py\&quot;, line 441, in exec_command
pty.start()
File \&quot;/usr/lib/python2.7/dist-packages/dockerpty/pty.py\&quot;, line 338, in start
io.set_blocking(pump, flag)
File \&quot;/usr/lib/python2.7/dist-packages/dockerpty/io.py\&quot;, line 32, 
in set_blocking
old_flag = fcntl.fcntl(fd, fcntl.F_GETFL)\nValueError: file descriptor cannot be a negative integer (-1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It took considerable sleuthing to figure this out and the error was identified in &lt;a href=&quot;https://github.com/docker/compose/issues/3352&quot;&gt;a single Github issue&lt;/a&gt; on the underlying Docker project.  And when I say that this problem was obscure, even Docker experts I know had no idea about the -T flag.  Here's part of the problem description:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;So basically, you need -i for docker exec when you are piping in data to the command.

And you should not use -t for docker exec when you are piping data out from the command.

And docker-compose exec only have -T, which means neither -i or -t. But you cannot represent -i without -t in docker-compose.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that's what I mean by obscure…  As a developer you run into this kind of stuff all the time – there's a reason why when you start with Free Code Camp, it emphasizes using Google before you ever get into a programming language.  A huge part of being a developer is now your skill at using Google and that's something that I'll cover in #11.&lt;/p&gt;

&lt;p&gt;To me the very essence of being a developer is being willing to commit to &lt;strong&gt;problem solving&lt;/strong&gt; at this level.  It means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;accepting that you will continually be encountering new things that you don't know in depth&lt;/li&gt;
  &lt;li&gt;trying hard to understand whatever the problem you encounter&lt;/li&gt;
  &lt;li&gt;researching things in depth, sometimes over and over as the problems shift&lt;/li&gt;
  &lt;li&gt;sometimes solving things by experimenting until you come up with a solution that works&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a developer, sometimes the problem you solve:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;is one of languages where you can't figure out how to do something using your language of choice&lt;/li&gt;
  &lt;li&gt;is one of your tooling where the tool you're using either doesn't work or doesn't work as expected&lt;/li&gt;
  &lt;li&gt;is one of an algorithm where the underlying approach to solving the problem is unclear&lt;/li&gt;
  &lt;li&gt;is an obscure bug which only happens from in certain circumstances; in this case you need to figure out what those circumstances are and how to repeat them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And there are perhaps an infinite number of variants on these but the underlying nature of being a developer is really problem solving and in order to do that a developer has to commit himself or herself fully.  I'm going to close this with a song lyric that really reminds me of being a developer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I get knocked down, but I get up again
You are never gonna keep me down
I get knocked down, but I get up again
You are never gonna keep me down
I get knocked down, but I get up again
You are never gonna keep me down
I get knocked down, but I get up again
You are never gonna keep me down

[TubThumping by Chumbawamba](https://www.google.com/search?q=i+get+knocked+down+lyrics&amp;amp;ie=utf-8&amp;amp;oe=utf-8) | [Youtube](https://www.youtube.com/watch?v=2H5uWRjFsGc)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problems you solve will continually knock you down and you &lt;strong&gt;have&lt;/strong&gt; to get back up again.  Some of the best developers I have ever worked with actually weren't the smartest but they knew how to commit and how to just stick with problems like a terrier until it was solved.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/how_to_be_a_developer/2017/07/02/how-to-be-a-developer-001.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/how_to_be_a_developer/2017/07/02/how-to-be-a-developer-001.html</guid>
        
        <category>how_to_be_a_developer</category>
        
        <category>software_development</category>
        
        
        <category>how_to_be_a_developer</category>
        
      </item>
    
      <item>
        <title>Adding Mosh Support to Your AWS Servers</title>
        <description>&lt;p&gt;Mosh is an open source project that I've been tracking for the past several years as an SSH replacement and it appears that it is finally at a point where it is ready for me to put it into production.  In this tutorial I document the process of installing Mosh client side and server side along with the necessary security group configuration.  In case you're not aware of Mosh, &lt;a href=&quot;https://mosh.org/&quot;&gt;Mosh&lt;/a&gt; is a UDP based addition to SSH which improves the reliability of connecting to your servers, particularly on mobile.  One of the notable benefits of mosh over ssh is that mosh doesn't fill up buffers so a CTRL+C key sequence actually stops things immediately.&lt;/p&gt;

&lt;h1 id=&quot;step-1-installing-the-mosh-client-software&quot;&gt;Step 1: Installing the Mosh Client Software&lt;/h1&gt;

&lt;p&gt;If you're using OSX and HomeBrew then you can install the mosh client software with a simple:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew install mobile-shell&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you use a different platform then you can find installation instructions &lt;a href=&quot;https://mosh.org/#getting&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;step-2-installing-the-mosh-server-software&quot;&gt;Step 2: Installing the Mosh Server Software&lt;/h1&gt;

&lt;p&gt;On an Ubuntu box, Mosh is now much easier to install since the package is covered in the standard repositories:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install mosh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;step-3-opening-your-security-group&quot;&gt;Step 3: Opening Your Security Group&lt;/h1&gt;

&lt;p&gt;The hardest part of all this is actually opening a &lt;em&gt;hole&lt;/em&gt; in your AWS security group to allow the Mosh communications protocol to pass through.  Since ssh is an internet standard, a hole for ssh's port 22 is always open on an AWS security group.  What you have to do for mosh is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open a UDP type&lt;/li&gt;
  &lt;li&gt;Port Range 60000 - 61000&lt;/li&gt;
  &lt;li&gt;Accessible to anywhere (or just your ip address; up to you)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's what your security group settings should look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/mosh_security_group2.png&quot; alt=&quot;mosh_security_group.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's how to get to your AWS security group:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into the AWS console.&lt;/li&gt;
  &lt;li&gt;Select EC2 instances.&lt;/li&gt;
  &lt;li&gt;Scroll down on the left hand sidebar until you see Security Groups.&lt;/li&gt;
  &lt;li&gt;Click the Security Group links and then select the group you want to modify from the list at the top.&lt;/li&gt;
  &lt;li&gt;Select the Inbound tab and then click the Edit button.&lt;/li&gt;
  &lt;li&gt;Scroll to the bottom and then click Add Rule and define the rule per the screenshot above.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;step-4-an-ansible-role-for-provisioning-your-server&quot;&gt;Step 4: An Ansible Role for Provisioning Your Server&lt;/h1&gt;

&lt;p&gt;Here is a simple ansible role for adding mosh support to your server using Ansible as provisioning tool:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- name: install mosh
  apt: pkg=mosh state=present
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By adding this role into whatever you use for a bootstrapping task, you can add mosh support to all your boxes with one command.  And, if you used a single security group for all your AWS instances, that may be the only thing to you need to make all boxes accessible by mosh instead of ssh.&lt;/p&gt;

&lt;h1 id=&quot;step-5-an-example-of-moshing-in-using-an-aws-pem-file&quot;&gt;Step 5: An Example of &quot;moshing in&quot; Using an AWS Pem File&lt;/h1&gt;

&lt;p&gt;I ssh in to my AWS boxes using a command like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ssh -i ~/.ssh/fuzzygroup2.pem ubuntu@xyz.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the Mosh equivalent:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mosh –ssh=&quot;ssh -i ~/.ssh/fuzzygroup2.pem&quot; ubuntu@xyz.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My thanks (and an upvote) to &lt;a href=&quot;https://serverfault.com/questions/825173&quot;&gt;Server Fault&lt;/a&gt; for answering this part of it.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Jul 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/aws/2017/07/02/adding-mosh-support-to-your-aws-servers.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/aws/2017/07/02/adding-mosh-support-to-your-aws-servers.html</guid>
        
        <category>aws</category>
        
        <category>mosh</category>
        
        <category>devops</category>
        
        <category>osx</category>
        
        <category>ansible</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Beware Docker Swarm</title>
        <description>&lt;p&gt;I have previously mentioned that I was using Docker Swarm and fairly happy with it.  I even went so far as to document the &lt;a href=&quot;http://fuzzyblog.io/blog/devops/2017/06/20/no-ci-and-no-cd-deploying-docker-swarm-with-bash-and-ansible.html&quot;&gt;deploy process&lt;/a&gt;.  I now have to retract everything positive I said about Docker Swarm.  I have now reverted to just using Docker and Docker Compose and bare containers with an AWS ELB on top of it.  Here's why:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I attempted to have multiple apps with Docker Swarm on the same instance.  Nothing seemed to work and I had continuous troubles including containers running out of memory and the instance itself becoming hugely unresponsive.  This led me to the conclusion that Docker Swarm wasn't really ready for production.&lt;/li&gt;
  &lt;li&gt;On the instance where I had previously used Docker Swarm I disabled the swarm functionality and attempted to use the instance just for raw containers.  This utterly failed with no http services (puma) being able to serve content but no clear errors either (i.e. the request wasn't even getting to the http server).  Digging into it deeper showed that Docker Swarm had left all kinds of digital garbage in iptables.  So I flushed that with a sudo iptables –flush and did a fresh deploy of the containers.  This still failed.&lt;/li&gt;
  &lt;li&gt;Finally I built a new instance from scratch and assigned that instance the same ip address as the instance referenced in #2 and did another deploy.  The result?  The container worked perfectly on the very first try.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;My final conclusions are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Swarm isn't ready for production use.&lt;/li&gt;
  &lt;li&gt;If you have to use Swarm then put only one &quot;stack&quot; on a physical instance.&lt;/li&gt;
  &lt;li&gt;Don't try and use raw containers on a swarm box that aren't using swarm.&lt;/li&gt;
  &lt;li&gt;If you want to stop using swarm then, well, destroy the instance; do not waste time trying to use the instance for another Docker related thing - something is fundamentally wrong at the box level after Docker Swarm is shut down.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In closing I'd like to point out that I am still using containers and I am finding a lot of luck with docker-compose.  This is not an anti docker blog post but, rather, an anti Docker Swarm blog post.&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Jun 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/06/28/beware-docker-swarm.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/06/28/beware-docker-swarm.html</guid>
        
        <category>docker</category>
        
        <category>swarm</category>
        
        <category>devops</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Docker Tutorial Understanding Container Memory Usage</title>
        <description>&lt;p&gt;I know that it might seem like in 2017, in our new container centric world, that understanding memory usage on a per container basis isn't all that necessary but my recent experiences with my side project are, sorely, disagreeing with that.&lt;/p&gt;

&lt;p&gt;I'm developing a SAAS product where I've firmly and irrevocably broken the traditional Rails monolithic development model.  So rather than have one giant Rails app, I have multiple Rails apps – the promotional website, the crawler, the admin tool and so on.  .  My current deployment model is Docker containers and each Rails app is represented by a container stack.  For cost reasons I want to use resources efficiently allowing multiple container stacks to exist on the same host.  This requires understanding our low level memory usage so here goes…&lt;/p&gt;

&lt;p&gt;Note: All of this is being done on AWS under Ubuntu 16.04 using docker-compose 1.8&lt;/p&gt;

&lt;h1 id=&quot;box-level-memory&quot;&gt;Box Level Memory&lt;/h1&gt;

&lt;p&gt;Use free -m to find out the current memory status of your box:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;free -m&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;              total        used        free      shared  buff/cache   available
Mem:           1998        1163          90          22         743         554
Swap:             0           0           0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;docker-container-memory&quot;&gt;Docker Container Memory&lt;/h1&gt;

&lt;p&gt;Use docker stats to get the low level container memory usage:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker stats&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CONTAINER           CPU %               MEM USAGE / LIMIT       MEM %               NET I/O             BLOCK I/O           PIDS
a5251659f7c9        0.23%               15.29 MiB / 1.952 GiB   0.76%               35.5 MB / 20.3 MB   1.35 MB / 40.5 MB   3
59ce2ad1dc64        0.01%               257.8 MiB / 1.952 GiB   12.90%              25.6 MB / 33.9 MB   143 kB / 0 B        6
b4aaa4c36791        64.55%              237 MiB / 1.952 GiB     11.86%              639 MB / 115 MB     3.39 MB / 4.1 kB    14
a7c039f80931        0.00%               199.8 MiB / 1.952 GiB   10.00%              152 kB / 1.22 MB    1.2 MB / 0 B        23
ee27a6e37fef        0.00%               131.4 MiB / 1.952 GiB   6.57%               1.22 MB / 2.33 MB   26.9 MB / 0 B       6
07d5252abf5f        0.00%               196.6 MiB / 1.952 GiB   9.84%               127 kB / 689 kB     1.63 MB / 0 B       23
4aa705c8cf4b        0.07%               6.234 MiB / 1.952 GiB   0.31%               9.11 kB / 1.94 kB   0 B / 0 B           3
78f495fcf733        0.06%               6.922 MiB / 1.952 GiB   0.35%               145 MB / 91.1 MB    766 kB / 2.97 MB    3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you wanted to reduce the amount of output to the bare essentials then try:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker stats –format &quot;table \t\t&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CONTAINER           CPU %               MEM USAGE / LIMIT
a5251659f7c9        0.10%               15.29 MiB / 1.952 GiB
59ce2ad1dc64        0.01%               239.1 MiB / 1.952 GiB
b4aaa4c36791        21.33%              478.5 MiB / 1.952 GiB
a7c039f80931        0.01%               251.1 MiB / 1.952 GiB
ee27a6e37fef        0.00%               109 MiB / 1.952 GiB
07d5252abf5f        0.00%               250.9 MiB / 1.952 GiB
4aa705c8cf4b        0.05%               6.234 MiB / 1.952 GiB
78f495fcf733        0.05%               6.664 MiB / 1.952 GiB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now the clear and obvious problem here is that a5251659f7c9 or 59ce2ad1dc64 mean &lt;strong&gt;absolutely nothing&lt;/strong&gt; to us.
# But What is a5251659f7c9 or Understanding Docker Process IDs?&lt;/p&gt;

&lt;p&gt;The a5251659f7c9 is a Docker process id and you need to grep the docker process list to find out.  Docker process ids change with every single container  deploy so you always have to look them up with the &lt;em&gt;docker ps&lt;/em&gt; command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep a5251659f7c9
a5251659f7c9        redis:3.2-alpine  &quot;docker-entrypoint...&quot;   27 minutes ago      Up 27 minutes       0.0.0.0:32771-&amp;gt;6379/tcp   seiracrawler_redis_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So the way to interpret all this is the docker container with process id a5251659f7c9 corresponds to the named container seiracrawler_redis_1 and is using 15.29 mb RAM and 0.23% CPU.&lt;/p&gt;

&lt;h1 id=&quot;putting-it-all-together---dockerstats&quot;&gt;Putting it All Together - dockerstats&lt;/h1&gt;

&lt;p&gt;If you're thinking that this two step process, well, &lt;strong&gt;sucks&lt;/strong&gt;, yep.  I took a pass at cleaning this up into a single shell script but I found my bash skills, sadly weren't up to it.  Happily I did additional research and managed to put this together from some things I found on the web:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
docker stats --format &lt;span class=&quot;s2&quot;&gt;&quot;table &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker ps|grep -v &lt;span class=&quot;s2&quot;&gt;&quot;NAMES&quot;&lt;/span&gt;|awk &lt;span class=&quot;s1&quot;&gt;'{ print $NF }'&lt;/span&gt;|tr &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you put this into a shell script named dockerstats and then make it executable with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;chmod +x dockerstats&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;then you'll have a single shell script that produces this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CONTAINER                                            CPU %               MEM USAGE / LIMIT
seiracrawler_redis_1                                 0.12%               15.29 MiB / 1.952 GiB
seiracrawler_rake_1                                  0.01%               239.1 MiB / 1.952 GiB
seiracrawler_sidekiq_1                               11.99%              480.5 MiB / 1.952 GiB
seirawatchsite_web.2.3x1bx3ji93hueuidv4dgfeab3       0.00%               251.1 MiB / 1.952 GiB
seirawatchsite_sidekiq.1.8nxcvjx353725lsv70h72mzup   0.10%               109 MiB / 1.952 GiB
seirawatchsite_web.1.rxbzptnfuopfauqwjf4ib4bjr       0.01%               250.9 MiB / 1.952 GiB
seiraadmin_redis.1.ws2hc37dihkbh0cejk6z75140         0.06%               6.234 MiB / 1.952 GiB
seirawatchsite_redis.1.siatex4zd6xezsevxfk4no98n     0.09%               6.664 MiB / 1.952 GiB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You'll seem some redundancy here because one my Docker installations on this particular box is using Docker Swarm (not recommended btw) and there are  replicas of some of the containers due to my swarm configuration.&lt;/p&gt;

&lt;p&gt;Personally I think this functionality is important enough that I've added it to my deploy process on all my boxes running Docker and I'll recommend the same to all my clients.&lt;/p&gt;

&lt;p&gt;If you just want the dockerstats shell script, here is a &lt;a href=&quot;https://gist.github.com/fuzzygroup/e000a972a999b406a38557324e11d1c0&quot;&gt;gist with it&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;Extracting just a section of the Docker stats output came from the official Docker docs for &lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/stats/#formatting&quot;&gt;Docker Stats&lt;/a&gt;.  Feeding the output from Docker Stats to a docker ps grep statement came from a &lt;a href=&quot;https://github.com/moby/moby/issues/10772&quot;&gt;github issue on moby&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 25 Jun 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/docker/2017/06/25/docker-tutorial-understanding-container-memory-usage.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/docker/2017/06/25/docker-tutorial-understanding-container-memory-usage.html</guid>
        
        <category>docker</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Using Ansible on Ubuntu 16.04 When which python Fails</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.ansible.com&quot;&gt;Ansible&lt;/a&gt; is my favorite devops tool.  I've used &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt; extensively and despite my Ruby background, well, I hated it.  I've slutted around with &lt;a href=&quot;https://www.terraform.io&quot;&gt;TerraForm&lt;/a&gt;; I've played with &lt;a href=&quot;https://puppet.com&quot;&gt;Puppet&lt;/a&gt; and I've put &lt;a href=&quot;https://saltstack.com&quot;&gt;Salt&lt;/a&gt; on my food and servers but time in and time out, I always come back to Ansible.  I even like Ansible enough that I wrote about it recently on &lt;a href=&quot;https://www.quora.com/What-do-I-need-to-study-before-studying-Ansible-Im-from-a-networking-background-and-we-like-to-do-automation-via-Ansible/answer/Scott-Johnson-16&quot;&gt;a Quora post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the beautiful things about Ansible is that it &lt;strong&gt;does not&lt;/strong&gt; require a server side agent.  Ansible works via SSH purely and that means that as long as you can login to the server then you can use Ansible to provision it, update it, deploy stuff, etc.&lt;/p&gt;

&lt;p&gt;I just deployed my first ever Ubuntu 16.04 LTS box on AWS the other day and one of my surprises was that a which python &lt;strong&gt;failed&lt;/strong&gt;.  Oy vey.  This means that you can't use Ansible without installing Python – or so I thought.  Happily a bit of googling and I discovered the &lt;a href=&quot;https://docs.ansible.com/ansible/python_3_support.html&quot;&gt;ansible_python_interpreter&lt;/a&gt; option which lets you override the default of Python 2 and use Python 3.  This gets, oddly, embedded in the inventories file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[web]
site1 ansible_ssh_host=foo.com

[web:vars]
ansible_python_interpreter=/usr/bin/python3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The way to interpret this is all boxes in the [web] group use the /usr/bin/python3 executable.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Jun 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io/blog/ansible/2017/06/20/using-ansible-on-ubuntu-16-04-when-which-python-fails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io/blog/ansible/2017/06/20/using-ansible-on-ubuntu-16-04-when-which-python-fails.html</guid>
        
        <category>ansible</category>
        
        <category>devops</category>
        
        
        <category>ansible</category>
        
      </item>
    
  </channel>
</rss>
