<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 24 Jan 2017 07:05:00 -0500</pubDate>
    <lastBuildDate>Tue, 24 Jan 2017 07:05:00 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>So you want to develop a json API</title>
        <description>&lt;p&gt;http://json.org/example.html&lt;/p&gt;

&lt;p&gt;http://jsonlint.com/&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 06:18:46 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/24/so-you-want-to-develop-a-json-api.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/24/so-you-want-to-develop-a-json-api.html</guid>
        
        
      </item>
    
      <item>
        <title>Decommissioning a Data Center</title>
        <description>&lt;p&gt;Here’s what you want to do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;on each user account dump the command history history &amp;gt; /backup_device/username_command_history.txt&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 04:37:48 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/24/decommissioning-a-data-center.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/24/decommissioning-a-data-center.html</guid>
        
        
      </item>
    
      <item>
        <title>Rails Tutorial - Making Font Awesome Work with Rails 5</title>
        <description>&lt;p&gt;Like a lot of back end folks I suspect I’m not alone when I look at a project like Font Awesome and go “Great Work; damn if I know how to actually use that.”  I’d normally toss it over the wall to a front end guy like my buddy &lt;a href=&quot;http://dv2.dasari.me&quot;&gt;Dv&lt;/a&gt; but this is for my side project so I’m all alone on this one.  Since I really, really don’t feel that I understand the world of front end work and CSS / SCSS very well I thought I’d write it all down for you (and myself).&lt;/p&gt;

&lt;h1 id=&quot;heres-what-not-to-do&quot;&gt;Here’s what not to do&lt;/h1&gt;

&lt;p&gt;I took a number of wrong steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I watched this &lt;a href=&quot;https://www.youtube.com/watch?v=RC_jIGABW-E&quot;&gt;video&lt;/a&gt; and it is really good – except for the specific steps he gave me didn’t work.  I really don’t understand why and it might have been me.&lt;/li&gt;
  &lt;li&gt;I used the &lt;a href=&quot;https://github.com/FortAwesome/font-awesome-sass&quot;&gt;font-awesome-sass gem&lt;/a&gt; and it too failed me hard.&lt;/li&gt;
  &lt;li&gt;Don’t follow the Stack Overflow post &lt;a href=&quot;http://stackoverflow.com/questions/37581599/rails-assets-is-having-issues-with-my-fonts&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In all of the above cases I got the error &lt;strong&gt;No route matches [GET] “/assets/fontawesome-webfont.ttf”&lt;/strong&gt; and I just couldn’t get past it.  The Stack Overflow post might have ultimately gotten me there but it did take me to a different gem – font-awesome-rails discussed in the next section.&lt;/p&gt;

&lt;p&gt;You should note that I don’t meant to malign any fo the urls in above – I’m not a css / front end guy by any means.  All I did was some simple googles and the processes I was taken through ultimately didn’t work and I blew over an hour of development time to find that out.&lt;/p&gt;

&lt;h1 id=&quot;heres-what-to-do&quot;&gt;Here’s What To Do&lt;/h1&gt;

&lt;p&gt;What you actually need is to do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install the &lt;a href=&quot;https://github.com/bokmann/font-awesome-rails&quot;&gt;font-awesome-rails&lt;/a&gt; gem.  Just add &lt;strong&gt;gem “font-awesome-rails”&lt;/strong&gt; to your Gemfile and then do the bundle install dance.&lt;/li&gt;
  &lt;li&gt;In your application.css.scss file add the line: &lt;strong&gt;@import “font-awesome”;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Stop and start your rails server.&lt;/li&gt;
  &lt;li&gt;Add to a test .html.erb view file this line**: fa_icon “camera-retro” ** (you’ll probably need to enclose that in output tags using %= and angle braces)&lt;/li&gt;
  &lt;li&gt;Render that test .html.erb view file in your browser and you should see a camera icon.  What this is doing behind the scenes is outputting this html: &lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;useful-resources&quot;&gt;Useful Resources&lt;/h1&gt;

&lt;p&gt;Here are some important urls:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/icons/&quot;&gt;The Icon Search Page for Font Awesome&lt;/a&gt; - Use this to search for the icon you need.  This is the most useful page on their site.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/&quot;&gt;Font Awesome Home Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bokmann/font-awesome-rails&quot;&gt;Font Awesome Rails Gem&lt;/a&gt; -&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome&quot;&gt;The Font Awesome Github Project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/cheatsheet/&quot;&gt;The Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12468359/using-font-awesome-icon-for-bullet-points-with-a-single-list-item-element&quot;&gt;Useful Example of Font Awesome at the HTML Level&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/icon/search/&quot;&gt;Example of Using the Search Icon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/examples/&quot;&gt;The General Examples Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fontawesome.io/get-started/&quot;&gt;The Getting Started Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://glyphsearch.com/?query=x&quot;&gt;Another Way to Search for an Icon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/01/24/rails-tutorial-making-font-awesome-work-with-rails-5.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/01/24/rails-tutorial-making-font-awesome-work-with-rails-5.html</guid>
        
        <category>tutorial</category>
        
        <category>font_awesome</category>
        
        <category>hyde</category>
        
        <category>rails</category>
        
        <category>css</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>How to Handle Your Personal Taxes when You Are Startup Folk</title>
        <description>&lt;p&gt;Please note the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This is a U.S. centric post; I don’t know how taxes work anywhere but here&lt;/li&gt;
  &lt;li&gt;This post assumes that you have an accountant to help you&lt;/li&gt;
  &lt;li&gt;This post documents what I personally had to go through on 1/23/17 to get my personal deductions together and I wrote it, honestly, because next year I’ll have to go thru the same process and this is the first time since 1987 that I feel good about the process I used.&lt;/li&gt;
  &lt;li&gt;I am not an account and you should really talk to your own accountant.  This is the process that I have followed for years and since this year I actually did it well, I thought it was worth sharing.  Taking tax advice from a stranger on the Internet, well, your mileage may vary (YMMV).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you fall into that vague category of &lt;em&gt;startup folk&lt;/em&gt; – entrepreneurs, founding engineers, etc – organizing your personal taxes is a bloody disaster.  I spend money all year long that should generally fall into the category of business deductions.  Normally I don’t pay all that much attention and just treat it as a loss.  This year I’ve got some additional tax concerns so I actually got serious and really &lt;strong&gt;itemized hard&lt;/strong&gt;.  Here’s how I did it.&lt;/p&gt;

&lt;h1 id=&quot;what-you-need&quot;&gt;What You Need&lt;/h1&gt;

&lt;p&gt;Here is what you need:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Access to every single email account that you used where a receipt might accumulate&lt;/li&gt;
  &lt;li&gt;Access to all the online services that don’t always send receipts&lt;/li&gt;
  &lt;li&gt;File folders&lt;/li&gt;
  &lt;li&gt;Paper&lt;/li&gt;
  &lt;li&gt;Pen&lt;/li&gt;
  &lt;li&gt;Time&lt;/li&gt;
  &lt;li&gt;Willpower; this is an incredibly draining process&lt;/li&gt;
  &lt;li&gt;A printer&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;reminder---use-the-gmail-and-amazon-print-view&quot;&gt;Reminder - Use the gmail and Amazon Print View&lt;/h1&gt;

&lt;p&gt;When you are printing stuff from gmail you should use the printer icon to get a print view.  This renders much better when it is available and uses less paper.  There is also a specific print view for Amazon orders that is better than the default.&lt;/p&gt;

&lt;h1 id=&quot;a-brief-tax-rant&quot;&gt;A Brief Tax Rant&lt;/h1&gt;

&lt;p&gt;Taxes are my least favorite thing in the whole wide world.  I find the U.S. tax code byzantine in its complexity and entirely unfair.  As I see it, the core principles of taxation are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Everyone should contribute&lt;/li&gt;
  &lt;li&gt;Taxes should be understandable by everyone since they are imposed on everyone&lt;/li&gt;
  &lt;li&gt;Every dollar should flow through the tax mill once and only once&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The U.S. tax code violates every one of these core taxation concepts.  Now, that said, it is important to note that while I don’t like it, I also believe in being 100% honest and I never want to be audited so the trick here is meticulous documentation.  There is nothing wrong with a $2.31 AWS bill being deductible – but you have to document it.  That’s why #8 above is a printer – I made physical paper copies of every single expense.&lt;/p&gt;

&lt;h1 id=&quot;step-1-create-a-physical-artifact-for-each-expense-category&quot;&gt;Step 1: Create a Physical Artifact For Each Expense Category&lt;/h1&gt;

&lt;p&gt;Taxes are important because if you screw them up, the tax man can make your life a living hell.  My father has been audited, every year, for over a decade.  And nothing ever happens to him but, to my mind, that’s flying far too close to the sun.  And when something is as important as taxes then you handle it with a physical artifact because physical artifacts last.&lt;/p&gt;

&lt;p&gt;My first step was to create a representation of each category.  In my case that was a single sheet of white printer paper with the category name on it.  So I had a stack of pages like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hardware&lt;/li&gt;
  &lt;li&gt;Software&lt;/li&gt;
  &lt;li&gt;Office Supplies&lt;/li&gt;
  &lt;li&gt;Online Services&lt;/li&gt;
  &lt;li&gt;Conferences&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-2-write-down-what-you-remember&quot;&gt;Step 2: Write Down What You Remember&lt;/h1&gt;

&lt;p&gt;The next step is that you want to write down on each representation what you remember as big ticket items.  So, for example, I wrote down these:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Hardware&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Intel NUC&lt;/li&gt;
      &lt;li&gt;MacBook Pro&lt;/li&gt;
      &lt;li&gt;Dell Widescreen Monitor&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Software&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Ruby Motion&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Conferences&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Elixir Con&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I suspect that these few expenses covered maybe 70% of my year.  And by writing them down I’m at least guaranteeing that I’ll look for them.  When you’re a member of the startup tribe, well, life is fast paced and it is easy to forget about things.&lt;/p&gt;

&lt;h1 id=&quot;step-3-start-with-email&quot;&gt;Step 3: Start with Email&lt;/h1&gt;

&lt;p&gt;Take your first email account and run a search for the keyword &lt;strong&gt;receipt&lt;/strong&gt;.  You might also, if you use gmail, want to look at your purchases label that Google sets up for you.  You will find that this process is exhausting because you are likely going to look at hundreds of different emails.  As you find each receipt then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Print it out&lt;/li&gt;
  &lt;li&gt;Put it in the right category&lt;/li&gt;
  &lt;li&gt;Add it to a tally sheet or a spreadsheet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the key idea – &lt;strong&gt;nothing is too small&lt;/strong&gt;.  If you bought a $10 USB stick and it was actually for business yes, well, then you should deduct it.&lt;/p&gt;

&lt;p&gt;You need to do this for every single email account.&lt;/p&gt;

&lt;h1 id=&quot;step-4-access-every-ongoing-online-service&quot;&gt;Step 4: Access Every Ongoing Online Service&lt;/h1&gt;

&lt;p&gt;In the era of cloud services, we all have a frightening amount of monthly fees.  What you want to do here is log into each one and get a print out of either each receipt or the main receipt index.  Here’s an example from the outstandingly good GoRails site:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/go_rails_invoicing.png&quot; alt=&quot;go_rails_invoicing.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On your Online Services page you want to add a entry for “Go Rails” (or whatever) and then a total ($51) and a date (2016).  You need to do this for every single online service.&lt;/p&gt;

&lt;h1 id=&quot;step-5-review-every-single-thing-from-amazon&quot;&gt;Step 5: Review Every Single Thing from Amazon&lt;/h1&gt;

&lt;p&gt;This is the big, hard one.  Amazon does a brilliant job of making your order information available to you and that is excellent but you still have to go thru it yourself and remember “Ok that hard drive – was that for my kid’s Xbox or is it on my desk?”.  But, if you are anything like me, you’ll find that there are a lot of small business purchases lumped in with your personal purchases.&lt;/p&gt;

&lt;p&gt;If you use Amazon a lot then you’ll find that you have a large number of orders to sort thru.  I had &lt;strong&gt;41&lt;/strong&gt; pages of orders to sort through for the year of 2016.&lt;/p&gt;

&lt;h1 id=&quot;step-6-aws&quot;&gt;Step 6: AWS&lt;/h1&gt;

&lt;p&gt;I didn’t find many, if any, receipts for AWS in my email so I logged into my AWS console separately and went thru that manually.&lt;/p&gt;

&lt;h1 id=&quot;step-7-think-hard-and-iterate-again&quot;&gt;Step 7: Think Hard and Iterate Again&lt;/h1&gt;

&lt;p&gt;The final step here is actually the hardest – you need to think and think hard about what you did over an entire year and what might actually be tax deductible.  It is almost certain that you will have forgotten something so think long and hard.  If you come up with something then follow the process above.&lt;/p&gt;

&lt;h1 id=&quot;step-8-the-result&quot;&gt;Step 8: The Result!&lt;/h1&gt;

&lt;p&gt;At the end of the process here’s what the floor of my office looked like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/tax_hell.jpg&quot; alt=&quot;tax_hell.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All I have to do now is summarize the tally sheet on top and give it to my accountant.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/startup/2017/01/24/how-to-handle-your-personal-taxes-when-you-are-startup-folk.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/startup/2017/01/24/how-to-handle-your-personal-taxes-when-you-are-startup-folk.html</guid>
        
        <category>startup</category>
        
        <category>taxes</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>So You Want to Build a SAAS App - The User Account Page</title>
        <description>&lt;p&gt;So once again I find myself designing a SAAS (software as a service) Account page.  This is the page that represents the user’s account.  Conceptually this should be a pretty simple page – it might have options for updating their billing credentials or changing aspects of their user profile.&lt;/p&gt;

&lt;p&gt;This isn’t my first time at this particular rodeo – a SAAS app.  I’ve done this at least twice before.  The last subscription billing system I implemented processed over 13,000 payments and collected over 3.5 million dollars using BrainTree’s API.  And if I was going to follow how I designed this in the past, it would be a piece of cake – I’d implement a simple page that let’s you update your billing credentials and be done with it.&lt;/p&gt;

&lt;p&gt;But we’re now in 2017.  The billing system I referenced above I first built in 2010 and &lt;strong&gt;times have changed&lt;/strong&gt;.  In specific we now have a much, much better understanding of  the importance of preventing user cancellations.  Users that cancel their accounts wreak havoc on your overall SAAS profitability because you never, ever want to lose a customer.  So if a customer is going to cancel then you at least want to try and address it up front by illustrating the value of your SAAS product to them.&lt;/p&gt;

&lt;p&gt;So my initial thinking on this is that you want your Account page to have highlighted at the top an indicator of the value that you are delivering to the user.  And I suspect that if you can actually measure the economic value of what you do then you actually might want to do that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You have used XYZ N times and it has prevented 15 serious errors, 4 minor errors and generated 12 blah for you.  Each of these errors generally takes 3 minutes to resolve so we have saved you over &lt;strong&gt;1 hour&lt;/strong&gt; of your very, valuable time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You might also display some metrics about how much data the user has used / stored with your SAAS product.&lt;/p&gt;

&lt;p&gt;Given that pretty much all of us use some type of SAAS product these days I thought it might be illustrative to look at the account page for two products: &lt;a href=&quot;https://pinboard.in/&quot;&gt;PinBoard&lt;/a&gt; and &lt;a href=&quot;https://gorails.com/&quot;&gt;Go Rails&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am an absolutely unabashed &lt;strong&gt;fan&lt;/strong&gt; of both of these products.  PinBoard is a bookmarking service that is actually worth paying for – it rose to prominence when Yahoo decided to shut down Delicious and I’ve been a paying subscriber for the past year.  The founder, Maciej, has an absolutely delightful &lt;a href=&quot;https://blog.pinboard.in/&quot;&gt;blog&lt;/a&gt; and he is ridiculously open about &lt;a href=&quot;https://blog.pinboard.in/2014/11/new_pricing_policy/&quot;&gt;everything&lt;/a&gt;.  GoRails is the philosophical success to Ryan Bates’ RailsCasts and Chris Oliver does a really, really stellar job.  I don’t use it every day but when I need to learn something I hit the &lt;a href=&quot;https://gorails.com/episodes&quot;&gt;episodes&lt;/a&gt; link and it always teaches me something.  Honestly I learned how to work with the Stripe API for this project from Chris.&lt;/p&gt;

&lt;p&gt;Here is a picture of the PinBoard account page:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/saas_product_account_page_pinboard.png&quot; alt=&quot;pinboard account page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I think Maciej did a great, great job on this page.  Every time I look at it I’m reminded of how valuable pinboard can be.  I’m sure there are subtle improvements that could be made but this is greate.&lt;/p&gt;

&lt;p&gt;Here are pictures of the GoRails account page.  I had to break it into top and bottom sections since it was higher than the actual screen size.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/saas_product_account_page_gorails_top.png&quot; alt=&quot;gorails account page top&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/saas_product_account_page_gorails_bottom.png&quot; alt=&quot;gorails account page bottom&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Even tho this page doesn’t emphasize how valuable GoRails can be, I think that Chris did a great job here.  I specifically like how this page was clearly intentionally designed to minimize support requests for receipts.  I’m going to steal that idea.  When you are running a solo SAAS business, everything needs to be designed to minimize customer support and being able to just say “Click the account link and download any receipt you want” is a nice bit of text to easily send in an email.&lt;/p&gt;

</description>
        <pubDate>Mon, 23 Jan 2017 05:54:40 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/startup/2017/01/23/so-you-want-to-build-a-saas-app-the-user-account-page.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/startup/2017/01/23/so-you-want-to-build-a-saas-app-the-user-account-page.html</guid>
        
        <category>startup</category>
        
        <category>saas</category>
        
        <category>hyde</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>If I Was a Traveling Musician</title>
        <description>&lt;p&gt;My friend David Rovics, on his blog and email newsletter, &lt;a href=&quot;http://songwritersnotebook.blogspot.com/2017/01/why-do-they-keep-begging.html&quot;&gt;laments the loss of CDs as a revenue stream for the traveling musician&lt;/a&gt;.  I’m not a traveling musician but I suspect that he is absolutely right.  As I gaze across my desk of computing hardware:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/my_desk.jpg&quot; alt=&quot;my_desk.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;there is only 1 device capable of playing CDs and it is a 2010 era MacBook Pro (it is actually in a stand behind everything so even tho it can play CDs, I can’t reach the slot easily).&lt;/p&gt;

&lt;p&gt;If you’re at all interested in the indie music scene / folk music / songs of protest then &lt;a href=&quot;http://songwritersnotebook.blogspot.com/&quot;&gt;David&lt;/a&gt; is a fascinating read.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: David is a friend and he and I grew up together.  We don’t share a wit of political ideology - he is as far left as it gets and I’m a staunch startup / technology believer but America was built on people being allowed to disagree and it all making us stronger.  If I want to be able to believe what I hold dear then he &lt;strong&gt;has&lt;/strong&gt; to be able to believe as he chooses.  In these divisive times it feels like this has been forgotten.&lt;/p&gt;

&lt;p&gt;Anyway, David is making the point that CDs don’t sell like they used to and that makes his touring much, much harder since a key revenue source has diminished.  He terms it a post-CD reality and, yep – that makes sense.  People aren’t buying the discs, I suspect, because outside of the car they don’t have a way to play them.  Why should you buy them if you can’t play them?  And I know the feeling because I belong to &lt;a href=&quot;http://www.davidrovics.com/subscribe/&quot;&gt;David’s Community Supported Art (CSA)&lt;/a&gt; program and I just got a batch of CDs recently.  And I know that I put them right in the car.  But even there, they &lt;strong&gt;may not&lt;/strong&gt; get played - most of my music in the car comes from either a USB stick or XM Radio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I think that a touring musician offering a physical artifact like a CD for sale is a great thing.  People do spend money for physical artifacts to support an artist but I suspect that they won’t spend money when they flat out can’t use it at all.  Just for example, there’s only 1 other CD player in our whole house.&lt;/p&gt;

&lt;h1 id=&quot;sidebar-the-miracle-of-things-being-10x-easier&quot;&gt;Sidebar: The Miracle of Things Being 10x Easier&lt;/h1&gt;

&lt;p&gt;One of the tenets of the technology world that I’ve always believed is that when you make something literally &lt;em&gt;10x easier to use&lt;/em&gt; then it is a f&lt;em&gt;undamentally different&lt;/em&gt; thing.  As an example, I’ve recently been experimenting quite a bit with the &lt;a href=&quot;https://www.amazon.com/Amazon-Echo-Bluetooth-Speaker-with-WiFi-Alexa/dp/B00X4WHP5E&quot;&gt;Amazon Echo&lt;/a&gt; / Alexa service.  My test case for it is actually playing music and even though I’m not really a music person, with Alexa, the simple fact that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I don’t have to mess with my phone&lt;/li&gt;
  &lt;li&gt;I don’t have to fight with BlueTooth pairing&lt;/li&gt;
  &lt;li&gt;I don’t have to screw with iTunes&lt;/li&gt;
  &lt;li&gt;I don’t have to plug in a cable&lt;/li&gt;
  &lt;li&gt;I don’t have to pick from a library of thousands of tracks&lt;/li&gt;
  &lt;li&gt;I can say “Alexa play the doors”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;makes a music playing experience that is literally &lt;strong&gt;10x easier than a CD&lt;/strong&gt; (CDs get lost, damaged, don’t always have metadata, need to be imported into iTunes, etc).&lt;/p&gt;

&lt;h1 id=&quot;so-what-is-easier-than-a-cd&quot;&gt;So What is Easier than a CD?&lt;/h1&gt;

&lt;p&gt;The answer here to my mind is simple – &lt;strong&gt;a USB stick&lt;/strong&gt; dramatically improves on the listening experience:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It works in almost any computer out of the box (with new Macintoshes it needs a dongle)&lt;/li&gt;
  &lt;li&gt;Even a cheap 4 gig USB stick can hold tons of music&lt;/li&gt;
  &lt;li&gt;There is an advertising / promotion opportunity to lower your costs by allowing other artists music to be on there&lt;/li&gt;
  &lt;li&gt;Songs can be easily dragged into iTunes&lt;/li&gt;
  &lt;li&gt;Metadata and album art could actually be correct&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The problem with a USB stick is that it is &lt;strong&gt;static&lt;/strong&gt; and indie musicians are constantly making new music – even I know that’s part of the attraction.  A low volume artist like David doesn’t want to invest in say 100 usb sticks and then find that they are out of date.&lt;/p&gt;

&lt;p&gt;And that brings us to the next section, My Proposal.&lt;/p&gt;

&lt;h1 id=&quot;my-proposal-for-touring-musicians&quot;&gt;My Proposal for Touring Musicians&lt;/h1&gt;

&lt;p&gt;I think what touring musicians should sell is a USB stick which has the following features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Small Music Archive like a Best of David Rovics album&lt;/li&gt;
  &lt;li&gt;A program which updates the USB stick from the Internet&lt;/li&gt;
  &lt;li&gt;A readme file that basically amounts to “Run the update program”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The update program would be a small executable that connects to a source on the Internet and downloads a full archive complete with album art and metadata.  People could the plug that into their computer, take that to their car, etc.&lt;/p&gt;

&lt;p&gt;You could call this &lt;em&gt;USB Stick as Platform&lt;/em&gt; perhaps.  The software could easily be written in JavaScript using the &lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt; toolkit.  If &lt;a href=&quot;https://slack.com/downloads/&quot;&gt;Slack&lt;/a&gt; can ship versions of their app for OSX, Windows and Linux off the same code base and &lt;a href=&quot;http://www.atom.io&quot;&gt;Atom&lt;/a&gt; can do the same then there should be no problem developing a pretty simple downloader.  All it has to do is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read a config file which determines the source url to read from&lt;/li&gt;
  &lt;li&gt;Start downloading songs&lt;/li&gt;
  &lt;li&gt;Store the songs in a rational file hierarchy&lt;/li&gt;
  &lt;li&gt;Display a progress bar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you wanted to you could get fancy like embed an encrypted token in the config file that limits how many downloads but I wouldn’t recommend it.  I think Simple is better here.  I would allow for it pulling down some advertising style content since that would give a musician the ability to promote an upcoming concert, cross promote another artist, etc.&lt;/p&gt;

&lt;p&gt;The end result of this is that the musician could give to a manufacturer like &lt;a href=&quot;http://www.flashbay.com/usb-music-distribution&quot;&gt;FlashBay&lt;/a&gt; a master USB stick and get back say 100.  I don’t know the prices on them but if you promoted it properly like “David Rovics USB Library” and it could perpetually update itself then you’d have something that actually might have  dramatically higher price than a single CD.  You’d need to test pricing but my gut says that a USB stick of this nature could easily fetch $20 or more.&lt;/p&gt;

&lt;h1 id=&quot;a-final-note&quot;&gt;A Final Note&lt;/h1&gt;

&lt;p&gt;In my last &lt;a href=&quot;http://fuzzyblog.io/blog/rant/2016/12/20/david-rovics-community-supported-art-or-a-tale-of-paywoe.html&quot;&gt;post&lt;/a&gt; that referenced David, I failed to define some terms:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UI - user interface – the look, feel and interactions a user has with a product&lt;/li&gt;
  &lt;li&gt;UX - user experience – the overall experience that a user has with a given product&lt;/li&gt;
  &lt;li&gt;UI/UX - the fusion of the two&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My apologies for leaving these out.  As a card carrying member of the technology tribe, I do exist in a world of acronyms and I sometimes don’t realize that they are not clear to others.&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/music/2017/01/23/if-i-was-a-traveling-musician.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/music/2017/01/23/if-i-was-a-traveling-musician.html</guid>
        
        <category>music</category>
        
        <category>random</category>
        
        <category>echo</category>
        
        <category>alexa</category>
        
        <category>10x</category>
        
        
        <category>music</category>
        
      </item>
    
      <item>
        <title>Quick Reference Low Level Unix Disk Commands You Often Use for AWS Volumes</title>
        <description>&lt;p&gt;I recently had a bizarre failing disk problem and these were all the commands I used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fsck -M -fy /dev/sdb1 – check a file system; change /dev/sdb1 to your device &lt;a href=&quot;http://askubuntu.com/q/552039/621300&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;dmesg – lets you see low level hardware errors&lt;/li&gt;
  &lt;li&gt;df -T&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Common Error Messages&lt;/p&gt;

&lt;p&gt;When you get &lt;em&gt;“Input/output error” when accessing a directory&lt;/em&gt; then:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Input/Output errors during filesystem access attempts generally mean hardware issues. 
Type dmesg and check the last few lines of output. If the disc or the connection to it is failing, it’ll be noted there. &lt;a href=&quot;http://unix.stackexchange.com/a/39908&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 20 Jan 2017 08:08:55 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/20/quick-reference-low-level-unix-disk-commands-you-often-use-for-aws-volumes.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/20/quick-reference-low-level-unix-disk-commands-you-often-use-for-aws-volumes.html</guid>
        
        
      </item>
    
      <item>
        <title>My Piggy</title>
        <description>&lt;p&gt;https://killerc.com/&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Jan 2017 04:00:32 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/20/my-piggy.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/20/my-piggy.html</guid>
        
        
      </item>
    
      <item>
        <title>Hyde Tutorial - Adding Twitter Card Support to Your Jekyll Blog</title>
        <description>&lt;p&gt;https://cards-dev.twitter.com/validator&lt;/p&gt;

&lt;p&gt;ngrok&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Jan 2017 03:59:08 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/01/20/hyde-tutorial-adding-twitter-card-support-to-your-jekyll-blog.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/01/20/hyde-tutorial-adding-twitter-card-support-to-your-jekyll-blog.html</guid>
        
        
      </item>
    
      <item>
        <title>Tmux Mouse Mode Problems Under Linux</title>
        <description>&lt;p&gt;I am in the process of decommissioning a data center I set up about 2 years ago.  This was done in my pre-ansible days when I used Chef to bootstrap all the servers and it only functioned about 90% of the way leaving the final configuration of each server entirely manual.  This has meant that rather than each server being identical to every other server, each one is a unique “snowflake”.  And snowflake servers can really be the bane of your existence at times.&lt;/p&gt;

&lt;p&gt;One box, for example, when you run a &lt;a href=&quot;https://tmux.github.io/&quot;&gt;Tmux&lt;/a&gt; session it mysteriously trashes the mouse and you can’t actually copy some bit of text for pasting it later.  This doesn’t sound all that significant until you are trying to remember a mysqldump statement that is, with all options, about 220 characters long, it is 3:07 am and you find yourself saying “Man this is just the #U$I#U$#I balls”.&lt;/p&gt;

&lt;p&gt;And that’s when you realize that even if you are turning these boxes off in the next 15 minutes it would still be worth fixing immediately.&lt;/p&gt;

&lt;p&gt;The problem was in the file ~/.tmux.conf and it was the presence of these lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;setw -g mode-mouse on
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To be honest this is a problem that I likely introduced myself - I vaguely remember noodling on this configuration file about 18 months ago and then something blew up.  A quick :wq in VIM and I was off to the next disaster.  And since I didn’t restart tmux entirely (configuration is loaded only on startup), it wasn’t until the box was physically rebooted, long after I had forgotten this particular hell, that the mouse died and I was left scratching my head.  Sigh.&lt;/p&gt;

&lt;p&gt;Had I read it at the time, this &lt;a href=&quot;http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/&quot;&gt;blog post&lt;/a&gt; might have been useful.&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/tmux/2017/01/20/tmux-mouse-mode-problems-under-linux.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/tmux/2017/01/20/tmux-mouse-mode-problems-under-linux.html</guid>
        
        <category>tmux</category>
        
        <category>linux</category>
        
        <category>sys_admin</category>
        
        
        <category>tmux</category>
        
      </item>
    
  </channel>
</rss>
