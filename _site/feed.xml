<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 09 Feb 2017 21:14:36 -0500</pubDate>
    <lastBuildDate>Thu, 09 Feb 2017 21:14:36 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Linux Tip of the Day - curl</title>
        <description>&lt;p&gt;While I try hard to write things described as “* of the day” regularly there are times when life throws you a curve ball.  Yesterday’s curve ball was the intersection of sick child, snow and a failed sewage lift pump led to, well, personal hell at home.  After a very busy work day I spent the evening that I had allocated to writing, well, playing clean up man before the real plumber showed up.  Anyway … on to curl!&lt;/p&gt;

&lt;p&gt;The standard Linux tool curl seems to always be present on Linux / OSX systems so I can skip over the installation issues and I suspect most of us know the basics i.e.:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;curl http://foo.com/bar.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;will fetch the file bar.html from the foo.com website and place it in the current directory.  Given that our goal here was to discuss how curl was used in John Graham Cummings &lt;a href=&quot;https://github.com/jgrahamc/hncomments/blob/master/hncomments&quot;&gt;hncomments&lt;/a&gt; bash script and that’s all we need, I could stop here but let’s go for the gusto and give some examples of advanced usage of curl.&lt;/p&gt;

&lt;h1 id=&quot;output-redirection-with-curl&quot;&gt;Output Redirection with curl&lt;/h1&gt;

&lt;p&gt;Normally the output of curl is written to the same filename that was used on the server.  You can use the &amp;gt; character to redirect output to a new file as showing here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;curl yoururl.com &amp;gt; yoururl.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://geekflare.com/curl-command-usage-with-example/&quot;&gt;More&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;send-a-custom-header-with-curl&quot;&gt;Send a Custom Header with curl&lt;/h1&gt;

&lt;p&gt;If you want to send a custom header with curl then you can inject it with –header:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;curl –header ‘Content-Type: application/json’ http://yoururl.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://geekflare.com/curl-command-usage-with-example/&quot;&gt;More&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;get-headers-with-curl&quot;&gt;Get Headers with curl&lt;/h1&gt;

&lt;p&gt;You can get a feel for the Internet http headers with –head:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;curl –head http://fuzzyblog.io&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl --head http://fuzzyblog.io
HTTP/1.1 200 OK
Server: GitHub.com
Date: Fri, 10 Feb 2017 02:00:34 GMT
Content-Type: text/html; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8
Content-Length: 1125
Last-Modified: Mon, 16 Jan 2017 18:12:56 GMT
Access-Control-Allow-Origin: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
Expires: Fri, 10 Feb 2017 02:10:34 GMT
Cache-Control: max-age&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;600
Accept-Ranges: bytes
X-GitHub-Request-Id: EA7C:71BB:11DF3A8:1883A50:589D1EC2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is particularly useful if you build tools like crawlers / indexers because you can use the intersection of Last-Modified and Control-Length to make a hash key that you use for determining if you should index something.  HTTP head operations are very cheap because only the header is transferred.  &lt;a href=&quot;https://curl.haxx.se/docs/httpscripting.html#HEAD&quot;&gt;More on Head&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;testing-advanced-options&quot;&gt;Testing Advanced Options&lt;/h1&gt;

&lt;p&gt;If you’re looking for help with curl then try the &lt;a href=&quot;https://curlbuilder.com/&quot;&gt;Online Curl tool&lt;/a&gt; which gives you a user interface that has generates a curl command as its output.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2017/02/08/linux-tip-of-the-day-curl.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2017/02/08/linux-tip-of-the-day-curl.html</guid>
        
        <category>linux_tip_of_the_day</category>
        
        <category>linux</category>
        
        <category>curl</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Linux Tip Of The Day - mount</title>
        <description>&lt;p&gt;mount -a  http://chrisschuld.com/2007/08/reload-fstab-etcfstab/&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Feb 2017 06:22:17 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/07/linux-tip-of-the-day-mount.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/07/linux-tip-of-the-day-mount.html</guid>
        
        
      </item>
    
      <item>
        <title>On Merging Files - Diff Alternatives on the Mac</title>
        <description>&lt;p&gt;There are certain skills as a software developer that take, in my experience, a lifetime to master.  I have now been using version control since the mid 1990s and I still don’t consider myself, by any means, a master.  I’m good, don’t get me wrong, but I don’t feel that I have yet fully internalized all the benefits that version control offers.  So, when I have a chance to really take advantage of version control, I truly relish the opportunity.&lt;/p&gt;

&lt;p&gt;I recently had a refactoring situtation where I was, shall we say, overly ambitious.  And, yes, that’s the positive version of what I’d refer to as “Humpty Dumpty” code syndrome where you have so thoroughly broken a critical bit of code that you just can’t put it back together.  Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I refactored a truly alway bit of two critical routines, one with 8 input variables that returned 6 variables&lt;/li&gt;
  &lt;li&gt;No test coverage&lt;/li&gt;
  &lt;li&gt;It would not, no matter what I did, do what it did before; specifically it would do the first pass of an N pass algorithm but I could never make it go beyond stage 1&lt;/li&gt;
  &lt;li&gt;In the process of doing this I added new and highly desirable functionality everywhere and fixed about 30 critical code mistakes along the way&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, well, &lt;strong&gt;crap&lt;/strong&gt;.  The fix was, in the immortal words of Doctor Who, to get all timey-whimey!  Specifically I needed to time travel back to &lt;em&gt;before&lt;/em&gt; I started and then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;confirm that this code actually worked in the first place – maybe this problem existed before I &lt;em&gt;fixed&lt;/em&gt; it&lt;/li&gt;
  &lt;li&gt;figure out how to travel back from the past while bringing with me a working version&lt;/li&gt;
  &lt;li&gt;NOT lose any of the cool new features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the development practices I am absolutely &lt;strong&gt;adamant&lt;/strong&gt; about is only ever having 1 checkout of the code based at a time.  I’m hardcore on this because I’ve seen what happens when you have multiple versions floating about – its very, very convenient but you tend to get confused and then you lose track of what’s the master and things get screwball.  But, in desparate times, you do what you must and so I went over to github and:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I found a commit from roughly before I started; I wasn’t real specific about this, I just remember “this debacle started last Thursday so goto Wednesday”&lt;/li&gt;
  &lt;li&gt;I browsed the code base at that point&lt;/li&gt;
  &lt;li&gt;I created a new directory where I wanted this&lt;/li&gt;
  &lt;li&gt;I checked out the code; that put a fresh copy of master in place&lt;/li&gt;
  &lt;li&gt;I did a git co HASH where HASH represented the commit hash for Wednesday&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This put me what’s called &lt;a href=&quot;http://stackoverflow.com/questions/3965676/why-did-my-git-repo-enter-a-detached-head-state&quot;&gt;&lt;em&gt;detached head&lt;/em&gt;&lt;/a&gt; mode and I was able to modify /run / test, etc.  I then had to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;port over my rake task which was doing my tests&lt;/li&gt;
  &lt;li&gt;port over the individual changes, one by one, &lt;em&gt;carefully&lt;/em&gt; to let the old code run correctly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I found was that the old code did, in fact, run better than the new code.  Sigh.  And after 2 days of fixing things all over the place I had the system back to running order with the exception that I now had 2 code bases that needed to be merged.  &lt;em&gt;Bigger Sigh&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;time-for-some-diff-magic&quot;&gt;Time for some Diff Magic&lt;/h1&gt;

&lt;p&gt;So I now had two git checkouts with differences between them.  One of them was master, and did I mention that while this was all going on I got pulled off the project to fix something else and add yet more functionality to the code base for a day and half, and the other was my time travel branch.  When I did a git status in the time travel branch I got this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    git status
    HEAD detached at 93bf221
    Changes not staged &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;commit:
      &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&quot;git add &amp;lt;file&amp;gt;...&quot;&lt;/span&gt; to update what will be committed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&quot;git checkout -- &amp;lt;file&amp;gt;...&quot;&lt;/span&gt; to discard changes &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;working directory&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    	modified:   app/models/form.rb
    	modified:   app/models/form2016_q4.rb
    	modified:   app/models/iframe2016_q4.rb
    	modified:   app/models/link.rb
    	modified:   app/models/link2016_q4.rb
    	modified:   app/models/page.rb
    	modified:   app/models/page2016_q4.rb
    	modified:   app/models/page_body.rb
    	modified:   app/models/page_body2016_q4.rb
    	modified:   app/models/site.rb
    	modified:   app/models/unique_url.rb
    	modified:   app/models/unique_url2016_q4.rb
    	modified:   app/models/url_resolver.rb
    	modified:   app/models/url_tool.rb
    	modified:   config/initializers/constants.rb
    	modified:   lib/common_link.rb
    	modified:   lib/common_page.rb

    Untracked files:
      &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&quot;git add &amp;lt;file&amp;gt;...&quot;&lt;/span&gt; to include &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;what will be committed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    	docs/snippets/create_mechanize_page_without_fetch.rb
    	lib/tasks/crawl2016_q4.rake

    no changes added to commit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt; and/or &lt;span class=&quot;s2&quot;&gt;&quot;git commit -a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s a whole lot of changes.  The easiest approach was to start with the entirely new files and just copy them over to the original.&lt;/p&gt;

&lt;p&gt;Now this is where I’m going to make a highly personal engineering choice here – I’m going to avoid an automated merge process of any type.  When it comes to complex code changes in an automated fashion I honestly don’t have a lot of faith.  I’ve seen automated merges go wrong time after time so I was looking for a tool to make this easier.  A quick bit of googling turned up:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenDiff / FileMerge (part of X-Code)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://meldmerge.org/&quot;&gt;meld&lt;/a&gt; - a python tool with an unofficial brew install via &lt;em&gt;brew install homebrew/gui/meld&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;[Beyond Compare]http://www.scootersoftware.com/download.php from &lt;a href=&quot;http://www.scootersoftware.com/&quot;&gt;Scooter Software&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sourcegear.com/diffmerge/&quot;&gt;Diff Merge&lt;/a&gt; from &lt;a href=&quot;http://www.sourcegear.com/&quot;&gt;SourceGear&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kaleidoscopeapp.com/&quot;&gt;Kaleidoscope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I ended up using Open Diff for my merge issues:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/open_diff.png&quot; alt=&quot;opendiff&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here are screenshots from some of the other tools I looked at:&lt;/p&gt;

&lt;h2 id=&quot;diff-merge&quot;&gt;Diff Merge&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/diff_merge.png&quot; alt=&quot;diff_merge&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;beyond-compare&quot;&gt;Beyond Compare&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/beyond_compare.png&quot; alt=&quot;beyond_compare&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;kaleidoscope&quot;&gt;Kaleidoscope&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/kaleidoscope.png&quot; alt=&quot;kaleidoscope&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;more-reading&quot;&gt;More Reading&lt;/h2&gt;

&lt;p&gt;Here are a few good articles on merge tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.git-tower.com/blog/diff-tools-mac&quot;&gt;GitTower&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.outcoldman.com/en/archive/2014/05/12/git-dirdiff/&quot;&gt;outcoldman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/software_engineering/2017/02/07/on-merging-files-diff-alternatives-on-the-mac.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/software_engineering/2017/02/07/on-merging-files-diff-alternatives-on-the-mac.html</guid>
        
        <category>software_engineering</category>
        
        <category>version_control</category>
        
        <category>merge</category>
        
        <category>git</category>
        
        <category>diff</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Linux Tip Of The Day - recode</title>
        <description>&lt;p&gt;As I discussed &lt;a href=&quot;http://fuzzyblog.io/blog/linux/2017/02/06/linux-tip-of-the-day-jq.html&quot;&gt;yesterday&lt;/a&gt;, I’m currently talking about the dependencies in John Graham Cummings, &lt;a href=&quot;https://github.com/jgrahamc/hncomments/blob/master/hncomments&quot;&gt;hncomments&lt;/a&gt; bash script.  At the end of this I’m hoping that I have all the pieces that I can actually run this myself.&lt;/p&gt;

&lt;p&gt;The recode tool, a utility I had never even heard of, converts files between various character sets.  Given all the troubles I’ve had over the years with crawling the different app stores and encodings, I’m glad to learn about this.&lt;/p&gt;

&lt;p&gt;If you’re on Linux then you can install recode with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install recode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re on OSX then install recode with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew install recode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use recode –help to get assistance (this is only a subset of the help):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;recode --help
Free &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;recode&lt;span class=&quot;s1&quot;&gt;' converts files between various character sets and surfaces.

Usage: recode [OPTION]... [ [CHARSET] | REQUEST [FILE]... ]

If a long option shows an argument as mandatory, then it is mandatory
for the equivalent short option also.  Similarly for optional arguments.

Listings:
  -l, --list[=FORMAT]        list one or all known charsets and aliases
  -k, --known=PAIRS          restrict charsets according to known PAIRS list
  -h, --header[=[LN/]NAME]   write table NAME on stdout using LN, then exit
  -F, --freeze-tables        write out a C module holding all tables
  -T, --find-subsets         report all charsets being subset of others
  -C, --copyright            display Copyright and copying conditions
      --help                 display this help and exit
      --version              output version information and exit

Operation modes:
  -v, --verbose           explain sequence of steps and report progress
  -q, --quiet, --silent   inhibit messages about irreversible recodings
  -f, --force             force recodings even when not reversible
  -t, --touch             touch the recoded files after replacement
  -i, --sequence=files    use intermediate files for sequencing passes
      --sequence=memory   use memory buffers for sequencing passes
  -p, --sequence=pipe     use pipe machinery for sequencing passes

Fine tuning:
  -s, --strict           use strict mappings, even loose characters
  -d, --diacritics       convert only diacritics or alike for HTML/LaTeX
  -S, --source[=LN]      limit recoding to strings and comments as for LN
  -c, --colons           use colons instead of double quotes for diaeresis
  -g, --graphics         approximate IBMPC rulers by ASCII graphics
  -x, --ignore=CHARSET   ignore CHARSET while choosing a recoding path
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we go back to the source on hncomments then we can see how recode fits in:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;jq -r ‘.hits&lt;/td&gt;
        &lt;td&gt;.[]&lt;/td&gt;
        &lt;td&gt;.author + “\nhttps://news.ycombinator.com/item?id=” + .objectID + “\n\n” + .comment_text + “\n\n—\n\n”’ &amp;lt;(echo $j)&lt;/td&gt;
        &lt;td&gt;sed -e ‘s/&amp;lt;[^&amp;gt;]*&amp;gt;/ /g;’&lt;/td&gt;
        &lt;td&gt;&lt;strong&gt;recode&lt;/strong&gt; -f html..ascii&lt;/td&gt;
        &lt;td&gt;mail -s “Latest $q HN comments” $e&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here recode is taking the output from sed and converting it from html character encoding to ASCII.&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2017/02/07/linux-tip-of-the-day-recode.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2017/02/07/linux-tip-of-the-day-recode.html</guid>
        
        <category>linux_tip_of_the_day</category>
        
        <category>linux</category>
        
        <category>jq</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Linux Tip of the Day - jq</title>
        <description>&lt;p&gt;I made either the happy decision to do some late night Hacker News reading last night and I found a really interesting bash script – &lt;strong&gt;&lt;a href=&quot;https://github.com/jgrahamc/hncomments/blob/master/hncomments&quot;&gt;hncomments&lt;/a&gt;&lt;/strong&gt;.  This is a tool which looks at a data feed from HackerNews, through the algolia search engine, and emails you when comments matching what you are interested in appear.  My interest in it stemmed from its author - &lt;a href=&quot;http://www.jgc.org/&quot;&gt;John Graham Cumming (jgrahamc)&lt;/a&gt;.  He’s one of those programmers who I’ve always admired purely from an intellectual basis.  Anyone who can write books with the intellectual breadth of &lt;a href=&quot;https://www.amazon.com/gp/product/0596523203?ie=UTF8&amp;amp;tag=jgcorg-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0596523203&quot;&gt;Geek Atlas&lt;/a&gt;, &lt;a href=&quot;https://www.nostarch.com/gnumake&quot;&gt;Gnu Make&lt;/a&gt; and &lt;a href=&quot;http://shop.oreilly.com/product/0636920035305.do&quot;&gt;Introduction to Go&lt;/a&gt; has to be worth admiring.&lt;/p&gt;

&lt;p&gt;Anyway I went to get this running and realized that it requires dependencies of jq, recode, sed and curl – and I didn’t even know what jq was so my thought was &lt;em&gt;this is a series of Linux Tips of the Day!&lt;/em&gt;.  For the next few days I’ll be talking about each of these starting with jq.  So, John, thank you for the idea and here’s a tip on JQ.  After I write tips for each of these, I’ll follow through with getting this whole thing running.&lt;/p&gt;

&lt;p&gt;The Linux tool jq is a command line JSON processor designed to use JSON as part of a Unix pipeline.  In the case of the hncomments bash script, jq takes input from the the &lt;a href=&quot;http://www.algolia.com&quot;&gt;algolia&lt;/a&gt; output as called by curl.&lt;/p&gt;

&lt;p&gt;To install jq on Linux, use:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install jq&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But you might not have to – it was already installed for me even on servers I control which have pretty limited tools so this feels like it might be a standard tool.&lt;/p&gt;

&lt;p&gt;To install jq on OSX, use:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew install jq&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Help is available, as it always should be (but often isn’t), with –help.  Here’s an example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sjohnson@FuzzygroupMacbookAir ~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jq --help
jq - commandline JSON processor &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;version 1.5]
Usage: jq &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &amp;lt;jq filter&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;file...]

	jq is a tool &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;processing JSON inputs, applying the
	given filter to its JSON text inputs and producing the
	filter&lt;span class=&quot;s1&quot;&gt;'s results as JSON on standard output.
	The simplest filter is ., which is the identity filter,
	copying jq'&lt;/span&gt;s input to its output unmodified &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;except &lt;span class=&quot;k&quot;&gt;for
	&lt;/span&gt;formatting&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
	For more advanced filters see the jq&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; manpage &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;man jq&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	and/or https://stedolan.github.io/jq

	Some of the options include:
	 -c		compact instead of pretty-printed output;
	 -n		use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;null&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; as the single input value;
	 -e		&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;status code based on the output;
	 -s		&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;slurp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; all inputs into an array; apply filter to it;
	 -r		output raw strings, not JSON texts;
	 -R		&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;raw strings, not JSON texts;
	 -C		colorize JSON;
	 -M		monochrome &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;don&lt;span class=&quot;s1&quot;&gt;'t colorize JSON);
	 -S		sort keys of objects on output;
	 --tab	use tabs for indentation;
	 --arg a v	set variable $a to value &amp;lt;v&amp;gt;;
	 --argjson a v	set variable $a to JSON value &amp;lt;v&amp;gt;;
	 --slurpfile a f	set variable $a to an array of JSON texts read from &amp;lt;f&amp;gt;;
	See the manpage for more options.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Because this is designed to be used as part of a pipeline and you have to data in JSON format for it to work, I’m going to illustrate its use by stealing from the &lt;strong&gt;hncomments&lt;/strong&gt; bash script (thank you John!):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;curl -s &lt;span class=&quot;s2&quot;&gt;&quot;https://hn.algolia.com/api/v1/search_by_date?query=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;tags=comment&amp;amp;numericFilters=created_at_i&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;jq &lt;span class=&quot;s1&quot;&gt;'.hits | .[] | .created_at_i'&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | sort -nr | head -n 1&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &amp;gt; &lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For purposes of illustration, let’s assume that $q is &lt;strong&gt;docker&lt;/strong&gt;.  This means that the curl statement is executing the url at hn.algolia.com and returning it as $j.  The jq tool is then filtering down the json by looking for the hash key “hits” in the json output.  Here’s an example of what the start of that output looks like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;{“hits”:[{“created_at”:”2017-02-06T08:29:47.000Z”,”title”:null,”url”:null,”author”:”schappim”,”points”:null,”story_text”:null,”comment_text”:”Function as a service (like AWS Lambda, Google Cloud Functions and Azure Functions) for Ruby.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;More on all of this tomorrow when I look into recode.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2017/02/06/linux-tip-of-the-day-jq.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2017/02/06/linux-tip-of-the-day-jq.html</guid>
        
        <category>linux_tip_of_the_day</category>
        
        <category>linux</category>
        
        <category>jq</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Apple Sierra - Not Developer Grade</title>
        <description>&lt;p&gt;Dear Apple,&lt;/p&gt;

&lt;p&gt;Note: I’m writing this on my new MacBook Pro, freshly rebooted.  Arggh…&lt;/p&gt;

&lt;p&gt;I got my first Mac in 1987 and I have loved you for years and years.  And then when OSX became really, really viable for developers, I jumped on board back in 2006 and I’ve never looked back.  At last count there are well over double digit numbers of Apple devices in my house from laptops to desktops to iphones to ipads.  Honestly there isn’t much that you make that I don’t have at this point.&lt;/p&gt;

&lt;p&gt;Unfortunately, as of late, it feels like we’re stuck in a dysfunctional relationship.  I’m not a fan of your latest hardware.  And since I needed an upgrade, I went with the last generation top of the line and spent almost $3,000 with you.  Sadly this machine is not developer grade and I put the burden on Mac OS Sierra.  &lt;strong&gt;Three&lt;/strong&gt; times now in the past two weeks, I’ve had kernel panics.  Here’s the latest one:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Anonymous UUID:       0BED44E4-EF15-166F-0516-B0506E8AF4A8

Sat Jan 28 04:53:12 2017

*** Panic Report ***
Machine-check capabilities: 0x0000000001000c07
 family: 6 model: 61 stepping: 4 microcode: 33
 signature: 0x306d4
 Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz
 7 error-reporting banks
Processor 0: IA32_MCG_STATUS: 0x0000000000000005
 IA32_MC1_STATUS(0x405): 0xbf80000000000114
 IA32_MC1_ADDR(0x406):   0x0000000333a6d840
 IA32_MC1_MISC(0x407):   0x0000000000000086
Processor 1: IA32_MCG_STATUS: 0x0000000000000005
 IA32_MC1_STATUS(0x405): 0xbf80000000000114
 IA32_MC1_ADDR(0x406):   0x0000000333a6d840
 IA32_MC1_MISC(0x407):   0x0000000000000086
panic(cpu 2 caller 0xffffff8016c07125): &quot;Machine Check at 0x00007fff7dd40e93, registers:\n&quot; &quot;CR0: 0x0000000080010033, CR2: 0x000000011485f000, CR3: 0x0000000332cd9085, CR4: 0x00000000003627e0\n&quot; &quot;RAX: 0x0000608003c79480, RBX: 0x0000608003c79480, RCX: 0x00007fff7e8bd78e, RDX: 0x0000000000000000\n&quot; &quot;RSP: 0x00007fff5113bb38, RBP: 0x00007fff5113bb60, RSI: 0x00007fff7e86b87d, RDI: 0x0000608000765dc0\n&quot; &quot;R8:  0x0000000000001914, R9:  0x0000000000001915, R10: 0x00007fff9a3c5ef8, R11: 0x00007f94d5b4c5d0\n&quot; &quot;R12: 0x0000608000765dc0, R13: 0x00007fff7e866001, R14: 0x0000608000765dc0, R15: 0x00007fff9485eb40\n&quot; &quot;RFL: 0x0000000000000246, RIP: 0x00007fff7dd40e93, CS:  0x000000000000002b, SS:  0x0000000000000023\n&quot; &quot;Error code: 0x0000000000000000\n&quot;@/Library/Caches/com.apple.xbs/Sources/xnu/xnu-3789.21.3/osfmk/i386/trap_native.c:168
Backtrace (CPU 2), Frame : Return Address
0xffffff922c27bdd0 : 0xffffff8016af368c 
0xffffff922c27be50 : 0xffffff8016c07125 
0xffffff922c27bfb0 : 0xffffff8016aa5fdf 

**BSD process name corresponding to current thread: Mail**

Mac OS version:
16B2555

Kernel version:
Darwin Kernel Version 16.1.0: Thu Oct 13 21:26:57 PDT 2016; root:xnu-3789.21.3~60/RELEASE_X86_64
Kernel UUID: 8941AC1C-B084-37DE-8A34-4CE638C5CFC9
Kernel slide:     0x0000000016800000
Kernel text base: 0xffffff8016a00000
__HIB  text base: 0xffffff8016900000
System model name: MacBookPro12,1 (Mac-E43C1C25D4880AD6)

System uptime in nanoseconds: 342781203597508
last loaded kext at 337660924571055: com.apple.iokit.AppleBCM5701Ethernet	10.2.6 (addr 0xffffff7f99be6000, size 307200)
last unloaded kext at 337871927422739: com.apple.driver.usb.AppleUSBHostCompositeDevice	1.1 (addr 0xffffff7f99b2b000, size 28672)
loaded kexts:
org.virtualbox.kext.VBoxNetAdp	5.1.8
org.virtualbox.kext.VBoxNetFlt	5.1.8
org.virtualbox.kext.VBoxUSB	5.1.8
org.virtualbox.kext.VBoxDrv	5.1.8
com.apple.iokit.AppleBCM5701Ethernet	10.2.6
com.apple.filesystems.smbfs	3.1
com.apple.filesystems.autofs	3.0
com.apple.driver.AudioAUUC	1.70
com.apple.driver.ApplePlatformEnabler	2.7.0d0
com.apple.driver.AGPM	110.23.11
com.apple.driver.X86PlatformShim	1.0.0
com.apple.driver.AppleOSXWatchdog	1
com.apple.driver.AppleGraphicsDevicePolicy	3.13.74
com.apple.driver.AppleUpstreamUserClient	3.6.4
com.apple.driver.AppleHDA	278.23
com.apple.driver.pmtelemetry	1
com.apple.iokit.IOUserEthernet	1.0.1
com.apple.iokit.IOBluetoothSerialManager	5.0.1f7
com.apple.Dont_Steal_Mac_OS_X	7.0.0
com.apple.driver.AppleHV	1
com.apple.driver.AppleLPC	3.1
com.apple.driver.AppleThunderboltIP	3.0.8
com.apple.driver.AppleIntelBDWGraphics	10.2.0
com.apple.driver.AppleIntelSlowAdaptiveClocking	4.0.0
com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport	5.0.1f7
com.apple.driver.AppleCameraInterface	5.57.0
com.apple.driver.AppleSMCLMU	208
com.apple.driver.AppleBacklight	170.9.10
com.apple.driver.AppleMCCSControl	1.2.13
com.apple.driver.AppleIntelBDWGraphicsFramebuffer	10.2.0
com.apple.driver.AppleUSBCardReader	404.20.1
com.apple.AppleFSCompression.AppleFSCompressionTypeDataless	1.0.0d1
com.apple.AppleFSCompression.AppleFSCompressionTypeZlib	1.0.0
com.apple.BootCache	40
com.apple.filesystems.hfs.kext	366.1.1
com.apple.iokit.IOAHCIBlockStorage	295.20.1
com.apple.driver.AppleAHCIPort	326
com.apple.driver.AppleTopCaseHIDEventDriver	103
com.apple.driver.AirPort.Brcm4360	1110.4.1a8
com.apple.driver.AppleSmartBatteryManager	161.0.0
com.apple.driver.AppleRTC	2.0
com.apple.driver.AppleACPIButtons	5.0
com.apple.driver.AppleHPET	1.8
com.apple.driver.AppleSMBIOS	2.1
com.apple.driver.AppleACPIEC	5.0
com.apple.driver.AppleAPIC	1.7
com.apple.nke.applicationfirewall	172
com.apple.security.quarantine	3
com.apple.security.TMSafetyNet	8
com.apple.iokit.IOEthernetAVBController	1.0.3b4
com.apple.driver.AppleThunderboltPCIUpAdapter	2.0.5
com.apple.iokit.IOUSBUserClient	900.4.1
com.apple.kext.triggers	1.0
com.apple.driver.DspFuncLib	278.23
com.apple.kext.OSvKernDSPLib	525
com.apple.iokit.IOSurface	153.1
com.apple.driver.X86PlatformPlugin	1.0.0
com.apple.driver.IOPlatformPluginFamily	6.0.0d8
com.apple.iokit.IOSlowAdaptiveClockingFamily	1.0.0
com.apple.iokit.IOBluetoothHostControllerUSBTransport	5.0.1f7
com.apple.iokit.IOBluetoothHostControllerTransport	5.0.1f7
com.apple.iokit.IOBluetoothFamily	5.0.1f7
com.apple.driver.AppleHDAController	278.23
com.apple.iokit.IOHDAFamily	278.23
com.apple.iokit.IOAudioFamily	205.11
com.apple.vecLib.kext	1.2.0
com.apple.iokit.IOSerialFamily	11
com.apple.driver.AppleGraphicsControl	3.13.74
com.apple.driver.AppleBacklightExpert	1.1.0
com.apple.iokit.IONDRVSupport	2.4.1
com.apple.driver.AppleSMC	3.1.9
com.apple.driver.AppleSMBusController	1.0.14d1
com.apple.AppleGraphicsDeviceControl	3.13.74
com.apple.iokit.IOAcceleratorFamily2	288.15
com.apple.iokit.IOGraphicsFamily	2.4.1
com.apple.iokit.IOSCSIBlockCommandsDevice	394
com.apple.iokit.IOUSBMassStorageDriver	131.1.1
com.apple.iokit.IOSCSIArchitectureModelFamily	394
com.apple.driver.usb.networking	5.0.0
com.apple.driver.AppleThunderboltDPInAdapter	4.5.5
com.apple.driver.AppleThunderboltDPAdapterFamily	4.5.5
com.apple.driver.AppleThunderboltPCIDownAdapter	2.0.5
com.apple.driver.CoreStorage	540
com.apple.filesystems.hfs.encodings.kext	1
com.apple.iokit.IOAHCIFamily	288
com.apple.driver.AppleHIDKeyboard	197
com.apple.driver.AppleMultitouchDriver	368.4
com.apple.driver.AppleInputDeviceSupport	76.4
com.apple.driver.AppleHSSPIHIDDriver	49
com.apple.driver.AppleThunderboltNHI	4.1.6
com.apple.iokit.IOThunderboltFamily	6.2.3
com.apple.iokit.IO80211Family	1200.12.2
com.apple.driver.mDNSOffloadUserClient	1.0.1b8
com.apple.iokit.IONetworkingFamily	3.2
com.apple.driver.corecapture	1.0.4
com.apple.driver.AppleHSSPISupport	49
com.apple.driver.AppleIntelLpssSpiController	3.0.60
com.apple.driver.AppleIntelLpssDmac	3.0.60
com.apple.driver.AppleIntelLpssGspi	3.0.60
com.apple.driver.usb.AppleUSBXHCIPCI	1.1
com.apple.driver.usb.AppleUSBXHCI	1.1
com.apple.driver.usb.AppleUSBHostPacketFilter	1.0
com.apple.iokit.IOUSBFamily	900.4.1
com.apple.iokit.IOUSBHostFamily	1.1
com.apple.driver.AppleUSBHostMergeProperties	1.1
com.apple.driver.AppleBusPowerController	1.0
com.apple.driver.AppleEFINVRAM	2.1
com.apple.driver.AppleEFIRuntime	2.0
com.apple.iokit.IOHIDFamily	2.0.0
com.apple.iokit.IOSMBusFamily	1.1
com.apple.security.sandbox	300.0
com.apple.kext.AppleMatch	1.0.0d1
com.apple.driver.AppleKeyStore	2
com.apple.driver.AppleMobileFileIntegrity	1.0.5
com.apple.driver.AppleCredentialManager	1.0
com.apple.driver.DiskImages	444.20.3
com.apple.iokit.IOStorageFamily	2.1
com.apple.iokit.IOReportFamily	31
com.apple.driver.AppleFDEKeyStore	28.30
com.apple.driver.AppleACPIPlatform	5.0
com.apple.iokit.IOPCIFamily	2.9
com.apple.iokit.IOACPIFamily	1.4
com.apple.kec.Libm	1
com.apple.kec.pthread	1
com.apple.kec.corecrypto	1.0
Model: MacBookPro12,1, BootROM MBP121.0167.B17, 2 processors, Intel Core i7, 3.1 GHz, 16 GB, SMC 2.28f7
Graphics: Intel Iris Graphics 6100, Intel Iris Graphics 6100, Built-In
Memory Module: BANK 0/DIMM0, 8 GB, DDR3, 1867 MHz, 0x02FE, 0x4544464232333241314D412D4A442D460000
Memory Module: BANK 1/DIMM0, 8 GB, DDR3, 1867 MHz, 0x02FE, 0x4544464232333241314D412D4A442D460000
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x133), Broadcom BCM43xx 1.0 (7.21.171.47.1a8)
Bluetooth: Version 5.0.1f7, 3 services, 27 devices, 1 incoming serial ports
Network Service: Thunderbolt Ethernet, Ethernet, en4
Network Service: Wi-Fi, AirPort, en0
PCI Card: Apple 57762-A0, Ethernet Controller, Thunderbolt@195,0,0
Serial ATA Device: APPLE SSD SM1024G, 1 TB
USB Device: USB 3.0 Bus
USB Device: Bluetooth USB Host Controller
Thunderbolt Bus: MacBook Pro, Apple Inc., 27.1
Thunderbolt Device: Thunderbolt to Gigabit Ethernet Adapter, Apple Inc., 1, 5.5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I run two machines side by side, an early 2014 MacBook Air running El Capitan and this machine, a MacBook Pro 13” running Sierra.  I put my MacBook Air, with less RAM and a slower SSD thru a far more intensive work load then this machine which I use solely for email (using Apple Mail) and development of a new side project which I wanted to keep entirely separate from all my paid work.&lt;/p&gt;

&lt;p&gt;What the hell Apple?  I mean seriously – Mail is the damn issue?  I’m going to go ahead and pull Apple Mail from the Dock so I’m not tempted to use it anymore.  I can revert back to browser based gmail I suppose but come on – I’ve never thought that Sierra was a good release ever since I burned half a man day helping &lt;a href=&quot;http;//dasari.me&quot;&gt;Dv&lt;/a&gt; just get Rails development back on track after his upgrade to Sierra but this is ridiculous.&lt;/p&gt;

&lt;p&gt;And here’s another one only 10 days later:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Anonymous UUID:       0BED44E4-EF15-166F-0516-B0506E8AF4A8

Sun Feb  5 05:28:55 2017

*** Panic Report ***
Machine-check capabilities: 0x0000000001000c07
 family: 6 model: 61 stepping: 4 microcode: 33
 signature: 0x306d4
 Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz
 7 error-reporting banks
Processor 0: IA32_MCG_STATUS: 0x0000000000000005
 IA32_MC1_STATUS(0x405): 0xbf80000000000114
 IA32_MC1_ADDR(0x406):   0x00000003ac1c3b40
 IA32_MC1_MISC(0x407):   0x0000000000000086
Processor 1: IA32_MCG_STATUS: 0x0000000000000005
 IA32_MC1_STATUS(0x405): 0xbf80000000000114
 IA32_MC1_ADDR(0x406):   0x00000003ac1c3b40
 IA32_MC1_MISC(0x407):   0x0000000000000086
panic(cpu 3 caller 0xffffff8017e06a25): &quot;Machine Check at 0x0000000109c46e9b, registers:\n&quot; &quot;CR0: 0x0000000080010033, CR2: 0x00007fc690552000, CR3: 0x000000031cbca1d8, CR4: 0x00000000003627e0\n&quot; &quot;RAX: 0x0000000000000000, RBX: 0x0000000000000000, RCX: 0x000000000000006f, RDX: 0x00007f818af12c40\n&quot; &quot;RSP: 0x000070000811a0e0, RBP: 0x000070000811a140, RSI: 0x0000000109ea8a00, RDI: 0x0000000109913000\n&quot; &quot;R8:  0x0000000000000006, R9:  0x000000000000012c, R10: 0x00007f818af00000, R11: 0x0000000000000000\n&quot; &quot;R12: 0x0000000109ea8a00, R13: 0x0000000000000000, R14: 0x0000000109913000, R15: 0x00007f818af00000\n&quot; &quot;RFL: 0x0000000000000206, RIP: 0x0000000109c46e9b, CS:  0x000000000000002b, SS:  0x0000000000000023\n&quot; &quot;Error code: 0x0000000000000000\n&quot;@/Library/Caches/com.apple.xbs/Sources/xnu/xnu-3789.41.3/osfmk/i386/trap_native.c:168
Backtrace (CPU 3), Frame : Return Address
0xffffff922c4abdd0 : 0xffffff8017cf210c 
0xffffff922c4abe50 : 0xffffff8017e06a25 
0xffffff922c4abfb0 : 0xffffff8017ca3fdf 

BSD process name corresponding to current thread: ruby

Mac OS version:
16D32

Kernel version:
Darwin Kernel Version 16.4.0: Thu Dec 22 22:53:21 PST 2016; root:xnu-3789.41.3~3/RELEASE_X86_64
Kernel UUID: C67A8D03-DEAC-35B8-8F68-06FF7B687215
Kernel slide:     0x0000000017a00000
Kernel text base: 0xffffff8017c00000
__HIB  text base: 0xffffff8017b00000
System model name: MacBookPro12,1 (Mac-E43C1C25D4880AD6)

System uptime in nanoseconds: 114880533399128
last loaded kext at 105071645685855: com.apple.iokit.IOBluetoothUSBDFU	5.0.3f1 (addr 0xffffff7f9adb5000, size 12288)
last unloaded kext at 105463848849163: com.apple.driver.usb.AppleUSBHostCompositeDevice	1.1 (addr 0xffffff7f9ad5b000, size 28672)
loaded kexts:
org.virtualbox.kext.VBoxNetAdp	5.1.8
org.virtualbox.kext.VBoxNetFlt	5.1.8
org.virtualbox.kext.VBoxUSB	5.1.8
org.virtualbox.kext.VBoxDrv	5.1.8
com.apple.iokit.AppleBCM5701Ethernet	10.2.7
com.apple.filesystems.smbfs	3.1.1
com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport	5.0.3f1
com.apple.filesystems.autofs	3.0
com.apple.driver.AudioAUUC	1.70
com.apple.driver.ApplePlatformEnabler	2.7.0d0
com.apple.driver.AGPM	110.23.14
com.apple.driver.X86PlatformShim	1.0.0
com.apple.driver.pmtelemetry	1
com.apple.iokit.IOUserEthernet	1.0.1
com.apple.iokit.IOBluetoothSerialManager	5.0.3f1
com.apple.Dont_Steal_Mac_OS_X	7.0.0
com.apple.driver.AppleOSXWatchdog	1
com.apple.driver.AppleGraphicsDevicePolicy	3.13.79
com.apple.driver.AppleUpstreamUserClient	3.6.4
com.apple.driver.AppleHDA	278.56
com.apple.driver.AppleIntelBDWGraphics	10.2.2
com.apple.driver.AppleLPC	3.1
com.apple.driver.AppleHV	1
com.apple.driver.AppleThunderboltIP	3.0.8
com.apple.driver.AppleCameraInterface	5.57.0
com.apple.driver.AppleSMCLMU	208
com.apple.driver.AppleIntelSlowAdaptiveClocking	4.0.0
com.apple.driver.AppleIntelBDWGraphicsFramebuffer	10.2.2
com.apple.driver.AppleBacklight	170.9.10
com.apple.driver.AppleMCCSControl	1.2.15
com.apple.driver.AppleUSBCardReader	404.30.1
com.apple.AppleFSCompression.AppleFSCompressionTypeDataless	1.0.0d1
com.apple.AppleFSCompression.AppleFSCompressionTypeZlib	1.0.0
com.apple.BootCache	40
com.apple.filesystems.hfs.kext	366.30.3
com.apple.iokit.IOAHCIBlockStorage	295.20.1
com.apple.driver.AppleAHCIPort	326
com.apple.driver.AppleTopCaseHIDEventDriver	104
com.apple.driver.AirPort.Brcm4360	1130.3.1a5
com.apple.driver.AppleSmartBatteryManager	161.0.0
com.apple.driver.AppleACPIButtons	5.0
com.apple.driver.AppleRTC	2.0
com.apple.driver.AppleHPET	1.8
com.apple.driver.AppleSMBIOS	2.1
com.apple.driver.AppleACPIEC	5.0
com.apple.driver.AppleAPIC	1.7
com.apple.nke.applicationfirewall	172
com.apple.security.quarantine	3
com.apple.security.TMSafetyNet	8
com.apple.iokit.IOEthernetAVBController	1.0.3b4
com.apple.driver.AppleThunderboltPCIUpAdapter	2.1.1
com.apple.iokit.IOBluetoothHostControllerUSBTransport	5.0.3f1
com.apple.iokit.IOBluetoothHostControllerTransport	5.0.3f1
com.apple.iokit.IOUSBUserClient	900.4.1
com.apple.kext.triggers	1.0
com.apple.iokit.IOBluetoothFamily	5.0.3f1
com.apple.driver.AppleSSE	1.0
com.apple.driver.DspFuncLib	278.56
com.apple.kext.OSvKernDSPLib	525
com.apple.iokit.IOSurface	153.3
com.apple.driver.AppleHDAController	278.56
com.apple.iokit.IOHDAFamily	278.56
com.apple.iokit.IOAudioFamily	205.12
com.apple.vecLib.kext	1.2.0
com.apple.driver.AppleGraphicsControl	3.13.79
com.apple.iokit.IOSerialFamily	11
com.apple.driver.X86PlatformPlugin	1.0.0
com.apple.driver.IOPlatformPluginFamily	6.0.0d8
com.apple.iokit.IOSlowAdaptiveClockingFamily	1.0.0
com.apple.AppleGraphicsDeviceControl	3.13.79
com.apple.iokit.IOAcceleratorFamily2	289.32
com.apple.driver.AppleBacklightExpert	1.1.0
com.apple.iokit.IONDRVSupport	513.1
com.apple.driver.AppleSMC	3.1.9
com.apple.driver.AppleSMBusController	1.0.14d1
com.apple.iokit.IOGraphicsFamily	513.1
com.apple.iokit.IOSCSIBlockCommandsDevice	394.30.2
com.apple.iokit.IOUSBMassStorageDriver	131.1.1
com.apple.iokit.IOSCSIArchitectureModelFamily	394.30.2
com.apple.driver.usb.networking	5.0.0
com.apple.driver.AppleThunderboltDPInAdapter	4.6.1
com.apple.driver.AppleThunderboltDPAdapterFamily	4.6.1
com.apple.driver.AppleThunderboltPCIDownAdapter	2.1.1
com.apple.driver.CoreStorage	540.30.1
com.apple.filesystems.hfs.encodings.kext	1
com.apple.iokit.IOAHCIFamily	288
com.apple.driver.AppleHIDKeyboard	197
com.apple.driver.AppleMultitouchDriver	368.7
com.apple.driver.AppleInputDeviceSupport	76.4
com.apple.driver.AppleHSSPIHIDDriver	49
com.apple.driver.AppleThunderboltNHI	4.1.8
com.apple.iokit.IOThunderboltFamily	6.3.3
com.apple.iokit.IO80211Family	1200.12.2
com.apple.driver.mDNSOffloadUserClient	1.0.1b8
com.apple.iokit.IONetworkingFamily	3.2
com.apple.driver.corecapture	1.0.4
com.apple.driver.AppleHSSPISupport	49
com.apple.driver.AppleIntelLpssSpiController	3.0.60
com.apple.driver.AppleIntelLpssGspi	3.0.60
com.apple.driver.AppleIntelLpssDmac	3.0.60
com.apple.driver.usb.AppleUSBXHCIPCI	1.1
com.apple.driver.usb.AppleUSBXHCI	1.1
com.apple.driver.usb.AppleUSBHostPacketFilter	1.0
com.apple.iokit.IOUSBFamily	900.4.1
com.apple.driver.AppleUSBHostMergeProperties	1.1
com.apple.driver.AppleEFINVRAM	2.1
com.apple.driver.AppleEFIRuntime	2.0
com.apple.iokit.IOHIDFamily	2.0.0
com.apple.iokit.IOSMBusFamily	1.1
com.apple.security.sandbox	300.0
com.apple.kext.AppleMatch	1.0.0d1
com.apple.driver.AppleKeyStore	2
com.apple.driver.AppleMobileFileIntegrity	1.0.5
com.apple.driver.AppleCredentialManager	1.0
com.apple.driver.KernelRelayHost	1
com.apple.iokit.IOUSBHostFamily	1.1
com.apple.driver.AppleBusPowerController	1.0
com.apple.driver.DiskImages	444.41.1
com.apple.iokit.IOStorageFamily	2.1
com.apple.iokit.IOReportFamily	31
com.apple.driver.AppleFDEKeyStore	28.30
com.apple.driver.AppleACPIPlatform	5.0
com.apple.iokit.IOPCIFamily	2.9
com.apple.iokit.IOACPIFamily	1.4
com.apple.kec.Libm	1
com.apple.kec.pthread	1
com.apple.kec.corecrypto	1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: I just tried to look up pricing on a new iPad for one of my kids home schooling and I got “An error occurred tring to fulfill your request.  Please try again later.”  Software quality really seems to be an overall problem for Apple at this point.&lt;/p&gt;

&lt;p&gt;I’ve now officially stopped recommending Apple hardware to people and if getting rid of mail doesn’t resolve this then I’m going to seriously go down the Dell XPS running Ubuntu Mate route.&lt;/p&gt;

&lt;p&gt;And since stopping my mail client didn’t get rid of this, perhaps it is time to try actually living full time with Ubuntu Mate on my NUC and see if  I can love it enough to use daily.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Feb 2017 06:05:13 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/postmac/2017/02/05/apple-sierra-not-developer-grade.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/postmac/2017/02/05/apple-sierra-not-developer-grade.html</guid>
        
        <category>apple</category>
        
        <category>mac</category>
        
        <category>postmac</category>
        
        
        <category>postmac</category>
        
      </item>
    
      <item>
        <title>Ruby Regex Performance - Scan versus Match</title>
        <description>&lt;p&gt;I got my start with text processing using a custom version of &lt;a href=&quot;https://en.wikipedia.org/wiki/AWK&quot;&gt;Awk&lt;/a&gt;, HyperAwk, that my first company, NTERGAID, built.  What made HyperAwk unique was its ability to read not just ASCII but Word, WordPerfect, Ami and other binary structures and render them into a generic parseable format where you could look for document structures like bold facing, heading tags and the like.  We used it constantly from roughly 90 to 96 for things like “Transform every issue of &lt;a href=&quot;http://www.drdobbs.com/&quot;&gt;Dr. Dobb’s Journal&lt;/a&gt; from source file to hypertext”.  I even got a &lt;a href=&quot;http://www.drdobbs.com/web-development/the-ddj-hypertext-project/201800824?queryText=%2522Scott%2BJohnson%2522%2Bhypertext&quot;&gt;cover story&lt;/a&gt; out of it which was a huge personal win.  The engineer on the project, &lt;a href=&quot;http://gene-callahan.blogspot.com/2011/06/reference-management-software.html&quot;&gt;Gene Callahan&lt;/a&gt;, was a Unix guy surrounded by a bunch of DOS heads and he recognized that as our document recognition tasks got harder, what started as a tool, became a language.&lt;/p&gt;

&lt;p&gt;Because I started with text processing from an Awk perspective, I’m a &lt;em&gt;regex kind of guy&lt;/em&gt;.  Yes I know Nokogiri and, yes, I know xpath but for simple data extraction, my goto is always a regex. And when I’m in Ruby I tend to use .scan.  It is easy, convenient and I know it cold.  But is it fast?  I don’t think I’ve ever even thought about it.  I’ve always known that there are different things like .match but I never ventured there – until now.&lt;/p&gt;

&lt;p&gt;What I just found out is that .match is dramatically faster.  Here’s an example:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;tpp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;ss&quot;&gt;:blaahs_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;324&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;:blaaaargs_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;281&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;:followers_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;139&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;ss&quot;&gt;:match_seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;841700000455603&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;ss&quot;&gt;:scan_seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;030331000016303733&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;043&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tpp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;ss&quot;&gt;:blaahs_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;253&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;ss&quot;&gt;:blaaaargs_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;ss&quot;&gt;:match_seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;857000000309199&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;ss&quot;&gt;:scan_seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;022454&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99999844469&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note: All benchmarking tests were down with a Benchmark.realtime do block wrapping the code in question.  Only the core matching operations were benchmarked; not the underlying network io.&lt;/p&gt;

&lt;p&gt;If you do the math that’s between &lt;em&gt;3.2&lt;/em&gt; and &lt;em&gt;3.6&lt;/em&gt; times faster.  On other tests I found about a 3 fold increase in speed.  As my old friend Pete Jenney would have said &lt;strong&gt;Great Googlely Moogley!&lt;/strong&gt;  I should point out that he was saying that in 1996 long before Google even existed.&lt;/p&gt;

&lt;p&gt;As with any benchmark, your results will definitely vary.  I’m working here with pretty big strings (web pages; this is a simple data extractor).&lt;/p&gt;

</description>
        <pubDate>Sun, 05 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/ruby/2017/02/05/ruby-regex-performance-scan-versus-match.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/ruby/2017/02/05/ruby-regex-performance-scan-versus-match.html</guid>
        
        <category>ruby</category>
        
        <category>regex</category>
        
        <category>performance</category>
        
        <category>ntergaid</category>
        
        <category>hyper_awk</category>
        
        <category>gene_callahan</category>
        
        <category>pete_jenney</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Good Developer Podcasts to Listen To</title>
        <description>&lt;p&gt;aws podcast&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Feb 2017 15:02:26 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/04/good-developer-podcasts-to-listen-to.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/04/good-developer-podcasts-to-listen-to.html</guid>
        
        
      </item>
    
      <item>
        <title>Understanding the Modern Bittorrent Scene</title>
        <description>&lt;p&gt;The modern bittorent / media piracy scene is absolutely astounding.  If you’re nerdy enough, well, you don’t ever have to pay for media again and you can get a vastly better selection of media far more easily than you would expect.  In particular you don’t ever have to see a commercial again and that’s particularly wonderful.  Finally you can have full control over what your kids watch which, as a parent, is something I find invaluable.&lt;/p&gt;

&lt;p&gt;Note: This document is being shared with you because you’re a friend.  Please don’t re-share.&lt;/p&gt;

&lt;h1 id=&quot;the-hardware&quot;&gt;The Hardware&lt;/h1&gt;

&lt;p&gt;Here’s my recommended hardware configuration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Modern computer; if you want a dedicated computer for this then I’m a fan of the Intel NUC - small, fast and silent with more than enough power to download and serve media&lt;/li&gt;
  &lt;li&gt;Two hard drives (large media drives tend to fail; use rsync to synchronize all data from a master drive to a slave drive and then throw out the master when it fails, promote the slave to master and buy a new slave)&lt;/li&gt;
  &lt;li&gt;Large screen TV&lt;/li&gt;
  &lt;li&gt;Roku box for interfacing to your shared content and watching it on screen; you can go for the new 4K roku but I personally favor the older &lt;a href=&quot;https://www.amazon.com/Roku-Streaming-Player-Certified-Refurbished/dp/B016LBZVN2/ref=sr_1_1?s=tv&amp;amp;ie=UTF8&amp;amp;qid=1486204785&amp;amp;sr=1-1-spons&amp;amp;keywords=roku+3&amp;amp;psc=1&amp;amp;smid=A334XHS1C5Y12J&quot;&gt;Roku 3&lt;/a&gt; You should note that there are lots and lots of Roku like devices.  What you really want is one that is Plex compatible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I favor a dedicated computer for this because a VPN can get in the way of normal computer activity.  If, for example, your VPN is locked down to say Sweden then that’s where Google perceives you to be which can cause search issues, gmail problems and more.  The computer also handles the transcoding (or at least that’s what the log messages say).  .  You can also run Plex on top of a NAS device but I have no particular experience with that.&lt;/p&gt;

&lt;p&gt;If you find that you only have a limited number of HDMI ports then a &lt;a href=&quot;https://www.amazon.com/Fosmon-HD1831-3-Port-Switch-Pigtail/dp/B008GVOVK0/ref=pd_lpo_23_bs_t_2?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=03FFEM9AM3VZYZC0016B&quot;&gt;$11 HDMI splitter&lt;/a&gt; from Amazon makes it all better.&lt;/p&gt;

&lt;h1 id=&quot;the-software&quot;&gt;The Software&lt;/h1&gt;

&lt;p&gt;I’m a huge, huge fan of &lt;a href=&quot;http://www.plex.tv&quot;&gt;Plex.tv&lt;/a&gt;.  Plex is, well, iTunes for All Media with the difference that you don’t consume content in Plex on your PC – you use a TV with a box like Roku or a mobile app on your phone.  What Plex does is take in a file system hierarchy that you specify and serve it out to your devices.  If you are very sophisticated then you can even watch your Plex content when away from home thru a subscription that Plex.tv offers.&lt;/p&gt;

&lt;p&gt;Plex is just a media server.  You still need to acquire media somehow.  This can be done with any of a number of tools including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bittorrent Client Software&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nzbget.net/&quot;&gt;NZBGet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sickrage.github.io/&quot;&gt;SickRage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://couchpota.to/&quot;&gt;CouchPotato&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CouchPotato/CouchPotatoServer&quot;&gt;CouchPotatoServer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally there area  raft of tools and utilities that make the overall process easier:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/seedbox/deploy&lt;/li&gt;
  &lt;li&gt;https://github.com/seedbox/sync&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.filebot.net/&quot;&gt;FileBot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The open source community has been impressive in its support for media consumption.  The links above have barely touched the surface.&lt;/p&gt;

&lt;h1 id=&quot;avoiding-detection---vpn-or-seedbox&quot;&gt;Avoiding Detection - VPN or Seedbox&lt;/h1&gt;

&lt;p&gt;There are two basic approaches to avoiding detection:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VPN&lt;/li&gt;
  &lt;li&gt;Seedbox&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A VPN is just that - a virtual private network - that routes your traffic away from your host so that where you go on the Internet can’t be monitored. If you are running a local bittorent client then a VPN is absolutely essential.  Be careful though - if your VPN fails then your bittorent traffic can be exposed to your ISP and you’ll likely get a cease and desist letter.  If you use a dedicated computer for media then you really, really want a VPN that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;starts on boot&lt;/li&gt;
  &lt;li&gt;shuts down your Internet connection if the VPN fails&lt;/li&gt;
  &lt;li&gt;requires NO manual action on startup (MullVad, on OSX, requires you to always enter a sudo password and this stops it from launching automatically)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A seedbox is a dedicated Internet host who generally provides a VPN, web based torrenting software (ruTorrent normally) and an instance where your content can be torrented.  In this case the torrenting happens NOT on your computer but on an instance in the cloud, often in a non-US jurisdiction.  Then, after the files have been pulled into your cloud instance, you can FTP them down to your computer (or watch them from the cloud but I’ve never done that).  &lt;a href=&quot;http://https://torrentfreak.com/&quot;&gt;Seedboxes.cc&lt;/a&gt; has worked great for me but choose one according to your needs.&lt;/p&gt;

&lt;p&gt;Seedboxes are astonishingly fast.  The days of bittorrent taking hours are long gone – a modern 700 meg movie download might take as little as 5 minutes.&lt;/p&gt;

&lt;p&gt;For information on choosing seedboxes, see the [Reddit SeedBox thread](https://www.reddit.com/r/seedboxes/.&lt;/p&gt;

&lt;h1 id=&quot;media-sources&quot;&gt;Media Sources&lt;/h1&gt;

&lt;p&gt;There are a number of ways that media can be acquired:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bittorrent in which case ThePirateBay is still a huge factor&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Usenet; Here’s a &lt;a href=&quot;https://www.codecguide.com/usenet_tutorial.htm&quot;&gt;general usenet tutorial&lt;/a&gt;  Usenet vendors include:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.supernews.com/&quot;&gt;SuperNews&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.giganews.com/&quot;&gt;GigaNews&lt;/a&gt; (includes VPN)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A general tutorial on downloading with Usenet is &lt;a href=&quot;https://paulstamatiou.com/how-to-download-with-newsgroups/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://torrentfreak.com/&quot;&gt;News on Torrenting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 04 Feb 2017 10:31:10 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/04/understanding-the-modern-bittorrent-scene.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/04/understanding-the-modern-bittorrent-scene.html</guid>
        
        
      </item>
    
      <item>
        <title>How to Succeed at a Side Project</title>
        <description>&lt;p&gt;I have started, by my own metrics, well over 20 side projects since I entered the Rails world.  That’s at least 2 a year, sometimes more.  I’ve just launched Hyde in its first, albeit free, MVP stage.  I’ve been working on this, every single day, since December 27, 2016 when I decided to get serious.  Here’s how I did it.&lt;/p&gt;

&lt;h1 id=&quot;realize-that-your-paying-job-is-only-40-hours--week&quot;&gt;Realize that Your Paying Job is Only 40 Hours / Week&lt;/h1&gt;

&lt;p&gt;This was the critical epiphany for me.  I wrote my side project so far while I had a full time gig.  But as my wife helpfully pointed out to me - “You want to do this and you’re spending more time than you are actually paid for on someone else’s thing – work your 40 hours and spend all your other time on the side project”.  She was right and I have.&lt;/p&gt;

&lt;p&gt;Work culture, at least in America, has gotten so bizarre where people now define themselves entirely by their job and they think nothing of working around the clock.  There’s no need for that.  As a full time employee you are paid for 40 hours / week (generally).  If you’re working more than 40 hours per week then you’re effectively lowering your hourly rate and giving your employer &lt;strong&gt;free money&lt;/strong&gt;.  Given that most employers don’t see fit to giving you free money, well, think about it.&lt;/p&gt;

&lt;h1 id=&quot;establish-a-schedule-give-side-project-your-best-time&quot;&gt;Establish a Schedule; Give Side Project Your Best Time&lt;/h1&gt;

&lt;p&gt;I think most software engineers have natural rhythms.  For me my best time is the quiet hours at the beginning of the day.  From the moment I wake up until my actual (paid) work day starts, I work on side project.  So I normally rise around 3 am which gets me anywhere from 1 to 4 hours on side project every single day.  Your schedule will likely vary – hopefully you’re not up pre dawn like I am – but figure out a repeatable schedule where you can give your best time to your side project.&lt;/p&gt;

&lt;h1 id=&quot;write-code-every-single-day&quot;&gt;Write Code Every Single Day&lt;/h1&gt;

&lt;p&gt;I’ve written code every single day since I started on this.  On days where I’m blocked I write something.  There’s a lot of infrastructure if I’m going to write this side project in a scalable way without killing myself down the road so I think I’ve actually spent more time there than I have on the features.  That’s ok – personally the real technical challenge here is in the infrastructure.&lt;/p&gt;

&lt;p&gt;And, if you don’t like coding enough to write code for a side project every single day, well, a side project isn’t for you.  I’m sorry if that’s harsh but I think that’s the reality.&lt;/p&gt;

&lt;h1 id=&quot;take-a-laptop-everywhere&quot;&gt;Take a Laptop Everywhere&lt;/h1&gt;

&lt;p&gt;If you’re doing a side project then its really important to take advantage of what I have always referred to as interstitial time – the time between times.  For example I wrote UrlCommon.is_valid? which validates whether or not the user entered a valid url while watching my son play basketball at an Indianapolis Pacers Junior training thing.  Doubt me?  Here’s the YouTube video!&lt;/p&gt;

&lt;p&gt;Any modern laptop should be small enough and light enough to go with you always.  I have a go bag with everything I need to code successfully whether in the car while waiting for the kid to come home from the bus, taking my wife to the store, etc.  Every minute counts.&lt;/p&gt;

&lt;h1 id=&quot;minimize-costs-ruthlessly&quot;&gt;Minimize Costs Ruthlessly&lt;/h1&gt;

&lt;p&gt;Like a lot of us, when we work for a funded startup, I use all kind of services.  For a side project, &lt;strong&gt;Nope&lt;/strong&gt;!  Every dollar counts so the only “service” I use is my $7 / month paid github account.  Not airbrake / hoptoad / dockerhub / etc.&lt;/p&gt;

&lt;h1 id=&quot;take-a-paper-notebook-everywhere&quot;&gt;Take a Paper Notebook Everywhere&lt;/h1&gt;

&lt;p&gt;The best tool I’ve had in developing this has been this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/spidey_notebook.png&quot; alt=&quot;spidey_notebook.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Paper and pen is a superior thinking tool than just about anything else.  This notebook has gone everywhere with me and the pages are filled with scrawls about features, marketing, naming, architecture diagrams, plans how to minimize cloud hosting costs, etc.  It is small enough that it fits into the pockets on most of the cargo shorts I wear everywhere (yes, even in March as I write this, I’m still in shorts).&lt;/p&gt;

&lt;p&gt;If you don’t write it down, at some point, you’re going to forget it.  Don’t make that mistake.  I wrote more about &lt;a href=&quot;http://fuzzyblog.io/blog/software_engineering/2016/11/19/the-engineer-s-design-notebook-or-what-s-in-the-notebook-scott.html&quot;&gt;Design Notebooks&lt;/a&gt; back in November.&lt;/p&gt;

&lt;h1 id=&quot;recognize-your-own-failings&quot;&gt;Recognize Your Own Failings&lt;/h1&gt;

&lt;p&gt;Like most people I have serious failings.  From a technical perspective I tend to not treat data validity as a significant enough issue.  From a business perspective I pay more attention to the product than the revenues and the costs.  Neither of these is acceptable and I strongly believe that a side project should make you better at what you do so use your side project as a way of addressing your own failings.  Here’s an example of one of the first bits of Hyde that I implemented – I call it Revenues &amp;amp; Costs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/hyde_revenues_and_costs.png&quot; alt=&quot;hyde_revenues_and_costs.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yep - I wrote an accounting dashboard.  Why?  Well I’m going to pay a lot more attention to revenues and costs if I like / understand the tool which tracks them.&lt;/p&gt;

&lt;h1 id=&quot;recognize-that-writing-content-is-part-of-it&quot;&gt;Recognize that Writing Content is Part of It&lt;/h1&gt;

&lt;p&gt;There have been days where I did nothing but write the contact page and the about page.  And about 20 other pages that aren’t yet visible (sorry; the cat isn’t fully out of the bag yet).  Any side project isn’t just the code – its &lt;strong&gt;everything&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;give-something-back&quot;&gt;Give Something Back&lt;/h1&gt;

&lt;p&gt;At this stage Hyde is a non revenue producing side project with only a free MVP released.  But, even so, I’ve already released something as &lt;a href=&quot;http://github.com/fuzzygroup/sync-dot-rake&quot;&gt;open source&lt;/a&gt;.  I could talk about karma, how we’re all reliant on open source and should morally give somethign back or some other drivel.  Here’s a simple fact - giving stuff back gets you attention.  Getting attention to a side project is hard and giving something back is easy.  Think of giving something back as &lt;strong&gt;marketing&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;recognize-when-youre-in-the-weeds&quot;&gt;Recognize When You’re in the Weeds&lt;/h1&gt;

&lt;p&gt;I cook quite a bit and one term I’ve adopted from the professional cooking world is “being in the weeds”.  This refers to when you’re swamped with orders and can’t see the forest for the trees.  This is all too common in technology.  A few weeks ago I had the brilliant idea – write my own Rails generators to create some specific types of classes that I use a lot.  Well, an hour later, I was &lt;strong&gt;nowhere&lt;/strong&gt;.  I’ve even done this before but Rails 5 has changed things and I was just plain stuck.  I made the realization that either my only goal for today was going to be “make some progress on a generator” or I should &lt;strong&gt;stop cold&lt;/strong&gt; and go back to features.&lt;/p&gt;

&lt;h1 id=&quot;treat-it-professionally&quot;&gt;Treat it Professionally&lt;/h1&gt;

&lt;p&gt;I have a side project which has only barely launched.  A month and five days into it there were 122 issues in Github and 3 milestones.  Just because its a side project doesn’t mean that you don’t track bugs, do project planning, etc.  All of those things that your Product Manager normally does for you?  Guess what – you get to do them now!&lt;/p&gt;

&lt;h1 id=&quot;dont-stress-about-domain-name-product-name-marketing&quot;&gt;Don’t Stress About Domain Name, Product Name, Marketing&lt;/h1&gt;

&lt;p&gt;Here’s the sad truth about side projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Most don’t amount to anything&lt;/li&gt;
  &lt;li&gt;Most never get finished&lt;/li&gt;
  &lt;li&gt;Few even get launched&lt;/li&gt;
  &lt;li&gt;Of the few that get launched, even fewer actually ever produce a dime in revenue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So why, oh dear lord, why are you even worrying about domain name, product name, marketing, etc.  &lt;strong&gt;JUST WRITE CODE / GET IT DONE !&lt;/strong&gt;  If you write code then maybe you’ll be lucky enough to get to this stage.  Domain names can be changed, product names can be changed, marketing can be figured out.  If you want to product yourself from the impact of a name change then store the product name in an internal constant and always reference it from the contant.  Hell I have a whole file of marketing related constants since I &lt;strong&gt;hate&lt;/strong&gt; rewriting stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A side project might be code.  Or it might be an online course.  Or even a blog post.  That’s why I added “GET IT DONE” above next to “JUST WRITE CODE”.&lt;/p&gt;

&lt;h1 id=&quot;find-an-accountability-partner&quot;&gt;Find an Accountability Partner&lt;/h1&gt;

&lt;p&gt;I’m writing this at 5:10 am and I’ve been up and at my desk since 2:33 am – when you’re trying to establish a new habit, a useful technique is to find an accountability partner.  I have one friend who is also trying to get something new going and so every day, at 5 pm, I text him “Here’s what I got done on my side project today: …”.  Its usually a bulleted list.  Sometimes there is one item. Sometimes there are 10+ items.  Your spouse might be your accountability partner – or not.  In my case, I prefer not use my spouse since if I do something glaringly wrong in the code, she’s not in a position to challenge me on it whereas this friend is.&lt;/p&gt;

&lt;h1 id=&quot;find-a-helper-where-you-are-weak&quot;&gt;Find a Helper Where You Are Weak&lt;/h1&gt;

&lt;p&gt;All of us technology folk, even the “full stack” folks, have one or more areas where we are weak.  In my case, my internal understanding of HTML basically stopped with HTML table tags.  I’m not proud of it but there it is.  So what I’ve done is arranged an informal learning swap with my buddy Dv where if I have issues with front end HTML / CSS / JavaScript, he’s willing to pitch in and I’m always available to help him with any back end stuff he needs.  Its not a formal arrangement by any means – we’re both busy so sometimes it might be a few days before he’s available to pitch in but that’s ok.  There’s always something to work on in a side project and there really shouldn’t ever be a block at least in the early, pre-release stage.&lt;/p&gt;

</description>
        <pubDate>Sat, 04 Feb 2017 05:24:18 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/side_project/2017/02/04/how-to-succeed-at-a-side-project.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/side_project/2017/02/04/how-to-succeed-at-a-side-project.html</guid>
        
        <category>side_project</category>
        
        <category>startup</category>
        
        
        <category>side_project</category>
        
      </item>
    
  </channel>
</rss>
