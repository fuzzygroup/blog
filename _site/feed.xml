<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff.  Ruby / Rails / Elixir.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 18 Sep 2016 05:01:32 -0400</pubDate>
    <lastBuildDate>Sun, 18 Sep 2016 05:01:32 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Quick Tip - How to Get the Best Hotel Wifi at Disney</title>
        <description>&lt;p&gt;It seems to be an axiomatic rule of the universe that no one is is ever happy with connectivity when traveling.  One tip that works fantastically well for improving your connectivity when traveling, however, is this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get Up Early&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m writing this from DisneyWorld and I’ve had ok luck with connectivity so far during the day but the mornings have been just plain outstanding.  I’m normally up by between 3 and 4 and what I have found is that connectivity is always best prior to 7 am.  That’s when people seem to get up and everything grinds to a halt.  I’ve been up working now for about an hour and the wifi is just plain screaming along.  I’ve watched 60 plus photos sync to DropBox while I started this post – its why I realized it.&lt;/p&gt;

</description>
        <pubDate>Sun, 18 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/wifi/2016/09/18/quick-tip-how-to-get-the-best-hotel-wifi-at-disney.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/wifi/2016/09/18/quick-tip-how-to-get-the-best-hotel-wifi-at-disney.html</guid>
        
        <category>wifi</category>
        
        <category>disney</category>
        
        
        <category>wifi</category>
        
      </item>
    
      <item>
        <title>Tripmate Titan Instructions</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://blog.codinghorror.com/your-own-personal-wifi-storage/&quot;&gt;Jeff, over at CodingHorror&lt;/a&gt;, recently turned me onto the TripMate Titan which is a tiny wifi hub which lets you plugin a USB stick that can be shared to your iPad.  This, coupled with the File Explorer app, lets your kid watch all of their programs without:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;having to sync them onto an iPad or Kindle&lt;/li&gt;
  &lt;li&gt;having to have an iPad with lots of pricey storage&lt;/li&gt;
  &lt;li&gt;having to have them all in the precise mp4 format that Apple has blessed - MKV?  AVI?  MOV?  No problem!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is a $40 product you can get from &lt;a href=&quot;http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20&quot;&gt;Amazon&lt;/a&gt; and it is &lt;strong&gt;brilliant&lt;/strong&gt;.  Best little hardware gadget I’ve bought in 2016 by far.&lt;/p&gt;

&lt;p&gt;So I’ve bought one, compiled a USB stick of the kid’s favorite shows and taken it away from home on vacation.  The only real issue that I’ve had is that using it takes a few discrete steps that last night, when I was exhausted, I bungled thus delaying watching by my boys.  Now Jeff’s post, linked above, covers all of this in exhaustive detail.  What’s listed below is the cliff notes version:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Turn TripMate on by pressing center button and holding for 3 seconds.&lt;/li&gt;
  &lt;li&gt;In wifi settings &lt;strong&gt;connect&lt;/strong&gt; to the device; it will be labeled TripMateSith-xxx.  The password is &lt;strong&gt;11111111&lt;/strong&gt; (8 ones).&lt;/li&gt;
  &lt;li&gt;In File Explorer add a &lt;strong&gt;windows share&lt;/strong&gt; if you don’t have one already.  This needs to be an ip address of &lt;strong&gt;10.10.10.254&lt;/strong&gt; with a username of &lt;strong&gt;admin&lt;/strong&gt; and &lt;strong&gt;NO PASSWORD&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Open the right folder and enjoy some form of media goodness.&lt;/li&gt;
  &lt;li&gt;Turn it off by pressing and holding down for 3 seconds.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: You can use the built in admin tool to customize these settings and Jeff recommends it.  Me?  Eh.  I figured just write them down.&lt;/p&gt;

&lt;p&gt;I can see all kinds of uses for this including putting movies from a family trip onto a USB stick to view via an iPad.  Recommended.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/wifi/2016/09/17/tripmate-titan-instructions.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/wifi/2016/09/17/tripmate-titan-instructions.html</guid>
        
        <category>wifi</category>
        
        <category>tripmate</category>
        
        
        <category>wifi</category>
        
      </item>
    
      <item>
        <title>Interesting Kubernetes Stuff</title>
        <description>&lt;p&gt;I found some interesting Kubernetes stuff yesterday:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://danielmartins.ninja/posts/five-months-of-kubernetes.html&quot;&gt;Five Months of Kubernetes&lt;/a&gt; (excellent)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/coreos/coreos-kubernetes/tree/master/multi-node/aws&quot;&gt;kube-aws&lt;/a&gt; looks like the way to go if you use AWS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://railsadventures.wordpress.com/2015/12/06/why-we-chose-kubernetes-over-ecs/&quot;&gt;Why Kubernetes over ECS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;k8s is apparently the abbreviation for Kubernetes&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 16 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/kubernetes/2016/09/16/interesting-kubernetes-stuff.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/kubernetes/2016/09/16/interesting-kubernetes-stuff.html</guid>
        
        <category>kubernetes</category>
        
        <category>aws</category>
        
        <category>docker</category>
        
        
        <category>kubernetes</category>
        
      </item>
    
      <item>
        <title>Elixir Tutorial 03 - Deploying to Ubuntu</title>
        <description>&lt;p&gt;As discussed in &lt;a href=&quot;https://fuzzygroup.github.io/blog/elixir/2016/09/15/elixir-tutorial-02-adding-redis-support-to-our-page-fetcher.html&quot;&gt;my last Elixir Tutorial post&lt;/a&gt; we are trying to build a redis driven page fetcher that will:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;connect to redis&lt;/li&gt;
  &lt;li&gt;pop a tuple of information that identifies what to fetch including a url&lt;/li&gt;
  &lt;li&gt;will fetch the page from the internet&lt;/li&gt;
  &lt;li&gt;will save the html to a database table for processing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that Elixir is new to me (and arguably most people), the question of how to get this running on a server is actually a big deal.  Getting stuff running on a server is what is called deployment and deploying code can be tricky.  It literally took years before I was comfortable with the state of Ruby deployment and it is only relatively recently that I would posit that Capistrano is actually good.  So given the relatively embryonic state of Elixir, what are our deployment options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;git clone to a server and adjust settings manually as needed&lt;/li&gt;
  &lt;li&gt;build to a container and push&lt;/li&gt;
  &lt;li&gt;use a CI tool like &lt;a href=&quot;http://elviovicosa.com/blog/2016/07/13/deploying-elixir-releases.html&quot;&gt;this approach&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/boldpoker/edeliver&quot;&gt;e-deliver&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;distillery&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For this tutorial, I’m going to do a straight git clone to make sure I understand how an Elixir app is structured and then I’ll likely move to either distillery or e-deliver in a later tutorial.&lt;/p&gt;

&lt;h1 id=&quot;getting-elixir-installed-server-side&quot;&gt;Getting Elixir Installed Server Side&lt;/h1&gt;

&lt;p&gt;I’m working on an Ubuntu 14.04 trusty box for this.  Here are the steps from  &lt;a href=&quot;http://elixir-lang.org/install.html&quot;&gt;elixir-lang&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb &amp;amp;&amp;amp; sudo dpkg -i erlang-solutions_1.0_all.deb&lt;/li&gt;
  &lt;li&gt;sudo apt-get update&lt;/li&gt;
  &lt;li&gt;sudo apt-get install esl-erlang&lt;/li&gt;
  &lt;li&gt;sudo apt-get install elixir&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have at all an unreliable network connection then run Tmux first so connection loss doesn’t bork your install.&lt;/p&gt;

&lt;p&gt;Please note that while your results may vary, this is not a fast install by any means.  I witnessed the erlang install take more than 40 minutes or enough time to browse the internet quite a bit, discover &lt;a href=&quot;http://www.timezone.io&quot;&gt;timezone.io&lt;/a&gt; and setup a whole remote organization with it.  Very cool.&lt;/p&gt;

&lt;h1 id=&quot;cloning-your-project&quot;&gt;Cloning Your Project&lt;/h1&gt;

&lt;p&gt;As long as your server has access to Github then it should be a simple matter of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mkdir ~/elixir (to give a project root)&lt;/li&gt;
  &lt;li&gt;cd ~/elixir&lt;/li&gt;
  &lt;li&gt;git clone git@github.com:fuzzygroup/elixir_page_fetcher.git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then to test your project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cd ~/elixir/elixir_page_fetcher&lt;/li&gt;
  &lt;li&gt;mix deps.get&lt;/li&gt;
  &lt;li&gt;answer Y to install the hex package manager or do mix local.hex –force as your first step&lt;/li&gt;
  &lt;li&gt;mix test&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If all goes well the code should compile and the test should run.  Here’s what the whole process looked like for me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[foo@adl-ad-work2 /home/foo/srv/current]$ cd ~/elixir/elixir_page_fetcher/
[foo@adl-ad-work2 /home/foo/elixir/elixir_page_fetcher]$ mix deps.get
Could not find Hex, which is needed to build dependency :exredis
Shall I install Hex? (if running non-interactively, use: &quot;mix local.hex --force&quot;) [Yn] Y
* creating /home/foo/.mix/archives/hex-0.13.0
Running dependency resolution
* Getting exredis (Hex package)
  Checking package (https://repo.hex.pm/tarballs/exredis-0.2.5.tar)
  Fetched package
* Getting eredis (Hex package)
  Checking package (https://repo.hex.pm/tarballs/eredis-1.0.8.tar)
  Fetched package
[foo@adl-ad-work2 /home/foo/elixir/elixir_page_fetcher]$ mix test
Could not find &quot;rebar&quot;, which is needed to build dependency :eredis
I can install a local copy which is just used by Mix
Shall I install rebar? (if running non-interactively, use: &quot;mix local.rebar --force&quot;) [Yn] Y
* creating /home/foo/.mix/rebar
* creating /home/foo/.mix/rebar3
==&amp;gt; eredis (compile)
Compiled src/basho_bench_driver_erldis.erl
Compiled src/eredis.erl
Compiled src/eredis_sub.erl
Compiled src/basho_bench_driver_eredis.erl
Compiled src/eredis_sub_client.erl
Compiled src/eredis_client.erl
Compiled src/eredis_parser.erl
==&amp;gt; exredis
Compiling 5 files (.ex)
Generated exredis app
==&amp;gt; page_fetcher
Compiling 1 file (.ex)
Generated page_fetcher app
.

Finished in 0.1 seconds
1 test, 0 failures

Randomized with seed 243121
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;understanding-some-elixir-ecosystem-basics&quot;&gt;Understanding Some Elixir Ecosystem Basics&lt;/h1&gt;

&lt;p&gt;There were a number of things in the output above that may need some clarification:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.erlang.org/&quot;&gt;Erlang&lt;/a&gt; - this is the root language which Elixir is written in.  Erlang provides a language, a virtual machine and the OTP framework which is designed for building concurrent, distributed applications.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hex.pm&quot;&gt;Hex&lt;/a&gt; - this is the underlying package manager for Elixir.  Think of it as Ruby Gems but improved.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/erlang/rebar3&quot;&gt;Rebar&lt;/a&gt; - this is a build tool which makes it easier to build Erlang applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;next-time&quot;&gt;Next Time&lt;/h1&gt;

&lt;p&gt;In the next tutorial I will, hopefully, actually get to write some working Elixir code - what I’ve been trying to work towards for weeks if not months.&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/elixir/2016/09/16/elixir-tutorial-03-deploying-to-ubuntu.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/elixir/2016/09/16/elixir-tutorial-03-deploying-to-ubuntu.html</guid>
        
        <category>elixir</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Dad Why Is Your Face Bloody? An Essay on Shaving Economics</title>
        <description>&lt;p&gt;Another excellent question from my youngest son.  I’ve heard it said that when the question begins with “Why …”, the answer generally is &lt;strong&gt;money&lt;/strong&gt; and that is the reason here.  My youngest is too young to shave so much of this won’t make sense to him yet but I’ll write it none the less since some day it might save him even more money than it saved me.&lt;/p&gt;

&lt;p&gt;There are three common types of razors that men shave with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cartridge&lt;/li&gt;
  &lt;li&gt;disposable&lt;/li&gt;
  &lt;li&gt;blade&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve only ever used cartridge and blade so I can’t talk to the underlying economics of disposable razors but I’d guess that they are between cartridge and blade on the pricing spectrum.&lt;/p&gt;

&lt;p&gt;The leading contender is cartridge and this is commonly sold by Gillette.  Blades for a top of the line Gillette like the Mach 5 Fusion tend to run about $6 to $8 per cartridge at least based on pricing at the supermarket.  And, in my experience, a given cartridge is good for no more than 3 weeks.  Yes I am a cheap bastard in pushing a single cartridge that long.  So 52 weeks per years / 3 weeks per blade means that you will use &lt;strong&gt;17 1/3&lt;/strong&gt; blades per year.  At say $7 / blade that means a year of shaving costs you &lt;strong&gt;$121&lt;/strong&gt;.  I turn 49 this year and I have been shaving daily since I was 18 which puts me at 31 years of daily shaving or as I often think of it &lt;em&gt;face scraping&lt;/em&gt;.  And at the $121 per year that means I have invested $3,761 in shaving to date over my life span.  And if I was to shave for another 40 years that would make the total $4,840 for the next 40 years or a lifetime total of $3,761 + $4,840 or $8,601 – for nothing more than the privilege of being clean shaven.&lt;/p&gt;

&lt;p&gt;And these numbers aren’t even 100% accurate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It doesn’t include shaving cream which would raise the total&lt;/li&gt;
  &lt;li&gt;It doesn’t allow for price increases which Gillette does with increasing frequency&lt;/li&gt;
  &lt;li&gt;Cartridge razors didn’t used to be anywhere near as expensive so my $3,721 is likely too high.  On the other hand I didn’t used to be so cheap so I would would change the blade much more frequently so perhaps $3,721 is just fine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like most people I suspect, I’ve bought cars that were cheaper than $3,761.  My first car, in fact, cost under $3,000 (some work required admittedly) and I have to admit that I’d far rather have had one of these:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://porsonly.com/wp-content/uploads/2012/03/77933a3.jpg&quot; alt=&quot;http://porsonly.com/wp-content/uploads/2012/03/77933a3.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;than shaving my face for 31 years.&lt;/p&gt;

&lt;p&gt;So if cartridge razors are &lt;strong&gt;too expensive&lt;/strong&gt; then what is the solution and why is my face bloody?  The answer is to go back to what preceded cartridge razors – blade razors.  Here’s a &lt;a href=&quot;https://www.amazon.com/gp/product/B000NL0T1G/ref=oh_aui_detailpage_o00_s01?ie=UTF8&amp;amp;psc=1&quot;&gt;great example&lt;/a&gt; that I gave to my father this past father’s day.&lt;/p&gt;

&lt;p&gt;On November 24, 2014, I ordered from Amazon a blade razor for $29.47 and 100 blades for $47.94.  I’m still using the same damn box of blades.  That price gives me a per blade cost of $0.48 and a single blade lasts me at least 3 weeks.  So that blade is only about 6% of the overall cost of a cartridge blade.  And that changes my lifetime shaving economics to 6% of $8,601 or $516.  And that feels reasonable.  I’d always known that cartridge razors were ridiculously expensive but I never thought this expensive.&lt;/p&gt;

&lt;p&gt;Oh and the reason for the bloody face?  When I change the blade every three weeks, the first two or three shaves the blade is so sharp that I might nick myself a bit.  But a touch of a styptic pencil and its fine.&lt;/p&gt;

&lt;p&gt;If you care about shaving then I highly recommend the &lt;a href=&quot;https://www.reddit.com/r/wicked_edge&quot;&gt;Wicked Edge subreddit&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/dad_why_do_you/2016/09/16/dad-why-is-your-face-bloody.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/dad_why_do_you/2016/09/16/dad-why-is-your-face-bloody.html</guid>
        
        <category>dad_why_do_you</category>
        
        <category>m</category>
        
        <category>shaving</category>
        
        <category>razor</category>
        
        <category>economics</category>
        
        
        <category>dad_why_do_you</category>
        
      </item>
    
      <item>
        <title>Software Worth Purchasing 02 - Enpass</title>
        <description>&lt;p&gt;Password Managers are one of those categories of tools that provoke fierce debate among us nerd folk.  Personally now that I’ve figured out how to remember a different password for every web site I log into, I’ve needed one less than I used to but the recent move to a monthly billing plan for 1 Password just plain made me furious.  Not only is that ridiculous but 1 Password, at least in my experience, doesn’t work worth a damn.  I spent the time and money to buy it for my wife and myself about a year 
ago and we had nothing but problems.&lt;/p&gt;

&lt;p&gt;The task that flipped my need for a password manager was actually traveling to the recent Elixir Conf and realizing at the airport that I don’t know my TSA Pre number:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;And even if I knew it where in the rabbit’s maze of tiny text files that surround my daily life would it go?&lt;/li&gt;
  &lt;li&gt;And then would I really pull out a whole laptop at the airport just to get it?&lt;/li&gt;
  &lt;li&gt;And then even if it was in a text file how would I get it onto my phone?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Clearly a way to store information securely was needed.  A discussion on Hacker News of the 1 Password billing changes led me to &lt;a href=&quot;https://www.enpass.io/&quot;&gt;Enpass&lt;/a&gt; and I tried it.  And it worked.  Not only did it give me a way to store away my passwords but it nicely solved the TSA Pre number storage needs.  Their business model is that desktop is free they only charge for mobile when you need to sync beyond either 10 or 20 passwords.  They charge on a lifetime model which is likely a mistake and will definitely cause them business model issues over time but it is a great little product.&lt;/p&gt;

&lt;p&gt;Oh and I recently tested out their support and got an answer all the way from India where it is written in about a half hour which is fantastic considering the time zone.  And the answer was right.&lt;/p&gt;

&lt;p&gt;Here’s an endorsement if anyone over at Enpass wants a quote for their website:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Enpass is a fantastic product.  It is the first password manager that not only works but works consistently well.  I’m now using it across my laptop, iPhone and iPad and am just delighted with it.  And they have great support.  &lt;strong&gt;Recommended&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 15 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_worth_purchasing/2016/09/15/software-worth-purchasing-02-enpass.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_worth_purchasing/2016/09/15/software-worth-purchasing-02-enpass.html</guid>
        
        <category>software</category>
        
        <category>tools</category>
        
        <category>password_managers</category>
        
        
        <category>software_worth_purchasing</category>
        
      </item>
    
      <item>
        <title>Rails2Elixir - Generating a New Elixir Project</title>
        <description>&lt;p&gt;This is one of those things where there isn’t a direct equivalent in the Rails world.  To generate a new Rails project you, of course, use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But that brings in, well, Rails.  And all of the plethora of stuff that entails.  What if you just wanted to generate a standalone application say a page fetcher that talked to Redis and got back a url to fetch so you could store it away.  In that case you wouldn’t want all of the whole Rails stack.  You might want say just redis or just rake but not everything.&lt;/p&gt;

&lt;p&gt;As discussed previously, mix is the integrated version of rails, rake and bundler and that’s what we’re going to use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix new page_fetcher
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that will work but if you really want something reliable – and if you don’t, why would you bother with Elixir at all – then you really want to add a supervision tree which makes this an OTP application.  OTP is the core Erlang libraries that related to building distributed, reliable code.  Here’s how to do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix new page_fetcher --sup
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s the official reference to &lt;a href=&quot;http://elixir-lang.org/docs/stable/mix/Mix.Tasks.New.html&quot;&gt;mix new&lt;/a&gt; in this context.&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails2elixir/2016/09/15/generating-a-new-elixir-project.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails2elixir/2016/09/15/generating-a-new-elixir-project.html</guid>
        
        <category>rails2elixir</category>
        
        <category>elixir</category>
        
        
        <category>rails2elixir</category>
        
      </item>
    
      <item>
        <title>Elixir Tutorial 02 - Adding Redis Support to our Page Fetcher</title>
        <description>&lt;p&gt;In my &lt;a href=&quot;https://fuzzygroup.github.io/blog/rails2elixir/2016/09/15/generating-a-new-elixir-project.html&quot;&gt;last elixir post&lt;/a&gt; I documented how to generate a standalone Elixir project for a page fetcher.  Technically that would have been Elixir Tutorial 01 but I’m too tired right now to go back and rename it since this is my middle of the night, can’t sleep coding time while on vacation.&lt;/p&gt;

&lt;p&gt;Let’s start with a description of what we’re planning to build.  What is a page fetcher?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A page fetcher is a bit of software that pulls content (pages) from the Internet and stores them some where for processing by something else.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So what do we actually need:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A bit of software that runs reliably&lt;/li&gt;
  &lt;li&gt;And doesn’t require writing low level libraries as we’re just not there yet with our Elixir skills&lt;/li&gt;
  &lt;li&gt;And pulls content from Redis that describes what to fetch&lt;/li&gt;
  &lt;li&gt;And fetches a page off from a url&lt;/li&gt;
  &lt;li&gt;And stores it away for processing.  Likely in a database or some such place&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That doesn’t sound so hard, does it?  Here’s the &lt;a href=&quot;https://github.com/artemeff/exredis&quot;&gt;redis library&lt;/a&gt; we’re going to use.  Let’s start by adding redis support to what we generated last time.&lt;/p&gt;

&lt;p&gt;Change into your working directory.  For me that is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/me/fuzzygroup/elixir/page_fetcher
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now run mix test to make sure everything is still working:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix test    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Open the file mix.exs in your editor and add the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:exredis,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;&amp;gt;= 0.2.4&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This needs to go between the [] in the defp deps routine.  Think of it this way – you are updating Gemfile.  That’s all this is.  Only its a more reliable Gemfile without the cruft and crap of bundler.  I love you Ruby but good lord the packaging infrastructure lately blows monkey chunks.  Not a day goes by that I don’t hit some Gemfile / bundler crap.&lt;/p&gt;

&lt;p&gt;Now run mix test again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you’re going to see a failure like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sjohnson@ScottJohnsonMacbookAir:~/me/fuzzygroup/elixir/page_fetcher$ mix test
Unchecked dependencies for environment test:
* exredis (Hex package)
  the dependency is not available, run &quot;mix deps.get&quot;
** (Mix) Can't continue due to errors on dependencies
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So you’re going to do what I think of as the &lt;em&gt;deps dance&lt;/em&gt; and type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix deps.get
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you’ll see something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A new Hex version is available (0.13.0), please update with `mix local.hex`
Running dependency resolution
Dependency resolution completed
  eredis: 1.0.8
  exredis: 0.2.5
* Getting exredis (Hex package)
  Checking package (https://repo.hex.pm/tarballs/exredis-0.2.5.tar)
  Fetched package
* Getting eredis (Hex package)
  Checking package (https://repo.hex.pm/tarballs/eredis-1.0.8.tar)
  Fetched package    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Your mileage may vary with respect to the “please update …” stuff.  Please bear in mind that Hex isn’t perfect at present.  I’ve see issues but they are few and far between at least in my experience.&lt;/p&gt;

&lt;p&gt;The next step up is to modify your project to talk to your Redis server.  Do that by modifying config/config.exs with your server params.  Here are mine:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config :exredis,
  host: &quot;127.0.0.1&quot;,
  port: 6379,
  password: &quot;&quot;,
  db: 0,
  reconnect: :no_reconnect,
  max_queue: :infinity
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Since we’re connecting on 127.0.0.1 you need to run this on the same machine where your redis server lives or adjust the ip address.&lt;/p&gt;

&lt;p&gt;As always when you change anything run your test suite which will compile your code and show you any errors.  Here’s what mine looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mix test
==&amp;gt; eredis (compile)
Compiled src/eredis_sub.erl
Compiled src/eredis_parser.erl
Compiled src/eredis_sub_client.erl
Compiled src/basho_bench_driver_erldis.erl
Compiled src/eredis.erl
Compiled src/basho_bench_driver_eredis.erl
Compiled src/eredis_client.erl
==&amp;gt; exredis
Compiling 5 files (.ex)
Generated exredis app
==&amp;gt; page_fetcher
Compiling 1 file (.ex)
Generated page_fetcher app
.

Finished in 0.05 seconds
1 test, 0 failures

Randomized with seed 697093    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So at this point we have an elixir application with a supervision tree for reliability and a redis client.  Given that I’m a strong believer in “deploy early; deploy often”, I’ll handle getting all this deployed onto an Ubuntu server.  After that I’ll tackle getting this to run continuously popping things from the redis queue.&lt;/p&gt;

&lt;p&gt;All code can be found here: &lt;a href=&quot;https://github.com/fuzzygroup/elixir_page_fetcher&quot;&gt;https://github.com/fuzzygroup/elixir_page_fetcher&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/elixir/2016/09/15/elixir-tutorial-02-adding-redis-support-to-our-page-fetcher.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/elixir/2016/09/15/elixir-tutorial-02-adding-redis-support-to-our-page-fetcher.html</guid>
        
        <category>elixir</category>
        
        
        <category>elixir</category>
        
      </item>
    
      <item>
        <title>Dad - Why Do You Read the Newspaper?</title>
        <description>&lt;p&gt;My youngest son has taken to asking me questions.  And, since he’s my son, I find them infinitely interesting and they make me &lt;strong&gt;think&lt;/strong&gt;.  He isn’t really cognizant of my blogging at present nor do I find it necessary for him to know.  After all, what I write about, isn’t of general interest; I’m nerd folk  Still I like to think that on some far off distant day he finds this on the Internet and knows that Dad actually listened.&lt;/p&gt;

&lt;p&gt;I’ve been a reader of print newspapers all my life but I only got serious about it when I changed my major in college from mechanical engineering to management.  One of my first professors, intro to accounting, said to all of us in class “If you’re a serious student of business then you read the Wall Street Journal” and, to this very day, &lt;em&gt;I read the Wall Street Journal&lt;/em&gt;.  I don’t always read every page but I try to at least skim it.  Sometimes it might take me a week or more to get to a back log of papers but I do actually get there.&lt;/p&gt;

&lt;p&gt;Now my son looks at me, reading a physical paper, and I suspect he thinks something like this”&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Why?&lt;/li&gt;
  &lt;li&gt;They just get thrown out&lt;/li&gt;
  &lt;li&gt;You have an iPad&lt;/li&gt;
  &lt;li&gt;Behind the times Dad, behind the times&lt;/li&gt;
  &lt;li&gt;They’re expensive&lt;/li&gt;
  &lt;li&gt;It’s not customized to what you care about&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And in some ways he is definitely right.  The Wall Street Journal is expensive.  And it isn’t searchable and, as a physical artifact, it has tons of problems.  But the &lt;a href=&quot;https://en.m.wikipedia.org/wiki/Broadsheet&quot;&gt;broadsheet&lt;/a&gt; newspaper format has evolved over literally hundreds of years to its present form.  And I would argue that the broadsheet&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is the fastest way to come up to speed on an knowledge domain that changes constantly (i.e. Daily news)&lt;/li&gt;
  &lt;li&gt;Doesn’t limit me to &lt;strong&gt;only&lt;/strong&gt; information that agrees with me; that’s vitally important in this world of micro-focused content.  No one should only read about things that agree with them.  Example - I may or may not like either Hillary or Donald but as an informed citizen I should know the issues for each so that any decision I make come November is actually an informed one.  Ever since I’ve followed &lt;a href=&quot;https://twitter.com/fuzzygroup&quot;&gt;Twitter&lt;/a&gt; aggressively I can see both the pros and cons of a world where you only follow things that agree with you and what a damn &lt;a href=&quot;https://en.wikipedia.org/wiki/Echo_chamber_(media)&quot;&gt;echo chamber&lt;/a&gt; it can be.&lt;/li&gt;
  &lt;li&gt;It keeps me informed in a knowledge domain that I can talk to literally anyone about.  Much of what I actually care about in this world is so bloody obscure(1) that who in the real (i.e. physical) world am I ever going to discuss it with?&lt;/li&gt;
  &lt;li&gt;The more responsible you are, and I’m a husband and father who internalized catholic(2) levels responsibility back when I was in single digits, I find it all the more important to keep up to date on things.&lt;/li&gt;
  &lt;li&gt;A good newspaper, say the New York Times or Wall Street Journal, even today is still tremendously well written and like anyone who writes, I can appreciate a well written bit of content whether or not I’m explicitly interested in the topic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Footnotes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Example - Ruby / Rails / Elixir / Open Source / AWS.  I live in Indiana.  Most folks here don’t know what any of that is and the chance of discussing pros and cons of functional programming with anyone I know in the real world except for &lt;a href=&quot;http://work.stevegrossi.com/&quot;&gt;Steve Grossi&lt;/a&gt; ranges from slim to none.  And he and I don’t run in the same social circles.&lt;/li&gt;
  &lt;li&gt;I was raised episcopalian or the closet thing to Catholic since &lt;a href=&quot;https://en.wikipedia.org/wiki/Episcopal_Church&quot;&gt;episcopal&lt;/a&gt; means “American version of &lt;a href=&quot;https://en.wikipedia.org/wiki/Church_of_England&quot;&gt;Church of England&lt;/a&gt;”.  Anyway as a husband and father, I view it as my role to understand what’s going on in the world and be able to explain things like “Dad - what is ISIS?”.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 15 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/dad_why_do_you/2016/09/15/dad-why-do-you-read-the-newspaper.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/dad_why_do_you/2016/09/15/dad-why-do-you-read-the-newspaper.html</guid>
        
        <category>dad_why_do_you</category>
        
        <category>m</category>
        
        
        <category>dad_why_do_you</category>
        
      </item>
    
      <item>
        <title>Startup Learnings - What Kevin Burton Taught Me</title>
        <description>&lt;p&gt;I got to know &lt;a href=&quot;https://github.com/burtonator&quot;&gt;Kevin Burton&lt;/a&gt; of &lt;a href=&quot;http://www.spinn3r.com/&quot;&gt;Spinn3r&lt;/a&gt; fame back in my Feedster days and while I don’t know him tremendously well, I absolutely learned from him.  Interestingly, unlike a lot of my Silicon Valley contacts where I learned from them at the time, the learnings from Kevin came later, much later.&lt;/p&gt;

&lt;p&gt;The classic valley business model is what I’d describe as “up or out” i.e. you either get big fast become wildly successful or your flame out.  Either way you either go up or you go out.  But what if you are actually passionate about what you do?  What if you don’t want to go out or even to get tremendously big?  What if you want to do the kind of work you love and that you are great at?  Well, while in Silicon Valley, this would generally be viewed with derision as a “lifestyle business”, there isn’t anything wrong with it.  Hell, running a business successfully for years at a time, is a hell of an accomplishment.&lt;/p&gt;

&lt;p&gt;Kevin is a search engine guy and he’s smart.  He’s at the level of understanding that can be described as “Let’s write the search engine from scratch”.  Now that is &lt;strong&gt;smart&lt;/strong&gt;.  And when I first got to know him back in 2005 / 2006, he was just getting started with Spinn3r and he’s still at it.  He’s building a great product that solves a real problem.  And he’s even become a part of academia in being cited in over &lt;a href=&quot;https://scholar.google.com/scholar?q=spinn3r&quot;&gt;350 papers&lt;/a&gt; that are studying the rise of the social web.&lt;/p&gt;

&lt;p&gt;So here’s what I learned from Kevin Burton:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Persistence.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;and:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;strong&gt;Do what you love.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We all love the myth of the overnight success but real life isn’t like that.  Succeeding at anything takes copious amounts of time and persistence.  Doing what you love makes persistence easier and Kevin has taught that to me in spades.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/09/14/starting-learnings-what-kevin-burton-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/09/14/starting-learnings-what-kevin-burton-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>learnings</category>
        
        <category>entrepreneurship</category>
        
        
        <category>startup</category>
        
      </item>
    
  </channel>
</rss>
