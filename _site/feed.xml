<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 29 Mar 2017 10:32:41 -0400</pubDate>
    <lastBuildDate>Wed, 29 Mar 2017 10:32:41 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Setting Up a Router Level VPN to Secure Your Browsing</title>
        <description>&lt;p&gt;Well the fools in Congress really did it – they made it &lt;a href=&quot;https://arstechnica.com/tech-policy/2017/03/for-sale-your-private-browsing-history/&quot;&gt;legal for any ISP to sell your browsing habits&lt;/a&gt; - &lt;a href=&quot;https://news.ycombinator.com/item?id=13981184&quot;&gt;Hacker News Discussion&lt;/a&gt;.  If you think this isn’t a privacy issue then consider these examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visiting babycenter.com?  Maybe you’re pregnant.&lt;/li&gt;
  &lt;li&gt;Visiting cars.com?  Maybe you’re buying a new car.&lt;/li&gt;
  &lt;li&gt;Visiting celiac.com?  Maybe you have medical issues around gluten.&lt;/li&gt;
  &lt;li&gt;Visiting kink.com?  Maybe you’re a sexual deviant.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-to-setup-a-router-side-vpn&quot;&gt;How To Setup a Router Side VPN&lt;/h1&gt;

&lt;p&gt;This is an &lt;strong&gt;abomination&lt;/strong&gt; of everyone’s privacy and the only even partial answer is to start using a VPN immediately.  Here’s how I did it.  I have an Internet connection from a local fiber ISP named &lt;a href=&quot;https://www.ninestarconnect.com/residential/residential-internet/&quot;&gt;NineStar&lt;/a&gt;.  They provided us with an ASUS RT-N66U router.  Here’s the step by step illustration of how to do this using this router.  I suspect that most current routers will now support this type of VPN setup but you need to check your router.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Sign up with a VPN provider. This usually costs between $5 and $10 per month.  I used &lt;a href=&quot;http://www.strongvpn.com/&quot;&gt;StrongVPN&lt;/a&gt; just now but I also looked at &lt;a href=&quot;http://www.mullvad.net&quot;&gt;Mullvad&lt;/a&gt; and &lt;a href=&quot;http://www.privateinternetaccess.com/&quot;&gt;Private Internet Access&lt;/a&gt;.  All of these are good; I’ve previously used Mullvad and they kept my browsing safe for years.  One of the reasons I went with StrongVPN was their wide support for mobile devices including &lt;a href=&quot;/blog/assets/vpn09.png&quot;&gt;iOS, Google Play and more&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go into your router’s control panel and find the VPN option:&lt;br /&gt;
&lt;img src=&quot;/blog/assets/vpn01a.png&quot; alt=&quot;/blog/assets/vpn01.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select the VPN client option:&lt;br /&gt;
&lt;img src=&quot;/blog/assets/vpn02b.png&quot; alt=&quot;/blog/assets/vpn02.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Set the VPN client parameters:&lt;br /&gt;
&lt;img src=&quot;/blog/assets/vpn03c.png&quot; alt=&quot;/blog/assets/vpn03.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;The parameters you really need to set are description (which VPN service you are using), VPN Server, User Name and Password.  You should also turn on Auto-Reconnection.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;disadvantages&quot;&gt;Disadvantages&lt;/h1&gt;

&lt;p&gt;Using a VPN can be a really nerdy thing and there can be disadvantages.&lt;/p&gt;

&lt;h2 id=&quot;turkey-anyone&quot;&gt;Turkey Anyone?&lt;/h2&gt;

&lt;p&gt;For example I was initially assigned to a VPN server that was located in Istanbul, Turkey.  This had the amusing impact of Google thinking that I was Turkish and giving me results from google.tr:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/vpn04.png&quot; alt=&quot;/blog/assets/google_turkey.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The solution for me was to log into StrongVPN and then change my VPN server’s location to one in Atlanta.  Here’s that process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Login to the &lt;a href=&quot;https://intranet.strongvpn.com/services/intranet&quot;&gt;Customer Area&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Click on Change Server:
&lt;img src=&quot;/blog/assets/vpn05.png&quot; alt=&quot;/blog/assets/vpn05.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;See what servers are available:
&lt;img src=&quot;/blog/assets/vpn06.png&quot; alt=&quot;/blog/assets/vpn06.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose a country:
&lt;img src=&quot;/blog/assets/vpn07.png&quot; alt=&quot;/blog/assets/vpn07.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose a server:
&lt;img src=&quot;/blog/assets/vpn07.png&quot; alt=&quot;/blog/assets/vpn07.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Click the Change Server button:
&lt;img src=&quot;/blog/assets/vpn08.png&quot; alt=&quot;/blog/assets/vpn08.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;netflix-sigh&quot;&gt;Netflix, Sigh&lt;/h2&gt;

&lt;p&gt;The biggest issue for most people with a VPN will be that it kills Netflix entirely.  If you google for &lt;a href=&quot;https://www.google.com/search?q=Netflix+VPN&amp;amp;oq=Netflix+VPN&amp;amp;aqs=chrome..69i57j0l5.419j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;Netflix VPN&lt;/a&gt;, the 570,000 search results for that simple query should indicate that there’s something going on here.  The issue is that VPNs make content access look like it comes from a different location thus allowing a Netflix customer in say Thailand to get the U.S. version of Netflix.  And since this violates all kinds of content licensing, Netflix aggressively prevents the use of a VPN.  StrongVPN is supposed to work with Netflix (that’s one of the reasons I chose it) but, right now, at least for me, it seems to be failing.&lt;/p&gt;

&lt;p&gt;For right now I’m going to go with the “Turn VPN on / off” when we want to use Netflix.  I’m sure there are better approaches and I’ll likely figure one out but for now this will work given that most of our media content is on a local &lt;a href=&quot;http://www.plex.tv&quot;&gt;Plex&lt;/a&gt; server and not on Netflix.&lt;/p&gt;

&lt;p&gt;I know the Netflix problems absolutely suck but the privacy and security that this provides is absolutely worth it.&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/vpn/2017/03/29/setting-up-a-router-level-vpn-to-secure-your-browsing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/vpn/2017/03/29/setting-up-a-router-level-vpn-to-secure-your-browsing.html</guid>
        
        <category>vpn</category>
        
        <category>privacy</category>
        
        <category>security</category>
        
        <category>router</category>
        
        
        <category>vpn</category>
        
      </item>
    
      <item>
        <title>Getting Started with Ansible when You Know Literally Nothing</title>
        <description>&lt;p&gt;An old friend, let’s call him GC, emailed me earier today about ansible:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Scott,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’m trying out ansible… But I’m a little at a loss as to what I do next.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Goal: We have been working on an x86 assembly language interpreter available on the web, for student usage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;We build and test it locally, push to GitHub… but then we have to remember to login to our pythonanywhere servers, do the appropriate pull, and restart the web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This seems like exactly what ansible is for. But I’ve now installed it locally, and at pythonanywhere, and… well, I’m watching nice videos about the wonderful way ansible can automate this, and I can run ansible-console and see zillions of commands, and…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Well, I &lt;em&gt;think&lt;/em&gt; I need a playbook, and I &lt;em&gt;guess&lt;/em&gt; I can invoke it from my makefile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;On the remote, I need to:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Get to the proper directory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run git pull origin (dev or master)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Restart the web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I also think I need some sort of SSH key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Any guidance you can offer on getting going with this would be greatly appreciated!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;gc&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ansible is the best devops tool I’ve ever used but its yaml based syntax and mixture of different concepts - playbooks, roles, tasks and inventories can make this hard so let’s break this down bit by bit and construct a conceptual model for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you want a set of introductory slides on Ansible, &lt;a href=&quot;http://fuzzyblog.io/blog/assets/ansible_basics.pdf&quot;&gt;here are a set of slides&lt;/a&gt; that I gave in Fall 2016 at an Elixir Meetup.&lt;/p&gt;

&lt;h1 id=&quot;definitions&quot;&gt;Definitions&lt;/h1&gt;

&lt;p&gt;Let’s start with some definitions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Playbook - A collection of logical tasks that are designed to accomplish a purpose.  Think of a playbook as an executable of limited scope.  Playbooks execute roles.&lt;/li&gt;
  &lt;li&gt;Role - A specific thing that you want the playbook to accomplish.  If you had a Playbook that had as its goal to install Ruby then it might have roles of: download source, compile source and then copy the final executable into pace.&lt;/li&gt;
  &lt;li&gt;Tasks - A task is a collection of things that a role does.&lt;/li&gt;
  &lt;li&gt;Inventory - an inventory is a collection of hosts that you want to execute a playbook on.  This is generally just an ASCII file formatted as a .ini file&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-actually-is-ansible&quot;&gt;What Actually Is Ansible?&lt;/h1&gt;

&lt;p&gt;Part of what makes Ansible confusing is that its not an imperative, from start to finish scripting language.  Ansible is instead a &lt;em&gt;state description system&lt;/em&gt; where what you’re doing is describing the state of the system that you want to achieve, as a series of yaml documents, and then Ansible itself reconciles the target system with that state description until it matches.  If you ever did expert systems development then think of Ansible as a problem solving engine and that’s actually pretty close to the truth.&lt;/p&gt;

&lt;h1 id=&quot;solving-our-problem&quot;&gt;Solving Our Problem&lt;/h1&gt;

&lt;p&gt;There are at least three ways that we could solve this problem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Local to Remote&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Remote to Remote&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On Remote&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The difference between these two is &lt;strong&gt;where&lt;/strong&gt; Ansible is executing and the reason that’s important is that Ansible operates via SSH automation at its core.  This means that the underlying concept of &lt;em&gt;connection&lt;/em&gt; is key to Ansible.  You can operate Ansible either via a connection from your local machine to a series of remote hosts (your inventory) or you can operate it on a remote host solely (the connection: local approach).  My suspicion is that either approach could be made to work so let’s explore both.&lt;/p&gt;

&lt;h2 id=&quot;local-to-remote&quot;&gt;Local to Remote&lt;/h2&gt;

&lt;p&gt;With a local to remote approach, the ansible code executes initially on your local machine but connects to each of the machines identified in your inventory.  This connection is done through SSH automation.  I know a lot of my readers are people from the Ruby community so perhaps this analogy might help – if you’re at all familiar with &lt;a href=&quot;http://capistranorb.com/&quot;&gt;Capistrano&lt;/a&gt; then think of this aspect of Ansible as a vastly more generalized Capistrano.&lt;/p&gt;

&lt;h2 id=&quot;remote-to-remote&quot;&gt;Remote to Remote&lt;/h2&gt;

&lt;p&gt;A Remote to Remote approach is actually very similar to local to remote.  The only real difference is that you use a dedicated ansible box on your network to handle running your Ansible code.  This can have some pretty dramatic performance improvements since your remote box is at the same “level” as your ansible code itself.&lt;/p&gt;

&lt;h2 id=&quot;on-remote&quot;&gt;On Remote&lt;/h2&gt;

&lt;p&gt;Another approach would be to run the ansible process solely on the remote machine directly.  I’ve done less of this but it should certainly be possible.&lt;/p&gt;

&lt;h2 id=&quot;choosing-local-to-remote&quot;&gt;Choosing Local to Remote&lt;/h2&gt;

&lt;p&gt;Local to Remote feels like the cleanest match for this problem given my limited knowledge – I know only what was in the email printed above (slight readability / formatting changes).&lt;/p&gt;

&lt;h2 id=&quot;starting-with-a-make-file&quot;&gt;Starting with a Make File&lt;/h2&gt;

&lt;p&gt;GC is an outstanding, low level software developer so his thinking of ansible as something you run directly from the makefile doesn’t surprise me at all.  In an earlier life he implemented the HyperAwk programming language for me using Borland’s Turbo Pascal (yes I’ve known him that long).  HyperAwk was a variant on the Awk programming language that read directly from binary word processing files (Word, WordPerfect, Ami Pro, Samna) and then constructed hypertext documents from them.  I miss HyperAwk but I digress.&lt;/p&gt;

&lt;p&gt;Let’s start with a sample makefile.  Here’s one from the &lt;a href=&quot;https://www.gnu.org/software/make/manual/html_node/Simple-Makefile.html&quot;&gt;Gnu folks&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;edit : main.o kbd.o command.o display.o 

main.o : main.c defs.h
        cc -c main.c
kbd.o : kbd.c defs.h command.h
        cc -c kbd.c
command.o : command.c defs.h command.h
        cc -c command.c
display.o : display.c defs.h buffer.h
        cc -c display.c
insert.o : insert.c defs.h buffer.h
        cc -c insert.c
search.o : search.c defs.h buffer.h
        cc -c search.c
files.o : files.c defs.h buffer.h command.h
        cc -c files.c
utils.o : utils.c defs.h
        cc -c utils.c
clean :
        rm edit main.o kbd.o command.o display.o \
           insert.o search.o files.o utils.o
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And while GC’s makefile is certainly different, conceptually it should be much the same - a series of steps which result in the production of a binary file.  In GC’s case that binary is checked into a version control system and that’s what our Ansible playbook will operate on.&lt;/p&gt;

&lt;p&gt;What we’re going to need to do is invoke our Ansible playbook at the end of the clean: stage with a line something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-playbook -i /Users/sjohnson/me/fuzzygroup/ansible/gc01/inventories/hosts /Users/sjohnson/me/fuzzygroup/ansible/gc01/playbook_deployer.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As I don’t know anything about the paths in GC’s build system, I’m specifying absolute paths to everything but there’s nothing stopping GC from embedding his ansible code into the build process itself – that’s a choice that he could certainly make.  Obviously he would change the /sjohnson/ to something on his local system.&lt;/p&gt;

&lt;h2 id=&quot;the-inventory-file&quot;&gt;The Inventory File&lt;/h2&gt;

&lt;p&gt;The file /Users/sjohnson/me/fuzzygroup/ansible/gc01/inventories/hosts is just an ASCII file that might look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[production]
ansible_ssh_host=ec2-99-39-100-178.us-east-1.compute.amazonaws.com        ansible_ssh_private_key_file=/Users/sjohnson/.ssh/aws.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we wanted this to execute on say 10 different hosts then we’d simply enumerate all 10 hosts here.  And if our local machine’s SSH keys are setup to reach the remote box directly then we wouldn’t even have to specify a .pem file.  The example above shows how I generally configure ansible to talk to AWS since that’s a very, very common use case.&lt;/p&gt;

&lt;h2 id=&quot;the-roles-we-need&quot;&gt;The Roles We Need&lt;/h2&gt;

&lt;p&gt;Here are the roles that we’re likely to need:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git_pull&lt;/li&gt;
  &lt;li&gt;web_server_restart&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ansible like a lot of open source tools can be used in many different ways.  I’ve looked at a lot of Ansible code on the web and I’ve written probably close to 10K lines of Ansible by now and I have a pretty opinionated approach to Ansible development by this point.  I treat Ansible code just as if it was “real” source code and I use a very disciplined approach to the files and structure of an ansible “application” – don’t kid yourself, Ansible is a real application development tool even if it doesn’t seem like it.  If you have any doubts on Ansible as a development environment, please read &lt;a href=&quot;http://fuzzyblog.io/blog/aws/2017/03/06/using-ansible-as-a-development-tool-with-rails.html&quot;&gt;this post of mine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before we delve too deep into the specific ansible code, let’s look at the file structure that makes up what we need to do.  Here is tree’s output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/me/fuzzygroup/ansible/gc01
20:19 $ tree
.
├── docs
│   └── readme.txt
├── inventories
│   └── hosts
└── roles
    ├── git_pull
    │   └── tasks
    │       └── main.yml
    └── web_server_restart
        └── tasks
            └── main.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-playbook&quot;&gt;The Playbook&lt;/h2&gt;

&lt;p&gt;Here is the playbook that we’ll need:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- hosts: production
  become: yes
  remote_user: ubuntu
  vars:
    - checkout_path: &quot;/home/gc/code&quot;
    - repo: &quot;git://foosball.example.org/path/to/repo.git&quot;
    - version: &quot;release-0.22&quot;
  roles:
    - { role: git_pull, tags: git}
    - { role: web_server_restart, tags: web_server}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Each bit of this has the following purpose:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hosts - identifies a group of hosts in the inventory file.&lt;/li&gt;
  &lt;li&gt;become - tells Ansible to do its operations using sudo&lt;/li&gt;
  &lt;li&gt;remote_user - tells ansible what user to run as on the remote host&lt;/li&gt;
  &lt;li&gt;vars - defines a series of variables to be used inside roles&lt;/li&gt;
  &lt;li&gt;roles - defines the roles to be called in order&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-checkout-role&quot;&gt;The Checkout Role&lt;/h2&gt;

&lt;p&gt;Ansible uses what are called modules to interface with things and, happily, there is a &lt;a href=&quot;https://docs.ansible.com/ansible/git_module.html&quot;&gt;Git module&lt;/a&gt;.  We can use that to handle the checkout and that reduces the complexity down to just a few lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# https://docs.ansible.com/ansible/git_module.html
- name: Check out from the Git Repo
  git:
    repo: &quot;&quot;
    dest: &quot;&quot;
    version: 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-web-server-restart&quot;&gt;The Web Server Restart&lt;/h2&gt;

&lt;p&gt;Restarting the web server is a hard to define thing since web servers vary considerably so all I can do here is provide an example based on what I use for a web server – Apache:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# https://docs.ansible.com/ansible/shell_module.html
- name: Restart web server
  shell: 
    cmd: &quot;apache2ctl restart&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;example-repo&quot;&gt;Example Repo&lt;/h1&gt;

&lt;p&gt;All the code referenced above is located in this &lt;a href=&quot;https://github.com/fuzzygroup/ansible_gc&quot;&gt;git repo&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;learning-more&quot;&gt;Learning More&lt;/h1&gt;

&lt;p&gt;This is barely touching the surface of Ansible.  Not only did I completely ignore Ansible’s idempotent nature but I also skipped a ton of other important things such as AWS automation, the &lt;em&gt;censored&lt;/em&gt; nature of Ansible Galaxy, python Boto support and more.  Here are some pointers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://fuzzyblog.io/blog/category.html#ansible&quot;&gt;My Blog on Ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jeffgeerling.com/&quot;&gt;Jeff Geerling&lt;/a&gt; / &lt;a href=&quot;https://github.com/geerlingguy&quot;&gt;His Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leanpub.com/ansible-for-devops&quot;&gt;Ansible for Devops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leanpub.com/ansible-for-aws&quot;&gt;Ansible for AWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last two resources are ebooks and they are both excellent.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/ansible/2017/03/22/getting-started-with-ansible-when-you-know-literally-nothing.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/ansible/2017/03/22/getting-started-with-ansible-when-you-know-literally-nothing.html</guid>
        
        <category>ansible</category>
        
        
        <category>ansible</category>
        
      </item>
    
      <item>
        <title>Gluten Warning - Mushrooms May Not Actually Be Gluten Free</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://startcooking.com/public/IMG_0474.JPG&quot; alt=&quot;http://startcooking.com/public/IMG_0474.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don’t often write about food issues here – I have a &lt;a href=&quot;http://fuzzyblog.io/recipes/&quot;&gt;recipe blog&lt;/a&gt; for that.  But sometimes I find something so egregious that I feel compelled to write something.  My wife suffers, quite badly, from &lt;a href=&quot;https://celiac.org/celiac-disease/understanding-celiac-disease-2/what-is-celiac-disease/&quot;&gt;Celiac disease&lt;/a&gt;.  And, as with any auto-immune condition, it is always a running battle where the symptoms change and you’re always in responsive mode.&lt;/p&gt;

&lt;p&gt;Lately my wife has been having odd stomach issues and we finally managed to correlate it to mushrooms.  Our whole kitchen is gluten free and the few gluten based ingredients we do have are physically &lt;strong&gt;stored&lt;/strong&gt;, and &lt;strong&gt;used&lt;/strong&gt;, on a different &lt;strong&gt;floor&lt;/strong&gt; of the house.  So we knew it wasn’t a normal cross contamination issue.  We also hadn’t eaten out in weeks so that was off the table as well.  A bit of googling turned up this &lt;a href=&quot;https://www.verywell.com/are-mushrooms-gluten-free-562814&quot;&gt;Very Well post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Answer: There’s no question that plain mushrooms ought to be gluten-free — after all, they’re a fresh vegetable, right? But lots of people report getting glutened after eating fresh mushrooms … enough people that it’s worth looking into how mushrooms are grown.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In fact, once you learn how they’re grown, you’ll understand why many people react, especially those who are particularly sensitive to trace gluten.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;You see, mushroom spores are grown either directly on gluten grains, or on a medium that’s derived at least in part from gluten grains. Rye is used most commonly for this purpose, but growers also use wheat and occasionally on a combination of the two grains (barley, the third gluten grain, doesn’t seem to be in common use for growing mushrooms). And this cultivation method leads to gluten cross-contamination on the finished fungi.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It should be noted that the article goes on to say that the presence of gluten in mushrooms is below the 20 ppm standard that defines gluten.  But my wife is admittedly very, very sensitive to ingredients and she can taste the presence of things that I can’t so it doesn’t surprise me that she has problems with mushrooms.  But, even so – what have things come to when a vegetable (ok a fungus) – in its “natural” state – contains gluten?&lt;/p&gt;

&lt;p&gt;This only emphasizes to me just how &lt;strong&gt;very, very careful&lt;/strong&gt; you have to be when you have celiac or any food related issue – what you think you’re buying may not be exactly what you expect.&lt;/p&gt;

</description>
        <pubDate>Tue, 21 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/gluten_free/2017/03/21/gluten-warning-mushrooms-may-not-actually-be-gluten-free.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/gluten_free/2017/03/21/gluten-warning-mushrooms-may-not-actually-be-gluten-free.html</guid>
        
        <category>warning</category>
        
        <category>gluten_free</category>
        
        
        <category>gluten_free</category>
        
      </item>
    
      <item>
        <title>Getting Around OSX Bash Fork Issues</title>
        <description>&lt;p&gt;If you’ve ever seen this error under OSX:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-bash: fork: Resource temporarily unavailable
-bash: fork: Resource temporarily unavailable
-bash: fork: Resource temporarily unavailable
-bash: fork: Resource temporarily unavailable
-bash: fork: Resource temporarily unavailable
-bash: fork: Resource temporarily unavailable
-bash: cannot make pipe for command substitution: Too many open files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;then you know that it usually signals “Oh crap - restart the box”.  If you’re a Rails developer then you may be hitting this due to problems with the new &lt;a href=&quot;https://github.com/puma/puma-dev/issues/56&quot;&gt;Puma development server and the evented listener&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The solution is to change the listener in config/environments/development.rb from:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;config.file_watcher = ActiveSupport::EventedFileUpdateChecker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;config.file_watcher = ActiveSupport::FileUpdateChecker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You might also want to kill the listen gem as well (read the linked issue above).&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/osx/2017/03/20/getting-around-osx-bash-fork-issues.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/osx/2017/03/20/getting-around-osx-bash-fork-issues.html</guid>
        
        <category>osx</category>
        
        <category>bash</category>
        
        <category>rails</category>
        
        <category>fork</category>
        
        <category>mac</category>
        
        
        <category>osx</category>
        
      </item>
    
      <item>
        <title>Disabling Spring in Rails</title>
        <description>&lt;p&gt;I now have more than a decade at building Rails apps and, since most of that time was a consultant, I think its fair to say that I’ve seen, worked on and built from scratch a lot of Rails applications.  My single least favorite part of Rails is the monolith application pattern.  While it can be incredibly productive to have every aspect of your source code in a single place, monoliths are an inherent anti-pattern:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They are brittle&lt;/li&gt;
  &lt;li&gt;They are fragile&lt;/li&gt;
  &lt;li&gt;Gems can conflict with each other&lt;/li&gt;
  &lt;li&gt;Ruby is a dynamic, late bound, garbage collected language – the more lines of code you have the more likely you are to have some kind of conflict&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Monoliths seem to work great for building BaseCamp but I am immensely unhappy with them and I’ve spent the past several months going down a service oriented architecture (SOA) approach for my side project.&lt;/p&gt;

&lt;p&gt;Spring is an application pre-loader which loads a chunk of your Rails code into memory in order to speed up development.  By having things preloaded, for example, you can get into rails console faster, or run tests faster, etc.  And this works fine when you have a monolith application pattern.  In my case, however, I’m partitioning my data at the user level into individual databases and using an environment variable to specify the database at load time with this trick in database.yml:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;database: cartazzi_web_app_&amp;lt;%= ENV[‘CARTAZZI_USER_ID’] %&amp;gt;_development&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And this works perfectly – until Spring rears its ugly head.  Since Spring has things cached, you can go into rails console and execute a User.first and find the wrong user.  It becomes even more confusing when you check the database with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rails.application.config.database_configuration[Rails.env][“database”]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And it reports back a database that you &lt;strong&gt;know&lt;/strong&gt; isn’t the one where the user you just found doesn’t exist.  What’s going on is that the Rails console is talking to its in memory configuration which reports back something from earlier, not your current configuration.  And then you scratch your head for quite a bit until you cobble together enough brain cells to recall “oh crap – SPRING!”.&lt;/p&gt;

&lt;p&gt;The solution is to disable Spring entirely.  Here’s how:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;At the shell level, do this: &lt;strong&gt;pkill -f spring&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Edit your Gemfile and comment out all the spring references.&lt;/li&gt;
  &lt;li&gt;At the shell level, do this: &lt;strong&gt;bin/spring binstub –remove –all&lt;/strong&gt;  &lt;a href=&quot;http://stackoverflow.com/questions/30302021/rails-runner-without-spring&quot;&gt;Stack Overflow Reference&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are other ways around this including an environment variable which temporarily disables it but given the number of spring related processes I keep having to kill, I think getting it out entirely is better.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/03/20/disabling-spring-in-rails.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/03/20/disabling-spring-in-rails.html</guid>
        
        <category>rails</category>
        
        <category>monolith</category>
        
        <category>hyde</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Questioning the Nature of Gem'ified JavaScript</title>
        <description>&lt;p&gt;In 2017 you can’t be doing web development and not at least be doing some JavaScript.  I bloody well hate JavaScript and even I’m dipping my toe into the JS water.  Way, way, way back in the mid 90s I got very badly burned by JavaScript compatibility issues and I’ve never looked back but it is time.  So I’ve been mucking about with d3 and it has been a hellish weekend indeed.  When I learn a new technology I like to start with the simplest possible example so I started with the &lt;a href=&quot;http://www.overfitted.com/blog/?p=302&quot;&gt;Overfitted Rails / D3 example&lt;/a&gt; because its only about 10 files total.  And this example works perfectly in Rails 4.2.  Kudos to the author.  Now while it works perfectly in Rails 4.2, it entirely fails to render the world’s simplest bar graph in &lt;a href=&quot;https://github.com/fuzzygroup/rails5_d3_seed&quot;&gt;Rails 5&lt;/a&gt; and nothing I do makes it work.  This has the feel of some type of “Rails Magic” that changes from 4 to 5 so something that was implicit is now explicit and Ghu only knows what the &lt;em&gt;censored&lt;/em&gt; it is.  I’ve put probably 3+ hours into making this example work and I’m now at the point of wanting to take a hammer to a Macbook – clearly time to move on.&lt;/p&gt;

&lt;p&gt;The saddest part of all this is that the author of the overfitted example is clearly a bright, bright guy as based on his &lt;a href=&quot;http://stackoverflow.com/users/1583239/qwwqwwq&quot;&gt;Stack Overflow profile&lt;/a&gt; - top 12%, better than &lt;a href=&quot;http://stackoverflow.com/users/409644/fuzzygroup&quot;&gt;me&lt;/a&gt; certainly but there’s no obvious way to contact him and no comments on his blog so, sigh…&lt;/p&gt;

&lt;p&gt;My next stopping point on this d3 quest was &lt;a href=&quot;http://gregpark.io/blog/live-d3-rails-plot/&quot;&gt;Greg Park’s Adding a Live D3 Visualization to Rails&lt;/a&gt;.  This is a lot more complex than Overfitted but all the bits are there and &lt;a href=&quot;https://github.com/gregoryjpark/live-d3-example&quot;&gt;there’s a full repo&lt;/a&gt;.  So the first step was a quick fork so I could remove the postgres dependency.  An install showed that everything worked in Rails 4.  The moment of truth was to try it in &lt;a href=&quot;https://github.com/fuzzygroup/live-d3-example&quot;&gt;Rails 5&lt;/a&gt; – and it worked brilliantly!  Thank you Greg!&lt;/p&gt;

&lt;p&gt;I’m not a JS expert in any way – it would more more accurate to say “I’m a self professed JavaScript hater who feels he has no alternative but to try and use it (finally)” so my first thought was “Why not use the &lt;a href=&quot;https://github.com/iblue/d3-rails&quot;&gt;d3rails gem&lt;/a&gt;”.  Given that I had this in git, the path was clear:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;take my rails 5 exmaple&lt;/li&gt;
  &lt;li&gt;make a branch&lt;/li&gt;
  &lt;li&gt;delete the vendor/javascripts/d3.js file&lt;/li&gt;
  &lt;li&gt;update gemfile and add d3-rails&lt;/li&gt;
  &lt;li&gt;bundle install&lt;/li&gt;
  &lt;li&gt;try the app and see if the graphs display&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, what do you know, the result was the same as my &lt;a href=&quot;http://fuzzyblog.io/blog/css/2017/03/16/when-your-font-awesome-etsy-icon-doesn-t-display.html&quot;&gt;Font Awesome issues recently&lt;/a&gt; – the graphs didn’t display.  This is really making me question gems that wrap JavaScript libraries.  I would be certain that the problem here is that something changed in d3 and d3-rails isn’t current enough so something is broken.  But given that I’ve now hit this twice in the same week, it feels like either a CDN or vendor/assets/javascripts is the right approach for JavaScript inclusion.  Our historical method of wrapping JavaScript into gems for “inclusion” into the rails ecosystem is really feeling broken right now.  Thoughts?&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/03/19/questioning-the-nature-of-gem-ified-javascript.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/03/19/questioning-the-nature-of-gem-ified-javascript.html</guid>
        
        <category>rails</category>
        
        <category>javascript</category>
        
        <category>d3</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>When Your Font Awesome Etsy Icon Doesn't Display</title>
        <description>&lt;p&gt;I’m a fan of &lt;a href=&quot;http://fontawesome.io/&quot;&gt;Font Awesome&lt;/a&gt; and I think enough of it that it was actually the &lt;strong&gt;first&lt;/strong&gt; bit of software I purchased for use on my side project.&lt;/p&gt;

&lt;p&gt;I recently had the situation where most of my Font Awesome icons would show up but a few wouldn’t.  I knew it wasn’t a layout problem because the code was all machine generated and the Amazon icon was showing up just a few lines earlier.  An example of an icon which wouldn’t show up is the Etsy icon.&lt;/p&gt;

&lt;p&gt;As with almost all my crazy CSS / Bootstrap issues, I reached out to my buddy &lt;a href=&quot;http://dasari.me/&quot;&gt;Dv&lt;/a&gt; and a quick pairing session set it right.  The first solution we found was to add the following snippet to custom.scss in /app/assets/stylesheets:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.fa-etsy:before {
  content: &quot;\0045&quot;
  font-family: georgia, serif
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that fixed the Etsy icon – but it was really a work around and the credit goes to &lt;a href=&quot;https://hayley.cc/2016/10/05/Font-Awesome-No-Etsy-icon-No-problem/&quot;&gt;Hayley.cc&lt;/a&gt; (brilliant but still a work around).  But only fixing the Etsy icon clearly wasn’t enough.&lt;/p&gt;

&lt;p&gt;Dv did some digging and came up with the thesis that the &lt;a href=&quot;https://github.com/bokmann/font-awesome-rails&quot;&gt;font-awesome-rails gem&lt;/a&gt; wasn’t up to date and suggested I replace it with the CDN.  So by adding this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN&quot; crossorigin=&quot;anonymous&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problem was entirely fixed.  Given the problems with CloudBleed, a month ago, I’m mildly paranoid with a CDN but this did simply and brilliantly fix the problem.&lt;/p&gt;

&lt;p&gt;Thank you Dv!&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/css/2017/03/16/when-your-font-awesome-etsy-icon-doesn-t-display.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/css/2017/03/16/when-your-font-awesome-etsy-icon-doesn-t-display.html</guid>
        
        <category>css</category>
        
        <category>fontawesome</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Developer Employee Transitions When You're an AWS Shop</title>
        <description>&lt;p&gt;So I find myself advising a former employer on how to lock out an employee with fairly pervasive access (and, yes, I am the employee).  Here was my advice:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The safest option would be to move to white listing &lt;strong&gt;all&lt;/strong&gt; ip addresses needed for SSH login.  That would be an absolute ban on any incoming SSH logins from the old employee and, while inconvenient, is a wonderful means to lock down a system.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#having-ec2-create-your-key-pair&quot;&gt;Re-issue a new SSH pem file&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Delete the old SSH pem file on your machine and then verify login to at least 2 systems with the new PEM file.  I’d make sure to verify access to the primary db server using the new PEM file but that’s just me.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31912037/how-to-delete-deactivate-the-current-pem-file-and-create-new-one-in-aws&quot;&gt;De-authorize the old PEM file&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/reference/apigateway/delete-api-key.html&quot;&gt;Delete the API keys that the employee had access to&lt;/a&gt;.  Make sure that you delete them in all regions where they were valid.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/03/14/developer-employee-transitions-when-you-re-an-aws-shop.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/03/14/developer-employee-transitions-when-you-re-an-aws-shop.html</guid>
        
        
      </item>
    
      <item>
        <title>Ansible Error with AWS, AMI Creation and Encrypted</title>
        <description>&lt;p&gt;Here is a bizarre Ansible / AWS error I just found:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;An exception occurred during task execution. To see the full traceback, use -vvv. The error was: TypeError: __init__() got an unexpected keyword argument 'encrypted'
fatal: [localhost]: FAILED! =&amp;gt; {&quot;changed&quot;: false, &quot;failed&quot;: true, &quot;module_stderr&quot;: &quot;Traceback (most recent call last):\n  File \&quot;/tmp/ansible_prCPvG/ansible_module_ec2_ami.py\&quot;, line 560, in &amp;lt;module&amp;gt;\n    main()\n  File \&quot;/tmp/ansible_prCPvG/ansible_module_ec2_ami.py\&quot;, line 552, in main\n    create_image(module, ec2)\n  File \&quot;/tmp/ansible_prCPvG/ansible_module_ec2_ami.py\&quot;, line 381, in create_image\n    bd = BlockDeviceType(**device)\nTypeError: __init__() got an unexpected keyword argument 'encrypted'\n&quot;, &quot;module_stdout&quot;: &quot;&quot;, &quot;msg&quot;: &quot;MODULE FAILURE&quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A quick google revealed &lt;a href=&quot;https://github.com/ansible/ansible-modules-core/issues/1773&quot;&gt;this solution&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pip install boto –upgrade&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;which I had to execute as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo pip install boto –upgrade&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/2017/03/14/ansible-error-with-aws-ami-creation-and-encrypted.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/03/14/ansible-error-with-aws-ami-creation-and-encrypted.html</guid>
        
        
      </item>
    
      <item>
        <title>Dropbox for the Software Developer</title>
        <description>&lt;p&gt;An old friend asked me a great question recently:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I saw you mentioning your use of Dropbox the other day. I’ve been using GitHub as my “cloud device”: when would I find Dropbox a better option?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the single best decisions that I made in 2016 was to adopt &lt;a href=&quot;http://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt; as the key part of my personal computing environment.  I last talked about this back on &lt;a href=&quot;http://fuzzyblog.io/blog/postmac/2016/11/05/life-in-a-postmac-world.html&quot;&gt;November&lt;/a&gt;, see the section “Conclusion - A Synchronized Computing Environment For Me” but it really does bear further description.&lt;/p&gt;

&lt;p&gt;My use for Dropbox is exactly what it is designed for – synchronization.  I’ve always had multiple machines but one has always been my “primary”” machine.  Since all my code was on Github, I could generally get to my code from any machine but what about my spreadsheets?  Or my documents?  Or just about any other file that I needed.  Here’s what I did:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Signup for a 1 Terabyte Dropbox account (roughly $50 / year so dirt cheap).&lt;/li&gt;
  &lt;li&gt;Install Dropbox on all my machines including my ChromeBook, my Linux box, my iPhone and iPad.&lt;/li&gt;
  &lt;li&gt;Symlink ~/Dropbox to ~/me so I have an easier path to type.&lt;/li&gt;
  &lt;li&gt;Move all the files that matter to me into ~/me under a logical file structure related to my usage context - ~/me/blogging for all my blogs, ~/me/Documents for Documents, ~/me/consulting for consulting work, ~/me/fuzzygroup for anything I do online and so on.&lt;/li&gt;
  &lt;li&gt;Move important things like SSH keys under ~/me and then use symlinks to insert them back into their correct location.&lt;/li&gt;
  &lt;li&gt;Create a ~/me/transfer directory to copy transitory data from one machine to anther.&lt;/li&gt;
  &lt;li&gt;Move all the git repos that matter underneath ~/me.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;My working set of data for Dropbox is about 40 gigabytes and I suspect that could be made smaller but I haven’t seen the need.  This approach has meant that literally no matter what computing device I am on, I always have access to the data that actually matters to me.  True I don’t have, for example, my iTunes music synchronized or my Photos but in terms of the data that I, as a software developer, actually rely on, this is about as perfect an environment as I could dream up.  The only objection I have is that on one of my machines, oddly the most powerful, Dropbox refuses to fully sync, always stalling out on two files that never complete.  Since there are no user facing logs on Dropbox for OSX, well, I have no idea what they are.  And, worse, it spikes my CPU past 100% always running up the fan and down the battery life.  But, other than that, I’m ridiculously happy with this as an approach.&lt;/p&gt;

&lt;p&gt;I know that this was supposed to be what Apple was going to give us with iCloud but iCloud:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Doesn’t seem to work particularly well&lt;/li&gt;
  &lt;li&gt;Removes local file storage of documents into the cloud solely thus absolutely screwing you over if you don’t have internet access&lt;/li&gt;
  &lt;li&gt;Has no cross platform support – I really wanted all my data on my ChromeBook and my Linux box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is astonishing to me that the cross machine synchronization environment that I’ve been searching for most of my professional life is nothing more than a simple Dropbox subscription but that’s all it took.&lt;/p&gt;

&lt;p&gt;I still do full OS level backups periodically but I don’t generally worry about it terribly since the data that matters is always safe being mirrored across all my computing devices and into the Dropbox cloud.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/dropbox/2017/03/13/dropbox-for-the-software-developer.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/dropbox/2017/03/13/dropbox-for-the-software-developer.html</guid>
        
        <category>dropbox</category>
        
        
        <category>dropbox</category>
        
      </item>
    
  </channel>
</rss>
