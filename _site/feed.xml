<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 13 Sep 2017 04:40:41 -0400</pubDate>
    <lastBuildDate>Wed, 13 Sep 2017 04:40:41 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Analyzing iPhone X, iPhone 8 and iPhone 8 Plus</title>
        <description>&lt;p&gt;I am not an Apple blogger – I leave that to people like &lt;a href=&quot;https://www.daringfireball.net&quot;&gt;Daring Fireball&lt;/a&gt; but I am an avid Apple user.  Between my wife and two sons, all of us have at least one Mac, iPad or iPhone.  I wrote this piece to analyze the differences between the new iPhones and help analyze how to spend what ultimately will be quite a bit of money.&lt;/p&gt;

&lt;p&gt;Note: This is all sourced from the web; my thanks to all the wonderful coverage cited below.  Particular kudos to Quincy Larson for his salient &lt;a href=&quot;https://medium.freecodecamp.org/why-you-should-never-unlock-your-phone-with-your-face-79c07772a28&quot;&gt;FaceID analysis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;understanding-your-personal-phone-usage&quot;&gt;Understanding Your Personal Phone Usage&lt;/h1&gt;

&lt;p&gt;I think the key to deciding whether or not to upgrade is to understand your personal phone usage and then if the new phones offer &lt;em&gt;you&lt;/em&gt; a benefit.  You &lt;em&gt;don’t have&lt;/em&gt; to upgrade.  Let me repeat that – you &lt;strong&gt;don’t have&lt;/strong&gt; to upgrade.  Personally I am still running a 128 gig iPhone 6.  I never made the leap to the 7 because I use the smaller phone form factor and the camera was mostly unchanged from the 6 to the 7.  Given the importance of the camera to people’s daily lives, I was delighted to see all the camera updates in the iPhone X - it is now the same camera as the 6 plus / 7 plus but in the smaller phone’s form factor (ok the X is a little bit larger but I would deem it insignificant).&lt;/p&gt;

&lt;p&gt;My iPhone usage pattern is simple: it goes &lt;strong&gt;everywhere&lt;/strong&gt; I go.  I carry it constantly and the only place I don’t take it is swimming. I’ve carried it with me when I was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;working on a roof&lt;/li&gt;
  &lt;li&gt;cutting down trees&lt;/li&gt;
  &lt;li&gt;fishing&lt;/li&gt;
  &lt;li&gt;working out&lt;/li&gt;
  &lt;li&gt;cooking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In aggregate, I use my phone more than any other computing device.  I compute less with it than I do a laptop but I use it more (if that makes sense).&lt;/p&gt;

&lt;p&gt;Since I am using an iPhone 6 still, this means that I am now two cycles removed from current.  Consequently my battery life is such that I have to recharge during the day even when I’m not using the GPS, I’m constantly running out of space, the screen is scratched (no clue how that happened).  I am thus in the market for a new phone.&lt;/p&gt;

&lt;h1 id=&quot;new-phones-summarized&quot;&gt;New Phones Summarized&lt;/h1&gt;

&lt;p&gt;There are three new phones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-8/specs/&quot;&gt;iPhone 8&lt;/a&gt; (similar to the current 7).  $699.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/specs/&quot;&gt;iPhone 8 Plus&lt;/a&gt; (similar to the current 7 plus).  $799.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/specs/&quot;&gt;iPhone X&lt;/a&gt; (the new phone).  $999.  Slightly bigger physically than the current iPhone 6 / 7 base model but NOT at all as large as the plus model.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The iPhone X is the new hotness with an all new form factor, better camera, &lt;strong&gt;no home button&lt;/strong&gt; and an OLED screen.  Both the iPhone X and iPhone 8 offer wireless charging although Apple’s own wireless charging mat will not ship until “2018”.  Given the AirPod shipping delays this is concerning.  Technically any Qi compatible charging mat can be used but my suspicion is that Apple’s will somehow be better / faster (otherwise why the delay).&lt;/p&gt;

&lt;h1 id=&quot;key-stats&quot;&gt;Key Stats&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;iPhone X is available for pre-order on October 27 w/ launch on November 3&lt;/li&gt;
  &lt;li&gt;iPhone X is available in 256 and 64 gig capacities&lt;/li&gt;
  &lt;li&gt;iPhone X has the &lt;strong&gt;same camera&lt;/strong&gt; as on the 7 Plus.&lt;/li&gt;
  &lt;li&gt;iPhone X has no home button and no TouchID.&lt;/li&gt;
  &lt;li&gt;iPhone X claims 2 hours longer battery life than the iPhone 7.&lt;/li&gt;
  &lt;li&gt;Animoji is exclusive to the iPhone X&lt;/li&gt;
  &lt;li&gt;iPhone 8 is available for pre-order on September 15th with launch on September 22&lt;/li&gt;
  &lt;li&gt;iPhone 8 and iPhone 8 Plus offer 12 MP cameras but the 8 Plus also has a telephoto lens.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the &lt;a href=&quot;https://www.apple.com/iphone/compare/&quot;&gt;Compare page&lt;/a&gt; for more.&lt;/p&gt;

&lt;h1 id=&quot;qualms-and-a-decision&quot;&gt;Qualms and a Decision&lt;/h1&gt;

&lt;p&gt;My biggest issue with the iPhone X is the lack of the home button and TouchID.  This is a fundamental change to the iPhone interface and one that greatly concerns me.  &lt;a href=&quot;https://medium.freecodecamp.org/why-you-should-never-unlock-your-phone-with-your-face-79c07772a28&quot;&gt;Quincy Larson&lt;/a&gt; raises some excellent points on why you shouldn’t unlock with your face.  Personally I find the need to unlock your phone while driving (GPS, play a podcast, etc) and the new FaceID feature disturbing to say the least.  As the parent of a driving age teenager, I will not be eager to see him get anything with FaceID.  Thankfully the device cost alone will prevent that but in a few years …&lt;/p&gt;

&lt;p&gt;Based on the analysis that I’ve done so far, I’m likely to upgrade to the iPhone X and do it through Apple’s monthly plan.  From what I’ve read, this amounts to about a $12 and change difference over the baseline 7 model and while I don’t like the $999 price, I don’t think that’s too much for something that I use constantly and travels with me literally everywhere I go that isn’t a swimming pool.&lt;/p&gt;

&lt;p&gt;The tipping point that pushed me over the edge to the new iPhone X was the new camera features being available in the iPhone X’s smaller form factor.  Had iPhone X had the same camera as the iPhone 7 then I likely wouldn’t have upgraded at all.  And had the iPhone 7 had the new camera as the iPhone X or 7 Plus, I likely would have decided to stay with the traditional home button design and not risked learning the new gestures.&lt;/p&gt;

&lt;h1 id=&quot;see-also&quot;&gt;See Also&lt;/h1&gt;

&lt;p&gt;Here are some excellent breakdowns:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone/compare/&quot;&gt;Apple iPhone Compare Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/&quot;&gt;Apple iPhone X Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-8/&quot;&gt;Apple iPhone 8 Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/apple-watch-series-3/&quot;&gt;Apple Watch Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-x/specs/&quot;&gt;iPhone X Tech Specs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/iphone-8/specs/&quot;&gt;iPhone 8 Tech Specs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arstechnica.com/gadgets/2017/09/hands-on-with-the-iphone-x-oled-and-hdr-outshine-everything-else/&quot;&gt;Ars Technica Hands On on the iPhone X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arstechnica.com/gadgets/2017/09/apples-radically-different-smartphone-is-called-the-iphone-x/&quot;&gt;Ars Technica on the iPhone X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theverge.com/2017/9/12/16287932/apple-iphone-8-plus-photos-video-hands-on&quot;&gt;iPhone 8 and 8 Plus from The Verge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theverge.com/2017/9/12/16291244/new-iphone-x-photos-video-hands-on&quot;&gt;iPhone X from the Verge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.macrumors.com/roundup/iphone-x/&quot;&gt;MacRumors on iPhone X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.macrumors.com/roundup/iphone-8/&quot;&gt;MacRumors on iPhone 8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=15229317&quot;&gt;Apple Watch Discussion on Hacker News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 13 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/iphone/2017/09/13/analyzing-iphone-x-iphone-7-and-iphone-7-plus.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/iphone/2017/09/13/analyzing-iphone-x-iphone-7-and-iphone-7-plus.html</guid>
        
        <category>iphone</category>
        
        <category>apple</category>
        
        
        <category>iphone</category>
        
      </item>
    
      <item>
        <title>Remembering Jerry Pournelle</title>
        <description>&lt;p&gt;There were three main dimensions to how I grew up:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reading.&lt;/li&gt;
  &lt;li&gt;Computing.&lt;/li&gt;
  &lt;li&gt;Entrepreneurship.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Jerry_Pournelle&quot;&gt;Jerry Pournelle&lt;/a&gt; dramatically affected each of these for me.  Here’s how:&lt;/p&gt;

&lt;h1 id=&quot;reading&quot;&gt;Reading&lt;/h1&gt;

&lt;p&gt;If you strip everything else away from me, at my core, I am a reader, specifically of the science fiction variety – and this goes all the way back to my childhood.  I’ve been reading as long as I can remember and it pretty much always has been science fiction.  I got started early with the Heinlein juveniles and it wasn’t a far leap from Heinlein to Jerry Pournelle.  I still remember when the librarians let me move from the kids section of the library to the adult section and that’s where I found him - King David’s Spaceship, West of Honor, Lucifer’s Hammer, Oath of Fealty and more.  And I can remember devouring Jerry’s work in Analog both under his name and under “Wade Curtis” when I started buying back issues and I remember having &lt;a href=&quot;https://www.abebooks.com/book-search/author/curtis-wade-pournelle-jerry/&quot;&gt;this one&lt;/a&gt; in my collection.&lt;/p&gt;

&lt;p&gt;A good author, whether fact or fiction, imparts something to his readers far beyond the story and what Jerry Pournelle gave to me was a deep appreciation for engineering and just plain &lt;em&gt;rationality&lt;/em&gt;.  Thanks Jerry!&lt;/p&gt;

&lt;h1 id=&quot;computing&quot;&gt;Computing&lt;/h1&gt;

&lt;p&gt;Right along side reading for me was computing which I discovered in the 7th grade in Wilton, Connecticut at the school’s computer lab (a selection of TRS-80 Model 1s).  A trip to the local Walden Books made me aware of Byte Magazine way back in April 82 with this issues:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://fiu-assets-2-syitaetz61hl2sa.stackpathdns.com/static/use-media-items/25/24048/full-971x1298/56703a87/198204.jpeg?resolution=0&quot; alt=&quot;byte magazine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That issue is still in my office and as I write this it is on my desk; I’ve owned it since I was 14 years old.&lt;/p&gt;

&lt;p&gt;And if I’m being honest, well, I understood about 1 word in 20, mostly the adjectives but what I did find actually not only readable but just plain joyful was &lt;em&gt;Chaos Manor&lt;/em&gt;, Jerry Pournelle’s column.  From that point forward, I read Byte for Jerry’s column and he was the person who gave me a deep love for computing in general and software in specific.  I can remember hours upon hours in my college library devouring back issues of Byte Magazine once I found their periodicals section.&lt;/p&gt;

&lt;p&gt;Finally I became aware of hypertext from things written in Byte Magazine – and my first startup was a hypertext company.  If not for Jerry addicting me to Byte Magazine, I might never have known about it and my whole life would have been different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you didn’t read Jerry back in the day then you don’t understand what a colossus Jerry was in small computing.  Computing was deeply different in those days, a much smaller community and if you were influential, well, you were important.  This was a man who knew everyone – Bill Gates, Marvin Minsky, Steve Wozniak and more.  According to Jerry, Byte Magazine paid him $10,000 per month to write that column and that’s a fair bit of $$$ even today – back in the early 80s, that was a king’s ransom just to write a monthly computer column.&lt;/p&gt;

&lt;h1 id=&quot;entrepreneurship&quot;&gt;Entrepreneurship&lt;/h1&gt;

&lt;p&gt;I started my first company, a software firm building hypertext tools, when I was 19 and the very first copy of software I ever sent to a reviewer was sent to Jerry Pournelle.  He didn’t cover it then and it took repeated copies that we kept sending him until November 26, 1990 when he did give us some coverage in his &lt;a href=&quot;https://books.google.com/books?id=u1AEAAAAMBAJ&amp;amp;pg=PA64&amp;amp;lpg=PA64&amp;amp;dq=%22jerry+pournelle%22+%22ntergaid%22&amp;amp;source=bl&amp;amp;ots=pDFl9rznro&amp;amp;sig=wHE-VXmUd2h64RPIIYSYmvcs2Rs&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=0ahUKEwjGjdCY55zWAhUJ5oMKHeZPCHoQ6AEIJjAA#v=onepage&amp;amp;q=%22jerry%20pournelle%22%20%22ntergaid%22&amp;amp;f=false&quot;&gt;Infoworld column&lt;/a&gt;. A huge amount of what I know about the software business, specifically about writing good documentation, providing good technical support and just plain listening to customers, I learned from Jerry and his long tales of Zeke, the S100 bus and more.  Jerry wrote about computing from the user’s perspective and he gave a large number of us a deep appreciation for the user.&lt;/p&gt;

&lt;h1 id=&quot;rediscovering-jerry-pournelle-through-twit&quot;&gt;Rediscovering Jerry Pournelle Through Twit&lt;/h1&gt;

&lt;p&gt;Despite the deep impact that Jerry Pournelle has had on my life, I haven’t thought much about Jerry for a long time now – Byte is long gone and the pace of his fiction output has decreased and his Chaos Manor column on the web didn’t resonate for me in the same way as his print column.  But thanks to Leo Laporte’s excellent TWIT show on YouTube, I have been able to discover him all over again:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=S7j3IG4h42Y&quot;&gt;Twit 90&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_5UVunOiXCk&quot;&gt;Twit 95&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some amazing stories here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In Twit 90, he talks about making nitroglycerin at age 12&lt;/li&gt;
  &lt;li&gt;In Twit 95, he talks about the act of god that led him into freelance writing and then discussing the probability of it with Marvin Minsky (Minsky created Lisp and founded the MIT AI lab)&lt;/li&gt;
  &lt;li&gt;In Twit 95, we talks about Robert Heinlein and the problem with being a best selling author, no one has the guts to edit you: “Time Enough or Love – there are three good novels there, shouldn’t they be three good novels?” (loose paraphrase but it is pretty close)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Twit 90, Jerry describes his Byte writing as “I wrote the Field and Stream column” and that analogy instantly brought all of his computing writing into focus for me since I actually grew up hunting &lt;strong&gt;and&lt;/strong&gt; reading Field and Stream.&lt;/p&gt;

&lt;p&gt;Thank you very, very much Leo for doing these interviews, listening to you talk with Jerry for a few hours means a huge amount to me.&lt;/p&gt;

&lt;p&gt;Goodbye Jerry, you’ll be missed but your influence is still alive and well.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/personal/2017/09/11/remembering-jerry-pournelle.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/personal/2017/09/11/remembering-jerry-pournelle.html</guid>
        
        <category>personal</category>
        
        <category>scifi</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>SAAS Business Best Practices from Jonathan Siegel</title>
        <description>&lt;p&gt;Jonathan Siegel wrote &lt;a href=&quot;https://www.amazon.com/dp/B071NGMJPN&quot;&gt;The San Francisco Fallacy&lt;/a&gt; which is my favorite startup book of the year.  I liked it well enough that I’m in the middle of a second read and its one of the books I packed for an upcoming trip to Disney World.  Jonathan was &lt;a href=&quot;http://okdork.com/buying-a-business-jonathan-siegel/&quot;&gt;recently interviewed by Noah Kagan for Ok Dork&lt;/a&gt; and while all of it was excellent, there was one brief shining moment where it felt like the sun had opened up and ideas were literally shining down.  Here’s a recap of the best practices that he identified for a SAAS business:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Testing their adwords.&lt;/li&gt;
  &lt;li&gt;Doing landing page testing.&lt;/li&gt;
  &lt;li&gt;Sending out newsletters.&lt;/li&gt;
  &lt;li&gt;Blogging regularly.&lt;/li&gt;
  &lt;li&gt;Forming partnerships.&lt;/li&gt;
  &lt;li&gt;Going to events.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5 minute callbacks whenever they get a new lead on the website&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Try six times to reach every new inbound lead&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Numbers 7 and 8 are new to me and ones that I definitely want to try.  Much of this interview was covering how he buys a business and the money statement of this was “If they team is already doing all these then I would never buy this company” because these techniques are how he adds value to the business and increases revenue.&lt;/p&gt;

&lt;p&gt;All of this was covered around the 24 minute mark.  If you’re an entrepreneur, I’d highly recommend listening to this podcast.  Noah’s stuff is always great but this particular episode was golden.  There’s also a great segment on how he identifies people to hire and why he doesn’t hire A players.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/saas/2017/09/06/saas-business-best-practices-from-jonathan-siegel.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/saas/2017/09/06/saas-business-best-practices-from-jonathan-siegel.html</guid>
        
        <category>saas</category>
        
        <category>marketing</category>
        
        <category>best_practices</category>
        
        <category>business</category>
        
        
        <category>saas</category>
        
      </item>
    
      <item>
        <title>Reclaiming Docker Disc Space on OSX</title>
        <description>&lt;p&gt;A few nights ago, after a truly horrible night’s sleep complete with my first ever incidence of acid reflux, I woke to find my Mac nattering at me about being &lt;strong&gt;out of disc space&lt;/strong&gt;.  And by out of disc space I mean that I was down to about 3 gigs out of a terabyte sized SSD.  Yikes!&lt;/p&gt;

&lt;p&gt;Taking a look at the normal culprits yielded no surprise increases and I can distinctly recall having in excess of 30 gigs just a day or two ago.  Given all the &lt;a href=&quot;http://fuzzyblog.io/blog/docker/2017/08/30/running-out-of-disc-space-with-docker.html&quot;&gt;server side problems with respect to Docker and disc space&lt;/a&gt; that I have written about previously, I had a strong hunch that somehow Docker was involved.&lt;/p&gt;

&lt;h1 id=&quot;logs&quot;&gt;Logs&lt;/h1&gt;

&lt;p&gt;My first thought was that perhaps Docker logs are huge.  On OSX, Docker logs are stored here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But a quick:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;09:41 $ du -shc ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log
 20K	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log
 20K	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nope – clearly 20K isn’t anything for disc space usage.&lt;/p&gt;

&lt;h1 id=&quot;containers&quot;&gt;Containers&lt;/h1&gt;

&lt;p&gt;My next thought was that perhaps Docker has some massive backing store for containers.  I did a bunch of searches and ran across this &lt;a href=&quot;https://forums.docker.com/t/consistently-out-of-disk-space-in-docker-beta/9438/67&quot;&gt;Docker thread&lt;/a&gt; and then &lt;a href=&quot;https://forums.docker.com/t/consistently-out-of-disk-space-in-docker-beta/9438/36&quot;&gt;another thread&lt;/a&gt;, both of which pointed me to the Docker.qcow2 file.&lt;/p&gt;

&lt;p&gt;Here’s what a du -shc showed me on this file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 57G	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 57G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;futile-attempts-to-reclaim-space&quot;&gt;Futile Attempts to Reclaim Space&lt;/h1&gt;

&lt;p&gt;I tried the normal things like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker system prune&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And when that failed, I tried a bash based approach:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;item &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker ps -aq&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;docker stop &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;
docker rm &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

for &lt;/span&gt;item &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker images --filter &lt;span class=&quot;nv&quot;&gt;dangling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -q&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;docker rmi &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But even after both of these, I still had:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
 57G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;my-solution&quot;&gt;My Solution&lt;/h1&gt;

&lt;p&gt;Here was the approach that I used:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Quit Docker for Mac entirely.&lt;/li&gt;
  &lt;li&gt;rm /Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2&lt;/li&gt;
  &lt;li&gt;As best as I can tell this is actually safe because containers can always be rebuilt.&lt;/li&gt;
  &lt;li&gt;Restart Docker&lt;/li&gt;
  &lt;li&gt;Verify space usage:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
  1.3G total&lt;/p&gt;

&lt;p&gt;I then built a container and then reverified disc space usage.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
1.3G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then built some more containers and then checked disc space usage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.0G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then started my overall “build all containers” shell script and tracked progress as it went:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.0G	total

09:58 $ du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.1G	total

du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
3.4G    total

du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
5.4G    total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By the time all containers were built:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
7.2G    /Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now, several days later and even more deploys, it has increased again:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -shc     ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
8.2G	/Users/sjohnson/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2
8.2G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;read-more&quot;&gt;Read More&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.docker.com/t/consistently-out-of-disk-space-in-docker-beta/9438/67&quot;&gt;Great Docker Thread about Disc Space Usage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.docker.com/t/where-does-docker-keep-images-containers-so-i-can-better-track-my-disk-usage/8370&quot;&gt;Docker Thread about Disc Space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 06 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/docker/2017/09/06/reclaiming-docker-disc-space-on-osx.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/docker/2017/09/06/reclaiming-docker-disc-space-on-osx.html</guid>
        
        <category>docker</category>
        
        <category>osx</category>
        
        <category>mac</category>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Notes on Upgrading to Rails 5.1</title>
        <description>&lt;p&gt;So this morning I upgraded the suite of Rails apps (7 in total) that make up the product that I’ve been building from Rails 5.0.2 to 5.1.3.  I took my usual, slow as a turtle, approach to doing this upgrade (5.1.4 has now reached RC1 status which means that 1 release behind is uite stable by now).  The main change driving my desire to upgrade was the improved low level connection handling in ActiveRecord which should make developing multi-tenant applications better.&lt;/p&gt;

&lt;p&gt;Here are a few notes on upgrading to Rails 5.1.&lt;/p&gt;

&lt;h1 id=&quot;the-lines-to-change-in-gemfile&quot;&gt;The Lines to Change in Gemfile&lt;/h1&gt;

&lt;p&gt;Previously I had:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 5.0.2'
gem 'puma', '~&amp;gt; 3.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which I changed to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'rails', '~&amp;gt; 5.1.3'
gem 'puma', '~&amp;gt; 3.10'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The reason for the Puma update turned out to be unneeded but it is a core part of my stack so it is likely good to upgrade.&lt;/p&gt;

&lt;h1 id=&quot;useful-links&quot;&gt;Useful Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://edgeguides.rubyonrails.org/5_1_release_notes.html&quot;&gt;Rails 5.1 Readme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/puma/versions/3.4.0&quot;&gt;Ruby Gems on Puma&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/rails/versions/5.0.0&quot;&gt;Ruby Gems on Rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;dont-be-afraid-to-delete-gemfilelock-and-re-bundle&quot;&gt;Don’t Be Afraid to Delete Gemfile.lock and Re Bundle&lt;/h1&gt;

&lt;p&gt;Out of my seven apps, all built on top of the same version of Rails, two had problems with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle update rails puma&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These two applications had issues with the font-awesome-rails gem and railties.  Rather than try and monkey around with them, I simply did a:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;git rm Gemfile.lock&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and then a:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that fixed everything.&lt;/p&gt;

&lt;h1 id=&quot;puma-now-needs-a-space-before-the-port&quot;&gt;Puma Now Needs a Space Before the Port&lt;/h1&gt;

&lt;p&gt;Right after my Rails update and before I did the Puma update, I got this bit of joy when I started my server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rails s -p3203
=&amp;gt; Booting Puma
=&amp;gt; Rails 5.1.3 application starting in development on http://localhost:3203
=&amp;gt; Run `rails server -h` for more startup options
Puma starting in single mode...
* Version 3.10.0 (ruby 2.3.1-p112), codename: Russell's Teapot
* Min threads: 2, max threads: 2
* Environment: development
* Listening on tcp://
Exiting
/Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:270:in `initialize': getaddrinfo: nodename nor servname provided, or not known (SocketError)
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:270:in `new'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:270:in `add_tcp_listener'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:105:in `block in parse'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:88:in `each'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/binder.rb:88:in `parse'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/runner.rb:144:in `load_and_bind'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/single.rb:87:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/puma/launcher.rb:183:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/puma-3.10.0/lib/rack/handler/puma.rb:69:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/rack-2.0.3/lib/rack/server.rb:297:in `start'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:44:in `start'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:131:in `block in perform'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:126:in `tap'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands/server/server_command.rb:126:in `perform'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/command/base.rb:63:in `perform'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/command.rb:44:in `invoke'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_admin/gems/railties-5.1.3/lib/rails/commands.rb:16:in `&amp;lt;top (required)&amp;gt;'
        from /Users/sjohnson/Dropbox/fuzzygroup/hyde/seira_watch/seira_admin/bin/rails:9:in `require'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This turned out to be a change somewhere in Rails where a space is now needed between the -p and the port number, so this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec rails s -p3203&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;needs to be:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec rails s -p 3203&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was covered in this &lt;a href=&quot;https://github.com/rails/rails/issues/28971&quot;&gt;Github Issue&lt;/a&gt;. Supposedly the latest version of Puma restores the previous functionality where a space isn’t needed but I have &lt;strong&gt;NOT&lt;/strong&gt; found that to be so.  The solution was to simply accept that a space after -p is required.  Technically I could have not upgraded Puma but it feels like running the current version of is always a good thing.&lt;/p&gt;

&lt;h1 id=&quot;middleware-now-needs-a-class-constant-not-a-string&quot;&gt;Middleware Now Needs a Class Constant Not a String&lt;/h1&gt;

&lt;p&gt;What I am building uses a multi-tenant approach based on the &lt;a href=&quot;https://github.com/influitive/apartment&quot;&gt;Apartment gem&lt;/a&gt; and this requires an initializer that specifies a middleware layer.  Prior to Rails 5.1, this was done as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails.application.config.middleware.use 'Apartment::Elevators::Subdomain'
(in config/initializers/apartment.rb)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When I first started my application using Rails 5.1, I got this unpleasant result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bundle exec rails s -p 3210
=&amp;gt; Booting Puma
=&amp;gt; Rails 5.1.3 application starting in development on http://localhost:3210
=&amp;gt; Run `rails server -h` for more startup options
Exiting
/Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:35:in `build': undefined method `new' for &quot;Apartment::Elevators::Subdomain&quot;:String (NoMethodError)
Did you mean?  next
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `block in build'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `each'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `inject'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/actionpack-5.1.3/lib/action_dispatch/middleware/stack.rb:99:in `build'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/engine.rb:508:in `block in app'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/engine.rb:504:in `synchronize'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/engine.rb:504:in `app'
        from /Users/sjohnson/.rvm/gems/ruby-2.3.1@seira_watch/gems/railties-5.1.3/lib/rails/application/finisher.rb:45:in `block in &amp;lt;module
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Apparently middleware layers that used to take a string now need a class constant so this needs to be rewritten as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails.application.config.middleware.use Apartment::Elevators::Subdomain
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is discussed in this &lt;a href=&quot;https://github.com/rails/rails/issues/28946&quot;&gt;Rails Issue&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;skipbeforefilter-is-now-skipbeforeaction&quot;&gt;skip_before_filter Is Now skip_before_action&lt;/h1&gt;

&lt;p&gt;Although I was able to start my application correctly in development mode with a still in place skip_before_filter, when I tried it in production, I got:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=&amp;gt; Run `rails server -h` for more startup options
Exiting
/Users/sjohnson/Dropbox/fuzzygroup/hyde/seira_watch/seira_watch_web_app/app/controllers/api_controller.rb:3:in   `&amp;lt;class:ApiController&amp;gt;': undefined method `skip_before_filter' for ApiController:Class (NoMethodError)
Did you mean?  skip_before_action
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This was an easy change but it is still something that could easily trip you up.  Obviously I have been seeing the deprecation warnings for some time now and it is my bad for not having made these changes.&lt;/p&gt;

&lt;h1 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h1&gt;

&lt;p&gt;While mildly annoying these are relatively small issues htat I was able to work around quite cleanly.  The total time to upgrade 7 Rails apps from 5.0.2 to 5.1 was less than an hour in total even including the research and deploy time.  &lt;strong&gt;Recommended&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;public-service-announcement&quot;&gt;Public Service Announcement&lt;/h1&gt;

&lt;p&gt;If you haven’t upgraded your Ruby Gems executable, you likely should.  &lt;a href=&quot;https://www.ruby-lang.org/en/news/2017/08/29/multiple-vulnerabilities-in-rubygems/&quot;&gt;More details are here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Sep 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/09/01/notes-on-upgrading-to-rails-5-1.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/09/01/notes-on-upgrading-to-rails-5-1.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>puma</category>
        
        <category>apartment</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Running out of Disc Space with Docker</title>
        <description>&lt;p&gt;I’ve now been exploring &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; for almost a year now and using it daily for five months or so.  And, as I get ever closer to shipping a product that runs using containers for everything, I have been continually hitting issues regarding running out of disc space.&lt;/p&gt;

&lt;h1 id=&quot;understanding-the-problem&quot;&gt;Understanding The Problem&lt;/h1&gt;

&lt;p&gt;The platform I have been using is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker Community Edition, Docker version 17.06.0-ce, build 02c1d87&lt;/li&gt;
  &lt;li&gt;AWS EC2 instances including ELB&lt;/li&gt;
  &lt;li&gt;No use of Kubernetes or the AWS ECS&lt;/li&gt;
  &lt;li&gt;Ubuntu Linux&lt;/li&gt;
  &lt;li&gt;Docker Hub for image hosting&lt;/li&gt;
  &lt;li&gt;Rails / Ruby as an application language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I have experienced is constant growth in disc space usage ultimately ending up in 0 bytes of free disc space and subsequent failure conditions in most of my containers.&lt;/p&gt;

&lt;h1 id=&quot;docker-on-linux-basics&quot;&gt;Docker on Linux Basics&lt;/h1&gt;

&lt;p&gt;On Ubuntu and most Linux platforms that I understand, the core Docker installation of your data is stored in /var/lib/docker and then a collection of subdirectories.  Here’s an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l /var/lib/docker
total 44
drwx------ 21 root root  4096 Aug 30 01:17 containers
drwx------  3 root root  4096 Aug 30 01:10 image
drwxr-x---  3 root root  4096 Aug 30 01:10 network
drwx------ 85 root root 12288 Aug 30 01:17 overlay2
drwx------  4 root root  4096 Aug 30 01:10 plugins
drwx------  2 root root  4096 Aug 30 01:10 swarm
drwx------  2 root root  4096 Aug 30 01:16 tmp
drwx------  2 root root  4096 Aug 30 01:10 trust
drwx------ 12 root root  4096 Aug 30 03:01 volumes
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are two interesting directories here: containers and overlay2.  You should note that on a default docker installation the overlay2 directory would be named aufs.  The directories overlay2 and aufs are different filesystems that Docker can use to store your containers, volumes, etc.  The default Docker filesystem is called aufs and it is the oldest Docker filesystem.  The overlay2 filesystem is newer and seems to have some dramatic advantages.&lt;/p&gt;

&lt;p&gt;I am currently involved in what is termed &lt;em&gt;green field&lt;/em&gt; software development – this is a development term related to creating a brand new product i.e. everything is a green field waiting to be plowed.  One of the characteristics of green field development is a &lt;strong&gt;lot&lt;/strong&gt; of deploys.  As I initially looked into this problem, its characteristics seemed to map directly to the number of deploys – more deploys meant more disc space used.  When you see this type of situation, it tends to argue that the underlying issue is somehow tied to garbage collection.  My research and analysis of this led me to think that the issue was somehow tied to issues in the Docker aufs filesystem and I switched my installation from aufs to overlay2 and thought it was resolved.&lt;/p&gt;

&lt;p&gt;Last night I started getting alerts that my production server was again almost out of disc space (thank you &lt;a href=&quot;https://github.com/arnaudsj/monit&quot;&gt;Monit!&lt;/a&gt;).  Now the interesting thing is that between when I thought this was resolved and last night, I &lt;strong&gt;have not been deploying at all&lt;/strong&gt;.  Over the past 5 days, I have been involved in an intense refactor of my new product’s two core &lt;a href=&quot;https://en.wikipedia.org/wiki/God_object&quot;&gt;god objects&lt;/a&gt; - course.rb and teacher.rb.  In software development parlance, a god object is an object that knows too much or does too much and it is regarded as an &lt;a href=&quot;https://en.wikipedia.org/wiki/Anti-pattern&quot;&gt;anti pattern&lt;/a&gt;.  When you do this type of refactoring, it tends to shut down everything since it breaks, well, &lt;strong&gt;everything&lt;/strong&gt;.  Seeing that I was again running out of disc space – while I wasn’t deploying – argued that my working theory was just plain &lt;strong&gt;wrong&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My next step was to ssh into the box (yes, even with a containerized architecture, there are still servers and sshing in is still a thing) and look into /var/lib/docker once again.  My general tool for this was the command du -shc *  which translates to “show me the disc space usage at a summary level and translate it to human style (i.e. k / megs / gigs)”.  Here’s an example of my command flow:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo su - 
cd /var/lib/docker
du -shc * 

du -shc *
10G	containers
11M	image
140K	network
3.4G	overlay2
20K	plugins
4.0K	swarm
4.0K	tmp
4.0K	trust
3.3M	volumes
13.5G	total
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I started to wonder what could possibly be in the containers directory with a size of &lt;strong&gt;10G&lt;/strong&gt; so I changed into that directory and I found an anomaly, a single file, 6.2 gigs in size, like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;586e6e0b559281785d023097518ed9303e15db66eee04173792856ff7b2da528-json.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When I looked at that file, it was a log file showing the log output from the underlying crawler at the coder of the product I have been building.  And with this one discovery, the problem came into focus:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;While there may have been issues related to a constant ongoing deploy process, the core underlying issue seems to be disc usage due to log file build up.&lt;/li&gt;
  &lt;li&gt;Docker makes it very hard to see the underlying problem since there doesn’t seem to be a “where is my damn disc space going” type of command.  Update: Try using “docker system df” to visualize docker disc space usage.  I only found this late in the writing process on this post.  The docker system df command doesn’t specifically report log file space usage which I suspect would illuminate this problem.&lt;/li&gt;
  &lt;li&gt;Logs appear to be persistent over time and not reclaimed as you deploy.  My suspicion is that logs are only reset when you stop the Docker daemon (and sometimes not even then).&lt;/li&gt;
  &lt;li&gt;Traditional log management like log rotate won’t work unless you restart the Docker daemon.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: I wonder how many people that have struggled with this issue have actually had log file growth issues not actual Docker problems?  Most of the unresolved Docker / Moby issues below don’t explore the logs possibility.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It should be noted that I’m not logging to files from within my application code and I’m using the log to standard out approach from the &lt;a href=&quot;https://github.com/nickjj/orats&quot;&gt;Orats gem&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;fixing-this-problem-once-and-for-all&quot;&gt;Fixing this Problem Once and For All&lt;/h1&gt;

&lt;p&gt;Here are the steps that I took to address this problem:&lt;/p&gt;

&lt;h2 id=&quot;step-1-stop-the-docker-daemon&quot;&gt;Step 1: Stop the Docker Daemon&lt;/h2&gt;

&lt;p&gt;The first step is shutting down Docker itself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo service docker stop&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;step-2-delete-varlibdocker&quot;&gt;Step 2: Delete /var/lib/docker&lt;/h2&gt;

&lt;p&gt;The next step appears drastic and it is.  If you have important data in your Docker system then you’re going to lose it at this stage but when I attempted to do this piecemeal, I got bizarre deployment errors related to missing containers and even redeploying did not fix it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo su
umount /var/lib/docker/overlay2
cd /var/lib/docker
rm -rf * 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This blows away everything in your Docker installation.  The second command line is only necessary if you have already switched your system to overlay2 as I had.&lt;/p&gt;

&lt;h2 id=&quot;step-3-switch-from-aufs-to-overlay2-and-add-log-limits-to-docker-config&quot;&gt;Step 3: Switch from aufs to overlay2 and Add Log Limits to Docker Config&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Full use of the overlay2 driver is covered &lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver/#configure-docker-with-the-overlay-or-overlay2-storage-driver&quot;&gt;here&lt;/a&gt; and should probably be read before you make this switch.  Not everyone can make use of overlay2.&lt;/p&gt;

&lt;p&gt;The core docker config file is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/etc/docker/daemon.json&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should edit this file and make it look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;storage-driver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;overlay2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;log-driver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;json-file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;log-opts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;max-size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;100m&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I’m honestly not 100% certain that switching from aufs to overlay2 is absolutely required but it was a part of the overall solution and does seem to have benefits so I left it in here although I suspect that the logging is clearly the biggest win here.&lt;/p&gt;

&lt;h2 id=&quot;step-4-restart-docker-daemon&quot;&gt;Step 4: Restart Docker Daemon&lt;/h2&gt;

&lt;p&gt;Start Docker up again:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo service docker start&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;step-5-add-logging-limits-to-your-compose-files&quot;&gt;Step 5: Add Logging Limits to Your Compose Files&lt;/h2&gt;

&lt;p&gt;On your local machine where you do your development, you need to set the logging options on a per container basis to your docker-compose file.  The lines to add are to each service are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;logging:
  options:
    max-size: 50m
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s an example in the context of a full container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;services:
  redis:
    image: 'redis:3.2-alpine'
    ports:
      - '6379'
    volumes:
      - 'redis:/var/lib/redis/data'
    restart: on-failure
    logging:
      options:
        max-size: 50m
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Theoretically I could have ignored this at a per container level and just relied on the log management defined in /etc/docker/daemon.json but when you have a system level config file, that often gets changed and not checked into version control, belt &lt;strong&gt;and&lt;/strong&gt; suspenders is better.  Setting this at the application level and the system level should ensure that I don’t get bit by this again.  This will also protect your local dev box from unlimited log growth which could otherwise be a problem since your local dev box isn’t configured by the same /etc/docker/daemon.json file.&lt;/p&gt;

&lt;h2 id=&quot;add-cron-jobs-for-removing-unused-stuff-periodically&quot;&gt;Add Cron Jobs for Removing Unused Stuff Periodically&lt;/h2&gt;

&lt;p&gt;I added cron jobs to my underlying instance for cleaning up after dangling containers and volumes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#Ansible: docker rmi images
1 1 * * * docker rmi -f $(docker images -a -q -f dangling=true)
#Ansible: docker volume rm
1 3 * * * docker volume rm -f $(docker volume ls -q -f dangling=true)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The #Ansible comment indicates that these were added by Ansible as part of my machine provisioning script (Step 8 below is now also part of that same script).&lt;/p&gt;

&lt;h2 id=&quot;step-7-get-etcdockerdaemonjson-into-ansible--version-control&quot;&gt;Step 7: Get /etc/docker/daemon.json into Ansible / Version Control&lt;/h2&gt;

&lt;p&gt;However you configure a new instance, you should make sure that your modified daemon.json file from Step 3 is part of that process or you’ll find that setting up a new machine has this same problem.&lt;/p&gt;

&lt;h2 id=&quot;step-8-redeploy-everything&quot;&gt;Step 8: Redeploy Everything&lt;/h2&gt;

&lt;p&gt;The final step is to re-deploy everything as all containers, volumes, etc have been deleted earlier in the process.  Hopefully you will find that your disc space usage comes under control.&lt;/p&gt;

&lt;h1 id=&quot;sidebar-1-docker-system-df&quot;&gt;Sidebar 1: docker system df&lt;/h1&gt;

&lt;p&gt;As I was finishing this post, I found the command docker system df which shows you the space docker uses.  Here’s an example from my local dev box:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FuzzygroupMacbookPro2016% docker system df
TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE
Images              671                 67                  40.59GB             24.07GB (59%)
Containers          84                  5                   742.2MB             718MB (96%)
Local Volumes       41                  22                  634.5MB             1.553kB (0%)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;sidebar-2-docker-system-prune&quot;&gt;Sidebar 2: docker system prune&lt;/h1&gt;

&lt;p&gt;The command docker system prune reclaims dangling images and stopped containers.  Here’s an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FuzzygroupMacbookPro2016% docker system prune
WARNING! This will remove:
        - all stopped containers
        - all networks not used by at least one container
        - all dangling images
        - all build cache
Are you sure you want to continue? [y/N] y
Deleted Containers:
4fc625609ac8f86f8d8f9076a8e75d5ccb31c1e871ed6f4589b79de2721af02c
... (A long, long list of containers was here)
Total reclaimed space: 28.72GB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The interesting thing here is that before I ran this I had 46 gigs of free space on my local dev box and after I ran this, I still had 46 gigs free.  I don’t know why Docker states that it reclaimed space when it doesn’t.&lt;/p&gt;

&lt;p&gt;Note: I’m not the only person who can’t reclaim this space.&lt;/p&gt;

&lt;h1 id=&quot;what-to-learn-from-this&quot;&gt;What to Learn from This&lt;/h1&gt;

&lt;p&gt;I would argue that the big takeaway from this isn’t actually the specific Docker commands, useful as they are, but the observation that disc space growth wasn’t tied to deploys but instead to system operation.  Realizing this changed how I approached the problem.  When you build complex systems, learning how to observe them and then correlating that with what you are doing to the system is a key technique.&lt;/p&gt;

&lt;h1 id=&quot;thank-yous&quot;&gt;Thank Yous&lt;/h1&gt;

&lt;p&gt;Most of what I know about Docker, I learned from the courses of &lt;a href=&quot;https://diveintodocker.com/&quot;&gt;Nick Janetakis&lt;/a&gt;.  He is a friend and he pitched in greatly on the analysis and resolution of this.  Thanks man!&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.idetailaid.co.uk/docker-using-up-all-your-disk-space-dont-forget-to-clean-up-after-docker/&quot;&gt;Interesting Blog Post about Cleaning Up After Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/search?tbs=li:1&amp;amp;q=how+much+space+are+my+docker+logs+taking&quot;&gt;Docker Logs on Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moby/moby/issues/3804&quot;&gt;Docker Disc Space Quotas and aufs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thehftguy.com/2016/11/01/docker-in-production-an-history-of-failure/&quot;&gt;Docker in Production a History of Failure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12872304&quot;&gt;Docker in Production a History of Failure&lt;/a&gt; (search for overlay2)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moby/moby/issues/22207&quot;&gt;Docker not Cleaning Up tmp Files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moby/moby/issues/29486&quot;&gt;Docker Orphaned Diffs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver/&quot;&gt;Using Overlay2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/stanislavb/6634fc35b3d1655201a93d2dd2c3a366&quot;&gt;A seemingly good shell script for cleaning up after Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 30 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/docker/2017/08/30/running-out-of-disc-space-with-docker.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/docker/2017/08/30/running-out-of-disc-space-with-docker.html</guid>
        
        <category>docker</category>
        
        <category>aufs</category>
        
        <category>disc_space</category>
        
        <category>bloat</category>
        
        
        <category>Docker</category>
        
      </item>
    
      <item>
        <title>When Gems Won't Install - The mkmf.log Problem</title>
        <description>&lt;p&gt;Computing is rich enough and deep enough as a profession that you can spent literally over a decade at something and still learn new things.  And, as frustrating as this is, I find that one of the best parts.   Personally I’ve been using Ruby now since 2006 and one of the things that is absolutely bedeviling is when a gem won’t install.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upfront Disclaimer&lt;/strong&gt;: This problem was one of my own making but it proved to be an interesting exercise as I waited for someone to arrive for a meeting.  Far better than simply surfing the web or playing on my phone.&lt;/p&gt;

&lt;p&gt;I was trying to get the &lt;a href=&quot;https://github.com/feedbin/feedbin&quot;&gt;FeedBin&lt;/a&gt; aggregator to install so I did the usual open source Rails dance:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fork it&lt;/li&gt;
  &lt;li&gt;clone it&lt;/li&gt;
  &lt;li&gt;bundle install&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, WHAM, this gave me the wonderfulness below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

    current directory: /Users/sjohnson/.rvm/gems/ruby-2.3.1@feedbin/gems/nio4r-2.1.0/ext/nio4r
/Users/sjohnson/.rvm/rubies/ruby-2.3.1/bin/ruby -r ./siteconf20170828-91881-jc70x3.rb extconf.rb
--with-cflags=-std=c99
checking for unistd.h... *** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Nothing like an abstractly referenced log file &lt;strong&gt;WITHOUT A FULL PATH&lt;/strong&gt; to be completely unhelpful.  I’ve been seeing references to mkmf.log about as long as Gems have been in common usage and I’ve never understood exactly where that persnickety file was located.  Normally a quick Google or Stack Overflow gives me the answer but this time those just weren’t helpful.  What I did &lt;a href=&quot;https://stackoverflow.com/questions/20379274/when-a-gem-fails-where-do-i-find-the-mkmf-log-file&quot;&gt;discover&lt;/a&gt; was that the mkmf.log file is bundled with the gem where it is built.  Given that I use RVM, the example was to look in a path like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/.rvm/gems/ruby-1.9.3-p194/gems/some-cool-gem-name/ext/mkmf.log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I started with this find command:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;find ~/.rvm -name mkmf.log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and that produced a huge number of results, 995 to be specific (a decade or more of hacking Ruby stuff will do that).&lt;/p&gt;

&lt;p&gt;This took me into adding a grep to the end:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;find ~/.rvm -name mkmf.log&lt;/td&gt;
        &lt;td&gt;grep nio4r&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;which still gave me a full page of output so I added feedbin as a secondary grep:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;find ~/.rvm -name mkmf.log&lt;/td&gt;
        &lt;td&gt;grep nio4r&lt;/td&gt;
        &lt;td&gt;grep feedbin&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;which finally produced:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/Users/sjohnson/.rvm/gems/ruby-2.3.1@feedbin/extensions/x86_64-darwin-15/2.3.0/nio4r-2.1.0/mkmf.log&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Digging into that file revealed this error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun: error: active developer path (&quot;/Applications/Xcode.app/Contents/Developer&quot;) does not exist, use `xcode-select --switch path/to/Xcode.app` to specify the Xcode that you wish to use for command line developer tools (or see `man xcode-select`)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So somehow XCode is missing and I’m certain that’s my fault (this isn’t my primary dev box so perhaps it got deleted at some point to save disc space).&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/08/28/when-gems-won-t-install-the-mkmf-log-problem.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/08/28/when-gems-won-t-install-the-mkmf-log-problem.html</guid>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>gems</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails, Apartment, Tenancy and Sidekiq</title>
        <description>&lt;h1 id=&quot;tldr&quot;&gt;TLDR&lt;/h1&gt;

&lt;p&gt;This is a long one.  If you need the quick answer on how to solve Apartment-Sidekiq errors then scroll down to the section titled &lt;strong&gt;Correctly Implementing Sidekiq with Apartment&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;thanks&quot;&gt;Thanks&lt;/h1&gt;

&lt;p&gt;This blog post is dedicated to three people / things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My good friend &lt;a href=&quot;https://www.nickjanetakis.com&quot;&gt;Nick Janetakis&lt;/a&gt; who helped me debug these issues&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mikeperham.com&quot;&gt;Mike Perham&lt;/a&gt;, the author of &lt;a href=&quot;https://www.contribsys.com&quot;&gt;Sidekiq&lt;/a&gt;, whose candor about Apartment-Sidekiq helped point the way&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://influitive.com/&quot;&gt;Influitive&lt;/a&gt; team at the Apartment gem; great work guys, thank you&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;Tenancy in database application development refers to using a separate storage system (think a partition within a database) or a whole separate database per “user” (note that user might mean a group of people).  The idea behind tenancy is to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Isolate one user from another; this tends to provide a much more secure approach&lt;/li&gt;
  &lt;li&gt;Isolate storage so that the capacity needs of one user don’t affect other users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tenancy is something that we don’t often think about but examples of it abound on the Internet.  The best known example is Wordpress.com where every user’s data is stored in a separate database.&lt;/p&gt;

&lt;p&gt;I’ve been developing a new product for sometime now and I went into it knowing that if I was successful, storage was going to be a huge issue.  When I first developed &lt;a href=&quot;https://web.archive.org/web/20100610030143/http://www.appdata.com:80/&quot;&gt;AppData&lt;/a&gt; I had no idea that I was beginning a near [decade long]*https://web.archive.org/web/20160905051931/http://www.appdata.com/ cycle of struggling with storage.  As with all engineers, I was determined to at least not hit the same errors (better to make different ones) so I knew that I needed a tenancy solution for my development platform, Rails, and that led me to the &lt;a href=&quot;https://github.com/influitive/apartment&quot;&gt;Apartment gem&lt;/a&gt;.  Apartment views tenancy as a problem of managing the underlying database connection so that when you goto foo.app.com, foo generally represents the underlying database or “tenant”.&lt;/p&gt;

&lt;h1 id=&quot;enter-sidekiq-enter-tenancy-problems&quot;&gt;Enter Sidekiq; Enter Tenancy Problems&lt;/h1&gt;

&lt;p&gt;When you develop a web application you are quickly going to discover the need for asynchronous processing.  This is a fancy term that could be defined as “don’t make the user wait while a long running operation completes”.  Let’s consider the very simple case of sending an email with account details once a user signs up.  Sending that email might be instantaneous or the email server might have problems and might take a few seconds.  By handling this operation asynchronously, the email is send by a separate process and control to the user returns instantly.  In the Rails world the leading technology for this is an open source tool called Sidekiq and Sidekiq is a fantastic bit of code.  It runs as a background daemon coupled to your application through Redis and its multi threading scalably handles all kinds of asynchronous needs.  In the past I’ve used it to handle email deliveries, data imports, whole site crawling and more.&lt;/p&gt;

&lt;p&gt;The problem I’ve been struggling with for sometime now is handling back data imports.  My new product has a cool feature – you sign up and the back history for your account is imported from a central data archive.  I wanted to avoid the problems with a data tool where data builds over time.  My goal was for people to sign up and then be instantly product, not productive after a week of data acquisition, at which point they might have stopped caring due to the waiting.  This was clearly a job for Sidekiq but how could that work since the underlying database connection changed for every single user?&lt;/p&gt;

&lt;p&gt;My tenancy solution was a Ruby gem called Apartment and there is actually an extension gem called &lt;a href=&quot;https://github.com/influitive/apartment-sidekiq&quot;&gt;Apartment-Sidekiq&lt;/a&gt;.  What apartment sidekiq purports to do is push into the redis stream a reference to the tenant and then patch sidekiq so that every time it processes the redis data it will connect to the right tenant.  The problem here is that this seems to only sort of work.  For the past two weeks or so my asynchronous code has worked – but with errors.  Sometime I would see 1 error related to tenancy when a back data import was processed and sometimes I would see 26 errors per import.&lt;/p&gt;

&lt;h2 id=&quot;the-solution---dont-use-apartment-sidekiq&quot;&gt;The Solution - Don’t Use Apartment Sidekiq&lt;/h2&gt;

&lt;p&gt;This problem was on my radar for quite a while and then I finally said “Ok I can’t ship until this is addressed” and I’ve been working it for the past two days.  Understanding the solution came from this &lt;a href=&quot;https://github.com/mperham/sidekiq/issues/3005&quot;&gt;Github Issue&lt;/a&gt;.  The key bit of wisdom is here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Just as a side note, passing the tenant as a job argument is a hack. The correct way to implement a cross-cutting concern (like tenant) is with client and server middleware. You just need to copy and configure the two bits of code &lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/tree/master/lib/apartment/sidekiq/middleware&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you work with an open source project like Sidekiq, understanding who the people involved are is key because it tells you who to trust.  I’ve now used Sidekiq for years and years and I trust Mike implicitly when it comes to these matters.  When Mike Perham, the author of Sidekiq, describes something as a &lt;strong&gt;hack&lt;/strong&gt;, well, that tells me there might be real issues.&lt;/p&gt;

&lt;p&gt;I looked at the related &lt;a href=&quot;https://stackoverflow.com/questions/41229392/why-is-apartment-sidekiq-not-finding-the-tenant/41471241#41471241&quot;&gt;Stack Overflow&lt;/a&gt; but no where did I have a problem with my environment and that also didn’t mesh which Mikes comment about passing the tenant as a job argument.  Sorting through all kinds of tenancy issues took me different places:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/10&quot;&gt;Possible Version Conflicts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/12#ref-pullrequest-190952852&quot;&gt;Maybe It is Rails 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/11&quot;&gt;More Perham Commentary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the More Perham Commentary, I found this bit of wisdom:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;@andrba the intention cannot be done safely. You need to explicitly switch and cleanup any connections. I hate that callback and wish I’d never implemented it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When something like the &lt;em&gt;underlying callback&lt;/em&gt; on which Apartment-Sidekiq is described in this way it made me realize, “Hm… this isn’t going to work, is it”.&lt;/p&gt;

&lt;h2 id=&quot;correctly-implementing-sidekiq-with-apartment&quot;&gt;Correctly Implementing Sidekiq with Apartment&lt;/h2&gt;

&lt;p&gt;Once I accepted that I couldn’t use the Apartment-Sidekiq gem, the solution was pretty obvious:&lt;/p&gt;

&lt;h3 id=&quot;step-1-remove-apartment-sidekiq-from-gemfile&quot;&gt;Step 1: Remove Apartment-Sidekiq from Gemfile&lt;/h3&gt;

&lt;p&gt;This was pretty easy - just delete one line and then run bundle install.&lt;/p&gt;

&lt;h3 id=&quot;step-2-pass-the-current-tenant-in-my-calls-to-the-sidekiq-worker&quot;&gt;Step 2: Pass the Current Tenant in my Calls to the Sidekiq Worker&lt;/h3&gt;

&lt;p&gt;Most of my import routines are after_create calls that look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;after_create :import_back_history_sidekiq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This method looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def import_back_history_sidekiq
  InstructorImportBackHistoryWorker.perform_async(self.id, Apartment::Tenant.current)
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There are two parameters here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;self.id - Sidekiq is oriented around passing low level primitives not full blown ActiveRecord objects so you pass an id reference to the object you want to do an asynchronous call on and then you reload it in the Sidekiq context.&lt;/li&gt;
  &lt;li&gt;Apartment::Tenant.current - This is a string that represents the name of the current tenant.  We need to know this because the real solution to this entire problem is to switch to the right tenant in our Sidekiq worker code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-3-switching-to-the-right-tenant&quot;&gt;Step 3: Switching to the Right Tenant&lt;/h3&gt;

&lt;p&gt;Here’s what the underlying Sidekiq worker class looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class InstructorImportBackHistoryWorker
  include Sidekiq::Worker

  def perform(id, tenant)
    Apartment::Tenant.switch!(tenant)
    instructor = Instructor.where(id: id).first
    if instructor
      instructor.import_back_history
    else
      # Some error handling code goes here
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;All this does is invoke Apartment::Tenant.switch!(tenant) at the start of the asynchronous processing and that ensures that the correct tenant is used.  After that the import proceeds as normal.  The reason that I have a wrapper approach (import_back_history versus import_back_history_sidekiq) is that I have cases where I use these calls in batch process routines where I don’t invoke Sidekiq.&lt;/p&gt;

&lt;p&gt;Using this approach to managing tenancy and Sidekiq, I went from multiple tenancy connection errors tracked thru &lt;a href=&quot;http://fuzzyblog.io/blog/aws/2017/08/11/using-errbit-to-host-your-own-error-tracker-on-aws-for-rails-apps.html&quot;&gt;Errbit&lt;/a&gt; to zero errors.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/41229392/why-is-apartment-sidekiq-not-finding-the-tenant&quot;&gt;Apartment-Sidekiq Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/influitive/apartment-sidekiq/issues/11&quot;&gt;Long Error Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/rails/2017/08/21/rails-apartment-tenancy-and-sidekiq.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/rails/2017/08/21/rails-apartment-tenancy-and-sidekiq.html</guid>
        
        <category>rails</category>
        
        <category>apartment</category>
        
        <category>tenancy</category>
        
        <category>multi_tenant</category>
        
        <category>sidekiq</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Marketing 101 - Ride the Wave If You Can</title>
        <description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I haven’t written a Marketing 101 piece since 2003 but a friend recently pointed out that even &lt;a href=&quot;http://fuzzyblog.io/blog/tag.html#marketing101&quot;&gt;my old ones&lt;/a&gt; were pretty good so I’m giving it a shot.&lt;/p&gt;

&lt;p&gt;One of the more difficult things in marketing to grasp is the idea of a &lt;em&gt;wave&lt;/em&gt;.  I don’t know if there’s a better term for this but wave is how I’ve been thinking of this for the better part of two decades now.  A wave is an underlying meme or movement that resonates at the industry or even society level and I think the best way to illustrate this is with an example.  My first company, founded in 1987, was a hypertext authoring system (think FrontPage with an integrated browser but back in the DOS days).  There was a small burst of interest in all things hyper* due to Apple’s HyperCard but that pretty much subsided by late 1988 / early 1999.  And then, over the next few years the industry shifted, in a huge way, to &lt;strong&gt;multimedia&lt;/strong&gt;.  Multimedia became a huge wave – and we shifted our product features slightly and our marketing dramatically to ride the multimedia wave:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We added a small handful of features for controlling digital video discs&lt;/li&gt;
  &lt;li&gt;We went to multimedia centric trade shows&lt;/li&gt;
  &lt;li&gt;We adopted the multimedia term and related iconography to all our product literature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We saw our fortunes increase in parallel with multimedia – there is truth in the old aphorism, &lt;em&gt;a rising tide lifts all boats&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When you are a teeny, tiny startup, one of the best things that you can do is to &lt;em&gt;ride the wave&lt;/em&gt; when there is a wave.  I’ve been consulting recently with an up and coming online education product and my strongest advice to them has been to position their product as a &lt;em&gt;STEM learning tool&lt;/em&gt;. STEM is the current term in vogue for &lt;em&gt;science, technology, engineering and mathematics&lt;/em&gt; education.&lt;/p&gt;

&lt;p&gt;When you’re a pure technical person, the idea of riding a wave can at times be disturbing.  Technical founders tend to think of their product solely in the context where the original idea.  And, when that wasn’t the wave, repositioning the product in terms of a wave can feel a bit like being a &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=carpet%20bagger&quot;&gt;carpet bagger&lt;/a&gt;.  I’m here to tell you, both as a technical person and a marketer, that this just is &lt;strong&gt;not&lt;/strong&gt; the case.  Waves are often large in nature – what was multimedia after all – and as long as the product is credible in terms of the wave, repositioning can actually benefit both you and the product’s customers:&lt;/p&gt;

&lt;p&gt;For you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You get to tap into a market that is growing faster that normal&lt;/li&gt;
  &lt;li&gt;You get access to a set of focused marketing events such as trade shows that are wave focused&lt;/li&gt;
  &lt;li&gt;You get access to a smaller but more focused group of customers&lt;/li&gt;
  &lt;li&gt;Customers are often willing to spend more due to funding specific to the wave (new budgets, grants, etc)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the customer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The customer gets a more specific product&lt;/li&gt;
  &lt;li&gt;The customer gets the benefit of at least some wave specific features&lt;/li&gt;
  &lt;li&gt;The customer gets the benefit of a company focusing very specifically on their needs&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 17 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/marketing/2017/08/17/marketing-101-ride-the-wave-if-you-can.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/marketing/2017/08/17/marketing-101-ride-the-wave-if-you-can.html</guid>
        
        <category>marketing101</category>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>10 Steps to Debugging Containerized Applications</title>
        <description>&lt;p&gt;I’ve recently been building a new product using Rails based on an approach that I call &lt;em&gt;Breaking the Monolith&lt;/em&gt;.  Rather than build a traditional Rails monolith, I use multiple microservices / small Rails applications and deploy them all with Docker into a distributed system.  The hardest part about distributed systems is always &lt;strong&gt;debugging&lt;/strong&gt; and I’ve written this guide as a step by step approach for how to go from a misbehaving application right down to a malfunctioning container – this is the actual process that I follow.&lt;/p&gt;

&lt;p&gt;All of this is being done on Ubuntu under AWS but the debugging process applies to any *nix type environment or Platform as a Service (PAAS).&lt;/p&gt;

&lt;h1 id=&quot;disclaimer-but-you-dont-ssh-into-containers&quot;&gt;Disclaimer: But You Don’t SSH into Containers…&lt;/h1&gt;

&lt;p&gt;A lot of the examples below are based around SSH’ing into a server and diagnosing the error in context.  I’ve seen a lot of things since the advent of containers that seemingly want you to believe, that in this brave new world, you just don’t SSH in anymore.  Now, perhaps I am doing things wrong, but I have not found that to be the case at all.  It may be that once I am out of active development that I will no longer be SSH’ing into servers but, for now, SSH is still a dear old friend.&lt;/p&gt;

&lt;h1 id=&quot;failure-context---504-gateway-error&quot;&gt;01: Failure Context - 504 Gateway Error&lt;/h1&gt;

&lt;p&gt;The general system for a failure on this application seems to be a 504 Gateway Error which basically means that the application load balancer (ALB) isn’t receiving output back from one of the HTTP subsystems.&lt;/p&gt;

&lt;h1 id=&quot;check-the-url-in-development-after-a-server-restart&quot;&gt;02.  Check the Url in Development after a Server Restart&lt;/h1&gt;

&lt;p&gt;Every single time you do a deploy with Docker, your entire Gem stack along with any initializers is rebuilt and that means that a stack level change that you made in development but failed to catch can break everything.  So the first diagnosis step is to stop the development server and make sure that things come back up correctly.  Each of my applications runs on a different port so I can’t give a single example here – do the ctrl+c on Puma and then restart it and check the status.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you don’t have a simple health check for your application then I would strongly recommend it.  Here’s a &lt;a href=&quot;https://gist.github.com/fuzzygroup/7dec79f94deac117ce591598243f596a&quot;&gt;simple gist showing a /health url&lt;/a&gt; for a Rails application.&lt;/p&gt;

&lt;p&gt;If your Rails app is running on say port 3200 then you can just do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://localhost:3200/health
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and you should see:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;test-the-health-check-logged-into-the-server&quot;&gt;03: Test the Health Check Logged into the Server&lt;/h1&gt;

&lt;p&gt;Once you’ve verified that things are correct in development, the next step is to log into the server and run the same curl test on the server where the failure is occurring.  In order to make this type of debugging extremely simple for me, I run all my applications server side on exactly the same port structure that I do in development.  Even http services like the main web site run on their development port since I can let the load balancer handle translation back to 80.  Having a deployment environment that mirrors development is a huge conceptual boon. Assuming our same 3200 port example, we would:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://localhost:3200/health
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and you should see:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the failure is happening solely within the same subsystem then this usually is sufficient to reveal the problem.&lt;/p&gt;

&lt;h1 id=&quot;check-the-application-docker-logs&quot;&gt;04: Check the Application Docker Logs&lt;/h1&gt;

&lt;p&gt;The next step is the application level Docker logs.  My deployer engine, Dockerano, generates a per application shell script which generates logs for the “main” container called dshell so I see something like this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./dlogs

web_1        | 2017-08-11T21:51:59.474344180Z /app/config/initializers/constants_global.rb:6: warning: previous definition of REAL_SKYPE was here
web_1        | 2017-08-11T21:51:59.474348492Z /app/config/initializers/constants_system.rb:6: warning: already initialized constant STATUS_OK
web_1        | 2017-08-11T21:51:59.474352887Z /app/config/initializers/constants_global.rb:7: warning: previous definition of STATUS_OK was here
web_1        | 2017-08-11T21:51:59.474356555Z /app/config/initializers/constants_system.rb:7: warning: already initialized constant HYDE_API_KEY
web_1        | 2017-08-11T21:51:59.474360577Z /app/config/initializers/constants_global.rb:8: warning: previous definition of HYDE_API_KEY was here
web_1        | 2017-08-11T21:51:59.783745567Z /app/config/initializers/seira_servers.rb:1: warning: already initialized constant HYDE_API_KEY
web_1        | 2017-08-11T21:51:59.783780705Z /app/config/initializers/constants_system.rb:7: warning: previous definition of HYDE_API_KEY was here
web_1        | 2017-08-11T21:52:00.421398929Z /app/app/controllers/home_controller.rb:124: warning: key :course is duplicated and overwritten on line 129
web_1        | 2017-08-11T21:52:00.421438372Z /app/app/controllers/home_controller.rb:147: warning: key :course is duplicated and overwritten on line 153
web_1        | 2017-08-11T21:52:01.118340090Z * Listening on tcp://0.0.0.0:3210
web_1        | 2017-08-11T21:52:01.118720653Z Use Ctrl-C to stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this is doing under the hood is a simple:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
docker-compose -f docker-compose.production.yml logs -f -t web
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;check-the-free-disc-space&quot;&gt;05: Check the Free Disc Space&lt;/h1&gt;

&lt;p&gt;As with anything, ever, resource consumption can always be an issue and our normal OS tools include df:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            3.9G     0  3.9G 0% /dev
tmpfs           799M   83M  716M11% /run
/dev/xvda1       16G  7.0G  8.5G46% /
tmpfs           3.9G  7.0M  3.9G 1% /dev/shm
tmpfs           5.0M     0  5.0M 0% /run/lock
tmpfs           3.9G     0  3.9G 0% /sys/fs/cgroup
tmpfs           799M     0  799M 0% /run/user/1000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I spent a lot of time on this project trying desperately to use T2.micro instances because, well, they’re cheap and, at best, it was a false economy.  Severe bloat within the Docker AUFS filesystem found me continually running out of disc space after multiple deploys even though my containers were actually tiny.  This is a &lt;a href=&quot;https://github.com/moby/moby/issues/22207&quot;&gt;known Docker Moby issue&lt;/a&gt; that has been open for over a year and a half now and is still &lt;strong&gt;unassigned&lt;/strong&gt; to anyone.&lt;/p&gt;

&lt;p&gt;In order to avoid this bug, I ended up moving from multiple T2.micro instances to a single m4.large instance and then doubling the underlying storage from 8 gigs to 16.  And, when I did that, a lot of my issues just magically disappeared.  Being cheap truly was a false economy here because I ended up with fewer instances and not only did my reliability go up but my bill went down.&lt;/p&gt;

&lt;h1 id=&quot;check-the-cpu-usage-and-ram-usage&quot;&gt;06: Check the CPU Usage and Ram Usage&lt;/h1&gt;

&lt;p&gt;If you don’t have htop installed on all your instances then you really, really should.  htop kicks the absolute snot out of classic top.  Install it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install htop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then invoke it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;htop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point you can easily see the underlying machine load, etc.&lt;/p&gt;

&lt;h1 id=&quot;look-at-individual-container-status&quot;&gt;07: Look at Individual Container Status&lt;/h1&gt;

&lt;p&gt;If you’re having an issue with a given application then you want to look at all the containers for that application.  The easiest way is to grep by name.  Let’s say that your underlying application is called seirawatchwebapp:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep seirawatchwebapp
23c1b98a2add        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec clock...&quot;   11 hours ago        Restarting (10) 9 seconds ago                              seirawatchwebapp_clockwork_1
6eb89122ee73        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec sidek...&quot;   11 hours ago        Up 11 hours                                                seirawatchwebapp_sidekiq_1
36f49f07273f        fuzzygroup/seirawatchwebapp_web   &quot;/bin/sh -c 'puma ...&quot;   11 hours ago        Up 11 hours                     0.0.0.0:3210-&amp;gt;3210/tcp     seirawatchwebapp_web_1
49d72363de84        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   11 hours ago        Up 11 hours                     0.0.0.0:32820-&amp;gt;6379/tcp    seirawatchwebapp_redis_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The thing to be concerned about here is 23c1b98a2add and the reason is that it generally shouldn’t be continuously restarting which is what this view shows.&lt;/p&gt;

&lt;h1 id=&quot;application-level-logs---timberio&quot;&gt;08: Application Level logs - Timber.io&lt;/h1&gt;

&lt;p&gt;I’ve recently started using &lt;a href=&quot;https://www.timber.io&quot;&gt;Timber.io&lt;/a&gt; which is a cross application logging environment and I’ve been very, very happy with it.  If you haven’t looked at Timber.io for your Rails development, I’d recommend it.  Even the free tier is actually quite useful.&lt;/p&gt;

&lt;p&gt;Timber.io is a full web app rather than a command line tool so you need to log into the Timber service and then select your application where you want to view the logs.&lt;/p&gt;

&lt;h1 id=&quot;check-your-error-logger&quot;&gt;09: Check Your Error Logger&lt;/h1&gt;

&lt;p&gt;If you aren’t running a dedicated error tracker, whether HoneyBadger, BugSnag or Errbit, you really, really should.&lt;/p&gt;

&lt;h1 id=&quot;the-answer-check-all-your-containers&quot;&gt;10: The Answer: Check All Your Containers&lt;/h1&gt;

&lt;p&gt;What I’m building is a multi-container system, a distributed system in truth, with formal APIs between each of the components and what this means is that a container failure in subsystem X can affect subsystem Y or subsystem Z without it being clear as to why.  The trouble with this type of debugging is getting a high enough level view to understand it as a whole.&lt;/p&gt;

&lt;p&gt;The easiest way to do this on a single machine is to use the &lt;strong&gt;docker stats&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stats

CONTAINER           CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
b17d34bf7268        0.01%               207.6MiB / 7.795GiB   2.60%               1.1MB / 1.53MB      20.5kB / 7.68MB     23
5c5460a763b1        0.00%               210.4MiB / 7.795GiB   2.64%               3.62MB / 900kB      1.18MB / 0B         4
ec28ede65792        0.06%               133.4MiB / 7.795GiB   1.67%               12.9MB / 16.9MB     0B / 0B             9
bb5839c2a6a7        0.00%               130.9MiB / 7.795GiB   1.64%               1.13MB / 1.61MB     86kB / 16.6MB       13
5e78dbc9489e        0.09%               6.215MiB / 7.795GiB   0.08%               16.9MB / 12.9MB     69.6kB / 434kB      3
2d5b14feb009        0.03%               119.3MiB / 7.795GiB   1.49%               8.48MB / 15.4MB     0B / 0B             7
13d42ed0ba35        0.01%               120.7MiB / 7.795GiB   1.51%               2.51MB / 3.88MB     401kB / 37.7MB      12
3fbd80153022        0.08%               6.219MiB / 7.795GiB   0.08%               15.4MB / 8.46MB     24.6kB / 434kB      3
c520fc5504f1        --                  -- / --               --                  --                  --                  --
26ee413fab7f        0.01%               116.2MiB / 7.795GiB   1.46%               1.23MB / 1.62MB     77.8kB / 16.7MB     11
1ab35bf6514c        0.07%               6.219MiB / 7.795GiB   0.08%               85.3kB / 0B         127kB / 0B          3
ac1462fccc60        0.00%               106.1MiB / 7.795GiB   1.33%               1.14MB / 1.37MB     172kB / 7.92MB      10
422787e2d5ab        0.12%               16.15MiB / 7.795GiB   0.20%               75.9MB / 52MB       754kB / 425MB       3
b19bb9629925        0.00%               235.6MiB / 7.795GiB   2.95%               93.4MB / 116MB      508kB / 8.19kB      3
79f484ac7c89        0.18%               388MiB / 7.795GiB     4.86%               6.35GB / 25.4GB     5.24MB / 12.3kB     15
e34789eed4cc        0.00%               108.5MiB / 7.795GiB   1.36%               22.2kB / 17.7kB     0B / 0B             4
6f0cd03996a3        0.12%               116.4MiB / 7.795GiB   1.46%               6.33MB / 13MB       45.1kB / 0B         6
4d8486ff6046        0.23%               344.9MiB / 7.795GiB   4.32%               1.17MB / 1.69MB     1.16MB / 16.7MB     28
4d978af45ff2        0.16%               6.219MiB / 7.795GiB   0.08%               13MB / 6.34MB       102kB / 442kB       3
533d96fc2ce1        0.24%               120.7MiB / 7.795GiB   1.51%               9.18MB / 16.7MB     258kB / 0B          6
6b60a945bff7        0.01%               188.3MiB / 7.795GiB   2.36%               14.5MB / 4.69MB     2.03MB / 0B         10
9c2e8ec55a06        0.10%               6.215MiB / 7.795GiB   0.08%               16.7MB / 9.17MB     369kB / 475kB       3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The curious thing here is that one container, c520fc5504f1, is showing – for CPU % and all other metrics.  Let’s zoom in on that one.  Personally I find the view above to be more granular than needed and missing the application specific details that I need so my deployer generates a dstats shell script which does this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./dstats 
CONTAINER                      CPU %               MEM USAGE / LIMIT     CONTAINER ID
seirawatchshop_sidekiq_1       --                  -- / --               c520fc5504f1321d44078ea3df8a2f1ffc9147d0cb117564e913596eda76db32
seirawatchshop_web_1           0.01%               91.61MiB / 7.795GiB   cc24d6bcc576cc1ce0c7d04ba8af6b51a1b7599fbbfdcf0c1cb98bd1553e1224
seirawatchshop_redis_1         0.09%               6.215MiB / 7.795GiB   796829845da6dd5f5f63b7449ce3c95581e386e691626344b5b59010b088311d
seirasearch_web_1              0.47%               207.6MiB / 7.795GiB   b17d34bf72689e75f6332f387f964e1e3f2803c3cf544d3bb7de6d7b501c2a38
seirawatchwebapp_clockwork_1   0.01%               210.4MiB / 7.795GiB   5c5460a763b11f4347a0dc806cc7ff5b1314220a9d93ed55f729d4853c1d094f
seirawatchwebapp_sidekiq_1     0.32%               133.4MiB / 7.795GiB   ec28ede65792d435c7b3042909925a17c79182e820dfa16964be151b07241c07
seirawatchwebapp_web_1         0.00%               131MiB / 7.795GiB     bb5839c2a6a7e87e694baa84d1f7b102c54aebde6991203da14836fa60006742
seirawatchwebapp_redis_1       0.14%               6.215MiB / 7.795GiB   5e78dbc9489ecd3b050715b0aa1fe002cebb4636a858e17f93da56f5736aae2d
seirawatchsite_sidekiq_1       0.10%               119.3MiB / 7.795GiB   2d5b14feb009aa4eaf72cde6969bb271a6c81d6cd196a9648a5c64184ffab242
seirawatchsite_web_1           0.02%               121.1MiB / 7.795GiB   13d42ed0ba35bd56ffa0977fde429759f4713ec8e58ae0715e273d040a7a276c
seirawatchsite_redis_1         0.10%               6.219MiB / 7.795GiB   3fbd801530227940730abe8197b24d3e24d52edf9bdfb4145d30e3ae40399418
seirawebappapi_web_1           0.00%               106.1MiB / 7.795GiB   ac1462fccc60a569d86ce0a0b7939a66af42ae07328a261265d90bcc6928c372
seiracrawler_redis_1           0.15%               16.15MiB / 7.795GiB   422787e2d5ab64647fd67a0c9c25af2a8ecdbb7ce3ab0a6bc7ca16ededb5a93b
seiracrawler_rake_1            0.01%               236.5MiB / 7.795GiB   b19bb96299253434c9ea94f4e1c9640b255e5f359c3af7060acd49a6070ffc01
seiracrawler_sidekiq_1         0.14%               400MiB / 7.795GiB     79f484ac7c8958742dc744da0404652ff100a9e299080014a4d64b5b78ea000c
seiraadmin_clockwork_1         0.01%               108.5MiB / 7.795GiB   e34789eed4cc4a6bf7173ef3f278033799272e116f3f670ceb0754b521065b0d
seiraadmin_sidekiq_1           0.08%               116.4MiB / 7.795GiB   6f0cd03996a3414ee7bc0c3fb76adb542d06e3c1c0f7fa1fe108f156a9d9ac0f
seiraadmin_web_1               0.25%               121.3MiB / 7.795GiB   4d8486ff604656515f0e0e433b99486cf91131ce4a93b82701aa42ef77015155
seiraadmin_redis_1             0.11%               6.219MiB / 7.795GiB   4d978af45ff2db55c08212e404264422a39f4ee4fa4b6656b149a37df65bf147
shouldigem_sidekiq_1           0.06%               120.7MiB / 7.795GiB   533d96fc2ce1fb492faa477dfd171e370a30c107becce00e5a52d56bfe3b2622
shouldigem_web_1               0.10%               187.1MiB / 7.795GiB   6b60a945bff74748f3c447ff7b57f75ef12518758c79e75bd587d59531771f3e
shouldigem_redis_1             0.09%               6.215MiB / 7.795GiB   9c2e8ec55a066d382d0ee0ceadfb3e061196127f6b334e16b73e43551ee4f435
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note 1: Source for dstats is &lt;a href=&quot;https://gist.github.com/fuzzygroup/b4293b4a7d15a9d8ea88a50ddb2ab3f0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note 2: If you’re curious about how to configure the output of docker stats then see &lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/stats/#formatting&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I then docker ps and grep either with the name or the process id, I will see the same container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps | grep seirawatchshop_sidekiq_1
631359e0cec8        fuzzygroup/seirawatchshop_web     &quot;bundle exec sidek...&quot;   10 hours ago        Restarting (1) 46 seconds ago                             seirawatchshop_sidekiq_1

docker ps | grep 631359e0cec8
631359e0cec8        fuzzygroup/seirawatchshop_web     &quot;bundle exec sidek...&quot;   9 hours ago         Restarting (1) 26 seconds ago                             seirawatchshop_sidekiq_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once we have this then we can get just the logs on this one container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker logs 631359e0cec8

Error connecting to Redis on 127.0.0.1:6379 (Errno::ECONNREFUSED)
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:345:in `rescue in establish_connection'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:331:in `establish_connection'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:101:in `block in connect'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:293:in `with_reconnect'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:100:in `connect'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:364:in `ensure_connected'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:221:in `block in process'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:306:in `logging'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:220:in `process'
/usr/local/bundle/gems/redis-3.3.3/lib/redis/client.rb:120:in `call'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:251:in `block in info'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:58:in `block in synchronize'
/usr/local/lib/ruby/2.3.0/monitor.rb:214:in `mon_synchronize'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:58:in `synchronize'
/usr/local/bundle/gems/redis-3.3.3/lib/redis.rb:250:in `info'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:113:in `block in redis_info'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:95:in `block in redis'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:64:in `block (2 levels) in with'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:63:in `handle_interrupt'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:63:in `block in with'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:60:in `handle_interrupt'
/usr/local/bundle/gems/connection_pool-2.2.1/lib/connection_pool.rb:60:in `with'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:92:in `redis'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq.rb:106:in `redis_info'
/usr/local/bundle/gems/sidekiq-4.2.7/lib/sidekiq/cli.rb:71:in `run'
/usr/local/bundle/gems/sidekiq-4.2.7/bin/sidekiq:12:in `&amp;lt;top (required)&amp;gt;'
/usr/local/bundle/bin/sidekiq:22:in `load'
/usr/local/bundle/bin/sidekiq:22:in `&amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So what’s going on here is clearly at the Sidekiq stack layer and it is some type of connection to the underlying containerized Redis instance.  Once we know that, troubleshooting this should actually be pretty simple; it eventually turned out to be a missing pair of files - config/sidekiq.yml.erb and config/initializers/sidekiq.rb that had been overlooked in my initial configuration.&lt;/p&gt;

&lt;p&gt;Just as a sidebar, a docker ps -a is also sometimes useful:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps -a
CONTAINER ID        IMAGE                             COMMAND                  CREATED             STATUS                          PORTS       NAMES
b17d34bf7268        fuzzygroup/seirasearch_web        &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3230-&amp;gt;3230/tcp    seirasearch_web_1
5c5460a763b1        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec clock...&quot;   9 hours ago         Up 9 hours       seirawatchwebapp_clockwork_1
ec28ede65792        fuzzygroup/seirawatchwebapp_web   &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seirawatchwebapp_sidekiq_1
bb5839c2a6a7        fuzzygroup/seirawatchwebapp_web   &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3210-&amp;gt;3210/tcp    seirawatchwebapp_web_1
5e78dbc9489e        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32779-&amp;gt;6379/tcp   seirawatchwebapp_redis_1
2d5b14feb009        fuzzygroup/seirawatchsite_web     &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seirawatchsite_sidekiq_1
13d42ed0ba35        fuzzygroup/seirawatchsite_web     &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3200-&amp;gt;3200/tcp    seirawatchsite_web_1
3fbd80153022        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32777-&amp;gt;6379/tcp   seirawatchsite_redis_1
631359e0cec8        fuzzygroup/seirawatchshop_web     &quot;bundle exec sidek...&quot;   9 hours ago         Restarting (1) 58 seconds ago       seirawatchshop_sidekiq_1
26ee413fab7f        fuzzygroup/seirawatchshop_web     &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3205-&amp;gt;3205/tcp    seirawatchshop_web_1
1ab35bf6514c        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32775-&amp;gt;6379/tcp   seirawatchshop_redis_1
ac1462fccc60        fuzzygroup/seirawebappapi_web     &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3220-&amp;gt;3220/tcp    seirawebappapi_web_1
422787e2d5ab        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32774-&amp;gt;6379/tcp   seiracrawler_redis_1
b19bb9629925        fuzzygroup/seiracrawler_rake      &quot;bundle exec clock...&quot;   9 hours ago         Up 9 hours       seiracrawler_rake_1
79f484ac7c89        fuzzygroup/seiracrawler_rake      &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seiracrawler_sidekiq_1
e34789eed4cc        fuzzygroup/seiraadmin_web         &quot;bundle exec clock...&quot;   9 hours ago         Up 9 hours       seiraadmin_clockwork_1
6f0cd03996a3        fuzzygroup/seiraadmin_web         &quot;bundle exec sidek...&quot;   9 hours ago         Up 9 hours       seiraadmin_sidekiq_1
4d8486ff6046        fuzzygroup/seiraadmin_web         &quot;/bin/sh -c 'puma ...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:3203-&amp;gt;3203/tcp    seiraadmin_web_1
4d978af45ff2        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   9 hours ago         Up 9 hours                      0.0.0.0:32773-&amp;gt;6379/tcp   seiraadmin_redis_1
533d96fc2ce1        fuzzygroup/shouldigem_web         &quot;bundle exec sidek...&quot;   10 hours ago        Up 10 hours       shouldigem_sidekiq_1
6b60a945bff7        fuzzygroup/shouldigem_web         &quot;/bin/sh -c 'puma ...&quot;   10 hours ago        Up 10 hours                     0.0.0.0:3500-&amp;gt;3500/tcp    shouldigem_web_1
9c2e8ec55a06        redis:3.2-alpine                  &quot;docker-entrypoint...&quot;   10 hours ago        Up 10 hours                     0.0.0.0:32770-&amp;gt;6379/tcp   shouldigem_redis_1
6c2b013947d1        google/cadvisor:latest            &quot;/usr/bin/cadvisor...&quot;   11 hours ago        Exited (137) 11 hours ago       cadvisor2
34e1edbad906        google/cadvisor:latest            &quot;/usr/bin/cadvisor...&quot;   11 hours ago        Created       cadvisor1
8478172d0f2b        google/cadvisor:latest            &quot;/usr/bin/cadvisor...&quot;   11 hours ago        Exited (137) 11 hours ago       cadvisor
5b5c1709c1af        errbit/errbit:latest              &quot;bundle exec puma ...&quot;   3 days ago          Exited (0) 10 hours ago       errbit_errbit_1
ac91a943e789        mongo:3.2                         &quot;docker-entrypoint...&quot;   3 days ago          Exited (0) 10 hours ago       errbit_mongo_1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;go-nuclear---restart-the-docker-daemon&quot;&gt;11: Go Nuclear - Restart the Docker Daemon&lt;/h1&gt;

&lt;p&gt;The absolute nuclear approach here is to simply restart the &lt;a href=&quot;https://docs.docker.com/engine/admin/&quot;&gt;docker daemon&lt;/a&gt; itself.  On Ubuntu, this is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service docker restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m not going to go so far as to say that you don’t have to, rarely, restart the docker daemon but it is just that – &lt;strong&gt;rare&lt;/strong&gt;.  Your problems are far, far, far more likely to be application side errors, even when it looks like Docker is at fault.  I’ve mistakenly pointed the finger at Docker too many times – and I was &lt;strong&gt;wrong&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;pitch-for-a-friend-learn-from-nick&quot;&gt;Pitch for a Friend: Learn from Nick&lt;/h1&gt;

&lt;p&gt;All my Docker knowledge came from Nick Janetakis’ &lt;a href=&quot;https://diveintodocker.com/&quot;&gt;Dive into Docker&lt;/a&gt; course and he does a great job teaching about Docker. He also kibitzed with me on this debugging process although he never saw the final draft before it went live.  Any errors are mine not his.  Strongly recommended.&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://fuzzyblog.io//blog/docker/2017/08/15/10-steps-to-debugging-containerized-rails-applications.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/docker/2017/08/15/10-steps-to-debugging-containerized-rails-applications.html</guid>
        
        <category>docker</category>
        
        <category>debugging</category>
        
        <category>rails</category>
        
        <category>monolith</category>
        
        <category>aws</category>
        
        
        <category>docker</category>
        
      </item>
    
  </channel>
</rss>
