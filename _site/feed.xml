<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 18 Dec 2016 07:25:50 -0500</pubDate>
    <lastBuildDate>Sun, 18 Dec 2016 07:25:50 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>On the Big Tech Company Interview Process</title>
        <description>&lt;h1 id=&quot;the-big-company-interviewing-process&quot;&gt;The Big Company Interviewing Process&lt;/h1&gt;

&lt;p&gt;I am, at this stage in my career, a senior engineer with almost 3 decades of&lt;/p&gt;

&lt;p&gt;despite having one person at the latest big company tell me this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hey, sorry to hear about the interview!  It’s such a shame we’re not getting you.  Sadly, one of the worse side effects of having a lot of talented people applying means our interview process is calibrated to generate very few false positives, at the expense of generating a ton of false negatives.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 18 Dec 2016 07:13:06 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/18/on-the-big-tech-company-interview-process.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/18/on-the-big-tech-company-interview-process.html</guid>
        
        
      </item>
    
      <item>
        <title>Tech Interviewing is Broken - A Suggestion</title>
        <description>&lt;p&gt;So &lt;a href=&quot;http://www.medium.com/&quot;&gt;Medium&lt;/a&gt; this morning tells me that person X is following me, I forget who – that was on my phone and I’m writing on my laptop.  I try and figure out why and I notice that person X commented on an article by &lt;a href=&quot;https://medium.com/@_ericelliott&quot;&gt;Eric Elliot&lt;/a&gt;.  I bounce over there and I find his &lt;a href=&quot;https://medium.com/javascript-scene/tech-hiring-has-always-been-broken-heres-how-i-survived-it-for-decades-b7ac33088de6&quot;&gt;Tech Hiring is Broken&lt;/a&gt; rant and I am inspired.  And that is how this post vomited its way out of my cortex and onto the Internet.&lt;/p&gt;

&lt;p&gt;Sidebar: Medium has a brilliant authoring interface but the integration between phone and browser on your laptop is deeply, deeply flawed.  Know why I referred to someone as person x?  I can’t find the same stuff on my laptop as on on my phone.  Honestly I was barely able to find Eric Elliot at all – know how I did it?  &lt;a href=&quot;https://www.google.com/search?q=medium+eric+elliot&amp;amp;ie=utf-8&amp;amp;oe=utf-8&quot;&gt;Google&lt;/a&gt;.  Know how I found the hiring post?  &lt;a href=&quot;https://www.google.com/search?q=medium+eric+elliot+tech+hiring&amp;amp;ie=utf-8&amp;amp;oe=utf-8&quot;&gt;Google&lt;/a&gt;.  Don’t get me wrong, I love what Ev has done for the industry (Blogger, Odeo, Twitter and now Medium as well as more) but there are deep usability problems here.  This might well be fine if you could use your phone to author on Medium but all authoring in Medium still has to be done on a PC which means responding to Medium’s notifications is painfully hard.  Sigh.  I would strongly suggest that Medium do real usability work and give people problems like “there’s a post by this person; respond to it”.  Their product would get better as a result.&lt;/p&gt;

&lt;p&gt;Eric makes a number of good points about tech interviewing, whiteboard coding exercises and so on.  Having both been a interviewer and a interviewee over the years and having &lt;strong&gt;failed&lt;/strong&gt; the interview process at every big tech company I’ve ever tried at, I think I have an interesting perspective on the process so I thought I’d put together some notes on how to tech interview.  I’ve used variants of this over the years and I think this is exactly how I’ll interview someone the next time I’m hiring.&lt;/p&gt;

&lt;h1 id=&quot;what-does-an-engineer-actually-do&quot;&gt;What Does an Engineer Actually Do?&lt;/h1&gt;

&lt;p&gt;If you think about what an engineer does then you might think that it is something like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;code&lt;/li&gt;
  &lt;li&gt;code code!&lt;/li&gt;
  &lt;li&gt;code code code!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sadly, even though writing code is the fun part of the job, that’s &lt;strong&gt;not&lt;/strong&gt; actually what we do at all.  Here’s actually what we do in order of frequency:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;think&lt;/li&gt;
  &lt;li&gt;research problems&lt;/li&gt;
  &lt;li&gt;debug code&lt;/li&gt;
  &lt;li&gt;read code&lt;/li&gt;
  &lt;li&gt;write code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, yes, writing code is a part of it but writing new code is actually, with a few exceptions, probably the smaller part of your job, particularly at bigger companies.  The bigger the company, generally, the smaller the amount of new code you generally have to write and the more you have to debug and read code.&lt;/p&gt;

&lt;p&gt;Eric, in his post, argues quite well that white boards in the interview process are broken:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;People don’t think or code linearly, from top to bottom, in neat lines. They put together blocks, frequently cut and paste, etc… On a whiteboard, that requires erasing, and that looks like a mistake. Of course, that makes the interviewee nervous, and it sends false signals to interviewers &lt;a href=&quot;https://medium.com/javascript-scene/tech-hiring-has-always-been-broken-heres-how-i-survived-it-for-decades-b7ac33088de6#.mw5b2ha1n&quot;&gt;Eric Elliot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He’s absolutely right on this and the simple truth of it, whether we want to admit it or not, is that an engineer’s skills using Google / Stack Overflow / Github to find the answer to a problem is probably a bigger factor in overall job success than any ability to solve interviewing brain teasers.  Overall Eric makes a huge number of good points and you really should read his post.&lt;/p&gt;

&lt;h1 id=&quot;adapting-what-an-engineer-actually-does-to-the-interviewing-process&quot;&gt;Adapting What an Engineer Actually Does to the Interviewing Process&lt;/h1&gt;

&lt;p&gt;The hands on technical interview portion of the overall interview process is likely between 1 and 3 hours with the initial hour determining whether you advance to the next stage or you fail out.  At least that’s been my experience.  So given that I’ve argued that you spend more time thinking / researching / debugging code / reading code how do you evaluate those aspects?&lt;/p&gt;

&lt;p&gt;Given that I basically regard my last bit of technical hiring as a failure of mine at the interview level I’ve spent a lot of time thinking about this and this is roughly my third time I’ve written all this down (the first 2 were abject failures; bytes fed into the bit bucket).  Here’s my conclusion:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An engineer needs to be evaluated along the lines of the work he is going to be doing.  And the best proxy for that is likely the work that &lt;strong&gt;you&lt;/strong&gt; are &lt;strong&gt;currently&lt;/strong&gt; doing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Unfortunately, giving the secrecy fetish in most large companies, this doesn’t work when:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a person is being interviewed by someone on the team but the current project can’t be shared&lt;/li&gt;
  &lt;li&gt;by someone who isn’t on the same team as the person being hired and the same dev tools aren’t being used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me illustrate this with an example.  And I will admit that for the next person I interview, this will be the interview process I use.&lt;/p&gt;

&lt;h2 id=&quot;pre-requisite&quot;&gt;Pre-Requisite&lt;/h2&gt;

&lt;p&gt;All of these approaches below require screensharing as a pre-requisite. Specifically control needs to shift fluidly between interviewer and interviewee so that the interviewer can give the interviewee a task and watch them execute on it.  I’d recommend ScreenHero for this but sadly Slack has brutalized ScreenHere through the normal acquihire debacle.  I’m not sure what else to recommend although there are a few web based tools around that are promising.&lt;/p&gt;

&lt;h2 id=&quot;test-what-you-know-1---thinking&quot;&gt;Test What You Know 1 - Thinking&lt;/h2&gt;

&lt;p&gt;If you’re an engineer writing code on a project then there is &lt;strong&gt;always&lt;/strong&gt; some aspect of the project that you are currently thinking about.  Something, no matter what, is always unsolved.  Bill Joy, the principal author of BSD Unix and the co-founder of Sun, has something to say here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Joy’s law is the principle that “no matter who you are, most of the smartest people work for someone else,” &lt;a href=&quot;https://en.wikipedia.org/wiki/Joy's_law_(management)&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you accept that that’s right then here’s my suggestion - get the interviewee’s input on what you are currently thinking about.  Find out what they have to say on the matter.  If nothing else I suspect the process of cogently explaining it to a fresh brain might help you; I always find that to be the case.  And, if the interviewee has a great insight, isn’t that a &lt;strong&gt;damn solid indicator&lt;/strong&gt; that they might be a good hire?&lt;/p&gt;

&lt;h2 id=&quot;test-what-you-know-2---research&quot;&gt;Test What You Know 2 - Research&lt;/h2&gt;

&lt;p&gt;Once again if you’re an engineer writing code on a project then there is something that you googled either today or yesterday where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the answer was hard to find&lt;/li&gt;
  &lt;li&gt;the answer was hard to interpret&lt;/li&gt;
  &lt;li&gt;tenacity was needed i.e. you needed to dig into the 3rd page of google results or find the answer not in a github wiki post but actually in a closed issue or perhaps by back tracing the original author to their reddit presence and posts they wrote&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The sad, sad truth of search today is that finding answers to hard questions often takes a considerable amount of sleuthing.  And if you accept that as true then watching how an engineer takes a problem you give them and find the answer tells you how efficient they might be in the work place.  And, best of all, all you have to do for this interview task is look in your own search history and say something like “here’s an error message – how do you look this up to take the next step”.&lt;/p&gt;

&lt;h2 id=&quot;test-what-you-know-3---debugging&quot;&gt;Test What You Know 3 - Debugging&lt;/h2&gt;

&lt;p&gt;This is my personal favorite in terms of interviewing tests.  Debugging for engineers is the equivalent for wood workers of &lt;em&gt;measure twice, cut once&lt;/em&gt;.  Debugging is the &lt;strong&gt;essential&lt;/strong&gt; skill that tells you how an engineer tackles a problem and watching how someone debugs something is always interesting.  My first business partner, Brian, was an absolute super hero at this.  You could hand Brian a code base with 3.5 million lines of C in it, describe the error and say “go” and he’d find it and fix it.  You might not always like the way he fixed it but he’d get it done and get it done in short order.  I’m not, yet, at that stage but I do quite well.  Once again my suggestion here is to give the interviewee a current problem you’re debugging and then watch his progress.  Yes he’s going to be missing the overall context you have but you’re looking for approach / technique here more than actual results.  And, once again, you yourself might learn something.&lt;/p&gt;

&lt;p&gt;Let me illustrate this with an example from my own pair programming history.  &lt;a href=&quot;http://www.dasari.me&quot;&gt;Dv&lt;/a&gt; used to work for me and we’d pair but not always as often as we should have.  One day he was watching my technique, I was using raise statements as my primary tool and he finally said “Let’s try the debugger”.  He dropped a few gems in my Gemfile and then added the debugger pragma at the offending spot in the code and we restarted.  And you know what?  My life has &lt;strong&gt;never been the same&lt;/strong&gt; since.  That’s not hyperbole by any means.  I write / debug ruby code 60+ hours per week or 3,120 hours per year and, based on my own premise, more of that is spend debugging than writing.  By teaching me how to use the debugger gem, my life was literally changed.&lt;/p&gt;

&lt;p&gt;So take a part of the code that you need to debug, perhaps even what you were working on before the interview, create a branch so the interviewee can’t screw up your work and let them go! What you want to do here is watch their process.  Even if they don’t know the code base the process of debugging is generally the same so they should be able to do something.  Whenever you interact with someone who isn’t vested in your culture and tooling you have a tremendous opportunity to learn from them.  If you pick up one small technique from an interviewee then isn’t that also a good indicator that they might be a good hire?&lt;/p&gt;

&lt;p&gt;And if someone can’t make any progress or even suggestions then that tells you something.  Perhaps you might get an interaction like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;interviewee&lt;/strong&gt;: Perhaps we need a log file here to gather data&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;interviewer&lt;/strong&gt;: We have a 10 server environment; how would you go about that&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if they don’t solve the problem, and they likely won’t, watching the process is likely hugely informative.  If you see that they are an inefficient debugger or, worse, an ineffective debugger then that’s a strong argument against hiring them.&lt;/p&gt;

&lt;h2 id=&quot;test-what-you-know-4---reading-code&quot;&gt;Test What You Know 4 - Reading Code&lt;/h2&gt;

&lt;p&gt;I’ve never seen a code base, not &lt;strong&gt;once&lt;/strong&gt;, without a particularly tricky section somewhere.  We may not admit it but every single code base has at least one module where you either tread gently or you modify only with a degree of regret and self loathing.  So here’s my suggestion:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Hand them that code module to read and, perhaps, indicate to them what you want them to focus on&lt;/li&gt;
  &lt;li&gt;Give them say 5 to 15 minutes to go thru it (adjust the time to fit based on size)&lt;/li&gt;
  &lt;li&gt;Ask them questions; adjust your questions to match the the instructions in 1.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once again how well they read the code and understand it gives you a huge indicator of whether or not they might be a good hire.&lt;/p&gt;

&lt;h2 id=&quot;test-what-you-know-5---write-code&quot;&gt;Test What You Know 5 - Write Code&lt;/h2&gt;

&lt;p&gt;At this point, if a person has proven to you that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;they can think&lt;/li&gt;
  &lt;li&gt;that they can research&lt;/li&gt;
  &lt;li&gt;that they can debug&lt;/li&gt;
  &lt;li&gt;that they can read code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;isn’t it a given that they can write code?  I don’t think I’ve ever seen a candidate get thru thinking, researching, debugging and reading and then not be able to write code.  But, if you’re still concerned then give them a coding problem.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I think this is a very solid approach to gauging whether or not to hire someone but, honestly, I’ve only used portions of it in the past.  I’ve never done it as a step 1 to step 5 process.  However the next time I do I will definitely document it here.&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/software_engineering/2016/12/18/tech-interviewing-is-broken-a-suggestion.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/software_engineering/2016/12/18/tech-interviewing-is-broken-a-suggestion.html</guid>
        
        <category>software_engineering</category>
        
        <category>hr</category>
        
        <category>hiring</category>
        
        <category>interview</category>
        
        
        <category>software_engineering</category>
        
      </item>
    
      <item>
        <title>Vacation Insomnia and the Hotel Business Office</title>
        <description>&lt;p&gt;As a remote worker I’ve found that you tend to work more, there are fewer distractions, there are no co-workers to go out with, etc, so you just work more.  And when you always have a laptop with you then even vacation tends to flow into work.  One of the oddest things about being a remote worker is that you end up with recollections of work that are entirely cognitively dissonant with work itself.&lt;/p&gt;

&lt;p&gt;Here are a few examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When I first wrote the iOS version of AppData after fighting an internal battle &lt;strong&gt;hard&lt;/strong&gt; that iOS mattered (this was back in 2010 or 2011) I remember staying at a cheap Dallas hotel with bad wifi on vacation with my family when I first wrote that crawler&lt;/li&gt;
  &lt;li&gt;I can’t tell even begin you how much code I wrote from Great Wolf Lodge on different family trips.  I suspect I’ve not only written code there but entire products there.&lt;/li&gt;
  &lt;li&gt;The last time I was in Disney world I wrote an anti-spam algorithm to evaluate your Twitter followers for their &lt;em&gt;spamminess&lt;/em&gt; related to your content.  I guess that wasn’t for work tho – more for late night boredom.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I’m once again on a short vacation and I find myself in the hotel business office working in wonderful, blessed quiet and darkness.  This time I’m in the hotel’s business office and it is &lt;em&gt;absolutely lovely&lt;/em&gt;.  After a night’s drive on the way to our destination and a late checkin I found myself up at the crack of 1 am.  And with three other people in the hotel room, what do you do?  Well, if you’re me, you shower, shave, grab your gear and find a place with wifi.&lt;/p&gt;

&lt;p&gt;And this time around I’m rewriting the core crawl / recursive_crawl routines for our main HTML crawler.  This is a core loop which is the innermost guts of our crawler and it is ugly beyond belief.  I can say that because I’m one of its two core authors.  This is a routine which takes like 8 parameters and returns 7 (or the other way around; even I can’t tell).  So I’m in the middle of a massive refactor where it takes in one struct and returns another.  And I know it will be better but right now I suspect it resembles a butcher shop when a flood of carcasses has just arrived – there’s blood everywhere and bits of bone and gristle from the big band saws that a real butcher shop would actually use.  Even if you’re a self confessed carnivore like myself, you likely wouldn’t want to see it and that’s how I feel right now.  I want this refactor done desperately but, man, even I don’t want to do this work.&lt;/p&gt;

&lt;p&gt;I’ve now gotten it to this stage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crawl_struct = UrlTool.get_mechanize_links_on_a_page_from_struct(OpenStruct.new(:site =&amp;gt; site))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which returns this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;OpenStruct {
           :num_pages =&amp;gt; 1,
     :already_crawled =&amp;gt; [
        [0] &quot;14b461cc3eecf248213c23999ca33236363d083f&quot;
    ],
    :page_body_hashes =&amp;gt; [],
               :links =&amp;gt; [],
      :mechanize_page =&amp;gt; nil,
      :resolved_links =&amp;gt; []
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which means that I’ve made a crawler which, now, does not crawl.  &lt;strong&gt;Groan&lt;/strong&gt;.  I wish I’d stayed in bed.  Happily that likely means that I’ve missed something basic like a conditional since at least my basic return structure is better.  And, while writing this, I just found it – I had omitted a conditional.&lt;/p&gt;

&lt;p&gt;Now I suspect that a number of my readers are saying something along the lines of “Dude – &lt;strong&gt;it is vacation&lt;/strong&gt;; STOP CODING!” and I will.  And you are right but there are some mitigating factors&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;this is time sensitive work that needs to get done before year end&lt;/li&gt;
  &lt;li&gt;I suffer from an over developed sense of personal responsibility on all fronts&lt;/li&gt;
  &lt;li&gt;everyone else is sleeping which means no reading, no media to consume&lt;/li&gt;
  &lt;li&gt;workaholic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The strongest mitigating factor here tho is that I’ve found that when I’m forced to leave my home office it often &lt;strong&gt;spurs creativity&lt;/strong&gt; fairly dramatically.  Just as an example we normally compare crawl results to past crawls only on 2 dimensions, pages and links because the attributes for those versus past crawls are easily accessible.  What I just realized tho is that I can implement a simple JSON api and compare my new crawl against any of the dimensions by which we crawl - forms, iframes, etc.  And, in the process of writing this post, I actually implemented that JSON api.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/remote_work/2016/12/17/vacation-insomnia-and-the-hotel-business-office.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/remote_work/2016/12/17/vacation-insomnia-and-the-hotel-business-office.html</guid>
        
        <category>vacation</category>
        
        <category>remote_work</category>
        
        
        <category>remote_work</category>
        
      </item>
    
      <item>
        <title>Why Freelancing Makes You A Better Engineer And You The Employeer Should Not Object</title>
        <description>
</description>
        <pubDate>Wed, 14 Dec 2016 07:38:27 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/2016/12/14/why-freelancing-makes-you-a-better-engineer-and-you-the-employeer-should-not-object.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/2016/12/14/why-freelancing-makes-you-a-better-engineer-and-you-the-employeer-should-not-object.html</guid>
        
        
      </item>
    
      <item>
        <title>The Silver Searcher</title>
        <description>&lt;p&gt;I had a project die about two months ago and I’ve been involved in a bit of resurrection work recently.  This was related to my comments on &lt;a href=&quot;https://fuzzygroup.github.io/blog/rails/2016/12/06/code-rot-is-very-very-real.html&quot;&gt;code rot&lt;/a&gt;.  Happily, with the assistance of &lt;a href=&quot;http://dasari.me&quot;&gt;Dv&lt;/a&gt; and &lt;a href=&quot;http://www.nickjanetakis.com&quot;&gt;Nick&lt;/a&gt; for different aspects, we’re once again indexing and functioning correctly.  Today I’m going to talk about a basic search tool, &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;The Silver Searcher&lt;/a&gt;, also known as ag and that’s how I’ll refer to it mostly.&lt;/p&gt;

&lt;p&gt;This blog post is written as a basic, example based tutorial since that type of information seems to be entirely missing from &lt;a href=&quot;http://geoff.greer.fm/ag/&quot;&gt;ag’s home page&lt;/a&gt; and github page.  ag is a fantastic tool but its usage isn’t always apparent.&lt;/p&gt;

&lt;p&gt;ag, the silver searcher’s command line invocation, is a search tool similar to grep or ack only:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;better&lt;/li&gt;
  &lt;li&gt;faster&lt;/li&gt;
  &lt;li&gt;able to leap tall buildings in a single bound! (just kidding but it feels that way)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ag is a fantastic tool and its strong enough that I’ve just added it to my standard ansible playbook for all my servers so I will always have it available.  Recommended&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;ag can be installed on a mac using homebrew:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install the_silver_searcher
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or on Ubuntu using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install silversearcher-ag
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;

&lt;p&gt;ag operates by searching in the current directory and below using a very simple syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ag WHAT_YOU_WANT_TO_FIND
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;replace WHAT_YOU_WANT_TO_FIND with, well, what you’re looking for.  Here’s an example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ag NUM_THREADS=10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this case I was struggling to find documentation that I knew I had written down but I had changed boxes, re-organized directories and so on.  By simply opening a Terminal window to my home directory i.e. ~ and then typing ag NUM_THREADS=10 I was able to find all documents containing this.&lt;/p&gt;

&lt;h2 id=&quot;understanding-how-ag-operates&quot;&gt;Understanding How ag Operates&lt;/h2&gt;

&lt;p&gt;Search tools tend to be fiddly little beasts at the best of times and if you don’t understand how they work then this tends to rise up and bite you badly.  Here’s what I know about how ag operates and that I took the time to verify:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Searches by default are case insensitive; I got roughly the same results with ag num_threads=10 as I did with ag NUM_THREADS=10; no I don’t understand why I got 76 results with the lower case version and 77 with the upper case but the box I’m searching is a bit wonky so perhaps that’s it.&lt;/li&gt;
  &lt;li&gt;Searches go across directories by default&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 04:39:05 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/search/2016/12/14/the-silver-searcher.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/search/2016/12/14/the-silver-searcher.html</guid>
        
        <category>search</category>
        
        <category>grep</category>
        
        <category>ack</category>
        
        <category>ag</category>
        
        <category>silver_searcher</category>
        
        
        <category>search</category>
        
      </item>
    
      <item>
        <title>When Ruby bzip2 Won't Install</title>
        <description>&lt;p&gt;I spent quite a bit of time today trying to get the bzip2 gem working.  Not even the fork worked.  Happily I found &lt;a href=&quot;https://github.com/koraktor/rbzip2&quot;&gt;rbzip2&lt;/a&gt; which worked brilliantly.  Not sure if it compresses or decompresses yet but I can deploy at least and that was today’s goal.&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/ruby/2016/12/14/when-ruby-bzip2-won-t-install.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/ruby/2016/12/14/when-ruby-bzip2-won-t-install.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>bzip</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>What Just Happened To Your Database In the Past 10 Minutes</title>
        <description>&lt;p&gt;So I’m rapidly coming to the conclusion that Christmas is the enemy of getting things done.  While I have come up with a lot of potential topics to write about recently I don’t seem to be able to get anything actually finished due to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Present Shopping&lt;/li&gt;
  &lt;li&gt;Present Wrapping&lt;/li&gt;
  &lt;li&gt;Christmas Events (parties, choir concerts, etc)&lt;/li&gt;
  &lt;li&gt;Christmas Baking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alas – at least, as my old boss, &lt;a href=&quot;https://twitter.com/rafer&quot;&gt;Scott Rafer&lt;/a&gt;, used to say – &lt;em&gt;these are high quality problems to have&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;A quick post today – looking at the state of your database.  Let’s say you have a table called posts and it has a field called created_at (the Rails standard way of tracking table changes) and you want to see how many things came into that table in the past 10 minutes.  Here’s the sql you need:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 10 MINUTE);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Previously I’ve generally looked at tables and then tried to relate what’s going on to the current time and adjust in my head for the server time zone offset.  This is &lt;strong&gt;much, much&lt;/strong&gt; better.&lt;/p&gt;

&lt;p&gt;A really nice side effect of this is that you can simply change the interval quickly and see if your performance is linear or non-linear.  Let’s say you change your interval to 5, 10 and 15 minutes and this was the result:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MariaDB [foo_production]&amp;gt; SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 5 MINUTE);
+----------+
| COUNT(*) |
+----------+
|      468 |
+----------+
1 row in set (0.45 sec)

MariaDB [foo_production]&amp;gt; SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 10 MINUTE);
+----------+
| COUNT(*) |
+----------+
|      512 |
+----------+
1 row in set (0.44 sec)

MariaDB [foo_production]&amp;gt; SELECT COUNT(*) FROM posts WHERE created_at &amp;gt; DATE_ADD(NOW(),INTERVAL - 15 MINUTE);
+----------+
| COUNT(*) |
+----------+
|     1312 |
+----------+
1 row in set (0.45 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this illustrates is that while performance was non linear in the 5 to 10 minute range, it became linear again (roughly) at the 15 minute mark.  This is a nice simple way to get a &lt;em&gt;feel&lt;/em&gt; if performance is overall on track.&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/mysql/2016/12/14/what-just-happened-to-your-database-in-the-past-10-minutes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/mysql/2016/12/14/what-just-happened-to-your-database-in-the-past-10-minutes.html</guid>
        
        <category>mysql</category>
        
        <category>rails</category>
        
        <category>sql</category>
        
        
        <category>mysql</category>
        
      </item>
    
      <item>
        <title>So You Want to Hire a Freelancer to Be Full Time</title>
        <description>&lt;p&gt;For most of the past 8 years I’ve been a professional freelancer and it all started with &lt;em&gt;eduFire&lt;/em&gt; where I was VP of Engineering.  When eduFire dissolved in a wash of founder level “oh crap we can’t raise our A round; what do we do; I know – I’ll just quit and start something else”(Note1) I made the choice to become a professional freelancer and I have really enjoyed that decision.  I’ve never made as much money or learned as much as I have since I’ve been a freelancer.  My skills now are better than they ever have been and it is largely from freelancing – more on that in a future post.&lt;/p&gt;

&lt;p&gt;From time to time clients try, often hard, to hire you full time.  And if you want to hire a freelancer full time then I have one piece of advice for you:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Pay the freelancer’s bills promptly&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When someone is a freelancer and they are resistant to taking a full time job, I’d argue that there has to be a reason for it since it is &lt;strong&gt;dramatically harder&lt;/strong&gt; to be a freelancer than a full time employee.  We may all talk a lot about the &lt;em&gt;gig economy&lt;/em&gt; but, in 2016 America, things are still structured against freelancers in every way – insurance, taxes, etc.&lt;/p&gt;

&lt;p&gt;In my case I have &lt;strong&gt;trust&lt;/strong&gt; issues.  eduFire shut down 2 weeks before Christmas in 2009 with &lt;em&gt;no notice&lt;/em&gt; and all of us were left high and dry and scrambling for what was next.  And since no one hires in December or even January it meant that everyone was faced at least 2 months of no salary.  I think we all landed on our feet - I certainly did.&lt;/p&gt;

&lt;p&gt;As long as a client is moderately rational or at least not insane the best impression you can give a freelancer is, well, if you &lt;strong&gt;pay your bills promptly&lt;/strong&gt;.  As long as the freelancer is paid on time, well, we’re generally happy.  And if you want them to join you full time, well, pay your bills on time.  That goes a long, long way towards giving a freelancer the positive feelings you want them to have if you are going to name them a job offer.&lt;/p&gt;

&lt;p&gt;Note1: No eduFire wasn’t mine and yes that’s more than a little bit of much deserved bitterness.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/hiring/2016/12/14/so-you-want-to-hire-a-freelancer-to-be-full-time.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/hiring/2016/12/14/so-you-want-to-hire-a-freelancer-to-be-full-time.html</guid>
        
        <category>hr</category>
        
        <category>hiring</category>
        
        <category>software_engineering</category>
        
        <category>freelance</category>
        
        <category>gig</category>
        
        
        <category>hiring</category>
        
      </item>
    
      <item>
        <title>Recent PostMac Notes</title>
        <description>&lt;p&gt;Some recent things in the Post Mac category:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mondaynote.com/macbook-pro-launch-perplexing-b47003037b2e#.88txiffc1&quot;&gt;Jean Louis Gassee returned his New MacBook Pro&lt;/a&gt; and called the launch &lt;strong&gt;perplexing&lt;/strong&gt;; &lt;a href=&quot;https://news.ycombinator.com/item?id=13162310&quot;&gt;Hacker News Discussion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://9to5mac.com/2016/12/13/why-apple-is-removing-time-remaining-battery-life-estimates-macbook-pro/&quot;&gt;Apple is removing battery life estimates from the MacBook Pro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.theguardian.com/technology/2016/dec/12/apple-macbook-pro-review-the-best-computer-you-shouldnt-buy&quot;&gt;The Guardian calls the next MacBook Pro the Best Computer You Shouldn’t Buy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://hn.algolia.com/?query=macbook%20pro&amp;amp;sort=byPopularity&amp;amp;prefix&amp;amp;page=0&amp;amp;dateRange=pastWeek&amp;amp;type=story&quot;&gt;Hacker News search on recent MacBook articles&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I should note that I am basically happy with my MacBook Pro 13” but I bought the previous generation so it is much, much older than the current.  And my wife absolutely adores here brand new MacBook (but not the pro).  Her only real objection is having to use a dongle to print on our old Brother laser printer but she’s back in graduate school now and very, very happy with the weight and size of it.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/postmac/2016/12/14/recent-postmac-notes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/postmac/2016/12/14/recent-postmac-notes.html</guid>
        
        <category>postmac</category>
        
        <category>osx</category>
        
        
        <category>postmac</category>
        
      </item>
    
      <item>
        <title>Adhoc Ansible Example</title>
        <description>&lt;p&gt;I’ve never been a fan of adhoc ansible – I’m more of a playbook and role kind of guy but this was pretty useful earlier today:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible -i inventories/machines workers -m shell -a 'python --version'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that gave me the python version on roughly a dozen or so machines allowing me to focus in on the one box where it was was incorrect.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0500</pubDate>
        <link>https://fuzzygroup.github.io/blog/ansible/2016/12/14/adhoc-ansible-example.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/ansible/2016/12/14/adhoc-ansible-example.html</guid>
        
        <category>ansible</category>
        
        
        <category>ansible</category>
        
      </item>
    
  </channel>
</rss>
