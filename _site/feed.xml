<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc / Hyde.
</description>
    <link>http://fuzzyblog.io//blog/</link>
    <atom:link href="http://fuzzyblog.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 02 Feb 2017 08:15:58 -0500</pubDate>
    <lastBuildDate>Thu, 02 Feb 2017 08:15:58 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Twitter Cards and Images</title>
        <description>&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot; /&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 02 Feb 2017 06:56:08 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/02/twitter-cards-and-images.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/02/twitter-cards-and-images.html</guid>
        
        
      </item>
    
      <item>
        <title>Software Engineering Guidelines Other People Taught Me</title>
        <description>&lt;p&gt;Engineering Guidelines&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Plan units of work that you can accomplish in a given time span&lt;/li&gt;
  &lt;li&gt;End on success&lt;/li&gt;
  &lt;li&gt;Never leave big chunks of work overnight or worse on a weekend&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 02 Feb 2017 06:55:47 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/02/software-engineering-guidelines-other-people-taught-me.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/02/software-engineering-guidelines-other-people-taught-me.html</guid>
        
        
      </item>
    
      <item>
        <title>Succeeding with a SAAS Product</title>
        <description>&lt;p&gt;Same as always: take a complicated, expensive product, strip it down to an MVP, put it online for free with a SaaS price tag for premium features, and market it like hell.&lt;/p&gt;

&lt;p&gt;(find the source on HN)&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Feb 2017 06:52:05 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/02/succeeding-with-a-saas-product.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/02/succeeding-with-a-saas-product.html</guid>
        
        
      </item>
    
      <item>
        <title>How to Provide Great Technical Support</title>
        <description>&lt;p&gt;Dave Bortone knew this&lt;/p&gt;

&lt;p&gt;Doing technical support is not a complicated thing.  Even doing technical support well is not complicated.  At its core technical support amounts to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Listen to the customer’s needs.&lt;/li&gt;
  &lt;li&gt;Help the customer with their problem.&lt;/li&gt;
  &lt;li&gt;Be accessible.&lt;/li&gt;
  &lt;li&gt;Don’t be a jerk&lt;/li&gt;
  &lt;li&gt;Don’t make the customer feel stupid.&lt;/li&gt;
  &lt;li&gt;Admit when you get it wrong.  When you support a complex product then, inevitably, you will get it wrong at some point.&lt;/li&gt;
  &lt;li&gt;Have examples and things in writing to give to the customer when they really need it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;During the course of the Interania project, Neal and I had the experience of interacting directly with both Lithium and MindTouch support and despite both companies supporting the same thing, SAML access to their product, the experiences could not have been more different:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Our experience with MindTouch was so overwhelmingly positive that I emailed our support technician’s boss and the subject line was “You Have an Outstanding Staffer in ScottG”.&lt;/li&gt;
  &lt;li&gt;In all my years in this industry, I have never had a more frustrating experience with support than Lithium.  After about half the interactions with Lithium, I’d get off the phone and curse a blue streak and be angry for about an hour or more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;interacting-with-lithium&quot;&gt;Interacting with Lithium&lt;/h1&gt;

&lt;p&gt;We had two points of contact with Lithium:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Colleen&lt;/li&gt;
  &lt;li&gt;Vicky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Colleen was the overall project manager and I’m going to leave the discussion of Colleen’s issues to Neal.  Suffice it to say that I am not a fan of hers.&lt;/p&gt;

&lt;p&gt;Vicky was our technical contact and I believe his role was as implementation manager or technical expert.  Here are the problems that we experienced with Vicky:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;No Adhoc Accessibility&lt;/strong&gt;.  Every single interaction with Vicky had to be scheduled and planned in advance.  He simply wasn’t someone would could be called for support.  Often times this would mean that we couldn’t interact with him for more than a day which makes debugging a complex system hard.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t be a Jerk&lt;/strong&gt;.  At different points in my career I’ve had direct responsibility for managing customer support including hiring and training support technicians.  One of the thing things I always used to emphasize to them is that this is a customer service position and while you know more than the customer with respect to our product, you don’t actually know more than the customer in general.  In general I used to sum up how to interact with customer as “Don’t be a Jerk”.  This is not a lesson that anyone ever taught Vicky because now, even more than a month after I last interacted with him, I’m still angry at him (and Lithium).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t Make the Customer Feel Stupid&lt;/strong&gt;.  Going right along with don’t be a jerk is don’t make the customer feel stupid and this is one that Vicky violated with in spades.  Given that a support technician always knows more about the product then the customer, it is very easy for a support technician to act superior and Vicky certainly did that.  Having looked up Vicky’s credentials on LinkedIn, I can certainly attest to Vicky being a smart guy but there’s no need to bolster your own ego by making someone else feel like crap when they make a mistake.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;He Never Admitted When He Got It Wrong&lt;/strong&gt;. I am always the first person to admit when I get something wrong and there were times in this project when I did get things wrong.  This was a complex project and we had two vendors with the opposite approach to the same technology which always leads to problems.  Now in the course of interacting with Vicky when I got something wrong I handled it correctly and a) apologies and b) admitted it.  Now, if I had been the only person who got things completely wrong, that would have been fine but Vicky was also absolutely technically wrong on at least 2 if not three occasions.  These were cases where he told me to do X and it was entirely unambiguous.  On these occasions where he got it wrong thus wasting both my time, Neal’s time and the time that we were paying them for support, he failed to ever admit it, take responsibility for it or apologize.  Even when I specifically called him out on this he would just brush it aside and fail to address it.  I understand that no one wants to be wrong but when you are then &lt;em&gt;own it&lt;/em&gt; and &lt;em&gt;learn from it&lt;/em&gt;.  Vicky did not and would not.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nothing in Writing&lt;/strong&gt;.  One of the things that I think affected our entire Lithium SSO implementation was that there wasn’t anything in writing after the initial presentation that Colleen gave us (and she did do a good job on that).  For example once we were ready to go live it was very unclear how that happened so I specifically asked Vicky for something in writing to guide us through the process.  It didn’t have to be much – even an email that enumerated the steps would have been fine.  Nothing was ever forth coming.  I suspect that Lithium themselves actually do not have a lot of SSO experience and this cannot really write this down in a cohesive fashion.  There were a number of very complex aspects to our integration that should have been clearly documented that were not.  Things like how data ownership works when you use SSO had to be figured out by trial and error.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Working with Lithium was enormously frustrating and much of the blame goes straight back to Vicky.  He is technically very smart but he lacks the people skills that make working with a customer an experience where the customer doesn’t want to reach through the screen and throttle him. Overall Lithium needs to put a lot of work into the customer service portion of their business.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Feb 2017 06:44:03 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/02/how-to-provide-great-technical-support.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/02/how-to-provide-great-technical-support.html</guid>
        
        
      </item>
    
      <item>
        <title>Thoughts on Using Windows in 2017</title>
        <description>&lt;p&gt;I use Windows daily in my job. It has come a long way from the consumer/business driven PITA it was years ago. The issues are pretty simple: I don’t trust Microsoft to not screw me over a few years down the line, and I don’t like the in your face consumerism of every aspect of the OS.
I literally had to spend an hour removing every POS adware app installed by the OEM, then I still have to put up with notices from M$ asking me to buy their stuff, even though I don’t use their software for anything. And there’s the virus software, which are all installed by two or three different people and all of which are asking me everyday to buy their stuff.
It’s nice that they’ve moved devs out of the ghetto and I admire the work people have put in to make sure we have nice things again. But I still will be at best lukewarm to anything from M$.&lt;/p&gt;

&lt;p&gt;https://news.ycombinator.com/item?id=13517288&lt;/p&gt;

&lt;p&gt;https://news.ycombinator.com/item?id=13515962&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Feb 2017 06:35:05 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/02/thoughts-on-using-windows-in-2017.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/02/thoughts-on-using-windows-in-2017.html</guid>
        
        
      </item>
    
      <item>
        <title>How to Succeed at a Site Project</title>
        <description>&lt;p&gt;I have started, by my own metrics, well over 20 side projects since I entered the Rails world.  That’s at least 2 a year, sometimes more.  I’ve just launched Hyde in its first, albeit free, MVP stage.  I’ve been working on this, every single day, since December 27, 2016 when I decided to get serious.  Here’s how I did it.&lt;/p&gt;

&lt;h1 id=&quot;realize-that-your-paying-job-is-only-40-hours--week&quot;&gt;Realize that Your Paying Job is Only 40 Hours / Week&lt;/h1&gt;

&lt;p&gt;This was the critical epiphany for me.  I wrote my side project so far while I had a full time gig.  But as my wife helpfully pointed out to me - “You want to do this and you’re spending more time than you are actually paid for on someone else’s thing – work your 40 hours and spend all your other time on the side project”.  She was right and I have.&lt;/p&gt;

&lt;p&gt;Work culture, at least in America, has gotten so bizarre where people now define themselves entirely by their job and they think nothing of working around the clock.  There’s no need for that.  As a full time employee you are paid for 40 hours / week (generally).  If you’re working more than 40 hours per week then you’re effectively lowering your hourly rate and giving your employer &lt;strong&gt;free money&lt;/strong&gt;.  Given that most employers don’t see fit to giving you free money, well, think about it.&lt;/p&gt;

&lt;h1 id=&quot;establish-a-schedule-give-side-project-your-best-time&quot;&gt;Establish a Schedule; Give Side Project Your Best Time&lt;/h1&gt;

&lt;p&gt;I think most software engineers have natural rhythms.  For me my best time is the quiet hours at the beginning of the day.  From the moment I wake up until my actual (paid) work day starts, I work on side project.  So I normally rise around 3 am which gets me anywhere from 1 to 4 hours on side project every single day.  Your schedule will likely vary – hopefully you’re not up pre dawn like I am – but figure out a repeatable schedule where you can give your best time to your side project.&lt;/p&gt;

&lt;h1 id=&quot;write-code-every-single-day&quot;&gt;Write Code Every Single Day&lt;/h1&gt;

&lt;p&gt;I’ve written code every single day since I started on this.  On days where I’m blocked I write something.  There’s a lot of infrastructure if I’m going to write this side project in a scalable way without killing myself down the road so I think I’ve actually spent more time there than I have on the features.  That’s ok – personally the real technical challenge here is in the infrastructure.&lt;/p&gt;

&lt;p&gt;And, if you don’t like coding enough to write code for a side project every single day, well, a side project isn’t for you.  I’m sorry if that’s harsh but I think that’s the reality.&lt;/p&gt;

&lt;h1 id=&quot;take-a-laptop-everywhere&quot;&gt;Take a Laptop Everywhere&lt;/h1&gt;

&lt;p&gt;If you’re doing a side project then its really important to take advantage of what I have always referred to as interstitial time – the time between times.  For example I wrote UrlCommon.is_valid? which validates whether or not the user entered a valid url while watching my son play basketball at an Indianapolis Pacers Junior training thing.  Doubt me?  Here’s the YouTube video!&lt;/p&gt;

&lt;p&gt;Any modern laptop should be small enough and light enough to go with you always.  I have a go bag with everything I need to code successfully whether in the car while waiting for the kid to come home from the bus, taking my wife to the store, etc.  Every minute counts.&lt;/p&gt;

&lt;h1 id=&quot;minimize-costs-ruthlessly&quot;&gt;Minimize Costs Ruthlessly&lt;/h1&gt;

&lt;p&gt;Like a lot of us, when we work for a funded startup, I use all kind of services.  For a side project, &lt;strong&gt;Nope&lt;/strong&gt;!  Every dollar counts so the only “service” I use is my $7 / month paid github account.  Not airbrake / hoptoad / dockerhub / etc.&lt;/p&gt;

&lt;h1 id=&quot;take-a-paper-notebook-everywhere&quot;&gt;Take a Paper Notebook Everywhere&lt;/h1&gt;

&lt;p&gt;The best tool I’ve had in developing this has been this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/spidey_notebook.png&quot; alt=&quot;spidey_notebook.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Paper and pen is a superior thinking tool than just about anything else.  This notebook has gone everywhere with me and the pages are filled with scrawls about features, marketing, naming, architecture diagrams, plans how to minimize cloud hosting costs, etc.  It is small enough that it fits into the pockets on most of the cargo shorts I wear everywhere (yes, even in March as I write this, I’m still in shorts).&lt;/p&gt;

&lt;p&gt;If you don’t write it down, at some point, you’re going to forget it.  Don’t make that mistake.&lt;/p&gt;

&lt;h1 id=&quot;recognize-your-own-failings&quot;&gt;Recognize Your Own Failings&lt;/h1&gt;

&lt;p&gt;Like most people I have serious failings.  From a technical perspective I tend to not treat data validity as a significant enough issue.  From a business perspective I pay more attention to the product than the revenues and the costs.  Neither of these is acceptable and I strongly believe that a side project should make you better at what you do so use your side project as a way of addressing your own failings.  Here’s an example of one of the first bits of Hyde that I implemented – I call it Revenues &amp;amp; Costs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/hyde_revenues_and_costs.png&quot; alt=&quot;hyde_revenues_and_costs.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yep - I wrote an accounting dashboard.  Why?  Well I’m going to pay a lot more attention to revenues and costs if I like / understand the tool which tracks them.&lt;/p&gt;

&lt;h1 id=&quot;recognize-that-writing-content-is-part-of-it&quot;&gt;Recognize that Writing Content is Part of It&lt;/h1&gt;

&lt;p&gt;There have been days where I did nothing but write the contact page and the about page.  And about 20 other pages that aren’t yet visible (sorry; the cat isn’t fully out of the bag yet).  Any side project isn’t just the code – its &lt;strong&gt;everything&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;give-something-back&quot;&gt;Give Something Back&lt;/h1&gt;

&lt;p&gt;At this stage Hyde is a non revenue producing side project with only a free MVP released.  But, even so, I’ve already released something as &lt;a href=&quot;http://github.com/fuzzygroup/sync-dot-rake&quot;&gt;open source&lt;/a&gt;.  I could talk about karma, how we’re all reliant on open source and should morally give somethign back or some other drivel.  Here’s a simple fact - giving stuff back gets you attention.  Getting attention to a side project is hard and giving something back is easy.  Think of giving something back as &lt;strong&gt;marketing&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;recognize-when-youre-in-the-weeds&quot;&gt;Recognize When You’re in the Weeds&lt;/h1&gt;

&lt;p&gt;I cook quite a bit and one term I’ve adopted from the professional cooking world is “being in the weeds”.  This refers to when you’re swamped with orders and can’t see the forest for the trees.  This is all too common in technology.  A few weeks ago I had the brilliant idea – write my own Rails generators to create some specific types of classes that I use a lot.  Well, an hour later, I was &lt;strong&gt;nowhere&lt;/strong&gt;.  I’ve even done this before but Rails 5 has changed things and I was just plain stuck.  I made the realization that either my only goal for today was going to be “make some progress on a generator” or I should &lt;strong&gt;stop cold&lt;/strong&gt; and go back to features.&lt;/p&gt;

&lt;h1 id=&quot;treat-it-professionally&quot;&gt;Treat it Professionally&lt;/h1&gt;

&lt;p&gt;I have a side project which has only barely launched.  A month and five days into it there were 122 issues in Github and 3 milestones.  Just because its a side project doesn’t mean that you don’t track bugs, do project planning, etc.&lt;/p&gt;

&lt;h1 id=&quot;dont-stress-about-domain-name-product-name-marketing&quot;&gt;Don’t Stress About Domain Name, Product Name, Marketing&lt;/h1&gt;

&lt;p&gt;Here’s the sad truth about side projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Most don’t amount to anything&lt;/li&gt;
  &lt;li&gt;Most never get finished&lt;/li&gt;
  &lt;li&gt;Few even get launched&lt;/li&gt;
  &lt;li&gt;Of the few that get launched, even fewer actually ever produce a dime in revenue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So why, oh dear lord, why are you even worrying about domain name, product name, marketing, etc.  &lt;strong&gt;JUST WRITE CODE !&lt;/strong&gt;  If you write code then maybe you’ll be lucky enough to get to this stage.  Domain names can be changed, product names can be changed, marketing can be figured out.  If you want to product yourself from the impact of a name change then store the product name in an internal constant and always reference it from the contant.  Hell I have a whole file of marketing related constants since I &lt;strong&gt;hate&lt;/strong&gt; rewriting stuff.&lt;/p&gt;

</description>
        <pubDate>Thu, 02 Feb 2017 06:19:38 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/site_project/2017/02/02/how-to-succeed-at-a-site-project.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/site_project/2017/02/02/how-to-succeed-at-a-site-project.html</guid>
        
        <category>side_project</category>
        
        <category>startup</category>
        
        
        <category>site_project</category>
        
      </item>
    
      <item>
        <title>Linux Tip of the Day rvm --default</title>
        <description>&lt;p&gt;I normally don’t intersect Ruby and Linux Tip of the Day but I just used this and it is really, really useful. The rvm or Ruby Version Manager tool manages your installed rubies makes ruby development, well, just plain easier.&lt;/p&gt;

&lt;p&gt;To install rvm on Linux, use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
sudo \curl -sSL https://get.rvm.io | bash -s stable --ruby
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To install on OSX, you can use the commands above but generally omit the sudo (depending on your system).&lt;/p&gt;

&lt;p&gt;A real problem with RVM is you often don’t know what Ruby you’re going to get when you start a new terminal window.  You can solve this with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rvm --default use 2.3.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can find your available rubies with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rvm list rubies
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then use one of the installed rubies as the argument to rvm –default use.&lt;/p&gt;

</description>
        <pubDate>Thu, 02 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/linux/2017/02/02/linux-tip-of-the-day-rvm-default.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/linux/2017/02/02/linux-tip-of-the-day-rvm-default.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>linux</category>
        
        <category>rvm</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Gitlab and The Danger of Short Names</title>
        <description>&lt;p&gt;So the other day we had the gitlab disaster.  As my friend Nick described it to me via chat:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;did you hear about gitlab?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;an ops guy did rm -rf on a production db with 300GB of data by accident, and they lost 295GB of data – luckily it was only on a backup, but they are expecting 6h of data loss for production data &lt;a href=&quot;http://nickjanetakis.com&quot;&gt;Nick&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or as Robin might say in a grim and gritty version: &lt;strong&gt;Holy F’ing Hell Batman!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apparently they were using short names like db1.foo.com and db2.foo.com.  Nick’s comment on Hacker News was to the effect of their &lt;a href=&quot;https://news.ycombinator.com/item?id=13539876&quot;&gt;naming structure was wrong&lt;/a&gt; and that a name like dbproduction might have saved the day.&lt;/p&gt;

&lt;p&gt;Perhaps but I’ve seen a lot of this kind of stuff over the years.  Happily I’ve only ever had one such incident - I actually dropped a table once during a group pairing session with &lt;a href=&quot;http://dasari.com&quot;&gt;Dv&lt;/a&gt; and &lt;a href=&quot;http://www.alloycode.com/&quot;&gt;Jared&lt;/a&gt; due to getting confused between production and development.&lt;/p&gt;

&lt;p&gt;The thing that I’ve wanted most of all to address this is &lt;strong&gt;color&lt;/strong&gt;.  If you look at the structure of the brain we have an inordinate amount of our cortex devoted to visual processing – why not approach that to preventing stupid terminal mistakes?  What I’ve wanted for years upon years is really simple - I want my terminal window to change color when I log into a remote server.  If its a staging server or a back up server give me a light gray background.  If its a production web or api server then give me a green background and if its a production database server then give me a BRIGHT RED BACKGROUND.&lt;/p&gt;

&lt;p&gt;The iTerm2 badging feature can do a bit of this but its not in your face enough to really protect you.  I suspect that with sufficient console trickery this is possible but neither I or Dv ever managed to accomplish it.  Personally I think its important enough that I’d name it the GitLab feature and built it into iTerm but that’s not my core skill set.  Still I’m putting it out there.  Thoughts?&lt;/p&gt;

&lt;p&gt;Cross Links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1GCK53YDcBWQveod9kfzW-VCxIABGiryG7_z_6jHdVik/pub&quot;&gt;Official Incident Report&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13537052&quot;&gt;Hacker News Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 02 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/sysadmin/2017/02/02/gitlab-and-the-danger-of-short-names.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/sysadmin/2017/02/02/gitlab-and-the-danger-of-short-names.html</guid>
        
        <category>sysadmin</category>
        
        <category>devops</category>
        
        <category>gitlab</category>
        
        <category>iterm</category>
        
        
        <category>sysadmin</category>
        
      </item>
    
      <item>
        <title>Hyde Thanks Yous Day 05</title>
        <description>&lt;p&gt;Font Awesome&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Feb 2017 21:38:39 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/01/hyde-thanks-yous-day-05.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/01/hyde-thanks-yous-day-05.html</guid>
        
        
      </item>
    
      <item>
        <title>Hyde Thanks Yous Day 04</title>
        <description>&lt;p&gt;BootStrap&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Feb 2017 21:33:25 -0500</pubDate>
        <link>http://fuzzyblog.io//blog/2017/02/01/hyde-thanks-yous-day-04.html</link>
        <guid isPermaLink="true">http://fuzzyblog.io//blog/2017/02/01/hyde-thanks-yous-day-04.html</guid>
        
        
      </item>
    
  </channel>
</rss>
