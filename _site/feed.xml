<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FuzzyBlog</title>
    <description>Scott Johnson writing about the usual array of nerd stuff: AWS / Ansible / Ruby / Rails / Elixir / Misc.
</description>
    <link>https://fuzzygroup.github.io/blog/</link>
    <atom:link href="https://fuzzygroup.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 30 Oct 2016 19:54:33 -0400</pubDate>
    <lastBuildDate>Sun, 30 Oct 2016 19:54:33 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>The Coming Post Mac World</title>
        <description>&lt;p&gt;Given my recent tweet about my absolute dissatisfaction with Apple’s new MacBook Pros, specifically the fact that storage and memory are on part with my &lt;strong&gt;Mid 2012 MacBook Pro&lt;/strong&gt;, its time to consider options.  I’m partially down the road of a Hackintosh although my build got stalled out and I have a pile of non working pieces waiting for me to get back to them.&lt;/p&gt;

&lt;p&gt;Here’s what I’m looking for in a configuration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;64 gigs of ram&lt;/li&gt;
  &lt;li&gt;minimum of 1 TB ssd&lt;/li&gt;
  &lt;li&gt;traditional USB; USB 3 sounds great but the issues have me concerned&lt;/li&gt;
  &lt;li&gt;ethernet&lt;/li&gt;
  &lt;li&gt;able to drive a Dell Ultra Wide Screen Display&lt;/li&gt;
  &lt;li&gt;wifi&lt;/li&gt;
  &lt;li&gt;fanless; I’m so absolutely tired of my MacBook Air sounding like a small propeller every time Safari fires up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oddly this doesn’t have to be a laptop.  DropBox is so bloody good that I can have a lesser box for when I travel since sync is now a non issue.  As long as all my files are present, I’m far more machine independent than I used to be.  If I pull my development into Docker that would very much isolate me from cross machine differences – at least theoretically&lt;/p&gt;

&lt;p&gt;I find the &lt;a href=&quot;http://www.intel.com/content/www/us/en/nuc/nuc-kit-nuc6i7kyk-features-configurations.html&quot;&gt;Intel Skull Canyon NUC&lt;/a&gt; interestingly compelling and I really have no idea why.&lt;/p&gt;

&lt;p&gt;In terms of the OS I suspect its either a Hackintosh version of Capitan or Elementary OS.  I’m wondering seriously about moving to Linux for development and OSX just for things I can’t readily move over like photos / media.&lt;/p&gt;

&lt;p&gt;I’ve started tracking links on the post mac world on my &lt;a href=&quot;https://pinboard.in/u:fuzzygroup/t:postmac/&quot;&gt;Pinboard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is utter madness – if you had told me even 2 years ago that Apple would release new Macbook Pros and I would be thinking about leaving the platform in disgust, I wouldn’t have believed it.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/post_mac/2016/10/30/the-coming-post-mac-world.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/post_mac/2016/10/30/the-coming-post-mac-world.html</guid>
        
        <category>osx</category>
        
        <category>post_mac</category>
        
        
        <category>post_mac</category>
        
      </item>
    
      <item>
        <title>Startup Learnings - I Do All My Coding Before Anyone Gets to Work or What Ed Fisher Taught Me</title>
        <description>&lt;p&gt;Once upon a time, ages and ages ago, I worked for a company called Dataware Technologies.  Dataware had bought my first company, NTERGAID, relocated me to Cambridge, MA and I went from being president of a teeny, tiny, 9 person software company in Milford, CT to a member of a 435 person global, publicly traded company.  Dataware wanted only myself and my co-founder so I lost my whole team in the process.  Needless to say this was not an easy or pleasant transition.  And I made about every mistake that a fish out of water could make.  At least one of those mistakes, the one that would ultimately doom me at Dataware, I made on my &lt;strong&gt;very first day&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But Dataware was a profound and wonderful experience for me.  The folks I met there were the first real professional colleagues I ever had (note - when you’re responsible for people’s salary, they’re not colleagues, they are staff).  Invariably whenever I whip out one of my “back in the day” stories, it is about Dataware or Dataware folk.&lt;/p&gt;

&lt;p&gt;Now when I was working for Dataware, I was a product manager more than an engineer.  And for the first six months, I was a product manager without a product to build (that’s another story; we got acquired, showed up and on the first day we were told “we canceled what we wanted you to build for us”; different story, this one is about Ed).  As a product manager without a product, I pitched in on what we internally called Project Pegasus.  Project Pegasus was an attempt to repackage a software product that we had acquired called BRS-Search into a more modern, more usable Windows NT product.  Our CEO had promised Wall Street that we’d ship new, modern product by year end and all hands were on deck for that effort.  I became an adjunct product manager helping out Pete Jenney, the Pegasus Product Manager, and my co-founder from NTERGAID got dropped onto the main Project Pegasus code base.&lt;/p&gt;

&lt;p&gt;By way of background, Dataware was a company that sold software and services for CD-ROM production and when I joined they were about 40 odd million in gross revenue with offices all around the world and headquarters in Cambridge, MA.  Now any technology company that makes it make &lt;em&gt;always&lt;/em&gt;, &lt;strong&gt;always&lt;/strong&gt; has a core of brilliant technical staff.  These are those fabled “10x” or “100x” engineers who are just that more productive than anyone else you’ve ever met. If you’ve ever heard of Google’s Jeff Dean, that’s the kind of engineer I’m talking about.  And while most technology companies are lucky to have 1 of those, Dataware had several.  One of our best was Ed Fisher.&lt;/p&gt;

&lt;p&gt;I’ve always been an early riser and I’d find myself at the office at 6 am and there Ed would be.  So I’d wander into his office and he would often remark that he did “all my real work was done before anyone got to the office; after that I do email”.  Now you hear a statement like that and you often dismiss it out of hand.  You think it can’t possibly be true.  But I’d watch Ed after people poured into the Dataware offices, here is what he’d do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;email&lt;/li&gt;
  &lt;li&gt;meetings&lt;/li&gt;
  &lt;li&gt;drink diet coke&lt;/li&gt;
  &lt;li&gt;more meetings in which he’d invariably prevent stupid decisions&lt;/li&gt;
  &lt;li&gt;an occasional code review&lt;/li&gt;
  &lt;li&gt;help other engineers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ed was the lead engineer on the overall Project Pegasus which was an integrated electronic publishing system which took content in from arbitrary sources, stored it in an internal repository, indexed it for full text search and then could output whether to CD-ROM, LAN or the web.  The overall project was about 3.5 million lines of C and most of it was OLD C.  Periodically you’d find cryptic source code comments about the Vietnam war, 60s music, etc and i and j variables were not always integers / counters.  So, as you could imagine, Ed had his hands full.  To make matters worse this was code from an acquisition so rather than being the code base that Dataware itself had built, this was all built on the BRS code base.  And in addition to being the lead, Ed had has own piece of it which he owned which was effectively the DOM and nokogiri like mechanism for walking it.  Yep.  Years before you heard of the DOM and JavaScript, people were building things like that internally.&lt;/p&gt;

&lt;p&gt;So, back to the core of this blog post, getting your job done &lt;strong&gt;before&lt;/strong&gt; anyone comes into work.  For six months I would watch Ed in the early mornings and then I’d rarely see him touch code from 9 am until 4 or 5 pm.  And everyday the project continued to move forward and the code metrics on Ed’s own stuff would get grow and the tickets would get closed like clockwork.  Finally I talked to Ed.  I was a bit concerned that he was burning the candle at both ends too much.  His answer was no; I’d arrive at 6 and his Saturn would show up in the Dataware parking lot just a few minutes before mine. This put him squarely in the 10 to 12 hours per day club.  And that’s a lot but its not at all uncommon for high tech folk.  Ed’s explanation to me was simple – you can be ridiculously fast and productive if:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;you are left &lt;strong&gt;alone&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;you have a &lt;strong&gt;purpose&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;you &lt;strong&gt;understand&lt;/strong&gt; the problem&lt;/li&gt;
  &lt;li&gt;you aren’t &lt;strong&gt;distracted&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;you are solving &lt;strong&gt;one&lt;/strong&gt; thing at a time&lt;/li&gt;
  &lt;li&gt;you &lt;strong&gt;focus&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these things were only true when there was no one in the office.  Sure Pete and I were around but we knew not to bother him except to take him for breakfast when he was at a stopping point / needed some time off.  Now if you’re a software engineer and you think about your day, how much of it is actually writing code?  A lot of your time, as it always does, goes to the things &lt;strong&gt;around coding&lt;/strong&gt; instead of actually &lt;strong&gt;writing code&lt;/strong&gt;.  Code reviews, prioritization, email, slack, etc.&lt;/p&gt;

&lt;p&gt;More than anything else what Ed taught me was the power of &lt;strong&gt;focus&lt;/strong&gt;.  When you clear your metaphorical desk and actually concentrate you can get a tremendous amount done – far more than you would expect.  It took me years before I really understood this.  For a long time I was a devoted multitasker thinking that I could juggle far more than I actually could.  Now I focus with razor precision on what’s actually important and I get far more done.&lt;/p&gt;

&lt;p&gt;What led to my telling you this story is I woke this morning at 2:55 am and I was in my home office by 3:15.  I took yesterday’s code, which was a single class which indexed all metadata we care about from the iOS App Store and the Google Play App Store and I realized that it was a maintenance suck fest and I completely refactored it, cutting its size down by 1/3 and making it easier to maintain and vastly simpler.  Then I wrote two rake tasks which will update all the metadata and generate success / fail metrics.  Oh and I fixed 3 bugs reported by other people on the team.  And that was about two hours of work.  And you know what – &lt;strong&gt;Ed was right&lt;/strong&gt; – I did a “full days” worth of work before anyone else arrived.  Now was it 8 hours of work?  Clearly not but was it the economic value of 8 hours of work?  I think so.  This is a key bit of our system and a particularly problematic bit of code that might be significantly more trouble free than it has been in the past half decade.&lt;/p&gt;

&lt;p&gt;Thanks Ed.  I wish you well my friend.&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/10/29/startup-learnings-i-do-all-my-coding-before-anyone-gets-to-work-or-what-ed-fisher-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/10/29/startup-learnings-i-do-all-my-coding-before-anyone-gets-to-work-or-what-ed-fisher-taught-me.html</guid>
        
        <category>startup</category>
        
        <category>software_engineering</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>Understanding SAML and SSO and Rails</title>
        <description>&lt;p&gt;When you grew up as a developer prior to the Internet, it used to be that technical information was hard to come by.  From my perspective one fo the most miraculous things about being a developer in 2016 is all you have to do is run across a reference to a technology and &lt;strong&gt;wham&lt;/strong&gt; all the information that you want is at your finger tips.  So let’s say you’re browsing &lt;a href=&quot;http://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt; and you find a reference to &lt;a href=&quot;https://hn.algolia.com/?query=saml&amp;amp;sort=byPopularity&amp;amp;prefix&amp;amp;page=0&amp;amp;dateRange=all&amp;amp;type=story&quot;&gt;SAML&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Security_Assertion_Markup_Language&quot;&gt;Security Assertion Markup Language&lt;/a&gt;, you’re just a search away from a deep dive into a topic.  And if you either find yourself interested in it or you have a personal reason to explore it like a wife who’s favorite anti technology rant is about passwords (SAML is key to Single Sign On or SSO standards), then you’re just a github away from messing with a cool technology.  That’s why I’m writing today about SAML instead of my normal AWS / Ruby / Rails stuff.  But, not to worry, I’ll bring it around to Ruby / Rails by the end.&lt;/p&gt;

&lt;h1 id=&quot;what-is-saml-&quot;&gt;What is SAML ?&lt;/h1&gt;

&lt;p&gt;SAML is a standard for security, specifically, for building single sign on systems.  Originated in 2002,&lt;/p&gt;

&lt;h1 id=&quot;core-saml-concepts&quot;&gt;Core SAML Concepts&lt;/h1&gt;

&lt;p&gt;Like almost all modern security concepts, SAML is oriented around roles.  There are three key roles: Principal, Identity Provider, Service Provider.&lt;/p&gt;

&lt;h2 id=&quot;role-1-the-principal&quot;&gt;Role 1: The Principal&lt;/h2&gt;

&lt;p&gt;The principal is very, very simple – it is just the user.&lt;/p&gt;

&lt;h2 id=&quot;role-2-the-identity-provider-or-idp&quot;&gt;Role 2: The Identity Provider or IdP&lt;/h2&gt;

&lt;p&gt;The Identity Provider or IdP is the software against which the authentication request is performed.&lt;/p&gt;

&lt;h2 id=&quot;role-3-the-service-provider-or-sp&quot;&gt;Role 3: The Service Provider or SP&lt;/h2&gt;

&lt;p&gt;The service provider is the software which talks to the IdP that requests and obtains an identity assertion i.e. the SAML Assertion described below.&lt;/p&gt;

&lt;h2 id=&quot;bringing-the-roles-together&quot;&gt;Bringing the Roles Together&lt;/h2&gt;

&lt;p&gt;This works as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A &lt;strong&gt;principal&lt;/strong&gt; goes to a site somewhere on the Internet or an Intranet and wants access to a protected a resource.  This site is the &lt;strong&gt;SP&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;A mechanism of authentication is used – typically this would be username / password but it could be multi-factor auth&lt;/li&gt;
  &lt;li&gt;The SP requests and obtains an identity assertion from the identity provider or &lt;strong&gt;IdP&lt;/strong&gt;. On the basis of this assertion, the service provider can make an access control decision – in other words it can decide whether to perform some service for the connected principal.  Before delivering the identity assertion to the SP, the IdP may request some information from the principal – such as a user name and password – in order to authenticate the principal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two sentences in the last bullet were cribbed directly from the Wikipedia article above&lt;/p&gt;

&lt;h2 id=&quot;the-saml-assertion&quot;&gt;The SAML Assertion&lt;/h2&gt;

&lt;p&gt;A SAML assertion is a bit of XML containing a packet of security information.  The general format looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;saml:Assertion ...&amp;gt;
  ...
&amp;lt;/saml:Assertion&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m going to cheat here and blatantly cheat and quote wikipedia in case a subtle rewording of my writing interferes with the meaning:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Loosely speaking, a relying party interprets an assertion as follows:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Assertion A was issued at time t by issuer R regarding subject S provided conditions C are valid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;SAML assertions are usually transferred from identity providers to service providers. Assertions contain statements that service providers use to make access-control decisions. Three types of statements are provided by SAML:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Authentication statements
Attribute statements
Authorization decision statements
Authentication statements assert to the service provider that the principal did indeed authenticate with the identity provider at a particular time using a particular method of authentication. Other information about the authenticated principal (called the authentication context) may be disclosed in an authentication statement.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;An attribute statement asserts that a subject is associated with certain attributes. An attribute is simply a name-value pair. Relying parties use attributes to make access-control decisions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;An authorization decision statement asserts that a subject is permitted to perform action A on resource R given evidence E. The expressiveness of authorization decision statements in SAML is intentionally limited. More-advanced use cases are encouraged to use XACML instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;caveats&quot;&gt;Caveats&lt;/h1&gt;

&lt;p&gt;SAML is an old school, big system type of technology.  Its supported although not widely and there seem to be differing opinions as to how to support it and interoperate correctly, in other words it is just like every other technology standard out there.&lt;/p&gt;

&lt;h1 id=&quot;how-does-this-work-with-rails&quot;&gt;How Does This Work with Rails?&lt;/h1&gt;

&lt;p&gt;Now let’s pull this all around and talk about how you might use SAML in the context of a functioning rails app.  There are two basic approaches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your rails app as a SAML client to something else (i.e. your rails app is the service provider or SP)&lt;/li&gt;
  &lt;li&gt;Your rails app as the Identity Provider or IdP and other applications talk to you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happily there are existing open source toolkits for both of these contexts.&lt;/p&gt;

&lt;h2 id=&quot;rails-as-an-sp&quot;&gt;Rails as an SP&lt;/h2&gt;

&lt;p&gt;If you want to authenticate thru something else then you likely want that built into your existing Rails authentication strategy.  There are toolkits for this as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/omniauth/omniauth-saml&quot;&gt;OmniAuth - SAML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apokalipto/devise_saml_authenticatable&quot;&gt;Devise Saml Authenticatable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/onelogin/ruby-saml&quot;&gt;Ruby-SAML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two are tied to existing authentication tools in the Rails world and the last one is a generic SAML toolkit on top of which most things in the Ruby SAML world seem to be built.&lt;/p&gt;

&lt;h2 id=&quot;rails-as-an-idp&quot;&gt;Rails as an IdP&lt;/h2&gt;

&lt;p&gt;While an IdP might be an LDAP system or another traditional authentication engine, there’s no reason a Rails app itself can’t speak SAML natively and be an IdP of its own.  In this case the toolkit you likely want to use is one of these two:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sportngin/saml_idp&quot;&gt;https://github.com/sportngin/saml_idp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lawrencepit/ruby-saml-idp&quot;&gt;https://github.com/lawrencepit/ruby-saml-idp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The lawrencepit gem is older and the sportngin gem appears to be a newer fork.  Unfortunately it seems as if the documentation on the sportngin gem is incorrect and you may need lawrencepit’s documentation.  I’m still bringing up a functional IDP so I can’t say definitively but there’s a definite code smell of incorrectly made documentation in sportngin.  It should be noted though that sportngin has done a lot of work to make bringing up an IdP server better.  I’ll hopefully update this blog post in the future when I have more concrete answers.&lt;/p&gt;

&lt;h1 id=&quot;understanding-how-to-build-an-idp-with-rails-and-rubyidp&quot;&gt;Understanding How to Build an IdP with Rails and ruby_idp&lt;/h1&gt;

&lt;p&gt;I took a stab at building a SAML system using ruby_idp and as part of that effort, I wrote the wiki page for &lt;a href=&quot;https://github.com/sportngin/saml_idp/wiki&quot;&gt;saml_idp&lt;/a&gt;.  Honestly explaining things is the best way I’ve ever found to understand them so this is my give back to the community and my thanks to the author of saml_idp.&lt;/p&gt;

&lt;h1 id=&quot;general-advice&quot;&gt;General Advice&lt;/h1&gt;

&lt;p&gt;Unfortunately the documentation for all of these tools is, to put it mildly, on the sparse to incorrect side (example - using the sportngin gem, you can’t include the controller per the docs, you have to inherit from it instead).  If you’re going to do a SAML project based on any of these, you’re going to need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read the standards documentation&lt;/li&gt;
  &lt;li&gt;Read the gem source – and I mean really read it&lt;/li&gt;
  &lt;li&gt;Dig in and get your fingers dirty; don’t be afraid to fork the gem&lt;/li&gt;
  &lt;li&gt;Read the pull requests&lt;/li&gt;
  &lt;li&gt;Read the open github issues; even unsolved issues make spark your thinking&lt;/li&gt;
  &lt;li&gt;Read the closed github issues&lt;/li&gt;
  &lt;li&gt;Read the tests; on projects like these, the tests more than anything else help you understand what parameters to use&lt;/li&gt;
  &lt;li&gt;Look at the forks to see if there is anything newer that might help you&lt;/li&gt;
  &lt;li&gt;If you’re going down the IdP route you will really need to implement a saml client as well; this isn’t surprising when you think about it&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 28 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/saml/2016/10/28/understanding-saml-and-sso.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/saml/2016/10/28/understanding-saml-and-sso.html</guid>
        
        <category>sso</category>
        
        <category>saml</category>
        
        <category>rails</category>
        
        <category>ruby</category>
        
        
        <category>saml</category>
        
      </item>
    
      <item>
        <title>Rails Tip How to Fix Incomplete response received from application</title>
        <description>&lt;p&gt;Again, one of my least favorite things in the entire rails ecosystem is deployment.  Deployment was ass painful in 2007 when I started with Rails and it is still ass painful.  Sigh.  Even as much as I love passenger, it is a fickle beast at best and you always end up with arcane error messages that you haven’t solved in six months or so so you never quite have the answer.&lt;/p&gt;

&lt;p&gt;When you hit the error message:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Incomplete response received from application
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The usual answer is that you’re missing the secret from:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/secrets.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You want to solve this with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec rake secret
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then copy the result and define a secret for the correct environment or load it from the environment variable.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/29241053/incomplete-response-received-from-application-from-nginx-passenger&quot;&gt;Obligatory Stack Overflow Reference on this&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/10/26/rails-tip-how-to-fix-incomplete-response-received-from-application.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/10/26/rails-tip-how-to-fix-incomplete-response-received-from-application.html</guid>
        
        <category>rails</category>
        
        <category>apache</category>
        
        <category>passenger</category>
        
        <category>bundler</category>
        
        <category>capistrano</category>
        
        <category>deploy</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Tip How to Fix Could not find a JavaScript runtime</title>
        <description>&lt;p&gt;One of my least favorite things in the entire rails ecosystem is deployment.  Deployment was ass painful in 2007 when I started with Rails and it is still ass painful.  Sigh.  Capistrano is worlds better than it used to be but its still tricky.  And you always end up with arcane error messages that you haven’t solved in six months or so so you never quite have the answer.&lt;/p&gt;

&lt;p&gt;When you hit the error message:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Could not find a JavaScript runtime
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The right thing to do is to first bitch out loud about the mind boggling stupidity that you can’t run db:migrate w/o a JS runtime.  After you’ve done that 3 or 20 times then the solution is to just install nodejs on every one of your production boxes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This sucks hard but it does work.  Another solution is to use a native ruby tool like therubyracer but I have projects where therubyracer cannot be installed – it just gives “gem not found” errors no matter what I do so cie la vie.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/10/26/rails-tip-how-to-fix-could-not-find-a-javascript-runtime.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/10/26/rails-tip-how-to-fix-could-not-find-a-javascript-runtime.html</guid>
        
        <category>rails</category>
        
        <category>javascript</category>
        
        <category>therubyracer</category>
        
        <category>bundler</category>
        
        <category>capistrano</category>
        
        <category>deploy</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Rails Tip How to Fix Cannot/Load Bundler/setup</title>
        <description>&lt;p&gt;One of my least favorite things in the entire rails ecosystem is deployment.  Deployment was ass painful in 2007 when I started with Rails and it is still ass painful.  Sigh.  Even as much as I love passenger, it is a fickle beast at best and you always end up with arcane error messages that you haven’t solved in six months or so so you never quite have the answer.&lt;/p&gt;

&lt;p&gt;When you hit the error message:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cannot load such file -- bundler/setup (LoadError)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The usual answer is to run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install bundler
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;in the Rails root application.  Unfortunately this can’t generally be done until the source code of your application is installed making it hard to ansible-ize.  Alas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19061774/cannot-load-such-file-bundler-setup-loaderror&quot;&gt;Obligatory Stack Overflow Reference on this&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/rails/2016/10/26/rails-tip-how-to-fix-cannot-load-bundler-setup.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/rails/2016/10/26/rails-tip-how-to-fix-cannot-load-bundler-setup.html</guid>
        
        <category>rails</category>
        
        <category>apache</category>
        
        <category>passenger</category>
        
        <category>bundler</category>
        
        <category>capistrano</category>
        
        <category>deploy</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Consulting - The Answer Is Yes</title>
        <description>&lt;p&gt;This happened a year or two ago but the memory just descended on me in a flash of blinding deja vu that was so powerful it was frightening.  If you’re a consultant and a customer calls you with a problem, there’s only one answer:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I remember this vividly.  I was in the final stages of a project – I had just assembled the staging server and I was looking forward to the end of the night and sleep, blessed sleep.  I heard from the customer who was clearly panicked.  His vendor was holding him up on a data migration issue and was charging an arm and a leg and then three more body parts for something simple – $25K for migrating 60 users from staging to production.  I’m not going to say the vendor since they’re long gone.  I would point out that the charge for the migration was more than my whole software development bill to that point.&lt;/p&gt;

&lt;p&gt;So my answer to the question of could I handle the data migration – &lt;strong&gt;Yes&lt;/strong&gt;.  When I said it, I didn’t know anything about the data I was migrating.  I didn’t have a schema, properties, etc.  What I did know was that $25K for doing data migration was absurd and, as a consultant, I’m there to help the client.  Always remember that – you’re there to help the client.  So even though I didn’t want more work, I’ll still do it and, ultimately, the client will remember who helped them out in a point of crisis.&lt;/p&gt;

&lt;p&gt;Bottom line – if you’re a consultant, the answer is &lt;strong&gt;yes&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/consulting/2016/10/24/consulting-the-answer-is-yes.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/consulting/2016/10/24/consulting-the-answer-is-yes.html</guid>
        
        <category>consulting</category>
        
        <category>business</category>
        
        
        <category>Consulting</category>
        
      </item>
    
      <item>
        <title>Startup Learnings What Francois Schiettecatte Taught Me</title>
        <description>&lt;p&gt;Its been more than a few weeks since I’ve written anything categorized as startup so I guess its time for one of these.  In the Spring of 2003, I was happily running Feedster. We were maybe a few months old – and I saw we but it was really just me – and an email showed up over the transom that read something like this: “I found your contact info thru a DNS lookup.  My name is &lt;a href=&quot;https://fschiettecatte.wordpress.com&quot;&gt;Francois Schiettecatte&lt;/a&gt; and I have a small search engine called rss-search and I’m just 15 miles from you, perhaps we should have lunch”.  At lunch our personalities basically clicked and and a few weeks later, Francois and I were partners.  We felt:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;that we were stronger together than we were apart&lt;/li&gt;
  &lt;li&gt;Feedster was a substantially stronger brand than rss-search&lt;/li&gt;
  &lt;li&gt;our technological strengths complemented each other; Francois was strong on the core search engine and I had a better approach towards data management and structuring of everything&lt;/li&gt;
  &lt;li&gt;it feel too serendipitous – two people of entirely different backgrounds ending up 15 miles from each other doing the exact same thing at the exact same time.  Talk about signals from the universe…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Anyway Francois and I then built Feedster together from that point forward.  I became the external face of the company while he focused on the search engine core that he had brought to the table.  We hired &lt;a href=&quot;https://fuzzygroup.github.io/blog/startup/2016/09/02/what-scott-rafer-taught-me.html&quot;&gt;Scott Rafer&lt;/a&gt; together.  And while it was, at times fractious, that’s normal for startup life.  He was a strong technical co-founder and I never regretted it.&lt;/p&gt;

&lt;p&gt;When I first met Francois at his condo in Salem, Mass, I saw his workspace and it was glorious – dual samsung flat screen monitors, a long workspace and an &lt;a href=&quot;http://www.hermanmiller.com/about-us/press/press-releases/all/herman-miller-launches-new-aeron-chair.html&quot;&gt;&lt;strong&gt;Aeron chair&lt;/strong&gt;&lt;/a&gt;.  At that time I was still using the Nth in a long succession of crappy Stables / Office Max chairs.  I had big chairs, small steno chairs, chairs with arms and chairs without.  Each one always cost around $100 and they all, universally &lt;strong&gt;sucked&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;That day Francois taught me a valuable lesson: &lt;strong&gt;It is ok to spend money on yourself; even on something as simple as a chair&lt;/strong&gt;.  When you think about it, my job could easily be described as &lt;em&gt;I sit professionally, 7 days a week&lt;/em&gt;.  I spend more time in an office chair than I do with my kids, my wife or any other place in my house.  Yes that includes sleep – I average maybe 6 hours per night so that’s 42 hours per week – but I work an easy 70 plus hours per week.&lt;/p&gt;

&lt;p&gt;It would be years later before I got an Aeron chair of my very own.  My wife, bless her heart, took me to Carmel Indiana for a Father’s Day surprise and lo and behold she had arranged for me to get an Aeron chair.  I’ve now been sitting in that same chair going on a decade now and it is still fantastic.&lt;/p&gt;

&lt;p&gt;Francois was brilliant at figuring out what to spend money on and doing it well.  I’d like to think that I picked up at least some of that from him.&lt;/p&gt;

</description>
        <pubDate>Fri, 21 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/startup/2016/10/21/startup-learnings-what-francois-schiettecatte-taught-me.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/startup/2016/10/21/startup-learnings-what-francois-schiettecatte-taught-me.html</guid>
        
        <category>startup</category>
        
        
        <category>startup</category>
        
      </item>
    
      <item>
        <title>AWS Tutorial 20 - Adding Machine and Process Monitoring To Your AWS Instances with Inspeqtor</title>
        <description>&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Inspeqtor is an excellent piece of open source software, any errors are mine and mine alone.  This was fully tested by deploying onto a clean EC2 instance and verifying that it functioned correctly end to end.&lt;/p&gt;

&lt;p&gt;One of the aspects of cloud computing versus traditional hosting is that with cloud computing you tend to work with computing resources that, in general, are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;less &lt;strong&gt;powerful&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;less &lt;strong&gt;reliable&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;have less &lt;strong&gt;storage&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally there tend to be &lt;strong&gt;more&lt;/strong&gt; of these resources.  One way to term this might be that traditional data centers are &lt;em&gt;molecular&lt;/em&gt; where as cloud computing is more &lt;em&gt;atomic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In my own experience, I ran a data center for 5 years without having to worry about process monitoring and tools like Monit or Inspeqtor but the very first time I put my AWS data center under heavy load, I found things &lt;a href=&quot;https://fuzzygroup.github.io/blog/tag.html#ssh&quot;&gt;crashing right, left and center&lt;/a&gt;.  All of my problems were magically solved simply by the addition of &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;Monit&lt;/a&gt; to watch dog the sidekiq process and restart it when it gets too large.  And while this solved my sidekiq problem, two nights ago, I ran out of disc space on a key resource – my MariaDB instance.&lt;/p&gt;

&lt;p&gt;One approach would be to continue to use Monit and add rules to it for disc space monitoring but I’ve been intrigued by the &lt;em&gt;simple&lt;/em&gt; configuration that &lt;a href=&quot;http://www.mikeperham.com&quot;&gt;Mike Perham’s&lt;/a&gt; &lt;a href=&quot;https://github.com/mperham/inspeqtor&quot;&gt;Inspeqtor&lt;/a&gt; offers.  Sidekiq has served me well as of late and Mike’s support, even &lt;a href=&quot;https://fuzzygroup.github.io/blog/ruby/2016/10/10/a-conversation-with-mike-perham.html&quot;&gt;the free community support&lt;/a&gt;, he offers is fantastic.  So rather than double down on Monit, I’m going to branch out and use Inspeqtor.&lt;/p&gt;

&lt;h1 id=&quot;goals&quot;&gt;Goals&lt;/h1&gt;

&lt;p&gt;We want to use Inspeqtor as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;be configured on all boxes by ansible so we never have to do anything manually&lt;/li&gt;
  &lt;li&gt;function on Ubuntu 14.04 with upstart&lt;/li&gt;
  &lt;li&gt;deliver alerts by email (sendmail) that contain the problem and the instance id&lt;/li&gt;
  &lt;li&gt;monitor sidekiq&lt;/li&gt;
  &lt;li&gt;monitor apache&lt;/li&gt;
  &lt;li&gt;monitor disc space&lt;/li&gt;
  &lt;li&gt;monitor ram&lt;/li&gt;
  &lt;li&gt;monitor load&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;inspeqtor-vs-monit&quot;&gt;Inspeqtor vs Monit&lt;/h1&gt;

&lt;p&gt;Monit and Inspeqtor are two very different animals.  Whereas Monit is a general purpose monitoring tool, Inspeqtor is specialized focusing on process that are run thru &lt;a href=&quot;https://github.com/mperham/inspeqtor/wiki/Initd&quot;&gt;init.d / upstart&lt;/a&gt; as well as generalized machine configuration.  So while you can technically do more with Monit, you’ll have a much easier time doing what you generally need with Inspeqtor.&lt;/p&gt;

&lt;h1 id=&quot;configuring-sendmail&quot;&gt;Configuring Sendmail&lt;/h1&gt;

&lt;p&gt;Inspeqtor can work with a number of different email delivery approaches from gmail to a local sendmail instance.  The configuration for Inspeqtor for different email delivery engines looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#
# This is the default alert statement.  This tells Inspeqtor where to
# send alert emails.
#
# Here we'll configure the default to send email alerts via gmail to &quot;dev@example.com&quot;
#
# send alerts via gmail
#   with username mike, password fuzzbucket, to_email dev@example.com

#
# Here's a generic email example, not requiring Google Mail.
# Your SMTP server must accept Authentication/TLS.
#
# send alerts via email with
#   username bob,
#   password &quot;foo bar baz&quot;,
#   smtp_server smtp.example.com,
#   tls_port 587,
#   to_email analytics@example.com,
#   from_email inspeqtor@example.com

#
# Here is another generic email example, not requiring authentication.
# Your local SMTP server must be listening on port 25.
#
send alerts via email with
  smtp_server localhost,
  to_email fuzzygroup@gmail.com,
  from_email inspeqtor@
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’ve got the other approaches commented out just showing the local smtp_server (in my case sendmail).&lt;/p&gt;

&lt;p&gt;Here’s an ansible role to configure sendmail:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ansible_root/roles/sendmail/tasks
touch ansible_root/roles/sendmail/tasks/main.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Edit the file main.yml and add these lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- name: install sendmail 
  apt: name=sendmail state=present
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In your playbook, call this role as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- { role: sendmail, tags: sendmail}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s how to verify if your local sendmail instance is actually running:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;ficrawler1 My test email being sent from sendmail&quot; | /usr/sbin/sendmail fuzzygroup@gmail.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check your inbox for the message.  You may find that you need to check a spam or junk folder since this isn’t a modern mail server using SPIF / DKIM standards.  If the message didn’t arrive then you need to troubleshoot and figure out why.&lt;/p&gt;

&lt;h1 id=&quot;configuring-inspeqtor-with-ansible&quot;&gt;Configuring Inspeqtor with Ansible&lt;/h1&gt;

&lt;p&gt;Inspeqtor relies on several files that determine how it works:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/etc/inspeqtor/inspeqtor.conf – how the overall inspeqtor instance runs and how to notifies&lt;/li&gt;
  &lt;li&gt;/etc/inspeqtor/host.inq – what to monitor about the host itself&lt;/li&gt;
  &lt;li&gt;/etc/inspeqtor/services.d/WHATEVER_YOU_WANT_TO_MONITOR.inq&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples of each of these are given below.&lt;/p&gt;

&lt;h2 id=&quot;here-is-etcinspeqtorinspeqtorconf&quot;&gt;Here is /etc/inspeqtor/inspeqtor.conf&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#
# Welcome to the global Inspeqtor config file!
#

#
# The cycle time is how often Inspeqtor will capture metrics and
# verify rules, in seconds.
#
set cycle_time 15

#
# The deploy length is the maximum length of your application deploys, in
# seconds. If you start a deploy and then never signal its finish, Inspeqtor will
# time out the deploy after this many seconds and start checking rules again.
#
# This is a failsafe.  Normally you will signal Inspeqtor when your
# deploys finish.
#
set deploy_length 300

#
# Set logging level, legal values are:
#   warn
#   info (default)
#   debug (-l debug)
#   verbose (-l verbose)
# At info, inspeqtor will not log anything when everything is ok.
#
set log_level info

# Inspeqtor Pro can send collected metrics to Statsd
# set statsd_location localhost:8125

#
# This is the default alert statement.  This tells Inspeqtor where to
# send alert emails.
#
# Here we'll configure the default to send email alerts via gmail to &quot;dev@example.com&quot;
#
# send alerts via gmail
#   with username mike, password fuzzbucket, to_email dev@example.com

#
# Here's a generic email example, not requiring Google Mail.
# Your SMTP server must accept Authentication/TLS.
#
# send alerts via email with
#   username bob,
#   password &quot;foo bar baz&quot;,
#   smtp_server smtp.example.com,
#   tls_port 587,
#   to_email analytics@example.com,
#   from_email inspeqtor@example.com

#
# Here is another generic email example, not requiring authentication.
# Your local SMTP server must be listening on port 25.
#
send alerts via email with
  smtp_server localhost,
  to_email fuzzygroup@gmail.com,
  from_email inspeqtor@ip-172-31-38-2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;here-is-etcinspeqtorhostinq&quot;&gt;Here is /etc/inspeqtor/host.inq&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;check host
  if load:1 &amp;gt; 1 for 2 cycles then alert
  if load:5 &amp;gt; 1 then alert
  if cpu:user &amp;gt; 95% for 2 cycles then alert
  if swap &amp;gt; 20% for 2 cycles then alert
  if disk:/ &amp;gt; 90% then alert
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;here-is-etcinspeqtorservicesdserviceinqtemplate&quot;&gt;Here is /etc/inspeqtor/services.d/service.inq.template&lt;/h2&gt;

&lt;p&gt;This is a generic starting point template to monitor any service in /etc/init.d&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat  /etc/inspeqtor/services.d/service.inq.template
# NOTE this file should be renamed to &amp;lt;name&amp;gt;.inq where name is explained below.
#
# Inspeqtor is designed to monitor a host and the services running
# on that host. Services must be controlled by your OS's init system:
# upstart, systemd, launchd or runit.
#
# Inspeqtor knows how to monitor services for each major init system,
# as long as you give the exact name of that service.
#
# In systemd:
#   /usr/lib/systemd/system/&amp;lt;name&amp;gt;.service
# In upstart:
#   /etc/init/&amp;lt;name&amp;gt;.conf
# In runit:
#   /etc/service/&amp;lt;name&amp;gt;/run
# In launchd:
#   ~/Library/LaunchAgents/&amp;lt;name&amp;gt;.plist
#
# Supporting traditional init.d is a little trickier, see the
# https://github.com/mperham/inspeqtor/wiki/Initd wiki page
# for more details. tl;dr You need to populate a PID file at
# /var/run/&amp;lt;name&amp;gt;.pid or /var/run/&amp;lt;name&amp;gt;/&amp;lt;name&amp;gt;.pid
#

#
# Here we define the service to monitor. The name of the service
# ('mysql') must match the name that your init system uses.
# You'll want to rename this file to mysql.inq to match.
#
check service mysql

  #
  # if you want to monitor daemon-specific metrics, you'll need
  # to tell Inspeqtor how to connect to the daemon.
  # See https://github.com/mperham/inspeqtor/wiki/Daemon-Specific-Metrics
  #
  #with username root, socket /var/run/mysqld/mysqld.sock

  #
  # Add any normal process metrics you want to verify.
  #
  if memory:rss &amp;gt; 2g then alert

  #
  # Since a cycle defaults to 15 seconds, this rule triggers if
  # there's excessive CPU usage for more than 30 seconds.
  #
  if cpu:user &amp;gt; 90% for 2 cycles then alert

  #
  # Alert if we see too many queries or slow queries. These are
  # examples of Daemon-Specific Metrics.
  #
  #if mysql:Queries &amp;gt; 100/sec for 2 cycles then alert
  #if mysql:Slow_queries &amp;gt; 1/sec for 2 cycles then alert    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For more on writing your own inq files, see the &lt;a href=&quot;https://github.com/mperham/inspeqtor/wiki/INQ-Configuration&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;here-is-my-sample-sidekiqinq-file&quot;&gt;Here is my sample sidekiq.inq file&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;check service sidekiq
  if memory:rss &amp;gt; 6g then alert, restart
  if cpu:user &amp;gt; 95% for 2 cycles then alert
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;configuring-inspeqtor-with-ansible-1&quot;&gt;Configuring Inspeqtor with Ansible&lt;/h2&gt;

&lt;p&gt;Rather than write out a playbook, roles and template files manually, I hosted it on &lt;a href=&quot;https://github.com/fuzzygroup/ansible_inspeqtor&quot;&gt;github&lt;/a&gt;.  Clone it from there and adapt it for your needs.  But, in case you’re curious, here is the overall structure:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tree
.
├── ansible.cfg
├── group_vars
│   └── all
├── inventories
│   └── ficrawler11
├── playbook_inspeqtor.yml
├── playbooks
├── readme.md
└── roles
    ├── inspeqtor
    │   ├── files
    │   │   ├── apache.inq
    │   │   ├── host.inq
    │   │   ├── inspeqtor.conf
    │   │   └── sidekiq.inq
    │   └── tasks
    │       └── main.yml
    ├── sendmail
    │   └── tasks
    │       └── main.yml
    └── setup
        └── tasks
            └── main.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The setup task exists to register an ansible variable that gives the instance-id so it can be used in alerting.  This is handled by calling the &lt;a href=&quot;https://fuzzygroup.github.io/blog/aws/2016/09/07/aws-tutorial-getting-your-instance-id.html&quot;&gt;instance id api&lt;/a&gt; which I covered previously.  While there is an instance_ids method in the &lt;a href=&quot;http://docs.ansible.com/ansible/ec2_module.html&quot;&gt;Ansible EC2 module&lt;/a&gt;, this approach means you don’t have your security keys as its a private API you only call from inside the instance itself.&lt;/p&gt;

&lt;h1 id=&quot;managing-inspeqtor-on-a-daily-basis&quot;&gt;Managing Inspeqtor on a Daily Basis&lt;/h1&gt;

&lt;p&gt;With almost any Unix tool you need to know how to do at least two things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start / stop&lt;/li&gt;
  &lt;li&gt;view logs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Start / Stop on Ubuntu is handled with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service inspeqtor restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Logs can be viewed with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo tail -f /var/log/upstart/inspeqtor.log  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;more-info&quot;&gt;More Info&lt;/h1&gt;

&lt;p&gt;More info on Inspeqtor can be found on the &lt;a href=&quot;https://github.com/mperham/inspeqtor/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/aws/2016/10/20/aws-tutorial-20-adding-machine-and-process-monitoring-to-your-aws-instance-with-inspeqtor.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/aws/2016/10/20/aws-tutorial-20-adding-machine-and-process-monitoring-to-your-aws-instance-with-inspeqtor.html</guid>
        
        <category>aws</category>
        
        <category>inspeqtor</category>
        
        <category>ubuntu</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Review - Indianpolis Ansible Meetup</title>
        <description>&lt;p&gt;I attended the Indianapolis Ansible meetup last night and it was a wonderful, albeit amusing, success.  The thrust of the meetup was watching an Ansible Fest video on TDD and Ansible.  And, well, it was a hoot!  I have rarely, if ever, watched a conference video that got something so damn wrong.  All the videos are &lt;a href=&quot;https://www.ansible.com/videos-ansiblefest-sf-2016&quot;&gt;here&lt;/a&gt; and most looked excellent.  The video we watched and that I mocked mercilessly is &lt;a href=&quot;https://www.ansible.com/beginners-guide-to-testing-infrastructure-as-code&quot;&gt;here&lt;/a&gt;.  The problems with it were many including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The date on the video was 2016 but it felt like we had time traveled back a decade or more “there’s this thing called extreme programming”&lt;/li&gt;
  &lt;li&gt;The guy who made it terms himself a “Agile Coach” which confirms everything I’ve ever thought about methodologies&lt;/li&gt;
  &lt;li&gt;He advocated that you test not your main ansible playbook but a playbook specifically designed for being tested.  Sheesh.  That’s ludicrous.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All problems aside, Jason and Nick did a great job hosting a meetup and I’ll definitely be back.  While the video was laughable, here’s some of the things I learned:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you’re going to test Ansible stuff then use &lt;a href=&quot;http://serverspec.org&quot;&gt;ServerSpec&lt;/a&gt; which is basically RSpec for machine configuration.&lt;/li&gt;
  &lt;li&gt;I’m not the only one who despises the RSpec expect syntax - ServerSpec is using .should also.  Yay!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cloudone.com&quot;&gt;CloudOne&lt;/a&gt; is doing really interesting things with IOT right here in Indianapolis about 10 minutes from my house.  Bizarre!&lt;/li&gt;
  &lt;li&gt;Brixx Pizza is not particularly good (the post meetup food).  Good flavor but horrible crust.&lt;/li&gt;
  &lt;li&gt;I’m not the only one who finds almost everything on Ansible Galaxy to be poorly done and barely usable.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Understanding the scope of your variables in Ansible is confusing to everyone not just me.  I recommended:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://coderwall.com/p/13lh6w/dump-all-variables&quot;&gt;https://coderwall.com/p/13lh6w/dump-all-variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/f500/ansible-dumpall&quot;&gt;https://github.com/f500/ansible-dumpall&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;They recommended &lt;a href=&quot;https://github.com/nickjj/ansigenome&quot;&gt;Ansible Genome&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also use the &lt;a href=&quot;http://stackoverflow.com/questions/18839509/where-can-i-get-a-list-of-ansible-pre-defined-variables&quot;&gt;setup&lt;/a&gt; command which has a tricky syntax.  I finally got it to work with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible -m setup ficrawlerbig -i inventories/production2 -u ubuntu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and it produced this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ficrawlerbig | SUCCESS =&amp;gt; {
    &quot;ansible_facts&quot;: {
        &quot;ansible_all_ipv4_addresses&quot;: [
            &quot;172.31.36.55&quot;,
            &quot;172.17.42.1&quot;
        ],
        &quot;ansible_all_ipv6_addresses&quot;: [
            &quot;fe80::42c:36ff:fe65:9b93&quot;
        ],
        &quot;ansible_architecture&quot;: &quot;x86_64&quot;,
        &quot;ansible_bios_date&quot;: &quot;05/11/2016&quot;,
        &quot;ansible_bios_version&quot;: &quot;4.2.amazon&quot;,
        &quot;ansible_cmdline&quot;: {
            &quot;BOOT_IMAGE&quot;: &quot;/boot/vmlinuz-3.13.0-92-generic&quot;,
            &quot;console&quot;: &quot;ttyS0&quot;,
            &quot;ro&quot;: true,
            &quot;root&quot;: &quot;UUID=87d0529b-216b-4930-9b54-45b0cdca9c06&quot;
        },
        &quot;ansible_date_time&quot;: {
            &quot;date&quot;: &quot;2016-10-19&quot;,
            &quot;day&quot;: &quot;19&quot;,
            &quot;epoch&quot;: &quot;1476872950&quot;,
            &quot;hour&quot;: &quot;10&quot;,
            &quot;iso8601&quot;: &quot;2016-10-19T10:29:10Z&quot;,
            &quot;iso8601_basic&quot;: &quot;20161019T102910892399&quot;,
            &quot;iso8601_basic_short&quot;: &quot;20161019T102910&quot;,
            &quot;iso8601_micro&quot;: &quot;2016-10-19T10:29:10.892455Z&quot;,
            &quot;minute&quot;: &quot;29&quot;,
            &quot;month&quot;: &quot;10&quot;,
            &quot;second&quot;: &quot;10&quot;,
            &quot;time&quot;: &quot;10:29:10&quot;,
            &quot;tz&quot;: &quot;UTC&quot;,
            &quot;tz_offset&quot;: &quot;+0000&quot;,
            &quot;weekday&quot;: &quot;Wednesday&quot;,
            &quot;weekday_number&quot;: &quot;3&quot;,
            &quot;weeknumber&quot;: &quot;42&quot;,
            &quot;year&quot;: &quot;2016&quot;
        },
        &quot;ansible_default_ipv4&quot;: {
            &quot;address&quot;: &quot;172.31.36.55&quot;,
            &quot;alias&quot;: &quot;eth0&quot;,
            &quot;broadcast&quot;: &quot;172.31.47.255&quot;,
            &quot;gateway&quot;: &quot;172.31.32.1&quot;,
            &quot;interface&quot;: &quot;eth0&quot;,
            &quot;macaddress&quot;: &quot;06:2c:36:65:9b:93&quot;,
            &quot;mtu&quot;: 9001,
            &quot;netmask&quot;: &quot;255.255.240.0&quot;,
            &quot;network&quot;: &quot;172.31.32.0&quot;,
            &quot;type&quot;: &quot;ether&quot;
        },
        &quot;ansible_default_ipv6&quot;: {},
        &quot;ansible_devices&quot;: {
            &quot;xvda&quot;: {
                &quot;holders&quot;: [],
                &quot;host&quot;: &quot;&quot;,
                &quot;model&quot;: null,
                &quot;partitions&quot;: {
                    &quot;xvda1&quot;: {
                        &quot;sectors&quot;: &quot;16755795&quot;,
                        &quot;sectorsize&quot;: 512,
                        &quot;size&quot;: &quot;7.99 GB&quot;,
                        &quot;start&quot;: &quot;16065&quot;
                    }
                },
                &quot;removable&quot;: &quot;0&quot;,
                &quot;rotational&quot;: &quot;0&quot;,
                &quot;sas_address&quot;: null,
                &quot;sas_device_handle&quot;: null,
                &quot;scheduler_mode&quot;: &quot;deadline&quot;,
                &quot;sectors&quot;: &quot;16777216&quot;,
                &quot;sectorsize&quot;: &quot;512&quot;,
                &quot;size&quot;: &quot;8.00 GB&quot;,
                &quot;support_discard&quot;: &quot;0&quot;,
                &quot;vendor&quot;: null
            }
        },
        &quot;ansible_distribution&quot;: &quot;Ubuntu&quot;,
        &quot;ansible_distribution_major_version&quot;: &quot;14&quot;,
        &quot;ansible_distribution_release&quot;: &quot;trusty&quot;,
        &quot;ansible_distribution_version&quot;: &quot;14.04&quot;,
        &quot;ansible_dns&quot;: {
            &quot;nameservers&quot;: [
                &quot;172.31.0.2&quot;
            ],
            &quot;search&quot;: [
                &quot;us-west-2.compute.internal&quot;
            ]
        },
        &quot;ansible_docker0&quot;: {
            &quot;active&quot;: false,
            &quot;device&quot;: &quot;docker0&quot;,
            &quot;id&quot;: &quot;8000.56847afe9799&quot;,
            &quot;interfaces&quot;: [],
            &quot;ipv4&quot;: {
                &quot;address&quot;: &quot;172.17.42.1&quot;,
                &quot;broadcast&quot;: &quot;global&quot;,
                &quot;netmask&quot;: &quot;255.255.0.0&quot;,
                &quot;network&quot;: &quot;172.17.0.0&quot;
            },
            &quot;macaddress&quot;: &quot;56:84:7a:fe:97:99&quot;,
            &quot;mtu&quot;: 1500,
            &quot;promisc&quot;: false,
            &quot;stp&quot;: false,
            &quot;type&quot;: &quot;bridge&quot;
        },
        &quot;ansible_domain&quot;: &quot;us-west-2.compute.internal&quot;,
        &quot;ansible_env&quot;: {
            &quot;HOME&quot;: &quot;/home/ubuntu&quot;,
            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;,
            &quot;LC_ALL&quot;: &quot;en_US.UTF-8&quot;,
            &quot;LC_MESSAGES&quot;: &quot;en_US.UTF-8&quot;,
            &quot;LOGNAME&quot;: &quot;ubuntu&quot;,
            &quot;MAIL&quot;: &quot;/var/mail/ubuntu&quot;,
            &quot;PATH&quot;: &quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&quot;,
            &quot;PWD&quot;: &quot;/home/ubuntu&quot;,
            &quot;RAILS_ENV&quot;: &quot;production&quot;,
            &quot;SHELL&quot;: &quot;/bin/bash&quot;,
            &quot;SHLVL&quot;: &quot;1&quot;,
            &quot;SSH_CLIENT&quot;: &quot;64.184.12.117 61220 22&quot;,
            &quot;SSH_CONNECTION&quot;: &quot;64.184.12.117 61220 172.31.36.55 22&quot;,
            &quot;SSH_TTY&quot;: &quot;/dev/pts/0&quot;,
            &quot;TERM&quot;: &quot;xterm-256color&quot;,
            &quot;USER&quot;: &quot;ubuntu&quot;,
            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;,
            &quot;XDG_SESSION_ID&quot;: &quot;93&quot;,
            &quot;_&quot;: &quot;/bin/sh&quot;
        },
        &quot;ansible_eth0&quot;: {
            &quot;active&quot;: true,
            &quot;device&quot;: &quot;eth0&quot;,
            &quot;ipv4&quot;: {
                &quot;address&quot;: &quot;172.31.36.55&quot;,
                &quot;broadcast&quot;: &quot;172.31.47.255&quot;,
                &quot;netmask&quot;: &quot;255.255.240.0&quot;,
                &quot;network&quot;: &quot;172.31.32.0&quot;
            },
            &quot;ipv6&quot;: [
                {
                    &quot;address&quot;: &quot;fe80::42c:36ff:fe65:9b93&quot;,
                    &quot;prefix&quot;: &quot;64&quot;,
                    &quot;scope&quot;: &quot;link&quot;
                }
            ],
            &quot;macaddress&quot;: &quot;06:2c:36:65:9b:93&quot;,
            &quot;module&quot;: &quot;ixgbevf&quot;,
            &quot;mtu&quot;: 9001,
            &quot;pciid&quot;: &quot;0000:00:03.0&quot;,
            &quot;promisc&quot;: false,
            &quot;type&quot;: &quot;ether&quot;
        },
        &quot;ansible_fips&quot;: false,
        &quot;ansible_form_factor&quot;: &quot;Other&quot;,
        &quot;ansible_fqdn&quot;: &quot;ip-172-31-36-55.us-west-2.compute.internal&quot;,
        &quot;ansible_gather_subset&quot;: [
            &quot;hardware&quot;,
            &quot;network&quot;,
            &quot;virtual&quot;
        ],
        &quot;ansible_hostname&quot;: &quot;ip-172-31-36-55&quot;,
        &quot;ansible_interfaces&quot;: [
            &quot;lo&quot;,
            &quot;docker0&quot;,
            &quot;eth0&quot;
        ],
        &quot;ansible_kernel&quot;: &quot;3.13.0-92-generic&quot;,
        &quot;ansible_lo&quot;: {
            &quot;active&quot;: true,
            &quot;device&quot;: &quot;lo&quot;,
            &quot;ipv4&quot;: {
                &quot;address&quot;: &quot;127.0.0.1&quot;,
                &quot;broadcast&quot;: &quot;host&quot;,
                &quot;netmask&quot;: &quot;255.0.0.0&quot;,
                &quot;network&quot;: &quot;127.0.0.0&quot;
            },
            &quot;ipv6&quot;: [
                {
                    &quot;address&quot;: &quot;::1&quot;,
                    &quot;prefix&quot;: &quot;128&quot;,
                    &quot;scope&quot;: &quot;host&quot;
                }
            ],
            &quot;mtu&quot;: 65536,
            &quot;promisc&quot;: false,
            &quot;type&quot;: &quot;loopback&quot;
        },
        &quot;ansible_lsb&quot;: {
            &quot;codename&quot;: &quot;trusty&quot;,
            &quot;description&quot;: &quot;Ubuntu 14.04.4 LTS&quot;,
            &quot;id&quot;: &quot;Ubuntu&quot;,
            &quot;major_release&quot;: &quot;14&quot;,
            &quot;release&quot;: &quot;14.04&quot;
        },
        &quot;ansible_machine&quot;: &quot;x86_64&quot;,
        &quot;ansible_machine_id&quot;: &quot;3b8fd0372b0e32185bef793d5787f9de&quot;,
        &quot;ansible_memfree_mb&quot;: 60182,
        &quot;ansible_memory_mb&quot;: {
            &quot;nocache&quot;: {
                &quot;free&quot;: 62374,
                &quot;used&quot;: 2046
            },
            &quot;real&quot;: {
                &quot;free&quot;: 60182,
                &quot;total&quot;: 64420,
                &quot;used&quot;: 4238
            },
            &quot;swap&quot;: {
                &quot;cached&quot;: 0,
                &quot;free&quot;: 0,
                &quot;total&quot;: 0,
                &quot;used&quot;: 0
            }
        },
        &quot;ansible_memtotal_mb&quot;: 64420,
        &quot;ansible_mounts&quot;: [
            {
                &quot;device&quot;: &quot;/dev/xvda1&quot;,
                &quot;fstype&quot;: &quot;ext4&quot;,
                &quot;mount&quot;: &quot;/&quot;,
                &quot;options&quot;: &quot;rw,discard&quot;,
                &quot;size_available&quot;: 748208128,
                &quot;size_total&quot;: 8309932032,
                &quot;uuid&quot;: &quot;&quot;
            }
        ],
        &quot;ansible_nodename&quot;: &quot;ip-172-31-36-55&quot;,
        &quot;ansible_os_family&quot;: &quot;Debian&quot;,
        &quot;ansible_pkg_mgr&quot;: &quot;apt&quot;,
        &quot;ansible_processor&quot;: [
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;,
            &quot;GenuineIntel&quot;,
            &quot;Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz&quot;
        ],
        &quot;ansible_processor_cores&quot;: 16,
        &quot;ansible_processor_count&quot;: 16,
        &quot;ansible_processor_threads_per_core&quot;: 1,
        &quot;ansible_processor_vcpus&quot;: 16,
        &quot;ansible_product_name&quot;: &quot;HVM domU&quot;,
        &quot;ansible_product_serial&quot;: &quot;NA&quot;,
        &quot;ansible_product_uuid&quot;: &quot;NA&quot;,
        &quot;ansible_product_version&quot;: &quot;4.2.amazon&quot;,
        &quot;ansible_python&quot;: {
            &quot;executable&quot;: &quot;/usr/bin/python&quot;,
            &quot;has_sslcontext&quot;: false,
            &quot;type&quot;: &quot;CPython&quot;,
            &quot;version&quot;: {
                &quot;major&quot;: 2,
                &quot;micro&quot;: 6,
                &quot;minor&quot;: 7,
                &quot;releaselevel&quot;: &quot;final&quot;,
                &quot;serial&quot;: 0
            },
            &quot;version_info&quot;: [
                2,
                7,
                6,
                &quot;final&quot;,
                0
            ]
        },
        &quot;ansible_python_version&quot;: &quot;2.7.6&quot;,
        &quot;ansible_selinux&quot;: false,
        &quot;ansible_service_mgr&quot;: &quot;upstart&quot;,
        &quot;ansible_ssh_host_key_dsa_public&quot;: &quot;AAAAB3NzaC1kc3MAAACBAPWIrEktKYrh0VIi4NX/RsuaR4nCi4+MiHz4JOI0jUu1b5EtL8QNE2wXWFOi9NqYDWe35E3Gfep8xUKHsFlVtnEXqnIebPYXwtB39eIolnJP7zuVLDGLB2Ny5/+apN0Md6Kr6ewX75MsvLqb8QlTF8xcp2gzLJycAr4lW5uI+sI3AAAAFQDtkRxdu5rw6iIhDnHNAIO/G0NiewAAAIALCsKgsr9wB1273VND4VLHf9/TjSWBQkNX8BBE+oMlAbmLIPHpNnl7aHmdyyJ6EPXGztqYtF2uacMhSxj5T05I8pqQgjPRDzoJuk1DSS/Q0JmLBkmMHDZxEzsOBcMLzlwSxNaBRhXfMJhCAcv1/rVQeioMIzK0H7RinmO1ypmUmwAAAIBD+Mpmrt9fdTs+442QOOgmAtNI/BsdFBncVPkVHroRH5gyAgmkt/a0D1MFNmv+FF63NXrcmpsuAAwiYsn6vF0ijwEre59vsT7IB4xmsY+2Sv1t11lUUWgPI1RgHCUZnbuAbRhceran34eiIC8gGQO94RkTpuR4+mJeVE8p/kO96w==&quot;,
        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMjrf03fvK2638wDbB+gsL6z5AQtXHFB37O6H8sJV0fJI++Jl1bOE5vEUQIJgm7KAjY5E78gBMbl93yY9uMJHdc=&quot;,
        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIP/0jQTWuLTf5s0puYbxJABXIs6vSv8DvLWWdRPr7Fb8&quot;,
        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDqBYCkVLZtWSjaN4bb5wJAKuxqWlWGoorvmRFsFkdNjUVP8HAV/ImcdJ/ifkPn0Vfoa0ioNHB0AJuyawUDKq6bS/8/rm4rcL2fuFSCfRXTUde+KWuMUOFyMGKRTuqJZxei3BLlbJCdsJRJGC5DDgQf9vlWhTYMlRMDgZKEai2Dii/2mHGN0gZRF/9OXkwRJvj3hASj43B4DnIJ5MKdfmjRDOA9NuGaL45KoA1j4Vjds96QZ4g8Wo1HBI/6iZZRohq58RvRvP/uIJrrQjcANXTYa4tIEgqHyIpuylLDWAtuDrj6/XninBs4oZu3++p8PE7eu++O0iq8IXk9B72VSKuF&quot;,
        &quot;ansible_swapfree_mb&quot;: 0,
        &quot;ansible_swaptotal_mb&quot;: 0,
        &quot;ansible_system&quot;: &quot;Linux&quot;,
        &quot;ansible_system_capabilities&quot;: [
            &quot;&quot;
        ],
        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;,
        &quot;ansible_system_vendor&quot;: &quot;Xen&quot;,
        &quot;ansible_uptime_seconds&quot;: 617356,
        &quot;ansible_user_dir&quot;: &quot;/home/ubuntu&quot;,
        &quot;ansible_user_gecos&quot;: &quot;Ubuntu&quot;,
        &quot;ansible_user_gid&quot;: 1000,
        &quot;ansible_user_id&quot;: &quot;ubuntu&quot;,
        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;,
        &quot;ansible_user_uid&quot;: 1000,
        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;,
        &quot;ansible_userspace_bits&quot;: &quot;64&quot;,
        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;,
        &quot;ansible_virtualization_type&quot;: &quot;xen&quot;,
        &quot;module_setup&quot;: true
    },
    &quot;changed&quot;: false
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Which isn’t anything about the variables in my playbook but I think I have a much better handle on how to use ansible system level variables like the machine’s memory size which would let me dynamically adjust my sidekiq thread count for example.&lt;/p&gt;

&lt;p&gt;Here’s an example of the dumpall approach:&lt;/p&gt;

&lt;p&gt;create a playbook called playbook_dump_variables.yml and put this in it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- hosts: all
  tasks:
  - template:
      src: templates/dump_variables
      dest: /tmp/ansible_variables
  - fetch:
      src: /tmp/ansible_variables
      dest: &quot;_ansible_variables&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;create a template called templates/dump_variables and put this in it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HOSTVARS (ANSIBLE GATHERED, group_vars, host_vars) :



PLAYBOOK VARS:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run it with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ansible-playbook -i inventories/production2 playbook_dump_variables.yml -u ubuntu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Unfortunately this results in a low level python error (“RepresenterError: cannot represent an object: 172.31.36.55”) at the Yaml class level as described &lt;a href=&quot;https://github.com/openshift/openshift-ansible/issues/2401&quot;&gt;here&lt;/a&gt; which seems to be tied to Ansible’s Unicode implementation.&lt;/p&gt;

&lt;p&gt;This is really a pity since I think it is exactly what is needed but people seem to be actively working on the bug which is at least good.&lt;/p&gt;

&lt;p&gt;After this failed, I tried the coderwall trick above and that failed with different errors:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fatal: [ficrawler3]: FAILED! =&amp;gt; {&quot;changed&quot;: false, &quot;failed&quot;: true, &quot;msg&quot;: &quot;AnsibleUndefinedVariable: Unable to look up a name or access an attribute in template string (Module Variables (\&quot;group_vars\&quot;):\n--------------------------------\n \n\n).\nMake sure your variable name does not contain invalid characters like '-': unbound method default() must be called with JSONEncoder instance as first argument (got StrictUndefined instance instead)&quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sheesh!  This shouldn’t be all that hard.  Sigh.&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Oct 2016 00:00:00 -0400</pubDate>
        <link>https://fuzzygroup.github.io/blog/ansible/2016/10/19/review-indianpolis-ansible-meetup.html</link>
        <guid isPermaLink="true">https://fuzzygroup.github.io/blog/ansible/2016/10/19/review-indianpolis-ansible-meetup.html</guid>
        
        <category>ansible</category>
        
        <category>tdd</category>
        
        <category>humor</category>
        
        <category>serverspec</category>
        
        
        <category>ansible</category>
        
      </item>
    
  </channel>
</rss>
